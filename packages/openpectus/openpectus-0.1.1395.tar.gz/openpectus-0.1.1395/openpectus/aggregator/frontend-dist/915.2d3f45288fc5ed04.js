"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[915],{78017:(N,_,d)=>{d.d(_,{t:()=>b});var k=d(98039),h=d(87089);const b=(0,k.GU)(h.G)},85195:(N,_,d)=>{d.d(_,{FZ:()=>W,GE:()=>p,MY:()=>O,N9:()=>y,kt:()=>R,yS:()=>S});var k=d(23838),h=d(67197),b=d(48738),j=d(52814),n=d(25501),w=d(50110),M=d(88039);const g="\\w+[-_\\w+]*",p=`^${g}$`,x=`^(${g}|\\*)(\\.${g})*(:${g})?$`;class y{constructor(e,r,o,c,s){this.foreground=e,this.bold=r,this.underline=o,this.strikethrough=c,this.italic=s}}var i,S;(i=y||(y={})).toJSONObject=function e(t){return{_foreground:void 0===t.foreground?null:h.Q1.Format.CSS.formatHexA(t.foreground,!0),_bold:void 0===t.bold?null:t.bold,_underline:void 0===t.underline?null:t.underline,_italic:void 0===t.italic?null:t.italic,_strikethrough:void 0===t.strikethrough?null:t.strikethrough}},i.fromJSONObject=function r(t){if(t){const l=u=>"boolean"==typeof u?u:void 0;return new i("string"==typeof(u=t._foreground)?h.Q1.fromHex(u):void 0,l(t._bold),l(t._underline),l(t._strikethrough),l(t._italic))}var u},i.equals=function o(t,l){return t===l||void 0!==t&&void 0!==l&&(t.foreground instanceof h.Q1?t.foreground.equals(l.foreground):void 0===l.foreground)&&t.bold===l.bold&&t.underline===l.underline&&t.strikethrough===l.strikethrough&&t.italic===l.italic},i.is=function c(t){return t instanceof i},i.fromData=function s(t){return new i(t.foreground,t.bold,t.underline,t.strikethrough,t.italic)},i.fromSettings=function a(t,l,f,u,T,E){let P;if(void 0!==t&&(P=h.Q1.fromHex(t)),void 0!==l){f=E=u=T=!1;const G=/italic|bold|underline|strikethrough/g;let L;for(;L=G.exec(l);)switch(L[0]){case"bold":f=!0;break;case"italic":E=!0;break;case"underline":u=!0;break;case"strikethrough":T=!0}}return new i(P,f,u,T,E)},function(i){i.fromJSONObject=function e(s,a){if(a&&"string"==typeof a._selector&&a._style){const t=y.fromJSONObject(a._style);if(t)try{return{selector:s.parseTokenSelector(a._selector),style:t}}catch{}}},i.toJSONObject=function r(s){return{_selector:s.selector.id,_style:y.toJSONObject(s.style)}},i.equals=function o(s,a){return s===a||void 0!==s&&void 0!==a&&s.selector&&a.selector&&s.selector.id===a.selector.id&&y.equals(s.style,a.style)},i.is=function c(s){return s&&s.selector&&"string"==typeof s.selector.id&&y.is(s.style)}}(S||(S={}));class F extends j.jG{constructor(){super(),this._onDidChangeSchema=this._register(new b.vl),this.onDidChangeSchema=this._onDidChangeSchema.event,this.currentTypeNumber=0,this.currentModifierBit=1,this.tokenStylingDefaultRules=[],this.tokenStylingSchema={type:"object",properties:{},patternProperties:{[x]:v()},additionalProperties:!1,definitions:{style:{type:"object",description:(0,n.kg)(2292,"Colors and styles for the token."),properties:{foreground:{type:"string",description:(0,n.kg)(2293,"Foreground color for the token."),format:"color-hex",default:"#ff0000"},background:{type:"string",deprecationMessage:(0,n.kg)(2294,"Token background colors are currently not supported.")},fontStyle:{type:"string",description:(0,n.kg)(2295,"Sets the all font styles of the rule: 'italic', 'bold', 'underline' or 'strikethrough' or a combination. All styles that are not listed are unset. The empty string unsets all styles."),pattern:"^(\\s*(italic|bold|underline|strikethrough))*\\s*$",patternErrorMessage:(0,n.kg)(2296,"Font style must be 'italic', 'bold', 'underline' or 'strikethrough' or a combination. The empty string unsets all styles."),defaultSnippets:[{label:(0,n.kg)(2297,"None (clear inherited style)"),bodyText:'""'},{body:"italic"},{body:"bold"},{body:"underline"},{body:"strikethrough"},{body:"italic bold"},{body:"italic underline"},{body:"italic strikethrough"},{body:"bold underline"},{body:"bold strikethrough"},{body:"underline strikethrough"},{body:"italic bold underline"},{body:"italic bold strikethrough"},{body:"italic underline strikethrough"},{body:"bold underline strikethrough"},{body:"italic bold underline strikethrough"}]},bold:{type:"boolean",description:(0,n.kg)(2298,"Sets or unsets the font style to bold. Note, the presence of 'fontStyle' overrides this setting.")},italic:{type:"boolean",description:(0,n.kg)(2299,"Sets or unsets the font style to italic. Note, the presence of 'fontStyle' overrides this setting.")},underline:{type:"boolean",description:(0,n.kg)(2300,"Sets or unsets the font style to underline. Note, the presence of 'fontStyle' overrides this setting.")},strikethrough:{type:"boolean",description:(0,n.kg)(2301,"Sets or unsets the font style to strikethrough. Note, the presence of 'fontStyle' overrides this setting.")}},defaultSnippets:[{body:{foreground:"${1:#FF0000}",fontStyle:"${2:bold}"}}]}}},this.tokenTypeById=Object.create(null),this.tokenModifierById=Object.create(null),this.typeHierarchy=Object.create(null)}registerTokenType(e,r,o,c){if(!e.match(p))throw new Error("Invalid token type id.");if(o&&!o.match(p))throw new Error("Invalid token super type id.");const a={num:this.currentTypeNumber++,id:e,superType:o,description:r,deprecationMessage:c};this.tokenTypeById[e]=a;const t=v(r,c);this.tokenStylingSchema.properties[e]=t,this.typeHierarchy=Object.create(null)}registerTokenModifier(e,r,o){if(!e.match(p))throw new Error("Invalid token modifier id.");const c=this.currentModifierBit;this.currentModifierBit=2*this.currentModifierBit,this.tokenModifierById[e]={num:c,id:e,description:r,deprecationMessage:o},this.tokenStylingSchema.properties[`*.${e}`]=v(r,o)}parseTokenSelector(e,r){const o=R(e,r);return o.type?{match:(c,s,a)=>{let t=0;if(void 0!==o.language){if(o.language!==a)return-1;t+=10}if("*"!==o.type){const f=this.getTypeHierarchy(c).indexOf(o.type);if(-1===f)return-1;t+=100-f}for(const l of o.modifiers)if(-1===s.indexOf(l))return-1;return t+100*o.modifiers.length},id:`${[o.type,...o.modifiers.sort()].join(".")}${void 0!==o.language?":"+o.language:""}`}:{match:()=>-1,id:"$invalid"}}registerTokenStyleDefault(e,r){this.tokenStylingDefaultRules.push({selector:e,defaults:r})}deregisterTokenStyleDefault(e){const r=e.id;this.tokenStylingDefaultRules=this.tokenStylingDefaultRules.filter(o=>o.selector.id!==r)}deregisterTokenType(e){delete this.tokenTypeById[e],delete this.tokenStylingSchema.properties[e],this.typeHierarchy=Object.create(null)}deregisterTokenModifier(e){delete this.tokenModifierById[e],delete this.tokenStylingSchema.properties[`*.${e}`]}getTokenTypes(){return Object.keys(this.tokenTypeById).map(e=>this.tokenTypeById[e])}getTokenModifiers(){return Object.keys(this.tokenModifierById).map(e=>this.tokenModifierById[e])}getTokenStylingSchema(){return this.tokenStylingSchema}getTokenStylingDefaultRules(){return this.tokenStylingDefaultRules}getTypeHierarchy(e){let r=this.typeHierarchy[e];if(!r){this.typeHierarchy[e]=r=[e];let o=this.tokenTypeById[e];for(;o&&o.superType;)r.push(o.superType),o=this.tokenTypeById[o.superType]}return r}toString(){return Object.keys(this.tokenTypeById).sort((r,o)=>{const c=-1===r.indexOf(".")?0:1,s=-1===o.indexOf(".")?0:1;return c!==s?c-s:r.localeCompare(o)}).map(r=>`- \`${r}\`: ${this.tokenTypeById[r].description}`).join("\n")}}const I=":".charCodeAt(0),J=".".charCodeAt(0);function R(i,e){let r=i.length,o=e;const c=[];for(let a=r-1;a>=0;a--){const t=i.charCodeAt(a);if(t===I||t===J){const l=i.substring(a+1,r);r=a,t===I?o=l:c.push(l)}}return{type:i.substring(0,r),modifiers:c,language:o}}const m=function K(){const i=new F;function e(o,c,s=[],a,t){return i.registerTokenType(o,c,a,t),s&&r(o,s),o}function r(o,c){try{const s=i.parseTokenSelector(o);i.registerTokenStyleDefault(s,{scopesToProbe:c})}catch(s){console.log(s)}}return e("comment",(0,n.kg)(2302,"Style for comments."),[["comment"]]),e("string",(0,n.kg)(2303,"Style for strings."),[["string"]]),e("keyword",(0,n.kg)(2304,"Style for keywords."),[["keyword.control"]]),e("number",(0,n.kg)(2305,"Style for numbers."),[["constant.numeric"]]),e("regexp",(0,n.kg)(2306,"Style for expressions."),[["constant.regexp"]]),e("operator",(0,n.kg)(2307,"Style for operators."),[["keyword.operator"]]),e("namespace",(0,n.kg)(2308,"Style for namespaces."),[["entity.name.namespace"]]),e("type",(0,n.kg)(2309,"Style for types."),[["entity.name.type"],["support.type"]]),e("struct",(0,n.kg)(2310,"Style for structs."),[["entity.name.type.struct"]]),e("class",(0,n.kg)(2311,"Style for classes."),[["entity.name.type.class"],["support.class"]]),e("interface",(0,n.kg)(2312,"Style for interfaces."),[["entity.name.type.interface"]]),e("enum",(0,n.kg)(2313,"Style for enums."),[["entity.name.type.enum"]]),e("typeParameter",(0,n.kg)(2314,"Style for type parameters."),[["entity.name.type.parameter"]]),e("function",(0,n.kg)(2315,"Style for functions"),[["entity.name.function"],["support.function"]]),e("member",(0,n.kg)(2316,"Style for member functions"),[],"method","Deprecated use `method` instead"),e("method",(0,n.kg)(2317,"Style for method (member functions)"),[["entity.name.function.member"],["support.function"]]),e("macro",(0,n.kg)(2318,"Style for macros."),[["entity.name.function.preprocessor"]]),e("variable",(0,n.kg)(2319,"Style for variables."),[["variable.other.readwrite"],["entity.name.variable"]]),e("parameter",(0,n.kg)(2320,"Style for parameters."),[["variable.parameter"]]),e("property",(0,n.kg)(2321,"Style for properties."),[["variable.other.property"]]),e("enumMember",(0,n.kg)(2322,"Style for enum members."),[["variable.other.enummember"]]),e("event",(0,n.kg)(2323,"Style for events."),[["variable.other.event"]]),e("decorator",(0,n.kg)(2324,"Style for decorators & annotations."),[["entity.name.decorator"],["entity.name.function"]]),e("label",(0,n.kg)(2325,"Style for labels. "),void 0),i.registerTokenModifier("declaration",(0,n.kg)(2326,"Style for all symbol declarations."),void 0),i.registerTokenModifier("documentation",(0,n.kg)(2327,"Style to use for references in documentation."),void 0),i.registerTokenModifier("static",(0,n.kg)(2328,"Style to use for symbols that are static."),void 0),i.registerTokenModifier("abstract",(0,n.kg)(2329,"Style to use for symbols that are abstract."),void 0),i.registerTokenModifier("deprecated",(0,n.kg)(2330,"Style to use for symbols that are deprecated."),void 0),i.registerTokenModifier("modification",(0,n.kg)(2331,"Style to use for write accesses."),void 0),i.registerTokenModifier("async",(0,n.kg)(2332,"Style to use for symbols that are async."),void 0),i.registerTokenModifier("readonly",(0,n.kg)(2333,"Style to use for symbols that are read-only."),void 0),r("variable.readonly",[["variable.other.constant"]]),r("property.readonly",[["variable.other.constant.property"]]),r("type.defaultLibrary",[["support.type"]]),r("class.defaultLibrary",[["support.class"]]),r("interface.defaultLibrary",[["support.class"]]),r("variable.defaultLibrary",[["support.variable"],["support.other.variable"]]),r("variable.defaultLibrary.readonly",[["support.constant"]]),r("property.defaultLibrary",[["support.variable.property"]]),r("property.defaultLibrary.readonly",[["support.constant.property"]]),r("function.defaultLibrary",[["support.function"]]),r("member.defaultLibrary",[["support.function"]]),i}();function W(){return m}function v(i,e){return{description:i,deprecationMessage:e,defaultSnippets:[{body:"${1:#ff0000}"}],anyOf:[{type:"string",format:"color-hex"},{$ref:"#/definitions/style"}]}}M.O.add("base.contributions.tokenClassification",m);const O="vscode://schemas/token-styling",A=M.O.as(w.F.JSONContribution);A.registerSchema(O,m.getTokenStylingSchema());const B=new k.uC(()=>A.notifySchemaChanged(O),200);m.onDidChangeSchema(()=>{B.isScheduled()||B.schedule()})}}]);