name: build

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:  # Enable manual triggering

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      FINLAB_TOKEN: ${{ secrets.FINLAB_TOKEN }}
    strategy:
      fail-fast: false  # Don't cancel other jobs if one fails
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --dev

    - name: Run unit tests
      run: |
        uv run pytest tests/unit/ -v --tb=short -n auto

    - name: Run mock integration tests
      run: |
        uv run pytest tests/integration/mock/ -v --tb=short -n auto
      env:
        FINLAB_TOKEN: ""  # Ensure no token is set for mock tests

    - name: Run random mutation tests
      run: |
        uv run pytest tests/integration/random_mutations/ -v --tb=short -n auto
      env:
        FINLAB_TOKEN: ""  # Ensure no token is set for mock tests

    - name: Run edge case tests
      run: |
        uv run pytest tests/unit/test_boundary_conditions.py tests/unit/test_error_scenarios.py -v --tb=short -n auto

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: uv sync --dev

    - name: Run tests with coverage
      run: |
        uv run pytest tests/unit/ tests/integration/mock/ tests/integration/random_mutations/ --cov=src/finlab_guard --cov-report=xml --cov-report=term
      env:
        FINLAB_TOKEN: ""

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false