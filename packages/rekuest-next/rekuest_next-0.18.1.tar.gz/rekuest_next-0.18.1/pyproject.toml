[project]
name = "rekuest-next"
version = "0.18.1" 
readme = "README.md"
readme-content-type = "text/markdown"
homepage = "https://arkitekt.live"
description = "rpc and node backbone"
authors = [{ name = "jhnnsrs", email = "jhnnsrs@gmail.com" }]
requires-python = ">=3.11, <4.0"
license = "GPL-3.0-or-later"
dependencies = [
    "docstring-parser>=0.11",
    "inflection>=0.5.1",
    "websockets>=12.0",
    "pydantic>=2",
    "rath>=3.5.1",
    "fieldz>=0.0.2",
    "jsonpatch>=1.33",
    "koil>=2.0.4",
    "dokker>=2.2",
]

[project.optional-dependencies]
types = [
    "annotated-types>=0.5.0",
]

[tool.uv]
dev-dependencies =  [
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "pytest>=8.3.5",
    "python-semantic-release>=9.21.0",
    "testcontainers==3.7.0",
    "autoflake>=1.7.7,<2",
    "aiohttp>=3.8.3,<4",
    "black>=23.1.0,<24",
    "pytest-aiohttp>=1.0.4,<2",
    "ruff>0.11",
    "qtpy>=2.4.3",
    "fakts-next>=2.0.0",
    "arkitekt-next>=0.17",
]


[tool.ruff]
extend-select = ["ANN", "D1"]


# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 100

[tool.hatch.build.targets.sdist]
include = ["rekuest_next"]

[tool.hatch.build.targets.wheel]
include = ["rekuest_next"]

[tool.hatch.version]
path = "rekuest_next/__init__.py"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
markers = [
    "integration: marks tests that require a running server",
    "define: marks tests that concern to definining a funcionality",
    "shrink: marks tests that concern to serializing inputs to requests to an actor",
    "expand: marks tests that concern to serializing outputs from answers of an actor",
    "actor: marks tests that concern actors",
]

testpaths = ["tests"]

[[tool.pydoc-markdown.loaders]]
type = "python"
search_path = ["arkitekt"]

[tool.pydoc-markdown.renderer]
type = "docusaurus"
docs_base_path = "website/docs"


[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
upload_to_pypi = true
branch = "main"
build_command = "uv build"

