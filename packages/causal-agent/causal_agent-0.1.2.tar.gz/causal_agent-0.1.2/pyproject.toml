[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "causal-agent"
version = "0.1.2"
description = "A library for automated causal inference"
readme = "README_PYPI.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
  { name = "Vishal Verma", email = "vishal.verma@andrew.cmu.edu" }
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
  "pandas>=2.1,<3",
  "numpy>=1.26,<3",
  "scipy>=1.10,<1.15",
  "statsmodels>=0.14,<1",
  "tqdm>=4.66,<5",
  "pydantic>=2.6,<3",
  "requests>=2.31,<3",
  "python-dotenv>=1,<2",
  "langchain-core>=0.3,<0.4",
  "langchain-openai>=0.3,<0.4",
  "langchain-anthropic>=0.3,<0.4",
  "langchain-google-genai>=2,<3",
  "langchain-deepseek>=0.1,<0.2",
  "langchain-together>=0.3,<0.4",
  "langchain>=0.3.26,<0.4",
  "seaborn>=0.13,<0.14",
  "dowhy>=0.12,<0.13"
]

[project.optional-dependencies]
dev = [
  "pytest>=8,<9",
  "pytest-cov>=4,<5",
  "pytest-xdist>=3,<4",
  "pytest-mock>=3,<4",
  "pytest-html>=4,<5",
  "coverage[toml]>=7,<8",
  "black>=23,<25",
  "isort>=5,<6",
  "flake8>=6,<8",
  "mypy>=1,<2",
  "pylint>=3,<4",
  "bandit>=1.7,<2",
  "safety>=3,<4",
  "pre-commit>=3,<4",
  "coverage-badge>=1,<2",
]
docs = [
  "sphinx>=7",
  "myst-parser>=3",
  "sphinx-rtd-theme>=2",
]

[project.urls]
Homepage = "https://github.com/causalNLP/causal-agent"
Issues = "https://github.com/causalNLP/causal-agent/issues"

[project.scripts]
causal-agent = "causal_agent.cli:main"

[tool.setuptools.packages.find]
exclude = ["tests*", "reproduce_results*", "replication_codes*"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=causal_agent",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "performance: Performance tests",
    "scalability: Scalability tests",
    "slow: Slow running tests",
    "requires_llm: Tests requiring LLM API access",
    "memory: Memory usage tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["causal_agent"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
fail_under = 80
show_missing = true
skip_covered = false
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "pass",
    "\\.\\.\\.",
]

[tool.coverage.paths]
source = [
    "causal_agent/",
    "*/site-packages/causal_agent/",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["causal_agent"]
known_third_party = ["pytest", "numpy", "pandas", "scipy", "statsmodels"]