"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _RequestErrorType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _RequestErrorTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RequestErrorType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    Unspecified: _RequestErrorType.ValueType  # 0
    ExecAbort: _RequestErrorType.ValueType  # 1
    Timeout: _RequestErrorType.ValueType  # 2
    Disconnect: _RequestErrorType.ValueType  # 3

class RequestErrorType(_RequestErrorType, metaclass=_RequestErrorTypeEnumTypeWrapper): ...

Unspecified: RequestErrorType.ValueType  # 0
ExecAbort: RequestErrorType.ValueType  # 1
Timeout: RequestErrorType.ValueType  # 2
Disconnect: RequestErrorType.ValueType  # 3
global___RequestErrorType = RequestErrorType

class _ConstantResponse:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ConstantResponseEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ConstantResponse.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    OK: _ConstantResponse.ValueType  # 0

class ConstantResponse(_ConstantResponse, metaclass=_ConstantResponseEnumTypeWrapper): ...

OK: ConstantResponse.ValueType  # 0
global___ConstantResponse = ConstantResponse

@typing.final
class RequestError(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    type: global___RequestErrorType.ValueType
    message: builtins.str
    def __init__(
        self,
        *,
        type: global___RequestErrorType.ValueType = ...,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["message", b"message", "type", b"type"]) -> None: ...

global___RequestError = RequestError

@typing.final
class Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CALLBACK_IDX_FIELD_NUMBER: builtins.int
    RESP_POINTER_FIELD_NUMBER: builtins.int
    CONSTANT_RESPONSE_FIELD_NUMBER: builtins.int
    REQUEST_ERROR_FIELD_NUMBER: builtins.int
    CLOSING_ERROR_FIELD_NUMBER: builtins.int
    IS_PUSH_FIELD_NUMBER: builtins.int
    ROOT_SPAN_PTR_FIELD_NUMBER: builtins.int
    callback_idx: builtins.int
    resp_pointer: builtins.int
    constant_response: global___ConstantResponse.ValueType
    closing_error: builtins.str
    is_push: builtins.bool
    root_span_ptr: builtins.int
    @property
    def request_error(self) -> global___RequestError: ...
    def __init__(
        self,
        *,
        callback_idx: builtins.int = ...,
        resp_pointer: builtins.int = ...,
        constant_response: global___ConstantResponse.ValueType = ...,
        request_error: global___RequestError | None = ...,
        closing_error: builtins.str = ...,
        is_push: builtins.bool = ...,
        root_span_ptr: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_root_span_ptr", b"_root_span_ptr", "closing_error", b"closing_error", "constant_response", b"constant_response", "request_error", b"request_error", "resp_pointer", b"resp_pointer", "root_span_ptr", b"root_span_ptr", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_root_span_ptr", b"_root_span_ptr", "callback_idx", b"callback_idx", "closing_error", b"closing_error", "constant_response", b"constant_response", "is_push", b"is_push", "request_error", b"request_error", "resp_pointer", b"resp_pointer", "root_span_ptr", b"root_span_ptr", "value", b"value"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_root_span_ptr", b"_root_span_ptr"]) -> typing.Literal["root_span_ptr"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["value", b"value"]) -> typing.Literal["resp_pointer", "constant_response", "request_error", "closing_error"] | None: ...

global___Response = Response
