name: CI

on:
  push:
    branches: [ main, develop, master ]
  pull_request:
    branches: [ main, develop, master ]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Lint with flake8
      run: |
        # Stop build if there are Python syntax errors or undefined names
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test server import
      run: |
        cd src
        python -c "import mcp_server_sqlite; print('✅ Server imports successfully')"
    
    - name: Run basic tests
      run: |
        python -m pytest tests/ -v
    
    - name: Test SQLite version compatibility
      run: |
        python -c "
        import sqlite3
        version = sqlite3.sqlite_version_info
        print(f'SQLite version: {sqlite3.sqlite_version}')
        assert version >= (3, 45, 0), f'SQLite {sqlite3.sqlite_version} is too old, need 3.45.0+'
        print('✅ SQLite version is compatible with JSONB')
        "

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker Image
      run: |
        docker build -f Dockerfile -t sqlite-mcp-server:test .
        
    - name: Test Docker Image
      run: |
        docker run --rm --entrypoint python sqlite-mcp-server:test -c "print('✅ Docker image works!')"