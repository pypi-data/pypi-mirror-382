
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_basic_visualization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_basic_visualization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_basic_visualization.py:


Basic Data Visualization
========================

This example demonstrates creating basic plots with interactive elements that will
work both in the static Gallery view and when launched in Marimo.

.. GENERATED FROM PYTHON SOURCE LINES 8-43



.. image-sg:: /auto_examples/images/sphx_glr_plot_basic_visualization_001.png
   :alt: Trigonometric Functions, Product of Sine and Cosine
   :srcset: /auto_examples/images/sphx_glr_plot_basic_visualization_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Interactive version available via 'launch marimo' button!






|

.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    # Create data
    x = np.linspace(0, 4 * np.pi, 100)
    y1 = np.sin(x)
    y2 = np.cos(x)
    y3 = np.sin(x) * np.cos(x)

    # Create the plot
    fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(10, 8))

    # First subplot - sine and cosine
    ax1.plot(x, y1, 'b-', linewidth=2, label='sin(x)')
    ax1.plot(x, y2, 'r-', linewidth=2, label='cos(x)')
    ax1.set_title('Trigonometric Functions')
    ax1.set_xlabel('x')
    ax1.set_ylabel('y')
    ax1.legend()
    ax1.grid(True, alpha=0.3)

    # Second subplot - product
    ax2.plot(x, y3, 'g-', linewidth=2, label='sin(x) Ã— cos(x)')
    ax2.set_title('Product of Sine and Cosine')
    ax2.set_xlabel('x')
    ax2.set_ylabel('y')
    ax2.legend()
    ax2.grid(True, alpha=0.3)

    plt.tight_layout()
    plt.show()

    # When this runs in Marimo, users could add interactive sliders to control
    # frequency, amplitude, or phase of the waves
    print("Interactive version available via 'launch marimo' button!")

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.196 seconds)


.. _sphx_glr_download_auto_examples_plot_basic_visualization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_basic_visualization.ipynb <plot_basic_visualization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_basic_visualization.py <plot_basic_visualization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_basic_visualization.zip <plot_basic_visualization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
