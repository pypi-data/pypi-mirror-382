from sapiopylib.rest.pojo.datatype.FieldDefinition import FieldType
from sapiopylib.rest.utils.recordmodel.RecordModelWrapper import WrappedRecordModel, WrapperField
from sapiopylib.rest.pojo.DateRange import DateRange
from typing import Optional, Final


class ABI2700ResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ABI2700Result
    Data Type Display Name: ABI2700 Result (ABI2700 Results)
    Fields: CtSD, CreatedBy, Well, DateCreated, Ct, OtherSampleId, Detector, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, SampleId
    """
    DATA_TYPE_NAME: Final[str] = 'ABI2700Result'
    DISPLAY_NAME: Final[str] = "ABI2700 Result"
    PLURAL_DISPLAY_NAME: Final[str] = "ABI2700 Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CT__FIELD_NAME: Final[WrapperField] = WrapperField("Ct", FieldType.DOUBLE, display_name="Ct")
    CTSD__FIELD_NAME: Final[WrapperField] = WrapperField("CtSD", FieldType.DOUBLE, display_name="Ct SD")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DETECTOR__FIELD_NAME: Final[WrapperField] = WrapperField("Detector", FieldType.STRING, display_name="Detector")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WELL__FIELD_NAME: Final[WrapperField] = WrapperField("Well", FieldType.STRING, display_name="Well")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_Ct_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ct' on this record model
        """
        self.set_field_value(self.CT__FIELD_NAME.field_name, value)

    def get_Ct_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ct' from this record model
        """
        return self.get_field_value(self.CT__FIELD_NAME.field_name)

    def set_CtSD_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtSD' on this record model
        """
        self.set_field_value(self.CTSD__FIELD_NAME.field_name, value)

    def get_CtSD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtSD' from this record model
        """
        return self.get_field_value(self.CTSD__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Detector_field(self, value: Optional[str]):
        """
        Set data field with field name 'Detector' on this record model
        """
        self.set_field_value(self.DETECTOR__FIELD_NAME.field_name, value)

    def get_Detector_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Detector' from this record model
        """
        return self.get_field_value(self.DETECTOR__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Well_field(self, value: Optional[str]):
        """
        Set data field with field name 'Well' on this record model
        """
        self.set_field_value(self.WELL__FIELD_NAME.field_name, value)

    def get_Well_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Well' from this record model
        """
        return self.get_field_value(self.WELL__FIELD_NAME.field_name)


class AccessionConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AccessionConfig
    Data Type Display Name: Accession Configuration (Accession Configurations)
    Fields: CreatedBy, DataTypeField, CustomPluginClassPath, DateCreated, PrefixField, AccessionOnCreate, DataFieldName, DataRecordName, NumberOfDigits, VeloxLastModifiedDate, VeloxLastModifiedBy, StartNumber, SuffixField, IsGlobal
    Accession configuration can be used to modify default accessioning behaviors for out-of-box plugins from Sapio Sciences. Convenient methods can be found in AccessioningWithConfigManager class to accession according to the configuration. All Sapio plugins who accession samples should use this util for accessioning.
    """
    DATA_TYPE_NAME: Final[str] = 'AccessionConfig'
    DISPLAY_NAME: Final[str] = "Accession Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Accession Configurations"
    ACCESSIONONCREATE__FIELD_NAME: Final[WrapperField] = WrapperField("AccessionOnCreate", FieldType.BOOLEAN, display_name="Accession On Create?")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CUSTOMPLUGINCLASSPATH__FIELD_NAME: Final[WrapperField] = WrapperField("CustomPluginClassPath", FieldType.STRING, display_name="Custom Plugin Class Path")
    DATAFIELDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataFieldName", FieldType.SELECTION, display_name="Data Field")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPEFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("DataTypeField", FieldType.SELECTION, display_name="Data Type")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ISGLOBAL__FIELD_NAME: Final[WrapperField] = WrapperField("IsGlobal", FieldType.BOOLEAN, display_name="Is Global?")
    NUMBEROFDIGITS__FIELD_NAME: Final[WrapperField] = WrapperField("NumberOfDigits", FieldType.INTEGER, display_name="Number Of Digits")
    PREFIXFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("PrefixField", FieldType.STRING, display_name="Prefix Field")
    STARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("StartNumber", FieldType.INTEGER, display_name="Start Number")
    SUFFIXFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("SuffixField", FieldType.STRING, display_name="Suffix Field")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AccessionOnCreate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AccessionOnCreate' on this record model
        """
        self.set_field_value(self.ACCESSIONONCREATE__FIELD_NAME.field_name, value)

    def get_AccessionOnCreate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AccessionOnCreate' from this record model
        """
        return self.get_field_value(self.ACCESSIONONCREATE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomPluginClassPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomPluginClassPath' on this record model
        """
        self.set_field_value(self.CUSTOMPLUGINCLASSPATH__FIELD_NAME.field_name, value)

    def get_CustomPluginClassPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomPluginClassPath' from this record model
        """
        return self.get_field_value(self.CUSTOMPLUGINCLASSPATH__FIELD_NAME.field_name)

    def set_DataFieldName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataFieldName' on this record model
        """
        self.set_field_value(self.DATAFIELDNAME__FIELD_NAME.field_name, value)

    def get_DataFieldName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataFieldName' from this record model
        """
        return self.get_field_value(self.DATAFIELDNAME__FIELD_NAME.field_name)

    def set_DataTypeField_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeField' on this record model
        """
        self.set_field_value(self.DATATYPEFIELD__FIELD_NAME.field_name, value)

    def get_DataTypeField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeField' from this record model
        """
        return self.get_field_value(self.DATATYPEFIELD__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IsGlobal_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGlobal' on this record model
        """
        self.set_field_value(self.ISGLOBAL__FIELD_NAME.field_name, value)

    def get_IsGlobal_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGlobal' from this record model
        """
        return self.get_field_value(self.ISGLOBAL__FIELD_NAME.field_name)

    def set_NumberOfDigits_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfDigits' on this record model
        """
        self.set_field_value(self.NUMBEROFDIGITS__FIELD_NAME.field_name, value)

    def get_NumberOfDigits_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfDigits' from this record model
        """
        return self.get_field_value(self.NUMBEROFDIGITS__FIELD_NAME.field_name)

    def set_PrefixField_field(self, value: Optional[str]):
        """
        Set data field with field name 'PrefixField' on this record model
        """
        self.set_field_value(self.PREFIXFIELD__FIELD_NAME.field_name, value)

    def get_PrefixField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PrefixField' from this record model
        """
        return self.get_field_value(self.PREFIXFIELD__FIELD_NAME.field_name)

    def set_StartNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartNumber' on this record model
        """
        self.set_field_value(self.STARTNUMBER__FIELD_NAME.field_name, value)

    def get_StartNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartNumber' from this record model
        """
        return self.get_field_value(self.STARTNUMBER__FIELD_NAME.field_name)

    def set_SuffixField_field(self, value: Optional[str]):
        """
        Set data field with field name 'SuffixField' on this record model
        """
        self.set_field_value(self.SUFFIXFIELD__FIELD_NAME.field_name, value)

    def get_SuffixField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SuffixField' from this record model
        """
        return self.get_field_value(self.SUFFIXFIELD__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AgentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Agent
    Data Type Display Name: Agent (Agents)
    Fields: AgentType, CreatedBy, DataRecordName, MultiParentLink649, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, AgentName
    """
    DATA_TYPE_NAME: Final[str] = 'Agent'
    DISPLAY_NAME: Final[str] = "Agent"
    PLURAL_DISPLAY_NAME: Final[str] = "Agents"
    AGENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("AgentName", FieldType.SELECTION, display_name="Agent Name")
    AGENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("AgentType", FieldType.SELECTION, display_name="Agent Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MULTIPARENTLINK649__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink649", FieldType.MULTIPARENTLINK, display_name="Linked Treatment")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AgentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'AgentName' on this record model
        """
        self.set_field_value(self.AGENTNAME__FIELD_NAME.field_name, value)

    def get_AgentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AgentName' from this record model
        """
        return self.get_field_value(self.AGENTNAME__FIELD_NAME.field_name)

    def set_AgentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'AgentType' on this record model
        """
        self.set_field_value(self.AGENTTYPE__FIELD_NAME.field_name, value)

    def get_AgentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AgentType' from this record model
        """
        return self.get_field_value(self.AGENTTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AnalysisStatusModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AnalysisStatus
    Data Type Display Name: Analysis Status (Analysis Statuses)
    Fields: Status, Script, CreatedBy, DataRecordName, Invocation, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'AnalysisStatus'
    DISPLAY_NAME: Final[str] = "Analysis Status"
    PLURAL_DISPLAY_NAME: Final[str] = "Analysis Statuses"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    INVOCATION__FIELD_NAME: Final[WrapperField] = WrapperField("Invocation", FieldType.PICKLIST, display_name="Invocation")
    SCRIPT__FIELD_NAME: Final[WrapperField] = WrapperField("Script", FieldType.STRING, display_name="Script")
    STATUS__FIELD_NAME: Final[WrapperField] = WrapperField("Status", FieldType.PICKLIST, display_name="Status")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Invocation_field(self, value: Optional[str]):
        """
        Set data field with field name 'Invocation' on this record model
        """
        self.set_field_value(self.INVOCATION__FIELD_NAME.field_name, value)

    def get_Invocation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Invocation' from this record model
        """
        return self.get_field_value(self.INVOCATION__FIELD_NAME.field_name)

    def set_Script_field(self, value: Optional[str]):
        """
        Set data field with field name 'Script' on this record model
        """
        self.set_field_value(self.SCRIPT__FIELD_NAME.field_name, value)

    def get_Script_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Script' from this record model
        """
        return self.get_field_value(self.SCRIPT__FIELD_NAME.field_name)

    def set_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'Status' on this record model
        """
        self.set_field_value(self.STATUS__FIELD_NAME.field_name, value)

    def get_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Status' from this record model
        """
        return self.get_field_value(self.STATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AnalyticsWizardChartDataModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AnalyticsWizardChartData
    Data Type Display Name: Analytics Wizard Chart Datum (Analytics Wizard Chart Data)
    Fields: FilePath, CreatedBy, VeloxCurrentVersion, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    Holds a single chart data for a jarvis analytic run result. A run result can have more than one chart.
    """
    DATA_TYPE_NAME: Final[str] = 'AnalyticsWizardChartData'
    DISPLAY_NAME: Final[str] = "Analytics Wizard Chart Datum"
    PLURAL_DISPLAY_NAME: Final[str] = "Analytics Wizard Chart Data"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AnalyticsWizardRunModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AnalyticsWizardRun
    Data Type Display Name: Analytics Wizard Run (Analytics Wizard Runs)
    Fields: FilePath, OperatorName, VeloxCurrentVersion, CreatedBy, ParametersJSON, DateCreated, Name, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, RunId
    Stored a single run of particular run settings within a top level result of data frame.
    """
    DATA_TYPE_NAME: Final[str] = 'AnalyticsWizardRun'
    DISPLAY_NAME: Final[str] = "Analytics Wizard Run"
    PLURAL_DISPLAY_NAME: Final[str] = "Analytics Wizard Runs"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    NAME__FIELD_NAME: Final[WrapperField] = WrapperField("Name", FieldType.STRING, display_name="Name")
    OPERATORNAME__FIELD_NAME: Final[WrapperField] = WrapperField("OperatorName", FieldType.STRING, display_name="Operator Name")
    PARAMETERSJSON__FIELD_NAME: Final[WrapperField] = WrapperField("ParametersJSON", FieldType.STRING, display_name="Parameters JSON")
    RUNID__FIELD_NAME: Final[WrapperField] = WrapperField("RunId", FieldType.INTEGER, display_name="Run ID")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_OperatorName_field(self, value: Optional[str]):
        """
        Set data field with field name 'OperatorName' on this record model
        """
        self.set_field_value(self.OPERATORNAME__FIELD_NAME.field_name, value)

    def get_OperatorName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OperatorName' from this record model
        """
        return self.get_field_value(self.OPERATORNAME__FIELD_NAME.field_name)

    def set_ParametersJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'ParametersJSON' on this record model
        """
        self.set_field_value(self.PARAMETERSJSON__FIELD_NAME.field_name, value)

    def get_ParametersJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ParametersJSON' from this record model
        """
        return self.get_field_value(self.PARAMETERSJSON__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AnalyticsWizardSavedSettingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AnalyticsWizardSavedSetting
    Data Type Display Name: Analytics Wizard Saved Setting (Analytics Wizard Saved Settings)
    Fields: OpName, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SettingsContent, SettingsName
    Saves the settings for Jarvis Analytic data and parameter mappings.

Saving is only allowed if the exact settings has not been repeated.
    """
    DATA_TYPE_NAME: Final[str] = 'AnalyticsWizardSavedSetting'
    DISPLAY_NAME: Final[str] = "Analytics Wizard Saved Setting"
    PLURAL_DISPLAY_NAME: Final[str] = "Analytics Wizard Saved Settings"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    OPNAME__FIELD_NAME: Final[WrapperField] = WrapperField("OpName", FieldType.STRING, display_name="Operator Name")
    SETTINGSCONTENT__FIELD_NAME: Final[WrapperField] = WrapperField("SettingsContent", FieldType.STRING, display_name="Settings Content")
    SETTINGSNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SettingsName", FieldType.STRING, display_name="Settings Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_OpName_field(self, value: Optional[str]):
        """
        Set data field with field name 'OpName' on this record model
        """
        self.set_field_value(self.OPNAME__FIELD_NAME.field_name, value)

    def get_OpName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OpName' from this record model
        """
        return self.get_field_value(self.OPNAME__FIELD_NAME.field_name)

    def set_SettingsContent_field(self, value: Optional[str]):
        """
        Set data field with field name 'SettingsContent' on this record model
        """
        self.set_field_value(self.SETTINGSCONTENT__FIELD_NAME.field_name, value)

    def get_SettingsContent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SettingsContent' from this record model
        """
        return self.get_field_value(self.SETTINGSCONTENT__FIELD_NAME.field_name)

    def set_SettingsName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SettingsName' on this record model
        """
        self.set_field_value(self.SETTINGSNAME__FIELD_NAME.field_name, value)

    def get_SettingsName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SettingsName' from this record model
        """
        return self.get_field_value(self.SETTINGSNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AnalyticsWizardTopLevelResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AnalyticsWizardTopLevelResult
    Data Type Display Name: Analytics Wizard Top Level Result (Analytics Wizard Top Level Results)
    Fields: FilePath, VeloxCurrentVersion, CreatedBy, CspFieldDefinitionJson, DateCreated, Name, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy
    Stores the top level results of a single jarvis analytics saved run.
    """
    DATA_TYPE_NAME: Final[str] = 'AnalyticsWizardTopLevelResult'
    DISPLAY_NAME: Final[str] = "Analytics Wizard Top Level Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Analytics Wizard Top Level Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CSPFIELDDEFINITIONJSON__FIELD_NAME: Final[WrapperField] = WrapperField("CspFieldDefinitionJson", FieldType.STRING, display_name="Field Definition Data")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    NAME__FIELD_NAME: Final[WrapperField] = WrapperField("Name", FieldType.STRING, display_name="Name")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CspFieldDefinitionJson_field(self, value: Optional[str]):
        """
        Set data field with field name 'CspFieldDefinitionJson' on this record model
        """
        self.set_field_value(self.CSPFIELDDEFINITIONJSON__FIELD_NAME.field_name, value)

    def get_CspFieldDefinitionJson_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CspFieldDefinitionJson' from this record model
        """
        return self.get_field_value(self.CSPFIELDDEFINITIONJSON__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AntibodyModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Antibody
    Data Type Display Name: Antibody (Antibodies)
    Fields: CreatedBy, PartNumber, ConsumableType, DateCreated, Vendor, DataRecordName, ExpirationDate, VeloxLastModifiedDate, VeloxLastModifiedBy, RegistryId, ConsumableName, LotNumber, HELM
    """
    DATA_TYPE_NAME: Final[str] = 'Antibody'
    DISPLAY_NAME: Final[str] = "Antibody"
    PLURAL_DISPLAY_NAME: Final[str] = "Antibodies"
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Antibody Name")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Antibody Subtype")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    HELM__FIELD_NAME: Final[WrapperField] = WrapperField("HELM", FieldType.STRING, display_name="HELM")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.SELECTION, display_name="Vendor")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class AntibodyPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AntibodyPart
    Data Type Display Name: Antibody Part (Antibody Parts)
    Fields: CreatedBy, ConsumableType, DateCreated, Vendor, QuantityOnHand, Units, QuantityPerItem, MultiParentLink201, ReorderLevelQuantity, ChemicalProperties, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, RegistryId, ConsumableName, HELMHash, HELM
    """
    DATA_TYPE_NAME: Final[str] = 'AntibodyPart'
    DISPLAY_NAME: Final[str] = "Antibody Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Antibody Parts"
    CHEMICALPROPERTIES__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalProperties", FieldType.SIDE_LINK, display_name="Chemical Properties")
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Name")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.PICKLIST, display_name="Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    HELM__FIELD_NAME: Final[WrapperField] = WrapperField("HELM", FieldType.STRING, display_name="HELM")
    HELMHASH__FIELD_NAME: Final[WrapperField] = WrapperField("HELMHash", FieldType.STRING, display_name="HELM Hash")
    MULTIPARENTLINK201__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink201", FieldType.MULTIPARENTLINK, display_name="Linked ProteinParts")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.SELECTION, display_name="Vendor")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ChemicalProperties_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalProperties' on this record model
        """
        self.set_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name, value)

    def get_ChemicalProperties_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalProperties' from this record model
        """
        return self.get_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_HELMHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELMHash' on this record model
        """
        self.set_field_value(self.HELMHASH__FIELD_NAME.field_name, value)

    def get_HELMHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELMHash' from this record model
        """
        return self.get_field_value(self.HELMHASH__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class AssignedProcessModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AssignedProcess
    Data Type Display Name: Assigned Process (Assigned Processes)
    Fields: ProcessName, SampleRecordId, TurnAroundHours, SourceAssignedProcessIds, DateCreated, ScheduledDate, OtherSampleId, DoNotProceed, VeloxLastModifiedBy, RequestRecordId, SampleId, Status, ProcessTAT, CreatedBy, BranchLongId, TurnAroundMinutes, ProcessStepNumber, HasBeenReprocessed, Reprocessing, CompletedDate, DataRecordName, PauseTracking, VeloxLastModifiedDate, AwaitingRequestApproval
    """
    DATA_TYPE_NAME: Final[str] = 'AssignedProcess'
    DISPLAY_NAME: Final[str] = "Assigned Process"
    PLURAL_DISPLAY_NAME: Final[str] = "Assigned Processes"
    AWAITINGREQUESTAPPROVAL__FIELD_NAME: Final[WrapperField] = WrapperField("AwaitingRequestApproval", FieldType.BOOLEAN, display_name="Awaiting Request Approval")
    BRANCHLONGID__FIELD_NAME: Final[WrapperField] = WrapperField("BranchLongId", FieldType.LONG, display_name="Branch ID")
    COMPLETEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("CompletedDate", FieldType.DATE, display_name="Completed Date")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DONOTPROCEED__FIELD_NAME: Final[WrapperField] = WrapperField("DoNotProceed", FieldType.BOOLEAN, display_name="Do Not Proceed")
    HASBEENREPROCESSED__FIELD_NAME: Final[WrapperField] = WrapperField("HasBeenReprocessed", FieldType.BOOLEAN, display_name="Has Been Reprocessed")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    PAUSETRACKING__FIELD_NAME: Final[WrapperField] = WrapperField("PauseTracking", FieldType.BOOLEAN, display_name="Pause Tracking")
    PROCESSNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessName", FieldType.SELECTION, display_name="Process Name")
    PROCESSSTEPNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessStepNumber", FieldType.LONG, display_name="Process Step Number")
    PROCESSTAT__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessTAT", FieldType.DOUBLE, display_name="Turn Around Time")
    REPROCESSING__FIELD_NAME: Final[WrapperField] = WrapperField("Reprocessing", FieldType.BOOLEAN, display_name="Awaiting Reprocessing")
    REQUESTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("RequestRecordId", FieldType.LONG, display_name="Request Record ID")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    SAMPLERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleRecordId", FieldType.LONG, display_name="Sample Record ID")
    SCHEDULEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ScheduledDate", FieldType.DATE, display_name="Scheduled Date")
    SOURCEASSIGNEDPROCESSIDS__FIELD_NAME: Final[WrapperField] = WrapperField("SourceAssignedProcessIds", FieldType.STRING, display_name="Source Assigned Process Record IDs")
    STATUS__FIELD_NAME: Final[WrapperField] = WrapperField("Status", FieldType.SELECTION, display_name="Status")
    TURNAROUNDHOURS__FIELD_NAME: Final[WrapperField] = WrapperField("TurnAroundHours", FieldType.LONG, display_name="Turn Around Hours")
    TURNAROUNDMINUTES__FIELD_NAME: Final[WrapperField] = WrapperField("TurnAroundMinutes", FieldType.LONG, display_name="Turn Around Minutes")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AwaitingRequestApproval_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AwaitingRequestApproval' on this record model
        """
        self.set_field_value(self.AWAITINGREQUESTAPPROVAL__FIELD_NAME.field_name, value)

    def get_AwaitingRequestApproval_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AwaitingRequestApproval' from this record model
        """
        return self.get_field_value(self.AWAITINGREQUESTAPPROVAL__FIELD_NAME.field_name)

    def set_BranchLongId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BranchLongId' on this record model
        """
        self.set_field_value(self.BRANCHLONGID__FIELD_NAME.field_name, value)

    def get_BranchLongId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BranchLongId' from this record model
        """
        return self.get_field_value(self.BRANCHLONGID__FIELD_NAME.field_name)

    def set_CompletedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletedDate' on this record model
        """
        self.set_field_value(self.COMPLETEDDATE__FIELD_NAME.field_name, value)

    def get_CompletedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletedDate' from this record model
        """
        return self.get_field_value(self.COMPLETEDDATE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DoNotProceed_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DoNotProceed' on this record model
        """
        self.set_field_value(self.DONOTPROCEED__FIELD_NAME.field_name, value)

    def get_DoNotProceed_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DoNotProceed' from this record model
        """
        return self.get_field_value(self.DONOTPROCEED__FIELD_NAME.field_name)

    def set_HasBeenReprocessed_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasBeenReprocessed' on this record model
        """
        self.set_field_value(self.HASBEENREPROCESSED__FIELD_NAME.field_name, value)

    def get_HasBeenReprocessed_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasBeenReprocessed' from this record model
        """
        return self.get_field_value(self.HASBEENREPROCESSED__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_PauseTracking_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PauseTracking' on this record model
        """
        self.set_field_value(self.PAUSETRACKING__FIELD_NAME.field_name, value)

    def get_PauseTracking_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PauseTracking' from this record model
        """
        return self.get_field_value(self.PAUSETRACKING__FIELD_NAME.field_name)

    def set_ProcessName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessName' on this record model
        """
        self.set_field_value(self.PROCESSNAME__FIELD_NAME.field_name, value)

    def get_ProcessName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessName' from this record model
        """
        return self.get_field_value(self.PROCESSNAME__FIELD_NAME.field_name)

    def set_ProcessStepNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProcessStepNumber' on this record model
        """
        self.set_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name, value)

    def get_ProcessStepNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProcessStepNumber' from this record model
        """
        return self.get_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name)

    def set_ProcessTAT_field(self, value: Optional[float]):
        """
        Set data field with field name 'ProcessTAT' on this record model
        """
        self.set_field_value(self.PROCESSTAT__FIELD_NAME.field_name, value)

    def get_ProcessTAT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ProcessTAT' from this record model
        """
        return self.get_field_value(self.PROCESSTAT__FIELD_NAME.field_name)

    def set_Reprocessing_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Reprocessing' on this record model
        """
        self.set_field_value(self.REPROCESSING__FIELD_NAME.field_name, value)

    def get_Reprocessing_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Reprocessing' from this record model
        """
        return self.get_field_value(self.REPROCESSING__FIELD_NAME.field_name)

    def set_RequestRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'RequestRecordId' on this record model
        """
        self.set_field_value(self.REQUESTRECORDID__FIELD_NAME.field_name, value)

    def get_RequestRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RequestRecordId' from this record model
        """
        return self.get_field_value(self.REQUESTRECORDID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SampleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleRecordId' on this record model
        """
        self.set_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_SampleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleRecordId' from this record model
        """
        return self.get_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name)

    def set_ScheduledDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ScheduledDate' on this record model
        """
        self.set_field_value(self.SCHEDULEDDATE__FIELD_NAME.field_name, value)

    def get_ScheduledDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ScheduledDate' from this record model
        """
        return self.get_field_value(self.SCHEDULEDDATE__FIELD_NAME.field_name)

    def set_SourceAssignedProcessIds_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourceAssignedProcessIds' on this record model
        """
        self.set_field_value(self.SOURCEASSIGNEDPROCESSIDS__FIELD_NAME.field_name, value)

    def get_SourceAssignedProcessIds_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourceAssignedProcessIds' from this record model
        """
        return self.get_field_value(self.SOURCEASSIGNEDPROCESSIDS__FIELD_NAME.field_name)

    def set_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'Status' on this record model
        """
        self.set_field_value(self.STATUS__FIELD_NAME.field_name, value)

    def get_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Status' from this record model
        """
        return self.get_field_value(self.STATUS__FIELD_NAME.field_name)

    def set_TurnAroundHours_field(self, value: Optional[int]):
        """
        Set data field with field name 'TurnAroundHours' on this record model
        """
        self.set_field_value(self.TURNAROUNDHOURS__FIELD_NAME.field_name, value)

    def get_TurnAroundHours_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TurnAroundHours' from this record model
        """
        return self.get_field_value(self.TURNAROUNDHOURS__FIELD_NAME.field_name)

    def set_TurnAroundMinutes_field(self, value: Optional[int]):
        """
        Set data field with field name 'TurnAroundMinutes' on this record model
        """
        self.set_field_value(self.TURNAROUNDMINUTES__FIELD_NAME.field_name, value)

    def get_TurnAroundMinutes_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TurnAroundMinutes' from this record model
        """
        return self.get_field_value(self.TURNAROUNDMINUTES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AttachmentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Attachment
    Data Type Display Name: Attachment (Attachments)
    Fields: IsGeneratedByReportBuilder, MultiParentLink230, CreatedBy, MultiParentLink308, V_VersionNumber, DataRecordName, Volume, MultiParentLink215, Description, TestBoolean, DateCreated, MultiParentLink175, MultiParentLink179, VeloxLastModifiedBy, V_Comments, FilePath, VeloxCurrentVersion, Comments, VersionNumber, AttachmentId, V_AttachmentId, VeloxLastModifiedDate
    Data type for document attachments
    """
    DATA_TYPE_NAME: Final[str] = 'Attachment'
    DISPLAY_NAME: Final[str] = "Attachment"
    PLURAL_DISPLAY_NAME: Final[str] = "Attachments"
    ATTACHMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("AttachmentId", FieldType.STRING, display_name="Attachment ID")
    COMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("Comments", FieldType.STRING, display_name="Comments")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    ISGENERATEDBYREPORTBUILDER__FIELD_NAME: Final[WrapperField] = WrapperField("IsGeneratedByReportBuilder", FieldType.BOOLEAN, display_name="Is Generated By Report Builder")
    MULTIPARENTLINK175__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink175", FieldType.MULTIPARENTLINK, display_name="Linked Project")
    MULTIPARENTLINK179__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink179", FieldType.MULTIPARENTLINK, display_name="Related InstrumentMaintenanceReceipts")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    MULTIPARENTLINK230__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink230", FieldType.MULTIPARENTLINK, display_name="Linked Study")
    MULTIPARENTLINK308__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink308", FieldType.MULTIPARENTLINK, display_name="Linked Instrument")
    TESTBOOLEAN__FIELD_NAME: Final[WrapperField] = WrapperField("TestBoolean", FieldType.BOOLEAN, display_name="Are experimental procedures for the exact target compound available?")
    V_ATTACHMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("V_AttachmentId", FieldType.STRING, display_name="Attachment ID")
    V_COMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("V_Comments", FieldType.STRING, display_name="Comments")
    V_VERSIONNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("V_VersionNumber", FieldType.STRING, display_name="Version Number")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VERSIONNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("VersionNumber", FieldType.STRING, display_name="Version Number")
    VOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("Volume", FieldType.INTEGER, display_name="Volume")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AttachmentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AttachmentId' on this record model
        """
        self.set_field_value(self.ATTACHMENTID__FIELD_NAME.field_name, value)

    def get_AttachmentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AttachmentId' from this record model
        """
        return self.get_field_value(self.ATTACHMENTID__FIELD_NAME.field_name)

    def set_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'Comments' on this record model
        """
        self.set_field_value(self.COMMENTS__FIELD_NAME.field_name, value)

    def get_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Comments' from this record model
        """
        return self.get_field_value(self.COMMENTS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_IsGeneratedByReportBuilder_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGeneratedByReportBuilder' on this record model
        """
        self.set_field_value(self.ISGENERATEDBYREPORTBUILDER__FIELD_NAME.field_name, value)

    def get_IsGeneratedByReportBuilder_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGeneratedByReportBuilder' from this record model
        """
        return self.get_field_value(self.ISGENERATEDBYREPORTBUILDER__FIELD_NAME.field_name)

    def set_TestBoolean_field(self, value: Optional[bool]):
        """
        Set data field with field name 'TestBoolean' on this record model
        """
        self.set_field_value(self.TESTBOOLEAN__FIELD_NAME.field_name, value)

    def get_TestBoolean_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'TestBoolean' from this record model
        """
        return self.get_field_value(self.TESTBOOLEAN__FIELD_NAME.field_name)

    def set_V_AttachmentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'V_AttachmentId' on this record model
        """
        self.set_field_value(self.V_ATTACHMENTID__FIELD_NAME.field_name, value)

    def get_V_AttachmentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'V_AttachmentId' from this record model
        """
        return self.get_field_value(self.V_ATTACHMENTID__FIELD_NAME.field_name)

    def set_V_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'V_Comments' on this record model
        """
        self.set_field_value(self.V_COMMENTS__FIELD_NAME.field_name, value)

    def get_V_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'V_Comments' from this record model
        """
        return self.get_field_value(self.V_COMMENTS__FIELD_NAME.field_name)

    def set_V_VersionNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'V_VersionNumber' on this record model
        """
        self.set_field_value(self.V_VERSIONNUMBER__FIELD_NAME.field_name, value)

    def get_V_VersionNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'V_VersionNumber' from this record model
        """
        return self.get_field_value(self.V_VERSIONNUMBER__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_VersionNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'VersionNumber' on this record model
        """
        self.set_field_value(self.VERSIONNUMBER__FIELD_NAME.field_name, value)

    def get_VersionNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VersionNumber' from this record model
        """
        return self.get_field_value(self.VERSIONNUMBER__FIELD_NAME.field_name)

    def set_Volume_field(self, value: Optional[int]):
        """
        Set data field with field name 'Volume' on this record model
        """
        self.set_field_value(self.VOLUME__FIELD_NAME.field_name, value)

    def get_Volume_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Volume' from this record model
        """
        return self.get_field_value(self.VOLUME__FIELD_NAME.field_name)


class AW_ANOVASummaryTableModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AW_ANOVASummaryTable
    Data Type Display Name: ANOVA Summary (ANOVA Summary)
    Fields: GroupName, CreatedBy, Statement, CritF, DateCreated, PrGreaterThanF, DegreeOfFreedom, DataRecordName, FValue, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'AW_ANOVASummaryTable'
    DISPLAY_NAME: Final[str] = "ANOVA Summary"
    PLURAL_DISPLAY_NAME: Final[str] = "ANOVA Summary"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CRITF__FIELD_NAME: Final[WrapperField] = WrapperField("CritF", FieldType.DOUBLE, display_name="Critical F")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DEGREEOFFREEDOM__FIELD_NAME: Final[WrapperField] = WrapperField("DegreeOfFreedom", FieldType.DOUBLE, display_name="Degree of Freedom")
    FVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("FValue", FieldType.DOUBLE, display_name="F Value")
    GROUPNAME__FIELD_NAME: Final[WrapperField] = WrapperField("GroupName", FieldType.STRING, display_name="Group")
    PRGREATERTHANF__FIELD_NAME: Final[WrapperField] = WrapperField("PrGreaterThanF", FieldType.DOUBLE, display_name="Null Hypothesis Likelihood")
    STATEMENT__FIELD_NAME: Final[WrapperField] = WrapperField("Statement", FieldType.STRING, display_name="Conclusion")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CritF_field(self, value: Optional[float]):
        """
        Set data field with field name 'CritF' on this record model
        """
        self.set_field_value(self.CRITF__FIELD_NAME.field_name, value)

    def get_CritF_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CritF' from this record model
        """
        return self.get_field_value(self.CRITF__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DegreeOfFreedom_field(self, value: Optional[float]):
        """
        Set data field with field name 'DegreeOfFreedom' on this record model
        """
        self.set_field_value(self.DEGREEOFFREEDOM__FIELD_NAME.field_name, value)

    def get_DegreeOfFreedom_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DegreeOfFreedom' from this record model
        """
        return self.get_field_value(self.DEGREEOFFREEDOM__FIELD_NAME.field_name)

    def set_FValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'FValue' on this record model
        """
        self.set_field_value(self.FVALUE__FIELD_NAME.field_name, value)

    def get_FValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FValue' from this record model
        """
        return self.get_field_value(self.FVALUE__FIELD_NAME.field_name)

    def set_GroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'GroupName' on this record model
        """
        self.set_field_value(self.GROUPNAME__FIELD_NAME.field_name, value)

    def get_GroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GroupName' from this record model
        """
        return self.get_field_value(self.GROUPNAME__FIELD_NAME.field_name)

    def set_PrGreaterThanF_field(self, value: Optional[float]):
        """
        Set data field with field name 'PrGreaterThanF' on this record model
        """
        self.set_field_value(self.PRGREATERTHANF__FIELD_NAME.field_name, value)

    def get_PrGreaterThanF_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PrGreaterThanF' from this record model
        """
        return self.get_field_value(self.PRGREATERTHANF__FIELD_NAME.field_name)

    def set_Statement_field(self, value: Optional[str]):
        """
        Set data field with field name 'Statement' on this record model
        """
        self.set_field_value(self.STATEMENT__FIELD_NAME.field_name, value)

    def get_Statement_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Statement' from this record model
        """
        return self.get_field_value(self.STATEMENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AW_CoefficientsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AW_Coefficients
    Data Type Display Name: Coefficients (Coefficients)
    Fields: Estimate, CreatedBy, DateCreated, PValue, StdErr, DataRecordName, SeriesName, VeloxLastModifiedDate, VeloxLastModifiedBy, TValue, SummaryName
    """
    DATA_TYPE_NAME: Final[str] = 'AW_Coefficients'
    DISPLAY_NAME: Final[str] = "Coefficients"
    PLURAL_DISPLAY_NAME: Final[str] = "Coefficients"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ESTIMATE__FIELD_NAME: Final[WrapperField] = WrapperField("Estimate", FieldType.DOUBLE, display_name="Estimate")
    PVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("PValue", FieldType.DOUBLE, display_name="P-Value")
    SERIESNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SeriesName", FieldType.STRING, display_name="Series Name")
    STDERR__FIELD_NAME: Final[WrapperField] = WrapperField("StdErr", FieldType.DOUBLE, display_name="Standard Error")
    SUMMARYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SummaryName", FieldType.STRING, display_name="Name")
    TVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("TValue", FieldType.DOUBLE, display_name="T-Value")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Estimate_field(self, value: Optional[float]):
        """
        Set data field with field name 'Estimate' on this record model
        """
        self.set_field_value(self.ESTIMATE__FIELD_NAME.field_name, value)

    def get_Estimate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Estimate' from this record model
        """
        return self.get_field_value(self.ESTIMATE__FIELD_NAME.field_name)

    def set_PValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'PValue' on this record model
        """
        self.set_field_value(self.PVALUE__FIELD_NAME.field_name, value)

    def get_PValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PValue' from this record model
        """
        return self.get_field_value(self.PVALUE__FIELD_NAME.field_name)

    def set_SeriesName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SeriesName' on this record model
        """
        self.set_field_value(self.SERIESNAME__FIELD_NAME.field_name, value)

    def get_SeriesName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SeriesName' from this record model
        """
        return self.get_field_value(self.SERIESNAME__FIELD_NAME.field_name)

    def set_StdErr_field(self, value: Optional[float]):
        """
        Set data field with field name 'StdErr' on this record model
        """
        self.set_field_value(self.STDERR__FIELD_NAME.field_name, value)

    def get_StdErr_field(self) -> Optional[float]:
        """
        Get data field value with field name 'StdErr' from this record model
        """
        return self.get_field_value(self.STDERR__FIELD_NAME.field_name)

    def set_SummaryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SummaryName' on this record model
        """
        self.set_field_value(self.SUMMARYNAME__FIELD_NAME.field_name, value)

    def get_SummaryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SummaryName' from this record model
        """
        return self.get_field_value(self.SUMMARYNAME__FIELD_NAME.field_name)

    def set_TValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'TValue' on this record model
        """
        self.set_field_value(self.TVALUE__FIELD_NAME.field_name, value)

    def get_TValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TValue' from this record model
        """
        return self.get_field_value(self.TVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AW_EDValueModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AW_EDValue
    Data Type Display Name: ED-Value (ED-Values)
    Fields: EDValue, CreatedBy, DataRecordName, SeriesName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SummaryName, EDStdErr
    """
    DATA_TYPE_NAME: Final[str] = 'AW_EDValue'
    DISPLAY_NAME: Final[str] = "ED-Value"
    PLURAL_DISPLAY_NAME: Final[str] = "ED-Values"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EDSTDERR__FIELD_NAME: Final[WrapperField] = WrapperField("EDStdErr", FieldType.DOUBLE, display_name="Error")
    EDVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("EDValue", FieldType.DOUBLE, display_name="ED Value")
    SERIESNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SeriesName", FieldType.STRING, display_name="Series Name")
    SUMMARYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SummaryName", FieldType.STRING, display_name="Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EDStdErr_field(self, value: Optional[float]):
        """
        Set data field with field name 'EDStdErr' on this record model
        """
        self.set_field_value(self.EDSTDERR__FIELD_NAME.field_name, value)

    def get_EDStdErr_field(self) -> Optional[float]:
        """
        Get data field value with field name 'EDStdErr' from this record model
        """
        return self.get_field_value(self.EDSTDERR__FIELD_NAME.field_name)

    def set_EDValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'EDValue' on this record model
        """
        self.set_field_value(self.EDVALUE__FIELD_NAME.field_name, value)

    def get_EDValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'EDValue' from this record model
        """
        return self.get_field_value(self.EDVALUE__FIELD_NAME.field_name)

    def set_SeriesName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SeriesName' on this record model
        """
        self.set_field_value(self.SERIESNAME__FIELD_NAME.field_name, value)

    def get_SeriesName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SeriesName' from this record model
        """
        return self.get_field_value(self.SERIESNAME__FIELD_NAME.field_name)

    def set_SummaryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SummaryName' on this record model
        """
        self.set_field_value(self.SUMMARYNAME__FIELD_NAME.field_name, value)

    def get_SummaryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SummaryName' from this record model
        """
        return self.get_field_value(self.SUMMARYNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AW_GenericSummaryTableModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AW_GenericSummaryTable
    Data Type Display Name: Summary (Summary)
    Fields: CreatedBy, DataRecordName, SummaryValue, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SummaryName
    """
    DATA_TYPE_NAME: Final[str] = 'AW_GenericSummaryTable'
    DISPLAY_NAME: Final[str] = "Summary"
    PLURAL_DISPLAY_NAME: Final[str] = "Summary"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SUMMARYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SummaryName", FieldType.STRING, display_name="Name")
    SUMMARYVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("SummaryValue", FieldType.STRING, display_name="Value")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SummaryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SummaryName' on this record model
        """
        self.set_field_value(self.SUMMARYNAME__FIELD_NAME.field_name, value)

    def get_SummaryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SummaryName' from this record model
        """
        return self.get_field_value(self.SUMMARYNAME__FIELD_NAME.field_name)

    def set_SummaryValue_field(self, value: Optional[str]):
        """
        Set data field with field name 'SummaryValue' on this record model
        """
        self.set_field_value(self.SUMMARYVALUE__FIELD_NAME.field_name, value)

    def get_SummaryValue_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SummaryValue' from this record model
        """
        return self.get_field_value(self.SUMMARYVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class AW_ProphetPredictionDFModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AW_ProphetPredictionDF
    Data Type Display Name: Prophet Prediction Frame (Prophet Prediction Frames)
    Fields: multiplicative_terms_upper, additive_terms, trend, trend_upper, DateCreated, additive_terms_lower, weekly, ds, yhat_upper, weekly_upper, daily_lower, trend_lower, VeloxLastModifiedBy, CreatedBy, multiplicative_terms_lower, additive_terms_upper, yhat_lower, multiplicative_terms, daily_upper, DataRecordName, weekly_lower, daily, VeloxLastModifiedDate, yhat
    """
    DATA_TYPE_NAME: Final[str] = 'AW_ProphetPredictionDF'
    DISPLAY_NAME: Final[str] = "Prophet Prediction Frame"
    PLURAL_DISPLAY_NAME: Final[str] = "Prophet Prediction Frames"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    ADDITIVE_TERMS__FIELD_NAME: Final[WrapperField] = WrapperField("additive_terms", FieldType.DOUBLE, display_name="Additive Terms")
    ADDITIVE_TERMS_LOWER__FIELD_NAME: Final[WrapperField] = WrapperField("additive_terms_lower", FieldType.DOUBLE, display_name="Additive Terms Lower Bound")
    ADDITIVE_TERMS_UPPER__FIELD_NAME: Final[WrapperField] = WrapperField("additive_terms_upper", FieldType.DOUBLE, display_name="Additive Terms Upper Bound")
    DAILY__FIELD_NAME: Final[WrapperField] = WrapperField("daily", FieldType.DOUBLE, display_name="Daily")
    DAILY_LOWER__FIELD_NAME: Final[WrapperField] = WrapperField("daily_lower", FieldType.DOUBLE, display_name="Daily Lower Bound")
    DAILY_UPPER__FIELD_NAME: Final[WrapperField] = WrapperField("daily_upper", FieldType.DOUBLE, display_name="Daily Upper Bound")
    DS__FIELD_NAME: Final[WrapperField] = WrapperField("ds", FieldType.STRING, display_name="Date/Time")
    MULTIPLICATIVE_TERMS__FIELD_NAME: Final[WrapperField] = WrapperField("multiplicative_terms", FieldType.DOUBLE, display_name="Multiplicative Terms")
    MULTIPLICATIVE_TERMS_LOWER__FIELD_NAME: Final[WrapperField] = WrapperField("multiplicative_terms_lower", FieldType.DOUBLE, display_name="Multiplicative Terms Lower Bound")
    MULTIPLICATIVE_TERMS_UPPER__FIELD_NAME: Final[WrapperField] = WrapperField("multiplicative_terms_upper", FieldType.DOUBLE, display_name="Multiplicative Terms Upper Bound")
    TREND__FIELD_NAME: Final[WrapperField] = WrapperField("trend", FieldType.DOUBLE, display_name="trend")
    TREND_LOWER__FIELD_NAME: Final[WrapperField] = WrapperField("trend_lower", FieldType.DOUBLE, display_name="Trend Lower Bound")
    TREND_UPPER__FIELD_NAME: Final[WrapperField] = WrapperField("trend_upper", FieldType.DOUBLE, display_name="Trend Upper Bound")
    WEEKLY__FIELD_NAME: Final[WrapperField] = WrapperField("weekly", FieldType.DOUBLE, display_name="Weekly")
    WEEKLY_LOWER__FIELD_NAME: Final[WrapperField] = WrapperField("weekly_lower", FieldType.DOUBLE, display_name="Weekly Lower Bound")
    WEEKLY_UPPER__FIELD_NAME: Final[WrapperField] = WrapperField("weekly_upper", FieldType.DOUBLE, display_name="Weekly Upper Bound")
    YHAT__FIELD_NAME: Final[WrapperField] = WrapperField("yhat", FieldType.DOUBLE, display_name="Y^")
    YHAT_LOWER__FIELD_NAME: Final[WrapperField] = WrapperField("yhat_lower", FieldType.DOUBLE, display_name="y^_lower")
    YHAT_UPPER__FIELD_NAME: Final[WrapperField] = WrapperField("yhat_upper", FieldType.DOUBLE, display_name="y^_upper")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_additive_terms_field(self, value: Optional[float]):
        """
        Set data field with field name 'additive_terms' on this record model
        """
        self.set_field_value(self.ADDITIVE_TERMS__FIELD_NAME.field_name, value)

    def get_additive_terms_field(self) -> Optional[float]:
        """
        Get data field value with field name 'additive_terms' from this record model
        """
        return self.get_field_value(self.ADDITIVE_TERMS__FIELD_NAME.field_name)

    def set_additive_terms_lower_field(self, value: Optional[float]):
        """
        Set data field with field name 'additive_terms_lower' on this record model
        """
        self.set_field_value(self.ADDITIVE_TERMS_LOWER__FIELD_NAME.field_name, value)

    def get_additive_terms_lower_field(self) -> Optional[float]:
        """
        Get data field value with field name 'additive_terms_lower' from this record model
        """
        return self.get_field_value(self.ADDITIVE_TERMS_LOWER__FIELD_NAME.field_name)

    def set_additive_terms_upper_field(self, value: Optional[float]):
        """
        Set data field with field name 'additive_terms_upper' on this record model
        """
        self.set_field_value(self.ADDITIVE_TERMS_UPPER__FIELD_NAME.field_name, value)

    def get_additive_terms_upper_field(self) -> Optional[float]:
        """
        Get data field value with field name 'additive_terms_upper' from this record model
        """
        return self.get_field_value(self.ADDITIVE_TERMS_UPPER__FIELD_NAME.field_name)

    def set_daily_field(self, value: Optional[float]):
        """
        Set data field with field name 'daily' on this record model
        """
        self.set_field_value(self.DAILY__FIELD_NAME.field_name, value)

    def get_daily_field(self) -> Optional[float]:
        """
        Get data field value with field name 'daily' from this record model
        """
        return self.get_field_value(self.DAILY__FIELD_NAME.field_name)

    def set_daily_lower_field(self, value: Optional[float]):
        """
        Set data field with field name 'daily_lower' on this record model
        """
        self.set_field_value(self.DAILY_LOWER__FIELD_NAME.field_name, value)

    def get_daily_lower_field(self) -> Optional[float]:
        """
        Get data field value with field name 'daily_lower' from this record model
        """
        return self.get_field_value(self.DAILY_LOWER__FIELD_NAME.field_name)

    def set_daily_upper_field(self, value: Optional[float]):
        """
        Set data field with field name 'daily_upper' on this record model
        """
        self.set_field_value(self.DAILY_UPPER__FIELD_NAME.field_name, value)

    def get_daily_upper_field(self) -> Optional[float]:
        """
        Get data field value with field name 'daily_upper' from this record model
        """
        return self.get_field_value(self.DAILY_UPPER__FIELD_NAME.field_name)

    def set_ds_field(self, value: Optional[str]):
        """
        Set data field with field name 'ds' on this record model
        """
        self.set_field_value(self.DS__FIELD_NAME.field_name, value)

    def get_ds_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ds' from this record model
        """
        return self.get_field_value(self.DS__FIELD_NAME.field_name)

    def set_multiplicative_terms_field(self, value: Optional[float]):
        """
        Set data field with field name 'multiplicative_terms' on this record model
        """
        self.set_field_value(self.MULTIPLICATIVE_TERMS__FIELD_NAME.field_name, value)

    def get_multiplicative_terms_field(self) -> Optional[float]:
        """
        Get data field value with field name 'multiplicative_terms' from this record model
        """
        return self.get_field_value(self.MULTIPLICATIVE_TERMS__FIELD_NAME.field_name)

    def set_multiplicative_terms_lower_field(self, value: Optional[float]):
        """
        Set data field with field name 'multiplicative_terms_lower' on this record model
        """
        self.set_field_value(self.MULTIPLICATIVE_TERMS_LOWER__FIELD_NAME.field_name, value)

    def get_multiplicative_terms_lower_field(self) -> Optional[float]:
        """
        Get data field value with field name 'multiplicative_terms_lower' from this record model
        """
        return self.get_field_value(self.MULTIPLICATIVE_TERMS_LOWER__FIELD_NAME.field_name)

    def set_multiplicative_terms_upper_field(self, value: Optional[float]):
        """
        Set data field with field name 'multiplicative_terms_upper' on this record model
        """
        self.set_field_value(self.MULTIPLICATIVE_TERMS_UPPER__FIELD_NAME.field_name, value)

    def get_multiplicative_terms_upper_field(self) -> Optional[float]:
        """
        Get data field value with field name 'multiplicative_terms_upper' from this record model
        """
        return self.get_field_value(self.MULTIPLICATIVE_TERMS_UPPER__FIELD_NAME.field_name)

    def set_trend_field(self, value: Optional[float]):
        """
        Set data field with field name 'trend' on this record model
        """
        self.set_field_value(self.TREND__FIELD_NAME.field_name, value)

    def get_trend_field(self) -> Optional[float]:
        """
        Get data field value with field name 'trend' from this record model
        """
        return self.get_field_value(self.TREND__FIELD_NAME.field_name)

    def set_trend_lower_field(self, value: Optional[float]):
        """
        Set data field with field name 'trend_lower' on this record model
        """
        self.set_field_value(self.TREND_LOWER__FIELD_NAME.field_name, value)

    def get_trend_lower_field(self) -> Optional[float]:
        """
        Get data field value with field name 'trend_lower' from this record model
        """
        return self.get_field_value(self.TREND_LOWER__FIELD_NAME.field_name)

    def set_trend_upper_field(self, value: Optional[float]):
        """
        Set data field with field name 'trend_upper' on this record model
        """
        self.set_field_value(self.TREND_UPPER__FIELD_NAME.field_name, value)

    def get_trend_upper_field(self) -> Optional[float]:
        """
        Get data field value with field name 'trend_upper' from this record model
        """
        return self.get_field_value(self.TREND_UPPER__FIELD_NAME.field_name)

    def set_weekly_field(self, value: Optional[float]):
        """
        Set data field with field name 'weekly' on this record model
        """
        self.set_field_value(self.WEEKLY__FIELD_NAME.field_name, value)

    def get_weekly_field(self) -> Optional[float]:
        """
        Get data field value with field name 'weekly' from this record model
        """
        return self.get_field_value(self.WEEKLY__FIELD_NAME.field_name)

    def set_weekly_lower_field(self, value: Optional[float]):
        """
        Set data field with field name 'weekly_lower' on this record model
        """
        self.set_field_value(self.WEEKLY_LOWER__FIELD_NAME.field_name, value)

    def get_weekly_lower_field(self) -> Optional[float]:
        """
        Get data field value with field name 'weekly_lower' from this record model
        """
        return self.get_field_value(self.WEEKLY_LOWER__FIELD_NAME.field_name)

    def set_weekly_upper_field(self, value: Optional[float]):
        """
        Set data field with field name 'weekly_upper' on this record model
        """
        self.set_field_value(self.WEEKLY_UPPER__FIELD_NAME.field_name, value)

    def get_weekly_upper_field(self) -> Optional[float]:
        """
        Get data field value with field name 'weekly_upper' from this record model
        """
        return self.get_field_value(self.WEEKLY_UPPER__FIELD_NAME.field_name)

    def set_yhat_field(self, value: Optional[float]):
        """
        Set data field with field name 'yhat' on this record model
        """
        self.set_field_value(self.YHAT__FIELD_NAME.field_name, value)

    def get_yhat_field(self) -> Optional[float]:
        """
        Get data field value with field name 'yhat' from this record model
        """
        return self.get_field_value(self.YHAT__FIELD_NAME.field_name)

    def set_yhat_lower_field(self, value: Optional[float]):
        """
        Set data field with field name 'yhat_lower' on this record model
        """
        self.set_field_value(self.YHAT_LOWER__FIELD_NAME.field_name, value)

    def get_yhat_lower_field(self) -> Optional[float]:
        """
        Get data field value with field name 'yhat_lower' from this record model
        """
        return self.get_field_value(self.YHAT_LOWER__FIELD_NAME.field_name)

    def set_yhat_upper_field(self, value: Optional[float]):
        """
        Set data field with field name 'yhat_upper' on this record model
        """
        self.set_field_value(self.YHAT_UPPER__FIELD_NAME.field_name, value)

    def get_yhat_upper_field(self) -> Optional[float]:
        """
        Get data field value with field name 'yhat_upper' from this record model
        """
        return self.get_field_value(self.YHAT_UPPER__FIELD_NAME.field_name)


class AWSSageMakerClientConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type AWSSageMakerClientConfig
    Data Type Display Name: AWS SageMaker Client Configuration (AWS SageMaker Client Configurations)
    Fields: SecretKey, CreatedBy, DataRecordName, AccessKeyId, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, Region
    """
    DATA_TYPE_NAME: Final[str] = 'AWSSageMakerClientConfig'
    DISPLAY_NAME: Final[str] = "AWS SageMaker Client Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "AWS SageMaker Client Configurations"
    ACCESSKEYID__FIELD_NAME: Final[WrapperField] = WrapperField("AccessKeyId", FieldType.STRING, display_name="Access Key ID")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    REGION__FIELD_NAME: Final[WrapperField] = WrapperField("Region", FieldType.STRING, display_name="Region")
    SECRETKEY__FIELD_NAME: Final[WrapperField] = WrapperField("SecretKey", FieldType.STRING, display_name="Secret Key")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AccessKeyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AccessKeyId' on this record model
        """
        self.set_field_value(self.ACCESSKEYID__FIELD_NAME.field_name, value)

    def get_AccessKeyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AccessKeyId' from this record model
        """
        return self.get_field_value(self.ACCESSKEYID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Region_field(self, value: Optional[str]):
        """
        Set data field with field name 'Region' on this record model
        """
        self.set_field_value(self.REGION__FIELD_NAME.field_name, value)

    def get_Region_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Region' from this record model
        """
        return self.get_field_value(self.REGION__FIELD_NAME.field_name)

    def set_SecretKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'SecretKey' on this record model
        """
        self.set_field_value(self.SECRETKEY__FIELD_NAME.field_name, value)

    def get_SecretKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SecretKey' from this record model
        """
        return self.get_field_value(self.SECRETKEY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class BarcodeConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BarcodeConfig
    Data Type Display Name: Barcode Configuration (Barcode Configurations)
    Fields: DefaultPrinter, CreatedBy, CustomPluginClassPath, DateCreated, Field4, Field5, Field2, Field3, Field8, DataRecordName, Field9, BarcodeConfigName, Field6, Field7, VeloxLastModifiedDate, VeloxLastModifiedBy, DataType, Field10, Field1
    The Barcode Configurations Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'BarcodeConfig'
    DISPLAY_NAME: Final[str] = "Barcode Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Barcode Configurations"
    BARCODECONFIGNAME__FIELD_NAME: Final[WrapperField] = WrapperField("BarcodeConfigName", FieldType.STRING, display_name="Barcode Config Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CUSTOMPLUGINCLASSPATH__FIELD_NAME: Final[WrapperField] = WrapperField("CustomPluginClassPath", FieldType.STRING, display_name="Custom Plugin Path")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DataType", FieldType.SELECTION, display_name="DataType")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DEFAULTPRINTER__FIELD_NAME: Final[WrapperField] = WrapperField("DefaultPrinter", FieldType.SELECTION, display_name="Default Printer")
    FIELD1__FIELD_NAME: Final[WrapperField] = WrapperField("Field1", FieldType.SELECTION, display_name="Field 1")
    FIELD10__FIELD_NAME: Final[WrapperField] = WrapperField("Field10", FieldType.SELECTION, display_name="Field 10")
    FIELD2__FIELD_NAME: Final[WrapperField] = WrapperField("Field2", FieldType.SELECTION, display_name="Field 2")
    FIELD3__FIELD_NAME: Final[WrapperField] = WrapperField("Field3", FieldType.SELECTION, display_name="Field 3")
    FIELD4__FIELD_NAME: Final[WrapperField] = WrapperField("Field4", FieldType.SELECTION, display_name="Field 4")
    FIELD5__FIELD_NAME: Final[WrapperField] = WrapperField("Field5", FieldType.SELECTION, display_name="Field 5")
    FIELD6__FIELD_NAME: Final[WrapperField] = WrapperField("Field6", FieldType.SELECTION, display_name="Field 6")
    FIELD7__FIELD_NAME: Final[WrapperField] = WrapperField("Field7", FieldType.SELECTION, display_name="Field 7")
    FIELD8__FIELD_NAME: Final[WrapperField] = WrapperField("Field8", FieldType.SELECTION, display_name="Field 8")
    FIELD9__FIELD_NAME: Final[WrapperField] = WrapperField("Field9", FieldType.SELECTION, display_name="Field 9")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BarcodeConfigName_field(self, value: Optional[str]):
        """
        Set data field with field name 'BarcodeConfigName' on this record model
        """
        self.set_field_value(self.BARCODECONFIGNAME__FIELD_NAME.field_name, value)

    def get_BarcodeConfigName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BarcodeConfigName' from this record model
        """
        return self.get_field_value(self.BARCODECONFIGNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomPluginClassPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomPluginClassPath' on this record model
        """
        self.set_field_value(self.CUSTOMPLUGINCLASSPATH__FIELD_NAME.field_name, value)

    def get_CustomPluginClassPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomPluginClassPath' from this record model
        """
        return self.get_field_value(self.CUSTOMPLUGINCLASSPATH__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DefaultPrinter_field(self, value: Optional[str]):
        """
        Set data field with field name 'DefaultPrinter' on this record model
        """
        self.set_field_value(self.DEFAULTPRINTER__FIELD_NAME.field_name, value)

    def get_DefaultPrinter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DefaultPrinter' from this record model
        """
        return self.get_field_value(self.DEFAULTPRINTER__FIELD_NAME.field_name)

    def set_Field1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field1' on this record model
        """
        self.set_field_value(self.FIELD1__FIELD_NAME.field_name, value)

    def get_Field1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field1' from this record model
        """
        return self.get_field_value(self.FIELD1__FIELD_NAME.field_name)

    def set_Field10_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field10' on this record model
        """
        self.set_field_value(self.FIELD10__FIELD_NAME.field_name, value)

    def get_Field10_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field10' from this record model
        """
        return self.get_field_value(self.FIELD10__FIELD_NAME.field_name)

    def set_Field2_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field2' on this record model
        """
        self.set_field_value(self.FIELD2__FIELD_NAME.field_name, value)

    def get_Field2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field2' from this record model
        """
        return self.get_field_value(self.FIELD2__FIELD_NAME.field_name)

    def set_Field3_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field3' on this record model
        """
        self.set_field_value(self.FIELD3__FIELD_NAME.field_name, value)

    def get_Field3_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field3' from this record model
        """
        return self.get_field_value(self.FIELD3__FIELD_NAME.field_name)

    def set_Field4_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field4' on this record model
        """
        self.set_field_value(self.FIELD4__FIELD_NAME.field_name, value)

    def get_Field4_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field4' from this record model
        """
        return self.get_field_value(self.FIELD4__FIELD_NAME.field_name)

    def set_Field5_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field5' on this record model
        """
        self.set_field_value(self.FIELD5__FIELD_NAME.field_name, value)

    def get_Field5_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field5' from this record model
        """
        return self.get_field_value(self.FIELD5__FIELD_NAME.field_name)

    def set_Field6_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field6' on this record model
        """
        self.set_field_value(self.FIELD6__FIELD_NAME.field_name, value)

    def get_Field6_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field6' from this record model
        """
        return self.get_field_value(self.FIELD6__FIELD_NAME.field_name)

    def set_Field7_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field7' on this record model
        """
        self.set_field_value(self.FIELD7__FIELD_NAME.field_name, value)

    def get_Field7_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field7' from this record model
        """
        return self.get_field_value(self.FIELD7__FIELD_NAME.field_name)

    def set_Field8_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field8' on this record model
        """
        self.set_field_value(self.FIELD8__FIELD_NAME.field_name, value)

    def get_Field8_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field8' from this record model
        """
        return self.get_field_value(self.FIELD8__FIELD_NAME.field_name)

    def set_Field9_field(self, value: Optional[str]):
        """
        Set data field with field name 'Field9' on this record model
        """
        self.set_field_value(self.FIELD9__FIELD_NAME.field_name, value)

    def get_Field9_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Field9' from this record model
        """
        return self.get_field_value(self.FIELD9__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class Basic3DScatterDataModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Basic3DScatterData
    Data Type Display Name: Basic 3D Scatter Datum (Basic 3D Scatter Data)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, x, y, VeloxLastModifiedBy, DateCreated, z
    """
    DATA_TYPE_NAME: Final[str] = 'Basic3DScatterData'
    DISPLAY_NAME: Final[str] = "Basic 3D Scatter Datum"
    PLURAL_DISPLAY_NAME: Final[str] = "Basic 3D Scatter Data"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    X__FIELD_NAME: Final[WrapperField] = WrapperField("x", FieldType.DOUBLE, display_name="x")
    Y__FIELD_NAME: Final[WrapperField] = WrapperField("y", FieldType.DOUBLE, display_name="y")
    Z__FIELD_NAME: Final[WrapperField] = WrapperField("z", FieldType.DOUBLE, display_name="z")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_x_field(self, value: Optional[float]):
        """
        Set data field with field name 'x' on this record model
        """
        self.set_field_value(self.X__FIELD_NAME.field_name, value)

    def get_x_field(self) -> Optional[float]:
        """
        Get data field value with field name 'x' from this record model
        """
        return self.get_field_value(self.X__FIELD_NAME.field_name)

    def set_y_field(self, value: Optional[float]):
        """
        Set data field with field name 'y' on this record model
        """
        self.set_field_value(self.Y__FIELD_NAME.field_name, value)

    def get_y_field(self) -> Optional[float]:
        """
        Get data field value with field name 'y' from this record model
        """
        return self.get_field_value(self.Y__FIELD_NAME.field_name)

    def set_z_field(self, value: Optional[float]):
        """
        Set data field with field name 'z' on this record model
        """
        self.set_field_value(self.Z__FIELD_NAME.field_name, value)

    def get_z_field(self) -> Optional[float]:
        """
        Get data field value with field name 'z' from this record model
        """
        return self.get_field_value(self.Z__FIELD_NAME.field_name)


class BasicIsoSurfacePlotExampleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BasicIsoSurfacePlotExample
    Data Type Display Name: Basic Iso Surface Plot Example (Basic Iso Surface Plot Examples)
    Fields: Svalue, CreatedBy, DataRecordName, VeloxLastModifiedDate, x, VeloxLastModifiedBy, y, DateCreated, z
    """
    DATA_TYPE_NAME: Final[str] = 'BasicIsoSurfacePlotExample'
    DISPLAY_NAME: Final[str] = "Basic Iso Surface Plot Example"
    PLURAL_DISPLAY_NAME: Final[str] = "Basic Iso Surface Plot Examples"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("Svalue", FieldType.DOUBLE, display_name="Svalue")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    X__FIELD_NAME: Final[WrapperField] = WrapperField("x", FieldType.DOUBLE, display_name="x")
    Y__FIELD_NAME: Final[WrapperField] = WrapperField("y", FieldType.DOUBLE, display_name="y")
    Z__FIELD_NAME: Final[WrapperField] = WrapperField("z", FieldType.DOUBLE, display_name="z")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Svalue_field(self, value: Optional[float]):
        """
        Set data field with field name 'Svalue' on this record model
        """
        self.set_field_value(self.SVALUE__FIELD_NAME.field_name, value)

    def get_Svalue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Svalue' from this record model
        """
        return self.get_field_value(self.SVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_x_field(self, value: Optional[float]):
        """
        Set data field with field name 'x' on this record model
        """
        self.set_field_value(self.X__FIELD_NAME.field_name, value)

    def get_x_field(self) -> Optional[float]:
        """
        Get data field value with field name 'x' from this record model
        """
        return self.get_field_value(self.X__FIELD_NAME.field_name)

    def set_y_field(self, value: Optional[float]):
        """
        Set data field with field name 'y' on this record model
        """
        self.set_field_value(self.Y__FIELD_NAME.field_name, value)

    def get_y_field(self) -> Optional[float]:
        """
        Get data field value with field name 'y' from this record model
        """
        return self.get_field_value(self.Y__FIELD_NAME.field_name)

    def set_z_field(self, value: Optional[float]):
        """
        Set data field with field name 'z' on this record model
        """
        self.set_field_value(self.Z__FIELD_NAME.field_name, value)

    def get_z_field(self) -> Optional[float]:
        """
        Get data field value with field name 'z' from this record model
        """
        return self.get_field_value(self.Z__FIELD_NAME.field_name)


class BatchModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Batch
    Data Type Display Name: Batch (Batches)
    Fields: CreatedBy, WorkflowName, BatchId, DateCreated, NumberOfSamples, StartDate, AssignedTo, BatchName, PriorityLevel, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, ExemplarBatchStatus
    """
    DATA_TYPE_NAME: Final[str] = 'Batch'
    DISPLAY_NAME: Final[str] = "Batch"
    PLURAL_DISPLAY_NAME: Final[str] = "Batches"
    ASSIGNEDTO__FIELD_NAME: Final[WrapperField] = WrapperField("AssignedTo", FieldType.SELECTION, display_name="Assigned to")
    BATCHID__FIELD_NAME: Final[WrapperField] = WrapperField("BatchId", FieldType.STRING, display_name="Batch ID")
    BATCHNAME__FIELD_NAME: Final[WrapperField] = WrapperField("BatchName", FieldType.STRING, display_name="Batch Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXEMPLARBATCHSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("ExemplarBatchStatus", FieldType.SELECTION, display_name="Batch Status")
    NUMBEROFSAMPLES__FIELD_NAME: Final[WrapperField] = WrapperField("NumberOfSamples", FieldType.LONG, display_name="Number of Samples")
    PRIORITYLEVEL__FIELD_NAME: Final[WrapperField] = WrapperField("PriorityLevel", FieldType.PICKLIST, display_name="Priority Level")
    STARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("StartDate", FieldType.DATE, display_name="Expected Start Date")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WORKFLOWNAME__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowName", FieldType.SELECTION, display_name="Batch Workflow")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AssignedTo_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedTo' on this record model
        """
        self.set_field_value(self.ASSIGNEDTO__FIELD_NAME.field_name, value)

    def get_AssignedTo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedTo' from this record model
        """
        return self.get_field_value(self.ASSIGNEDTO__FIELD_NAME.field_name)

    def set_BatchId_field(self, value: Optional[str]):
        """
        Set data field with field name 'BatchId' on this record model
        """
        self.set_field_value(self.BATCHID__FIELD_NAME.field_name, value)

    def get_BatchId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BatchId' from this record model
        """
        return self.get_field_value(self.BATCHID__FIELD_NAME.field_name)

    def set_BatchName_field(self, value: Optional[str]):
        """
        Set data field with field name 'BatchName' on this record model
        """
        self.set_field_value(self.BATCHNAME__FIELD_NAME.field_name, value)

    def get_BatchName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BatchName' from this record model
        """
        return self.get_field_value(self.BATCHNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExemplarBatchStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarBatchStatus' on this record model
        """
        self.set_field_value(self.EXEMPLARBATCHSTATUS__FIELD_NAME.field_name, value)

    def get_ExemplarBatchStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarBatchStatus' from this record model
        """
        return self.get_field_value(self.EXEMPLARBATCHSTATUS__FIELD_NAME.field_name)

    def set_NumberOfSamples_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfSamples' on this record model
        """
        self.set_field_value(self.NUMBEROFSAMPLES__FIELD_NAME.field_name, value)

    def get_NumberOfSamples_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfSamples' from this record model
        """
        return self.get_field_value(self.NUMBEROFSAMPLES__FIELD_NAME.field_name)

    def set_PriorityLevel_field(self, value: Optional[str]):
        """
        Set data field with field name 'PriorityLevel' on this record model
        """
        self.set_field_value(self.PRIORITYLEVEL__FIELD_NAME.field_name, value)

    def get_PriorityLevel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PriorityLevel' from this record model
        """
        return self.get_field_value(self.PRIORITYLEVEL__FIELD_NAME.field_name)

    def set_StartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartDate' on this record model
        """
        self.set_field_value(self.STARTDATE__FIELD_NAME.field_name, value)

    def get_StartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartDate' from this record model
        """
        return self.get_field_value(self.STARTDATE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowName' on this record model
        """
        self.set_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_WorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowName' from this record model
        """
        return self.get_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name)


class BioAnalyzerResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioAnalyzerResult
    Data Type Display Name: BioAnalyzer Result (BioAnalyzer Results)
    Fields: CreatedBy, PeakValue, PeakRegionIdentifier, DateCreated, Area, DataRecordName, Molarity, VeloxLastModifiedDate, VeloxLastModifiedBy, AvgBPSize, MolarityUnits
    """
    DATA_TYPE_NAME: Final[str] = 'BioAnalyzerResult'
    DISPLAY_NAME: Final[str] = "BioAnalyzer Result"
    PLURAL_DISPLAY_NAME: Final[str] = "BioAnalyzer Results"
    AREA__FIELD_NAME: Final[WrapperField] = WrapperField("Area", FieldType.DOUBLE, display_name="Area")
    AVGBPSIZE__FIELD_NAME: Final[WrapperField] = WrapperField("AvgBPSize", FieldType.DOUBLE, display_name="Avg BP Size")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MOLARITY__FIELD_NAME: Final[WrapperField] = WrapperField("Molarity", FieldType.DOUBLE, display_name="Molarity")
    MOLARITYUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("MolarityUnits", FieldType.STRING, display_name="Molarity Units")
    PEAKREGIONIDENTIFIER__FIELD_NAME: Final[WrapperField] = WrapperField("PeakRegionIdentifier", FieldType.STRING, display_name="Peak/Region Identifier")
    PEAKVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("PeakValue", FieldType.DOUBLE, display_name="Peak Value")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Area_field(self, value: Optional[float]):
        """
        Set data field with field name 'Area' on this record model
        """
        self.set_field_value(self.AREA__FIELD_NAME.field_name, value)

    def get_Area_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Area' from this record model
        """
        return self.get_field_value(self.AREA__FIELD_NAME.field_name)

    def set_AvgBPSize_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgBPSize' on this record model
        """
        self.set_field_value(self.AVGBPSIZE__FIELD_NAME.field_name, value)

    def get_AvgBPSize_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgBPSize' from this record model
        """
        return self.get_field_value(self.AVGBPSIZE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Molarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molarity' on this record model
        """
        self.set_field_value(self.MOLARITY__FIELD_NAME.field_name, value)

    def get_Molarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molarity' from this record model
        """
        return self.get_field_value(self.MOLARITY__FIELD_NAME.field_name)

    def set_MolarityUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'MolarityUnits' on this record model
        """
        self.set_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name, value)

    def get_MolarityUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MolarityUnits' from this record model
        """
        return self.get_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name)

    def set_PeakRegionIdentifier_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeakRegionIdentifier' on this record model
        """
        self.set_field_value(self.PEAKREGIONIDENTIFIER__FIELD_NAME.field_name, value)

    def get_PeakRegionIdentifier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeakRegionIdentifier' from this record model
        """
        return self.get_field_value(self.PEAKREGIONIDENTIFIER__FIELD_NAME.field_name)

    def set_PeakValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'PeakValue' on this record model
        """
        self.set_field_value(self.PEAKVALUE__FIELD_NAME.field_name, value)

    def get_PeakValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PeakValue' from this record model
        """
        return self.get_field_value(self.PEAKVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class BioConjugateModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioConjugate
    Data Type Display Name: Bio Conjugate (Bio Conjugates)
    Fields: CreatedBy, ConsumableType, DateCreated, Vendor, DataRecordName, ExpirationDate, VeloxLastModifiedDate, VeloxLastModifiedBy, RegistryId, ConsumableName, LotNumber
    """
    DATA_TYPE_NAME: Final[str] = 'BioConjugate'
    DISPLAY_NAME: Final[str] = "Bio Conjugate"
    PLURAL_DISPLAY_NAME: Final[str] = "Bio Conjugates"
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Conjugate Name")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Conjugate Subtype")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.SELECTION, display_name="Vendor")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class BioConjugatePartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioConjugatePart
    Data Type Display Name: Bio Conjugate Part (Bio Conjugate Parts)
    Fields: CreatedBy, SequenceHash, ConsumableType, MultiParentLink152, DateCreated, Sequence, Vendor, QuantityOnHand, MultiParentLink276, Units, QuantityPerItem, MultiParentLink201, ReorderLevelQuantity, ChemicalProperties, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, RegistryId, ConsumableName, HELMHash, HELM
    """
    DATA_TYPE_NAME: Final[str] = 'BioConjugatePart'
    DISPLAY_NAME: Final[str] = "Bio Conjugate Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Bio Conjugate Parts"
    CHEMICALPROPERTIES__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalProperties", FieldType.SIDE_LINK, display_name="Chemical Properties")
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Name")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    HELM__FIELD_NAME: Final[WrapperField] = WrapperField("HELM", FieldType.STRING, display_name="HELM")
    HELMHASH__FIELD_NAME: Final[WrapperField] = WrapperField("HELMHash", FieldType.STRING, display_name="HELM Hash")
    MULTIPARENTLINK152__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink152", FieldType.MULTIPARENTLINK, display_name="Linked RNA Part")
    MULTIPARENTLINK201__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink201", FieldType.MULTIPARENTLINK, display_name="Linked Protein Part")
    MULTIPARENTLINK276__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink276", FieldType.MULTIPARENTLINK, display_name="Linked Chemical Reagent Part")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    SEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("Sequence", FieldType.STRING, display_name="Sequence")
    SEQUENCEHASH__FIELD_NAME: Final[WrapperField] = WrapperField("SequenceHash", FieldType.STRING, display_name="Sequence Hash")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.SELECTION, display_name="Vendor")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ChemicalProperties_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalProperties' on this record model
        """
        self.set_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name, value)

    def get_ChemicalProperties_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalProperties' from this record model
        """
        return self.get_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_HELMHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELMHash' on this record model
        """
        self.set_field_value(self.HELMHASH__FIELD_NAME.field_name, value)

    def get_HELMHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELMHash' from this record model
        """
        return self.get_field_value(self.HELMHASH__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Sequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'Sequence' on this record model
        """
        self.set_field_value(self.SEQUENCE__FIELD_NAME.field_name, value)

    def get_Sequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Sequence' from this record model
        """
        return self.get_field_value(self.SEQUENCE__FIELD_NAME.field_name)

    def set_SequenceHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceHash' on this record model
        """
        self.set_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name, value)

    def get_SequenceHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceHash' from this record model
        """
        return self.get_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class BioRadResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioRadResult
    Data Type Display Name: Bio-Rad qPCR Result (Bio-Rad qPCR Results)
    Fields: LogStartingQuantity, CqStdDev, CqMean, CreatedBy, BiologicalSetName, DateCreated, SetPoint, Cq, Target, DataRecordName, Content, VeloxLastModifiedDate, VeloxLastModifiedBy, SQStdDev, WellNote, Fluor, SQMean
    """
    DATA_TYPE_NAME: Final[str] = 'BioRadResult'
    DISPLAY_NAME: Final[str] = "Bio-Rad qPCR Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Bio-Rad qPCR Results"
    BIOLOGICALSETNAME__FIELD_NAME: Final[WrapperField] = WrapperField("BiologicalSetName", FieldType.STRING, display_name="Biological Set Name")
    CONTENT__FIELD_NAME: Final[WrapperField] = WrapperField("Content", FieldType.STRING, display_name="Content")
    CQ__FIELD_NAME: Final[WrapperField] = WrapperField("Cq", FieldType.DOUBLE, display_name="Cq")
    CQMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("CqMean", FieldType.DOUBLE, display_name="Cq Mean")
    CQSTDDEV__FIELD_NAME: Final[WrapperField] = WrapperField("CqStdDev", FieldType.DOUBLE, display_name="Cq Std Dev")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FLUOR__FIELD_NAME: Final[WrapperField] = WrapperField("Fluor", FieldType.STRING, display_name="Fluor")
    LOGSTARTINGQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("LogStartingQuantity", FieldType.DOUBLE, display_name="Log Starting Quantity")
    SQMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("SQMean", FieldType.DOUBLE, display_name="SQ Mean")
    SQSTDDEV__FIELD_NAME: Final[WrapperField] = WrapperField("SQStdDev", FieldType.DOUBLE, display_name="SQ Std. Dev")
    SETPOINT__FIELD_NAME: Final[WrapperField] = WrapperField("SetPoint", FieldType.DOUBLE, display_name="Set Point")
    TARGET__FIELD_NAME: Final[WrapperField] = WrapperField("Target", FieldType.STRING, display_name="Target")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WELLNOTE__FIELD_NAME: Final[WrapperField] = WrapperField("WellNote", FieldType.STRING, display_name="Well Note")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BiologicalSetName_field(self, value: Optional[str]):
        """
        Set data field with field name 'BiologicalSetName' on this record model
        """
        self.set_field_value(self.BIOLOGICALSETNAME__FIELD_NAME.field_name, value)

    def get_BiologicalSetName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BiologicalSetName' from this record model
        """
        return self.get_field_value(self.BIOLOGICALSETNAME__FIELD_NAME.field_name)

    def set_Content_field(self, value: Optional[str]):
        """
        Set data field with field name 'Content' on this record model
        """
        self.set_field_value(self.CONTENT__FIELD_NAME.field_name, value)

    def get_Content_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Content' from this record model
        """
        return self.get_field_value(self.CONTENT__FIELD_NAME.field_name)

    def set_Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Cq' on this record model
        """
        self.set_field_value(self.CQ__FIELD_NAME.field_name, value)

    def get_Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Cq' from this record model
        """
        return self.get_field_value(self.CQ__FIELD_NAME.field_name)

    def set_CqMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'CqMean' on this record model
        """
        self.set_field_value(self.CQMEAN__FIELD_NAME.field_name, value)

    def get_CqMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CqMean' from this record model
        """
        return self.get_field_value(self.CQMEAN__FIELD_NAME.field_name)

    def set_CqStdDev_field(self, value: Optional[float]):
        """
        Set data field with field name 'CqStdDev' on this record model
        """
        self.set_field_value(self.CQSTDDEV__FIELD_NAME.field_name, value)

    def get_CqStdDev_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CqStdDev' from this record model
        """
        return self.get_field_value(self.CQSTDDEV__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Fluor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Fluor' on this record model
        """
        self.set_field_value(self.FLUOR__FIELD_NAME.field_name, value)

    def get_Fluor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Fluor' from this record model
        """
        return self.get_field_value(self.FLUOR__FIELD_NAME.field_name)

    def set_LogStartingQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogStartingQuantity' on this record model
        """
        self.set_field_value(self.LOGSTARTINGQUANTITY__FIELD_NAME.field_name, value)

    def get_LogStartingQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogStartingQuantity' from this record model
        """
        return self.get_field_value(self.LOGSTARTINGQUANTITY__FIELD_NAME.field_name)

    def set_SQMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'SQMean' on this record model
        """
        self.set_field_value(self.SQMEAN__FIELD_NAME.field_name, value)

    def get_SQMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SQMean' from this record model
        """
        return self.get_field_value(self.SQMEAN__FIELD_NAME.field_name)

    def set_SQStdDev_field(self, value: Optional[float]):
        """
        Set data field with field name 'SQStdDev' on this record model
        """
        self.set_field_value(self.SQSTDDEV__FIELD_NAME.field_name, value)

    def get_SQStdDev_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SQStdDev' from this record model
        """
        return self.get_field_value(self.SQSTDDEV__FIELD_NAME.field_name)

    def set_SetPoint_field(self, value: Optional[float]):
        """
        Set data field with field name 'SetPoint' on this record model
        """
        self.set_field_value(self.SETPOINT__FIELD_NAME.field_name, value)

    def get_SetPoint_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SetPoint' from this record model
        """
        return self.get_field_value(self.SETPOINT__FIELD_NAME.field_name)

    def set_Target_field(self, value: Optional[str]):
        """
        Set data field with field name 'Target' on this record model
        """
        self.set_field_value(self.TARGET__FIELD_NAME.field_name, value)

    def get_Target_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Target' from this record model
        """
        return self.get_field_value(self.TARGET__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WellNote_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellNote' on this record model
        """
        self.set_field_value(self.WELLNOTE__FIELD_NAME.field_name, value)

    def get_WellNote_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellNote' from this record model
        """
        return self.get_field_value(self.WELLNOTE__FIELD_NAME.field_name)


class BioRegSeqAnnotationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioRegSeqAnnotation
    Data Type Display Name: Bio Reg Seq Annotation (Bio Reg Seq Annotations)
    Fields: Label, Product, DateCreated, AnnotationType, StartPosition, Gene, VeloxLastModifiedBy, StandardName, EndPosition, db_xref, NegativeStrand, Organism, CreatedBy, NCBIFunction, Operon, Experiment, Chromosome, ProteinId, DataRecordName, Note, VeloxLastModifiedDate, LocusTag
    Includes useful annotations imported via NCBI Genbank file feature format.
https://www.insdc.org/submitting-standards/feature-table/
    """
    DATA_TYPE_NAME: Final[str] = 'BioRegSeqAnnotation'
    DISPLAY_NAME: Final[str] = "Bio Reg Seq Annotation"
    PLURAL_DISPLAY_NAME: Final[str] = "Bio Reg Seq Annotations"
    ANNOTATIONTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("AnnotationType", FieldType.STRING, display_name="Annotation Type")
    CHROMOSOME__FIELD_NAME: Final[WrapperField] = WrapperField("Chromosome", FieldType.STRING, display_name="Chromosome")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ENDPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("EndPosition", FieldType.LONG, display_name="End Position (1-based)")
    EXPERIMENT__FIELD_NAME: Final[WrapperField] = WrapperField("Experiment", FieldType.STRING, display_name="Experiment")
    GENE__FIELD_NAME: Final[WrapperField] = WrapperField("Gene", FieldType.STRING, display_name="Gene")
    LABEL__FIELD_NAME: Final[WrapperField] = WrapperField("Label", FieldType.STRING, display_name="Label")
    LOCUSTAG__FIELD_NAME: Final[WrapperField] = WrapperField("LocusTag", FieldType.STRING, display_name="Locus Tag")
    NCBIFUNCTION__FIELD_NAME: Final[WrapperField] = WrapperField("NCBIFunction", FieldType.STRING, display_name="Function")
    NEGATIVESTRAND__FIELD_NAME: Final[WrapperField] = WrapperField("NegativeStrand", FieldType.BOOLEAN, display_name="Negative Strand (Reverse Reading)")
    NOTE__FIELD_NAME: Final[WrapperField] = WrapperField("Note", FieldType.STRING, display_name="Note")
    OPERON__FIELD_NAME: Final[WrapperField] = WrapperField("Operon", FieldType.STRING, display_name="Operon")
    ORGANISM__FIELD_NAME: Final[WrapperField] = WrapperField("Organism", FieldType.STRING, display_name="Organism")
    PRODUCT__FIELD_NAME: Final[WrapperField] = WrapperField("Product", FieldType.STRING, display_name="Product")
    PROTEINID__FIELD_NAME: Final[WrapperField] = WrapperField("ProteinId", FieldType.STRING, display_name="Protein ID")
    STANDARDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("StandardName", FieldType.STRING, display_name="Standard Name")
    STARTPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("StartPosition", FieldType.LONG, display_name="Start Position (1-based)")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    DB_XREF__FIELD_NAME: Final[WrapperField] = WrapperField("db_xref", FieldType.STRING, display_name="db_xref")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AnnotationType_field(self, value: Optional[str]):
        """
        Set data field with field name 'AnnotationType' on this record model
        """
        self.set_field_value(self.ANNOTATIONTYPE__FIELD_NAME.field_name, value)

    def get_AnnotationType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AnnotationType' from this record model
        """
        return self.get_field_value(self.ANNOTATIONTYPE__FIELD_NAME.field_name)

    def set_Chromosome_field(self, value: Optional[str]):
        """
        Set data field with field name 'Chromosome' on this record model
        """
        self.set_field_value(self.CHROMOSOME__FIELD_NAME.field_name, value)

    def get_Chromosome_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Chromosome' from this record model
        """
        return self.get_field_value(self.CHROMOSOME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EndPosition_field(self, value: Optional[int]):
        """
        Set data field with field name 'EndPosition' on this record model
        """
        self.set_field_value(self.ENDPOSITION__FIELD_NAME.field_name, value)

    def get_EndPosition_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EndPosition' from this record model
        """
        return self.get_field_value(self.ENDPOSITION__FIELD_NAME.field_name)

    def set_Experiment_field(self, value: Optional[str]):
        """
        Set data field with field name 'Experiment' on this record model
        """
        self.set_field_value(self.EXPERIMENT__FIELD_NAME.field_name, value)

    def get_Experiment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Experiment' from this record model
        """
        return self.get_field_value(self.EXPERIMENT__FIELD_NAME.field_name)

    def set_Gene_field(self, value: Optional[str]):
        """
        Set data field with field name 'Gene' on this record model
        """
        self.set_field_value(self.GENE__FIELD_NAME.field_name, value)

    def get_Gene_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Gene' from this record model
        """
        return self.get_field_value(self.GENE__FIELD_NAME.field_name)

    def set_Label_field(self, value: Optional[str]):
        """
        Set data field with field name 'Label' on this record model
        """
        self.set_field_value(self.LABEL__FIELD_NAME.field_name, value)

    def get_Label_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Label' from this record model
        """
        return self.get_field_value(self.LABEL__FIELD_NAME.field_name)

    def set_LocusTag_field(self, value: Optional[str]):
        """
        Set data field with field name 'LocusTag' on this record model
        """
        self.set_field_value(self.LOCUSTAG__FIELD_NAME.field_name, value)

    def get_LocusTag_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LocusTag' from this record model
        """
        return self.get_field_value(self.LOCUSTAG__FIELD_NAME.field_name)

    def set_NCBIFunction_field(self, value: Optional[str]):
        """
        Set data field with field name 'NCBIFunction' on this record model
        """
        self.set_field_value(self.NCBIFUNCTION__FIELD_NAME.field_name, value)

    def get_NCBIFunction_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NCBIFunction' from this record model
        """
        return self.get_field_value(self.NCBIFUNCTION__FIELD_NAME.field_name)

    def set_NegativeStrand_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NegativeStrand' on this record model
        """
        self.set_field_value(self.NEGATIVESTRAND__FIELD_NAME.field_name, value)

    def get_NegativeStrand_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NegativeStrand' from this record model
        """
        return self.get_field_value(self.NEGATIVESTRAND__FIELD_NAME.field_name)

    def set_Note_field(self, value: Optional[str]):
        """
        Set data field with field name 'Note' on this record model
        """
        self.set_field_value(self.NOTE__FIELD_NAME.field_name, value)

    def get_Note_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Note' from this record model
        """
        return self.get_field_value(self.NOTE__FIELD_NAME.field_name)

    def set_Operon_field(self, value: Optional[str]):
        """
        Set data field with field name 'Operon' on this record model
        """
        self.set_field_value(self.OPERON__FIELD_NAME.field_name, value)

    def get_Operon_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Operon' from this record model
        """
        return self.get_field_value(self.OPERON__FIELD_NAME.field_name)

    def set_Organism_field(self, value: Optional[str]):
        """
        Set data field with field name 'Organism' on this record model
        """
        self.set_field_value(self.ORGANISM__FIELD_NAME.field_name, value)

    def get_Organism_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Organism' from this record model
        """
        return self.get_field_value(self.ORGANISM__FIELD_NAME.field_name)

    def set_Product_field(self, value: Optional[str]):
        """
        Set data field with field name 'Product' on this record model
        """
        self.set_field_value(self.PRODUCT__FIELD_NAME.field_name, value)

    def get_Product_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Product' from this record model
        """
        return self.get_field_value(self.PRODUCT__FIELD_NAME.field_name)

    def set_ProteinId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProteinId' on this record model
        """
        self.set_field_value(self.PROTEINID__FIELD_NAME.field_name, value)

    def get_ProteinId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProteinId' from this record model
        """
        return self.get_field_value(self.PROTEINID__FIELD_NAME.field_name)

    def set_StandardName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StandardName' on this record model
        """
        self.set_field_value(self.STANDARDNAME__FIELD_NAME.field_name, value)

    def get_StandardName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StandardName' from this record model
        """
        return self.get_field_value(self.STANDARDNAME__FIELD_NAME.field_name)

    def set_StartPosition_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartPosition' on this record model
        """
        self.set_field_value(self.STARTPOSITION__FIELD_NAME.field_name, value)

    def get_StartPosition_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartPosition' from this record model
        """
        return self.get_field_value(self.STARTPOSITION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_db_xref_field(self, value: Optional[str]):
        """
        Set data field with field name 'db_xref' on this record model
        """
        self.set_field_value(self.DB_XREF__FIELD_NAME.field_name, value)

    def get_db_xref_field(self) -> Optional[str]:
        """
        Get data field value with field name 'db_xref' from this record model
        """
        return self.get_field_value(self.DB_XREF__FIELD_NAME.field_name)


class BioRegSequenceTypeSettingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioRegSequenceTypeSetting
    Data Type Display Name: Bio Reg Sequence Type Setting (Bio Reg Sequence Type Settings)
    Fields: RegistryIdPaddingDigits, SequenceDataField, AutoRegisterChildType, CreatedBy, DateCreated, RegistrationIDPrefix, SequenceType, DisableDuplicateCheck, InheritParentRegistryID, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, UniqueDataFields, DisableSequenceValiation, RegistryDataType
    """
    DATA_TYPE_NAME: Final[str] = 'BioRegSequenceTypeSetting'
    DISPLAY_NAME: Final[str] = "Bio Reg Sequence Type Setting"
    PLURAL_DISPLAY_NAME: Final[str] = "Bio Reg Sequence Type Settings"
    AUTOREGISTERCHILDTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("AutoRegisterChildType", FieldType.SELECTION, display_name="Auto Register Child Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DISABLEDUPLICATECHECK__FIELD_NAME: Final[WrapperField] = WrapperField("DisableDuplicateCheck", FieldType.BOOLEAN, display_name="Disable Duplicate Check")
    DISABLESEQUENCEVALIATION__FIELD_NAME: Final[WrapperField] = WrapperField("DisableSequenceValiation", FieldType.BOOLEAN, display_name="Disable Sequence Valiation")
    INHERITPARENTREGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("InheritParentRegistryID", FieldType.BOOLEAN, display_name="Inherit Parent Registry ID")
    REGISTRATIONIDPREFIX__FIELD_NAME: Final[WrapperField] = WrapperField("RegistrationIDPrefix", FieldType.STRING, display_name="Registration ID Prefix")
    REGISTRYDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryDataType", FieldType.SELECTION, display_name="Registry Data Type")
    REGISTRYIDPADDINGDIGITS__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryIdPaddingDigits", FieldType.INTEGER, display_name="Registry Id Padding Digits")
    SEQUENCEDATAFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("SequenceDataField", FieldType.SELECTION, display_name="Sequence Data Field")
    SEQUENCETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SequenceType", FieldType.PICKLIST, display_name="Sequence Type")
    UNIQUEDATAFIELDS__FIELD_NAME: Final[WrapperField] = WrapperField("UniqueDataFields", FieldType.SELECTION, display_name="Unique Data Fields")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AutoRegisterChildType_field(self, value: Optional[str]):
        """
        Set data field with field name 'AutoRegisterChildType' on this record model
        """
        self.set_field_value(self.AUTOREGISTERCHILDTYPE__FIELD_NAME.field_name, value)

    def get_AutoRegisterChildType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AutoRegisterChildType' from this record model
        """
        return self.get_field_value(self.AUTOREGISTERCHILDTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DisableDuplicateCheck_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DisableDuplicateCheck' on this record model
        """
        self.set_field_value(self.DISABLEDUPLICATECHECK__FIELD_NAME.field_name, value)

    def get_DisableDuplicateCheck_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DisableDuplicateCheck' from this record model
        """
        return self.get_field_value(self.DISABLEDUPLICATECHECK__FIELD_NAME.field_name)

    def set_DisableSequenceValiation_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DisableSequenceValiation' on this record model
        """
        self.set_field_value(self.DISABLESEQUENCEVALIATION__FIELD_NAME.field_name, value)

    def get_DisableSequenceValiation_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DisableSequenceValiation' from this record model
        """
        return self.get_field_value(self.DISABLESEQUENCEVALIATION__FIELD_NAME.field_name)

    def set_InheritParentRegistryID_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InheritParentRegistryID' on this record model
        """
        self.set_field_value(self.INHERITPARENTREGISTRYID__FIELD_NAME.field_name, value)

    def get_InheritParentRegistryID_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InheritParentRegistryID' from this record model
        """
        return self.get_field_value(self.INHERITPARENTREGISTRYID__FIELD_NAME.field_name)

    def set_RegistrationIDPrefix_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistrationIDPrefix' on this record model
        """
        self.set_field_value(self.REGISTRATIONIDPREFIX__FIELD_NAME.field_name, value)

    def get_RegistrationIDPrefix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistrationIDPrefix' from this record model
        """
        return self.get_field_value(self.REGISTRATIONIDPREFIX__FIELD_NAME.field_name)

    def set_RegistryDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryDataType' on this record model
        """
        self.set_field_value(self.REGISTRYDATATYPE__FIELD_NAME.field_name, value)

    def get_RegistryDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryDataType' from this record model
        """
        return self.get_field_value(self.REGISTRYDATATYPE__FIELD_NAME.field_name)

    def set_RegistryIdPaddingDigits_field(self, value: Optional[int]):
        """
        Set data field with field name 'RegistryIdPaddingDigits' on this record model
        """
        self.set_field_value(self.REGISTRYIDPADDINGDIGITS__FIELD_NAME.field_name, value)

    def get_RegistryIdPaddingDigits_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RegistryIdPaddingDigits' from this record model
        """
        return self.get_field_value(self.REGISTRYIDPADDINGDIGITS__FIELD_NAME.field_name)

    def set_SequenceDataField_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceDataField' on this record model
        """
        self.set_field_value(self.SEQUENCEDATAFIELD__FIELD_NAME.field_name, value)

    def get_SequenceDataField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceDataField' from this record model
        """
        return self.get_field_value(self.SEQUENCEDATAFIELD__FIELD_NAME.field_name)

    def set_SequenceType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceType' on this record model
        """
        self.set_field_value(self.SEQUENCETYPE__FIELD_NAME.field_name, value)

    def get_SequenceType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceType' from this record model
        """
        return self.get_field_value(self.SEQUENCETYPE__FIELD_NAME.field_name)

    def set_UniqueDataFields_field(self, value: Optional[str]):
        """
        Set data field with field name 'UniqueDataFields' on this record model
        """
        self.set_field_value(self.UNIQUEDATAFIELDS__FIELD_NAME.field_name, value)

    def get_UniqueDataFields_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UniqueDataFields' from this record model
        """
        return self.get_field_value(self.UNIQUEDATAFIELDS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class BioSpecResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BioSpecResult
    Data Type Display Name: BioSpec Result (BioSpec Results)
    Fields: A260230, CreatedBy, DataRecordName, VeloxLastModifiedDate, A260280, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'BioSpecResult'
    DISPLAY_NAME: Final[str] = "BioSpec Result"
    PLURAL_DISPLAY_NAME: Final[str] = "BioSpec Results"
    A260230__FIELD_NAME: Final[WrapperField] = WrapperField("A260230", FieldType.DOUBLE, display_name="A260/230")
    A260280__FIELD_NAME: Final[WrapperField] = WrapperField("A260280", FieldType.DOUBLE, display_name="A260/280")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A260230_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260230' on this record model
        """
        self.set_field_value(self.A260230__FIELD_NAME.field_name, value)

    def get_A260230_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260230' from this record model
        """
        return self.get_field_value(self.A260230__FIELD_NAME.field_name)

    def set_A260280_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260280' on this record model
        """
        self.set_field_value(self.A260280__FIELD_NAME.field_name, value)

    def get_A260280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260280' from this record model
        """
        return self.get_field_value(self.A260280__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class BloodModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Blood
    Data Type Display Name: Blood (Bloods)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, DrawSite
    """
    DATA_TYPE_NAME: Final[str] = 'Blood'
    DISPLAY_NAME: Final[str] = "Blood"
    PLURAL_DISPLAY_NAME: Final[str] = "Bloods"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DRAWSITE__FIELD_NAME: Final[WrapperField] = WrapperField("DrawSite", FieldType.PICKLIST, display_name="Draw Site")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DrawSite_field(self, value: Optional[str]):
        """
        Set data field with field name 'DrawSite' on this record model
        """
        self.set_field_value(self.DRAWSITE__FIELD_NAME.field_name, value)

    def get_DrawSite_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DrawSite' from this record model
        """
        return self.get_field_value(self.DRAWSITE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class BodyMassModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BodyMass
    Data Type Display Name: Body Mass (Body Masses)
    Fields: Mass, CreatedBy, DataRecordName, VeloxLastModifiedDate, MassUnits, VeloxLastModifiedBy, DateCreated, ObservationInstrument
    """
    DATA_TYPE_NAME: Final[str] = 'BodyMass'
    DISPLAY_NAME: Final[str] = "Body Mass"
    PLURAL_DISPLAY_NAME: Final[str] = "Body Masses"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MASS__FIELD_NAME: Final[WrapperField] = WrapperField("Mass", FieldType.DOUBLE, display_name="Mass")
    MASSUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("MassUnits", FieldType.PICKLIST, display_name="Mass Units")
    OBSERVATIONINSTRUMENT__FIELD_NAME: Final[WrapperField] = WrapperField("ObservationInstrument", FieldType.SELECTION, display_name="Body Mass Scale")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Mass_field(self, value: Optional[float]):
        """
        Set data field with field name 'Mass' on this record model
        """
        self.set_field_value(self.MASS__FIELD_NAME.field_name, value)

    def get_Mass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Mass' from this record model
        """
        return self.get_field_value(self.MASS__FIELD_NAME.field_name)

    def set_MassUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'MassUnits' on this record model
        """
        self.set_field_value(self.MASSUNITS__FIELD_NAME.field_name, value)

    def get_MassUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MassUnits' from this record model
        """
        return self.get_field_value(self.MASSUNITS__FIELD_NAME.field_name)

    def set_ObservationInstrument_field(self, value: Optional[str]):
        """
        Set data field with field name 'ObservationInstrument' on this record model
        """
        self.set_field_value(self.OBSERVATIONINSTRUMENT__FIELD_NAME.field_name, value)

    def get_ObservationInstrument_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ObservationInstrument' from this record model
        """
        return self.get_field_value(self.OBSERVATIONINSTRUMENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class BrainTissueModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type BrainTissue
    Data Type Display Name: Brain Tissue (Brain Tissues)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, BrainTissueType
    """
    DATA_TYPE_NAME: Final[str] = 'BrainTissue'
    DISPLAY_NAME: Final[str] = "Brain Tissue"
    PLURAL_DISPLAY_NAME: Final[str] = "Brain Tissues"
    BRAINTISSUETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("BrainTissueType", FieldType.SELECTION, display_name="Brain Tissue Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BrainTissueType_field(self, value: Optional[str]):
        """
        Set data field with field name 'BrainTissueType' on this record model
        """
        self.set_field_value(self.BRAINTISSUETYPE__FIELD_NAME.field_name, value)

    def get_BrainTissueType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BrainTissueType' from this record model
        """
        return self.get_field_value(self.BRAINTISSUETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class C_SapioCon23Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type C_SapioCon23
    Data Type Display Name: SAPIOCON 23 (SAPIOCON 23)
    Fields: C_ExampleSelectionList, CreatedBy, DataRecordName, C_SapioConComments, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, C_HomeWorld, C_DisplayName
    """
    DATA_TYPE_NAME: Final[str] = 'C_SapioCon23'
    DISPLAY_NAME: Final[str] = "SAPIOCON 23"
    PLURAL_DISPLAY_NAME: Final[str] = "SAPIOCON 23"
    C_DISPLAYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("C_DisplayName", FieldType.STRING, display_name="Display Name")
    C_EXAMPLESELECTIONLIST__FIELD_NAME: Final[WrapperField] = WrapperField("C_ExampleSelectionList", FieldType.SELECTION, display_name="Example Selection List")
    C_HOMEWORLD__FIELD_NAME: Final[WrapperField] = WrapperField("C_HomeWorld", FieldType.SELECTION, display_name="Home World")
    C_SAPIOCONCOMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("C_SapioConComments", FieldType.STRING, display_name="SAPIOCON 23 Comments")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_C_DisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'C_DisplayName' on this record model
        """
        self.set_field_value(self.C_DISPLAYNAME__FIELD_NAME.field_name, value)

    def get_C_DisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'C_DisplayName' from this record model
        """
        return self.get_field_value(self.C_DISPLAYNAME__FIELD_NAME.field_name)

    def set_C_ExampleSelectionList_field(self, value: Optional[str]):
        """
        Set data field with field name 'C_ExampleSelectionList' on this record model
        """
        self.set_field_value(self.C_EXAMPLESELECTIONLIST__FIELD_NAME.field_name, value)

    def get_C_ExampleSelectionList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'C_ExampleSelectionList' from this record model
        """
        return self.get_field_value(self.C_EXAMPLESELECTIONLIST__FIELD_NAME.field_name)

    def set_C_HomeWorld_field(self, value: Optional[str]):
        """
        Set data field with field name 'C_HomeWorld' on this record model
        """
        self.set_field_value(self.C_HOMEWORLD__FIELD_NAME.field_name, value)

    def get_C_HomeWorld_field(self) -> Optional[str]:
        """
        Get data field value with field name 'C_HomeWorld' from this record model
        """
        return self.get_field_value(self.C_HOMEWORLD__FIELD_NAME.field_name)

    def set_C_SapioConComments_field(self, value: Optional[str]):
        """
        Set data field with field name 'C_SapioConComments' on this record model
        """
        self.set_field_value(self.C_SAPIOCONCOMMENTS__FIELD_NAME.field_name, value)

    def get_C_SapioConComments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'C_SapioConComments' from this record model
        """
        return self.get_field_value(self.C_SAPIOCONCOMMENTS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class C_SapioConTestModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type C_SapioConTest
    Data Type Display Name: Sapio Con Test (Sapio Con Tests)
    Fields: Description, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, Name
    """
    DATA_TYPE_NAME: Final[str] = 'C_SapioConTest'
    DISPLAY_NAME: Final[str] = "Sapio Con Test"
    PLURAL_DISPLAY_NAME: Final[str] = "Sapio Con Tests"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    NAME__FIELD_NAME: Final[WrapperField] = WrapperField("Name", FieldType.STRING, display_name="Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CDLConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CDLConfig
    Data Type Display Name: Complex Data Loader Config (Complex Data Loader Configs)
    Fields: Options, CreatedBy, DateCreated, ConfigurationName, IdentifierType, DataTypeRules2, Options2, DataTypeRules, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DataTypeName, ExplicitlyMapped
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: Final[str] = 'CDLConfig'
    DISPLAY_NAME: Final[str] = "Complex Data Loader Config"
    PLURAL_DISPLAY_NAME: Final[str] = "Complex Data Loader Configs"
    CONFIGURATIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConfigurationName", FieldType.STRING, display_name="Configuration Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataTypeName", FieldType.SELECTION, display_name="Data Type Name")
    DATATYPERULES__FIELD_NAME: Final[WrapperField] = WrapperField("DataTypeRules", FieldType.SELECTION, display_name="Rule #1                   ")
    DATATYPERULES2__FIELD_NAME: Final[WrapperField] = WrapperField("DataTypeRules2", FieldType.SELECTION, display_name="Rule #2                   ")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPLICITLYMAPPED__FIELD_NAME: Final[WrapperField] = WrapperField("ExplicitlyMapped", FieldType.BOOLEAN, display_name="Defined Related Mappings")
    IDENTIFIERTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("IdentifierType", FieldType.SELECTION, display_name="Identifier Type")
    OPTIONS__FIELD_NAME: Final[WrapperField] = WrapperField("Options", FieldType.SELECTION, display_name="Options for Rule #1")
    OPTIONS2__FIELD_NAME: Final[WrapperField] = WrapperField("Options2", FieldType.SELECTION, display_name="Options for Rule #2")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConfigurationName' on this record model
        """
        self.set_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_ConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConfigurationName' from this record model
        """
        return self.get_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeName' on this record model
        """
        self.set_field_value(self.DATATYPENAME__FIELD_NAME.field_name, value)

    def get_DataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeName' from this record model
        """
        return self.get_field_value(self.DATATYPENAME__FIELD_NAME.field_name)

    def set_DataTypeRules_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeRules' on this record model
        """
        self.set_field_value(self.DATATYPERULES__FIELD_NAME.field_name, value)

    def get_DataTypeRules_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeRules' from this record model
        """
        return self.get_field_value(self.DATATYPERULES__FIELD_NAME.field_name)

    def set_DataTypeRules2_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeRules2' on this record model
        """
        self.set_field_value(self.DATATYPERULES2__FIELD_NAME.field_name, value)

    def get_DataTypeRules2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeRules2' from this record model
        """
        return self.get_field_value(self.DATATYPERULES2__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExplicitlyMapped_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ExplicitlyMapped' on this record model
        """
        self.set_field_value(self.EXPLICITLYMAPPED__FIELD_NAME.field_name, value)

    def get_ExplicitlyMapped_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ExplicitlyMapped' from this record model
        """
        return self.get_field_value(self.EXPLICITLYMAPPED__FIELD_NAME.field_name)

    def set_IdentifierType_field(self, value: Optional[str]):
        """
        Set data field with field name 'IdentifierType' on this record model
        """
        self.set_field_value(self.IDENTIFIERTYPE__FIELD_NAME.field_name, value)

    def get_IdentifierType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IdentifierType' from this record model
        """
        return self.get_field_value(self.IDENTIFIERTYPE__FIELD_NAME.field_name)

    def set_Options_field(self, value: Optional[str]):
        """
        Set data field with field name 'Options' on this record model
        """
        self.set_field_value(self.OPTIONS__FIELD_NAME.field_name, value)

    def get_Options_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Options' from this record model
        """
        return self.get_field_value(self.OPTIONS__FIELD_NAME.field_name)

    def set_Options2_field(self, value: Optional[str]):
        """
        Set data field with field name 'Options2' on this record model
        """
        self.set_field_value(self.OPTIONS2__FIELD_NAME.field_name, value)

    def get_Options2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Options2' from this record model
        """
        return self.get_field_value(self.OPTIONS2__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CDLFieldMapModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CDLFieldMap
    Data Type Display Name: Complex Data Loader Field Mapping (Complex Data Loader Field Mappings)
    Fields: FieldRules, Options, CreatedBy, FromHeader, IdentifiedBy, DateCreated, ConfigurationName, FieldType, Options2, HeaderNameAliasList, FieldRules2, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, IsListField, DataTypeName, IsIdentifierField, ToField
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: Final[str] = 'CDLFieldMap'
    DISPLAY_NAME: Final[str] = "Complex Data Loader Field Mapping"
    PLURAL_DISPLAY_NAME: Final[str] = "Complex Data Loader Field Mappings"
    CONFIGURATIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConfigurationName", FieldType.STRING, display_name="Configuration Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataTypeName", FieldType.SELECTION, display_name="Data Type Name")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FIELDRULES__FIELD_NAME: Final[WrapperField] = WrapperField("FieldRules", FieldType.SELECTION, display_name="Rule #1                                 ")
    FIELDRULES2__FIELD_NAME: Final[WrapperField] = WrapperField("FieldRules2", FieldType.SELECTION, display_name="Rule #2                                 ")
    FIELDTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("FieldType", FieldType.SELECTION, display_name="Field Type")
    FROMHEADER__FIELD_NAME: Final[WrapperField] = WrapperField("FromHeader", FieldType.SELECTION, display_name="From Header")
    HEADERNAMEALIASLIST__FIELD_NAME: Final[WrapperField] = WrapperField("HeaderNameAliasList", FieldType.SELECTION, display_name="Alternate Header Name(s)")
    IDENTIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("IdentifiedBy", FieldType.STRING, display_name="Identified By")
    ISIDENTIFIERFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("IsIdentifierField", FieldType.BOOLEAN, display_name="Is Identifier?")
    ISLISTFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("IsListField", FieldType.BOOLEAN, display_name="Is List Field")
    OPTIONS__FIELD_NAME: Final[WrapperField] = WrapperField("Options", FieldType.SELECTION, display_name="Options for Rule #1             ")
    OPTIONS2__FIELD_NAME: Final[WrapperField] = WrapperField("Options2", FieldType.SELECTION, display_name="Options for Rule #2             ")
    TOFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("ToField", FieldType.SELECTION, display_name="To Field")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConfigurationName' on this record model
        """
        self.set_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_ConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConfigurationName' from this record model
        """
        return self.get_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeName' on this record model
        """
        self.set_field_value(self.DATATYPENAME__FIELD_NAME.field_name, value)

    def get_DataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeName' from this record model
        """
        return self.get_field_value(self.DATATYPENAME__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FieldRules_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldRules' on this record model
        """
        self.set_field_value(self.FIELDRULES__FIELD_NAME.field_name, value)

    def get_FieldRules_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldRules' from this record model
        """
        return self.get_field_value(self.FIELDRULES__FIELD_NAME.field_name)

    def set_FieldRules2_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldRules2' on this record model
        """
        self.set_field_value(self.FIELDRULES2__FIELD_NAME.field_name, value)

    def get_FieldRules2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldRules2' from this record model
        """
        return self.get_field_value(self.FIELDRULES2__FIELD_NAME.field_name)

    def set_FieldType_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldType' on this record model
        """
        self.set_field_value(self.FIELDTYPE__FIELD_NAME.field_name, value)

    def get_FieldType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldType' from this record model
        """
        return self.get_field_value(self.FIELDTYPE__FIELD_NAME.field_name)

    def set_FromHeader_field(self, value: Optional[str]):
        """
        Set data field with field name 'FromHeader' on this record model
        """
        self.set_field_value(self.FROMHEADER__FIELD_NAME.field_name, value)

    def get_FromHeader_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FromHeader' from this record model
        """
        return self.get_field_value(self.FROMHEADER__FIELD_NAME.field_name)

    def set_HeaderNameAliasList_field(self, value: Optional[str]):
        """
        Set data field with field name 'HeaderNameAliasList' on this record model
        """
        self.set_field_value(self.HEADERNAMEALIASLIST__FIELD_NAME.field_name, value)

    def get_HeaderNameAliasList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HeaderNameAliasList' from this record model
        """
        return self.get_field_value(self.HEADERNAMEALIASLIST__FIELD_NAME.field_name)

    def set_IdentifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'IdentifiedBy' on this record model
        """
        self.set_field_value(self.IDENTIFIEDBY__FIELD_NAME.field_name, value)

    def get_IdentifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IdentifiedBy' from this record model
        """
        return self.get_field_value(self.IDENTIFIEDBY__FIELD_NAME.field_name)

    def set_IsIdentifierField_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsIdentifierField' on this record model
        """
        self.set_field_value(self.ISIDENTIFIERFIELD__FIELD_NAME.field_name, value)

    def get_IsIdentifierField_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsIdentifierField' from this record model
        """
        return self.get_field_value(self.ISIDENTIFIERFIELD__FIELD_NAME.field_name)

    def set_IsListField_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsListField' on this record model
        """
        self.set_field_value(self.ISLISTFIELD__FIELD_NAME.field_name, value)

    def get_IsListField_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsListField' from this record model
        """
        return self.get_field_value(self.ISLISTFIELD__FIELD_NAME.field_name)

    def set_Options_field(self, value: Optional[str]):
        """
        Set data field with field name 'Options' on this record model
        """
        self.set_field_value(self.OPTIONS__FIELD_NAME.field_name, value)

    def get_Options_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Options' from this record model
        """
        return self.get_field_value(self.OPTIONS__FIELD_NAME.field_name)

    def set_Options2_field(self, value: Optional[str]):
        """
        Set data field with field name 'Options2' on this record model
        """
        self.set_field_value(self.OPTIONS2__FIELD_NAME.field_name, value)

    def get_Options2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Options2' from this record model
        """
        return self.get_field_value(self.OPTIONS2__FIELD_NAME.field_name)

    def set_ToField_field(self, value: Optional[str]):
        """
        Set data field with field name 'ToField' on this record model
        """
        self.set_field_value(self.TOFIELD__FIELD_NAME.field_name, value)

    def get_ToField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ToField' from this record model
        """
        return self.get_field_value(self.TOFIELD__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CDLFileFieldModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CDLFileField
    Data Type Display Name: Complex Data Loader File Field Header (Complex Data Loader File Field Headers)
    Fields: CreatedBy, DataRecordName, FileFieldHeader, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, ConfigurationName
    These records represent the field headers that were found in the example file.  These records are used by the plugin backing the selection list to the header field on the Complex Data Loader Field Mapping records. 
<!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: Final[str] = 'CDLFileField'
    DISPLAY_NAME: Final[str] = "Complex Data Loader File Field Header"
    PLURAL_DISPLAY_NAME: Final[str] = "Complex Data Loader File Field Headers"
    CONFIGURATIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConfigurationName", FieldType.STRING, display_name="Configuration Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEFIELDHEADER__FIELD_NAME: Final[WrapperField] = WrapperField("FileFieldHeader", FieldType.STRING, display_name="From Header")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConfigurationName' on this record model
        """
        self.set_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_ConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConfigurationName' from this record model
        """
        return self.get_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FileFieldHeader_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileFieldHeader' on this record model
        """
        self.set_field_value(self.FILEFIELDHEADER__FIELD_NAME.field_name, value)

    def get_FileFieldHeader_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileFieldHeader' from this record model
        """
        return self.get_field_value(self.FILEFIELDHEADER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CDLGroupingConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CDLGroupingConfig
    Data Type Display Name: Complex Data Loader Grouping Config (Complex Data Loader Grouping Configs)
    Fields: FileParser, CreatedBy, AllowDynamicHeaders, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, ConfigurationName, RestrictToGroups
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: Final[str] = 'CDLGroupingConfig'
    DISPLAY_NAME: Final[str] = "Complex Data Loader Grouping Config"
    PLURAL_DISPLAY_NAME: Final[str] = "Complex Data Loader Grouping Configs"
    ALLOWDYNAMICHEADERS__FIELD_NAME: Final[WrapperField] = WrapperField("AllowDynamicHeaders", FieldType.BOOLEAN, display_name="Allow Alternative Headers")
    CONFIGURATIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConfigurationName", FieldType.STRING, display_name="Configuration Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPARSER__FIELD_NAME: Final[WrapperField] = WrapperField("FileParser", FieldType.SELECTION, display_name="File Parser                ")
    RESTRICTTOGROUPS__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictToGroups", FieldType.SELECTION, display_name="Restrict To Groups")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AllowDynamicHeaders_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AllowDynamicHeaders' on this record model
        """
        self.set_field_value(self.ALLOWDYNAMICHEADERS__FIELD_NAME.field_name, value)

    def get_AllowDynamicHeaders_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AllowDynamicHeaders' from this record model
        """
        return self.get_field_value(self.ALLOWDYNAMICHEADERS__FIELD_NAME.field_name)

    def set_ConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConfigurationName' on this record model
        """
        self.set_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_ConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConfigurationName' from this record model
        """
        return self.get_field_value(self.CONFIGURATIONNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FileParser_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileParser' on this record model
        """
        self.set_field_value(self.FILEPARSER__FIELD_NAME.field_name, value)

    def get_FileParser_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileParser' from this record model
        """
        return self.get_field_value(self.FILEPARSER__FIELD_NAME.field_name)

    def set_RestrictToGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'RestrictToGroups' on this record model
        """
        self.set_field_value(self.RESTRICTTOGROUPS__FIELD_NAME.field_name, value)

    def get_RestrictToGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RestrictToGroups' from this record model
        """
        return self.get_field_value(self.RESTRICTTOGROUPS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CellExperimentReferenceModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CellExperimentReference
    Data Type Display Name: Cell Ontology Reference (Cell Ontology References)
    Fields: Subclass1_1_1_1, CreatedBy, DataRecordName, Subclass1_1, Subclass1_1_1, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, Class1
    """
    DATA_TYPE_NAME: Final[str] = 'CellExperimentReference'
    DISPLAY_NAME: Final[str] = "Cell Ontology Reference"
    PLURAL_DISPLAY_NAME: Final[str] = "Cell Ontology References"
    CLASS1__FIELD_NAME: Final[WrapperField] = WrapperField("Class1", FieldType.SELECTION, display_name="1. Class")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SUBCLASS1_1__FIELD_NAME: Final[WrapperField] = WrapperField("Subclass1_1", FieldType.SELECTION, display_name="1.1 Subclass")
    SUBCLASS1_1_1__FIELD_NAME: Final[WrapperField] = WrapperField("Subclass1_1_1", FieldType.SELECTION, display_name="1.1.1 Subclass")
    SUBCLASS1_1_1_1__FIELD_NAME: Final[WrapperField] = WrapperField("Subclass1_1_1_1", FieldType.SELECTION, display_name="1.1.1.1 Subclass")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Class1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Class1' on this record model
        """
        self.set_field_value(self.CLASS1__FIELD_NAME.field_name, value)

    def get_Class1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Class1' from this record model
        """
        return self.get_field_value(self.CLASS1__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Subclass1_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Subclass1_1' on this record model
        """
        self.set_field_value(self.SUBCLASS1_1__FIELD_NAME.field_name, value)

    def get_Subclass1_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Subclass1_1' from this record model
        """
        return self.get_field_value(self.SUBCLASS1_1__FIELD_NAME.field_name)

    def set_Subclass1_1_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Subclass1_1_1' on this record model
        """
        self.set_field_value(self.SUBCLASS1_1_1__FIELD_NAME.field_name, value)

    def get_Subclass1_1_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Subclass1_1_1' from this record model
        """
        return self.get_field_value(self.SUBCLASS1_1_1__FIELD_NAME.field_name)

    def set_Subclass1_1_1_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Subclass1_1_1_1' on this record model
        """
        self.set_field_value(self.SUBCLASS1_1_1_1__FIELD_NAME.field_name, value)

    def get_Subclass1_1_1_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Subclass1_1_1_1' from this record model
        """
        return self.get_field_value(self.SUBCLASS1_1_1_1__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CellLineModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CellLine
    Data Type Display Name: Cell Line (Cell Lines)
    Fields: MultiParentLink215, ViableCellNumbers, CreatedBy, DataRecordName, Subclass1_1, Subclass1_1_1, TotalCellNumbers, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, Class1
    The CellLine Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'CellLine'
    DISPLAY_NAME: Final[str] = "Cell Line"
    PLURAL_DISPLAY_NAME: Final[str] = "Cell Lines"
    CLASS1__FIELD_NAME: Final[WrapperField] = WrapperField("Class1", FieldType.SELECTION, display_name="1. Class")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    SUBCLASS1_1__FIELD_NAME: Final[WrapperField] = WrapperField("Subclass1_1", FieldType.SELECTION, display_name="1.1 Subclass")
    SUBCLASS1_1_1__FIELD_NAME: Final[WrapperField] = WrapperField("Subclass1_1_1", FieldType.SELECTION, display_name="1.1.1 Subclass")
    TOTALCELLNUMBERS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalCellNumbers", FieldType.LONG, display_name="Total Cell Numbers")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VIABLECELLNUMBERS__FIELD_NAME: Final[WrapperField] = WrapperField("ViableCellNumbers", FieldType.LONG, display_name="Viable Cell Numbers")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Class1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Class1' on this record model
        """
        self.set_field_value(self.CLASS1__FIELD_NAME.field_name, value)

    def get_Class1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Class1' from this record model
        """
        return self.get_field_value(self.CLASS1__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Subclass1_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Subclass1_1' on this record model
        """
        self.set_field_value(self.SUBCLASS1_1__FIELD_NAME.field_name, value)

    def get_Subclass1_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Subclass1_1' from this record model
        """
        return self.get_field_value(self.SUBCLASS1_1__FIELD_NAME.field_name)

    def set_Subclass1_1_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Subclass1_1_1' on this record model
        """
        self.set_field_value(self.SUBCLASS1_1_1__FIELD_NAME.field_name, value)

    def get_Subclass1_1_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Subclass1_1_1' from this record model
        """
        return self.get_field_value(self.SUBCLASS1_1_1__FIELD_NAME.field_name)

    def set_TotalCellNumbers_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalCellNumbers' on this record model
        """
        self.set_field_value(self.TOTALCELLNUMBERS__FIELD_NAME.field_name, value)

    def get_TotalCellNumbers_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalCellNumbers' from this record model
        """
        return self.get_field_value(self.TOTALCELLNUMBERS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_ViableCellNumbers_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViableCellNumbers' on this record model
        """
        self.set_field_value(self.VIABLECELLNUMBERS__FIELD_NAME.field_name, value)

    def get_ViableCellNumbers_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViableCellNumbers' from this record model
        """
        return self.get_field_value(self.VIABLECELLNUMBERS__FIELD_NAME.field_name)


class CellOntologyModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CellOntology
    Data Type Display Name: Cell Ontology (Cell Ontologies)
    Fields: Synonyms, CreatedBy, DataRecordName, Definitions, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, ClassID, MultiParentLink695, PreferredLabel
    """
    DATA_TYPE_NAME: Final[str] = 'CellOntology'
    DISPLAY_NAME: Final[str] = "Cell Ontology"
    PLURAL_DISPLAY_NAME: Final[str] = "Cell Ontologies"
    CLASSID__FIELD_NAME: Final[WrapperField] = WrapperField("ClassID", FieldType.STRING, display_name="Class ID")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DEFINITIONS__FIELD_NAME: Final[WrapperField] = WrapperField("Definitions", FieldType.STRING, display_name="Definitions")
    MULTIPARENTLINK695__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink695", FieldType.MULTIPARENTLINK, display_name="Linked Cell Ontology")
    PREFERREDLABEL__FIELD_NAME: Final[WrapperField] = WrapperField("PreferredLabel", FieldType.STRING, display_name="Preferred Label")
    SYNONYMS__FIELD_NAME: Final[WrapperField] = WrapperField("Synonyms", FieldType.STRING, display_name="Synonyms")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ClassID_field(self, value: Optional[str]):
        """
        Set data field with field name 'ClassID' on this record model
        """
        self.set_field_value(self.CLASSID__FIELD_NAME.field_name, value)

    def get_ClassID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ClassID' from this record model
        """
        return self.get_field_value(self.CLASSID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Definitions_field(self, value: Optional[str]):
        """
        Set data field with field name 'Definitions' on this record model
        """
        self.set_field_value(self.DEFINITIONS__FIELD_NAME.field_name, value)

    def get_Definitions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Definitions' from this record model
        """
        return self.get_field_value(self.DEFINITIONS__FIELD_NAME.field_name)

    def set_PreferredLabel_field(self, value: Optional[str]):
        """
        Set data field with field name 'PreferredLabel' on this record model
        """
        self.set_field_value(self.PREFERREDLABEL__FIELD_NAME.field_name, value)

    def get_PreferredLabel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PreferredLabel' from this record model
        """
        return self.get_field_value(self.PREFERREDLABEL__FIELD_NAME.field_name)

    def set_Synonyms_field(self, value: Optional[str]):
        """
        Set data field with field name 'Synonyms' on this record model
        """
        self.set_field_value(self.SYNONYMS__FIELD_NAME.field_name, value)

    def get_Synonyms_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Synonyms' from this record model
        """
        return self.get_field_value(self.SYNONYMS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CentrifugeRunParametersModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CentrifugeRunParameters
    Data Type Display Name: Centrifuge Run Parameters (Centrifuge Run Parameters)
    Fields: MultiParentLink215, Temperature, TargetVolume, CreatedBy, TargetConcentration, DateCreated, Duration, RPM, GForce, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'CentrifugeRunParameters'
    DISPLAY_NAME: Final[str] = "Centrifuge Run Parameters"
    PLURAL_DISPLAY_NAME: Final[str] = "Centrifuge Run Parameters"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DURATION__FIELD_NAME: Final[WrapperField] = WrapperField("Duration", FieldType.DOUBLE, display_name="Duration (min)")
    GFORCE__FIELD_NAME: Final[WrapperField] = WrapperField("GForce", FieldType.DOUBLE, display_name="G-force (g)")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    RPM__FIELD_NAME: Final[WrapperField] = WrapperField("RPM", FieldType.DOUBLE, display_name="RPM")
    TARGETCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("TargetConcentration", FieldType.DOUBLE, display_name="Target Concentration (g/L)")
    TARGETVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("TargetVolume", FieldType.DOUBLE, display_name="Target Volume (L)")
    TEMPERATURE__FIELD_NAME: Final[WrapperField] = WrapperField("Temperature", FieldType.DOUBLE, display_name="Temperature (C)")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Duration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Duration' on this record model
        """
        self.set_field_value(self.DURATION__FIELD_NAME.field_name, value)

    def get_Duration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Duration' from this record model
        """
        return self.get_field_value(self.DURATION__FIELD_NAME.field_name)

    def set_GForce_field(self, value: Optional[float]):
        """
        Set data field with field name 'GForce' on this record model
        """
        self.set_field_value(self.GFORCE__FIELD_NAME.field_name, value)

    def get_GForce_field(self) -> Optional[float]:
        """
        Get data field value with field name 'GForce' from this record model
        """
        return self.get_field_value(self.GFORCE__FIELD_NAME.field_name)

    def set_RPM_field(self, value: Optional[float]):
        """
        Set data field with field name 'RPM' on this record model
        """
        self.set_field_value(self.RPM__FIELD_NAME.field_name, value)

    def get_RPM_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RPM' from this record model
        """
        return self.get_field_value(self.RPM__FIELD_NAME.field_name)

    def set_TargetConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetConcentration' on this record model
        """
        self.set_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name, value)

    def get_TargetConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetConcentration' from this record model
        """
        return self.get_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name)

    def set_TargetVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetVolume' on this record model
        """
        self.set_field_value(self.TARGETVOLUME__FIELD_NAME.field_name, value)

    def get_TargetVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetVolume' from this record model
        """
        return self.get_field_value(self.TARGETVOLUME__FIELD_NAME.field_name)

    def set_Temperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'Temperature' on this record model
        """
        self.set_field_value(self.TEMPERATURE__FIELD_NAME.field_name, value)

    def get_Temperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Temperature' from this record model
        """
        return self.get_field_value(self.TEMPERATURE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ChemCuratorQueueModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemCuratorQueue
    Data Type Display Name: Chem Curator Queue (Chem Curator Queues)
    Fields: CreatedBy, inchi, PayloadData, DateCreated, HeaderNameListJSON, SMILES, MOL, ErrorDetails, OriginalDataType, PartDataTypeName, DataRecordName, ImportConfigLink, ProblemType, VeloxLastModifiedDate, VeloxLastModifiedBy
    Describes data in the chem curator queue when automatic identity fails to completely determine which material a registered part or lot would have.
    """
    DATA_TYPE_NAME: Final[str] = 'ChemCuratorQueue'
    DISPLAY_NAME: Final[str] = "Chem Curator Queue"
    PLURAL_DISPLAY_NAME: Final[str] = "Chem Curator Queues"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ERRORDETAILS__FIELD_NAME: Final[WrapperField] = WrapperField("ErrorDetails", FieldType.STRING, display_name="Error Details")
    HEADERNAMELISTJSON__FIELD_NAME: Final[WrapperField] = WrapperField("HeaderNameListJSON", FieldType.STRING, display_name="Header Name List JSON")
    IMPORTCONFIGLINK__FIELD_NAME: Final[WrapperField] = WrapperField("ImportConfigLink", FieldType.SIDE_LINK, display_name="Import Config Side L Ink")
    MOL__FIELD_NAME: Final[WrapperField] = WrapperField("MOL", FieldType.STRING, display_name="MOL data")
    ORIGINALDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("OriginalDataType", FieldType.STRING, display_name="Original Data Type")
    PARTDATATYPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("PartDataTypeName", FieldType.STRING, display_name="Part Data Type Name")
    PAYLOADDATA__FIELD_NAME: Final[WrapperField] = WrapperField("PayloadData", FieldType.STRING, display_name="Payload Data")
    PROBLEMTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ProblemType", FieldType.STRING, display_name="Problem Type")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="SMILES Data")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="INCHI data")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ErrorDetails_field(self, value: Optional[str]):
        """
        Set data field with field name 'ErrorDetails' on this record model
        """
        self.set_field_value(self.ERRORDETAILS__FIELD_NAME.field_name, value)

    def get_ErrorDetails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ErrorDetails' from this record model
        """
        return self.get_field_value(self.ERRORDETAILS__FIELD_NAME.field_name)

    def set_HeaderNameListJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'HeaderNameListJSON' on this record model
        """
        self.set_field_value(self.HEADERNAMELISTJSON__FIELD_NAME.field_name, value)

    def get_HeaderNameListJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HeaderNameListJSON' from this record model
        """
        return self.get_field_value(self.HEADERNAMELISTJSON__FIELD_NAME.field_name)

    def set_ImportConfigLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'ImportConfigLink' on this record model
        """
        self.set_field_value(self.IMPORTCONFIGLINK__FIELD_NAME.field_name, value)

    def get_ImportConfigLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ImportConfigLink' from this record model
        """
        return self.get_field_value(self.IMPORTCONFIGLINK__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_OriginalDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'OriginalDataType' on this record model
        """
        self.set_field_value(self.ORIGINALDATATYPE__FIELD_NAME.field_name, value)

    def get_OriginalDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OriginalDataType' from this record model
        """
        return self.get_field_value(self.ORIGINALDATATYPE__FIELD_NAME.field_name)

    def set_PartDataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartDataTypeName' on this record model
        """
        self.set_field_value(self.PARTDATATYPENAME__FIELD_NAME.field_name, value)

    def get_PartDataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartDataTypeName' from this record model
        """
        return self.get_field_value(self.PARTDATATYPENAME__FIELD_NAME.field_name)

    def set_PayloadData_field(self, value: Optional[str]):
        """
        Set data field with field name 'PayloadData' on this record model
        """
        self.set_field_value(self.PAYLOADDATA__FIELD_NAME.field_name, value)

    def get_PayloadData_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PayloadData' from this record model
        """
        return self.get_field_value(self.PAYLOADDATA__FIELD_NAME.field_name)

    def set_ProblemType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProblemType' on this record model
        """
        self.set_field_value(self.PROBLEMTYPE__FIELD_NAME.field_name, value)

    def get_ProblemType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProblemType' from this record model
        """
        return self.get_field_value(self.PROBLEMTYPE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class ChemicalReagentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemicalReagent
    Data Type Display Name: Chemical Reagent (Chemical Reagents)
    Fields: ExactMass, PubchemCid, ConsumableType, Purity, DateCreated, IsGHSClassified, HasOrStereoGroup, CXSMILESHash, Formula, PolarSurfaceArea, GHSSignal, cLogP, VeloxLastModifiedBy, MolecularWeight, InchiKey, LotNumber, CreatedBy, inchi, Charge, IUPAC, SMILES, GHSHazardCode, TotalHBondCount, TotalHBondAcceptors, DataRecordName, ExpirationDate, CAS, VeloxLastModifiedDate, RegistryId, Yield, StereoRegHash, GHSPictoCode, GHSCautionCode
    """
    DATA_TYPE_NAME: Final[str] = 'ChemicalReagent'
    DISPLAY_NAME: Final[str] = "Chemical Reagent"
    PLURAL_DISPLAY_NAME: Final[str] = "Chemical Reagents"
    CAS__FIELD_NAME: Final[WrapperField] = WrapperField("CAS", FieldType.STRING, display_name="CAS")
    CXSMILESHASH__FIELD_NAME: Final[WrapperField] = WrapperField("CXSMILESHash", FieldType.STRING, display_name="CXSMILES Hash")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("GHSSignal", FieldType.STRING, display_name="GHS Signal")
    HASORSTEREOGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN, display_name="Contains OR Stereo")
    IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("IUPAC", FieldType.STRING, display_name="IUPAC")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="INCHI Key")
    ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("PubchemCid", FieldType.INTEGER, display_name="Pubchem CID")
    PURITY__FIELD_NAME: Final[WrapperField] = WrapperField("Purity", FieldType.DOUBLE, display_name="Purity")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="Canonical SMILES")
    STEREOREGHASH__FIELD_NAME: Final[WrapperField] = WrapperField("StereoRegHash", FieldType.STRING, display_name="Stereo Registration Hash")
    TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("Yield", FieldType.DOUBLE, display_name="Yield")
    CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="INCHI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Purity' on this record model
        """
        self.set_field_value(self.PURITY__FIELD_NAME.field_name, value)

    def get_Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Purity' from this record model
        """
        return self.get_field_value(self.PURITY__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class ChemicalReagentPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemicalReagentPart
    Data Type Display Name: Chemical Reagent Part (Chemical Reagent Parts)
    Fields: ExactMass, PubchemCid, ConsumableType, DateCreated, IsGHSClassified, HasOrStereoGroup, CXSMILESHash, Density, QuantityPerItem, Formula, PolarSurfaceArea, ReorderLevelQuantity, GHSSignal, RegisteredToCartridge, RequestImageUpdate, cLogP, VeloxLastModifiedBy, MolecularWeight, InchiKey, CreatedBy, inchi, EditLock, Charge, IUPAC, SMILES, MOL, Vendor, QuantityOnHand, Units, GHSHazardCode, SMILESShadow, TotalHBondCount, TotalHBondAcceptors, DataRecordName, CAS, VeloxLastModifiedDate, RegistryId, INCHIShadow, StereoRegHash, GHSPictoCode, GHSCautionCode
    """
    DATA_TYPE_NAME: Final[str] = 'ChemicalReagentPart'
    DISPLAY_NAME: Final[str] = "Chemical Reagent Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Chemical Reagent Parts"
    CAS__FIELD_NAME: Final[WrapperField] = WrapperField("CAS", FieldType.STRING, display_name="CAS")
    CXSMILESHASH__FIELD_NAME: Final[WrapperField] = WrapperField("CXSMILESHash", FieldType.STRING, display_name="CXSMILES Hash")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DENSITY__FIELD_NAME: Final[WrapperField] = WrapperField("Density", FieldType.DOUBLE, display_name="Density")
    EDITLOCK__FIELD_NAME: Final[WrapperField] = WrapperField("EditLock", FieldType.BOOLEAN, display_name="Edit Lock")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("GHSSignal", FieldType.STRING, display_name="GHS Signal")
    HASORSTEREOGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN, display_name="Contains OR Stereo")
    INCHISHADOW__FIELD_NAME: Final[WrapperField] = WrapperField("INCHIShadow", FieldType.STRING, display_name="INCHI Shadow")
    IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("IUPAC", FieldType.STRING, display_name="IUPAC")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="INCHI Key")
    ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    MOL__FIELD_NAME: Final[WrapperField] = WrapperField("MOL", FieldType.STRING, display_name="MOL")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("PubchemCid", FieldType.INTEGER, display_name="Pubchem CID")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REGISTEREDTOCARTRIDGE__FIELD_NAME: Final[WrapperField] = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN, display_name="Registered To Cartridge")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    REQUESTIMAGEUPDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RequestImageUpdate", FieldType.BOOLEAN, display_name="Request Image Update")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="Canonical SMILES")
    SMILESSHADOW__FIELD_NAME: Final[WrapperField] = WrapperField("SMILESShadow", FieldType.STRING, display_name="SMILES Shadow")
    STEREOREGHASH__FIELD_NAME: Final[WrapperField] = WrapperField("StereoRegHash", FieldType.STRING, display_name="Stereo Registration Hash")
    TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.SELECTION, display_name="Vendor")
    CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="INCHI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Density_field(self, value: Optional[float]):
        """
        Set data field with field name 'Density' on this record model
        """
        self.set_field_value(self.DENSITY__FIELD_NAME.field_name, value)

    def get_Density_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Density' from this record model
        """
        return self.get_field_value(self.DENSITY__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_INCHIShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'INCHIShadow' on this record model
        """
        self.set_field_value(self.INCHISHADOW__FIELD_NAME.field_name, value)

    def get_INCHIShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'INCHIShadow' from this record model
        """
        return self.get_field_value(self.INCHISHADOW__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_RequestImageUpdate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestImageUpdate' on this record model
        """
        self.set_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name, value)

    def get_RequestImageUpdate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestImageUpdate' from this record model
        """
        return self.get_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SMILESShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILESShadow' on this record model
        """
        self.set_field_value(self.SMILESSHADOW__FIELD_NAME.field_name, value)

    def get_SMILESShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILESShadow' from this record model
        """
        return self.get_field_value(self.SMILESSHADOW__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class ChemistryMaterialTypeSettingsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemistryMaterialTypeSettings
    Data Type Display Name: Chemistry Material Type Settings (Chemistry Material Type Settingses)
    Fields: ManualStereoResolution, ReactionReactant, EnableEnhancedStereochemistry, LockedFieldsOverride, CreatedBy, ThreeTier, SaltPaddings, SaltMode, DateCreated, AccessionPaddings, ReactionProduct, DataRecordName, ResolveCanonicalTautomer, ManagerGroups, VeloxLastModifiedDate, VeloxLastModifiedBy, AccessionCode, RegistryDataType, SystemDefined, AccessionStartingValue
    """
    DATA_TYPE_NAME: Final[str] = 'ChemistryMaterialTypeSettings'
    DISPLAY_NAME: Final[str] = "Chemistry Material Type Settings"
    PLURAL_DISPLAY_NAME: Final[str] = "Chemistry Material Type Settingses"
    ACCESSIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("AccessionCode", FieldType.STRING, display_name="Accession Code")
    ACCESSIONPADDINGS__FIELD_NAME: Final[WrapperField] = WrapperField("AccessionPaddings", FieldType.INTEGER, display_name="Accession Paddings")
    ACCESSIONSTARTINGVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("AccessionStartingValue", FieldType.INTEGER, display_name="Accession Starting Value")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ENABLEENHANCEDSTEREOCHEMISTRY__FIELD_NAME: Final[WrapperField] = WrapperField("EnableEnhancedStereochemistry", FieldType.BOOLEAN, display_name="Enable Enhanced Stereochemistry")
    LOCKEDFIELDSOVERRIDE__FIELD_NAME: Final[WrapperField] = WrapperField("LockedFieldsOverride", FieldType.SELECTION, display_name="Locked Fields Override")
    MANAGERGROUPS__FIELD_NAME: Final[WrapperField] = WrapperField("ManagerGroups", FieldType.SELECTION, display_name="Manager Groups")
    MANUALSTEREORESOLUTION__FIELD_NAME: Final[WrapperField] = WrapperField("ManualStereoResolution", FieldType.BOOLEAN, display_name="Manual Stereo Resolution")
    REACTIONPRODUCT__FIELD_NAME: Final[WrapperField] = WrapperField("ReactionProduct", FieldType.BOOLEAN, display_name="Reaction Product")
    REACTIONREACTANT__FIELD_NAME: Final[WrapperField] = WrapperField("ReactionReactant", FieldType.BOOLEAN, display_name="Reaction Reactant")
    REGISTRYDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryDataType", FieldType.SELECTION, display_name="Registry Data Type")
    RESOLVECANONICALTAUTOMER__FIELD_NAME: Final[WrapperField] = WrapperField("ResolveCanonicalTautomer", FieldType.BOOLEAN, display_name="Resolve Canonical Tautomer")
    SALTMODE__FIELD_NAME: Final[WrapperField] = WrapperField("SaltMode", FieldType.PICKLIST, display_name="Salt Mode")
    SALTPADDINGS__FIELD_NAME: Final[WrapperField] = WrapperField("SaltPaddings", FieldType.INTEGER, display_name="Salt Paddings")
    SYSTEMDEFINED__FIELD_NAME: Final[WrapperField] = WrapperField("SystemDefined", FieldType.BOOLEAN, display_name="System Defined")
    THREETIER__FIELD_NAME: Final[WrapperField] = WrapperField("ThreeTier", FieldType.BOOLEAN, display_name="Three Tier")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AccessionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'AccessionCode' on this record model
        """
        self.set_field_value(self.ACCESSIONCODE__FIELD_NAME.field_name, value)

    def get_AccessionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AccessionCode' from this record model
        """
        return self.get_field_value(self.ACCESSIONCODE__FIELD_NAME.field_name)

    def set_AccessionPaddings_field(self, value: Optional[int]):
        """
        Set data field with field name 'AccessionPaddings' on this record model
        """
        self.set_field_value(self.ACCESSIONPADDINGS__FIELD_NAME.field_name, value)

    def get_AccessionPaddings_field(self) -> Optional[int]:
        """
        Get data field value with field name 'AccessionPaddings' from this record model
        """
        return self.get_field_value(self.ACCESSIONPADDINGS__FIELD_NAME.field_name)

    def set_AccessionStartingValue_field(self, value: Optional[int]):
        """
        Set data field with field name 'AccessionStartingValue' on this record model
        """
        self.set_field_value(self.ACCESSIONSTARTINGVALUE__FIELD_NAME.field_name, value)

    def get_AccessionStartingValue_field(self) -> Optional[int]:
        """
        Get data field value with field name 'AccessionStartingValue' from this record model
        """
        return self.get_field_value(self.ACCESSIONSTARTINGVALUE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EnableEnhancedStereochemistry_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableEnhancedStereochemistry' on this record model
        """
        self.set_field_value(self.ENABLEENHANCEDSTEREOCHEMISTRY__FIELD_NAME.field_name, value)

    def get_EnableEnhancedStereochemistry_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableEnhancedStereochemistry' from this record model
        """
        return self.get_field_value(self.ENABLEENHANCEDSTEREOCHEMISTRY__FIELD_NAME.field_name)

    def set_LockedFieldsOverride_field(self, value: Optional[str]):
        """
        Set data field with field name 'LockedFieldsOverride' on this record model
        """
        self.set_field_value(self.LOCKEDFIELDSOVERRIDE__FIELD_NAME.field_name, value)

    def get_LockedFieldsOverride_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LockedFieldsOverride' from this record model
        """
        return self.get_field_value(self.LOCKEDFIELDSOVERRIDE__FIELD_NAME.field_name)

    def set_ManagerGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'ManagerGroups' on this record model
        """
        self.set_field_value(self.MANAGERGROUPS__FIELD_NAME.field_name, value)

    def get_ManagerGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ManagerGroups' from this record model
        """
        return self.get_field_value(self.MANAGERGROUPS__FIELD_NAME.field_name)

    def set_ManualStereoResolution_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ManualStereoResolution' on this record model
        """
        self.set_field_value(self.MANUALSTEREORESOLUTION__FIELD_NAME.field_name, value)

    def get_ManualStereoResolution_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ManualStereoResolution' from this record model
        """
        return self.get_field_value(self.MANUALSTEREORESOLUTION__FIELD_NAME.field_name)

    def set_ReactionProduct_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReactionProduct' on this record model
        """
        self.set_field_value(self.REACTIONPRODUCT__FIELD_NAME.field_name, value)

    def get_ReactionProduct_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReactionProduct' from this record model
        """
        return self.get_field_value(self.REACTIONPRODUCT__FIELD_NAME.field_name)

    def set_ReactionReactant_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReactionReactant' on this record model
        """
        self.set_field_value(self.REACTIONREACTANT__FIELD_NAME.field_name, value)

    def get_ReactionReactant_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReactionReactant' from this record model
        """
        return self.get_field_value(self.REACTIONREACTANT__FIELD_NAME.field_name)

    def set_RegistryDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryDataType' on this record model
        """
        self.set_field_value(self.REGISTRYDATATYPE__FIELD_NAME.field_name, value)

    def get_RegistryDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryDataType' from this record model
        """
        return self.get_field_value(self.REGISTRYDATATYPE__FIELD_NAME.field_name)

    def set_ResolveCanonicalTautomer_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ResolveCanonicalTautomer' on this record model
        """
        self.set_field_value(self.RESOLVECANONICALTAUTOMER__FIELD_NAME.field_name, value)

    def get_ResolveCanonicalTautomer_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ResolveCanonicalTautomer' from this record model
        """
        return self.get_field_value(self.RESOLVECANONICALTAUTOMER__FIELD_NAME.field_name)

    def set_SaltMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SaltMode' on this record model
        """
        self.set_field_value(self.SALTMODE__FIELD_NAME.field_name, value)

    def get_SaltMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SaltMode' from this record model
        """
        return self.get_field_value(self.SALTMODE__FIELD_NAME.field_name)

    def set_SaltPaddings_field(self, value: Optional[int]):
        """
        Set data field with field name 'SaltPaddings' on this record model
        """
        self.set_field_value(self.SALTPADDINGS__FIELD_NAME.field_name, value)

    def get_SaltPaddings_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SaltPaddings' from this record model
        """
        return self.get_field_value(self.SALTPADDINGS__FIELD_NAME.field_name)

    def set_SystemDefined_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SystemDefined' on this record model
        """
        self.set_field_value(self.SYSTEMDEFINED__FIELD_NAME.field_name, value)

    def get_SystemDefined_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SystemDefined' from this record model
        """
        return self.get_field_value(self.SYSTEMDEFINED__FIELD_NAME.field_name)

    def set_ThreeTier_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ThreeTier' on this record model
        """
        self.set_field_value(self.THREETIER__FIELD_NAME.field_name, value)

    def get_ThreeTier_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ThreeTier' from this record model
        """
        return self.get_field_value(self.THREETIER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ChemReactionDataFileModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemReactionDataFile
    Data Type Display Name: Chem Reaction Data File (Chem Reaction Data Files)
    Fields: FilePath, CreatedBy, VeloxCurrentVersion, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    Describes raw chemical reaction data of the parent reaction data type.
    """
    DATA_TYPE_NAME: Final[str] = 'ChemReactionDataFile'
    DISPLAY_NAME: Final[str] = "Chem Reaction Data File"
    PLURAL_DISPLAY_NAME: Final[str] = "Chem Reaction Data Files"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ChemRegistrySavedFieldMapModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemRegistrySavedFieldMap
    Data Type Display Name: Chem Registry Saved Field Map (Chem Registry Saved Field Maps)
    Fields: FilePath, VeloxCurrentVersion, CreatedBy, FieldMapDataTypeName, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, Name
    Saved field maps for people to use in importing CSV and SDF files.
    """
    DATA_TYPE_NAME: Final[str] = 'ChemRegistrySavedFieldMap'
    DISPLAY_NAME: Final[str] = "Chem Registry Saved Field Map"
    PLURAL_DISPLAY_NAME: Final[str] = "Chem Registry Saved Field Maps"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FIELDMAPDATATYPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("FieldMapDataTypeName", FieldType.STRING, display_name="Data Type Name")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    NAME__FIELD_NAME: Final[WrapperField] = WrapperField("Name", FieldType.STRING, display_name="Name")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FieldMapDataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldMapDataTypeName' on this record model
        """
        self.set_field_value(self.FIELDMAPDATATYPENAME__FIELD_NAME.field_name, value)

    def get_FieldMapDataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldMapDataTypeName' from this record model
        """
        return self.get_field_value(self.FIELDMAPDATATYPENAME__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ChemRegPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemRegPart
    Data Type Display Name: Company X Reagent Part (Company X Reagent Parts)
    Fields: ExactMass, PubchemCid, ConsumableType, Purity, DateCreated, IsGHSClassified, Formula, PolarSurfaceArea, GHSSignal, cLogP, VeloxLastModifiedBy, MolecularWeight, InchiKey, LotNumber, CreatedBy, inchi, Charge, IUPAC, SMILES, GHSHazardCode, TotalHBondCount, TotalHBondAcceptors, DataRecordName, CAS, VeloxLastModifiedDate, RegistryId, Yield, GHSPictoCode, GHSCautionCode
    The ChemRegPart Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'ChemRegPart'
    DISPLAY_NAME: Final[str] = "Company X Reagent Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Company X Reagent Parts"
    CAS__FIELD_NAME: Final[WrapperField] = WrapperField("CAS", FieldType.STRING, display_name="CAS")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("GHSSignal", FieldType.STRING, display_name="GHS Signal")
    IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("IUPAC", FieldType.STRING, display_name="IUPAC")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="InChI Key")
    ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("PubchemCid", FieldType.INTEGER, display_name="PubChem CID")
    PURITY__FIELD_NAME: Final[WrapperField] = WrapperField("Purity", FieldType.DOUBLE, display_name="Purity")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="Canonical SMILES")
    TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("Yield", FieldType.DOUBLE, display_name="Yield")
    CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="InChI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Purity' on this record model
        """
        self.set_field_value(self.PURITY__FIELD_NAME.field_name, value)

    def get_Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Purity' from this record model
        """
        return self.get_field_value(self.PURITY__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class ChemRegPartPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ChemRegPartPart
    Data Type Display Name: Company X Reagent (Company X Reagents)
    Fields: ExactMass, PubchemCid, ConsumableType, DateCreated, IsGHSClassified, QuantityPerItem, Formula, PolarSurfaceArea, ReorderLevelQuantity, GHSSignal, RegisteredToCartridge, RequestImageUpdate, cLogP, VeloxLastModifiedBy, MolecularWeight, InchiKey, CreatedBy, inchi, EditLock, Charge, IUPAC, SMILES, MOL, QuantityOnHand, Units, GHSHazardCode, SMILESShadow, TotalHBondCount, TotalHBondAcceptors, DataRecordName, CAS, VeloxLastModifiedDate, RegistryId, INCHIShadow, GHSPictoCode, GHSCautionCode
    The ChemRegPartPart Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'ChemRegPartPart'
    DISPLAY_NAME: Final[str] = "Company X Reagent"
    PLURAL_DISPLAY_NAME: Final[str] = "Company X Reagents"
    CAS__FIELD_NAME: Final[WrapperField] = WrapperField("CAS", FieldType.STRING, display_name="CAS")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EDITLOCK__FIELD_NAME: Final[WrapperField] = WrapperField("EditLock", FieldType.BOOLEAN, display_name="Edit Lock")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("GHSSignal", FieldType.STRING, display_name="GHS Signal")
    INCHISHADOW__FIELD_NAME: Final[WrapperField] = WrapperField("INCHIShadow", FieldType.STRING, display_name="InChI Shadow")
    IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("IUPAC", FieldType.STRING, display_name="IUPAC")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="InChI Key")
    ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    MOL__FIELD_NAME: Final[WrapperField] = WrapperField("MOL", FieldType.STRING, display_name="MOL")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("PubchemCid", FieldType.INTEGER, display_name="PubChem CID")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REGISTEREDTOCARTRIDGE__FIELD_NAME: Final[WrapperField] = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN, display_name="Registered To Cartridge")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    REQUESTIMAGEUPDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RequestImageUpdate", FieldType.BOOLEAN, display_name="Request Image Update")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="Canonical SMILES")
    SMILESSHADOW__FIELD_NAME: Final[WrapperField] = WrapperField("SMILESShadow", FieldType.STRING, display_name="SMILES Shadow")
    TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="InChI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_INCHIShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'INCHIShadow' on this record model
        """
        self.set_field_value(self.INCHISHADOW__FIELD_NAME.field_name, value)

    def get_INCHIShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'INCHIShadow' from this record model
        """
        return self.get_field_value(self.INCHISHADOW__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_RequestImageUpdate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestImageUpdate' on this record model
        """
        self.set_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name, value)

    def get_RequestImageUpdate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestImageUpdate' from this record model
        """
        return self.get_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SMILESShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILESShadow' on this record model
        """
        self.set_field_value(self.SMILESSHADOW__FIELD_NAME.field_name, value)

    def get_SMILESShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILESShadow' from this record model
        """
        return self.get_field_value(self.SMILESSHADOW__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class ClientConfigurationsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ClientConfigurations
    Data Type Display Name: Client Configurations (Client Configurations)
    Fields: CreatedBy, COMWebServiceApiKey, ReportingUserPassword, ReportingWebServiceHost, DateCreated, COMWebServiceUrl, COMWebServiceAccountName, ReportingWebServicePort, DataRecordName, SampleSheetPathForPacBio, COMWebServiceGuid, VeloxLastModifiedDate, VeloxLastModifiedBy, ReportingWebServiceName, ReportingWebServiceUserName, SampleSheetPath
    Client specific configurations.
    """
    DATA_TYPE_NAME: Final[str] = 'ClientConfigurations'
    DISPLAY_NAME: Final[str] = "Client Configurations"
    PLURAL_DISPLAY_NAME: Final[str] = "Client Configurations"
    COMWEBSERVICEACCOUNTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("COMWebServiceAccountName", FieldType.STRING, display_name="COM Web Service Account Name")
    COMWEBSERVICEAPIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("COMWebServiceApiKey", FieldType.STRING, display_name="COM Web Service Api Key")
    COMWEBSERVICEGUID__FIELD_NAME: Final[WrapperField] = WrapperField("COMWebServiceGuid", FieldType.STRING, display_name="COM Web Service Guid")
    COMWEBSERVICEURL__FIELD_NAME: Final[WrapperField] = WrapperField("COMWebServiceUrl", FieldType.STRING, display_name="COM Web Service Url")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    REPORTINGUSERPASSWORD__FIELD_NAME: Final[WrapperField] = WrapperField("ReportingUserPassword", FieldType.STRING, display_name="Reporting Web Service User Password")
    REPORTINGWEBSERVICEHOST__FIELD_NAME: Final[WrapperField] = WrapperField("ReportingWebServiceHost", FieldType.STRING, display_name="Reporting Web Service Host")
    REPORTINGWEBSERVICENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ReportingWebServiceName", FieldType.STRING, display_name="Reporting Web Service Name")
    REPORTINGWEBSERVICEPORT__FIELD_NAME: Final[WrapperField] = WrapperField("ReportingWebServicePort", FieldType.INTEGER, display_name="Reporting Web Service Port")
    REPORTINGWEBSERVICEUSERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ReportingWebServiceUserName", FieldType.STRING, display_name="Reporting Web Service User Name")
    SAMPLESHEETPATH__FIELD_NAME: Final[WrapperField] = WrapperField("SampleSheetPath", FieldType.STRING, display_name="Sample Sheet Path")
    SAMPLESHEETPATHFORPACBIO__FIELD_NAME: Final[WrapperField] = WrapperField("SampleSheetPathForPacBio", FieldType.STRING, display_name="Sample Sheet Path for PacBio")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_COMWebServiceAccountName_field(self, value: Optional[str]):
        """
        Set data field with field name 'COMWebServiceAccountName' on this record model
        """
        self.set_field_value(self.COMWEBSERVICEACCOUNTNAME__FIELD_NAME.field_name, value)

    def get_COMWebServiceAccountName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'COMWebServiceAccountName' from this record model
        """
        return self.get_field_value(self.COMWEBSERVICEACCOUNTNAME__FIELD_NAME.field_name)

    def set_COMWebServiceApiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'COMWebServiceApiKey' on this record model
        """
        self.set_field_value(self.COMWEBSERVICEAPIKEY__FIELD_NAME.field_name, value)

    def get_COMWebServiceApiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'COMWebServiceApiKey' from this record model
        """
        return self.get_field_value(self.COMWEBSERVICEAPIKEY__FIELD_NAME.field_name)

    def set_COMWebServiceGuid_field(self, value: Optional[str]):
        """
        Set data field with field name 'COMWebServiceGuid' on this record model
        """
        self.set_field_value(self.COMWEBSERVICEGUID__FIELD_NAME.field_name, value)

    def get_COMWebServiceGuid_field(self) -> Optional[str]:
        """
        Get data field value with field name 'COMWebServiceGuid' from this record model
        """
        return self.get_field_value(self.COMWEBSERVICEGUID__FIELD_NAME.field_name)

    def set_COMWebServiceUrl_field(self, value: Optional[str]):
        """
        Set data field with field name 'COMWebServiceUrl' on this record model
        """
        self.set_field_value(self.COMWEBSERVICEURL__FIELD_NAME.field_name, value)

    def get_COMWebServiceUrl_field(self) -> Optional[str]:
        """
        Get data field value with field name 'COMWebServiceUrl' from this record model
        """
        return self.get_field_value(self.COMWEBSERVICEURL__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ReportingUserPassword_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReportingUserPassword' on this record model
        """
        self.set_field_value(self.REPORTINGUSERPASSWORD__FIELD_NAME.field_name, value)

    def get_ReportingUserPassword_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReportingUserPassword' from this record model
        """
        return self.get_field_value(self.REPORTINGUSERPASSWORD__FIELD_NAME.field_name)

    def set_ReportingWebServiceHost_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReportingWebServiceHost' on this record model
        """
        self.set_field_value(self.REPORTINGWEBSERVICEHOST__FIELD_NAME.field_name, value)

    def get_ReportingWebServiceHost_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReportingWebServiceHost' from this record model
        """
        return self.get_field_value(self.REPORTINGWEBSERVICEHOST__FIELD_NAME.field_name)

    def set_ReportingWebServiceName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReportingWebServiceName' on this record model
        """
        self.set_field_value(self.REPORTINGWEBSERVICENAME__FIELD_NAME.field_name, value)

    def get_ReportingWebServiceName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReportingWebServiceName' from this record model
        """
        return self.get_field_value(self.REPORTINGWEBSERVICENAME__FIELD_NAME.field_name)

    def set_ReportingWebServicePort_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReportingWebServicePort' on this record model
        """
        self.set_field_value(self.REPORTINGWEBSERVICEPORT__FIELD_NAME.field_name, value)

    def get_ReportingWebServicePort_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReportingWebServicePort' from this record model
        """
        return self.get_field_value(self.REPORTINGWEBSERVICEPORT__FIELD_NAME.field_name)

    def set_ReportingWebServiceUserName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReportingWebServiceUserName' on this record model
        """
        self.set_field_value(self.REPORTINGWEBSERVICEUSERNAME__FIELD_NAME.field_name, value)

    def get_ReportingWebServiceUserName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReportingWebServiceUserName' from this record model
        """
        return self.get_field_value(self.REPORTINGWEBSERVICEUSERNAME__FIELD_NAME.field_name)

    def set_SampleSheetPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleSheetPath' on this record model
        """
        self.set_field_value(self.SAMPLESHEETPATH__FIELD_NAME.field_name, value)

    def get_SampleSheetPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleSheetPath' from this record model
        """
        return self.get_field_value(self.SAMPLESHEETPATH__FIELD_NAME.field_name)

    def set_SampleSheetPathForPacBio_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleSheetPathForPacBio' on this record model
        """
        self.set_field_value(self.SAMPLESHEETPATHFORPACBIO__FIELD_NAME.field_name, value)

    def get_SampleSheetPathForPacBio_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleSheetPathForPacBio' from this record model
        """
        return self.get_field_value(self.SAMPLESHEETPATHFORPACBIO__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ClinicalObservationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ClinicalObservation
    Data Type Display Name: Clinical Observation (Clinical Observations)
    Fields: Site, Status, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, Severity, Symptom
    """
    DATA_TYPE_NAME: Final[str] = 'ClinicalObservation'
    DISPLAY_NAME: Final[str] = "Clinical Observation"
    PLURAL_DISPLAY_NAME: Final[str] = "Clinical Observations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SEVERITY__FIELD_NAME: Final[WrapperField] = WrapperField("Severity", FieldType.PICKLIST, display_name="Severity")
    SITE__FIELD_NAME: Final[WrapperField] = WrapperField("Site", FieldType.PICKLIST, display_name="Site")
    STATUS__FIELD_NAME: Final[WrapperField] = WrapperField("Status", FieldType.PICKLIST, display_name="Status")
    SYMPTOM__FIELD_NAME: Final[WrapperField] = WrapperField("Symptom", FieldType.PICKLIST, display_name="Symptom")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Severity_field(self, value: Optional[str]):
        """
        Set data field with field name 'Severity' on this record model
        """
        self.set_field_value(self.SEVERITY__FIELD_NAME.field_name, value)

    def get_Severity_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Severity' from this record model
        """
        return self.get_field_value(self.SEVERITY__FIELD_NAME.field_name)

    def set_Site_field(self, value: Optional[str]):
        """
        Set data field with field name 'Site' on this record model
        """
        self.set_field_value(self.SITE__FIELD_NAME.field_name, value)

    def get_Site_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Site' from this record model
        """
        return self.get_field_value(self.SITE__FIELD_NAME.field_name)

    def set_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'Status' on this record model
        """
        self.set_field_value(self.STATUS__FIELD_NAME.field_name, value)

    def get_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Status' from this record model
        """
        return self.get_field_value(self.STATUS__FIELD_NAME.field_name)

    def set_Symptom_field(self, value: Optional[str]):
        """
        Set data field with field name 'Symptom' on this record model
        """
        self.set_field_value(self.SYMPTOM__FIELD_NAME.field_name, value)

    def get_Symptom_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Symptom' from this record model
        """
        return self.get_field_value(self.SYMPTOM__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ClusterDetailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ClusterDetail
    Data Type Display Name: Tile Details (Tile Details)
    Fields: CreatedBy, PassedClustersInAllTiles, TotalClustersInAllTiles, LaneCol, Lane, DateCreated, ClusterPassingFilter, ClusterPercentFilter, AlignedPM, PassingPlusMinus, ColRead, PFPercentPM, Tiles, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, Aligned, DensityPlusMinus, ClusterDensity
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: Final[str] = 'ClusterDetail'
    DISPLAY_NAME: Final[str] = "Tile Details"
    PLURAL_DISPLAY_NAME: Final[str] = "Tile Details"
    ALIGNED__FIELD_NAME: Final[WrapperField] = WrapperField("Aligned", FieldType.DOUBLE, display_name="Aligned (%)")
    ALIGNEDPM__FIELD_NAME: Final[WrapperField] = WrapperField("AlignedPM", FieldType.DOUBLE, display_name="Aligned +/- (%)")
    CLUSTERDENSITY__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterDensity", FieldType.DOUBLE, display_name="Cluster Density (K/mm2)")
    CLUSTERPASSINGFILTER__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterPassingFilter", FieldType.DOUBLE, display_name="Cluster Passing Filter (K)")
    CLUSTERPERCENTFILTER__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterPercentFilter", FieldType.DOUBLE, display_name="% Clusters Passed Filter")
    COLREAD__FIELD_NAME: Final[WrapperField] = WrapperField("ColRead", FieldType.STRING, display_name="Read")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DENSITYPLUSMINUS__FIELD_NAME: Final[WrapperField] = WrapperField("DensityPlusMinus", FieldType.DOUBLE, display_name="Density +/-")
    LANE__FIELD_NAME: Final[WrapperField] = WrapperField("Lane", FieldType.LONG, display_name="Lane (Long Integer)")
    LANECOL__FIELD_NAME: Final[WrapperField] = WrapperField("LaneCol", FieldType.STRING, display_name="Lane")
    PFPERCENTPM__FIELD_NAME: Final[WrapperField] = WrapperField("PFPercentPM", FieldType.DOUBLE, display_name="PF% +/-")
    PASSEDCLUSTERSINALLTILES__FIELD_NAME: Final[WrapperField] = WrapperField("PassedClustersInAllTiles", FieldType.DOUBLE, display_name="Reads PF (M)")
    PASSINGPLUSMINUS__FIELD_NAME: Final[WrapperField] = WrapperField("PassingPlusMinus", FieldType.DOUBLE, display_name="PF +/-")
    TILES__FIELD_NAME: Final[WrapperField] = WrapperField("Tiles", FieldType.INTEGER, display_name="Tiles")
    TOTALCLUSTERSINALLTILES__FIELD_NAME: Final[WrapperField] = WrapperField("TotalClustersInAllTiles", FieldType.DOUBLE, display_name="Reads (M)")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Aligned_field(self, value: Optional[float]):
        """
        Set data field with field name 'Aligned' on this record model
        """
        self.set_field_value(self.ALIGNED__FIELD_NAME.field_name, value)

    def get_Aligned_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Aligned' from this record model
        """
        return self.get_field_value(self.ALIGNED__FIELD_NAME.field_name)

    def set_AlignedPM_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlignedPM' on this record model
        """
        self.set_field_value(self.ALIGNEDPM__FIELD_NAME.field_name, value)

    def get_AlignedPM_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlignedPM' from this record model
        """
        return self.get_field_value(self.ALIGNEDPM__FIELD_NAME.field_name)

    def set_ClusterDensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ClusterDensity' on this record model
        """
        self.set_field_value(self.CLUSTERDENSITY__FIELD_NAME.field_name, value)

    def get_ClusterDensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ClusterDensity' from this record model
        """
        return self.get_field_value(self.CLUSTERDENSITY__FIELD_NAME.field_name)

    def set_ClusterPassingFilter_field(self, value: Optional[float]):
        """
        Set data field with field name 'ClusterPassingFilter' on this record model
        """
        self.set_field_value(self.CLUSTERPASSINGFILTER__FIELD_NAME.field_name, value)

    def get_ClusterPassingFilter_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ClusterPassingFilter' from this record model
        """
        return self.get_field_value(self.CLUSTERPASSINGFILTER__FIELD_NAME.field_name)

    def set_ClusterPercentFilter_field(self, value: Optional[float]):
        """
        Set data field with field name 'ClusterPercentFilter' on this record model
        """
        self.set_field_value(self.CLUSTERPERCENTFILTER__FIELD_NAME.field_name, value)

    def get_ClusterPercentFilter_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ClusterPercentFilter' from this record model
        """
        return self.get_field_value(self.CLUSTERPERCENTFILTER__FIELD_NAME.field_name)

    def set_ColRead_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColRead' on this record model
        """
        self.set_field_value(self.COLREAD__FIELD_NAME.field_name, value)

    def get_ColRead_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColRead' from this record model
        """
        return self.get_field_value(self.COLREAD__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DensityPlusMinus_field(self, value: Optional[float]):
        """
        Set data field with field name 'DensityPlusMinus' on this record model
        """
        self.set_field_value(self.DENSITYPLUSMINUS__FIELD_NAME.field_name, value)

    def get_DensityPlusMinus_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DensityPlusMinus' from this record model
        """
        return self.get_field_value(self.DENSITYPLUSMINUS__FIELD_NAME.field_name)

    def set_Lane_field(self, value: Optional[int]):
        """
        Set data field with field name 'Lane' on this record model
        """
        self.set_field_value(self.LANE__FIELD_NAME.field_name, value)

    def get_Lane_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Lane' from this record model
        """
        return self.get_field_value(self.LANE__FIELD_NAME.field_name)

    def set_LaneCol_field(self, value: Optional[str]):
        """
        Set data field with field name 'LaneCol' on this record model
        """
        self.set_field_value(self.LANECOL__FIELD_NAME.field_name, value)

    def get_LaneCol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LaneCol' from this record model
        """
        return self.get_field_value(self.LANECOL__FIELD_NAME.field_name)

    def set_PFPercentPM_field(self, value: Optional[float]):
        """
        Set data field with field name 'PFPercentPM' on this record model
        """
        self.set_field_value(self.PFPERCENTPM__FIELD_NAME.field_name, value)

    def get_PFPercentPM_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PFPercentPM' from this record model
        """
        return self.get_field_value(self.PFPERCENTPM__FIELD_NAME.field_name)

    def set_PassedClustersInAllTiles_field(self, value: Optional[float]):
        """
        Set data field with field name 'PassedClustersInAllTiles' on this record model
        """
        self.set_field_value(self.PASSEDCLUSTERSINALLTILES__FIELD_NAME.field_name, value)

    def get_PassedClustersInAllTiles_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PassedClustersInAllTiles' from this record model
        """
        return self.get_field_value(self.PASSEDCLUSTERSINALLTILES__FIELD_NAME.field_name)

    def set_PassingPlusMinus_field(self, value: Optional[float]):
        """
        Set data field with field name 'PassingPlusMinus' on this record model
        """
        self.set_field_value(self.PASSINGPLUSMINUS__FIELD_NAME.field_name, value)

    def get_PassingPlusMinus_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PassingPlusMinus' from this record model
        """
        return self.get_field_value(self.PASSINGPLUSMINUS__FIELD_NAME.field_name)

    def set_Tiles_field(self, value: Optional[int]):
        """
        Set data field with field name 'Tiles' on this record model
        """
        self.set_field_value(self.TILES__FIELD_NAME.field_name, value)

    def get_Tiles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Tiles' from this record model
        """
        return self.get_field_value(self.TILES__FIELD_NAME.field_name)

    def set_TotalClustersInAllTiles_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalClustersInAllTiles' on this record model
        """
        self.set_field_value(self.TOTALCLUSTERSINALLTILES__FIELD_NAME.field_name, value)

    def get_TotalClustersInAllTiles_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalClustersInAllTiles' from this record model
        """
        return self.get_field_value(self.TOTALCLUSTERSINALLTILES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class CompoundModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Compound
    Data Type Display Name: Compound (Compounds)
    Fields: ExactMass, Temperature, PubchemCid, ConsumableType, Purity, DateCreated, IsGHSClassified, HasOrStereoGroup, CXSMILESHash, Density, Formula, PolarSurfaceArea, GHSSignal, ZoBioonly, cLogP, VeloxLastModifiedBy, MolecularWeight, InchiKey, LotNumber, CreatedBy, inchi, Charge, IUPAC, SMILES, Pressure, GHSHazardCode, TotalHBondCount, TotalHBondAcceptors, DataRecordName, ExpirationDate, CAS, VeloxLastModifiedDate, RegistryId, Yield, StereoRegHash, GHSPictoCode, GHSCautionCode
    """
    DATA_TYPE_NAME: Final[str] = 'Compound'
    DISPLAY_NAME: Final[str] = "Compound"
    PLURAL_DISPLAY_NAME: Final[str] = "Compounds"
    CAS__FIELD_NAME: Final[WrapperField] = WrapperField("CAS", FieldType.STRING, display_name="CAS")
    CXSMILESHASH__FIELD_NAME: Final[WrapperField] = WrapperField("CXSMILESHash", FieldType.STRING, display_name="CXSMILES Hash")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DENSITY__FIELD_NAME: Final[WrapperField] = WrapperField("Density", FieldType.STRING, display_name="Density")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("GHSSignal", FieldType.STRING, display_name="GHS Signal")
    HASORSTEREOGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN, display_name="Contains OR Stereo")
    IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("IUPAC", FieldType.STRING, display_name="IUPAC")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="INCHI Key")
    ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    PRESSURE__FIELD_NAME: Final[WrapperField] = WrapperField("Pressure", FieldType.DOUBLE, display_name="Pressure")
    PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("PubchemCid", FieldType.INTEGER, display_name="Pubchem CID")
    PURITY__FIELD_NAME: Final[WrapperField] = WrapperField("Purity", FieldType.DOUBLE, display_name="Purity")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="SMILES")
    STEREOREGHASH__FIELD_NAME: Final[WrapperField] = WrapperField("StereoRegHash", FieldType.STRING, display_name="Stereo Registration Hash")
    TEMPERATURE__FIELD_NAME: Final[WrapperField] = WrapperField("Temperature", FieldType.DOUBLE, display_name="Temperature")
    TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("Yield", FieldType.DOUBLE, display_name="Yield")
    ZOBIOONLY__FIELD_NAME: Final[WrapperField] = WrapperField("ZoBioonly", FieldType.BOOLEAN, display_name="Zo Bio only")
    CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="INCHI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Density_field(self, value: Optional[str]):
        """
        Set data field with field name 'Density' on this record model
        """
        self.set_field_value(self.DENSITY__FIELD_NAME.field_name, value)

    def get_Density_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Density' from this record model
        """
        return self.get_field_value(self.DENSITY__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_Pressure_field(self, value: Optional[float]):
        """
        Set data field with field name 'Pressure' on this record model
        """
        self.set_field_value(self.PRESSURE__FIELD_NAME.field_name, value)

    def get_Pressure_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Pressure' from this record model
        """
        return self.get_field_value(self.PRESSURE__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Purity' on this record model
        """
        self.set_field_value(self.PURITY__FIELD_NAME.field_name, value)

    def get_Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Purity' from this record model
        """
        return self.get_field_value(self.PURITY__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_Temperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'Temperature' on this record model
        """
        self.set_field_value(self.TEMPERATURE__FIELD_NAME.field_name, value)

    def get_Temperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Temperature' from this record model
        """
        return self.get_field_value(self.TEMPERATURE__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)

    def set_ZoBioonly_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ZoBioonly' on this record model
        """
        self.set_field_value(self.ZOBIOONLY__FIELD_NAME.field_name, value)

    def get_ZoBioonly_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ZoBioonly' from this record model
        """
        return self.get_field_value(self.ZOBIOONLY__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class CompoundPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CompoundPart
    Data Type Display Name: Compound Part (Compound Parts)
    Fields: Salts, PubchemCid, IsNormalized, IsGHSClassified, QuantityPerItem, Formula, PolarSurfaceArea, RequestImageUpdate, cLogP, CreatedBy, inchi, MultiParentLink229, EditLock, QuantityOnHand, Units, CAS, DataRecordName, INCHIShadow, RegistryId, ExactMass, ConsumableType, DateCreated, SubstanceClass, CXSMILESHash, HasOrStereoGroup, ReorderLevelQuantity, GHSSignal, RegisteredToCartridge, VeloxLastModifiedBy, MolecularWeight, InchiKey, RobTest, Charge, IUPAC, SMILES, MOL, GHSHazardCode, SMILESShadow, TotalHBondCount, TotalHBondAcceptors, VeloxLastModifiedDate, StereoRegHash, GHSPictoCode, GHSCautionCode
    """
    DATA_TYPE_NAME: Final[str] = 'CompoundPart'
    DISPLAY_NAME: Final[str] = "Compound Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Compound Parts"
    CAS__FIELD_NAME: Final[WrapperField] = WrapperField("CAS", FieldType.STRING, display_name="CAS")
    CXSMILESHASH__FIELD_NAME: Final[WrapperField] = WrapperField("CXSMILESHash", FieldType.STRING, display_name="CXSMILES Hash")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EDITLOCK__FIELD_NAME: Final[WrapperField] = WrapperField("EditLock", FieldType.BOOLEAN, display_name="Edit Lock")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("GHSSignal", FieldType.STRING, display_name="GHS Signal")
    HASORSTEREOGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN, display_name="Contains OR Stereo")
    INCHISHADOW__FIELD_NAME: Final[WrapperField] = WrapperField("INCHIShadow", FieldType.STRING, display_name="INCHI Shadow")
    IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("IUPAC", FieldType.STRING, display_name="IUPAC")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="INCHI Key")
    ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    ISNORMALIZED__FIELD_NAME: Final[WrapperField] = WrapperField("IsNormalized", FieldType.BOOLEAN, display_name="Is Normalized")
    MOL__FIELD_NAME: Final[WrapperField] = WrapperField("MOL", FieldType.STRING, display_name="MOL")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    MULTIPARENTLINK229__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink229", FieldType.MULTIPARENTLINK, display_name="Linked BioConjugateParts")
    POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("PubchemCid", FieldType.INTEGER, display_name="Pubchem CID")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REGISTEREDTOCARTRIDGE__FIELD_NAME: Final[WrapperField] = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN, display_name="Registered To Cartridge")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    REQUESTIMAGEUPDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RequestImageUpdate", FieldType.BOOLEAN, display_name="Request Image Update")
    ROBTEST__FIELD_NAME: Final[WrapperField] = WrapperField("RobTest", FieldType.STRING, display_name="Rob Test")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="Canonical SMILES")
    SMILESSHADOW__FIELD_NAME: Final[WrapperField] = WrapperField("SMILESShadow", FieldType.STRING, display_name="SMILES Shadow")
    SALTS__FIELD_NAME: Final[WrapperField] = WrapperField("Salts", FieldType.STRING, display_name="Salts")
    STEREOREGHASH__FIELD_NAME: Final[WrapperField] = WrapperField("StereoRegHash", FieldType.STRING, display_name="Stereo Registration Hash")
    SUBSTANCECLASS__FIELD_NAME: Final[WrapperField] = WrapperField("SubstanceClass", FieldType.STRING, display_name="Substance Class")
    TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="INCHI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_INCHIShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'INCHIShadow' on this record model
        """
        self.set_field_value(self.INCHISHADOW__FIELD_NAME.field_name, value)

    def get_INCHIShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'INCHIShadow' from this record model
        """
        return self.get_field_value(self.INCHISHADOW__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_IsNormalized_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsNormalized' on this record model
        """
        self.set_field_value(self.ISNORMALIZED__FIELD_NAME.field_name, value)

    def get_IsNormalized_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsNormalized' from this record model
        """
        return self.get_field_value(self.ISNORMALIZED__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_RequestImageUpdate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestImageUpdate' on this record model
        """
        self.set_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name, value)

    def get_RequestImageUpdate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestImageUpdate' from this record model
        """
        return self.get_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name)

    def set_RobTest_field(self, value: Optional[str]):
        """
        Set data field with field name 'RobTest' on this record model
        """
        self.set_field_value(self.ROBTEST__FIELD_NAME.field_name, value)

    def get_RobTest_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RobTest' from this record model
        """
        return self.get_field_value(self.ROBTEST__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SMILESShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILESShadow' on this record model
        """
        self.set_field_value(self.SMILESSHADOW__FIELD_NAME.field_name, value)

    def get_SMILESShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILESShadow' from this record model
        """
        return self.get_field_value(self.SMILESSHADOW__FIELD_NAME.field_name)

    def set_Salts_field(self, value: Optional[str]):
        """
        Set data field with field name 'Salts' on this record model
        """
        self.set_field_value(self.SALTS__FIELD_NAME.field_name, value)

    def get_Salts_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Salts' from this record model
        """
        return self.get_field_value(self.SALTS__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_SubstanceClass_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubstanceClass' on this record model
        """
        self.set_field_value(self.SUBSTANCECLASS__FIELD_NAME.field_name, value)

    def get_SubstanceClass_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubstanceClass' from this record model
        """
        return self.get_field_value(self.SUBSTANCECLASS__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class CompoundSaltConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type CompoundSaltConfig
    Data Type Display Name: Compound Salt Config (Compound Salt Configs)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SaltId, SaltSMARTS
    The corporate compound salt database. This will be a list of SMARTS expressions that will be used for desalting when importing a compound part.
    """
    DATA_TYPE_NAME: Final[str] = 'CompoundSaltConfig'
    DISPLAY_NAME: Final[str] = "Compound Salt Config"
    PLURAL_DISPLAY_NAME: Final[str] = "Compound Salt Configs"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SALTID__FIELD_NAME: Final[WrapperField] = WrapperField("SaltId", FieldType.STRING, display_name="Salt Code")
    SALTSMARTS__FIELD_NAME: Final[WrapperField] = WrapperField("SaltSMARTS", FieldType.STRING, display_name="Salt SMARTS")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SaltId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SaltId' on this record model
        """
        self.set_field_value(self.SALTID__FIELD_NAME.field_name, value)

    def get_SaltId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SaltId' from this record model
        """
        return self.get_field_value(self.SALTID__FIELD_NAME.field_name)

    def set_SaltSMARTS_field(self, value: Optional[str]):
        """
        Set data field with field name 'SaltSMARTS' on this record model
        """
        self.set_field_value(self.SALTSMARTS__FIELD_NAME.field_name, value)

    def get_SaltSMARTS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SaltSMARTS' from this record model
        """
        return self.get_field_value(self.SALTSMARTS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ComputedAssayResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ComputedAssayResults
    Data Type Display Name: Computed Assay Result (Computed Assay Results)
    Fields: NoCanTauPartSideLink, CreatedBy, NewChem1PartSideLink, CompoundPartLink, DateCreated, ChemReagentPartLink, Name, ChemRegPartPartSideLink, DataRecordName, AssayUnits, TextValue, AssayType, VeloxLastModifiedDate, VeloxLastModifiedBy, SampleSideLink, NumericValue, Robs3rdRegPartSideLink
    Stores the computed assay results from a fixed formula for program that operates on data.
    """
    DATA_TYPE_NAME: Final[str] = 'ComputedAssayResults'
    DISPLAY_NAME: Final[str] = "Computed Assay Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Computed Assay Results"
    ASSAYTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("AssayType", FieldType.STRING, display_name="Assay Type")
    ASSAYUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("AssayUnits", FieldType.SELECTION, display_name="Units")
    CHEMREAGENTPARTLINK__FIELD_NAME: Final[WrapperField] = WrapperField("ChemReagentPartLink", FieldType.SIDE_LINK, display_name="Chem Reagent Part Link")
    CHEMREGPARTPARTSIDELINK__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPartPartSideLink", FieldType.SIDE_LINK, display_name="Company X Reagent Part Part Link")
    COMPOUNDPARTLINK__FIELD_NAME: Final[WrapperField] = WrapperField("CompoundPartLink", FieldType.SIDE_LINK, display_name="Compound Part Link")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    NAME__FIELD_NAME: Final[WrapperField] = WrapperField("Name", FieldType.STRING, display_name="Name")
    NEWCHEM1PARTSIDELINK__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1PartSideLink", FieldType.SIDE_LINK, display_name="New Chem 1 Part Link")
    NOCANTAUPARTSIDELINK__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTauPartSideLink", FieldType.SIDE_LINK, display_name="No Canonical Tautomer Part Link")
    NUMERICVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("NumericValue", FieldType.DOUBLE, display_name="Numeric Value")
    ROBS3RDREGPARTSIDELINK__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdRegPartSideLink", FieldType.SIDE_LINK, display_name="Regie McReg Face Part Part Link")
    SAMPLESIDELINK__FIELD_NAME: Final[WrapperField] = WrapperField("SampleSideLink", FieldType.SIDE_LINK, display_name="Sample Side Link")
    TEXTVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("TextValue", FieldType.STRING, display_name="Text Value")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AssayType_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssayType' on this record model
        """
        self.set_field_value(self.ASSAYTYPE__FIELD_NAME.field_name, value)

    def get_AssayType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssayType' from this record model
        """
        return self.get_field_value(self.ASSAYTYPE__FIELD_NAME.field_name)

    def set_AssayUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssayUnits' on this record model
        """
        self.set_field_value(self.ASSAYUNITS__FIELD_NAME.field_name, value)

    def get_AssayUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssayUnits' from this record model
        """
        return self.get_field_value(self.ASSAYUNITS__FIELD_NAME.field_name)

    def set_ChemReagentPartLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemReagentPartLink' on this record model
        """
        self.set_field_value(self.CHEMREAGENTPARTLINK__FIELD_NAME.field_name, value)

    def get_ChemReagentPartLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemReagentPartLink' from this record model
        """
        return self.get_field_value(self.CHEMREAGENTPARTLINK__FIELD_NAME.field_name)

    def set_ChemRegPartPartSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemRegPartPartSideLink' on this record model
        """
        self.set_field_value(self.CHEMREGPARTPARTSIDELINK__FIELD_NAME.field_name, value)

    def get_ChemRegPartPartSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemRegPartPartSideLink' from this record model
        """
        return self.get_field_value(self.CHEMREGPARTPARTSIDELINK__FIELD_NAME.field_name)

    def set_CompoundPartLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompoundPartLink' on this record model
        """
        self.set_field_value(self.COMPOUNDPARTLINK__FIELD_NAME.field_name, value)

    def get_CompoundPartLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompoundPartLink' from this record model
        """
        return self.get_field_value(self.COMPOUNDPARTLINK__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_NewChem1PartSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'NewChem1PartSideLink' on this record model
        """
        self.set_field_value(self.NEWCHEM1PARTSIDELINK__FIELD_NAME.field_name, value)

    def get_NewChem1PartSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NewChem1PartSideLink' from this record model
        """
        return self.get_field_value(self.NEWCHEM1PARTSIDELINK__FIELD_NAME.field_name)

    def set_NoCanTauPartSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'NoCanTauPartSideLink' on this record model
        """
        self.set_field_value(self.NOCANTAUPARTSIDELINK__FIELD_NAME.field_name, value)

    def get_NoCanTauPartSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NoCanTauPartSideLink' from this record model
        """
        return self.get_field_value(self.NOCANTAUPARTSIDELINK__FIELD_NAME.field_name)

    def set_NumericValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'NumericValue' on this record model
        """
        self.set_field_value(self.NUMERICVALUE__FIELD_NAME.field_name, value)

    def get_NumericValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NumericValue' from this record model
        """
        return self.get_field_value(self.NUMERICVALUE__FIELD_NAME.field_name)

    def set_Robs3rdRegPartSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'Robs3rdRegPartSideLink' on this record model
        """
        self.set_field_value(self.ROBS3RDREGPARTSIDELINK__FIELD_NAME.field_name, value)

    def get_Robs3rdRegPartSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Robs3rdRegPartSideLink' from this record model
        """
        return self.get_field_value(self.ROBS3RDREGPARTSIDELINK__FIELD_NAME.field_name)

    def set_SampleSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleSideLink' on this record model
        """
        self.set_field_value(self.SAMPLESIDELINK__FIELD_NAME.field_name, value)

    def get_SampleSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleSideLink' from this record model
        """
        return self.get_field_value(self.SAMPLESIDELINK__FIELD_NAME.field_name)

    def set_TextValue_field(self, value: Optional[str]):
        """
        Set data field with field name 'TextValue' on this record model
        """
        self.set_field_value(self.TEXTVALUE__FIELD_NAME.field_name, value)

    def get_TextValue_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TextValue' from this record model
        """
        return self.get_field_value(self.TEXTVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ConditionsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Conditions
    Data Type Display Name: Conditions (Conditions)
    Fields: Temperature, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, Pressure
    """
    DATA_TYPE_NAME: Final[str] = 'Conditions'
    DISPLAY_NAME: Final[str] = "Conditions"
    PLURAL_DISPLAY_NAME: Final[str] = "Conditions"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    PRESSURE__FIELD_NAME: Final[WrapperField] = WrapperField("Pressure", FieldType.DOUBLE, display_name="Pressure")
    TEMPERATURE__FIELD_NAME: Final[WrapperField] = WrapperField("Temperature", FieldType.DOUBLE, display_name="Temperature")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Pressure_field(self, value: Optional[float]):
        """
        Set data field with field name 'Pressure' on this record model
        """
        self.set_field_value(self.PRESSURE__FIELD_NAME.field_name, value)

    def get_Pressure_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Pressure' from this record model
        """
        return self.get_field_value(self.PRESSURE__FIELD_NAME.field_name)

    def set_Temperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'Temperature' on this record model
        """
        self.set_field_value(self.TEMPERATURE__FIELD_NAME.field_name, value)

    def get_Temperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Temperature' from this record model
        """
        return self.get_field_value(self.TEMPERATURE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ConsumableModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Consumable
    Data Type Display Name: Reagent Part (Reagent Parts)
    Fields: EditConsumableType, Description, CreatedBy, PartNumber, ConsumableType, DateCreated, Vendor, QuantityOnHand, AspenField, Units, QuantityPerItem, ReorderLevelQuantity, DataRecordName, VeloxLastModifiedDate, CASNo, VeloxLastModifiedBy, ConsumableName, ConsumableClassification
    General definition of a consumable object.
    """
    DATA_TYPE_NAME: Final[str] = 'Consumable'
    DISPLAY_NAME: Final[str] = "Reagent Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Reagent Parts"
    ASPENFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("AspenField", FieldType.STRING, display_name="Aspen Field")
    CASNO__FIELD_NAME: Final[WrapperField] = WrapperField("CASNo", FieldType.STRING, display_name="CAS-No")
    CONSUMABLECLASSIFICATION__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableClassification", FieldType.SELECTION, display_name="Consumable Classification")
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Reagent Name                           ")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Consumable Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    EDITCONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("EditConsumableType", FieldType.BOOLEAN, display_name="Edit Consumable Type")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number                       ")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.SELECTION, display_name="Vendor")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AspenField_field(self, value: Optional[str]):
        """
        Set data field with field name 'AspenField' on this record model
        """
        self.set_field_value(self.ASPENFIELD__FIELD_NAME.field_name, value)

    def get_AspenField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AspenField' from this record model
        """
        return self.get_field_value(self.ASPENFIELD__FIELD_NAME.field_name)

    def set_CASNo_field(self, value: Optional[str]):
        """
        Set data field with field name 'CASNo' on this record model
        """
        self.set_field_value(self.CASNO__FIELD_NAME.field_name, value)

    def get_CASNo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CASNo' from this record model
        """
        return self.get_field_value(self.CASNO__FIELD_NAME.field_name)

    def set_ConsumableClassification_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableClassification' on this record model
        """
        self.set_field_value(self.CONSUMABLECLASSIFICATION__FIELD_NAME.field_name, value)

    def get_ConsumableClassification_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableClassification' from this record model
        """
        return self.get_field_value(self.CONSUMABLECLASSIFICATION__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_EditConsumableType_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditConsumableType' on this record model
        """
        self.set_field_value(self.EDITCONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_EditConsumableType_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditConsumableType' from this record model
        """
        return self.get_field_value(self.EDITCONSUMABLETYPE__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class ConsumableImporterMappingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ConsumableImporterMapping
    Data Type Display Name: Consumable Importer Mapping (Consumable Importer Mappings)
    Fields: MappingGroup, MappingOrder, CreatedBy, DateCreated, DataRecordName, DataField, DisplayName, VeloxLastModifiedDate, VeloxLastModifiedBy, DataType, MappingName
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: Final[str] = 'ConsumableImporterMapping'
    DISPLAY_NAME: Final[str] = "Consumable Importer Mapping"
    PLURAL_DISPLAY_NAME: Final[str] = "Consumable Importer Mappings"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATAFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("DataField", FieldType.SELECTION, display_name="Data Field")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DataType", FieldType.PICKLIST, display_name="Data Type")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DISPLAYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DisplayName", FieldType.STRING, display_name="Data Field Display Name")
    MAPPINGGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("MappingGroup", FieldType.STRING, display_name="Mapping Group")
    MAPPINGNAME__FIELD_NAME: Final[WrapperField] = WrapperField("MappingName", FieldType.STRING, display_name="Mapping Name")
    MAPPINGORDER__FIELD_NAME: Final[WrapperField] = WrapperField("MappingOrder", FieldType.SHORT, display_name="Mapping Group Order")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataField_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataField' on this record model
        """
        self.set_field_value(self.DATAFIELD__FIELD_NAME.field_name, value)

    def get_DataField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataField' from this record model
        """
        return self.get_field_value(self.DATAFIELD__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DisplayName' on this record model
        """
        self.set_field_value(self.DISPLAYNAME__FIELD_NAME.field_name, value)

    def get_DisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DisplayName' from this record model
        """
        return self.get_field_value(self.DISPLAYNAME__FIELD_NAME.field_name)

    def set_MappingGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingGroup' on this record model
        """
        self.set_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name, value)

    def get_MappingGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingGroup' from this record model
        """
        return self.get_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name)

    def set_MappingName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingName' on this record model
        """
        self.set_field_value(self.MAPPINGNAME__FIELD_NAME.field_name, value)

    def get_MappingName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingName' from this record model
        """
        return self.get_field_value(self.MAPPINGNAME__FIELD_NAME.field_name)

    def set_MappingOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'MappingOrder' on this record model
        """
        self.set_field_value(self.MAPPINGORDER__FIELD_NAME.field_name, value)

    def get_MappingOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MappingOrder' from this record model
        """
        return self.get_field_value(self.MAPPINGORDER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ConsumableImportingMapConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ConsumableImportingMapConfig
    Data Type Display Name: Consumable Importing Mapping Configuration (Consumable Importing Mapping Configurations)
    Fields: MappingGroup, MappingOrder, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: Final[str] = 'ConsumableImportingMapConfig'
    DISPLAY_NAME: Final[str] = "Consumable Importing Mapping Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Consumable Importing Mapping Configurations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MAPPINGGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("MappingGroup", FieldType.STRING, display_name="Mapping Group")
    MAPPINGORDER__FIELD_NAME: Final[WrapperField] = WrapperField("MappingOrder", FieldType.SHORT, display_name="Mapping Group Order")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_MappingGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingGroup' on this record model
        """
        self.set_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name, value)

    def get_MappingGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingGroup' from this record model
        """
        return self.get_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name)

    def set_MappingOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'MappingOrder' on this record model
        """
        self.set_field_value(self.MAPPINGORDER__FIELD_NAME.field_name, value)

    def get_MappingOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MappingOrder' from this record model
        """
        return self.get_field_value(self.MAPPINGORDER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ConsumableItemModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ConsumableItem
    Data Type Display Name: Reagent (Reagents)
    Fields: PartNumber, ConsumableType, DateCreated, ConsumableBarcode, ValidationExperimentId, KitLotNumbers, BarcodeDefined, RowPosition, ColPosition, CASNo, VeloxLastModifiedBy, UnknownExpiration, LotNumber, StorageLocationBarcode, Validated, CreatedBy, MultiParentLink705, CostPerUnit, Expired, StorageUnitPath, Units, LotNumberDefined, ValidationDate, DataRecordName, ExpirationDate, VeloxLastModifiedDate, ValidationTechician, ConsumableName, QuantityRemaining
    Detailed representation of a more specific consumable object.
    """
    DATA_TYPE_NAME: Final[str] = 'ConsumableItem'
    DISPLAY_NAME: Final[str] = "Reagent"
    PLURAL_DISPLAY_NAME: Final[str] = "Reagents"
    BARCODEDEFINED__FIELD_NAME: Final[WrapperField] = WrapperField("BarcodeDefined", FieldType.BOOLEAN, display_name="Barcode Defined")
    CASNO__FIELD_NAME: Final[WrapperField] = WrapperField("CASNo", FieldType.STRING, display_name="CAS-No")
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.SELECTION, display_name="Col Position")
    CONSUMABLEBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableBarcode", FieldType.STRING, display_name="Barcode      ")
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Consumable Name")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Consumable Type")
    COSTPERUNIT__FIELD_NAME: Final[WrapperField] = WrapperField("CostPerUnit", FieldType.DOUBLE, display_name="Cost Per Unit")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    EXPIRED__FIELD_NAME: Final[WrapperField] = WrapperField("Expired", FieldType.BOOLEAN, display_name="Expired")
    KITLOTNUMBERS__FIELD_NAME: Final[WrapperField] = WrapperField("KitLotNumbers", FieldType.STRING, display_name="Kit Lot Numbers")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number    ")
    LOTNUMBERDEFINED__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumberDefined", FieldType.BOOLEAN, display_name="Lot Number Defined")
    MULTIPARENTLINK705__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink705", FieldType.MULTIPARENTLINK, display_name="Linked IlluminaSeqExperiments")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number                       ")
    QUANTITYREMAINING__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityRemaining", FieldType.DOUBLE, display_name="Quantity")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.SELECTION, display_name="Row Position")
    STORAGELOCATIONBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("StorageLocationBarcode", FieldType.SELECTION, display_name="Storage Location Barcode")
    STORAGEUNITPATH__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitPath", FieldType.STRING, display_name="Storage Location Path")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    UNKNOWNEXPIRATION__FIELD_NAME: Final[WrapperField] = WrapperField("UnknownExpiration", FieldType.BOOLEAN, display_name="Unknown Expiration?")
    VALIDATED__FIELD_NAME: Final[WrapperField] = WrapperField("Validated", FieldType.BOOLEAN, display_name="Validated")
    VALIDATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ValidationDate", FieldType.DATE, display_name="Validation Date")
    VALIDATIONEXPERIMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("ValidationExperimentId", FieldType.STRING, display_name="Validation Experiment Id")
    VALIDATIONTECHICIAN__FIELD_NAME: Final[WrapperField] = WrapperField("ValidationTechician", FieldType.SELECTION, display_name="Validation Technician")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BarcodeDefined_field(self, value: Optional[bool]):
        """
        Set data field with field name 'BarcodeDefined' on this record model
        """
        self.set_field_value(self.BARCODEDEFINED__FIELD_NAME.field_name, value)

    def get_BarcodeDefined_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'BarcodeDefined' from this record model
        """
        return self.get_field_value(self.BARCODEDEFINED__FIELD_NAME.field_name)

    def set_CASNo_field(self, value: Optional[str]):
        """
        Set data field with field name 'CASNo' on this record model
        """
        self.set_field_value(self.CASNO__FIELD_NAME.field_name, value)

    def get_CASNo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CASNo' from this record model
        """
        return self.get_field_value(self.CASNO__FIELD_NAME.field_name)

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def set_ConsumableBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableBarcode' on this record model
        """
        self.set_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name, value)

    def get_ConsumableBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableBarcode' from this record model
        """
        return self.get_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_CostPerUnit_field(self, value: Optional[float]):
        """
        Set data field with field name 'CostPerUnit' on this record model
        """
        self.set_field_value(self.COSTPERUNIT__FIELD_NAME.field_name, value)

    def get_CostPerUnit_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CostPerUnit' from this record model
        """
        return self.get_field_value(self.COSTPERUNIT__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_Expired_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Expired' on this record model
        """
        self.set_field_value(self.EXPIRED__FIELD_NAME.field_name, value)

    def get_Expired_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Expired' from this record model
        """
        return self.get_field_value(self.EXPIRED__FIELD_NAME.field_name)

    def set_KitLotNumbers_field(self, value: Optional[str]):
        """
        Set data field with field name 'KitLotNumbers' on this record model
        """
        self.set_field_value(self.KITLOTNUMBERS__FIELD_NAME.field_name, value)

    def get_KitLotNumbers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'KitLotNumbers' from this record model
        """
        return self.get_field_value(self.KITLOTNUMBERS__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_LotNumberDefined_field(self, value: Optional[bool]):
        """
        Set data field with field name 'LotNumberDefined' on this record model
        """
        self.set_field_value(self.LOTNUMBERDEFINED__FIELD_NAME.field_name, value)

    def get_LotNumberDefined_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'LotNumberDefined' from this record model
        """
        return self.get_field_value(self.LOTNUMBERDEFINED__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityRemaining_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityRemaining' on this record model
        """
        self.set_field_value(self.QUANTITYREMAINING__FIELD_NAME.field_name, value)

    def get_QuantityRemaining_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityRemaining' from this record model
        """
        return self.get_field_value(self.QUANTITYREMAINING__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_StorageLocationBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageLocationBarcode' on this record model
        """
        self.set_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name, value)

    def get_StorageLocationBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageLocationBarcode' from this record model
        """
        return self.get_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def set_UnknownExpiration_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UnknownExpiration' on this record model
        """
        self.set_field_value(self.UNKNOWNEXPIRATION__FIELD_NAME.field_name, value)

    def get_UnknownExpiration_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UnknownExpiration' from this record model
        """
        return self.get_field_value(self.UNKNOWNEXPIRATION__FIELD_NAME.field_name)

    def set_Validated_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Validated' on this record model
        """
        self.set_field_value(self.VALIDATED__FIELD_NAME.field_name, value)

    def get_Validated_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Validated' from this record model
        """
        return self.get_field_value(self.VALIDATED__FIELD_NAME.field_name)

    def set_ValidationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ValidationDate' on this record model
        """
        self.set_field_value(self.VALIDATIONDATE__FIELD_NAME.field_name, value)

    def get_ValidationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ValidationDate' from this record model
        """
        return self.get_field_value(self.VALIDATIONDATE__FIELD_NAME.field_name)

    def set_ValidationExperimentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ValidationExperimentId' on this record model
        """
        self.set_field_value(self.VALIDATIONEXPERIMENTID__FIELD_NAME.field_name, value)

    def get_ValidationExperimentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ValidationExperimentId' from this record model
        """
        return self.get_field_value(self.VALIDATIONEXPERIMENTID__FIELD_NAME.field_name)

    def set_ValidationTechician_field(self, value: Optional[str]):
        """
        Set data field with field name 'ValidationTechician' on this record model
        """
        self.set_field_value(self.VALIDATIONTECHICIAN__FIELD_NAME.field_name, value)

    def get_ValidationTechician_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ValidationTechician' from this record model
        """
        return self.get_field_value(self.VALIDATIONTECHICIAN__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ConsumableLotUsageModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ConsumableLotUsage
    Data Type Display Name: Consumable Lot Usage (Consumable Lot Usages)
    Fields: CreatedBy, DateCreated, LotRecordId, ConsumableBarcode, ActiveTaskId, ExpRecordId, LotNumberFieldName, DataRecordName, VeloxLastModifiedDate, QuantityUsed, VeloxLastModifiedBy, BarcodeFieldName, ElnId, LotNumber
    Data type used in workflows to allow memory of what is used.
    """
    DATA_TYPE_NAME: Final[str] = 'ConsumableLotUsage'
    DISPLAY_NAME: Final[str] = "Consumable Lot Usage"
    PLURAL_DISPLAY_NAME: Final[str] = "Consumable Lot Usages"
    ACTIVETASKID__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveTaskId", FieldType.LONG, display_name="Unique ID (Numeric)")
    BARCODEFIELDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("BarcodeFieldName", FieldType.STRING, display_name="Barcode Field Name")
    CONSUMABLEBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableBarcode", FieldType.STRING, display_name="Barcode                                  ")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ELNID__FIELD_NAME: Final[WrapperField] = WrapperField("ElnId", FieldType.STRING, display_name="Unique ID (Text)")
    EXPRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ExpRecordId", FieldType.LONG, display_name="Experiment Record ID")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number                           ")
    LOTNUMBERFIELDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumberFieldName", FieldType.STRING, display_name="Lot Number Field Name")
    LOTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("LotRecordId", FieldType.LONG, display_name="Reagent Lot Record ID")
    QUANTITYUSED__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityUsed", FieldType.DOUBLE, display_name="Quantity Used")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveTaskId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveTaskId' on this record model
        """
        self.set_field_value(self.ACTIVETASKID__FIELD_NAME.field_name, value)

    def get_ActiveTaskId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveTaskId' from this record model
        """
        return self.get_field_value(self.ACTIVETASKID__FIELD_NAME.field_name)

    def set_BarcodeFieldName_field(self, value: Optional[str]):
        """
        Set data field with field name 'BarcodeFieldName' on this record model
        """
        self.set_field_value(self.BARCODEFIELDNAME__FIELD_NAME.field_name, value)

    def get_BarcodeFieldName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BarcodeFieldName' from this record model
        """
        return self.get_field_value(self.BARCODEFIELDNAME__FIELD_NAME.field_name)

    def set_ConsumableBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableBarcode' on this record model
        """
        self.set_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name, value)

    def get_ConsumableBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableBarcode' from this record model
        """
        return self.get_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ElnId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ElnId' on this record model
        """
        self.set_field_value(self.ELNID__FIELD_NAME.field_name, value)

    def get_ElnId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ElnId' from this record model
        """
        return self.get_field_value(self.ELNID__FIELD_NAME.field_name)

    def set_ExpRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpRecordId' on this record model
        """
        self.set_field_value(self.EXPRECORDID__FIELD_NAME.field_name, value)

    def get_ExpRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpRecordId' from this record model
        """
        return self.get_field_value(self.EXPRECORDID__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_LotNumberFieldName_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumberFieldName' on this record model
        """
        self.set_field_value(self.LOTNUMBERFIELDNAME__FIELD_NAME.field_name, value)

    def get_LotNumberFieldName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumberFieldName' from this record model
        """
        return self.get_field_value(self.LOTNUMBERFIELDNAME__FIELD_NAME.field_name)

    def set_LotRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'LotRecordId' on this record model
        """
        self.set_field_value(self.LOTRECORDID__FIELD_NAME.field_name, value)

    def get_LotRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LotRecordId' from this record model
        """
        return self.get_field_value(self.LOTRECORDID__FIELD_NAME.field_name)

    def set_QuantityUsed_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityUsed' on this record model
        """
        self.set_field_value(self.QUANTITYUSED__FIELD_NAME.field_name, value)

    def get_QuantityUsed_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityUsed' from this record model
        """
        return self.get_field_value(self.QUANTITYUSED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DataLinkConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DataLinkConfig
    Data Type Display Name: Data Link Configuration (Data Link Configuration)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'DataLinkConfig'
    DISPLAY_NAME: Final[str] = "Data Link Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Data Link Configuration"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DataWarehouseRScriptModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DataWarehouseRScript
    Data Type Display Name: Data Warehouse R Script (Data Warehouse R Scripts)
    Fields: ScriptContent, CreatedBy, DataRecordName, VeloxLastModifiedDate, ScriptDescription, ScriptId, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'DataWarehouseRScript'
    DISPLAY_NAME: Final[str] = "Data Warehouse R Script"
    PLURAL_DISPLAY_NAME: Final[str] = "Data Warehouse R Scripts"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SCRIPTCONTENT__FIELD_NAME: Final[WrapperField] = WrapperField("ScriptContent", FieldType.STRING, display_name="Script Content")
    SCRIPTDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("ScriptDescription", FieldType.STRING, display_name="Script Description")
    SCRIPTID__FIELD_NAME: Final[WrapperField] = WrapperField("ScriptId", FieldType.STRING, display_name="Script ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ScriptContent_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScriptContent' on this record model
        """
        self.set_field_value(self.SCRIPTCONTENT__FIELD_NAME.field_name, value)

    def get_ScriptContent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScriptContent' from this record model
        """
        return self.get_field_value(self.SCRIPTCONTENT__FIELD_NAME.field_name)

    def set_ScriptDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScriptDescription' on this record model
        """
        self.set_field_value(self.SCRIPTDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ScriptDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScriptDescription' from this record model
        """
        return self.get_field_value(self.SCRIPTDESCRIPTION__FIELD_NAME.field_name)

    def set_ScriptId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScriptId' on this record model
        """
        self.set_field_value(self.SCRIPTID__FIELD_NAME.field_name, value)

    def get_ScriptId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScriptId' from this record model
        """
        return self.get_field_value(self.SCRIPTID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DirectoryModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Directory
    Data Type Display Name: Directory (Directories)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, DirectoryName
    """
    DATA_TYPE_NAME: Final[str] = 'Directory'
    DISPLAY_NAME: Final[str] = "Directory"
    PLURAL_DISPLAY_NAME: Final[str] = "Directories"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DIRECTORYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DirectoryName", FieldType.STRING, display_name="Directory Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DirectoryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DirectoryName' on this record model
        """
        self.set_field_value(self.DIRECTORYNAME__FIELD_NAME.field_name, value)

    def get_DirectoryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DirectoryName' from this record model
        """
        return self.get_field_value(self.DIRECTORYNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DNAModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DNA
    Data Type Display Name: DNA (DNAs)
    Fields: CreatedBy, DataRecordName, ExpirationDate, PartNumber, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SequenceType, ItemId, Name
    """
    DATA_TYPE_NAME: Final[str] = 'DNA'
    DISPLAY_NAME: Final[str] = "DNA"
    PLURAL_DISPLAY_NAME: Final[str] = "DNAs"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    ITEMID__FIELD_NAME: Final[WrapperField] = WrapperField("ItemId", FieldType.STRING, display_name="Lot Number")
    NAME__FIELD_NAME: Final[WrapperField] = WrapperField("Name", FieldType.STRING, display_name="Name")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Registry ID")
    SEQUENCETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SequenceType", FieldType.PICKLIST, display_name="Sequence Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_ItemId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ItemId' on this record model
        """
        self.set_field_value(self.ITEMID__FIELD_NAME.field_name, value)

    def get_ItemId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ItemId' from this record model
        """
        return self.get_field_value(self.ITEMID__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_SequenceType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceType' on this record model
        """
        self.set_field_value(self.SEQUENCETYPE__FIELD_NAME.field_name, value)

    def get_SequenceType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceType' from this record model
        """
        return self.get_field_value(self.SEQUENCETYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DNAPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DNAPart
    Data Type Display Name: DNA Part (DNA Parts)
    Fields: Description, CreatedBy, PartNumber, SequenceHash, EditLock, DateCreated, SequenceType, Sequence, QuantityOnHand, GenebankAttachment, Name, DataRecordName, IsCircular, VeloxLastModifiedDate, VeloxLastModifiedBy, GenbankAttachment, SourcePart
    <-- VIRTUAL ENTITY DATA TYPE -->
    """
    DATA_TYPE_NAME: Final[str] = 'DNAPart'
    DISPLAY_NAME: Final[str] = "DNA Part"
    PLURAL_DISPLAY_NAME: Final[str] = "DNA Parts"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    EDITLOCK__FIELD_NAME: Final[WrapperField] = WrapperField("EditLock", FieldType.BOOLEAN, display_name="Edit Lock")
    GENBANKATTACHMENT__FIELD_NAME: Final[WrapperField] = WrapperField("GenbankAttachment", FieldType.SIDE_LINK, display_name="Genbank Attachment")
    GENEBANKATTACHMENT__FIELD_NAME: Final[WrapperField] = WrapperField("GenebankAttachment", FieldType.STRING, display_name="Related Genbank File (OLD)")
    ISCIRCULAR__FIELD_NAME: Final[WrapperField] = WrapperField("IsCircular", FieldType.BOOLEAN, display_name="Is Circular")
    NAME__FIELD_NAME: Final[WrapperField] = WrapperField("Name", FieldType.STRING, display_name="Name")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Registry ID")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity On Hand")
    SEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("Sequence", FieldType.STRING, display_name="Sequence")
    SEQUENCEHASH__FIELD_NAME: Final[WrapperField] = WrapperField("SequenceHash", FieldType.STRING, display_name="Sequence Hash")
    SEQUENCETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SequenceType", FieldType.PICKLIST, display_name="Sequence Type")
    SOURCEPART__FIELD_NAME: Final[WrapperField] = WrapperField("SourcePart", FieldType.SIDE_LINK, display_name="Source Part")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_GenbankAttachment_field(self, value: Optional[int]):
        """
        Set data field with field name 'GenbankAttachment' on this record model
        """
        self.set_field_value(self.GENBANKATTACHMENT__FIELD_NAME.field_name, value)

    def get_GenbankAttachment_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GenbankAttachment' from this record model
        """
        return self.get_field_value(self.GENBANKATTACHMENT__FIELD_NAME.field_name)

    def set_GenebankAttachment_field(self, value: Optional[str]):
        """
        Set data field with field name 'GenebankAttachment' on this record model
        """
        self.set_field_value(self.GENEBANKATTACHMENT__FIELD_NAME.field_name, value)

    def get_GenebankAttachment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GenebankAttachment' from this record model
        """
        return self.get_field_value(self.GENEBANKATTACHMENT__FIELD_NAME.field_name)

    def set_IsCircular_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsCircular' on this record model
        """
        self.set_field_value(self.ISCIRCULAR__FIELD_NAME.field_name, value)

    def get_IsCircular_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsCircular' from this record model
        """
        return self.get_field_value(self.ISCIRCULAR__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_Sequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'Sequence' on this record model
        """
        self.set_field_value(self.SEQUENCE__FIELD_NAME.field_name, value)

    def get_Sequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Sequence' from this record model
        """
        return self.get_field_value(self.SEQUENCE__FIELD_NAME.field_name)

    def set_SequenceHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceHash' on this record model
        """
        self.set_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name, value)

    def get_SequenceHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceHash' from this record model
        """
        return self.get_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name)

    def set_SequenceType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceType' on this record model
        """
        self.set_field_value(self.SEQUENCETYPE__FIELD_NAME.field_name, value)

    def get_SequenceType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceType' from this record model
        """
        return self.get_field_value(self.SEQUENCETYPE__FIELD_NAME.field_name)

    def set_SourcePart_field(self, value: Optional[int]):
        """
        Set data field with field name 'SourcePart' on this record model
        """
        self.set_field_value(self.SOURCEPART__FIELD_NAME.field_name, value)

    def get_SourcePart_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SourcePart' from this record model
        """
        return self.get_field_value(self.SOURCEPART__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DNAPartFragmentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DNAPartFragment
    Data Type Display Name: DNA Part Fragment (DNA Part Fragments)
    Fields: FragmentEnd, CreatedBy, FragOH5, DateCreated, FragOH3, SourcePartSideLink, Problems, DataRecordName, FragmentStart, VeloxLastModifiedDate, VeloxLastModifiedBy, IsBackwardDirection
    """
    DATA_TYPE_NAME: Final[str] = 'DNAPartFragment'
    DISPLAY_NAME: Final[str] = "DNA Part Fragment"
    PLURAL_DISPLAY_NAME: Final[str] = "DNA Part Fragments"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FRAGOH3__FIELD_NAME: Final[WrapperField] = WrapperField("FragOH3", FieldType.STRING, display_name="Fragment 3' Overhang")
    FRAGOH5__FIELD_NAME: Final[WrapperField] = WrapperField("FragOH5", FieldType.STRING, display_name="Fragment 5' Overhang")
    FRAGMENTEND__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentEnd", FieldType.INTEGER, display_name="Fragment End")
    FRAGMENTSTART__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentStart", FieldType.INTEGER, display_name="Fragment Start")
    ISBACKWARDDIRECTION__FIELD_NAME: Final[WrapperField] = WrapperField("IsBackwardDirection", FieldType.BOOLEAN, display_name="Is Backward Direction")
    PROBLEMS__FIELD_NAME: Final[WrapperField] = WrapperField("Problems", FieldType.STRING, display_name="Problems")
    SOURCEPARTSIDELINK__FIELD_NAME: Final[WrapperField] = WrapperField("SourcePartSideLink", FieldType.SIDE_LINK, display_name="Source Part Side Link")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FragOH3_field(self, value: Optional[str]):
        """
        Set data field with field name 'FragOH3' on this record model
        """
        self.set_field_value(self.FRAGOH3__FIELD_NAME.field_name, value)

    def get_FragOH3_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FragOH3' from this record model
        """
        return self.get_field_value(self.FRAGOH3__FIELD_NAME.field_name)

    def set_FragOH5_field(self, value: Optional[str]):
        """
        Set data field with field name 'FragOH5' on this record model
        """
        self.set_field_value(self.FRAGOH5__FIELD_NAME.field_name, value)

    def get_FragOH5_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FragOH5' from this record model
        """
        return self.get_field_value(self.FRAGOH5__FIELD_NAME.field_name)

    def set_FragmentEnd_field(self, value: Optional[int]):
        """
        Set data field with field name 'FragmentEnd' on this record model
        """
        self.set_field_value(self.FRAGMENTEND__FIELD_NAME.field_name, value)

    def get_FragmentEnd_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FragmentEnd' from this record model
        """
        return self.get_field_value(self.FRAGMENTEND__FIELD_NAME.field_name)

    def set_FragmentStart_field(self, value: Optional[int]):
        """
        Set data field with field name 'FragmentStart' on this record model
        """
        self.set_field_value(self.FRAGMENTSTART__FIELD_NAME.field_name, value)

    def get_FragmentStart_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FragmentStart' from this record model
        """
        return self.get_field_value(self.FRAGMENTSTART__FIELD_NAME.field_name)

    def set_IsBackwardDirection_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsBackwardDirection' on this record model
        """
        self.set_field_value(self.ISBACKWARDDIRECTION__FIELD_NAME.field_name, value)

    def get_IsBackwardDirection_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsBackwardDirection' from this record model
        """
        return self.get_field_value(self.ISBACKWARDDIRECTION__FIELD_NAME.field_name)

    def set_Problems_field(self, value: Optional[str]):
        """
        Set data field with field name 'Problems' on this record model
        """
        self.set_field_value(self.PROBLEMS__FIELD_NAME.field_name, value)

    def get_Problems_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Problems' from this record model
        """
        return self.get_field_value(self.PROBLEMS__FIELD_NAME.field_name)

    def set_SourcePartSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'SourcePartSideLink' on this record model
        """
        self.set_field_value(self.SOURCEPARTSIDELINK__FIELD_NAME.field_name, value)

    def get_SourcePartSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SourcePartSideLink' from this record model
        """
        return self.get_field_value(self.SOURCEPARTSIDELINK__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DoseResponseModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DoseResponse
    Data Type Display Name: Dose Response (Dose Responses)
    Fields: Response, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, Dose
    """
    DATA_TYPE_NAME: Final[str] = 'DoseResponse'
    DISPLAY_NAME: Final[str] = "Dose Response"
    PLURAL_DISPLAY_NAME: Final[str] = "Dose Responses"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DOSE__FIELD_NAME: Final[WrapperField] = WrapperField("Dose", FieldType.DOUBLE, display_name="Dose")
    RESPONSE__FIELD_NAME: Final[WrapperField] = WrapperField("Response", FieldType.DOUBLE, display_name="Response")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Dose_field(self, value: Optional[float]):
        """
        Set data field with field name 'Dose' on this record model
        """
        self.set_field_value(self.DOSE__FIELD_NAME.field_name, value)

    def get_Dose_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Dose' from this record model
        """
        return self.get_field_value(self.DOSE__FIELD_NAME.field_name)

    def set_Response_field(self, value: Optional[float]):
        """
        Set data field with field name 'Response' on this record model
        """
        self.set_field_value(self.RESPONSE__FIELD_NAME.field_name, value)

    def get_Response_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Response' from this record model
        """
        return self.get_field_value(self.RESPONSE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DosingResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DosingResult
    Data Type Display Name: Dosing Result (Dosing Results)
    Fields: CreatedBy, DoseResult, RouteOfAdministration, DateCreated, ExpectedDose, DoseType, DataRecordName, TreatmentRecordId, TreatmentId, DateCompleted, Formulation, DoseComments, VeloxLastModifiedDate, VeloxLastModifiedBy, DoseUnit, AgentName, BaseDosage, ActualDose
    """
    DATA_TYPE_NAME: Final[str] = 'DosingResult'
    DISPLAY_NAME: Final[str] = "Dosing Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Dosing Results"
    ACTUALDOSE__FIELD_NAME: Final[WrapperField] = WrapperField("ActualDose", FieldType.DOUBLE, display_name="Actual Dose")
    AGENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("AgentName", FieldType.SELECTION, display_name="Agent")
    BASEDOSAGE__FIELD_NAME: Final[WrapperField] = WrapperField("BaseDosage", FieldType.DOUBLE, display_name="Base Dose")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECOMPLETED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCompleted", FieldType.DATE, display_name="Date Completed")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DOSECOMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("DoseComments", FieldType.STRING, display_name="Comments")
    DOSERESULT__FIELD_NAME: Final[WrapperField] = WrapperField("DoseResult", FieldType.PICKLIST, display_name="Dose Result")
    DOSETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DoseType", FieldType.PICKLIST, display_name="Dose Type")
    DOSEUNIT__FIELD_NAME: Final[WrapperField] = WrapperField("DoseUnit", FieldType.SELECTION, display_name="Dose Unit")
    EXPECTEDDOSE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpectedDose", FieldType.DOUBLE, display_name="Expected Dose")
    FORMULATION__FIELD_NAME: Final[WrapperField] = WrapperField("Formulation", FieldType.SELECTION, display_name="Formulation")
    ROUTEOFADMINISTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("RouteOfAdministration", FieldType.SELECTION, display_name="Administration Route")
    TREATMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("TreatmentId", FieldType.STRING, display_name="Treatment Id")
    TREATMENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("TreatmentRecordId", FieldType.LONG, display_name="Treatment Record ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActualDose_field(self, value: Optional[float]):
        """
        Set data field with field name 'ActualDose' on this record model
        """
        self.set_field_value(self.ACTUALDOSE__FIELD_NAME.field_name, value)

    def get_ActualDose_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ActualDose' from this record model
        """
        return self.get_field_value(self.ACTUALDOSE__FIELD_NAME.field_name)

    def set_AgentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'AgentName' on this record model
        """
        self.set_field_value(self.AGENTNAME__FIELD_NAME.field_name, value)

    def get_AgentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AgentName' from this record model
        """
        return self.get_field_value(self.AGENTNAME__FIELD_NAME.field_name)

    def set_BaseDosage_field(self, value: Optional[float]):
        """
        Set data field with field name 'BaseDosage' on this record model
        """
        self.set_field_value(self.BASEDOSAGE__FIELD_NAME.field_name, value)

    def get_BaseDosage_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BaseDosage' from this record model
        """
        return self.get_field_value(self.BASEDOSAGE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DateCompleted_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateCompleted' on this record model
        """
        self.set_field_value(self.DATECOMPLETED__FIELD_NAME.field_name, value)

    def get_DateCompleted_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCompleted' from this record model
        """
        return self.get_field_value(self.DATECOMPLETED__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DoseComments_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoseComments' on this record model
        """
        self.set_field_value(self.DOSECOMMENTS__FIELD_NAME.field_name, value)

    def get_DoseComments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoseComments' from this record model
        """
        return self.get_field_value(self.DOSECOMMENTS__FIELD_NAME.field_name)

    def set_DoseResult_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoseResult' on this record model
        """
        self.set_field_value(self.DOSERESULT__FIELD_NAME.field_name, value)

    def get_DoseResult_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoseResult' from this record model
        """
        return self.get_field_value(self.DOSERESULT__FIELD_NAME.field_name)

    def set_DoseType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoseType' on this record model
        """
        self.set_field_value(self.DOSETYPE__FIELD_NAME.field_name, value)

    def get_DoseType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoseType' from this record model
        """
        return self.get_field_value(self.DOSETYPE__FIELD_NAME.field_name)

    def set_DoseUnit_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoseUnit' on this record model
        """
        self.set_field_value(self.DOSEUNIT__FIELD_NAME.field_name, value)

    def get_DoseUnit_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoseUnit' from this record model
        """
        return self.get_field_value(self.DOSEUNIT__FIELD_NAME.field_name)

    def set_ExpectedDose_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExpectedDose' on this record model
        """
        self.set_field_value(self.EXPECTEDDOSE__FIELD_NAME.field_name, value)

    def get_ExpectedDose_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExpectedDose' from this record model
        """
        return self.get_field_value(self.EXPECTEDDOSE__FIELD_NAME.field_name)

    def set_Formulation_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formulation' on this record model
        """
        self.set_field_value(self.FORMULATION__FIELD_NAME.field_name, value)

    def get_Formulation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formulation' from this record model
        """
        return self.get_field_value(self.FORMULATION__FIELD_NAME.field_name)

    def set_RouteOfAdministration_field(self, value: Optional[str]):
        """
        Set data field with field name 'RouteOfAdministration' on this record model
        """
        self.set_field_value(self.ROUTEOFADMINISTRATION__FIELD_NAME.field_name, value)

    def get_RouteOfAdministration_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RouteOfAdministration' from this record model
        """
        return self.get_field_value(self.ROUTEOFADMINISTRATION__FIELD_NAME.field_name)

    def set_TreatmentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'TreatmentId' on this record model
        """
        self.set_field_value(self.TREATMENTID__FIELD_NAME.field_name, value)

    def get_TreatmentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TreatmentId' from this record model
        """
        return self.get_field_value(self.TREATMENTID__FIELD_NAME.field_name)

    def set_TreatmentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'TreatmentRecordId' on this record model
        """
        self.set_field_value(self.TREATMENTRECORDID__FIELD_NAME.field_name, value)

    def get_TreatmentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TreatmentRecordId' from this record model
        """
        return self.get_field_value(self.TREATMENTRECORDID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DownstreamProcessingYieldModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DownstreamProcessingYield
    Data Type Display Name: Downstream Processing Yield (Downstream Processing Yields)
    Fields: MultiParentLink215, OtherSampleId, CentrifugationYield, CreatedBy, DataRecordName, DiafiltrationYield, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SampleId
    """
    DATA_TYPE_NAME: Final[str] = 'DownstreamProcessingYield'
    DISPLAY_NAME: Final[str] = "Downstream Processing Yield"
    PLURAL_DISPLAY_NAME: Final[str] = "Downstream Processing Yields"
    CENTRIFUGATIONYIELD__FIELD_NAME: Final[WrapperField] = WrapperField("CentrifugationYield", FieldType.DOUBLE, display_name="Centrifugation % Yield")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DIAFILTRATIONYIELD__FIELD_NAME: Final[WrapperField] = WrapperField("DiafiltrationYield", FieldType.DOUBLE, display_name="Diafiltration % Yield")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CentrifugationYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'CentrifugationYield' on this record model
        """
        self.set_field_value(self.CENTRIFUGATIONYIELD__FIELD_NAME.field_name, value)

    def get_CentrifugationYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CentrifugationYield' from this record model
        """
        return self.get_field_value(self.CENTRIFUGATIONYIELD__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DiafiltrationYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'DiafiltrationYield' on this record model
        """
        self.set_field_value(self.DIAFILTRATIONYIELD__FIELD_NAME.field_name, value)

    def get_DiafiltrationYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DiafiltrationYield' from this record model
        """
        return self.get_field_value(self.DIAFILTRATIONYIELD__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DropSenseA260ResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DropSenseA260Result
    Data Type Display Name: DropSense A260 Result (DropSense A260 Results)
    Fields: DilutionFactor, A260230, CreatedBy, DataRecordName, VeloxLastModifiedDate, A260280, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'DropSenseA260Result'
    DISPLAY_NAME: Final[str] = "DropSense A260 Result"
    PLURAL_DISPLAY_NAME: Final[str] = "DropSense A260 Results"
    A260230__FIELD_NAME: Final[WrapperField] = WrapperField("A260230", FieldType.DOUBLE, display_name="A260/230")
    A260280__FIELD_NAME: Final[WrapperField] = WrapperField("A260280", FieldType.DOUBLE, display_name="A260/280")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DILUTIONFACTOR__FIELD_NAME: Final[WrapperField] = WrapperField("DilutionFactor", FieldType.DOUBLE, display_name="Dilution Factor")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A260230_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260230' on this record model
        """
        self.set_field_value(self.A260230__FIELD_NAME.field_name, value)

    def get_A260230_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260230' from this record model
        """
        return self.get_field_value(self.A260230__FIELD_NAME.field_name)

    def set_A260280_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260280' on this record model
        """
        self.set_field_value(self.A260280__FIELD_NAME.field_name, value)

    def get_A260280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260280' from this record model
        """
        return self.get_field_value(self.A260280__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutionFactor' on this record model
        """
        self.set_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_DilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutionFactor' from this record model
        """
        return self.get_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class DropSenseA280ResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type DropSenseA280Result
    Data Type Display Name: DropSense A280 Result (DropSense A280 Results)
    Fields: ExtinctionCoefficient, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'DropSenseA280Result'
    DISPLAY_NAME: Final[str] = "DropSense A280 Result"
    PLURAL_DISPLAY_NAME: Final[str] = "DropSense A280 Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXTINCTIONCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("ExtinctionCoefficient", FieldType.DOUBLE, display_name="E1%")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExtinctionCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExtinctionCoefficient' on this record model
        """
        self.set_field_value(self.EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_ExtinctionCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExtinctionCoefficient' from this record model
        """
        return self.get_field_value(self.EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ELNExperimentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ELNExperiment
    Data Type Display Name: Experiment (Experiments)
    Fields: VELOXOWNER, VeloxCompletedBy, VeloxExperimentStatus, VeloxDateCompleted, CreatedBy, TemplateVersion, DateCreated, DataRecordName, DataTypeId, VeloxLastModifiedDate, VeloxLastModifiedBy, TemplateExperimentName
    Data type to represent the base E-Notebook data type.
    """
    DATA_TYPE_NAME: Final[str] = 'ELNExperiment'
    DISPLAY_NAME: Final[str] = "Experiment"
    PLURAL_DISPLAY_NAME: Final[str] = "Experiments"
    CHECKSTUDYINFO__FIELD_NAME: Final[WrapperField] = WrapperField("CheckStudyInfo", FieldType.BOOLEAN, display_name="Check Study Design Info?")
    CLUSTERWITHCBOT__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterWithCBot", FieldType.BOOLEAN, display_name="Cluster With CBot")
    COMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("Comments", FieldType.STRING, display_name="Comments")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPEID__FIELD_NAME: Final[WrapperField] = WrapperField("DataTypeId", FieldType.LONG, display_name="Data Type ID")
    DATECOMPLETED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCompleted", FieldType.DATE, display_name="Date Completed")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPERIMENTDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentDescription", FieldType.STRING, display_name="Experiment Description")
    FLOWCELLID__FIELD_NAME: Final[WrapperField] = WrapperField("FlowcellId", FieldType.STRING, display_name="Flow Cell ID")
    ILLUMINASEQTEMPLATEDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("IlluminaSeqTemplateDescription", FieldType.STRING, display_name="Description")
    PTCAUTONAMEID__FIELD_NAME: Final[WrapperField] = WrapperField("PTCAutoNameID", FieldType.STRING, display_name="Autoname")
    PTCGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("PTCGroup", FieldType.STRING, display_name="Group")
    PTCNOTES__FIELD_NAME: Final[WrapperField] = WrapperField("PTCNotes", FieldType.STRING, display_name="Notes")
    PTCSCIENTISTUSER__FIELD_NAME: Final[WrapperField] = WrapperField("PTCScientistUser", FieldType.STRING, display_name="Scientist")
    RECEIVEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ReceivedDate", FieldType.DATE, display_name="Received Date")
    RUNCOMPLETED__FIELD_NAME: Final[WrapperField] = WrapperField("RunCompleted", FieldType.BOOLEAN, display_name="Run Completed")
    RUNID__FIELD_NAME: Final[WrapperField] = WrapperField("RunId", FieldType.STRING, display_name="Run ID")
    SAMPLERECEIVER__FIELD_NAME: Final[WrapperField] = WrapperField("SampleReceiver", FieldType.SELECTION, display_name="Sample Receiver")
    SEQUENCERINSTRUMENT__FIELD_NAME: Final[WrapperField] = WrapperField("SequencerInstrument", FieldType.SELECTION, display_name="Sequencer Used")
    SEQUENCERRUNDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SequencerRunDate", FieldType.DATE, display_name="Sequencer Run Date")
    SEQUENCERRUNFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("SequencerRunFolder", FieldType.STRING, display_name="Sequencer Run Folder")
    SEQUENCINGRUNMODE__FIELD_NAME: Final[WrapperField] = WrapperField("SequencingRunMode", FieldType.PICKLIST, display_name="Sequencing Run Mode")
    SHIPDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ShipDate", FieldType.DATE, display_name="Ship Date")
    SHIPPEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ShippedBy", FieldType.STRING, display_name="Shipped By")
    SHIPPINGCOURIER__FIELD_NAME: Final[WrapperField] = WrapperField("ShippingCourier", FieldType.PICKLIST, display_name="Shipping Courier")
    SIDE__FIELD_NAME: Final[WrapperField] = WrapperField("Side", FieldType.STRING, display_name="Side")
    TEMPLATEEXPERIMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("TemplateExperimentName", FieldType.STRING, display_name="Template Experiment")
    TEMPLATEVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("TemplateVersion", FieldType.LONG, display_name="Template Version")
    TIMECOMPLETED__FIELD_NAME: Final[WrapperField] = WrapperField("TimeCompleted", FieldType.STRING, display_name="Time Completed")
    TRACKINGNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("TrackingNumber", FieldType.STRING, display_name="Tracking #")
    VELOXOWNER__FIELD_NAME: Final[WrapperField] = WrapperField("VELOXOWNER", FieldType.STRING, display_name="Owner")
    VELOXCOMPLETEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCompletedBy", FieldType.STRING, display_name="Completed By")
    VELOXDATECOMPLETED__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxDateCompleted", FieldType.DATE, display_name="Date Completed")
    VELOXEXPERIMENTSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxExperimentStatus", FieldType.STRING, display_name="Experiment Status")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CheckStudyInfo_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CheckStudyInfo' on this record model
        """
        self.set_field_value(self.CHECKSTUDYINFO__FIELD_NAME.field_name, value)

    def get_CheckStudyInfo_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CheckStudyInfo' from this record model
        """
        return self.get_field_value(self.CHECKSTUDYINFO__FIELD_NAME.field_name)

    def set_ClusterWithCBot_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ClusterWithCBot' on this record model
        """
        self.set_field_value(self.CLUSTERWITHCBOT__FIELD_NAME.field_name, value)

    def get_ClusterWithCBot_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ClusterWithCBot' from this record model
        """
        return self.get_field_value(self.CLUSTERWITHCBOT__FIELD_NAME.field_name)

    def set_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'Comments' on this record model
        """
        self.set_field_value(self.COMMENTS__FIELD_NAME.field_name, value)

    def get_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Comments' from this record model
        """
        return self.get_field_value(self.COMMENTS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataTypeId_field(self, value: Optional[int]):
        """
        Set data field with field name 'DataTypeId' on this record model
        """
        self.set_field_value(self.DATATYPEID__FIELD_NAME.field_name, value)

    def get_DataTypeId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DataTypeId' from this record model
        """
        return self.get_field_value(self.DATATYPEID__FIELD_NAME.field_name)

    def set_DateCompleted_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateCompleted' on this record model
        """
        self.set_field_value(self.DATECOMPLETED__FIELD_NAME.field_name, value)

    def get_DateCompleted_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCompleted' from this record model
        """
        return self.get_field_value(self.DATECOMPLETED__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExperimentDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentDescription' on this record model
        """
        self.set_field_value(self.EXPERIMENTDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ExperimentDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentDescription' from this record model
        """
        return self.get_field_value(self.EXPERIMENTDESCRIPTION__FIELD_NAME.field_name)

    def set_FlowcellId_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellId' on this record model
        """
        self.set_field_value(self.FLOWCELLID__FIELD_NAME.field_name, value)

    def get_FlowcellId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellId' from this record model
        """
        return self.get_field_value(self.FLOWCELLID__FIELD_NAME.field_name)

    def set_IlluminaSeqTemplateDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'IlluminaSeqTemplateDescription' on this record model
        """
        self.set_field_value(self.ILLUMINASEQTEMPLATEDESCRIPTION__FIELD_NAME.field_name, value)

    def get_IlluminaSeqTemplateDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IlluminaSeqTemplateDescription' from this record model
        """
        return self.get_field_value(self.ILLUMINASEQTEMPLATEDESCRIPTION__FIELD_NAME.field_name)

    def set_PTCAutoNameID_field(self, value: Optional[str]):
        """
        Set data field with field name 'PTCAutoNameID' on this record model
        """
        self.set_field_value(self.PTCAUTONAMEID__FIELD_NAME.field_name, value)

    def get_PTCAutoNameID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PTCAutoNameID' from this record model
        """
        return self.get_field_value(self.PTCAUTONAMEID__FIELD_NAME.field_name)

    def set_PTCGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'PTCGroup' on this record model
        """
        self.set_field_value(self.PTCGROUP__FIELD_NAME.field_name, value)

    def get_PTCGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PTCGroup' from this record model
        """
        return self.get_field_value(self.PTCGROUP__FIELD_NAME.field_name)

    def set_PTCNotes_field(self, value: Optional[str]):
        """
        Set data field with field name 'PTCNotes' on this record model
        """
        self.set_field_value(self.PTCNOTES__FIELD_NAME.field_name, value)

    def get_PTCNotes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PTCNotes' from this record model
        """
        return self.get_field_value(self.PTCNOTES__FIELD_NAME.field_name)

    def set_PTCScientistUser_field(self, value: Optional[str]):
        """
        Set data field with field name 'PTCScientistUser' on this record model
        """
        self.set_field_value(self.PTCSCIENTISTUSER__FIELD_NAME.field_name, value)

    def get_PTCScientistUser_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PTCScientistUser' from this record model
        """
        return self.get_field_value(self.PTCSCIENTISTUSER__FIELD_NAME.field_name)

    def set_ReceivedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReceivedDate' on this record model
        """
        self.set_field_value(self.RECEIVEDDATE__FIELD_NAME.field_name, value)

    def get_ReceivedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReceivedDate' from this record model
        """
        return self.get_field_value(self.RECEIVEDDATE__FIELD_NAME.field_name)

    def set_RunCompleted_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RunCompleted' on this record model
        """
        self.set_field_value(self.RUNCOMPLETED__FIELD_NAME.field_name, value)

    def get_RunCompleted_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RunCompleted' from this record model
        """
        return self.get_field_value(self.RUNCOMPLETED__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_SampleReceiver_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleReceiver' on this record model
        """
        self.set_field_value(self.SAMPLERECEIVER__FIELD_NAME.field_name, value)

    def get_SampleReceiver_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleReceiver' from this record model
        """
        return self.get_field_value(self.SAMPLERECEIVER__FIELD_NAME.field_name)

    def set_SequencerInstrument_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencerInstrument' on this record model
        """
        self.set_field_value(self.SEQUENCERINSTRUMENT__FIELD_NAME.field_name, value)

    def get_SequencerInstrument_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencerInstrument' from this record model
        """
        return self.get_field_value(self.SEQUENCERINSTRUMENT__FIELD_NAME.field_name)

    def set_SequencerRunDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SequencerRunDate' on this record model
        """
        self.set_field_value(self.SEQUENCERRUNDATE__FIELD_NAME.field_name, value)

    def get_SequencerRunDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SequencerRunDate' from this record model
        """
        return self.get_field_value(self.SEQUENCERRUNDATE__FIELD_NAME.field_name)

    def set_SequencerRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencerRunFolder' on this record model
        """
        self.set_field_value(self.SEQUENCERRUNFOLDER__FIELD_NAME.field_name, value)

    def get_SequencerRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencerRunFolder' from this record model
        """
        return self.get_field_value(self.SEQUENCERRUNFOLDER__FIELD_NAME.field_name)

    def set_SequencingRunMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencingRunMode' on this record model
        """
        self.set_field_value(self.SEQUENCINGRUNMODE__FIELD_NAME.field_name, value)

    def get_SequencingRunMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencingRunMode' from this record model
        """
        return self.get_field_value(self.SEQUENCINGRUNMODE__FIELD_NAME.field_name)

    def set_ShipDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ShipDate' on this record model
        """
        self.set_field_value(self.SHIPDATE__FIELD_NAME.field_name, value)

    def get_ShipDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ShipDate' from this record model
        """
        return self.get_field_value(self.SHIPDATE__FIELD_NAME.field_name)

    def set_ShippedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ShippedBy' on this record model
        """
        self.set_field_value(self.SHIPPEDBY__FIELD_NAME.field_name, value)

    def get_ShippedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ShippedBy' from this record model
        """
        return self.get_field_value(self.SHIPPEDBY__FIELD_NAME.field_name)

    def set_ShippingCourier_field(self, value: Optional[str]):
        """
        Set data field with field name 'ShippingCourier' on this record model
        """
        self.set_field_value(self.SHIPPINGCOURIER__FIELD_NAME.field_name, value)

    def get_ShippingCourier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ShippingCourier' from this record model
        """
        return self.get_field_value(self.SHIPPINGCOURIER__FIELD_NAME.field_name)

    def set_Side_field(self, value: Optional[str]):
        """
        Set data field with field name 'Side' on this record model
        """
        self.set_field_value(self.SIDE__FIELD_NAME.field_name, value)

    def get_Side_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Side' from this record model
        """
        return self.get_field_value(self.SIDE__FIELD_NAME.field_name)

    def set_TemplateExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateExperimentName' on this record model
        """
        self.set_field_value(self.TEMPLATEEXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_TemplateExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateExperimentName' from this record model
        """
        return self.get_field_value(self.TEMPLATEEXPERIMENTNAME__FIELD_NAME.field_name)

    def set_TemplateVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'TemplateVersion' on this record model
        """
        self.set_field_value(self.TEMPLATEVERSION__FIELD_NAME.field_name, value)

    def get_TemplateVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TemplateVersion' from this record model
        """
        return self.get_field_value(self.TEMPLATEVERSION__FIELD_NAME.field_name)

    def set_TimeCompleted_field(self, value: Optional[str]):
        """
        Set data field with field name 'TimeCompleted' on this record model
        """
        self.set_field_value(self.TIMECOMPLETED__FIELD_NAME.field_name, value)

    def get_TimeCompleted_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TimeCompleted' from this record model
        """
        return self.get_field_value(self.TIMECOMPLETED__FIELD_NAME.field_name)

    def set_TrackingNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'TrackingNumber' on this record model
        """
        self.set_field_value(self.TRACKINGNUMBER__FIELD_NAME.field_name, value)

    def get_TrackingNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TrackingNumber' from this record model
        """
        return self.get_field_value(self.TRACKINGNUMBER__FIELD_NAME.field_name)

    def set_VELOXOWNER_field(self, value: Optional[str]):
        """
        Set data field with field name 'VELOXOWNER' on this record model
        """
        self.set_field_value(self.VELOXOWNER__FIELD_NAME.field_name, value)

    def get_VELOXOWNER_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VELOXOWNER' from this record model
        """
        return self.get_field_value(self.VELOXOWNER__FIELD_NAME.field_name)

    def set_VeloxCompletedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'VeloxCompletedBy' on this record model
        """
        self.set_field_value(self.VELOXCOMPLETEDBY__FIELD_NAME.field_name, value)

    def get_VeloxCompletedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxCompletedBy' from this record model
        """
        return self.get_field_value(self.VELOXCOMPLETEDBY__FIELD_NAME.field_name)

    def set_VeloxDateCompleted_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxDateCompleted' on this record model
        """
        self.set_field_value(self.VELOXDATECOMPLETED__FIELD_NAME.field_name, value)

    def get_VeloxDateCompleted_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxDateCompleted' from this record model
        """
        return self.get_field_value(self.VELOXDATECOMPLETED__FIELD_NAME.field_name)

    def set_VeloxExperimentStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'VeloxExperimentStatus' on this record model
        """
        self.set_field_value(self.VELOXEXPERIMENTSTATUS__FIELD_NAME.field_name, value)

    def get_VeloxExperimentStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxExperimentStatus' from this record model
        """
        return self.get_field_value(self.VELOXEXPERIMENTSTATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ELNExperimentDetailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ELNExperimentDetail
    Data Type Display Name: Experiment Detail (Experiment Details)
    Fields: CreatedBy, DataRecordName, DataTypeId, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    Data type to represent the base E-Notebook data type to represent the experiment details.
    """
    DATA_TYPE_NAME: Final[str] = 'ELNExperimentDetail'
    DISPLAY_NAME: Final[str] = "Experiment Detail"
    PLURAL_DISPLAY_NAME: Final[str] = "Experiment Details"
    ACTUALAMOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("ActualAmount", FieldType.DOUBLE, display_name="Amount")
    ACTUALMOLES__FIELD_NAME: Final[WrapperField] = WrapperField("ActualMoles", FieldType.DOUBLE, display_name="Actual Moles")
    ACTUALUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("ActualUnits", FieldType.PICKLIST, display_name="Amount Units")
    ALLOWOVERRIDE__FIELD_NAME: Final[WrapperField] = WrapperField("AllowOverride", FieldType.BOOLEAN, display_name="Allow Override")
    ANALYSIS__FIELD_NAME: Final[WrapperField] = WrapperField("Analysis", FieldType.STRING, display_name="Analysis")
    ANIMALID__FIELD_NAME: Final[WrapperField] = WrapperField("AnimalId", FieldType.STRING, display_name="Animal ID")
    ARM1A__FIELD_NAME: Final[WrapperField] = WrapperField("Arm1A", FieldType.DOUBLE, display_name="Arm 1A")
    ARM1B__FIELD_NAME: Final[WrapperField] = WrapperField("Arm1B", FieldType.DOUBLE, display_name="Arm 1B")
    ARM2A__FIELD_NAME: Final[WrapperField] = WrapperField("Arm2A", FieldType.DOUBLE, display_name="Arm 2A")
    ARM2B__FIELD_NAME: Final[WrapperField] = WrapperField("Arm2B", FieldType.DOUBLE, display_name="Arm 2B")
    ASSAYTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("AssayType", FieldType.STRING, display_name="Assay Type")
    BUFFERPARTCONSUMABLELOT__FIELD_NAME: Final[WrapperField] = WrapperField("BufferPartConsumableLot", FieldType.SELECTION, display_name="Lot Number")
    BUFFERPARTCONSUMABLEQTY__FIELD_NAME: Final[WrapperField] = WrapperField("BufferPartConsumableQty", FieldType.DOUBLE, display_name="Quantity Used")
    BUFFERPARTCONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("BufferPartConsumableType", FieldType.SELECTION, display_name="Buffer Subtype")
    CASNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("CASNumber", FieldType.STRING, display_name="CAS Number")
    CANEDITRUNMODE__FIELD_NAME: Final[WrapperField] = WrapperField("CanEditRunMode", FieldType.BOOLEAN, display_name="Can Edit Run Mode")
    CELLLINE2PARTCONSUMABLELOT__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine2PartConsumableLot", FieldType.SELECTION, display_name="Lot Number")
    CELLLINE2PARTCONSUMABLEQTY__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine2PartConsumableQty", FieldType.DOUBLE, display_name="Quantity Used")
    CELLLINE2PARTCONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine2PartConsumableType", FieldType.SELECTION, display_name="Cell Line Subtype")
    CHEMCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("ChemConcentration", FieldType.STRING, display_name="Purity/Conc")
    CI95BOUNDS__FIELD_NAME: Final[WrapperField] = WrapperField("Ci95Bounds", FieldType.DOUBLE, display_name="CI 95% Bounds")
    CI95BOUNDSTHRESHOLD__FIELD_NAME: Final[WrapperField] = WrapperField("Ci95BoundsThreshold", FieldType.DOUBLE, display_name="CI 95% Bounds Threshold (%)")
    CLUSTERWITHCBOT__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterWithCBot", FieldType.BOOLEAN, display_name="Cluster With CBot")
    COMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("Comments", FieldType.STRING, display_name="Comments")
    CONCENTRATIONUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("ConcentrationUnits", FieldType.PICKLIST, display_name="Units")
    CONSUMABLEBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableBarcode", FieldType.STRING, display_name="Barcode      ")
    CONSUMABLECLASSIFICATION__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableClassification", FieldType.SELECTION, display_name="Consumable Classification")
    CONSUMABLECONSUMABLELOT__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableConsumableLot", FieldType.SELECTION, display_name="Lot Number    ")
    CONSUMABLECONSUMABLEQTY__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableConsumableQty", FieldType.DOUBLE, display_name="Quantity Used")
    CONSUMABLECONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableConsumableType", FieldType.SELECTION, display_name="Consumable Type")
    CONSUMABLEDATATYPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableDataTypeName", FieldType.SELECTION, display_name="Consumable Data Type Name")
    CONSUMABLEEXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableExpirationDate", FieldType.DATE, display_name="Expiration Date")
    CONSUMABLELOT__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableLot", FieldType.SELECTION, display_name="Lot Number                                ")
    CONSUMABLENAMEFORMULATIONDETAILS__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableNameFormulationDetails", FieldType.STRING, display_name="Consumable Name                           ")
    CONSUMABLEPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumablePartNumber", FieldType.STRING, display_name="Part Number                       ")
    CONSUMABLEQTY__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableQty", FieldType.DOUBLE, display_name="Quantity Used")
    CONSUMABLEQUANTITYREMAINING__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableQuantityRemaining", FieldType.DOUBLE, display_name="Quantity")
    CONSUMABLERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableRecordId", FieldType.LONG, display_name="Consumable Record ID")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Consumable Type                       ")
    CONSUMABLETYPEFORRECIPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableTypeForRecipe", FieldType.SELECTION, display_name="Material Type")
    CONSUMABLEUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableUnits", FieldType.STRING, display_name="Units")
    CONTAINERID__FIELD_NAME: Final[WrapperField] = WrapperField("ContainerId", FieldType.STRING, display_name="Container ID")
    COVARISCYCLESPERBURST__FIELD_NAME: Final[WrapperField] = WrapperField("CovarisCyclesPerBurst", FieldType.LONG, display_name="Covaris Cycles Per Burst")
    COVARISDUTYFACTOR__FIELD_NAME: Final[WrapperField] = WrapperField("CovarisDutyFactor", FieldType.LONG, display_name="Covaris Duty Factor %")
    COVARISINSTRUMENT__FIELD_NAME: Final[WrapperField] = WrapperField("CovarisInstrument", FieldType.SELECTION, display_name="Covaris Instrument")
    COVARISPEAKINCIDENTPOWER__FIELD_NAME: Final[WrapperField] = WrapperField("CovarisPeakIncidentPower", FieldType.LONG, display_name="Covaris Peak Incident Power")
    COVARISTARGETPEAK__FIELD_NAME: Final[WrapperField] = WrapperField("CovarisTargetPeak", FieldType.STRING, display_name="Covaris Target Peak")
    COVARISTIMES__FIELD_NAME: Final[WrapperField] = WrapperField("CovarisTimes", FieldType.LONG, display_name="Covaris Time (s)")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CRISPRDAY__FIELD_NAME: Final[WrapperField] = WrapperField("CrisprDay", FieldType.DOUBLE, display_name="Days")
    CUSTOMER__FIELD_NAME: Final[WrapperField] = WrapperField("Customer", FieldType.STRING, display_name="Customer")
    CUSTOMERCATEGORY__FIELD_NAME: Final[WrapperField] = WrapperField("CustomerCategory", FieldType.PICKLIST, display_name="Customer Category")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPEID__FIELD_NAME: Final[WrapperField] = WrapperField("DataTypeId", FieldType.LONG, display_name="Data Type ID")
    DATE__FIELD_NAME: Final[WrapperField] = WrapperField("Date", FieldType.DATE, display_name="Date")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DATEPURCHASED__FIELD_NAME: Final[WrapperField] = WrapperField("DatePurchased", FieldType.DATE, display_name="Date Purchased")
    DENSITY__FIELD_NAME: Final[WrapperField] = WrapperField("Density", FieldType.DOUBLE, display_name="Density (g/mL)")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    DESCRIPTION2__FIELD_NAME: Final[WrapperField] = WrapperField("Description2", FieldType.STRING, display_name="Description")
    DISCREPANCY__FIELD_NAME: Final[WrapperField] = WrapperField("Discrepancy", FieldType.STRING, display_name="Discrepancy")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    FLOWCELLID__FIELD_NAME: Final[WrapperField] = WrapperField("FlowcellId", FieldType.STRING, display_name="Flow Cell ID")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="MF")
    GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSHazardCode", FieldType.STRING, display_name="Hazard Code")
    GENDER__FIELD_NAME: Final[WrapperField] = WrapperField("Gender", FieldType.STRING, display_name="Gender")
    HTECONDITIONTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("HTEConditionType", FieldType.PICKLIST, display_name="Condition Type")
    HTECONDITIONVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("HTEConditionValue", FieldType.STRING, display_name="Condition Value")
    HTECONDITIONS__FIELD_NAME: Final[WrapperField] = WrapperField("HTEConditions", FieldType.SELECTION, display_name="HTE Conditions")
    HTEEXPECTEDPRODUCTS__FIELD_NAME: Final[WrapperField] = WrapperField("HTEExpectedProducts", FieldType.SELECTION, display_name="Expected Products")
    HTELIMITINGREACTANTPERWELL__FIELD_NAME: Final[WrapperField] = WrapperField("HTELimitingReactantPerWell", FieldType.LONG, display_name="HTE Limiting Reactant Per Well (uL)")
    HTEMATERIAL__FIELD_NAME: Final[WrapperField] = WrapperField("HTEMaterial", FieldType.PICKLIST, display_name="Material Type")
    HTEMATERIALCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("HTEMaterialCount", FieldType.LONG, display_name="Material Count")
    HTEMATERIALLAYOUT__FIELD_NAME: Final[WrapperField] = WrapperField("HTEMaterialLayout", FieldType.PICKLIST, display_name="Material Layout")
    HTEMATERIALS__FIELD_NAME: Final[WrapperField] = WrapperField("HTEMaterials", FieldType.SELECTION, display_name="Materials")
    HTEPLATESIZE__FIELD_NAME: Final[WrapperField] = WrapperField("HTEPlateSize", FieldType.PICKLIST, display_name="HTE Plate Size")
    HTEREACTIONCOMPONENTS__FIELD_NAME: Final[WrapperField] = WrapperField("HTEReactionComponents", FieldType.SELECTION, display_name="Reaction Components")
    HTEREACTIONCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("HTEReactionConcentration", FieldType.DOUBLE, display_name="HTE Reaction Concentration (M)")
    HTERUNVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("HTERunVolume", FieldType.LONG, display_name="HTE Run Volume (uL)")
    HAZARDCODES__FIELD_NAME: Final[WrapperField] = WrapperField("HazardCodes", FieldType.STRING, display_name="Hazard Codes")
    IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("IUPAC", FieldType.STRING, display_name="IUPAC")
    INFORMATICSADJUSTEDRSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("InformaticsAdjustedRSquared", FieldType.DOUBLE, display_name="Adjusted R Squared")
    INFORMATICSESTIMATE__FIELD_NAME: Final[WrapperField] = WrapperField("InformaticsEstimate", FieldType.DOUBLE, display_name="Estimate")
    INFORMATICSFCTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("InformaticsFctName", FieldType.STRING, display_name="Fct Name")
    INFORMATICSFCTTEXT__FIELD_NAME: Final[WrapperField] = WrapperField("InformaticsFctText", FieldType.STRING, display_name="Text")
    INFORMATICSNAME__FIELD_NAME: Final[WrapperField] = WrapperField("InformaticsName", FieldType.STRING, display_name="Name")
    INFORMATICSPVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("InformaticsPValue", FieldType.DOUBLE, display_name="p-value")
    INFORMATICSPRGREATERTHANT__FIELD_NAME: Final[WrapperField] = WrapperField("InformaticsPrGreaterThant", FieldType.DOUBLE, display_name="Pr(>|t|)")
    INFORMATICSRSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("InformaticsRSquared", FieldType.DOUBLE, display_name="R Squared")
    INFORMATICSRESIDUALSTANDARDERROR__FIELD_NAME: Final[WrapperField] = WrapperField("InformaticsResidualStandardError", FieldType.DOUBLE, display_name="Residual Standard Error")
    INFORMATICSRESIDUALSTANDARDERRORDOF__FIELD_NAME: Final[WrapperField] = WrapperField("InformaticsResidualStandardErrorDoF", FieldType.DOUBLE, display_name="RSE DoF")
    INFORMATICSSTDERROR__FIELD_NAME: Final[WrapperField] = WrapperField("InformaticsStdError", FieldType.DOUBLE, display_name="Standard Error")
    INFORMATICSTVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("InformaticsTValue", FieldType.DOUBLE, display_name="t-value")
    INSTRUMENTSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentStatus", FieldType.STRING, display_name="Status")
    INSTRUMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentType", FieldType.SELECTION, display_name="Instrument Type")
    INSTRUMENTUSED__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentUsed", FieldType.SELECTION, display_name="Instrument Used")
    ITEMID__FIELD_NAME: Final[WrapperField] = WrapperField("ItemId", FieldType.STRING, display_name="Na Sequence Item ID")
    LASTMAINTENANCEDATE__FIELD_NAME: Final[WrapperField] = WrapperField("LastMaintenanceDate", FieldType.STRING, display_name="Last Maintenance Date")
    LIMITINGREACTANT__FIELD_NAME: Final[WrapperField] = WrapperField("LimitingReactant", FieldType.BOOLEAN, display_name="LR")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    MEASURED__FIELD_NAME: Final[WrapperField] = WrapperField("Measured", FieldType.DOUBLE, display_name="Measured")
    MODELNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ModelNumber", FieldType.STRING, display_name="Model Number")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="MW (g/mol)")
    MOLES__FIELD_NAME: Final[WrapperField] = WrapperField("Moles", FieldType.DOUBLE, display_name="Moles")
    NAME__FIELD_NAME: Final[WrapperField] = WrapperField("Name", FieldType.STRING, display_name="Name")
    NANODROPAVERAGE1__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropAverage1", FieldType.DOUBLE, display_name="Nanodrop Average 1")
    NANODROPAVERAGE2__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropAverage2", FieldType.DOUBLE, display_name="Nanodrop Average 2")
    NEXTMAINTENANCEDATE__FIELD_NAME: Final[WrapperField] = WrapperField("NextMaintenanceDate", FieldType.STRING, display_name="Next Maintenance Date")
    NORMALIZATIONMETHOD__FIELD_NAME: Final[WrapperField] = WrapperField("NormalizationMethod", FieldType.SELECTION, display_name="Normalization Method")
    NUMBEROFREPLICATESNOTEDITABLE__FIELD_NAME: Final[WrapperField] = WrapperField("NumberOfReplicatesNotEditable", FieldType.LONG, display_name="Number of Replicates")
    OLIGONAME__FIELD_NAME: Final[WrapperField] = WrapperField("OligoName", FieldType.SELECTION, display_name="Oligo Name")
    OLIGOSEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("OligoSequence", FieldType.STRING, display_name="Sequence")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number")
    PASSORFAIL__FIELD_NAME: Final[WrapperField] = WrapperField("PassorFail", FieldType.SELECTION, display_name="Pass or Fail")
    PEPTIDE2PARTCONSUMABLELOT__FIELD_NAME: Final[WrapperField] = WrapperField("Peptide2PartConsumableLot", FieldType.SELECTION, display_name="Lot Number")
    PEPTIDE2PARTCONSUMABLEQTY__FIELD_NAME: Final[WrapperField] = WrapperField("Peptide2PartConsumableQty", FieldType.DOUBLE, display_name="Quantity Used")
    PEPTIDE2PARTCONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("Peptide2PartConsumableType", FieldType.SELECTION, display_name="Peptide Subtype")
    PEPTIDE2PARTPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Peptide2PartPartNumber", FieldType.STRING, display_name="Peptide ID")
    PLANAMOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("PlanAmount", FieldType.DOUBLE, display_name="Theoretical Amount")
    PLASMIDCONSUMABLELOT__FIELD_NAME: Final[WrapperField] = WrapperField("PlasmidConsumableLot", FieldType.SELECTION, display_name="Lot Number")
    PLASMIDCONSUMABLEQTY__FIELD_NAME: Final[WrapperField] = WrapperField("PlasmidConsumableQty", FieldType.DOUBLE, display_name="Quantity Used")
    PLASMIDCONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("PlasmidConsumableType", FieldType.SELECTION, display_name="Plasmid Name")
    PLASMIDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("PlasmidName", FieldType.STRING, display_name="Plasmid Name")
    PLASMIDPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PlasmidPartNumber", FieldType.STRING, display_name="Sequence")
    PLASMIDUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("PlasmidUnits", FieldType.STRING, display_name="Units")
    POSITION__FIELD_NAME: Final[WrapperField] = WrapperField("Position", FieldType.STRING, display_name="Position")
    PRESSURE__FIELD_NAME: Final[WrapperField] = WrapperField("Pressure", FieldType.DOUBLE, display_name="Pressure")
    PRESSUREUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("PressureUnits", FieldType.SELECTION, display_name="Pressure Units")
    PURITY__FIELD_NAME: Final[WrapperField] = WrapperField("Purity", FieldType.DOUBLE, display_name="Purity")
    QUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("Quantity", FieldType.DOUBLE, display_name="Quantity")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    QUANTITYREMAINING__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityRemaining", FieldType.DOUBLE, display_name="Quantity Remaining")
    RATERPM__FIELD_NAME: Final[WrapperField] = WrapperField("Raterpm", FieldType.DOUBLE, display_name="Rate (rpm)")
    RATIO__FIELD_NAME: Final[WrapperField] = WrapperField("Ratio", FieldType.DOUBLE, display_name="Ratio")
    REACTION__FIELD_NAME: Final[WrapperField] = WrapperField("Reaction", FieldType.STRING, display_name="Reaction")
    REACTIONCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("ReactionCoefficient", FieldType.DOUBLE, display_name="Equivalents")
    REACTIONPLANUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("ReactionPlanUnits", FieldType.PICKLIST, display_name="Theoretical Units")
    REAGENTS__FIELD_NAME: Final[WrapperField] = WrapperField("Reagents", FieldType.STRING, display_name="Reagents")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry Id")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    RESINNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ResinName", FieldType.STRING, display_name="Resin Name")
    ROLE__FIELD_NAME: Final[WrapperField] = WrapperField("Role", FieldType.SELECTION, display_name="Role")
    RUNID__FIELD_NAME: Final[WrapperField] = WrapperField("RunId", FieldType.STRING, display_name="Run ID")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="SMILES")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample Barcode")
    SAMPLEMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("SampleMean", FieldType.DOUBLE, display_name="Mean")
    SAMPLEMEANTHRESHOLD__FIELD_NAME: Final[WrapperField] = WrapperField("SampleMeanThreshold", FieldType.DOUBLE, display_name="Mean Threshold (%)")
    SAMPLENORMALIZEDMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("SampleNormalizedMean", FieldType.DOUBLE, display_name="Normalized Mean")
    SAMPLENORMALIZEDMEANTHRESHOLD__FIELD_NAME: Final[WrapperField] = WrapperField("SampleNormalizedMeanThreshold", FieldType.DOUBLE, display_name="Normalized Mean Threshold")
    SAMPLESTD__FIELD_NAME: Final[WrapperField] = WrapperField("SampleStd", FieldType.DOUBLE, display_name="Standard Deviation")
    SAMPLESTDTHRESHOLD__FIELD_NAME: Final[WrapperField] = WrapperField("SampleStdThreshold", FieldType.DOUBLE, display_name="Standard Deviation Threshold (%)")
    SAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SampleType", FieldType.STRING, display_name="Sample Type")
    SAMPLINGDAY__FIELD_NAME: Final[WrapperField] = WrapperField("SamplingDay", FieldType.LONG, display_name="Sampling Day")
    SAMPLINGHOUR__FIELD_NAME: Final[WrapperField] = WrapperField("SamplingHour", FieldType.DOUBLE, display_name="Sampling Hour")
    SARFIELDNAMELIST__FIELD_NAME: Final[WrapperField] = WrapperField("SarFieldNameList", FieldType.SELECTION, display_name="Fields to Show")
    SARSCAFFOLD__FIELD_NAME: Final[WrapperField] = WrapperField("SarScaffold", FieldType.STRING, display_name="Scaffold")
    SARTHRESHOLD__FIELD_NAME: Final[WrapperField] = WrapperField("SarThreshold", FieldType.LONG, display_name="Threshold")
    SEARCHME__FIELD_NAME: Final[WrapperField] = WrapperField("SearchMe", FieldType.STRING, display_name="Search Me")
    SEQUENCERINSTRUMENT__FIELD_NAME: Final[WrapperField] = WrapperField("SequencerInstrument", FieldType.SELECTION, display_name="Sequencer Used")
    SEQUENCERRUNFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("SequencerRunFolder", FieldType.STRING, display_name="Sequencer Run Folder")
    SEQUENCINGRUNMODE__FIELD_NAME: Final[WrapperField] = WrapperField("SequencingRunMode", FieldType.PICKLIST, display_name="Sequencing Run Mode")
    SEQUENCINGRUNTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SequencingRunType", FieldType.STRING, display_name="Sequencing Run Type")
    SERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("SerialNumber", FieldType.STRING, display_name="Serial Number")
    SKIPDISCREPANCY__FIELD_NAME: Final[WrapperField] = WrapperField("SkipDiscrepancy", FieldType.BOOLEAN, display_name="Override Discrepancy")
    STAINPARTCONSUMABLELOT__FIELD_NAME: Final[WrapperField] = WrapperField("StainPartConsumableLot", FieldType.SELECTION, display_name="Lot Number")
    STAINPARTCONSUMABLEQTY__FIELD_NAME: Final[WrapperField] = WrapperField("StainPartConsumableQty", FieldType.DOUBLE, display_name="Quantity Used")
    STAINPARTCONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("StainPartConsumableType", FieldType.SELECTION, display_name="Assay Name")
    STANDARDERROR__FIELD_NAME: Final[WrapperField] = WrapperField("StandardError", FieldType.DOUBLE, display_name="Standard Error")
    STANDARDERRORTHRESHOLD__FIELD_NAME: Final[WrapperField] = WrapperField("StandardErrorThreshold", FieldType.DOUBLE, display_name="Standard Error Threshold (%)")
    STORAGEUNITPATH__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitPath", FieldType.STRING, display_name="Storage Location Path")
    STRAINNAME__FIELD_NAME: Final[WrapperField] = WrapperField("StrainName", FieldType.STRING, display_name="Strain Name")
    STRAINPARTCONSUMABLELOT__FIELD_NAME: Final[WrapperField] = WrapperField("StrainPartConsumableLot", FieldType.SELECTION, display_name="Lot Number")
    STRAINPARTCONSUMABLEQTY__FIELD_NAME: Final[WrapperField] = WrapperField("StrainPartConsumableQty", FieldType.DOUBLE, display_name="Quantity Used")
    STRAINPARTCONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("StrainPartConsumableType", FieldType.SELECTION, display_name="Strain Subtype")
    STUDYID__FIELD_NAME: Final[WrapperField] = WrapperField("StudyId", FieldType.STRING, display_name="Study ID")
    TARGET__FIELD_NAME: Final[WrapperField] = WrapperField("Target", FieldType.DOUBLE, display_name="Target")
    TECHASSIGNED__FIELD_NAME: Final[WrapperField] = WrapperField("TechAssigned", FieldType.SELECTION, display_name="Tech Assigned")
    TECHNICIAN__FIELD_NAME: Final[WrapperField] = WrapperField("Technician", FieldType.SELECTION, display_name="Technician")
    TECHNICIANASSIGNED__FIELD_NAME: Final[WrapperField] = WrapperField("TechnicianAssigned", FieldType.SELECTION, display_name="Technician Assigned")
    TEMPERATURE__FIELD_NAME: Final[WrapperField] = WrapperField("Temperature", FieldType.LONG, display_name="Temperature")
    TEMPERATUREUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("TemperatureUnits", FieldType.SELECTION, display_name="Temperature Units")
    THEORYMOLES__FIELD_NAME: Final[WrapperField] = WrapperField("TheoryMoles", FieldType.DOUBLE, display_name="Theoretical Moles")
    TREATMENTGROUPID__FIELD_NAME: Final[WrapperField] = WrapperField("TreatmentGroupId", FieldType.STRING, display_name="Treatment Group")
    TRIAL__FIELD_NAME: Final[WrapperField] = WrapperField("Trial", FieldType.DOUBLE, display_name="Trial #")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.STRING, display_name="Vendor")
    VIRALVECTORPARTCONSUMABLELOT__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVectorPartConsumableLot", FieldType.SELECTION, display_name="Lot Number")
    VIRALVECTORPARTCONSUMABLEQTY__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVectorPartConsumableQty", FieldType.DOUBLE, display_name="Quantity Used")
    VIRALVECTORPARTCONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVectorPartConsumableType", FieldType.SELECTION, display_name="Viral Vector Subtype")
    VIRALVECTORPARTPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVectorPartPartNumber", FieldType.STRING, display_name="Vector ID")
    VOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("Volume", FieldType.DOUBLE, display_name="Volume")
    VOLUMEUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("VolumeUnits", FieldType.SELECTION, display_name="Volume Units")
    WELLID__FIELD_NAME: Final[WrapperField] = WrapperField("WellId", FieldType.STRING, display_name="Well ID")
    WORKSTATIONID__FIELD_NAME: Final[WrapperField] = WrapperField("WorkstationId", FieldType.STRING, display_name="Workstation ID")
    YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("Yield", FieldType.DOUBLE, display_name="% Yield")
    YIELD2__FIELD_NAME: Final[WrapperField] = WrapperField("Yield2", FieldType.DOUBLE, display_name="Yield")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="Inchi")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActualAmount_field(self, value: Optional[float]):
        """
        Set data field with field name 'ActualAmount' on this record model
        """
        self.set_field_value(self.ACTUALAMOUNT__FIELD_NAME.field_name, value)

    def get_ActualAmount_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ActualAmount' from this record model
        """
        return self.get_field_value(self.ACTUALAMOUNT__FIELD_NAME.field_name)

    def set_ActualMoles_field(self, value: Optional[float]):
        """
        Set data field with field name 'ActualMoles' on this record model
        """
        self.set_field_value(self.ACTUALMOLES__FIELD_NAME.field_name, value)

    def get_ActualMoles_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ActualMoles' from this record model
        """
        return self.get_field_value(self.ACTUALMOLES__FIELD_NAME.field_name)

    def set_ActualUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActualUnits' on this record model
        """
        self.set_field_value(self.ACTUALUNITS__FIELD_NAME.field_name, value)

    def get_ActualUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActualUnits' from this record model
        """
        return self.get_field_value(self.ACTUALUNITS__FIELD_NAME.field_name)

    def set_AllowOverride_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AllowOverride' on this record model
        """
        self.set_field_value(self.ALLOWOVERRIDE__FIELD_NAME.field_name, value)

    def get_AllowOverride_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AllowOverride' from this record model
        """
        return self.get_field_value(self.ALLOWOVERRIDE__FIELD_NAME.field_name)

    def set_Analysis_field(self, value: Optional[str]):
        """
        Set data field with field name 'Analysis' on this record model
        """
        self.set_field_value(self.ANALYSIS__FIELD_NAME.field_name, value)

    def get_Analysis_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Analysis' from this record model
        """
        return self.get_field_value(self.ANALYSIS__FIELD_NAME.field_name)

    def set_AnimalId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AnimalId' on this record model
        """
        self.set_field_value(self.ANIMALID__FIELD_NAME.field_name, value)

    def get_AnimalId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AnimalId' from this record model
        """
        return self.get_field_value(self.ANIMALID__FIELD_NAME.field_name)

    def set_Arm1A_field(self, value: Optional[float]):
        """
        Set data field with field name 'Arm1A' on this record model
        """
        self.set_field_value(self.ARM1A__FIELD_NAME.field_name, value)

    def get_Arm1A_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Arm1A' from this record model
        """
        return self.get_field_value(self.ARM1A__FIELD_NAME.field_name)

    def set_Arm1B_field(self, value: Optional[float]):
        """
        Set data field with field name 'Arm1B' on this record model
        """
        self.set_field_value(self.ARM1B__FIELD_NAME.field_name, value)

    def get_Arm1B_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Arm1B' from this record model
        """
        return self.get_field_value(self.ARM1B__FIELD_NAME.field_name)

    def set_Arm2A_field(self, value: Optional[float]):
        """
        Set data field with field name 'Arm2A' on this record model
        """
        self.set_field_value(self.ARM2A__FIELD_NAME.field_name, value)

    def get_Arm2A_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Arm2A' from this record model
        """
        return self.get_field_value(self.ARM2A__FIELD_NAME.field_name)

    def set_Arm2B_field(self, value: Optional[float]):
        """
        Set data field with field name 'Arm2B' on this record model
        """
        self.set_field_value(self.ARM2B__FIELD_NAME.field_name, value)

    def get_Arm2B_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Arm2B' from this record model
        """
        return self.get_field_value(self.ARM2B__FIELD_NAME.field_name)

    def set_AssayType_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssayType' on this record model
        """
        self.set_field_value(self.ASSAYTYPE__FIELD_NAME.field_name, value)

    def get_AssayType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssayType' from this record model
        """
        return self.get_field_value(self.ASSAYTYPE__FIELD_NAME.field_name)

    def set_BufferPartConsumableLot_field(self, value: Optional[str]):
        """
        Set data field with field name 'BufferPartConsumableLot' on this record model
        """
        self.set_field_value(self.BUFFERPARTCONSUMABLELOT__FIELD_NAME.field_name, value)

    def get_BufferPartConsumableLot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BufferPartConsumableLot' from this record model
        """
        return self.get_field_value(self.BUFFERPARTCONSUMABLELOT__FIELD_NAME.field_name)

    def set_BufferPartConsumableQty_field(self, value: Optional[float]):
        """
        Set data field with field name 'BufferPartConsumableQty' on this record model
        """
        self.set_field_value(self.BUFFERPARTCONSUMABLEQTY__FIELD_NAME.field_name, value)

    def get_BufferPartConsumableQty_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BufferPartConsumableQty' from this record model
        """
        return self.get_field_value(self.BUFFERPARTCONSUMABLEQTY__FIELD_NAME.field_name)

    def set_BufferPartConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'BufferPartConsumableType' on this record model
        """
        self.set_field_value(self.BUFFERPARTCONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_BufferPartConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BufferPartConsumableType' from this record model
        """
        return self.get_field_value(self.BUFFERPARTCONSUMABLETYPE__FIELD_NAME.field_name)

    def set_CASNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'CASNumber' on this record model
        """
        self.set_field_value(self.CASNUMBER__FIELD_NAME.field_name, value)

    def get_CASNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CASNumber' from this record model
        """
        return self.get_field_value(self.CASNUMBER__FIELD_NAME.field_name)

    def set_CanEditRunMode_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CanEditRunMode' on this record model
        """
        self.set_field_value(self.CANEDITRUNMODE__FIELD_NAME.field_name, value)

    def get_CanEditRunMode_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CanEditRunMode' from this record model
        """
        return self.get_field_value(self.CANEDITRUNMODE__FIELD_NAME.field_name)

    def set_CellLine2PartConsumableLot_field(self, value: Optional[str]):
        """
        Set data field with field name 'CellLine2PartConsumableLot' on this record model
        """
        self.set_field_value(self.CELLLINE2PARTCONSUMABLELOT__FIELD_NAME.field_name, value)

    def get_CellLine2PartConsumableLot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CellLine2PartConsumableLot' from this record model
        """
        return self.get_field_value(self.CELLLINE2PARTCONSUMABLELOT__FIELD_NAME.field_name)

    def set_CellLine2PartConsumableQty_field(self, value: Optional[float]):
        """
        Set data field with field name 'CellLine2PartConsumableQty' on this record model
        """
        self.set_field_value(self.CELLLINE2PARTCONSUMABLEQTY__FIELD_NAME.field_name, value)

    def get_CellLine2PartConsumableQty_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CellLine2PartConsumableQty' from this record model
        """
        return self.get_field_value(self.CELLLINE2PARTCONSUMABLEQTY__FIELD_NAME.field_name)

    def set_CellLine2PartConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'CellLine2PartConsumableType' on this record model
        """
        self.set_field_value(self.CELLLINE2PARTCONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_CellLine2PartConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CellLine2PartConsumableType' from this record model
        """
        return self.get_field_value(self.CELLLINE2PARTCONSUMABLETYPE__FIELD_NAME.field_name)

    def set_ChemConcentration_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemConcentration' on this record model
        """
        self.set_field_value(self.CHEMCONCENTRATION__FIELD_NAME.field_name, value)

    def get_ChemConcentration_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemConcentration' from this record model
        """
        return self.get_field_value(self.CHEMCONCENTRATION__FIELD_NAME.field_name)

    def set_Ci95Bounds_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ci95Bounds' on this record model
        """
        self.set_field_value(self.CI95BOUNDS__FIELD_NAME.field_name, value)

    def get_Ci95Bounds_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ci95Bounds' from this record model
        """
        return self.get_field_value(self.CI95BOUNDS__FIELD_NAME.field_name)

    def set_Ci95BoundsThreshold_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ci95BoundsThreshold' on this record model
        """
        self.set_field_value(self.CI95BOUNDSTHRESHOLD__FIELD_NAME.field_name, value)

    def get_Ci95BoundsThreshold_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ci95BoundsThreshold' from this record model
        """
        return self.get_field_value(self.CI95BOUNDSTHRESHOLD__FIELD_NAME.field_name)

    def set_ClusterWithCBot_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ClusterWithCBot' on this record model
        """
        self.set_field_value(self.CLUSTERWITHCBOT__FIELD_NAME.field_name, value)

    def get_ClusterWithCBot_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ClusterWithCBot' from this record model
        """
        return self.get_field_value(self.CLUSTERWITHCBOT__FIELD_NAME.field_name)

    def set_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'Comments' on this record model
        """
        self.set_field_value(self.COMMENTS__FIELD_NAME.field_name, value)

    def get_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Comments' from this record model
        """
        return self.get_field_value(self.COMMENTS__FIELD_NAME.field_name)

    def set_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConcentrationUnits' on this record model
        """
        self.set_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_ConsumableBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableBarcode' on this record model
        """
        self.set_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name, value)

    def get_ConsumableBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableBarcode' from this record model
        """
        return self.get_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name)

    def set_ConsumableClassification_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableClassification' on this record model
        """
        self.set_field_value(self.CONSUMABLECLASSIFICATION__FIELD_NAME.field_name, value)

    def get_ConsumableClassification_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableClassification' from this record model
        """
        return self.get_field_value(self.CONSUMABLECLASSIFICATION__FIELD_NAME.field_name)

    def set_ConsumableConsumableLot_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableConsumableLot' on this record model
        """
        self.set_field_value(self.CONSUMABLECONSUMABLELOT__FIELD_NAME.field_name, value)

    def get_ConsumableConsumableLot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableConsumableLot' from this record model
        """
        return self.get_field_value(self.CONSUMABLECONSUMABLELOT__FIELD_NAME.field_name)

    def set_ConsumableConsumableQty_field(self, value: Optional[float]):
        """
        Set data field with field name 'ConsumableConsumableQty' on this record model
        """
        self.set_field_value(self.CONSUMABLECONSUMABLEQTY__FIELD_NAME.field_name, value)

    def get_ConsumableConsumableQty_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ConsumableConsumableQty' from this record model
        """
        return self.get_field_value(self.CONSUMABLECONSUMABLEQTY__FIELD_NAME.field_name)

    def set_ConsumableConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLECONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLECONSUMABLETYPE__FIELD_NAME.field_name)

    def set_ConsumableDataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableDataTypeName' on this record model
        """
        self.set_field_value(self.CONSUMABLEDATATYPENAME__FIELD_NAME.field_name, value)

    def get_ConsumableDataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableDataTypeName' from this record model
        """
        return self.get_field_value(self.CONSUMABLEDATATYPENAME__FIELD_NAME.field_name)

    def set_ConsumableExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ConsumableExpirationDate' on this record model
        """
        self.set_field_value(self.CONSUMABLEEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ConsumableExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ConsumableExpirationDate' from this record model
        """
        return self.get_field_value(self.CONSUMABLEEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_ConsumableLot_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableLot' on this record model
        """
        self.set_field_value(self.CONSUMABLELOT__FIELD_NAME.field_name, value)

    def get_ConsumableLot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableLot' from this record model
        """
        return self.get_field_value(self.CONSUMABLELOT__FIELD_NAME.field_name)

    def set_ConsumableNameFormulationDetails_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableNameFormulationDetails' on this record model
        """
        self.set_field_value(self.CONSUMABLENAMEFORMULATIONDETAILS__FIELD_NAME.field_name, value)

    def get_ConsumableNameFormulationDetails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableNameFormulationDetails' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAMEFORMULATIONDETAILS__FIELD_NAME.field_name)

    def set_ConsumablePartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumablePartNumber' on this record model
        """
        self.set_field_value(self.CONSUMABLEPARTNUMBER__FIELD_NAME.field_name, value)

    def get_ConsumablePartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumablePartNumber' from this record model
        """
        return self.get_field_value(self.CONSUMABLEPARTNUMBER__FIELD_NAME.field_name)

    def set_ConsumableQty_field(self, value: Optional[float]):
        """
        Set data field with field name 'ConsumableQty' on this record model
        """
        self.set_field_value(self.CONSUMABLEQTY__FIELD_NAME.field_name, value)

    def get_ConsumableQty_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ConsumableQty' from this record model
        """
        return self.get_field_value(self.CONSUMABLEQTY__FIELD_NAME.field_name)

    def set_ConsumableQuantityRemaining_field(self, value: Optional[float]):
        """
        Set data field with field name 'ConsumableQuantityRemaining' on this record model
        """
        self.set_field_value(self.CONSUMABLEQUANTITYREMAINING__FIELD_NAME.field_name, value)

    def get_ConsumableQuantityRemaining_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ConsumableQuantityRemaining' from this record model
        """
        return self.get_field_value(self.CONSUMABLEQUANTITYREMAINING__FIELD_NAME.field_name)

    def set_ConsumableRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ConsumableRecordId' on this record model
        """
        self.set_field_value(self.CONSUMABLERECORDID__FIELD_NAME.field_name, value)

    def get_ConsumableRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ConsumableRecordId' from this record model
        """
        return self.get_field_value(self.CONSUMABLERECORDID__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_ConsumableTypeForRecipe_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableTypeForRecipe' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPEFORRECIPE__FIELD_NAME.field_name, value)

    def get_ConsumableTypeForRecipe_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableTypeForRecipe' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPEFORRECIPE__FIELD_NAME.field_name)

    def set_ConsumableUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableUnits' on this record model
        """
        self.set_field_value(self.CONSUMABLEUNITS__FIELD_NAME.field_name, value)

    def get_ConsumableUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableUnits' from this record model
        """
        return self.get_field_value(self.CONSUMABLEUNITS__FIELD_NAME.field_name)

    def set_ContainerId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ContainerId' on this record model
        """
        self.set_field_value(self.CONTAINERID__FIELD_NAME.field_name, value)

    def get_ContainerId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ContainerId' from this record model
        """
        return self.get_field_value(self.CONTAINERID__FIELD_NAME.field_name)

    def set_CovarisCyclesPerBurst_field(self, value: Optional[int]):
        """
        Set data field with field name 'CovarisCyclesPerBurst' on this record model
        """
        self.set_field_value(self.COVARISCYCLESPERBURST__FIELD_NAME.field_name, value)

    def get_CovarisCyclesPerBurst_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CovarisCyclesPerBurst' from this record model
        """
        return self.get_field_value(self.COVARISCYCLESPERBURST__FIELD_NAME.field_name)

    def set_CovarisDutyFactor_field(self, value: Optional[int]):
        """
        Set data field with field name 'CovarisDutyFactor' on this record model
        """
        self.set_field_value(self.COVARISDUTYFACTOR__FIELD_NAME.field_name, value)

    def get_CovarisDutyFactor_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CovarisDutyFactor' from this record model
        """
        return self.get_field_value(self.COVARISDUTYFACTOR__FIELD_NAME.field_name)

    def set_CovarisInstrument_field(self, value: Optional[str]):
        """
        Set data field with field name 'CovarisInstrument' on this record model
        """
        self.set_field_value(self.COVARISINSTRUMENT__FIELD_NAME.field_name, value)

    def get_CovarisInstrument_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CovarisInstrument' from this record model
        """
        return self.get_field_value(self.COVARISINSTRUMENT__FIELD_NAME.field_name)

    def set_CovarisPeakIncidentPower_field(self, value: Optional[int]):
        """
        Set data field with field name 'CovarisPeakIncidentPower' on this record model
        """
        self.set_field_value(self.COVARISPEAKINCIDENTPOWER__FIELD_NAME.field_name, value)

    def get_CovarisPeakIncidentPower_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CovarisPeakIncidentPower' from this record model
        """
        return self.get_field_value(self.COVARISPEAKINCIDENTPOWER__FIELD_NAME.field_name)

    def set_CovarisTargetPeak_field(self, value: Optional[str]):
        """
        Set data field with field name 'CovarisTargetPeak' on this record model
        """
        self.set_field_value(self.COVARISTARGETPEAK__FIELD_NAME.field_name, value)

    def get_CovarisTargetPeak_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CovarisTargetPeak' from this record model
        """
        return self.get_field_value(self.COVARISTARGETPEAK__FIELD_NAME.field_name)

    def set_CovarisTimes_field(self, value: Optional[int]):
        """
        Set data field with field name 'CovarisTimes' on this record model
        """
        self.set_field_value(self.COVARISTIMES__FIELD_NAME.field_name, value)

    def get_CovarisTimes_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CovarisTimes' from this record model
        """
        return self.get_field_value(self.COVARISTIMES__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CrisprDay_field(self, value: Optional[float]):
        """
        Set data field with field name 'CrisprDay' on this record model
        """
        self.set_field_value(self.CRISPRDAY__FIELD_NAME.field_name, value)

    def get_CrisprDay_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CrisprDay' from this record model
        """
        return self.get_field_value(self.CRISPRDAY__FIELD_NAME.field_name)

    def set_Customer_field(self, value: Optional[str]):
        """
        Set data field with field name 'Customer' on this record model
        """
        self.set_field_value(self.CUSTOMER__FIELD_NAME.field_name, value)

    def get_Customer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Customer' from this record model
        """
        return self.get_field_value(self.CUSTOMER__FIELD_NAME.field_name)

    def set_CustomerCategory_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomerCategory' on this record model
        """
        self.set_field_value(self.CUSTOMERCATEGORY__FIELD_NAME.field_name, value)

    def get_CustomerCategory_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomerCategory' from this record model
        """
        return self.get_field_value(self.CUSTOMERCATEGORY__FIELD_NAME.field_name)

    def set_DataTypeId_field(self, value: Optional[int]):
        """
        Set data field with field name 'DataTypeId' on this record model
        """
        self.set_field_value(self.DATATYPEID__FIELD_NAME.field_name, value)

    def get_DataTypeId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DataTypeId' from this record model
        """
        return self.get_field_value(self.DATATYPEID__FIELD_NAME.field_name)

    def set_Date_field(self, value: Optional[int]):
        """
        Set data field with field name 'Date' on this record model
        """
        self.set_field_value(self.DATE__FIELD_NAME.field_name, value)

    def get_Date_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Date' from this record model
        """
        return self.get_field_value(self.DATE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DatePurchased_field(self, value: Optional[int]):
        """
        Set data field with field name 'DatePurchased' on this record model
        """
        self.set_field_value(self.DATEPURCHASED__FIELD_NAME.field_name, value)

    def get_DatePurchased_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DatePurchased' from this record model
        """
        return self.get_field_value(self.DATEPURCHASED__FIELD_NAME.field_name)

    def set_Density_field(self, value: Optional[float]):
        """
        Set data field with field name 'Density' on this record model
        """
        self.set_field_value(self.DENSITY__FIELD_NAME.field_name, value)

    def get_Density_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Density' from this record model
        """
        return self.get_field_value(self.DENSITY__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_Description2_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description2' on this record model
        """
        self.set_field_value(self.DESCRIPTION2__FIELD_NAME.field_name, value)

    def get_Description2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description2' from this record model
        """
        return self.get_field_value(self.DESCRIPTION2__FIELD_NAME.field_name)

    def set_Discrepancy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Discrepancy' on this record model
        """
        self.set_field_value(self.DISCREPANCY__FIELD_NAME.field_name, value)

    def get_Discrepancy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Discrepancy' from this record model
        """
        return self.get_field_value(self.DISCREPANCY__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_FlowcellId_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellId' on this record model
        """
        self.set_field_value(self.FLOWCELLID__FIELD_NAME.field_name, value)

    def get_FlowcellId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellId' from this record model
        """
        return self.get_field_value(self.FLOWCELLID__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_Gender_field(self, value: Optional[str]):
        """
        Set data field with field name 'Gender' on this record model
        """
        self.set_field_value(self.GENDER__FIELD_NAME.field_name, value)

    def get_Gender_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Gender' from this record model
        """
        return self.get_field_value(self.GENDER__FIELD_NAME.field_name)

    def set_HTEConditionType_field(self, value: Optional[str]):
        """
        Set data field with field name 'HTEConditionType' on this record model
        """
        self.set_field_value(self.HTECONDITIONTYPE__FIELD_NAME.field_name, value)

    def get_HTEConditionType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HTEConditionType' from this record model
        """
        return self.get_field_value(self.HTECONDITIONTYPE__FIELD_NAME.field_name)

    def set_HTEConditionValue_field(self, value: Optional[str]):
        """
        Set data field with field name 'HTEConditionValue' on this record model
        """
        self.set_field_value(self.HTECONDITIONVALUE__FIELD_NAME.field_name, value)

    def get_HTEConditionValue_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HTEConditionValue' from this record model
        """
        return self.get_field_value(self.HTECONDITIONVALUE__FIELD_NAME.field_name)

    def set_HTEConditions_field(self, value: Optional[str]):
        """
        Set data field with field name 'HTEConditions' on this record model
        """
        self.set_field_value(self.HTECONDITIONS__FIELD_NAME.field_name, value)

    def get_HTEConditions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HTEConditions' from this record model
        """
        return self.get_field_value(self.HTECONDITIONS__FIELD_NAME.field_name)

    def set_HTEExpectedProducts_field(self, value: Optional[str]):
        """
        Set data field with field name 'HTEExpectedProducts' on this record model
        """
        self.set_field_value(self.HTEEXPECTEDPRODUCTS__FIELD_NAME.field_name, value)

    def get_HTEExpectedProducts_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HTEExpectedProducts' from this record model
        """
        return self.get_field_value(self.HTEEXPECTEDPRODUCTS__FIELD_NAME.field_name)

    def set_HTELimitingReactantPerWell_field(self, value: Optional[int]):
        """
        Set data field with field name 'HTELimitingReactantPerWell' on this record model
        """
        self.set_field_value(self.HTELIMITINGREACTANTPERWELL__FIELD_NAME.field_name, value)

    def get_HTELimitingReactantPerWell_field(self) -> Optional[int]:
        """
        Get data field value with field name 'HTELimitingReactantPerWell' from this record model
        """
        return self.get_field_value(self.HTELIMITINGREACTANTPERWELL__FIELD_NAME.field_name)

    def set_HTEMaterial_field(self, value: Optional[str]):
        """
        Set data field with field name 'HTEMaterial' on this record model
        """
        self.set_field_value(self.HTEMATERIAL__FIELD_NAME.field_name, value)

    def get_HTEMaterial_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HTEMaterial' from this record model
        """
        return self.get_field_value(self.HTEMATERIAL__FIELD_NAME.field_name)

    def set_HTEMaterialCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'HTEMaterialCount' on this record model
        """
        self.set_field_value(self.HTEMATERIALCOUNT__FIELD_NAME.field_name, value)

    def get_HTEMaterialCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'HTEMaterialCount' from this record model
        """
        return self.get_field_value(self.HTEMATERIALCOUNT__FIELD_NAME.field_name)

    def set_HTEMaterialLayout_field(self, value: Optional[str]):
        """
        Set data field with field name 'HTEMaterialLayout' on this record model
        """
        self.set_field_value(self.HTEMATERIALLAYOUT__FIELD_NAME.field_name, value)

    def get_HTEMaterialLayout_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HTEMaterialLayout' from this record model
        """
        return self.get_field_value(self.HTEMATERIALLAYOUT__FIELD_NAME.field_name)

    def set_HTEMaterials_field(self, value: Optional[str]):
        """
        Set data field with field name 'HTEMaterials' on this record model
        """
        self.set_field_value(self.HTEMATERIALS__FIELD_NAME.field_name, value)

    def get_HTEMaterials_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HTEMaterials' from this record model
        """
        return self.get_field_value(self.HTEMATERIALS__FIELD_NAME.field_name)

    def set_HTEPlateSize_field(self, value: Optional[str]):
        """
        Set data field with field name 'HTEPlateSize' on this record model
        """
        self.set_field_value(self.HTEPLATESIZE__FIELD_NAME.field_name, value)

    def get_HTEPlateSize_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HTEPlateSize' from this record model
        """
        return self.get_field_value(self.HTEPLATESIZE__FIELD_NAME.field_name)

    def set_HTEReactionComponents_field(self, value: Optional[str]):
        """
        Set data field with field name 'HTEReactionComponents' on this record model
        """
        self.set_field_value(self.HTEREACTIONCOMPONENTS__FIELD_NAME.field_name, value)

    def get_HTEReactionComponents_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HTEReactionComponents' from this record model
        """
        return self.get_field_value(self.HTEREACTIONCOMPONENTS__FIELD_NAME.field_name)

    def set_HTEReactionConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'HTEReactionConcentration' on this record model
        """
        self.set_field_value(self.HTEREACTIONCONCENTRATION__FIELD_NAME.field_name, value)

    def get_HTEReactionConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'HTEReactionConcentration' from this record model
        """
        return self.get_field_value(self.HTEREACTIONCONCENTRATION__FIELD_NAME.field_name)

    def set_HTERunVolume_field(self, value: Optional[int]):
        """
        Set data field with field name 'HTERunVolume' on this record model
        """
        self.set_field_value(self.HTERUNVOLUME__FIELD_NAME.field_name, value)

    def get_HTERunVolume_field(self) -> Optional[int]:
        """
        Get data field value with field name 'HTERunVolume' from this record model
        """
        return self.get_field_value(self.HTERUNVOLUME__FIELD_NAME.field_name)

    def set_HazardCodes_field(self, value: Optional[str]):
        """
        Set data field with field name 'HazardCodes' on this record model
        """
        self.set_field_value(self.HAZARDCODES__FIELD_NAME.field_name, value)

    def get_HazardCodes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HazardCodes' from this record model
        """
        return self.get_field_value(self.HAZARDCODES__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_InformaticsAdjustedRSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'InformaticsAdjustedRSquared' on this record model
        """
        self.set_field_value(self.INFORMATICSADJUSTEDRSQUARED__FIELD_NAME.field_name, value)

    def get_InformaticsAdjustedRSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InformaticsAdjustedRSquared' from this record model
        """
        return self.get_field_value(self.INFORMATICSADJUSTEDRSQUARED__FIELD_NAME.field_name)

    def set_InformaticsEstimate_field(self, value: Optional[float]):
        """
        Set data field with field name 'InformaticsEstimate' on this record model
        """
        self.set_field_value(self.INFORMATICSESTIMATE__FIELD_NAME.field_name, value)

    def get_InformaticsEstimate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InformaticsEstimate' from this record model
        """
        return self.get_field_value(self.INFORMATICSESTIMATE__FIELD_NAME.field_name)

    def set_InformaticsFctName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InformaticsFctName' on this record model
        """
        self.set_field_value(self.INFORMATICSFCTNAME__FIELD_NAME.field_name, value)

    def get_InformaticsFctName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InformaticsFctName' from this record model
        """
        return self.get_field_value(self.INFORMATICSFCTNAME__FIELD_NAME.field_name)

    def set_InformaticsFctText_field(self, value: Optional[str]):
        """
        Set data field with field name 'InformaticsFctText' on this record model
        """
        self.set_field_value(self.INFORMATICSFCTTEXT__FIELD_NAME.field_name, value)

    def get_InformaticsFctText_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InformaticsFctText' from this record model
        """
        return self.get_field_value(self.INFORMATICSFCTTEXT__FIELD_NAME.field_name)

    def set_InformaticsName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InformaticsName' on this record model
        """
        self.set_field_value(self.INFORMATICSNAME__FIELD_NAME.field_name, value)

    def get_InformaticsName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InformaticsName' from this record model
        """
        return self.get_field_value(self.INFORMATICSNAME__FIELD_NAME.field_name)

    def set_InformaticsPValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'InformaticsPValue' on this record model
        """
        self.set_field_value(self.INFORMATICSPVALUE__FIELD_NAME.field_name, value)

    def get_InformaticsPValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InformaticsPValue' from this record model
        """
        return self.get_field_value(self.INFORMATICSPVALUE__FIELD_NAME.field_name)

    def set_InformaticsPrGreaterThant_field(self, value: Optional[float]):
        """
        Set data field with field name 'InformaticsPrGreaterThant' on this record model
        """
        self.set_field_value(self.INFORMATICSPRGREATERTHANT__FIELD_NAME.field_name, value)

    def get_InformaticsPrGreaterThant_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InformaticsPrGreaterThant' from this record model
        """
        return self.get_field_value(self.INFORMATICSPRGREATERTHANT__FIELD_NAME.field_name)

    def set_InformaticsRSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'InformaticsRSquared' on this record model
        """
        self.set_field_value(self.INFORMATICSRSQUARED__FIELD_NAME.field_name, value)

    def get_InformaticsRSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InformaticsRSquared' from this record model
        """
        return self.get_field_value(self.INFORMATICSRSQUARED__FIELD_NAME.field_name)

    def set_InformaticsResidualStandardError_field(self, value: Optional[float]):
        """
        Set data field with field name 'InformaticsResidualStandardError' on this record model
        """
        self.set_field_value(self.INFORMATICSRESIDUALSTANDARDERROR__FIELD_NAME.field_name, value)

    def get_InformaticsResidualStandardError_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InformaticsResidualStandardError' from this record model
        """
        return self.get_field_value(self.INFORMATICSRESIDUALSTANDARDERROR__FIELD_NAME.field_name)

    def set_InformaticsResidualStandardErrorDoF_field(self, value: Optional[float]):
        """
        Set data field with field name 'InformaticsResidualStandardErrorDoF' on this record model
        """
        self.set_field_value(self.INFORMATICSRESIDUALSTANDARDERRORDOF__FIELD_NAME.field_name, value)

    def get_InformaticsResidualStandardErrorDoF_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InformaticsResidualStandardErrorDoF' from this record model
        """
        return self.get_field_value(self.INFORMATICSRESIDUALSTANDARDERRORDOF__FIELD_NAME.field_name)

    def set_InformaticsStdError_field(self, value: Optional[float]):
        """
        Set data field with field name 'InformaticsStdError' on this record model
        """
        self.set_field_value(self.INFORMATICSSTDERROR__FIELD_NAME.field_name, value)

    def get_InformaticsStdError_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InformaticsStdError' from this record model
        """
        return self.get_field_value(self.INFORMATICSSTDERROR__FIELD_NAME.field_name)

    def set_InformaticsTValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'InformaticsTValue' on this record model
        """
        self.set_field_value(self.INFORMATICSTVALUE__FIELD_NAME.field_name, value)

    def get_InformaticsTValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InformaticsTValue' from this record model
        """
        return self.get_field_value(self.INFORMATICSTVALUE__FIELD_NAME.field_name)

    def set_InstrumentStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentStatus' on this record model
        """
        self.set_field_value(self.INSTRUMENTSTATUS__FIELD_NAME.field_name, value)

    def get_InstrumentStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentStatus' from this record model
        """
        return self.get_field_value(self.INSTRUMENTSTATUS__FIELD_NAME.field_name)

    def set_InstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentType' on this record model
        """
        self.set_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_InstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentType' from this record model
        """
        return self.get_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_InstrumentUsed_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentUsed' on this record model
        """
        self.set_field_value(self.INSTRUMENTUSED__FIELD_NAME.field_name, value)

    def get_InstrumentUsed_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentUsed' from this record model
        """
        return self.get_field_value(self.INSTRUMENTUSED__FIELD_NAME.field_name)

    def set_ItemId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ItemId' on this record model
        """
        self.set_field_value(self.ITEMID__FIELD_NAME.field_name, value)

    def get_ItemId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ItemId' from this record model
        """
        return self.get_field_value(self.ITEMID__FIELD_NAME.field_name)

    def set_LastMaintenanceDate_field(self, value: Optional[str]):
        """
        Set data field with field name 'LastMaintenanceDate' on this record model
        """
        self.set_field_value(self.LASTMAINTENANCEDATE__FIELD_NAME.field_name, value)

    def get_LastMaintenanceDate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LastMaintenanceDate' from this record model
        """
        return self.get_field_value(self.LASTMAINTENANCEDATE__FIELD_NAME.field_name)

    def set_LimitingReactant_field(self, value: Optional[bool]):
        """
        Set data field with field name 'LimitingReactant' on this record model
        """
        self.set_field_value(self.LIMITINGREACTANT__FIELD_NAME.field_name, value)

    def get_LimitingReactant_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'LimitingReactant' from this record model
        """
        return self.get_field_value(self.LIMITINGREACTANT__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_Measured_field(self, value: Optional[float]):
        """
        Set data field with field name 'Measured' on this record model
        """
        self.set_field_value(self.MEASURED__FIELD_NAME.field_name, value)

    def get_Measured_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Measured' from this record model
        """
        return self.get_field_value(self.MEASURED__FIELD_NAME.field_name)

    def set_ModelNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ModelNumber' on this record model
        """
        self.set_field_value(self.MODELNUMBER__FIELD_NAME.field_name, value)

    def get_ModelNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ModelNumber' from this record model
        """
        return self.get_field_value(self.MODELNUMBER__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_Moles_field(self, value: Optional[float]):
        """
        Set data field with field name 'Moles' on this record model
        """
        self.set_field_value(self.MOLES__FIELD_NAME.field_name, value)

    def get_Moles_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Moles' from this record model
        """
        return self.get_field_value(self.MOLES__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_NanodropAverage1_field(self, value: Optional[float]):
        """
        Set data field with field name 'NanodropAverage1' on this record model
        """
        self.set_field_value(self.NANODROPAVERAGE1__FIELD_NAME.field_name, value)

    def get_NanodropAverage1_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NanodropAverage1' from this record model
        """
        return self.get_field_value(self.NANODROPAVERAGE1__FIELD_NAME.field_name)

    def set_NanodropAverage2_field(self, value: Optional[float]):
        """
        Set data field with field name 'NanodropAverage2' on this record model
        """
        self.set_field_value(self.NANODROPAVERAGE2__FIELD_NAME.field_name, value)

    def get_NanodropAverage2_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NanodropAverage2' from this record model
        """
        return self.get_field_value(self.NANODROPAVERAGE2__FIELD_NAME.field_name)

    def set_NextMaintenanceDate_field(self, value: Optional[str]):
        """
        Set data field with field name 'NextMaintenanceDate' on this record model
        """
        self.set_field_value(self.NEXTMAINTENANCEDATE__FIELD_NAME.field_name, value)

    def get_NextMaintenanceDate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NextMaintenanceDate' from this record model
        """
        return self.get_field_value(self.NEXTMAINTENANCEDATE__FIELD_NAME.field_name)

    def set_NormalizationMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'NormalizationMethod' on this record model
        """
        self.set_field_value(self.NORMALIZATIONMETHOD__FIELD_NAME.field_name, value)

    def get_NormalizationMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NormalizationMethod' from this record model
        """
        return self.get_field_value(self.NORMALIZATIONMETHOD__FIELD_NAME.field_name)

    def set_NumberOfReplicatesNotEditable_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfReplicatesNotEditable' on this record model
        """
        self.set_field_value(self.NUMBEROFREPLICATESNOTEDITABLE__FIELD_NAME.field_name, value)

    def get_NumberOfReplicatesNotEditable_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfReplicatesNotEditable' from this record model
        """
        return self.get_field_value(self.NUMBEROFREPLICATESNOTEDITABLE__FIELD_NAME.field_name)

    def set_OligoName_field(self, value: Optional[str]):
        """
        Set data field with field name 'OligoName' on this record model
        """
        self.set_field_value(self.OLIGONAME__FIELD_NAME.field_name, value)

    def get_OligoName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OligoName' from this record model
        """
        return self.get_field_value(self.OLIGONAME__FIELD_NAME.field_name)

    def set_OligoSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'OligoSequence' on this record model
        """
        self.set_field_value(self.OLIGOSEQUENCE__FIELD_NAME.field_name, value)

    def get_OligoSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OligoSequence' from this record model
        """
        return self.get_field_value(self.OLIGOSEQUENCE__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_PassorFail_field(self, value: Optional[str]):
        """
        Set data field with field name 'PassorFail' on this record model
        """
        self.set_field_value(self.PASSORFAIL__FIELD_NAME.field_name, value)

    def get_PassorFail_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PassorFail' from this record model
        """
        return self.get_field_value(self.PASSORFAIL__FIELD_NAME.field_name)

    def set_Peptide2PartConsumableLot_field(self, value: Optional[str]):
        """
        Set data field with field name 'Peptide2PartConsumableLot' on this record model
        """
        self.set_field_value(self.PEPTIDE2PARTCONSUMABLELOT__FIELD_NAME.field_name, value)

    def get_Peptide2PartConsumableLot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Peptide2PartConsumableLot' from this record model
        """
        return self.get_field_value(self.PEPTIDE2PARTCONSUMABLELOT__FIELD_NAME.field_name)

    def set_Peptide2PartConsumableQty_field(self, value: Optional[float]):
        """
        Set data field with field name 'Peptide2PartConsumableQty' on this record model
        """
        self.set_field_value(self.PEPTIDE2PARTCONSUMABLEQTY__FIELD_NAME.field_name, value)

    def get_Peptide2PartConsumableQty_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Peptide2PartConsumableQty' from this record model
        """
        return self.get_field_value(self.PEPTIDE2PARTCONSUMABLEQTY__FIELD_NAME.field_name)

    def set_Peptide2PartConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'Peptide2PartConsumableType' on this record model
        """
        self.set_field_value(self.PEPTIDE2PARTCONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_Peptide2PartConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Peptide2PartConsumableType' from this record model
        """
        return self.get_field_value(self.PEPTIDE2PARTCONSUMABLETYPE__FIELD_NAME.field_name)

    def set_Peptide2PartPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Peptide2PartPartNumber' on this record model
        """
        self.set_field_value(self.PEPTIDE2PARTPARTNUMBER__FIELD_NAME.field_name, value)

    def get_Peptide2PartPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Peptide2PartPartNumber' from this record model
        """
        return self.get_field_value(self.PEPTIDE2PARTPARTNUMBER__FIELD_NAME.field_name)

    def set_PlanAmount_field(self, value: Optional[float]):
        """
        Set data field with field name 'PlanAmount' on this record model
        """
        self.set_field_value(self.PLANAMOUNT__FIELD_NAME.field_name, value)

    def get_PlanAmount_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PlanAmount' from this record model
        """
        return self.get_field_value(self.PLANAMOUNT__FIELD_NAME.field_name)

    def set_PlasmidConsumableLot_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlasmidConsumableLot' on this record model
        """
        self.set_field_value(self.PLASMIDCONSUMABLELOT__FIELD_NAME.field_name, value)

    def get_PlasmidConsumableLot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlasmidConsumableLot' from this record model
        """
        return self.get_field_value(self.PLASMIDCONSUMABLELOT__FIELD_NAME.field_name)

    def set_PlasmidConsumableQty_field(self, value: Optional[float]):
        """
        Set data field with field name 'PlasmidConsumableQty' on this record model
        """
        self.set_field_value(self.PLASMIDCONSUMABLEQTY__FIELD_NAME.field_name, value)

    def get_PlasmidConsumableQty_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PlasmidConsumableQty' from this record model
        """
        return self.get_field_value(self.PLASMIDCONSUMABLEQTY__FIELD_NAME.field_name)

    def set_PlasmidConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlasmidConsumableType' on this record model
        """
        self.set_field_value(self.PLASMIDCONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_PlasmidConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlasmidConsumableType' from this record model
        """
        return self.get_field_value(self.PLASMIDCONSUMABLETYPE__FIELD_NAME.field_name)

    def set_PlasmidName_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlasmidName' on this record model
        """
        self.set_field_value(self.PLASMIDNAME__FIELD_NAME.field_name, value)

    def get_PlasmidName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlasmidName' from this record model
        """
        return self.get_field_value(self.PLASMIDNAME__FIELD_NAME.field_name)

    def set_PlasmidPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlasmidPartNumber' on this record model
        """
        self.set_field_value(self.PLASMIDPARTNUMBER__FIELD_NAME.field_name, value)

    def get_PlasmidPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlasmidPartNumber' from this record model
        """
        return self.get_field_value(self.PLASMIDPARTNUMBER__FIELD_NAME.field_name)

    def set_PlasmidUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlasmidUnits' on this record model
        """
        self.set_field_value(self.PLASMIDUNITS__FIELD_NAME.field_name, value)

    def get_PlasmidUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlasmidUnits' from this record model
        """
        return self.get_field_value(self.PLASMIDUNITS__FIELD_NAME.field_name)

    def set_Position_field(self, value: Optional[str]):
        """
        Set data field with field name 'Position' on this record model
        """
        self.set_field_value(self.POSITION__FIELD_NAME.field_name, value)

    def get_Position_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Position' from this record model
        """
        return self.get_field_value(self.POSITION__FIELD_NAME.field_name)

    def set_Pressure_field(self, value: Optional[float]):
        """
        Set data field with field name 'Pressure' on this record model
        """
        self.set_field_value(self.PRESSURE__FIELD_NAME.field_name, value)

    def get_Pressure_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Pressure' from this record model
        """
        return self.get_field_value(self.PRESSURE__FIELD_NAME.field_name)

    def set_PressureUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'PressureUnits' on this record model
        """
        self.set_field_value(self.PRESSUREUNITS__FIELD_NAME.field_name, value)

    def get_PressureUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PressureUnits' from this record model
        """
        return self.get_field_value(self.PRESSUREUNITS__FIELD_NAME.field_name)

    def set_Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Purity' on this record model
        """
        self.set_field_value(self.PURITY__FIELD_NAME.field_name, value)

    def get_Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Purity' from this record model
        """
        return self.get_field_value(self.PURITY__FIELD_NAME.field_name)

    def set_Quantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Quantity' on this record model
        """
        self.set_field_value(self.QUANTITY__FIELD_NAME.field_name, value)

    def get_Quantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Quantity' from this record model
        """
        return self.get_field_value(self.QUANTITY__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_QuantityRemaining_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityRemaining' on this record model
        """
        self.set_field_value(self.QUANTITYREMAINING__FIELD_NAME.field_name, value)

    def get_QuantityRemaining_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityRemaining' from this record model
        """
        return self.get_field_value(self.QUANTITYREMAINING__FIELD_NAME.field_name)

    def set_Raterpm_field(self, value: Optional[float]):
        """
        Set data field with field name 'Raterpm' on this record model
        """
        self.set_field_value(self.RATERPM__FIELD_NAME.field_name, value)

    def get_Raterpm_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Raterpm' from this record model
        """
        return self.get_field_value(self.RATERPM__FIELD_NAME.field_name)

    def set_Ratio_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ratio' on this record model
        """
        self.set_field_value(self.RATIO__FIELD_NAME.field_name, value)

    def get_Ratio_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ratio' from this record model
        """
        return self.get_field_value(self.RATIO__FIELD_NAME.field_name)

    def set_Reaction_field(self, value: Optional[str]):
        """
        Set data field with field name 'Reaction' on this record model
        """
        self.set_field_value(self.REACTION__FIELD_NAME.field_name, value)

    def get_Reaction_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Reaction' from this record model
        """
        return self.get_field_value(self.REACTION__FIELD_NAME.field_name)

    def set_ReactionCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReactionCoefficient' on this record model
        """
        self.set_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_ReactionCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReactionCoefficient' from this record model
        """
        return self.get_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name)

    def set_ReactionPlanUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReactionPlanUnits' on this record model
        """
        self.set_field_value(self.REACTIONPLANUNITS__FIELD_NAME.field_name, value)

    def get_ReactionPlanUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReactionPlanUnits' from this record model
        """
        return self.get_field_value(self.REACTIONPLANUNITS__FIELD_NAME.field_name)

    def set_Reagents_field(self, value: Optional[str]):
        """
        Set data field with field name 'Reagents' on this record model
        """
        self.set_field_value(self.REAGENTS__FIELD_NAME.field_name, value)

    def get_Reagents_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Reagents' from this record model
        """
        return self.get_field_value(self.REAGENTS__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_ResinName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ResinName' on this record model
        """
        self.set_field_value(self.RESINNAME__FIELD_NAME.field_name, value)

    def get_ResinName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ResinName' from this record model
        """
        return self.get_field_value(self.RESINNAME__FIELD_NAME.field_name)

    def set_Role_field(self, value: Optional[str]):
        """
        Set data field with field name 'Role' on this record model
        """
        self.set_field_value(self.ROLE__FIELD_NAME.field_name, value)

    def get_Role_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Role' from this record model
        """
        return self.get_field_value(self.ROLE__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SampleMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleMean' on this record model
        """
        self.set_field_value(self.SAMPLEMEAN__FIELD_NAME.field_name, value)

    def get_SampleMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleMean' from this record model
        """
        return self.get_field_value(self.SAMPLEMEAN__FIELD_NAME.field_name)

    def set_SampleMeanThreshold_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleMeanThreshold' on this record model
        """
        self.set_field_value(self.SAMPLEMEANTHRESHOLD__FIELD_NAME.field_name, value)

    def get_SampleMeanThreshold_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleMeanThreshold' from this record model
        """
        return self.get_field_value(self.SAMPLEMEANTHRESHOLD__FIELD_NAME.field_name)

    def set_SampleNormalizedMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleNormalizedMean' on this record model
        """
        self.set_field_value(self.SAMPLENORMALIZEDMEAN__FIELD_NAME.field_name, value)

    def get_SampleNormalizedMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleNormalizedMean' from this record model
        """
        return self.get_field_value(self.SAMPLENORMALIZEDMEAN__FIELD_NAME.field_name)

    def set_SampleNormalizedMeanThreshold_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleNormalizedMeanThreshold' on this record model
        """
        self.set_field_value(self.SAMPLENORMALIZEDMEANTHRESHOLD__FIELD_NAME.field_name, value)

    def get_SampleNormalizedMeanThreshold_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleNormalizedMeanThreshold' from this record model
        """
        return self.get_field_value(self.SAMPLENORMALIZEDMEANTHRESHOLD__FIELD_NAME.field_name)

    def set_SampleStd_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleStd' on this record model
        """
        self.set_field_value(self.SAMPLESTD__FIELD_NAME.field_name, value)

    def get_SampleStd_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleStd' from this record model
        """
        return self.get_field_value(self.SAMPLESTD__FIELD_NAME.field_name)

    def set_SampleStdThreshold_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleStdThreshold' on this record model
        """
        self.set_field_value(self.SAMPLESTDTHRESHOLD__FIELD_NAME.field_name, value)

    def get_SampleStdThreshold_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleStdThreshold' from this record model
        """
        return self.get_field_value(self.SAMPLESTDTHRESHOLD__FIELD_NAME.field_name)

    def set_SampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleType' on this record model
        """
        self.set_field_value(self.SAMPLETYPE__FIELD_NAME.field_name, value)

    def get_SampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleType' from this record model
        """
        return self.get_field_value(self.SAMPLETYPE__FIELD_NAME.field_name)

    def set_SamplingDay_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplingDay' on this record model
        """
        self.set_field_value(self.SAMPLINGDAY__FIELD_NAME.field_name, value)

    def get_SamplingDay_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplingDay' from this record model
        """
        return self.get_field_value(self.SAMPLINGDAY__FIELD_NAME.field_name)

    def set_SamplingHour_field(self, value: Optional[float]):
        """
        Set data field with field name 'SamplingHour' on this record model
        """
        self.set_field_value(self.SAMPLINGHOUR__FIELD_NAME.field_name, value)

    def get_SamplingHour_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SamplingHour' from this record model
        """
        return self.get_field_value(self.SAMPLINGHOUR__FIELD_NAME.field_name)

    def set_SarFieldNameList_field(self, value: Optional[str]):
        """
        Set data field with field name 'SarFieldNameList' on this record model
        """
        self.set_field_value(self.SARFIELDNAMELIST__FIELD_NAME.field_name, value)

    def get_SarFieldNameList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SarFieldNameList' from this record model
        """
        return self.get_field_value(self.SARFIELDNAMELIST__FIELD_NAME.field_name)

    def set_SarScaffold_field(self, value: Optional[str]):
        """
        Set data field with field name 'SarScaffold' on this record model
        """
        self.set_field_value(self.SARSCAFFOLD__FIELD_NAME.field_name, value)

    def get_SarScaffold_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SarScaffold' from this record model
        """
        return self.get_field_value(self.SARSCAFFOLD__FIELD_NAME.field_name)

    def set_SarThreshold_field(self, value: Optional[int]):
        """
        Set data field with field name 'SarThreshold' on this record model
        """
        self.set_field_value(self.SARTHRESHOLD__FIELD_NAME.field_name, value)

    def get_SarThreshold_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SarThreshold' from this record model
        """
        return self.get_field_value(self.SARTHRESHOLD__FIELD_NAME.field_name)

    def set_SearchMe_field(self, value: Optional[str]):
        """
        Set data field with field name 'SearchMe' on this record model
        """
        self.set_field_value(self.SEARCHME__FIELD_NAME.field_name, value)

    def get_SearchMe_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SearchMe' from this record model
        """
        return self.get_field_value(self.SEARCHME__FIELD_NAME.field_name)

    def set_SequencerInstrument_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencerInstrument' on this record model
        """
        self.set_field_value(self.SEQUENCERINSTRUMENT__FIELD_NAME.field_name, value)

    def get_SequencerInstrument_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencerInstrument' from this record model
        """
        return self.get_field_value(self.SEQUENCERINSTRUMENT__FIELD_NAME.field_name)

    def set_SequencerRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencerRunFolder' on this record model
        """
        self.set_field_value(self.SEQUENCERRUNFOLDER__FIELD_NAME.field_name, value)

    def get_SequencerRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencerRunFolder' from this record model
        """
        return self.get_field_value(self.SEQUENCERRUNFOLDER__FIELD_NAME.field_name)

    def set_SequencingRunMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencingRunMode' on this record model
        """
        self.set_field_value(self.SEQUENCINGRUNMODE__FIELD_NAME.field_name, value)

    def get_SequencingRunMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencingRunMode' from this record model
        """
        return self.get_field_value(self.SEQUENCINGRUNMODE__FIELD_NAME.field_name)

    def set_SequencingRunType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencingRunType' on this record model
        """
        self.set_field_value(self.SEQUENCINGRUNTYPE__FIELD_NAME.field_name, value)

    def get_SequencingRunType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencingRunType' from this record model
        """
        return self.get_field_value(self.SEQUENCINGRUNTYPE__FIELD_NAME.field_name)

    def set_SerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'SerialNumber' on this record model
        """
        self.set_field_value(self.SERIALNUMBER__FIELD_NAME.field_name, value)

    def get_SerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SerialNumber' from this record model
        """
        return self.get_field_value(self.SERIALNUMBER__FIELD_NAME.field_name)

    def set_SkipDiscrepancy_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SkipDiscrepancy' on this record model
        """
        self.set_field_value(self.SKIPDISCREPANCY__FIELD_NAME.field_name, value)

    def get_SkipDiscrepancy_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SkipDiscrepancy' from this record model
        """
        return self.get_field_value(self.SKIPDISCREPANCY__FIELD_NAME.field_name)

    def set_StainPartConsumableLot_field(self, value: Optional[str]):
        """
        Set data field with field name 'StainPartConsumableLot' on this record model
        """
        self.set_field_value(self.STAINPARTCONSUMABLELOT__FIELD_NAME.field_name, value)

    def get_StainPartConsumableLot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StainPartConsumableLot' from this record model
        """
        return self.get_field_value(self.STAINPARTCONSUMABLELOT__FIELD_NAME.field_name)

    def set_StainPartConsumableQty_field(self, value: Optional[float]):
        """
        Set data field with field name 'StainPartConsumableQty' on this record model
        """
        self.set_field_value(self.STAINPARTCONSUMABLEQTY__FIELD_NAME.field_name, value)

    def get_StainPartConsumableQty_field(self) -> Optional[float]:
        """
        Get data field value with field name 'StainPartConsumableQty' from this record model
        """
        return self.get_field_value(self.STAINPARTCONSUMABLEQTY__FIELD_NAME.field_name)

    def set_StainPartConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'StainPartConsumableType' on this record model
        """
        self.set_field_value(self.STAINPARTCONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_StainPartConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StainPartConsumableType' from this record model
        """
        return self.get_field_value(self.STAINPARTCONSUMABLETYPE__FIELD_NAME.field_name)

    def set_StandardError_field(self, value: Optional[float]):
        """
        Set data field with field name 'StandardError' on this record model
        """
        self.set_field_value(self.STANDARDERROR__FIELD_NAME.field_name, value)

    def get_StandardError_field(self) -> Optional[float]:
        """
        Get data field value with field name 'StandardError' from this record model
        """
        return self.get_field_value(self.STANDARDERROR__FIELD_NAME.field_name)

    def set_StandardErrorThreshold_field(self, value: Optional[float]):
        """
        Set data field with field name 'StandardErrorThreshold' on this record model
        """
        self.set_field_value(self.STANDARDERRORTHRESHOLD__FIELD_NAME.field_name, value)

    def get_StandardErrorThreshold_field(self) -> Optional[float]:
        """
        Get data field value with field name 'StandardErrorThreshold' from this record model
        """
        return self.get_field_value(self.STANDARDERRORTHRESHOLD__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def set_StrainName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainName' on this record model
        """
        self.set_field_value(self.STRAINNAME__FIELD_NAME.field_name, value)

    def get_StrainName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainName' from this record model
        """
        return self.get_field_value(self.STRAINNAME__FIELD_NAME.field_name)

    def set_StrainPartConsumableLot_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainPartConsumableLot' on this record model
        """
        self.set_field_value(self.STRAINPARTCONSUMABLELOT__FIELD_NAME.field_name, value)

    def get_StrainPartConsumableLot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainPartConsumableLot' from this record model
        """
        return self.get_field_value(self.STRAINPARTCONSUMABLELOT__FIELD_NAME.field_name)

    def set_StrainPartConsumableQty_field(self, value: Optional[float]):
        """
        Set data field with field name 'StrainPartConsumableQty' on this record model
        """
        self.set_field_value(self.STRAINPARTCONSUMABLEQTY__FIELD_NAME.field_name, value)

    def get_StrainPartConsumableQty_field(self) -> Optional[float]:
        """
        Get data field value with field name 'StrainPartConsumableQty' from this record model
        """
        return self.get_field_value(self.STRAINPARTCONSUMABLEQTY__FIELD_NAME.field_name)

    def set_StrainPartConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainPartConsumableType' on this record model
        """
        self.set_field_value(self.STRAINPARTCONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_StrainPartConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainPartConsumableType' from this record model
        """
        return self.get_field_value(self.STRAINPARTCONSUMABLETYPE__FIELD_NAME.field_name)

    def set_StudyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyId' on this record model
        """
        self.set_field_value(self.STUDYID__FIELD_NAME.field_name, value)

    def get_StudyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyId' from this record model
        """
        return self.get_field_value(self.STUDYID__FIELD_NAME.field_name)

    def set_Target_field(self, value: Optional[float]):
        """
        Set data field with field name 'Target' on this record model
        """
        self.set_field_value(self.TARGET__FIELD_NAME.field_name, value)

    def get_Target_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Target' from this record model
        """
        return self.get_field_value(self.TARGET__FIELD_NAME.field_name)

    def set_TechAssigned_field(self, value: Optional[str]):
        """
        Set data field with field name 'TechAssigned' on this record model
        """
        self.set_field_value(self.TECHASSIGNED__FIELD_NAME.field_name, value)

    def get_TechAssigned_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TechAssigned' from this record model
        """
        return self.get_field_value(self.TECHASSIGNED__FIELD_NAME.field_name)

    def set_Technician_field(self, value: Optional[str]):
        """
        Set data field with field name 'Technician' on this record model
        """
        self.set_field_value(self.TECHNICIAN__FIELD_NAME.field_name, value)

    def get_Technician_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Technician' from this record model
        """
        return self.get_field_value(self.TECHNICIAN__FIELD_NAME.field_name)

    def set_TechnicianAssigned_field(self, value: Optional[str]):
        """
        Set data field with field name 'TechnicianAssigned' on this record model
        """
        self.set_field_value(self.TECHNICIANASSIGNED__FIELD_NAME.field_name, value)

    def get_TechnicianAssigned_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TechnicianAssigned' from this record model
        """
        return self.get_field_value(self.TECHNICIANASSIGNED__FIELD_NAME.field_name)

    def set_Temperature_field(self, value: Optional[int]):
        """
        Set data field with field name 'Temperature' on this record model
        """
        self.set_field_value(self.TEMPERATURE__FIELD_NAME.field_name, value)

    def get_Temperature_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Temperature' from this record model
        """
        return self.get_field_value(self.TEMPERATURE__FIELD_NAME.field_name)

    def set_TemperatureUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemperatureUnits' on this record model
        """
        self.set_field_value(self.TEMPERATUREUNITS__FIELD_NAME.field_name, value)

    def get_TemperatureUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemperatureUnits' from this record model
        """
        return self.get_field_value(self.TEMPERATUREUNITS__FIELD_NAME.field_name)

    def set_TheoryMoles_field(self, value: Optional[float]):
        """
        Set data field with field name 'TheoryMoles' on this record model
        """
        self.set_field_value(self.THEORYMOLES__FIELD_NAME.field_name, value)

    def get_TheoryMoles_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TheoryMoles' from this record model
        """
        return self.get_field_value(self.THEORYMOLES__FIELD_NAME.field_name)

    def set_TreatmentGroupId_field(self, value: Optional[str]):
        """
        Set data field with field name 'TreatmentGroupId' on this record model
        """
        self.set_field_value(self.TREATMENTGROUPID__FIELD_NAME.field_name, value)

    def get_TreatmentGroupId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TreatmentGroupId' from this record model
        """
        return self.get_field_value(self.TREATMENTGROUPID__FIELD_NAME.field_name)

    def set_Trial_field(self, value: Optional[float]):
        """
        Set data field with field name 'Trial' on this record model
        """
        self.set_field_value(self.TRIAL__FIELD_NAME.field_name, value)

    def get_Trial_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Trial' from this record model
        """
        return self.get_field_value(self.TRIAL__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)

    def set_ViralVectorPartConsumableLot_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViralVectorPartConsumableLot' on this record model
        """
        self.set_field_value(self.VIRALVECTORPARTCONSUMABLELOT__FIELD_NAME.field_name, value)

    def get_ViralVectorPartConsumableLot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViralVectorPartConsumableLot' from this record model
        """
        return self.get_field_value(self.VIRALVECTORPARTCONSUMABLELOT__FIELD_NAME.field_name)

    def set_ViralVectorPartConsumableQty_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViralVectorPartConsumableQty' on this record model
        """
        self.set_field_value(self.VIRALVECTORPARTCONSUMABLEQTY__FIELD_NAME.field_name, value)

    def get_ViralVectorPartConsumableQty_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViralVectorPartConsumableQty' from this record model
        """
        return self.get_field_value(self.VIRALVECTORPARTCONSUMABLEQTY__FIELD_NAME.field_name)

    def set_ViralVectorPartConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViralVectorPartConsumableType' on this record model
        """
        self.set_field_value(self.VIRALVECTORPARTCONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ViralVectorPartConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViralVectorPartConsumableType' from this record model
        """
        return self.get_field_value(self.VIRALVECTORPARTCONSUMABLETYPE__FIELD_NAME.field_name)

    def set_ViralVectorPartPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViralVectorPartPartNumber' on this record model
        """
        self.set_field_value(self.VIRALVECTORPARTPARTNUMBER__FIELD_NAME.field_name, value)

    def get_ViralVectorPartPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViralVectorPartPartNumber' from this record model
        """
        return self.get_field_value(self.VIRALVECTORPARTPARTNUMBER__FIELD_NAME.field_name)

    def set_Volume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Volume' on this record model
        """
        self.set_field_value(self.VOLUME__FIELD_NAME.field_name, value)

    def get_Volume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Volume' from this record model
        """
        return self.get_field_value(self.VOLUME__FIELD_NAME.field_name)

    def set_VolumeUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'VolumeUnits' on this record model
        """
        self.set_field_value(self.VOLUMEUNITS__FIELD_NAME.field_name, value)

    def get_VolumeUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VolumeUnits' from this record model
        """
        return self.get_field_value(self.VOLUMEUNITS__FIELD_NAME.field_name)

    def set_WellId_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellId' on this record model
        """
        self.set_field_value(self.WELLID__FIELD_NAME.field_name, value)

    def get_WellId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellId' from this record model
        """
        return self.get_field_value(self.WELLID__FIELD_NAME.field_name)

    def set_WorkstationId_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkstationId' on this record model
        """
        self.set_field_value(self.WORKSTATIONID__FIELD_NAME.field_name, value)

    def get_WorkstationId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkstationId' from this record model
        """
        return self.get_field_value(self.WORKSTATIONID__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)

    def set_Yield2_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield2' on this record model
        """
        self.set_field_value(self.YIELD2__FIELD_NAME.field_name, value)

    def get_Yield2_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield2' from this record model
        """
        return self.get_field_value(self.YIELD2__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class ELNSampleDetailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ELNSampleDetail
    Data Type Display Name: Sample Detail (Sample Details)
    Fields: OtherSampleId, CreatedBy, DataRecordName, DataTypeId, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SampleId
    Data type to represent the base E-Notebook data type to represent the sample level details.
    """
    DATA_TYPE_NAME: Final[str] = 'ELNSampleDetail'
    DISPLAY_NAME: Final[str] = "Sample Detail"
    PLURAL_DISPLAY_NAME: Final[str] = "Sample Details"
    ANALYTE__FIELD_NAME: Final[WrapperField] = WrapperField("Analyte", FieldType.STRING, display_name="Analyte")
    AVERAGEREADING__FIELD_NAME: Final[WrapperField] = WrapperField("AverageReading", FieldType.DOUBLE, display_name="Average Reading")
    CEDEXREADING1__FIELD_NAME: Final[WrapperField] = WrapperField("CEDEXReading1", FieldType.DOUBLE, display_name="Reading 1")
    CEDEXREADING2__FIELD_NAME: Final[WrapperField] = WrapperField("CEDEXReading2", FieldType.DOUBLE, display_name="Reading 2")
    CEDEXREADING3__FIELD_NAME: Final[WrapperField] = WrapperField("CEDEXReading3", FieldType.DOUBLE, display_name="Reading 3")
    CV__FIELD_NAME: Final[WrapperField] = WrapperField("CV", FieldType.DOUBLE, display_name="CV (mL)")
    CI95BOUNDS__FIELD_NAME: Final[WrapperField] = WrapperField("Ci95Bounds", FieldType.DOUBLE, display_name="CI 95% Bounds")
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.SELECTION, display_name="Column Position")
    COLUMNDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("ColumnDescription", FieldType.STRING, display_name="Column Description")
    COLUMNVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("ColumnVolume", FieldType.DOUBLE, display_name="Column Volume (mL)")
    COMPOUND__FIELD_NAME: Final[WrapperField] = WrapperField("Compound", FieldType.STRING, display_name="Compound")
    CONTROLTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ControlType", FieldType.STRING, display_name="Control Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DNASEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("DNASequence", FieldType.STRING, display_name="DNA Sequence")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPEID__FIELD_NAME: Final[WrapperField] = WrapperField("DataTypeId", FieldType.LONG, display_name="Data Type ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DILUENTTOUSE__FIELD_NAME: Final[WrapperField] = WrapperField("DiluentToUse", FieldType.DOUBLE, display_name="Diluent To Use")
    EDITABLEOTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("EditableOtherSampleId", FieldType.STRING, display_name="Sample Name")
    EXISTINGPLATERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ExistingPlateRecordId", FieldType.LONG, display_name="Existing Plate Record ID")
    FAMCT__FIELD_NAME: Final[WrapperField] = WrapperField("FamCt", FieldType.DOUBLE, display_name="FAM CT")
    HARVESTVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("HarvestVolume", FieldType.DOUBLE, display_name="Harvest Volume (mL)")
    HASHINGBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("HashingBarcode", FieldType.PICKLIST, display_name="Hashing Barcode")
    HIT__FIELD_NAME: Final[WrapperField] = WrapperField("Hit", FieldType.BOOLEAN, display_name="Hit")
    INDEXID__FIELD_NAME: Final[WrapperField] = WrapperField("IndexId", FieldType.STRING, display_name="Index ID")
    INDEXTAG__FIELD_NAME: Final[WrapperField] = WrapperField("IndexTag", FieldType.STRING, display_name="Index Tag")
    INPUTASSIGNMENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("InputAssignmentRecordId", FieldType.LONG, display_name="Input Assignment Record ID")
    ISNEWCONTROL__FIELD_NAME: Final[WrapperField] = WrapperField("IsNewControl", FieldType.BOOLEAN, display_name="Is New Control?")
    LOADDENSITY__FIELD_NAME: Final[WrapperField] = WrapperField("LoadDensity", FieldType.DOUBLE, display_name="Load Density (mg/mL)")
    LOWERCI95__FIELD_NAME: Final[WrapperField] = WrapperField("LowerCi95", FieldType.DOUBLE, display_name="Lower CI 95%")
    MULTIPLEXINSTRUCTIONS__FIELD_NAME: Final[WrapperField] = WrapperField("MultiplexInstructions", FieldType.SELECTION, display_name="Multiplex Instructions")
    NANODROP1__FIELD_NAME: Final[WrapperField] = WrapperField("Nanodrop1", FieldType.DOUBLE, display_name="Nanodrop 1")
    NANODROP2__FIELD_NAME: Final[WrapperField] = WrapperField("Nanodrop2", FieldType.DOUBLE, display_name="Nanodrop 2")
    NANODROP3__FIELD_NAME: Final[WrapperField] = WrapperField("Nanodrop3", FieldType.DOUBLE, display_name="Nanodrop 3")
    NUMBEROFREPLICATES__FIELD_NAME: Final[WrapperField] = WrapperField("NumberOfReplicates", FieldType.LONG, display_name="Number Of Replicates")
    NUMBEROFREPLICATESNOTEDITABLE__FIELD_NAME: Final[WrapperField] = WrapperField("NumberOfReplicatesNotEditable", FieldType.LONG, display_name="Number of Replicates")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    OUTOFRANGE__FIELD_NAME: Final[WrapperField] = WrapperField("OutofRange", FieldType.PICKLIST, display_name="Out of Range")
    PASSFAIL__FIELD_NAME: Final[WrapperField] = WrapperField("PassFail", FieldType.PICKLIST, display_name="Pass Fail")
    PLATEID2__FIELD_NAME: Final[WrapperField] = WrapperField("PlateID2", FieldType.STRING, display_name="Plate ID")
    PLATEID__FIELD_NAME: Final[WrapperField] = WrapperField("PlateId", FieldType.STRING, display_name="Plate ID")
    POSITION__FIELD_NAME: Final[WrapperField] = WrapperField("Position", FieldType.STRING, display_name="Position")
    PROTEINCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("ProteinConcentration", FieldType.DOUBLE, display_name="Protein Concentration (mg/mL)")
    QCSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("QCStatus", FieldType.PICKLIST, display_name="QC Status")
    READING1__FIELD_NAME: Final[WrapperField] = WrapperField("Reading1", FieldType.DOUBLE, display_name="Reading 1")
    READING2__FIELD_NAME: Final[WrapperField] = WrapperField("Reading2", FieldType.DOUBLE, display_name="Reading 2")
    REPROCESSSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("ReprocessStatus", FieldType.PICKLIST, display_name="Status")
    RESIDENCETIME__FIELD_NAME: Final[WrapperField] = WrapperField("ResidenceTime", FieldType.STRING, display_name="Residence Time (minutes)")
    RESINNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ResinName", FieldType.STRING, display_name="Resin Name")
    RESULT__FIELD_NAME: Final[WrapperField] = WrapperField("Result", FieldType.PICKLIST, display_name="Result")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.SELECTION, display_name="Row Position")
    ROXCT__FIELD_NAME: Final[WrapperField] = WrapperField("RoxCt", FieldType.DOUBLE, display_name="ROX CT")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    SAMPLEMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("SampleMean", FieldType.DOUBLE, display_name="Mean")
    SAMPLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SampleName", FieldType.STRING, display_name="Sample Name")
    SAMPLENORMALIZEDMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("SampleNormalizedMean", FieldType.DOUBLE, display_name="Normalized Mean")
    SAMPLESTD__FIELD_NAME: Final[WrapperField] = WrapperField("SampleStd", FieldType.DOUBLE, display_name="Standard Deviation")
    SAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SampleType", FieldType.STRING, display_name="Sample Type")
    SOURCECONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("SourceConcentration", FieldType.DOUBLE, display_name="Source Concentration")
    SOURCEMASS__FIELD_NAME: Final[WrapperField] = WrapperField("SourceMass", FieldType.DOUBLE, display_name="Source Mass")
    SOURCEMASSTOUSE__FIELD_NAME: Final[WrapperField] = WrapperField("SourceMassToUse", FieldType.DOUBLE, display_name="Source Mass To Use")
    SOURCEPLATE__FIELD_NAME: Final[WrapperField] = WrapperField("SourcePlate", FieldType.STRING, display_name="Source Plate")
    SOURCEPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("SourcePosition", FieldType.STRING, display_name="Source Position")
    SOURCEVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("SourceVolume", FieldType.DOUBLE, display_name="Source Volume")
    SOURCEVOLUMETOUSE__FIELD_NAME: Final[WrapperField] = WrapperField("SourceVolumeToUse", FieldType.DOUBLE, display_name="Source Volume To Use")
    STANDARDERROR__FIELD_NAME: Final[WrapperField] = WrapperField("StandardError", FieldType.DOUBLE, display_name="Standard Error")
    STATUSCODE__FIELD_NAME: Final[WrapperField] = WrapperField("StatusCode", FieldType.STRING, display_name="Status Code")
    TARGETCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("TargetConcentration", FieldType.DOUBLE, display_name="Target Concentration")
    TARGETCONCENTRATIONREQUIRED__FIELD_NAME: Final[WrapperField] = WrapperField("TargetConcentrationRequired", FieldType.DOUBLE, display_name="Target Concentration")
    TARGETMASS__FIELD_NAME: Final[WrapperField] = WrapperField("TargetMass", FieldType.DOUBLE, display_name="Target Mass")
    TARGETPLATE__FIELD_NAME: Final[WrapperField] = WrapperField("TargetPlate", FieldType.STRING, display_name="Target Plate")
    TARGETPOOL__FIELD_NAME: Final[WrapperField] = WrapperField("TargetPool", FieldType.STRING, display_name="Target Pool")
    TARGETPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("TargetPosition", FieldType.STRING, display_name="Target Position")
    TARGETTANK__FIELD_NAME: Final[WrapperField] = WrapperField("TargetTank", FieldType.STRING, display_name="Target Tank")
    TARGETVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("TargetVolume", FieldType.DOUBLE, display_name="Target Volume")
    TARGETVOLUMEREQUIRED__FIELD_NAME: Final[WrapperField] = WrapperField("TargetVolumeRequired", FieldType.DOUBLE, display_name="Target Volume")
    TOTALPROTEINVARIABLE__FIELD_NAME: Final[WrapperField] = WrapperField("TotalProteinVariable", FieldType.DOUBLE, display_name="Variable")
    TRANSFORMATIONREAGENT__FIELD_NAME: Final[WrapperField] = WrapperField("TransformationReagent", FieldType.STRING, display_name="Transformation Reagent")
    TUMOR2__FIELD_NAME: Final[WrapperField] = WrapperField("Tumor2", FieldType.DOUBLE, display_name="Tumor %")
    UPPERCI95__FIELD_NAME: Final[WrapperField] = WrapperField("UpperCi95", FieldType.DOUBLE, display_name="Upper CI 95%")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VICCT__FIELD_NAME: Final[WrapperField] = WrapperField("VicCt", FieldType.DOUBLE, display_name="VIC CT")
    WELLLOCATION__FIELD_NAME: Final[WrapperField] = WrapperField("WellLocation", FieldType.STRING, display_name="Well Location")
    ANALYTE2__FIELD_NAME: Final[WrapperField] = WrapperField("analyte2", FieldType.STRING, display_name="analyte")
    AVGREADINGS__FIELD_NAME: Final[WrapperField] = WrapperField("avgreadings", FieldType.DOUBLE, display_name="avg readings")
    READING__FIELD_NAME: Final[WrapperField] = WrapperField("reading", FieldType.DOUBLE, display_name="reading")
    READING22__FIELD_NAME: Final[WrapperField] = WrapperField("reading22", FieldType.DOUBLE, display_name="reading 2")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Analyte_field(self, value: Optional[str]):
        """
        Set data field with field name 'Analyte' on this record model
        """
        self.set_field_value(self.ANALYTE__FIELD_NAME.field_name, value)

    def get_Analyte_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Analyte' from this record model
        """
        return self.get_field_value(self.ANALYTE__FIELD_NAME.field_name)

    def set_AverageReading_field(self, value: Optional[float]):
        """
        Set data field with field name 'AverageReading' on this record model
        """
        self.set_field_value(self.AVERAGEREADING__FIELD_NAME.field_name, value)

    def get_AverageReading_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AverageReading' from this record model
        """
        return self.get_field_value(self.AVERAGEREADING__FIELD_NAME.field_name)

    def set_CEDEXReading1_field(self, value: Optional[float]):
        """
        Set data field with field name 'CEDEXReading1' on this record model
        """
        self.set_field_value(self.CEDEXREADING1__FIELD_NAME.field_name, value)

    def get_CEDEXReading1_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CEDEXReading1' from this record model
        """
        return self.get_field_value(self.CEDEXREADING1__FIELD_NAME.field_name)

    def set_CEDEXReading2_field(self, value: Optional[float]):
        """
        Set data field with field name 'CEDEXReading2' on this record model
        """
        self.set_field_value(self.CEDEXREADING2__FIELD_NAME.field_name, value)

    def get_CEDEXReading2_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CEDEXReading2' from this record model
        """
        return self.get_field_value(self.CEDEXREADING2__FIELD_NAME.field_name)

    def set_CEDEXReading3_field(self, value: Optional[float]):
        """
        Set data field with field name 'CEDEXReading3' on this record model
        """
        self.set_field_value(self.CEDEXREADING3__FIELD_NAME.field_name, value)

    def get_CEDEXReading3_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CEDEXReading3' from this record model
        """
        return self.get_field_value(self.CEDEXREADING3__FIELD_NAME.field_name)

    def set_CV_field(self, value: Optional[float]):
        """
        Set data field with field name 'CV' on this record model
        """
        self.set_field_value(self.CV__FIELD_NAME.field_name, value)

    def get_CV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CV' from this record model
        """
        return self.get_field_value(self.CV__FIELD_NAME.field_name)

    def set_Ci95Bounds_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ci95Bounds' on this record model
        """
        self.set_field_value(self.CI95BOUNDS__FIELD_NAME.field_name, value)

    def get_Ci95Bounds_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ci95Bounds' from this record model
        """
        return self.get_field_value(self.CI95BOUNDS__FIELD_NAME.field_name)

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def set_ColumnDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColumnDescription' on this record model
        """
        self.set_field_value(self.COLUMNDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ColumnDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColumnDescription' from this record model
        """
        return self.get_field_value(self.COLUMNDESCRIPTION__FIELD_NAME.field_name)

    def set_ColumnVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'ColumnVolume' on this record model
        """
        self.set_field_value(self.COLUMNVOLUME__FIELD_NAME.field_name, value)

    def get_ColumnVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ColumnVolume' from this record model
        """
        return self.get_field_value(self.COLUMNVOLUME__FIELD_NAME.field_name)

    def set_Compound_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound' on this record model
        """
        self.set_field_value(self.COMPOUND__FIELD_NAME.field_name, value)

    def get_Compound_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound' from this record model
        """
        return self.get_field_value(self.COMPOUND__FIELD_NAME.field_name)

    def set_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ControlType' on this record model
        """
        self.set_field_value(self.CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ControlType' from this record model
        """
        return self.get_field_value(self.CONTROLTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DNASequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'DNASequence' on this record model
        """
        self.set_field_value(self.DNASEQUENCE__FIELD_NAME.field_name, value)

    def get_DNASequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DNASequence' from this record model
        """
        return self.get_field_value(self.DNASEQUENCE__FIELD_NAME.field_name)

    def set_DataTypeId_field(self, value: Optional[int]):
        """
        Set data field with field name 'DataTypeId' on this record model
        """
        self.set_field_value(self.DATATYPEID__FIELD_NAME.field_name, value)

    def get_DataTypeId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DataTypeId' from this record model
        """
        return self.get_field_value(self.DATATYPEID__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DiluentToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'DiluentToUse' on this record model
        """
        self.set_field_value(self.DILUENTTOUSE__FIELD_NAME.field_name, value)

    def get_DiluentToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DiluentToUse' from this record model
        """
        return self.get_field_value(self.DILUENTTOUSE__FIELD_NAME.field_name)

    def set_EditableOtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'EditableOtherSampleId' on this record model
        """
        self.set_field_value(self.EDITABLEOTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_EditableOtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EditableOtherSampleId' from this record model
        """
        return self.get_field_value(self.EDITABLEOTHERSAMPLEID__FIELD_NAME.field_name)

    def set_ExistingPlateRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExistingPlateRecordId' on this record model
        """
        self.set_field_value(self.EXISTINGPLATERECORDID__FIELD_NAME.field_name, value)

    def get_ExistingPlateRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExistingPlateRecordId' from this record model
        """
        return self.get_field_value(self.EXISTINGPLATERECORDID__FIELD_NAME.field_name)

    def set_FamCt_field(self, value: Optional[float]):
        """
        Set data field with field name 'FamCt' on this record model
        """
        self.set_field_value(self.FAMCT__FIELD_NAME.field_name, value)

    def get_FamCt_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FamCt' from this record model
        """
        return self.get_field_value(self.FAMCT__FIELD_NAME.field_name)

    def set_HarvestVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'HarvestVolume' on this record model
        """
        self.set_field_value(self.HARVESTVOLUME__FIELD_NAME.field_name, value)

    def get_HarvestVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'HarvestVolume' from this record model
        """
        return self.get_field_value(self.HARVESTVOLUME__FIELD_NAME.field_name)

    def set_HashingBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'HashingBarcode' on this record model
        """
        self.set_field_value(self.HASHINGBARCODE__FIELD_NAME.field_name, value)

    def get_HashingBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HashingBarcode' from this record model
        """
        return self.get_field_value(self.HASHINGBARCODE__FIELD_NAME.field_name)

    def set_Hit_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Hit' on this record model
        """
        self.set_field_value(self.HIT__FIELD_NAME.field_name, value)

    def get_Hit_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Hit' from this record model
        """
        return self.get_field_value(self.HIT__FIELD_NAME.field_name)

    def set_IndexId_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexId' on this record model
        """
        self.set_field_value(self.INDEXID__FIELD_NAME.field_name, value)

    def get_IndexId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexId' from this record model
        """
        return self.get_field_value(self.INDEXID__FIELD_NAME.field_name)

    def set_IndexTag_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexTag' on this record model
        """
        self.set_field_value(self.INDEXTAG__FIELD_NAME.field_name, value)

    def get_IndexTag_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexTag' from this record model
        """
        return self.get_field_value(self.INDEXTAG__FIELD_NAME.field_name)

    def set_InputAssignmentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'InputAssignmentRecordId' on this record model
        """
        self.set_field_value(self.INPUTASSIGNMENTRECORDID__FIELD_NAME.field_name, value)

    def get_InputAssignmentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'InputAssignmentRecordId' from this record model
        """
        return self.get_field_value(self.INPUTASSIGNMENTRECORDID__FIELD_NAME.field_name)

    def set_IsNewControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsNewControl' on this record model
        """
        self.set_field_value(self.ISNEWCONTROL__FIELD_NAME.field_name, value)

    def get_IsNewControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsNewControl' from this record model
        """
        return self.get_field_value(self.ISNEWCONTROL__FIELD_NAME.field_name)

    def set_LoadDensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'LoadDensity' on this record model
        """
        self.set_field_value(self.LOADDENSITY__FIELD_NAME.field_name, value)

    def get_LoadDensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LoadDensity' from this record model
        """
        return self.get_field_value(self.LOADDENSITY__FIELD_NAME.field_name)

    def set_LowerCi95_field(self, value: Optional[float]):
        """
        Set data field with field name 'LowerCi95' on this record model
        """
        self.set_field_value(self.LOWERCI95__FIELD_NAME.field_name, value)

    def get_LowerCi95_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LowerCi95' from this record model
        """
        return self.get_field_value(self.LOWERCI95__FIELD_NAME.field_name)

    def set_MultiplexInstructions_field(self, value: Optional[str]):
        """
        Set data field with field name 'MultiplexInstructions' on this record model
        """
        self.set_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name, value)

    def get_MultiplexInstructions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MultiplexInstructions' from this record model
        """
        return self.get_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name)

    def set_Nanodrop1_field(self, value: Optional[float]):
        """
        Set data field with field name 'Nanodrop1' on this record model
        """
        self.set_field_value(self.NANODROP1__FIELD_NAME.field_name, value)

    def get_Nanodrop1_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Nanodrop1' from this record model
        """
        return self.get_field_value(self.NANODROP1__FIELD_NAME.field_name)

    def set_Nanodrop2_field(self, value: Optional[float]):
        """
        Set data field with field name 'Nanodrop2' on this record model
        """
        self.set_field_value(self.NANODROP2__FIELD_NAME.field_name, value)

    def get_Nanodrop2_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Nanodrop2' from this record model
        """
        return self.get_field_value(self.NANODROP2__FIELD_NAME.field_name)

    def set_Nanodrop3_field(self, value: Optional[float]):
        """
        Set data field with field name 'Nanodrop3' on this record model
        """
        self.set_field_value(self.NANODROP3__FIELD_NAME.field_name, value)

    def get_Nanodrop3_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Nanodrop3' from this record model
        """
        return self.get_field_value(self.NANODROP3__FIELD_NAME.field_name)

    def set_NumberOfReplicates_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfReplicates' on this record model
        """
        self.set_field_value(self.NUMBEROFREPLICATES__FIELD_NAME.field_name, value)

    def get_NumberOfReplicates_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfReplicates' from this record model
        """
        return self.get_field_value(self.NUMBEROFREPLICATES__FIELD_NAME.field_name)

    def set_NumberOfReplicatesNotEditable_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfReplicatesNotEditable' on this record model
        """
        self.set_field_value(self.NUMBEROFREPLICATESNOTEDITABLE__FIELD_NAME.field_name, value)

    def get_NumberOfReplicatesNotEditable_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfReplicatesNotEditable' from this record model
        """
        return self.get_field_value(self.NUMBEROFREPLICATESNOTEDITABLE__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_OutofRange_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutofRange' on this record model
        """
        self.set_field_value(self.OUTOFRANGE__FIELD_NAME.field_name, value)

    def get_OutofRange_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutofRange' from this record model
        """
        return self.get_field_value(self.OUTOFRANGE__FIELD_NAME.field_name)

    def set_PassFail_field(self, value: Optional[str]):
        """
        Set data field with field name 'PassFail' on this record model
        """
        self.set_field_value(self.PASSFAIL__FIELD_NAME.field_name, value)

    def get_PassFail_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PassFail' from this record model
        """
        return self.get_field_value(self.PASSFAIL__FIELD_NAME.field_name)

    def set_PlateID2_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateID2' on this record model
        """
        self.set_field_value(self.PLATEID2__FIELD_NAME.field_name, value)

    def get_PlateID2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateID2' from this record model
        """
        return self.get_field_value(self.PLATEID2__FIELD_NAME.field_name)

    def set_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateId' on this record model
        """
        self.set_field_value(self.PLATEID__FIELD_NAME.field_name, value)

    def get_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateId' from this record model
        """
        return self.get_field_value(self.PLATEID__FIELD_NAME.field_name)

    def set_Position_field(self, value: Optional[str]):
        """
        Set data field with field name 'Position' on this record model
        """
        self.set_field_value(self.POSITION__FIELD_NAME.field_name, value)

    def get_Position_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Position' from this record model
        """
        return self.get_field_value(self.POSITION__FIELD_NAME.field_name)

    def set_ProteinConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'ProteinConcentration' on this record model
        """
        self.set_field_value(self.PROTEINCONCENTRATION__FIELD_NAME.field_name, value)

    def get_ProteinConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ProteinConcentration' from this record model
        """
        return self.get_field_value(self.PROTEINCONCENTRATION__FIELD_NAME.field_name)

    def set_QCStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'QCStatus' on this record model
        """
        self.set_field_value(self.QCSTATUS__FIELD_NAME.field_name, value)

    def get_QCStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QCStatus' from this record model
        """
        return self.get_field_value(self.QCSTATUS__FIELD_NAME.field_name)

    def set_Reading1_field(self, value: Optional[float]):
        """
        Set data field with field name 'Reading1' on this record model
        """
        self.set_field_value(self.READING1__FIELD_NAME.field_name, value)

    def get_Reading1_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Reading1' from this record model
        """
        return self.get_field_value(self.READING1__FIELD_NAME.field_name)

    def set_Reading2_field(self, value: Optional[float]):
        """
        Set data field with field name 'Reading2' on this record model
        """
        self.set_field_value(self.READING2__FIELD_NAME.field_name, value)

    def get_Reading2_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Reading2' from this record model
        """
        return self.get_field_value(self.READING2__FIELD_NAME.field_name)

    def set_ReprocessStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReprocessStatus' on this record model
        """
        self.set_field_value(self.REPROCESSSTATUS__FIELD_NAME.field_name, value)

    def get_ReprocessStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReprocessStatus' from this record model
        """
        return self.get_field_value(self.REPROCESSSTATUS__FIELD_NAME.field_name)

    def set_ResidenceTime_field(self, value: Optional[str]):
        """
        Set data field with field name 'ResidenceTime' on this record model
        """
        self.set_field_value(self.RESIDENCETIME__FIELD_NAME.field_name, value)

    def get_ResidenceTime_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ResidenceTime' from this record model
        """
        return self.get_field_value(self.RESIDENCETIME__FIELD_NAME.field_name)

    def set_ResinName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ResinName' on this record model
        """
        self.set_field_value(self.RESINNAME__FIELD_NAME.field_name, value)

    def get_ResinName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ResinName' from this record model
        """
        return self.get_field_value(self.RESINNAME__FIELD_NAME.field_name)

    def set_Result_field(self, value: Optional[str]):
        """
        Set data field with field name 'Result' on this record model
        """
        self.set_field_value(self.RESULT__FIELD_NAME.field_name, value)

    def get_Result_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Result' from this record model
        """
        return self.get_field_value(self.RESULT__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_RoxCt_field(self, value: Optional[float]):
        """
        Set data field with field name 'RoxCt' on this record model
        """
        self.set_field_value(self.ROXCT__FIELD_NAME.field_name, value)

    def get_RoxCt_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RoxCt' from this record model
        """
        return self.get_field_value(self.ROXCT__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SampleMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleMean' on this record model
        """
        self.set_field_value(self.SAMPLEMEAN__FIELD_NAME.field_name, value)

    def get_SampleMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleMean' from this record model
        """
        return self.get_field_value(self.SAMPLEMEAN__FIELD_NAME.field_name)

    def set_SampleName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleName' on this record model
        """
        self.set_field_value(self.SAMPLENAME__FIELD_NAME.field_name, value)

    def get_SampleName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleName' from this record model
        """
        return self.get_field_value(self.SAMPLENAME__FIELD_NAME.field_name)

    def set_SampleNormalizedMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleNormalizedMean' on this record model
        """
        self.set_field_value(self.SAMPLENORMALIZEDMEAN__FIELD_NAME.field_name, value)

    def get_SampleNormalizedMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleNormalizedMean' from this record model
        """
        return self.get_field_value(self.SAMPLENORMALIZEDMEAN__FIELD_NAME.field_name)

    def set_SampleStd_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleStd' on this record model
        """
        self.set_field_value(self.SAMPLESTD__FIELD_NAME.field_name, value)

    def get_SampleStd_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleStd' from this record model
        """
        return self.get_field_value(self.SAMPLESTD__FIELD_NAME.field_name)

    def set_SampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleType' on this record model
        """
        self.set_field_value(self.SAMPLETYPE__FIELD_NAME.field_name, value)

    def get_SampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleType' from this record model
        """
        return self.get_field_value(self.SAMPLETYPE__FIELD_NAME.field_name)

    def set_SourceConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SourceConcentration' on this record model
        """
        self.set_field_value(self.SOURCECONCENTRATION__FIELD_NAME.field_name, value)

    def get_SourceConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SourceConcentration' from this record model
        """
        return self.get_field_value(self.SOURCECONCENTRATION__FIELD_NAME.field_name)

    def set_SourceMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'SourceMass' on this record model
        """
        self.set_field_value(self.SOURCEMASS__FIELD_NAME.field_name, value)

    def get_SourceMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SourceMass' from this record model
        """
        return self.get_field_value(self.SOURCEMASS__FIELD_NAME.field_name)

    def set_SourceMassToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'SourceMassToUse' on this record model
        """
        self.set_field_value(self.SOURCEMASSTOUSE__FIELD_NAME.field_name, value)

    def get_SourceMassToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SourceMassToUse' from this record model
        """
        return self.get_field_value(self.SOURCEMASSTOUSE__FIELD_NAME.field_name)

    def set_SourcePlate_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourcePlate' on this record model
        """
        self.set_field_value(self.SOURCEPLATE__FIELD_NAME.field_name, value)

    def get_SourcePlate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourcePlate' from this record model
        """
        return self.get_field_value(self.SOURCEPLATE__FIELD_NAME.field_name)

    def set_SourcePosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourcePosition' on this record model
        """
        self.set_field_value(self.SOURCEPOSITION__FIELD_NAME.field_name, value)

    def get_SourcePosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourcePosition' from this record model
        """
        return self.get_field_value(self.SOURCEPOSITION__FIELD_NAME.field_name)

    def set_SourceVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'SourceVolume' on this record model
        """
        self.set_field_value(self.SOURCEVOLUME__FIELD_NAME.field_name, value)

    def get_SourceVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SourceVolume' from this record model
        """
        return self.get_field_value(self.SOURCEVOLUME__FIELD_NAME.field_name)

    def set_SourceVolumeToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'SourceVolumeToUse' on this record model
        """
        self.set_field_value(self.SOURCEVOLUMETOUSE__FIELD_NAME.field_name, value)

    def get_SourceVolumeToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SourceVolumeToUse' from this record model
        """
        return self.get_field_value(self.SOURCEVOLUMETOUSE__FIELD_NAME.field_name)

    def set_StandardError_field(self, value: Optional[float]):
        """
        Set data field with field name 'StandardError' on this record model
        """
        self.set_field_value(self.STANDARDERROR__FIELD_NAME.field_name, value)

    def get_StandardError_field(self) -> Optional[float]:
        """
        Get data field value with field name 'StandardError' from this record model
        """
        return self.get_field_value(self.STANDARDERROR__FIELD_NAME.field_name)

    def set_StatusCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'StatusCode' on this record model
        """
        self.set_field_value(self.STATUSCODE__FIELD_NAME.field_name, value)

    def get_StatusCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StatusCode' from this record model
        """
        return self.get_field_value(self.STATUSCODE__FIELD_NAME.field_name)

    def set_TargetConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetConcentration' on this record model
        """
        self.set_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name, value)

    def get_TargetConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetConcentration' from this record model
        """
        return self.get_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name)

    def set_TargetConcentrationRequired_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetConcentrationRequired' on this record model
        """
        self.set_field_value(self.TARGETCONCENTRATIONREQUIRED__FIELD_NAME.field_name, value)

    def get_TargetConcentrationRequired_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetConcentrationRequired' from this record model
        """
        return self.get_field_value(self.TARGETCONCENTRATIONREQUIRED__FIELD_NAME.field_name)

    def set_TargetMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetMass' on this record model
        """
        self.set_field_value(self.TARGETMASS__FIELD_NAME.field_name, value)

    def get_TargetMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetMass' from this record model
        """
        return self.get_field_value(self.TARGETMASS__FIELD_NAME.field_name)

    def set_TargetPlate_field(self, value: Optional[str]):
        """
        Set data field with field name 'TargetPlate' on this record model
        """
        self.set_field_value(self.TARGETPLATE__FIELD_NAME.field_name, value)

    def get_TargetPlate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TargetPlate' from this record model
        """
        return self.get_field_value(self.TARGETPLATE__FIELD_NAME.field_name)

    def set_TargetPool_field(self, value: Optional[str]):
        """
        Set data field with field name 'TargetPool' on this record model
        """
        self.set_field_value(self.TARGETPOOL__FIELD_NAME.field_name, value)

    def get_TargetPool_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TargetPool' from this record model
        """
        return self.get_field_value(self.TARGETPOOL__FIELD_NAME.field_name)

    def set_TargetPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'TargetPosition' on this record model
        """
        self.set_field_value(self.TARGETPOSITION__FIELD_NAME.field_name, value)

    def get_TargetPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TargetPosition' from this record model
        """
        return self.get_field_value(self.TARGETPOSITION__FIELD_NAME.field_name)

    def set_TargetTank_field(self, value: Optional[str]):
        """
        Set data field with field name 'TargetTank' on this record model
        """
        self.set_field_value(self.TARGETTANK__FIELD_NAME.field_name, value)

    def get_TargetTank_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TargetTank' from this record model
        """
        return self.get_field_value(self.TARGETTANK__FIELD_NAME.field_name)

    def set_TargetVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetVolume' on this record model
        """
        self.set_field_value(self.TARGETVOLUME__FIELD_NAME.field_name, value)

    def get_TargetVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetVolume' from this record model
        """
        return self.get_field_value(self.TARGETVOLUME__FIELD_NAME.field_name)

    def set_TargetVolumeRequired_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetVolumeRequired' on this record model
        """
        self.set_field_value(self.TARGETVOLUMEREQUIRED__FIELD_NAME.field_name, value)

    def get_TargetVolumeRequired_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetVolumeRequired' from this record model
        """
        return self.get_field_value(self.TARGETVOLUMEREQUIRED__FIELD_NAME.field_name)

    def set_TotalProteinVariable_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalProteinVariable' on this record model
        """
        self.set_field_value(self.TOTALPROTEINVARIABLE__FIELD_NAME.field_name, value)

    def get_TotalProteinVariable_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalProteinVariable' from this record model
        """
        return self.get_field_value(self.TOTALPROTEINVARIABLE__FIELD_NAME.field_name)

    def set_TransformationReagent_field(self, value: Optional[str]):
        """
        Set data field with field name 'TransformationReagent' on this record model
        """
        self.set_field_value(self.TRANSFORMATIONREAGENT__FIELD_NAME.field_name, value)

    def get_TransformationReagent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TransformationReagent' from this record model
        """
        return self.get_field_value(self.TRANSFORMATIONREAGENT__FIELD_NAME.field_name)

    def set_Tumor2_field(self, value: Optional[float]):
        """
        Set data field with field name 'Tumor2' on this record model
        """
        self.set_field_value(self.TUMOR2__FIELD_NAME.field_name, value)

    def get_Tumor2_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Tumor2' from this record model
        """
        return self.get_field_value(self.TUMOR2__FIELD_NAME.field_name)

    def set_UpperCi95_field(self, value: Optional[float]):
        """
        Set data field with field name 'UpperCi95' on this record model
        """
        self.set_field_value(self.UPPERCI95__FIELD_NAME.field_name, value)

    def get_UpperCi95_field(self) -> Optional[float]:
        """
        Get data field value with field name 'UpperCi95' from this record model
        """
        return self.get_field_value(self.UPPERCI95__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_VicCt_field(self, value: Optional[float]):
        """
        Set data field with field name 'VicCt' on this record model
        """
        self.set_field_value(self.VICCT__FIELD_NAME.field_name, value)

    def get_VicCt_field(self) -> Optional[float]:
        """
        Get data field value with field name 'VicCt' from this record model
        """
        return self.get_field_value(self.VICCT__FIELD_NAME.field_name)

    def set_WellLocation_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellLocation' on this record model
        """
        self.set_field_value(self.WELLLOCATION__FIELD_NAME.field_name, value)

    def get_WellLocation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellLocation' from this record model
        """
        return self.get_field_value(self.WELLLOCATION__FIELD_NAME.field_name)

    def set_analyte2_field(self, value: Optional[str]):
        """
        Set data field with field name 'analyte2' on this record model
        """
        self.set_field_value(self.ANALYTE2__FIELD_NAME.field_name, value)

    def get_analyte2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'analyte2' from this record model
        """
        return self.get_field_value(self.ANALYTE2__FIELD_NAME.field_name)

    def set_avgreadings_field(self, value: Optional[float]):
        """
        Set data field with field name 'avgreadings' on this record model
        """
        self.set_field_value(self.AVGREADINGS__FIELD_NAME.field_name, value)

    def get_avgreadings_field(self) -> Optional[float]:
        """
        Get data field value with field name 'avgreadings' from this record model
        """
        return self.get_field_value(self.AVGREADINGS__FIELD_NAME.field_name)

    def set_reading_field(self, value: Optional[float]):
        """
        Set data field with field name 'reading' on this record model
        """
        self.set_field_value(self.READING__FIELD_NAME.field_name, value)

    def get_reading_field(self) -> Optional[float]:
        """
        Get data field value with field name 'reading' from this record model
        """
        return self.get_field_value(self.READING__FIELD_NAME.field_name)

    def set_reading22_field(self, value: Optional[float]):
        """
        Set data field with field name 'reading22' on this record model
        """
        self.set_field_value(self.READING22__FIELD_NAME.field_name, value)

    def get_reading22_field(self) -> Optional[float]:
        """
        Get data field value with field name 'reading22' from this record model
        """
        return self.get_field_value(self.READING22__FIELD_NAME.field_name)


class ELNTextEntryDetailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ELNTextEntryDetail
    Data Type Display Name: ELN Text Entry Detail (ELN Text Entry Details)
    Fields: FilePath, CreatedBy, VeloxCurrentVersion, DataRecordName, VeloxLastModifiedDate, TextField, VeloxLastModifiedBy, DateCreated
    This data type is used to store the latest PDF file that has been generated from a given notebook.
    """
    DATA_TYPE_NAME: Final[str] = 'ELNTextEntryDetail'
    DISPLAY_NAME: Final[str] = "ELN Text Entry Detail"
    PLURAL_DISPLAY_NAME: Final[str] = "ELN Text Entry Details"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    TEXTFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("TextField", FieldType.STRING, display_name="Text Field")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_TextField_field(self, value: Optional[str]):
        """
        Set data field with field name 'TextField' on this record model
        """
        self.set_field_value(self.TEXTFIELD__FIELD_NAME.field_name, value)

    def get_TextField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TextField' from this record model
        """
        return self.get_field_value(self.TEXTFIELD__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class EmailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Email
    Data Type Display Name: Email (Emails)
    Fields: CreatedBy, CarbonCopy, SentDate, DateCreated, MultiParentLink230, Subject, SentFrom, DataRecordName, AddressedTo, VeloxLastModifiedDate, VeloxLastModifiedBy, Body
    """
    DATA_TYPE_NAME: Final[str] = 'Email'
    DISPLAY_NAME: Final[str] = "Email"
    PLURAL_DISPLAY_NAME: Final[str] = "Emails"
    ADDRESSEDTO__FIELD_NAME: Final[WrapperField] = WrapperField("AddressedTo", FieldType.STRING, display_name="To")
    BODY__FIELD_NAME: Final[WrapperField] = WrapperField("Body", FieldType.STRING, display_name="Body")
    CARBONCOPY__FIELD_NAME: Final[WrapperField] = WrapperField("CarbonCopy", FieldType.STRING, display_name="CC")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MULTIPARENTLINK230__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink230", FieldType.MULTIPARENTLINK, display_name="Linked Study")
    SENTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SentDate", FieldType.DATE, display_name="Date Sent")
    SENTFROM__FIELD_NAME: Final[WrapperField] = WrapperField("SentFrom", FieldType.STRING, display_name="From")
    SUBJECT__FIELD_NAME: Final[WrapperField] = WrapperField("Subject", FieldType.STRING, display_name="Subject")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AddressedTo_field(self, value: Optional[str]):
        """
        Set data field with field name 'AddressedTo' on this record model
        """
        self.set_field_value(self.ADDRESSEDTO__FIELD_NAME.field_name, value)

    def get_AddressedTo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AddressedTo' from this record model
        """
        return self.get_field_value(self.ADDRESSEDTO__FIELD_NAME.field_name)

    def set_Body_field(self, value: Optional[str]):
        """
        Set data field with field name 'Body' on this record model
        """
        self.set_field_value(self.BODY__FIELD_NAME.field_name, value)

    def get_Body_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Body' from this record model
        """
        return self.get_field_value(self.BODY__FIELD_NAME.field_name)

    def set_CarbonCopy_field(self, value: Optional[str]):
        """
        Set data field with field name 'CarbonCopy' on this record model
        """
        self.set_field_value(self.CARBONCOPY__FIELD_NAME.field_name, value)

    def get_CarbonCopy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CarbonCopy' from this record model
        """
        return self.get_field_value(self.CARBONCOPY__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SentDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SentDate' on this record model
        """
        self.set_field_value(self.SENTDATE__FIELD_NAME.field_name, value)

    def get_SentDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SentDate' from this record model
        """
        return self.get_field_value(self.SENTDATE__FIELD_NAME.field_name)

    def set_SentFrom_field(self, value: Optional[str]):
        """
        Set data field with field name 'SentFrom' on this record model
        """
        self.set_field_value(self.SENTFROM__FIELD_NAME.field_name, value)

    def get_SentFrom_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SentFrom' from this record model
        """
        return self.get_field_value(self.SENTFROM__FIELD_NAME.field_name)

    def set_Subject_field(self, value: Optional[str]):
        """
        Set data field with field name 'Subject' on this record model
        """
        self.set_field_value(self.SUBJECT__FIELD_NAME.field_name, value)

    def get_Subject_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Subject' from this record model
        """
        return self.get_field_value(self.SUBJECT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class EnbAttachmentThumbnailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type EnbAttachmentThumbnail
    Data Type Display Name: E-Notebook Attachment Thumbnail (E-Notebook Attachment Thumbnails)
    Fields: ResolutionWidth, DateCreated, SinglePage, PageNumber, VeloxLastModifiedBy, FilePath, VeloxCurrentVersion, CreatedBy, ResolutionHeight, DataRecordName, VeloxLastModifiedDate
    An attachment that stores a cached thumbnail of a page from a document attached to an Experiment entry.
    """
    DATA_TYPE_NAME: Final[str] = 'EnbAttachmentThumbnail'
    DISPLAY_NAME: Final[str] = "E-Notebook Attachment Thumbnail"
    PLURAL_DISPLAY_NAME: Final[str] = "E-Notebook Attachment Thumbnails"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    PAGENUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PageNumber", FieldType.INTEGER, display_name="Page Number")
    RESOLUTIONHEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("ResolutionHeight", FieldType.INTEGER, display_name="Resolution Height")
    RESOLUTIONWIDTH__FIELD_NAME: Final[WrapperField] = WrapperField("ResolutionWidth", FieldType.INTEGER, display_name="Resolution Width")
    SINGLEPAGE__FIELD_NAME: Final[WrapperField] = WrapperField("SinglePage", FieldType.BOOLEAN, display_name="Single Page")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_PageNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'PageNumber' on this record model
        """
        self.set_field_value(self.PAGENUMBER__FIELD_NAME.field_name, value)

    def get_PageNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PageNumber' from this record model
        """
        return self.get_field_value(self.PAGENUMBER__FIELD_NAME.field_name)

    def set_ResolutionHeight_field(self, value: Optional[int]):
        """
        Set data field with field name 'ResolutionHeight' on this record model
        """
        self.set_field_value(self.RESOLUTIONHEIGHT__FIELD_NAME.field_name, value)

    def get_ResolutionHeight_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ResolutionHeight' from this record model
        """
        return self.get_field_value(self.RESOLUTIONHEIGHT__FIELD_NAME.field_name)

    def set_ResolutionWidth_field(self, value: Optional[int]):
        """
        Set data field with field name 'ResolutionWidth' on this record model
        """
        self.set_field_value(self.RESOLUTIONWIDTH__FIELD_NAME.field_name, value)

    def get_ResolutionWidth_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ResolutionWidth' from this record model
        """
        return self.get_field_value(self.RESOLUTIONWIDTH__FIELD_NAME.field_name)

    def set_SinglePage_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SinglePage' on this record model
        """
        self.set_field_value(self.SINGLEPAGE__FIELD_NAME.field_name, value)

    def get_SinglePage_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SinglePage' from this record model
        """
        return self.get_field_value(self.SINGLEPAGE__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class EnzymeModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Enzyme
    Data Type Display Name: Enzyme (Enzymes)
    Fields: CreatedBy, PartNumber, ConsumableType, DateCreated, Isoschizomers, Vendor, Neoschizomers, DataRecordName, ExpirationDate, EnzymeType, VeloxLastModifiedDate, VeloxLastModifiedBy, ConsumableName, DateOfPurchase, LotNumber, CuttingPattern
    """
    DATA_TYPE_NAME: Final[str] = 'Enzyme'
    DISPLAY_NAME: Final[str] = "Enzyme"
    PLURAL_DISPLAY_NAME: Final[str] = "Enzymes"
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Enzyme ID")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Enzyme Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CUTTINGPATTERN__FIELD_NAME: Final[WrapperField] = WrapperField("CuttingPattern", FieldType.STRING, display_name="Cutting Pattern")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DATEOFPURCHASE__FIELD_NAME: Final[WrapperField] = WrapperField("DateOfPurchase", FieldType.DATE, display_name="Date Of Purchase")
    ENZYMETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("EnzymeType", FieldType.PICKLIST, display_name="Enzyme Type")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    ISOSCHIZOMERS__FIELD_NAME: Final[WrapperField] = WrapperField("Isoschizomers", FieldType.STRING, display_name="Isoschizomers")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    NEOSCHIZOMERS__FIELD_NAME: Final[WrapperField] = WrapperField("Neoschizomers", FieldType.STRING, display_name="Neoschizomers")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.SELECTION, display_name="Vendor")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CuttingPattern_field(self, value: Optional[str]):
        """
        Set data field with field name 'CuttingPattern' on this record model
        """
        self.set_field_value(self.CUTTINGPATTERN__FIELD_NAME.field_name, value)

    def get_CuttingPattern_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CuttingPattern' from this record model
        """
        return self.get_field_value(self.CUTTINGPATTERN__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateOfPurchase_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateOfPurchase' on this record model
        """
        self.set_field_value(self.DATEOFPURCHASE__FIELD_NAME.field_name, value)

    def get_DateOfPurchase_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateOfPurchase' from this record model
        """
        return self.get_field_value(self.DATEOFPURCHASE__FIELD_NAME.field_name)

    def set_EnzymeType_field(self, value: Optional[str]):
        """
        Set data field with field name 'EnzymeType' on this record model
        """
        self.set_field_value(self.ENZYMETYPE__FIELD_NAME.field_name, value)

    def get_EnzymeType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EnzymeType' from this record model
        """
        return self.get_field_value(self.ENZYMETYPE__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_Isoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Isoschizomers' on this record model
        """
        self.set_field_value(self.ISOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_Isoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Isoschizomers' from this record model
        """
        return self.get_field_value(self.ISOSCHIZOMERS__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_Neoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Neoschizomers' on this record model
        """
        self.set_field_value(self.NEOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_Neoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Neoschizomers' from this record model
        """
        return self.get_field_value(self.NEOSCHIZOMERS__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class EnzymePartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type EnzymePart
    Data Type Display Name: Enzyme Part (Enzyme Parts)
    Fields: RestrictionEnzymePart.DateCreated, RecognitionSequence, PartNumber, ConsumableType, RestrictionEnzymePart.CutPos1s, RestrictionEnzymePart.RecognitionSequence, DateCreated, RestrictionEnzymePart.NonDeg, RestrictionEnzymePart.VeloxLastModifiedDate, QuantityPerItem, ReactionBuffer, Neoschizomers, ReorderLevelQuantity, RestrictionEnzymePart.CutPos2a, RestrictionEnzymePart.DataRecordName, VeloxLastModifiedBy, IsDefault, RestrictionEnzymePart.VeloxLastModifiedBy, RestrictionEnzymePart.Neoschizomers, CreatedBy, RestrictionEnzymePart.CutPos2s, RestrictionEnzymePart.Isoschizomers, Isoschizomers, Vendor, QuantityOnHand, Units, RestrictionEnzymePart.RelatedRecord115, DataRecordName, EnzymeType, RestrictionEnzymePart.CutPos1a, IsGoldenGate, VeloxLastModifiedDate, RestrictionEnzymePart.CreatedBy, ConsumableName, RestrictionEnzymePart.RecordId, RestrictionEnzymePart.SixPlus
    """
    DATA_TYPE_NAME: Final[str] = 'EnzymePart'
    DISPLAY_NAME: Final[str] = "Enzyme Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Enzyme Parts"
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.AUTO_ACCESSION, display_name="Enzyme ID")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Enzyme Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ENZYMETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("EnzymeType", FieldType.PICKLIST, display_name="Enzyme Type")
    ISDEFAULT__FIELD_NAME: Final[WrapperField] = WrapperField("IsDefault", FieldType.BOOLEAN, display_name="Is Default")
    ISGOLDENGATE__FIELD_NAME: Final[WrapperField] = WrapperField("IsGoldenGate", FieldType.BOOLEAN, display_name="Is Golden Gate")
    ISOSCHIZOMERS__FIELD_NAME: Final[WrapperField] = WrapperField("Isoschizomers", FieldType.STRING, display_name="Isoschizomers")
    NEOSCHIZOMERS__FIELD_NAME: Final[WrapperField] = WrapperField("Neoschizomers", FieldType.STRING, display_name="Neoschizomers")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REACTIONBUFFER__FIELD_NAME: Final[WrapperField] = WrapperField("ReactionBuffer", FieldType.STRING, display_name="Reaction Buffer")
    RECOGNITIONSEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("RecognitionSequence", FieldType.STRING, display_name="Recognition Sequence")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    RESTRICTIONENZYMEPART_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.CreatedBy", FieldType.STRING, display_name="Created By")
    RESTRICTIONENZYMEPART_EXT_CUTPOS1A__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.CutPos1a", FieldType.INTEGER, display_name="Cut Position 1A")
    RESTRICTIONENZYMEPART_EXT_CUTPOS1S__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.CutPos1s", FieldType.INTEGER, display_name="Cut Position 1S")
    RESTRICTIONENZYMEPART_EXT_CUTPOS2A__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.CutPos2a", FieldType.INTEGER, display_name="Cut Position 2A")
    RESTRICTIONENZYMEPART_EXT_CUTPOS2S__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.CutPos2s", FieldType.INTEGER, display_name="Cut Position 2S")
    RESTRICTIONENZYMEPART_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    RESTRICTIONENZYMEPART_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.DateCreated", FieldType.DATE, display_name="Date Created")
    RESTRICTIONENZYMEPART_EXT_ISOSCHIZOMERS__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.Isoschizomers", FieldType.STRING, display_name="Isoschizomers")
    RESTRICTIONENZYMEPART_EXT_NEOSCHIZOMERS__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.Neoschizomers", FieldType.STRING, display_name="Neoschizomers")
    RESTRICTIONENZYMEPART_EXT_NONDEG__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.NonDeg", FieldType.BOOLEAN, display_name="Non Deg")
    RESTRICTIONENZYMEPART_EXT_RECOGNITIONSEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.RecognitionSequence", FieldType.STRING, display_name="Recognition Sequence")
    RESTRICTIONENZYMEPART_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.RecordId", FieldType.LONG, display_name="Record ID")
    RESTRICTIONENZYMEPART_EXT_RELATEDRECORD115__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.RelatedRecord115", FieldType.PARENTLINK, display_name="Linked Enzyme Part")
    RESTRICTIONENZYMEPART_EXT_SIXPLUS__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.SixPlus", FieldType.BOOLEAN, display_name="Six Plus")
    RESTRICTIONENZYMEPART_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    RESTRICTIONENZYMEPART_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictionEnzymePart.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.SELECTION, display_name="Vendor")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EnzymeType_field(self, value: Optional[str]):
        """
        Set data field with field name 'EnzymeType' on this record model
        """
        self.set_field_value(self.ENZYMETYPE__FIELD_NAME.field_name, value)

    def get_EnzymeType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EnzymeType' from this record model
        """
        return self.get_field_value(self.ENZYMETYPE__FIELD_NAME.field_name)

    def set_IsDefault_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsDefault' on this record model
        """
        self.set_field_value(self.ISDEFAULT__FIELD_NAME.field_name, value)

    def get_IsDefault_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsDefault' from this record model
        """
        return self.get_field_value(self.ISDEFAULT__FIELD_NAME.field_name)

    def set_IsGoldenGate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGoldenGate' on this record model
        """
        self.set_field_value(self.ISGOLDENGATE__FIELD_NAME.field_name, value)

    def get_IsGoldenGate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGoldenGate' from this record model
        """
        return self.get_field_value(self.ISGOLDENGATE__FIELD_NAME.field_name)

    def set_Isoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Isoschizomers' on this record model
        """
        self.set_field_value(self.ISOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_Isoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Isoschizomers' from this record model
        """
        return self.get_field_value(self.ISOSCHIZOMERS__FIELD_NAME.field_name)

    def set_Neoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Neoschizomers' on this record model
        """
        self.set_field_value(self.NEOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_Neoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Neoschizomers' from this record model
        """
        return self.get_field_value(self.NEOSCHIZOMERS__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReactionBuffer_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReactionBuffer' on this record model
        """
        self.set_field_value(self.REACTIONBUFFER__FIELD_NAME.field_name, value)

    def get_ReactionBuffer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReactionBuffer' from this record model
        """
        return self.get_field_value(self.REACTIONBUFFER__FIELD_NAME.field_name)

    def set_RecognitionSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecognitionSequence' on this record model
        """
        self.set_field_value(self.RECOGNITIONSEQUENCE__FIELD_NAME.field_name, value)

    def get_RecognitionSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecognitionSequence' from this record model
        """
        return self.get_field_value(self.RECOGNITIONSEQUENCE__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'RestrictionEnzymePart.CreatedBy' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RestrictionEnzymePart.CreatedBy' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartCutPos1a_field(self, value: Optional[int]):
        """
        Set data field with field name 'RestrictionEnzymePart.CutPos1a' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_CUTPOS1A__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartCutPos1a_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RestrictionEnzymePart.CutPos1a' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_CUTPOS1A__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartCutPos1s_field(self, value: Optional[int]):
        """
        Set data field with field name 'RestrictionEnzymePart.CutPos1s' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_CUTPOS1S__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartCutPos1s_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RestrictionEnzymePart.CutPos1s' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_CUTPOS1S__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartCutPos2a_field(self, value: Optional[int]):
        """
        Set data field with field name 'RestrictionEnzymePart.CutPos2a' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_CUTPOS2A__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartCutPos2a_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RestrictionEnzymePart.CutPos2a' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_CUTPOS2A__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartCutPos2s_field(self, value: Optional[int]):
        """
        Set data field with field name 'RestrictionEnzymePart.CutPos2s' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_CUTPOS2S__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartCutPos2s_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RestrictionEnzymePart.CutPos2s' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_CUTPOS2S__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'RestrictionEnzymePart.DateCreated' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RestrictionEnzymePart.DateCreated' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartIsoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'RestrictionEnzymePart.Isoschizomers' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_ISOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartIsoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RestrictionEnzymePart.Isoschizomers' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_ISOSCHIZOMERS__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartNeoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'RestrictionEnzymePart.Neoschizomers' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_NEOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartNeoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RestrictionEnzymePart.Neoschizomers' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_NEOSCHIZOMERS__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartNonDeg_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RestrictionEnzymePart.NonDeg' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_NONDEG__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartNonDeg_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RestrictionEnzymePart.NonDeg' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_NONDEG__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartRecognitionSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'RestrictionEnzymePart.RecognitionSequence' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_RECOGNITIONSEQUENCE__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartRecognitionSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RestrictionEnzymePart.RecognitionSequence' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_RECOGNITIONSEQUENCE__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'RestrictionEnzymePart.RecordId' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RestrictionEnzymePart.RecordId' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_RECORDID__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartSixPlus_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RestrictionEnzymePart.SixPlus' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_SIXPLUS__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartSixPlus_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RestrictionEnzymePart.SixPlus' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_SIXPLUS__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'RestrictionEnzymePart.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RestrictionEnzymePart.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_RestrictionEnzymePartVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'RestrictionEnzymePart.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.RESTRICTIONENZYMEPART_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_RestrictionEnzymePartVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RestrictionEnzymePart.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.RESTRICTIONENZYMEPART_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class ErrorMetricModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ErrorMetric
    Data Type Display Name: Error Metric (Error Metrics)
    Fields: CreatedBy, LaneCol, Lane, DateCreated, PlusMinus, ColRead, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, ErrorRate
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: Final[str] = 'ErrorMetric'
    DISPLAY_NAME: Final[str] = "Error Metric"
    PLURAL_DISPLAY_NAME: Final[str] = "Error Metrics"
    COLREAD__FIELD_NAME: Final[WrapperField] = WrapperField("ColRead", FieldType.STRING, display_name="Read")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ERRORRATE__FIELD_NAME: Final[WrapperField] = WrapperField("ErrorRate", FieldType.DOUBLE, display_name="Error Rate (%)")
    LANE__FIELD_NAME: Final[WrapperField] = WrapperField("Lane", FieldType.LONG, display_name="Lane (Long Integer)")
    LANECOL__FIELD_NAME: Final[WrapperField] = WrapperField("LaneCol", FieldType.STRING, display_name="Lane")
    PLUSMINUS__FIELD_NAME: Final[WrapperField] = WrapperField("PlusMinus", FieldType.DOUBLE, display_name="+ / -")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColRead_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColRead' on this record model
        """
        self.set_field_value(self.COLREAD__FIELD_NAME.field_name, value)

    def get_ColRead_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColRead' from this record model
        """
        return self.get_field_value(self.COLREAD__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ErrorRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'ErrorRate' on this record model
        """
        self.set_field_value(self.ERRORRATE__FIELD_NAME.field_name, value)

    def get_ErrorRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ErrorRate' from this record model
        """
        return self.get_field_value(self.ERRORRATE__FIELD_NAME.field_name)

    def set_Lane_field(self, value: Optional[int]):
        """
        Set data field with field name 'Lane' on this record model
        """
        self.set_field_value(self.LANE__FIELD_NAME.field_name, value)

    def get_Lane_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Lane' from this record model
        """
        return self.get_field_value(self.LANE__FIELD_NAME.field_name)

    def set_LaneCol_field(self, value: Optional[str]):
        """
        Set data field with field name 'LaneCol' on this record model
        """
        self.set_field_value(self.LANECOL__FIELD_NAME.field_name, value)

    def get_LaneCol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LaneCol' from this record model
        """
        return self.get_field_value(self.LANECOL__FIELD_NAME.field_name)

    def set_PlusMinus_field(self, value: Optional[float]):
        """
        Set data field with field name 'PlusMinus' on this record model
        """
        self.set_field_value(self.PLUSMINUS__FIELD_NAME.field_name, value)

    def get_PlusMinus_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PlusMinus' from this record model
        """
        return self.get_field_value(self.PLUSMINUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class EventModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Event
    Data Type Display Name: Event (Event)
    Fields: UserName, CreatedBy, ReminderSent, Comments, ReminderDateTime, EventStatus, DateCreated, EventName, StartDateTime, DataRecordName, EndDateTime, VeloxLastModifiedDate, VeloxLastModifiedBy, EventDescription
    """
    DATA_TYPE_NAME: Final[str] = 'Event'
    DISPLAY_NAME: Final[str] = "Event"
    PLURAL_DISPLAY_NAME: Final[str] = "Event"
    COMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("Comments", FieldType.STRING, display_name="Comments")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ENDDATETIME__FIELD_NAME: Final[WrapperField] = WrapperField("EndDateTime", FieldType.DATE, display_name="End Date Time")
    EVENTDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("EventDescription", FieldType.STRING, display_name="Event Description")
    EVENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("EventName", FieldType.STRING, display_name="Event Name")
    EVENTSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("EventStatus", FieldType.PICKLIST, display_name="Event Status")
    REMINDERDATETIME__FIELD_NAME: Final[WrapperField] = WrapperField("ReminderDateTime", FieldType.DATE, display_name="Reminder Date Time")
    REMINDERSENT__FIELD_NAME: Final[WrapperField] = WrapperField("ReminderSent", FieldType.BOOLEAN, display_name="Reminder Sent")
    STARTDATETIME__FIELD_NAME: Final[WrapperField] = WrapperField("StartDateTime", FieldType.DATE, display_name="Start Date Time")
    USERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("UserName", FieldType.SELECTION, display_name="User Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'Comments' on this record model
        """
        self.set_field_value(self.COMMENTS__FIELD_NAME.field_name, value)

    def get_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Comments' from this record model
        """
        return self.get_field_value(self.COMMENTS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EndDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'EndDateTime' on this record model
        """
        self.set_field_value(self.ENDDATETIME__FIELD_NAME.field_name, value)

    def get_EndDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EndDateTime' from this record model
        """
        return self.get_field_value(self.ENDDATETIME__FIELD_NAME.field_name)

    def set_EventDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'EventDescription' on this record model
        """
        self.set_field_value(self.EVENTDESCRIPTION__FIELD_NAME.field_name, value)

    def get_EventDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EventDescription' from this record model
        """
        return self.get_field_value(self.EVENTDESCRIPTION__FIELD_NAME.field_name)

    def set_EventName_field(self, value: Optional[str]):
        """
        Set data field with field name 'EventName' on this record model
        """
        self.set_field_value(self.EVENTNAME__FIELD_NAME.field_name, value)

    def get_EventName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EventName' from this record model
        """
        return self.get_field_value(self.EVENTNAME__FIELD_NAME.field_name)

    def set_EventStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'EventStatus' on this record model
        """
        self.set_field_value(self.EVENTSTATUS__FIELD_NAME.field_name, value)

    def get_EventStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EventStatus' from this record model
        """
        return self.get_field_value(self.EVENTSTATUS__FIELD_NAME.field_name)

    def set_ReminderDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReminderDateTime' on this record model
        """
        self.set_field_value(self.REMINDERDATETIME__FIELD_NAME.field_name, value)

    def get_ReminderDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReminderDateTime' from this record model
        """
        return self.get_field_value(self.REMINDERDATETIME__FIELD_NAME.field_name)

    def set_ReminderSent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReminderSent' on this record model
        """
        self.set_field_value(self.REMINDERSENT__FIELD_NAME.field_name, value)

    def get_ReminderSent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReminderSent' from this record model
        """
        return self.get_field_value(self.REMINDERSENT__FIELD_NAME.field_name)

    def set_StartDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartDateTime' on this record model
        """
        self.set_field_value(self.STARTDATETIME__FIELD_NAME.field_name, value)

    def get_StartDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartDateTime' from this record model
        """
        return self.get_field_value(self.STARTDATETIME__FIELD_NAME.field_name)

    def set_UserName_field(self, value: Optional[str]):
        """
        Set data field with field name 'UserName' on this record model
        """
        self.set_field_value(self.USERNAME__FIELD_NAME.field_name, value)

    def get_UserName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UserName' from this record model
        """
        return self.get_field_value(self.USERNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ExemplarConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ExemplarConfig
    Data Type Display Name: Sapio Configurations (Sapio Configurations)
    Fields: QCMailingList, SaasMaxNumOfSamplesPerTrans, EnableElnRoleCandidates, WitnessVisibleRoleType, ImportExportSystemConfigsText, ELNImportSamplesOverride, NotifyMaintTechnicians, ConsumableTypeMaxTemp, PlasmidDataType, ReviewerVisibleRoleType, Bowtie2ExecPath, AddConsumablesToExperiments, OverrideGroups, MmSampleFieldsToDisplay, InstrumentForceIdvRegistration, EsigRequireAllAuthor, PrintConsumableBarcode, DefaultELNExperimentGroupRoles, MmForceIdvRegistration, CreatedBy, EnableBaselineSampleRec, AdditionalNotificationEmails, EnforceExpiration, ExportFullConfigButton, AdditionalQCMailingList, EsigRequireAllAuthorHelp, AlwaysLaunchInstMaintWorkflow, EsignEmailOwnerNotebookUnlock, NotificationUsers, AuthenticationRequired, SampleReceivingEmails, ConsumableTrackingAttribute, Bowtie2GRChIndexPrefix, RecordReportDataTypeList, RecordReportAccessGroups, ENotebookSignoffGroupsHelp, SamtoolsExecPath, EnforceSufficientQuantity, RTransExecPath, CreateInWorkflow, TLSEnabled, ExportExemplarConfigButton, ActiveNotebooksInWorkQueue, S3SecretAcessKey, SmtpUsername, GenerateItemBarcode, VeloxLastModifiedBy, EsignSendEmailOnEntryUnlock, AssignRoleNotificationButton, ExportStaticConfigurations, AddAllUserAsCandidateHelp, Delimiter, DefaultELNExperimentRolesHelp, EnforceConsumableDirectory, ELNCreateSmplExtentionMultiSel, BowtieIndexDirectory, EnableMultiTenantDashboards, AssignToProcessUserGroupList, SecureSocketLayer, SDMSRootPath, CanModifyExistingVSMTPItems, NewConsumableDirName, IndexedStorageType, AdditionalInstMaintEmails, RequireESignature, Email, DefineConsumableDirectories, ExportSelectedConfigButton, Port, RecordStorageEvents, NativeRExecPath, ImportExemplarConfigButton, EsignSendEmailOnDecision, SMTPServer, DefaultELNExperimentRoles, MatManEnableFeatureExt, MultiLayerPlatePoolIfSameType, ReqPortalManifestFieldNames, VerificationTypes, WriteQCInputFileToUser, AdHocExperimentsInheritAccess, CoolingStorageUnitTypes, BroadcastMaintAlert, SendTestMail, ImportBackupConfigButton, ApproverVisibleRoleType, RestrictAccessByLocation, BowtieGrCh38RefIndexPrefix, ImportSystemConfigButton, DataRecordName, PlateDesignerPrimaryTypes, PreNotificationInterval, ImportExportExemplarConfigText, StorageUnitViewerFillByConfig, EnableDND, ExperimentBannerExpFields, SampleTypeMaximumTemperature, UseRequestDefaultLayout, QuantityTracking, SampleReceivingUserMenu, DateCreated, SaasMaxSamples, SystemPassword, AddAllUserAsCandidate, EnumerateStorage, ConsumableDirectories, SaasMode, NativePyExecPath, TemperatureEnforcement, S3AccessKeyId, TLSRequired, BroadcastMaintUsers, ImportBaseLineDescription, DefineConsumableDataTypes, ConsumableDataTypes, VeloxLastModifiedDate, EsignSendEmailOnNotebookUnlock, ConfigureInstrumentFileField, ENotebookSignoffGroups, ExperimentBannerParentFields, GRChFASTAPath, EnableAutoLotPopulation
    """
    DATA_TYPE_NAME: Final[str] = 'ExemplarConfig'
    DISPLAY_NAME: Final[str] = "Sapio Configurations"
    PLURAL_DISPLAY_NAME: Final[str] = "Sapio Configurations"
    ACTIVENOTEBOOKSINWORKQUEUE__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveNotebooksInWorkQueue", FieldType.BOOLEAN, display_name="Show Active Notebooks Tab In Work Queue")
    ADHOCEXPERIMENTSINHERITACCESS__FIELD_NAME: Final[WrapperField] = WrapperField("AdHocExperimentsInheritAccess", FieldType.BOOLEAN, display_name="Ad-Hoc Experiments Inherit Access Rights from Parent Record (i.e. Project, Study, etc.)?")
    ADDALLUSERASCANDIDATE__FIELD_NAME: Final[WrapperField] = WrapperField("AddAllUserAsCandidate", FieldType.BOOLEAN, display_name="Auto Assign All Candidate Roles for All Users for Experiment Locations?")
    ADDALLUSERASCANDIDATEHELP__FIELD_NAME: Final[WrapperField] = WrapperField("AddAllUserAsCandidateHelp", FieldType.STRING, display_name="Feature Explanation")
    ADDCONSUMABLESTOEXPERIMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("AddConsumablesToExperiments", FieldType.BOOLEAN, display_name="Add Consumables to Experiments")
    ADDITIONALINSTMAINTEMAILS__FIELD_NAME: Final[WrapperField] = WrapperField("AdditionalInstMaintEmails", FieldType.STRING, display_name="Additional Notification Emails")
    ADDITIONALNOTIFICATIONEMAILS__FIELD_NAME: Final[WrapperField] = WrapperField("AdditionalNotificationEmails", FieldType.STRING, display_name="Additional Notification Emails")
    ADDITIONALQCMAILINGLIST__FIELD_NAME: Final[WrapperField] = WrapperField("AdditionalQCMailingList", FieldType.STRING, display_name="Additional QC Mailing List")
    ALWAYSLAUNCHINSTMAINTWORKFLOW__FIELD_NAME: Final[WrapperField] = WrapperField("AlwaysLaunchInstMaintWorkflow", FieldType.BOOLEAN, display_name="Always Launch Maintenance Workflow")
    APPROVERVISIBLEROLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ApproverVisibleRoleType", FieldType.BOOLEAN, display_name="Approver Role")
    ASSIGNROLENOTIFICATIONBUTTON__FIELD_NAME: Final[WrapperField] = WrapperField("AssignRoleNotificationButton", FieldType.ACTION, display_name="Configure Assign Role Notifications")
    ASSIGNTOPROCESSUSERGROUPLIST__FIELD_NAME: Final[WrapperField] = WrapperField("AssignToProcessUserGroupList", FieldType.SELECTION, display_name="User Groups with access to \"Assign To Process\" button")
    AUTHENTICATIONREQUIRED__FIELD_NAME: Final[WrapperField] = WrapperField("AuthenticationRequired", FieldType.BOOLEAN, display_name="Authentication Required")
    BOWTIE2EXECPATH__FIELD_NAME: Final[WrapperField] = WrapperField("Bowtie2ExecPath", FieldType.STRING, display_name="bowtie2 Exec Path")
    BOWTIE2GRCHINDEXPREFIX__FIELD_NAME: Final[WrapperField] = WrapperField("Bowtie2GRChIndexPrefix", FieldType.STRING, display_name="bowtie2 GRCh Index Path")
    BOWTIEGRCH38REFINDEXPREFIX__FIELD_NAME: Final[WrapperField] = WrapperField("BowtieGrCh38RefIndexPrefix", FieldType.STRING, display_name="Bowtie Gr Ch38 Ref Index Prefix")
    BOWTIEINDEXDIRECTORY__FIELD_NAME: Final[WrapperField] = WrapperField("BowtieIndexDirectory", FieldType.STRING, display_name="Bowtie Index Directory")
    BROADCASTMAINTALERT__FIELD_NAME: Final[WrapperField] = WrapperField("BroadcastMaintAlert", FieldType.BOOLEAN, display_name="Broadcast Maintenance Alerts")
    BROADCASTMAINTUSERS__FIELD_NAME: Final[WrapperField] = WrapperField("BroadcastMaintUsers", FieldType.SELECTION, display_name="Email/Broadcast Users")
    CANMODIFYEXISTINGVSMTPITEMS__FIELD_NAME: Final[WrapperField] = WrapperField("CanModifyExistingVSMTPItems", FieldType.BOOLEAN, display_name="Can Modify Existing Visual Storage Management Task Items")
    CONFIGUREINSTRUMENTFILEFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("ConfigureInstrumentFileField", FieldType.ACTION, display_name="Configure SDMS File Link-out Field")
    CONSUMABLEDATATYPES__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableDataTypes", FieldType.STRING, display_name="Consumable Data Type(s)")
    CONSUMABLEDIRECTORIES__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableDirectories", FieldType.STRING, display_name="Consumable Directory Mappings")
    CONSUMABLETRACKINGATTRIBUTE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableTrackingAttribute", FieldType.PICKLIST, display_name="Consumable Tracking Attribute")
    CONSUMABLETYPEMAXTEMP__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableTypeMaxTemp", FieldType.STRING, display_name="Consumable Type Maximum Temperature Restriction")
    COOLINGSTORAGEUNITTYPES__FIELD_NAME: Final[WrapperField] = WrapperField("CoolingStorageUnitTypes", FieldType.SELECTION, display_name="Cooling Storage Unit Types")
    CREATEINWORKFLOW__FIELD_NAME: Final[WrapperField] = WrapperField("CreateInWorkflow", FieldType.BOOLEAN, display_name="New Consumable Creation in Workflow")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DEFAULTELNEXPERIMENTGROUPROLES__FIELD_NAME: Final[WrapperField] = WrapperField("DefaultELNExperimentGroupRoles", FieldType.SELECTION, display_name="Default Experiment Group Roles")
    DEFAULTELNEXPERIMENTROLES__FIELD_NAME: Final[WrapperField] = WrapperField("DefaultELNExperimentRoles", FieldType.SELECTION, display_name="Default Experiment User Roles")
    DEFAULTELNEXPERIMENTROLESHELP__FIELD_NAME: Final[WrapperField] = WrapperField("DefaultELNExperimentRolesHelp", FieldType.STRING, display_name="Feature Explanation")
    DEFINECONSUMABLEDATATYPES__FIELD_NAME: Final[WrapperField] = WrapperField("DefineConsumableDataTypes", FieldType.ACTION, display_name="Define / Edit Material Data Types")
    DEFINECONSUMABLEDIRECTORIES__FIELD_NAME: Final[WrapperField] = WrapperField("DefineConsumableDirectories", FieldType.ACTION, display_name="Define / Edit Material Directories")
    DELIMITER__FIELD_NAME: Final[WrapperField] = WrapperField("Delimiter", FieldType.STRING, display_name="Sample ID Delimiter")
    ELNCREATESMPLEXTENTIONMULTISEL__FIELD_NAME: Final[WrapperField] = WrapperField("ELNCreateSmplExtentionMultiSel", FieldType.BOOLEAN, display_name="Enable Multi-Select Extension Types")
    ELNIMPORTSAMPLESOVERRIDE__FIELD_NAME: Final[WrapperField] = WrapperField("ELNImportSamplesOverride", FieldType.STRING, display_name="ELN Experiment Import Samples Override")
    ENOTEBOOKSIGNOFFGROUPS__FIELD_NAME: Final[WrapperField] = WrapperField("ENotebookSignoffGroups", FieldType.SELECTION, display_name="Required Experiment E-Sign Roles")
    ENOTEBOOKSIGNOFFGROUPSHELP__FIELD_NAME: Final[WrapperField] = WrapperField("ENotebookSignoffGroupsHelp", FieldType.STRING, display_name="Feature Explanation")
    EMAIL__FIELD_NAME: Final[WrapperField] = WrapperField("Email", FieldType.STRING, display_name="System Email")
    ENABLEAUTOLOTPOPULATION__FIELD_NAME: Final[WrapperField] = WrapperField("EnableAutoLotPopulation", FieldType.BOOLEAN, display_name="Enable Automatic Population of Lot Numbers / Barcodes")
    ENABLEBASELINESAMPLEREC__FIELD_NAME: Final[WrapperField] = WrapperField("EnableBaselineSampleRec", FieldType.BOOLEAN, display_name="Enable/Disable Sample Receiving")
    ENABLEDND__FIELD_NAME: Final[WrapperField] = WrapperField("EnableDND", FieldType.BOOLEAN, display_name="Enable Drag And Drop")
    ENABLEELNROLECANDIDATES__FIELD_NAME: Final[WrapperField] = WrapperField("EnableElnRoleCandidates", FieldType.BOOLEAN, display_name="Enable ELN Role Candidates")
    ENABLEMULTITENANTDASHBOARDS__FIELD_NAME: Final[WrapperField] = WrapperField("EnableMultiTenantDashboards", FieldType.BOOLEAN, display_name="Enable Tenant Switching for Sapio Dashboards")
    ENFORCECONSUMABLEDIRECTORY__FIELD_NAME: Final[WrapperField] = WrapperField("EnforceConsumableDirectory", FieldType.BOOLEAN, display_name="Enforce Consumable Directory")
    ENFORCEEXPIRATION__FIELD_NAME: Final[WrapperField] = WrapperField("EnforceExpiration", FieldType.BOOLEAN, display_name="Enforce Expiration Date")
    ENFORCESUFFICIENTQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("EnforceSufficientQuantity", FieldType.BOOLEAN, display_name="Enforce Sufficient Quantity")
    ENUMERATESTORAGE__FIELD_NAME: Final[WrapperField] = WrapperField("EnumerateStorage", FieldType.BOOLEAN, display_name="Number Storage Positions")
    ESIGREQUIREALLAUTHOR__FIELD_NAME: Final[WrapperField] = WrapperField("EsigRequireAllAuthor", FieldType.BOOLEAN, display_name="Require Authors to E-Sign?")
    ESIGREQUIREALLAUTHORHELP__FIELD_NAME: Final[WrapperField] = WrapperField("EsigRequireAllAuthorHelp", FieldType.STRING, display_name="Feature Explanation")
    ESIGNEMAILOWNERNOTEBOOKUNLOCK__FIELD_NAME: Final[WrapperField] = WrapperField("EsignEmailOwnerNotebookUnlock", FieldType.BOOLEAN, display_name="Only Email Owner On Experiment Unlock")
    ESIGNSENDEMAILONDECISION__FIELD_NAME: Final[WrapperField] = WrapperField("EsignSendEmailOnDecision", FieldType.BOOLEAN, display_name="Send Email on Approval Process")
    ESIGNSENDEMAILONENTRYUNLOCK__FIELD_NAME: Final[WrapperField] = WrapperField("EsignSendEmailOnEntryUnlock", FieldType.BOOLEAN, display_name="Send Email On Entry Unlock")
    ESIGNSENDEMAILONNOTEBOOKUNLOCK__FIELD_NAME: Final[WrapperField] = WrapperField("EsignSendEmailOnNotebookUnlock", FieldType.BOOLEAN, display_name="Send Email On Experiment Unlock")
    EXPERIMENTBANNEREXPFIELDS__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentBannerExpFields", FieldType.SELECTION, display_name="Experiment Banner Experiment Default Fields")
    EXPERIMENTBANNERPARENTFIELDS__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentBannerParentFields", FieldType.SELECTION, display_name="Experiment Banner Parent Default Fields")
    EXPORTEXEMPLARCONFIGBUTTON__FIELD_NAME: Final[WrapperField] = WrapperField("ExportExemplarConfigButton", FieldType.ACTION, display_name="Export Sapio Configs")
    EXPORTFULLCONFIGBUTTON__FIELD_NAME: Final[WrapperField] = WrapperField("ExportFullConfigButton", FieldType.ACTION, display_name="Export Full Configurations")
    EXPORTSELECTEDCONFIGBUTTON__FIELD_NAME: Final[WrapperField] = WrapperField("ExportSelectedConfigButton", FieldType.ACTION, display_name="Export Selected Configurations")
    EXPORTSTATICCONFIGURATIONS__FIELD_NAME: Final[WrapperField] = WrapperField("ExportStaticConfigurations", FieldType.ACTION, display_name="Export Static Configurations")
    GRCHFASTAPATH__FIELD_NAME: Final[WrapperField] = WrapperField("GRChFASTAPath", FieldType.STRING, display_name="GRCh FASTA Path")
    GENERATEITEMBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GenerateItemBarcode", FieldType.BOOLEAN, display_name="Generate Consumable Item Barcode")
    IMPORTBACKUPCONFIGBUTTON__FIELD_NAME: Final[WrapperField] = WrapperField("ImportBackupConfigButton", FieldType.ACTION, display_name="Import Backup Configurations")
    IMPORTBASELINEDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("ImportBaseLineDescription", FieldType.STRING, display_name="Description")
    IMPORTEXEMPLARCONFIGBUTTON__FIELD_NAME: Final[WrapperField] = WrapperField("ImportExemplarConfigButton", FieldType.ACTION, display_name="Import Sapio Configurations")
    IMPORTEXPORTEXEMPLARCONFIGTEXT__FIELD_NAME: Final[WrapperField] = WrapperField("ImportExportExemplarConfigText", FieldType.STRING, display_name="Description")
    IMPORTEXPORTSYSTEMCONFIGSTEXT__FIELD_NAME: Final[WrapperField] = WrapperField("ImportExportSystemConfigsText", FieldType.STRING, display_name="Description")
    IMPORTSYSTEMCONFIGBUTTON__FIELD_NAME: Final[WrapperField] = WrapperField("ImportSystemConfigButton", FieldType.ACTION, display_name="Import System Configurations")
    INDEXEDSTORAGETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("IndexedStorageType", FieldType.SELECTION, display_name="Storage Types Displaying Position Indexes")
    INSTRUMENTFORCEIDVREGISTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentForceIdvRegistration", FieldType.BOOLEAN, display_name="Register New Instruments Outside An Experiment?")
    MATMANENABLEFEATUREEXT__FIELD_NAME: Final[WrapperField] = WrapperField("MatManEnableFeatureExt", FieldType.BOOLEAN, display_name="Enable Plugin Extension")
    MMFORCEIDVREGISTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("MmForceIdvRegistration", FieldType.BOOLEAN, display_name="Register New Materials Outside An Experiment?")
    MMSAMPLEFIELDSTODISPLAY__FIELD_NAME: Final[WrapperField] = WrapperField("MmSampleFieldsToDisplay", FieldType.SELECTION, display_name="Material Registration Sample Fields to Display")
    MULTILAYERPLATEPOOLIFSAMETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("MultiLayerPlatePoolIfSameType", FieldType.BOOLEAN, display_name="Pool if Same Type")
    NATIVEPYEXECPATH__FIELD_NAME: Final[WrapperField] = WrapperField("NativePyExecPath", FieldType.STRING, display_name="Native Py Exec Path")
    NATIVEREXECPATH__FIELD_NAME: Final[WrapperField] = WrapperField("NativeRExecPath", FieldType.STRING, display_name="Native R Exec Path")
    NEWCONSUMABLEDIRNAME__FIELD_NAME: Final[WrapperField] = WrapperField("NewConsumableDirName", FieldType.STRING, display_name="New Consumable Directory Name")
    NOTIFICATIONUSERS__FIELD_NAME: Final[WrapperField] = WrapperField("NotificationUsers", FieldType.SELECTION, display_name="Users To Notify")
    NOTIFYMAINTTECHNICIANS__FIELD_NAME: Final[WrapperField] = WrapperField("NotifyMaintTechnicians", FieldType.BOOLEAN, display_name="Notify Maintenance Technicians")
    OVERRIDEGROUPS__FIELD_NAME: Final[WrapperField] = WrapperField("OverrideGroups", FieldType.SELECTION, display_name="Override Groups")
    PLASMIDDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("PlasmidDataType", FieldType.SELECTION, display_name="Plasmid Data Type")
    PLATEDESIGNERPRIMARYTYPES__FIELD_NAME: Final[WrapperField] = WrapperField("PlateDesignerPrimaryTypes", FieldType.SELECTION, display_name="3D Plate Assignable Types")
    PORT__FIELD_NAME: Final[WrapperField] = WrapperField("Port", FieldType.INTEGER, display_name="Port")
    PRENOTIFICATIONINTERVAL__FIELD_NAME: Final[WrapperField] = WrapperField("PreNotificationInterval", FieldType.LONG, display_name="Pre-Notification Interval (days)")
    PRINTCONSUMABLEBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("PrintConsumableBarcode", FieldType.BOOLEAN, display_name="Print Consumable Item Barcodes")
    QCMAILINGLIST__FIELD_NAME: Final[WrapperField] = WrapperField("QCMailingList", FieldType.SELECTION, display_name="QC Mailing List")
    QUANTITYTRACKING__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityTracking", FieldType.BOOLEAN, display_name="Quantity / Volume Tracking")
    RTRANSEXECPATH__FIELD_NAME: Final[WrapperField] = WrapperField("RTransExecPath", FieldType.STRING, display_name="R Trans Exec Path")
    RECORDREPORTACCESSGROUPS__FIELD_NAME: Final[WrapperField] = WrapperField("RecordReportAccessGroups", FieldType.SELECTION, display_name="Record Report Access Groups")
    RECORDREPORTDATATYPELIST__FIELD_NAME: Final[WrapperField] = WrapperField("RecordReportDataTypeList", FieldType.SELECTION, display_name="Record Report Data Type List")
    RECORDSTORAGEEVENTS__FIELD_NAME: Final[WrapperField] = WrapperField("RecordStorageEvents", FieldType.BOOLEAN, display_name="Record Storage Events")
    REQPORTALMANIFESTFIELDNAMES__FIELD_NAME: Final[WrapperField] = WrapperField("ReqPortalManifestFieldNames", FieldType.SELECTION, display_name="Manifest Field Names")
    REQUIREESIGNATURE__FIELD_NAME: Final[WrapperField] = WrapperField("RequireESignature", FieldType.BOOLEAN, display_name="Require E-Signature")
    RESTRICTACCESSBYLOCATION__FIELD_NAME: Final[WrapperField] = WrapperField("RestrictAccessByLocation", FieldType.BOOLEAN, display_name="Restrict Access by Location")
    REVIEWERVISIBLEROLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ReviewerVisibleRoleType", FieldType.BOOLEAN, display_name="Reviewer Role")
    S3ACCESSKEYID__FIELD_NAME: Final[WrapperField] = WrapperField("S3AccessKeyId", FieldType.STRING, display_name="S3 Access Key ID")
    S3SECRETACESSKEY__FIELD_NAME: Final[WrapperField] = WrapperField("S3SecretAcessKey", FieldType.STRING, display_name="S3 Secret Access Key")
    SDMSROOTPATH__FIELD_NAME: Final[WrapperField] = WrapperField("SDMSRootPath", FieldType.STRING, display_name="SDMS Root Path")
    SMTPSERVER__FIELD_NAME: Final[WrapperField] = WrapperField("SMTPServer", FieldType.STRING, display_name="SMTP Server")
    SAASMAXNUMOFSAMPLESPERTRANS__FIELD_NAME: Final[WrapperField] = WrapperField("SaasMaxNumOfSamplesPerTrans", FieldType.LONG, display_name="SAAS Max Number of Samples Per Workflow")
    SAASMAXSAMPLES__FIELD_NAME: Final[WrapperField] = WrapperField("SaasMaxSamples", FieldType.LONG, display_name="SAAS Max Samples")
    SAASMODE__FIELD_NAME: Final[WrapperField] = WrapperField("SaasMode", FieldType.BOOLEAN, display_name="SAAS Mode")
    SAMPLERECEIVINGEMAILS__FIELD_NAME: Final[WrapperField] = WrapperField("SampleReceivingEmails", FieldType.STRING, display_name="Additional Emails for Samples Received")
    SAMPLERECEIVINGUSERMENU__FIELD_NAME: Final[WrapperField] = WrapperField("SampleReceivingUserMenu", FieldType.SELECTION, display_name="Users to Notify of Samples Received")
    SAMPLETYPEMAXIMUMTEMPERATURE__FIELD_NAME: Final[WrapperField] = WrapperField("SampleTypeMaximumTemperature", FieldType.STRING, display_name="Sample Type Maximum Temperature Restriction")
    SAMTOOLSEXECPATH__FIELD_NAME: Final[WrapperField] = WrapperField("SamtoolsExecPath", FieldType.STRING, display_name="samtools Exec Path")
    SECURESOCKETLAYER__FIELD_NAME: Final[WrapperField] = WrapperField("SecureSocketLayer", FieldType.BOOLEAN, display_name="SSL")
    SENDTESTMAIL__FIELD_NAME: Final[WrapperField] = WrapperField("SendTestMail", FieldType.ACTION, display_name="Send Test Mail")
    SMTPUSERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SmtpUsername", FieldType.STRING, display_name="SMTP Username")
    STORAGEUNITVIEWERFILLBYCONFIG__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitViewerFillByConfig", FieldType.PICKLIST, display_name="Storage Unit Viewer Fill by Configuration")
    SYSTEMPASSWORD__FIELD_NAME: Final[WrapperField] = WrapperField("SystemPassword", FieldType.STRING, display_name="System Password")
    TLSENABLED__FIELD_NAME: Final[WrapperField] = WrapperField("TLSEnabled", FieldType.BOOLEAN, display_name="TLS Enabled")
    TLSREQUIRED__FIELD_NAME: Final[WrapperField] = WrapperField("TLSRequired", FieldType.BOOLEAN, display_name="TLS Required")
    TEMPERATUREENFORCEMENT__FIELD_NAME: Final[WrapperField] = WrapperField("TemperatureEnforcement", FieldType.PICKLIST, display_name="Temperature Enforcement")
    USEREQUESTDEFAULTLAYOUT__FIELD_NAME: Final[WrapperField] = WrapperField("UseRequestDefaultLayout", FieldType.BOOLEAN, display_name="Use Default Layout For Request Creation")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VERIFICATIONTYPES__FIELD_NAME: Final[WrapperField] = WrapperField("VerificationTypes", FieldType.PICKLIST, display_name="Types of Validation Enforcement")
    WITNESSVISIBLEROLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("WitnessVisibleRoleType", FieldType.BOOLEAN, display_name="Witness Role")
    WRITEQCINPUTFILETOUSER__FIELD_NAME: Final[WrapperField] = WrapperField("WriteQCInputFileToUser", FieldType.BOOLEAN, display_name="Write QC Input File to User")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveNotebooksInWorkQueue_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ActiveNotebooksInWorkQueue' on this record model
        """
        self.set_field_value(self.ACTIVENOTEBOOKSINWORKQUEUE__FIELD_NAME.field_name, value)

    def get_ActiveNotebooksInWorkQueue_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ActiveNotebooksInWorkQueue' from this record model
        """
        return self.get_field_value(self.ACTIVENOTEBOOKSINWORKQUEUE__FIELD_NAME.field_name)

    def set_AdHocExperimentsInheritAccess_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AdHocExperimentsInheritAccess' on this record model
        """
        self.set_field_value(self.ADHOCEXPERIMENTSINHERITACCESS__FIELD_NAME.field_name, value)

    def get_AdHocExperimentsInheritAccess_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AdHocExperimentsInheritAccess' from this record model
        """
        return self.get_field_value(self.ADHOCEXPERIMENTSINHERITACCESS__FIELD_NAME.field_name)

    def set_AddAllUserAsCandidate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AddAllUserAsCandidate' on this record model
        """
        self.set_field_value(self.ADDALLUSERASCANDIDATE__FIELD_NAME.field_name, value)

    def get_AddAllUserAsCandidate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AddAllUserAsCandidate' from this record model
        """
        return self.get_field_value(self.ADDALLUSERASCANDIDATE__FIELD_NAME.field_name)

    def set_AddAllUserAsCandidateHelp_field(self, value: Optional[str]):
        """
        Set data field with field name 'AddAllUserAsCandidateHelp' on this record model
        """
        self.set_field_value(self.ADDALLUSERASCANDIDATEHELP__FIELD_NAME.field_name, value)

    def get_AddAllUserAsCandidateHelp_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AddAllUserAsCandidateHelp' from this record model
        """
        return self.get_field_value(self.ADDALLUSERASCANDIDATEHELP__FIELD_NAME.field_name)

    def set_AddConsumablesToExperiments_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AddConsumablesToExperiments' on this record model
        """
        self.set_field_value(self.ADDCONSUMABLESTOEXPERIMENTS__FIELD_NAME.field_name, value)

    def get_AddConsumablesToExperiments_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AddConsumablesToExperiments' from this record model
        """
        return self.get_field_value(self.ADDCONSUMABLESTOEXPERIMENTS__FIELD_NAME.field_name)

    def set_AdditionalInstMaintEmails_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdditionalInstMaintEmails' on this record model
        """
        self.set_field_value(self.ADDITIONALINSTMAINTEMAILS__FIELD_NAME.field_name, value)

    def get_AdditionalInstMaintEmails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdditionalInstMaintEmails' from this record model
        """
        return self.get_field_value(self.ADDITIONALINSTMAINTEMAILS__FIELD_NAME.field_name)

    def set_AdditionalNotificationEmails_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdditionalNotificationEmails' on this record model
        """
        self.set_field_value(self.ADDITIONALNOTIFICATIONEMAILS__FIELD_NAME.field_name, value)

    def get_AdditionalNotificationEmails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdditionalNotificationEmails' from this record model
        """
        return self.get_field_value(self.ADDITIONALNOTIFICATIONEMAILS__FIELD_NAME.field_name)

    def set_AdditionalQCMailingList_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdditionalQCMailingList' on this record model
        """
        self.set_field_value(self.ADDITIONALQCMAILINGLIST__FIELD_NAME.field_name, value)

    def get_AdditionalQCMailingList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdditionalQCMailingList' from this record model
        """
        return self.get_field_value(self.ADDITIONALQCMAILINGLIST__FIELD_NAME.field_name)

    def set_AlwaysLaunchInstMaintWorkflow_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AlwaysLaunchInstMaintWorkflow' on this record model
        """
        self.set_field_value(self.ALWAYSLAUNCHINSTMAINTWORKFLOW__FIELD_NAME.field_name, value)

    def get_AlwaysLaunchInstMaintWorkflow_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AlwaysLaunchInstMaintWorkflow' from this record model
        """
        return self.get_field_value(self.ALWAYSLAUNCHINSTMAINTWORKFLOW__FIELD_NAME.field_name)

    def set_ApproverVisibleRoleType_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ApproverVisibleRoleType' on this record model
        """
        self.set_field_value(self.APPROVERVISIBLEROLETYPE__FIELD_NAME.field_name, value)

    def get_ApproverVisibleRoleType_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ApproverVisibleRoleType' from this record model
        """
        return self.get_field_value(self.APPROVERVISIBLEROLETYPE__FIELD_NAME.field_name)

    def set_AssignToProcessUserGroupList_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignToProcessUserGroupList' on this record model
        """
        self.set_field_value(self.ASSIGNTOPROCESSUSERGROUPLIST__FIELD_NAME.field_name, value)

    def get_AssignToProcessUserGroupList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignToProcessUserGroupList' from this record model
        """
        return self.get_field_value(self.ASSIGNTOPROCESSUSERGROUPLIST__FIELD_NAME.field_name)

    def set_AuthenticationRequired_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AuthenticationRequired' on this record model
        """
        self.set_field_value(self.AUTHENTICATIONREQUIRED__FIELD_NAME.field_name, value)

    def get_AuthenticationRequired_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AuthenticationRequired' from this record model
        """
        return self.get_field_value(self.AUTHENTICATIONREQUIRED__FIELD_NAME.field_name)

    def set_Bowtie2ExecPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'Bowtie2ExecPath' on this record model
        """
        self.set_field_value(self.BOWTIE2EXECPATH__FIELD_NAME.field_name, value)

    def get_Bowtie2ExecPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Bowtie2ExecPath' from this record model
        """
        return self.get_field_value(self.BOWTIE2EXECPATH__FIELD_NAME.field_name)

    def set_Bowtie2GRChIndexPrefix_field(self, value: Optional[str]):
        """
        Set data field with field name 'Bowtie2GRChIndexPrefix' on this record model
        """
        self.set_field_value(self.BOWTIE2GRCHINDEXPREFIX__FIELD_NAME.field_name, value)

    def get_Bowtie2GRChIndexPrefix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Bowtie2GRChIndexPrefix' from this record model
        """
        return self.get_field_value(self.BOWTIE2GRCHINDEXPREFIX__FIELD_NAME.field_name)

    def set_BowtieGrCh38RefIndexPrefix_field(self, value: Optional[str]):
        """
        Set data field with field name 'BowtieGrCh38RefIndexPrefix' on this record model
        """
        self.set_field_value(self.BOWTIEGRCH38REFINDEXPREFIX__FIELD_NAME.field_name, value)

    def get_BowtieGrCh38RefIndexPrefix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BowtieGrCh38RefIndexPrefix' from this record model
        """
        return self.get_field_value(self.BOWTIEGRCH38REFINDEXPREFIX__FIELD_NAME.field_name)

    def set_BowtieIndexDirectory_field(self, value: Optional[str]):
        """
        Set data field with field name 'BowtieIndexDirectory' on this record model
        """
        self.set_field_value(self.BOWTIEINDEXDIRECTORY__FIELD_NAME.field_name, value)

    def get_BowtieIndexDirectory_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BowtieIndexDirectory' from this record model
        """
        return self.get_field_value(self.BOWTIEINDEXDIRECTORY__FIELD_NAME.field_name)

    def set_BroadcastMaintAlert_field(self, value: Optional[bool]):
        """
        Set data field with field name 'BroadcastMaintAlert' on this record model
        """
        self.set_field_value(self.BROADCASTMAINTALERT__FIELD_NAME.field_name, value)

    def get_BroadcastMaintAlert_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'BroadcastMaintAlert' from this record model
        """
        return self.get_field_value(self.BROADCASTMAINTALERT__FIELD_NAME.field_name)

    def set_BroadcastMaintUsers_field(self, value: Optional[str]):
        """
        Set data field with field name 'BroadcastMaintUsers' on this record model
        """
        self.set_field_value(self.BROADCASTMAINTUSERS__FIELD_NAME.field_name, value)

    def get_BroadcastMaintUsers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BroadcastMaintUsers' from this record model
        """
        return self.get_field_value(self.BROADCASTMAINTUSERS__FIELD_NAME.field_name)

    def set_CanModifyExistingVSMTPItems_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CanModifyExistingVSMTPItems' on this record model
        """
        self.set_field_value(self.CANMODIFYEXISTINGVSMTPITEMS__FIELD_NAME.field_name, value)

    def get_CanModifyExistingVSMTPItems_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CanModifyExistingVSMTPItems' from this record model
        """
        return self.get_field_value(self.CANMODIFYEXISTINGVSMTPITEMS__FIELD_NAME.field_name)

    def set_ConsumableDataTypes_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableDataTypes' on this record model
        """
        self.set_field_value(self.CONSUMABLEDATATYPES__FIELD_NAME.field_name, value)

    def get_ConsumableDataTypes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableDataTypes' from this record model
        """
        return self.get_field_value(self.CONSUMABLEDATATYPES__FIELD_NAME.field_name)

    def set_ConsumableDirectories_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableDirectories' on this record model
        """
        self.set_field_value(self.CONSUMABLEDIRECTORIES__FIELD_NAME.field_name, value)

    def get_ConsumableDirectories_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableDirectories' from this record model
        """
        return self.get_field_value(self.CONSUMABLEDIRECTORIES__FIELD_NAME.field_name)

    def set_ConsumableTrackingAttribute_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableTrackingAttribute' on this record model
        """
        self.set_field_value(self.CONSUMABLETRACKINGATTRIBUTE__FIELD_NAME.field_name, value)

    def get_ConsumableTrackingAttribute_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableTrackingAttribute' from this record model
        """
        return self.get_field_value(self.CONSUMABLETRACKINGATTRIBUTE__FIELD_NAME.field_name)

    def set_ConsumableTypeMaxTemp_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableTypeMaxTemp' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPEMAXTEMP__FIELD_NAME.field_name, value)

    def get_ConsumableTypeMaxTemp_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableTypeMaxTemp' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPEMAXTEMP__FIELD_NAME.field_name)

    def set_CoolingStorageUnitTypes_field(self, value: Optional[str]):
        """
        Set data field with field name 'CoolingStorageUnitTypes' on this record model
        """
        self.set_field_value(self.COOLINGSTORAGEUNITTYPES__FIELD_NAME.field_name, value)

    def get_CoolingStorageUnitTypes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CoolingStorageUnitTypes' from this record model
        """
        return self.get_field_value(self.COOLINGSTORAGEUNITTYPES__FIELD_NAME.field_name)

    def set_CreateInWorkflow_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CreateInWorkflow' on this record model
        """
        self.set_field_value(self.CREATEINWORKFLOW__FIELD_NAME.field_name, value)

    def get_CreateInWorkflow_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CreateInWorkflow' from this record model
        """
        return self.get_field_value(self.CREATEINWORKFLOW__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DefaultELNExperimentGroupRoles_field(self, value: Optional[str]):
        """
        Set data field with field name 'DefaultELNExperimentGroupRoles' on this record model
        """
        self.set_field_value(self.DEFAULTELNEXPERIMENTGROUPROLES__FIELD_NAME.field_name, value)

    def get_DefaultELNExperimentGroupRoles_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DefaultELNExperimentGroupRoles' from this record model
        """
        return self.get_field_value(self.DEFAULTELNEXPERIMENTGROUPROLES__FIELD_NAME.field_name)

    def set_DefaultELNExperimentRoles_field(self, value: Optional[str]):
        """
        Set data field with field name 'DefaultELNExperimentRoles' on this record model
        """
        self.set_field_value(self.DEFAULTELNEXPERIMENTROLES__FIELD_NAME.field_name, value)

    def get_DefaultELNExperimentRoles_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DefaultELNExperimentRoles' from this record model
        """
        return self.get_field_value(self.DEFAULTELNEXPERIMENTROLES__FIELD_NAME.field_name)

    def set_DefaultELNExperimentRolesHelp_field(self, value: Optional[str]):
        """
        Set data field with field name 'DefaultELNExperimentRolesHelp' on this record model
        """
        self.set_field_value(self.DEFAULTELNEXPERIMENTROLESHELP__FIELD_NAME.field_name, value)

    def get_DefaultELNExperimentRolesHelp_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DefaultELNExperimentRolesHelp' from this record model
        """
        return self.get_field_value(self.DEFAULTELNEXPERIMENTROLESHELP__FIELD_NAME.field_name)

    def set_Delimiter_field(self, value: Optional[str]):
        """
        Set data field with field name 'Delimiter' on this record model
        """
        self.set_field_value(self.DELIMITER__FIELD_NAME.field_name, value)

    def get_Delimiter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Delimiter' from this record model
        """
        return self.get_field_value(self.DELIMITER__FIELD_NAME.field_name)

    def set_ELNCreateSmplExtentionMultiSel_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ELNCreateSmplExtentionMultiSel' on this record model
        """
        self.set_field_value(self.ELNCREATESMPLEXTENTIONMULTISEL__FIELD_NAME.field_name, value)

    def get_ELNCreateSmplExtentionMultiSel_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ELNCreateSmplExtentionMultiSel' from this record model
        """
        return self.get_field_value(self.ELNCREATESMPLEXTENTIONMULTISEL__FIELD_NAME.field_name)

    def set_ELNImportSamplesOverride_field(self, value: Optional[str]):
        """
        Set data field with field name 'ELNImportSamplesOverride' on this record model
        """
        self.set_field_value(self.ELNIMPORTSAMPLESOVERRIDE__FIELD_NAME.field_name, value)

    def get_ELNImportSamplesOverride_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ELNImportSamplesOverride' from this record model
        """
        return self.get_field_value(self.ELNIMPORTSAMPLESOVERRIDE__FIELD_NAME.field_name)

    def set_ENotebookSignoffGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'ENotebookSignoffGroups' on this record model
        """
        self.set_field_value(self.ENOTEBOOKSIGNOFFGROUPS__FIELD_NAME.field_name, value)

    def get_ENotebookSignoffGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ENotebookSignoffGroups' from this record model
        """
        return self.get_field_value(self.ENOTEBOOKSIGNOFFGROUPS__FIELD_NAME.field_name)

    def set_ENotebookSignoffGroupsHelp_field(self, value: Optional[str]):
        """
        Set data field with field name 'ENotebookSignoffGroupsHelp' on this record model
        """
        self.set_field_value(self.ENOTEBOOKSIGNOFFGROUPSHELP__FIELD_NAME.field_name, value)

    def get_ENotebookSignoffGroupsHelp_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ENotebookSignoffGroupsHelp' from this record model
        """
        return self.get_field_value(self.ENOTEBOOKSIGNOFFGROUPSHELP__FIELD_NAME.field_name)

    def set_Email_field(self, value: Optional[str]):
        """
        Set data field with field name 'Email' on this record model
        """
        self.set_field_value(self.EMAIL__FIELD_NAME.field_name, value)

    def get_Email_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Email' from this record model
        """
        return self.get_field_value(self.EMAIL__FIELD_NAME.field_name)

    def set_EnableAutoLotPopulation_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableAutoLotPopulation' on this record model
        """
        self.set_field_value(self.ENABLEAUTOLOTPOPULATION__FIELD_NAME.field_name, value)

    def get_EnableAutoLotPopulation_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableAutoLotPopulation' from this record model
        """
        return self.get_field_value(self.ENABLEAUTOLOTPOPULATION__FIELD_NAME.field_name)

    def set_EnableBaselineSampleRec_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableBaselineSampleRec' on this record model
        """
        self.set_field_value(self.ENABLEBASELINESAMPLEREC__FIELD_NAME.field_name, value)

    def get_EnableBaselineSampleRec_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableBaselineSampleRec' from this record model
        """
        return self.get_field_value(self.ENABLEBASELINESAMPLEREC__FIELD_NAME.field_name)

    def set_EnableDND_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableDND' on this record model
        """
        self.set_field_value(self.ENABLEDND__FIELD_NAME.field_name, value)

    def get_EnableDND_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableDND' from this record model
        """
        return self.get_field_value(self.ENABLEDND__FIELD_NAME.field_name)

    def set_EnableElnRoleCandidates_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableElnRoleCandidates' on this record model
        """
        self.set_field_value(self.ENABLEELNROLECANDIDATES__FIELD_NAME.field_name, value)

    def get_EnableElnRoleCandidates_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableElnRoleCandidates' from this record model
        """
        return self.get_field_value(self.ENABLEELNROLECANDIDATES__FIELD_NAME.field_name)

    def set_EnableMultiTenantDashboards_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableMultiTenantDashboards' on this record model
        """
        self.set_field_value(self.ENABLEMULTITENANTDASHBOARDS__FIELD_NAME.field_name, value)

    def get_EnableMultiTenantDashboards_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableMultiTenantDashboards' from this record model
        """
        return self.get_field_value(self.ENABLEMULTITENANTDASHBOARDS__FIELD_NAME.field_name)

    def set_EnforceConsumableDirectory_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnforceConsumableDirectory' on this record model
        """
        self.set_field_value(self.ENFORCECONSUMABLEDIRECTORY__FIELD_NAME.field_name, value)

    def get_EnforceConsumableDirectory_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnforceConsumableDirectory' from this record model
        """
        return self.get_field_value(self.ENFORCECONSUMABLEDIRECTORY__FIELD_NAME.field_name)

    def set_EnforceExpiration_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnforceExpiration' on this record model
        """
        self.set_field_value(self.ENFORCEEXPIRATION__FIELD_NAME.field_name, value)

    def get_EnforceExpiration_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnforceExpiration' from this record model
        """
        return self.get_field_value(self.ENFORCEEXPIRATION__FIELD_NAME.field_name)

    def set_EnforceSufficientQuantity_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnforceSufficientQuantity' on this record model
        """
        self.set_field_value(self.ENFORCESUFFICIENTQUANTITY__FIELD_NAME.field_name, value)

    def get_EnforceSufficientQuantity_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnforceSufficientQuantity' from this record model
        """
        return self.get_field_value(self.ENFORCESUFFICIENTQUANTITY__FIELD_NAME.field_name)

    def set_EnumerateStorage_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnumerateStorage' on this record model
        """
        self.set_field_value(self.ENUMERATESTORAGE__FIELD_NAME.field_name, value)

    def get_EnumerateStorage_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnumerateStorage' from this record model
        """
        return self.get_field_value(self.ENUMERATESTORAGE__FIELD_NAME.field_name)

    def set_EsigRequireAllAuthor_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EsigRequireAllAuthor' on this record model
        """
        self.set_field_value(self.ESIGREQUIREALLAUTHOR__FIELD_NAME.field_name, value)

    def get_EsigRequireAllAuthor_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EsigRequireAllAuthor' from this record model
        """
        return self.get_field_value(self.ESIGREQUIREALLAUTHOR__FIELD_NAME.field_name)

    def set_EsigRequireAllAuthorHelp_field(self, value: Optional[str]):
        """
        Set data field with field name 'EsigRequireAllAuthorHelp' on this record model
        """
        self.set_field_value(self.ESIGREQUIREALLAUTHORHELP__FIELD_NAME.field_name, value)

    def get_EsigRequireAllAuthorHelp_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EsigRequireAllAuthorHelp' from this record model
        """
        return self.get_field_value(self.ESIGREQUIREALLAUTHORHELP__FIELD_NAME.field_name)

    def set_EsignEmailOwnerNotebookUnlock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EsignEmailOwnerNotebookUnlock' on this record model
        """
        self.set_field_value(self.ESIGNEMAILOWNERNOTEBOOKUNLOCK__FIELD_NAME.field_name, value)

    def get_EsignEmailOwnerNotebookUnlock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EsignEmailOwnerNotebookUnlock' from this record model
        """
        return self.get_field_value(self.ESIGNEMAILOWNERNOTEBOOKUNLOCK__FIELD_NAME.field_name)

    def set_EsignSendEmailOnDecision_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EsignSendEmailOnDecision' on this record model
        """
        self.set_field_value(self.ESIGNSENDEMAILONDECISION__FIELD_NAME.field_name, value)

    def get_EsignSendEmailOnDecision_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EsignSendEmailOnDecision' from this record model
        """
        return self.get_field_value(self.ESIGNSENDEMAILONDECISION__FIELD_NAME.field_name)

    def set_EsignSendEmailOnEntryUnlock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EsignSendEmailOnEntryUnlock' on this record model
        """
        self.set_field_value(self.ESIGNSENDEMAILONENTRYUNLOCK__FIELD_NAME.field_name, value)

    def get_EsignSendEmailOnEntryUnlock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EsignSendEmailOnEntryUnlock' from this record model
        """
        return self.get_field_value(self.ESIGNSENDEMAILONENTRYUNLOCK__FIELD_NAME.field_name)

    def set_EsignSendEmailOnNotebookUnlock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EsignSendEmailOnNotebookUnlock' on this record model
        """
        self.set_field_value(self.ESIGNSENDEMAILONNOTEBOOKUNLOCK__FIELD_NAME.field_name, value)

    def get_EsignSendEmailOnNotebookUnlock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EsignSendEmailOnNotebookUnlock' from this record model
        """
        return self.get_field_value(self.ESIGNSENDEMAILONNOTEBOOKUNLOCK__FIELD_NAME.field_name)

    def set_ExperimentBannerExpFields_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentBannerExpFields' on this record model
        """
        self.set_field_value(self.EXPERIMENTBANNEREXPFIELDS__FIELD_NAME.field_name, value)

    def get_ExperimentBannerExpFields_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentBannerExpFields' from this record model
        """
        return self.get_field_value(self.EXPERIMENTBANNEREXPFIELDS__FIELD_NAME.field_name)

    def set_ExperimentBannerParentFields_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentBannerParentFields' on this record model
        """
        self.set_field_value(self.EXPERIMENTBANNERPARENTFIELDS__FIELD_NAME.field_name, value)

    def get_ExperimentBannerParentFields_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentBannerParentFields' from this record model
        """
        return self.get_field_value(self.EXPERIMENTBANNERPARENTFIELDS__FIELD_NAME.field_name)

    def set_GRChFASTAPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'GRChFASTAPath' on this record model
        """
        self.set_field_value(self.GRCHFASTAPATH__FIELD_NAME.field_name, value)

    def get_GRChFASTAPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GRChFASTAPath' from this record model
        """
        return self.get_field_value(self.GRCHFASTAPATH__FIELD_NAME.field_name)

    def set_GenerateItemBarcode_field(self, value: Optional[bool]):
        """
        Set data field with field name 'GenerateItemBarcode' on this record model
        """
        self.set_field_value(self.GENERATEITEMBARCODE__FIELD_NAME.field_name, value)

    def get_GenerateItemBarcode_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'GenerateItemBarcode' from this record model
        """
        return self.get_field_value(self.GENERATEITEMBARCODE__FIELD_NAME.field_name)

    def set_ImportBaseLineDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImportBaseLineDescription' on this record model
        """
        self.set_field_value(self.IMPORTBASELINEDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ImportBaseLineDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImportBaseLineDescription' from this record model
        """
        return self.get_field_value(self.IMPORTBASELINEDESCRIPTION__FIELD_NAME.field_name)

    def set_ImportExportExemplarConfigText_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImportExportExemplarConfigText' on this record model
        """
        self.set_field_value(self.IMPORTEXPORTEXEMPLARCONFIGTEXT__FIELD_NAME.field_name, value)

    def get_ImportExportExemplarConfigText_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImportExportExemplarConfigText' from this record model
        """
        return self.get_field_value(self.IMPORTEXPORTEXEMPLARCONFIGTEXT__FIELD_NAME.field_name)

    def set_ImportExportSystemConfigsText_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImportExportSystemConfigsText' on this record model
        """
        self.set_field_value(self.IMPORTEXPORTSYSTEMCONFIGSTEXT__FIELD_NAME.field_name, value)

    def get_ImportExportSystemConfigsText_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImportExportSystemConfigsText' from this record model
        """
        return self.get_field_value(self.IMPORTEXPORTSYSTEMCONFIGSTEXT__FIELD_NAME.field_name)

    def set_IndexedStorageType_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexedStorageType' on this record model
        """
        self.set_field_value(self.INDEXEDSTORAGETYPE__FIELD_NAME.field_name, value)

    def get_IndexedStorageType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexedStorageType' from this record model
        """
        return self.get_field_value(self.INDEXEDSTORAGETYPE__FIELD_NAME.field_name)

    def set_InstrumentForceIdvRegistration_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InstrumentForceIdvRegistration' on this record model
        """
        self.set_field_value(self.INSTRUMENTFORCEIDVREGISTRATION__FIELD_NAME.field_name, value)

    def get_InstrumentForceIdvRegistration_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InstrumentForceIdvRegistration' from this record model
        """
        return self.get_field_value(self.INSTRUMENTFORCEIDVREGISTRATION__FIELD_NAME.field_name)

    def set_MatManEnableFeatureExt_field(self, value: Optional[bool]):
        """
        Set data field with field name 'MatManEnableFeatureExt' on this record model
        """
        self.set_field_value(self.MATMANENABLEFEATUREEXT__FIELD_NAME.field_name, value)

    def get_MatManEnableFeatureExt_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'MatManEnableFeatureExt' from this record model
        """
        return self.get_field_value(self.MATMANENABLEFEATUREEXT__FIELD_NAME.field_name)

    def set_MmForceIdvRegistration_field(self, value: Optional[bool]):
        """
        Set data field with field name 'MmForceIdvRegistration' on this record model
        """
        self.set_field_value(self.MMFORCEIDVREGISTRATION__FIELD_NAME.field_name, value)

    def get_MmForceIdvRegistration_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'MmForceIdvRegistration' from this record model
        """
        return self.get_field_value(self.MMFORCEIDVREGISTRATION__FIELD_NAME.field_name)

    def set_MmSampleFieldsToDisplay_field(self, value: Optional[str]):
        """
        Set data field with field name 'MmSampleFieldsToDisplay' on this record model
        """
        self.set_field_value(self.MMSAMPLEFIELDSTODISPLAY__FIELD_NAME.field_name, value)

    def get_MmSampleFieldsToDisplay_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MmSampleFieldsToDisplay' from this record model
        """
        return self.get_field_value(self.MMSAMPLEFIELDSTODISPLAY__FIELD_NAME.field_name)

    def set_MultiLayerPlatePoolIfSameType_field(self, value: Optional[bool]):
        """
        Set data field with field name 'MultiLayerPlatePoolIfSameType' on this record model
        """
        self.set_field_value(self.MULTILAYERPLATEPOOLIFSAMETYPE__FIELD_NAME.field_name, value)

    def get_MultiLayerPlatePoolIfSameType_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'MultiLayerPlatePoolIfSameType' from this record model
        """
        return self.get_field_value(self.MULTILAYERPLATEPOOLIFSAMETYPE__FIELD_NAME.field_name)

    def set_NativePyExecPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'NativePyExecPath' on this record model
        """
        self.set_field_value(self.NATIVEPYEXECPATH__FIELD_NAME.field_name, value)

    def get_NativePyExecPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NativePyExecPath' from this record model
        """
        return self.get_field_value(self.NATIVEPYEXECPATH__FIELD_NAME.field_name)

    def set_NativeRExecPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'NativeRExecPath' on this record model
        """
        self.set_field_value(self.NATIVEREXECPATH__FIELD_NAME.field_name, value)

    def get_NativeRExecPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NativeRExecPath' from this record model
        """
        return self.get_field_value(self.NATIVEREXECPATH__FIELD_NAME.field_name)

    def set_NewConsumableDirName_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewConsumableDirName' on this record model
        """
        self.set_field_value(self.NEWCONSUMABLEDIRNAME__FIELD_NAME.field_name, value)

    def get_NewConsumableDirName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewConsumableDirName' from this record model
        """
        return self.get_field_value(self.NEWCONSUMABLEDIRNAME__FIELD_NAME.field_name)

    def set_NotificationUsers_field(self, value: Optional[str]):
        """
        Set data field with field name 'NotificationUsers' on this record model
        """
        self.set_field_value(self.NOTIFICATIONUSERS__FIELD_NAME.field_name, value)

    def get_NotificationUsers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NotificationUsers' from this record model
        """
        return self.get_field_value(self.NOTIFICATIONUSERS__FIELD_NAME.field_name)

    def set_NotifyMaintTechnicians_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NotifyMaintTechnicians' on this record model
        """
        self.set_field_value(self.NOTIFYMAINTTECHNICIANS__FIELD_NAME.field_name, value)

    def get_NotifyMaintTechnicians_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NotifyMaintTechnicians' from this record model
        """
        return self.get_field_value(self.NOTIFYMAINTTECHNICIANS__FIELD_NAME.field_name)

    def set_OverrideGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'OverrideGroups' on this record model
        """
        self.set_field_value(self.OVERRIDEGROUPS__FIELD_NAME.field_name, value)

    def get_OverrideGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OverrideGroups' from this record model
        """
        return self.get_field_value(self.OVERRIDEGROUPS__FIELD_NAME.field_name)

    def set_PlasmidDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlasmidDataType' on this record model
        """
        self.set_field_value(self.PLASMIDDATATYPE__FIELD_NAME.field_name, value)

    def get_PlasmidDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlasmidDataType' from this record model
        """
        return self.get_field_value(self.PLASMIDDATATYPE__FIELD_NAME.field_name)

    def set_PlateDesignerPrimaryTypes_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateDesignerPrimaryTypes' on this record model
        """
        self.set_field_value(self.PLATEDESIGNERPRIMARYTYPES__FIELD_NAME.field_name, value)

    def get_PlateDesignerPrimaryTypes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateDesignerPrimaryTypes' from this record model
        """
        return self.get_field_value(self.PLATEDESIGNERPRIMARYTYPES__FIELD_NAME.field_name)

    def set_Port_field(self, value: Optional[int]):
        """
        Set data field with field name 'Port' on this record model
        """
        self.set_field_value(self.PORT__FIELD_NAME.field_name, value)

    def get_Port_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Port' from this record model
        """
        return self.get_field_value(self.PORT__FIELD_NAME.field_name)

    def set_PreNotificationInterval_field(self, value: Optional[int]):
        """
        Set data field with field name 'PreNotificationInterval' on this record model
        """
        self.set_field_value(self.PRENOTIFICATIONINTERVAL__FIELD_NAME.field_name, value)

    def get_PreNotificationInterval_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PreNotificationInterval' from this record model
        """
        return self.get_field_value(self.PRENOTIFICATIONINTERVAL__FIELD_NAME.field_name)

    def set_PrintConsumableBarcode_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PrintConsumableBarcode' on this record model
        """
        self.set_field_value(self.PRINTCONSUMABLEBARCODE__FIELD_NAME.field_name, value)

    def get_PrintConsumableBarcode_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PrintConsumableBarcode' from this record model
        """
        return self.get_field_value(self.PRINTCONSUMABLEBARCODE__FIELD_NAME.field_name)

    def set_QCMailingList_field(self, value: Optional[str]):
        """
        Set data field with field name 'QCMailingList' on this record model
        """
        self.set_field_value(self.QCMAILINGLIST__FIELD_NAME.field_name, value)

    def get_QCMailingList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QCMailingList' from this record model
        """
        return self.get_field_value(self.QCMAILINGLIST__FIELD_NAME.field_name)

    def set_QuantityTracking_field(self, value: Optional[bool]):
        """
        Set data field with field name 'QuantityTracking' on this record model
        """
        self.set_field_value(self.QUANTITYTRACKING__FIELD_NAME.field_name, value)

    def get_QuantityTracking_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'QuantityTracking' from this record model
        """
        return self.get_field_value(self.QUANTITYTRACKING__FIELD_NAME.field_name)

    def set_RTransExecPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'RTransExecPath' on this record model
        """
        self.set_field_value(self.RTRANSEXECPATH__FIELD_NAME.field_name, value)

    def get_RTransExecPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RTransExecPath' from this record model
        """
        return self.get_field_value(self.RTRANSEXECPATH__FIELD_NAME.field_name)

    def set_RecordReportAccessGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecordReportAccessGroups' on this record model
        """
        self.set_field_value(self.RECORDREPORTACCESSGROUPS__FIELD_NAME.field_name, value)

    def get_RecordReportAccessGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecordReportAccessGroups' from this record model
        """
        return self.get_field_value(self.RECORDREPORTACCESSGROUPS__FIELD_NAME.field_name)

    def set_RecordReportDataTypeList_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecordReportDataTypeList' on this record model
        """
        self.set_field_value(self.RECORDREPORTDATATYPELIST__FIELD_NAME.field_name, value)

    def get_RecordReportDataTypeList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecordReportDataTypeList' from this record model
        """
        return self.get_field_value(self.RECORDREPORTDATATYPELIST__FIELD_NAME.field_name)

    def set_RecordStorageEvents_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RecordStorageEvents' on this record model
        """
        self.set_field_value(self.RECORDSTORAGEEVENTS__FIELD_NAME.field_name, value)

    def get_RecordStorageEvents_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RecordStorageEvents' from this record model
        """
        return self.get_field_value(self.RECORDSTORAGEEVENTS__FIELD_NAME.field_name)

    def set_ReqPortalManifestFieldNames_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReqPortalManifestFieldNames' on this record model
        """
        self.set_field_value(self.REQPORTALMANIFESTFIELDNAMES__FIELD_NAME.field_name, value)

    def get_ReqPortalManifestFieldNames_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReqPortalManifestFieldNames' from this record model
        """
        return self.get_field_value(self.REQPORTALMANIFESTFIELDNAMES__FIELD_NAME.field_name)

    def set_RequireESignature_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequireESignature' on this record model
        """
        self.set_field_value(self.REQUIREESIGNATURE__FIELD_NAME.field_name, value)

    def get_RequireESignature_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequireESignature' from this record model
        """
        return self.get_field_value(self.REQUIREESIGNATURE__FIELD_NAME.field_name)

    def set_RestrictAccessByLocation_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RestrictAccessByLocation' on this record model
        """
        self.set_field_value(self.RESTRICTACCESSBYLOCATION__FIELD_NAME.field_name, value)

    def get_RestrictAccessByLocation_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RestrictAccessByLocation' from this record model
        """
        return self.get_field_value(self.RESTRICTACCESSBYLOCATION__FIELD_NAME.field_name)

    def set_ReviewerVisibleRoleType_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReviewerVisibleRoleType' on this record model
        """
        self.set_field_value(self.REVIEWERVISIBLEROLETYPE__FIELD_NAME.field_name, value)

    def get_ReviewerVisibleRoleType_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReviewerVisibleRoleType' from this record model
        """
        return self.get_field_value(self.REVIEWERVISIBLEROLETYPE__FIELD_NAME.field_name)

    def set_S3AccessKeyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'S3AccessKeyId' on this record model
        """
        self.set_field_value(self.S3ACCESSKEYID__FIELD_NAME.field_name, value)

    def get_S3AccessKeyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'S3AccessKeyId' from this record model
        """
        return self.get_field_value(self.S3ACCESSKEYID__FIELD_NAME.field_name)

    def set_S3SecretAcessKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'S3SecretAcessKey' on this record model
        """
        self.set_field_value(self.S3SECRETACESSKEY__FIELD_NAME.field_name, value)

    def get_S3SecretAcessKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'S3SecretAcessKey' from this record model
        """
        return self.get_field_value(self.S3SECRETACESSKEY__FIELD_NAME.field_name)

    def set_SDMSRootPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'SDMSRootPath' on this record model
        """
        self.set_field_value(self.SDMSROOTPATH__FIELD_NAME.field_name, value)

    def get_SDMSRootPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SDMSRootPath' from this record model
        """
        return self.get_field_value(self.SDMSROOTPATH__FIELD_NAME.field_name)

    def set_SMTPServer_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMTPServer' on this record model
        """
        self.set_field_value(self.SMTPSERVER__FIELD_NAME.field_name, value)

    def get_SMTPServer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMTPServer' from this record model
        """
        return self.get_field_value(self.SMTPSERVER__FIELD_NAME.field_name)

    def set_SaasMaxNumOfSamplesPerTrans_field(self, value: Optional[int]):
        """
        Set data field with field name 'SaasMaxNumOfSamplesPerTrans' on this record model
        """
        self.set_field_value(self.SAASMAXNUMOFSAMPLESPERTRANS__FIELD_NAME.field_name, value)

    def get_SaasMaxNumOfSamplesPerTrans_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SaasMaxNumOfSamplesPerTrans' from this record model
        """
        return self.get_field_value(self.SAASMAXNUMOFSAMPLESPERTRANS__FIELD_NAME.field_name)

    def set_SaasMaxSamples_field(self, value: Optional[int]):
        """
        Set data field with field name 'SaasMaxSamples' on this record model
        """
        self.set_field_value(self.SAASMAXSAMPLES__FIELD_NAME.field_name, value)

    def get_SaasMaxSamples_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SaasMaxSamples' from this record model
        """
        return self.get_field_value(self.SAASMAXSAMPLES__FIELD_NAME.field_name)

    def set_SaasMode_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SaasMode' on this record model
        """
        self.set_field_value(self.SAASMODE__FIELD_NAME.field_name, value)

    def get_SaasMode_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SaasMode' from this record model
        """
        return self.get_field_value(self.SAASMODE__FIELD_NAME.field_name)

    def set_SampleReceivingEmails_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleReceivingEmails' on this record model
        """
        self.set_field_value(self.SAMPLERECEIVINGEMAILS__FIELD_NAME.field_name, value)

    def get_SampleReceivingEmails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleReceivingEmails' from this record model
        """
        return self.get_field_value(self.SAMPLERECEIVINGEMAILS__FIELD_NAME.field_name)

    def set_SampleReceivingUserMenu_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleReceivingUserMenu' on this record model
        """
        self.set_field_value(self.SAMPLERECEIVINGUSERMENU__FIELD_NAME.field_name, value)

    def get_SampleReceivingUserMenu_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleReceivingUserMenu' from this record model
        """
        return self.get_field_value(self.SAMPLERECEIVINGUSERMENU__FIELD_NAME.field_name)

    def set_SampleTypeMaximumTemperature_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleTypeMaximumTemperature' on this record model
        """
        self.set_field_value(self.SAMPLETYPEMAXIMUMTEMPERATURE__FIELD_NAME.field_name, value)

    def get_SampleTypeMaximumTemperature_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleTypeMaximumTemperature' from this record model
        """
        return self.get_field_value(self.SAMPLETYPEMAXIMUMTEMPERATURE__FIELD_NAME.field_name)

    def set_SamtoolsExecPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'SamtoolsExecPath' on this record model
        """
        self.set_field_value(self.SAMTOOLSEXECPATH__FIELD_NAME.field_name, value)

    def get_SamtoolsExecPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SamtoolsExecPath' from this record model
        """
        return self.get_field_value(self.SAMTOOLSEXECPATH__FIELD_NAME.field_name)

    def set_SecureSocketLayer_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SecureSocketLayer' on this record model
        """
        self.set_field_value(self.SECURESOCKETLAYER__FIELD_NAME.field_name, value)

    def get_SecureSocketLayer_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SecureSocketLayer' from this record model
        """
        return self.get_field_value(self.SECURESOCKETLAYER__FIELD_NAME.field_name)

    def set_SmtpUsername_field(self, value: Optional[str]):
        """
        Set data field with field name 'SmtpUsername' on this record model
        """
        self.set_field_value(self.SMTPUSERNAME__FIELD_NAME.field_name, value)

    def get_SmtpUsername_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SmtpUsername' from this record model
        """
        return self.get_field_value(self.SMTPUSERNAME__FIELD_NAME.field_name)

    def set_StorageUnitViewerFillByConfig_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitViewerFillByConfig' on this record model
        """
        self.set_field_value(self.STORAGEUNITVIEWERFILLBYCONFIG__FIELD_NAME.field_name, value)

    def get_StorageUnitViewerFillByConfig_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitViewerFillByConfig' from this record model
        """
        return self.get_field_value(self.STORAGEUNITVIEWERFILLBYCONFIG__FIELD_NAME.field_name)

    def set_SystemPassword_field(self, value: Optional[str]):
        """
        Set data field with field name 'SystemPassword' on this record model
        """
        self.set_field_value(self.SYSTEMPASSWORD__FIELD_NAME.field_name, value)

    def get_SystemPassword_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SystemPassword' from this record model
        """
        return self.get_field_value(self.SYSTEMPASSWORD__FIELD_NAME.field_name)

    def set_TLSEnabled_field(self, value: Optional[bool]):
        """
        Set data field with field name 'TLSEnabled' on this record model
        """
        self.set_field_value(self.TLSENABLED__FIELD_NAME.field_name, value)

    def get_TLSEnabled_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'TLSEnabled' from this record model
        """
        return self.get_field_value(self.TLSENABLED__FIELD_NAME.field_name)

    def set_TLSRequired_field(self, value: Optional[bool]):
        """
        Set data field with field name 'TLSRequired' on this record model
        """
        self.set_field_value(self.TLSREQUIRED__FIELD_NAME.field_name, value)

    def get_TLSRequired_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'TLSRequired' from this record model
        """
        return self.get_field_value(self.TLSREQUIRED__FIELD_NAME.field_name)

    def set_TemperatureEnforcement_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemperatureEnforcement' on this record model
        """
        self.set_field_value(self.TEMPERATUREENFORCEMENT__FIELD_NAME.field_name, value)

    def get_TemperatureEnforcement_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemperatureEnforcement' from this record model
        """
        return self.get_field_value(self.TEMPERATUREENFORCEMENT__FIELD_NAME.field_name)

    def set_UseRequestDefaultLayout_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseRequestDefaultLayout' on this record model
        """
        self.set_field_value(self.USEREQUESTDEFAULTLAYOUT__FIELD_NAME.field_name, value)

    def get_UseRequestDefaultLayout_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseRequestDefaultLayout' from this record model
        """
        return self.get_field_value(self.USEREQUESTDEFAULTLAYOUT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_VerificationTypes_field(self, value: Optional[str]):
        """
        Set data field with field name 'VerificationTypes' on this record model
        """
        self.set_field_value(self.VERIFICATIONTYPES__FIELD_NAME.field_name, value)

    def get_VerificationTypes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VerificationTypes' from this record model
        """
        return self.get_field_value(self.VERIFICATIONTYPES__FIELD_NAME.field_name)

    def set_WitnessVisibleRoleType_field(self, value: Optional[bool]):
        """
        Set data field with field name 'WitnessVisibleRoleType' on this record model
        """
        self.set_field_value(self.WITNESSVISIBLEROLETYPE__FIELD_NAME.field_name, value)

    def get_WitnessVisibleRoleType_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'WitnessVisibleRoleType' from this record model
        """
        return self.get_field_value(self.WITNESSVISIBLEROLETYPE__FIELD_NAME.field_name)

    def set_WriteQCInputFileToUser_field(self, value: Optional[bool]):
        """
        Set data field with field name 'WriteQCInputFileToUser' on this record model
        """
        self.set_field_value(self.WRITEQCINPUTFILETOUSER__FIELD_NAME.field_name, value)

    def get_WriteQCInputFileToUser_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'WriteQCInputFileToUser' from this record model
        """
        return self.get_field_value(self.WRITEQCINPUTFILETOUSER__FIELD_NAME.field_name)


class ExemplarLabNotebookPDFModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ExemplarLabNotebookPDF
    Data Type Display Name: Sapio Lab Notebook PDF (Sapio Lab Notebook PDFs)
    Fields: FilePath, VeloxCurrentVersion, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    This data type is used to store the latest PDF file that has been generated from a given notebook.
    """
    DATA_TYPE_NAME: Final[str] = 'ExemplarLabNotebookPDF'
    DISPLAY_NAME: Final[str] = "Sapio Lab Notebook PDF"
    PLURAL_DISPLAY_NAME: Final[str] = "Sapio Lab Notebook PDFs"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ExemplarSDMSFileModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ExemplarSDMSFile
    Data Type Display Name: SDMS File (SDMS Files)
    Fields: FilePath, FileSourcePath, VeloxCurrentVersion, CreatedBy, InstrumentType, DateCreated, IsLoaded, DataRecordName, FileLastModifiedDate, FileHash, VeloxLastModifiedDate, FileCreationDate, VeloxLastModifiedBy, FileSize
    These are potentially very large files that will be stored as SDMS file. They will be retrieved through streamed download.
    """
    DATA_TYPE_NAME: Final[str] = 'ExemplarSDMSFile'
    DISPLAY_NAME: Final[str] = "SDMS File"
    PLURAL_DISPLAY_NAME: Final[str] = "SDMS Files"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILECREATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("FileCreationDate", FieldType.DATE, display_name="File Creation Date")
    FILEHASH__FIELD_NAME: Final[WrapperField] = WrapperField("FileHash", FieldType.STRING, display_name="File Hash")
    FILELASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("FileLastModifiedDate", FieldType.DATE, display_name="File Last Modified Date")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    FILESIZE__FIELD_NAME: Final[WrapperField] = WrapperField("FileSize", FieldType.LONG, display_name="File Size (Bytes)")
    FILESOURCEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FileSourcePath", FieldType.STRING, display_name="File Source Path")
    INSTRUMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentType", FieldType.STRING, display_name="Instrument Type")
    ISLOADED__FIELD_NAME: Final[WrapperField] = WrapperField("IsLoaded", FieldType.BOOLEAN, display_name="Is Loaded")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FileCreationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'FileCreationDate' on this record model
        """
        self.set_field_value(self.FILECREATIONDATE__FIELD_NAME.field_name, value)

    def get_FileCreationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FileCreationDate' from this record model
        """
        return self.get_field_value(self.FILECREATIONDATE__FIELD_NAME.field_name)

    def set_FileHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileHash' on this record model
        """
        self.set_field_value(self.FILEHASH__FIELD_NAME.field_name, value)

    def get_FileHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileHash' from this record model
        """
        return self.get_field_value(self.FILEHASH__FIELD_NAME.field_name)

    def set_FileLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'FileLastModifiedDate' on this record model
        """
        self.set_field_value(self.FILELASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_FileLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FileLastModifiedDate' from this record model
        """
        return self.get_field_value(self.FILELASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_FileSize_field(self, value: Optional[int]):
        """
        Set data field with field name 'FileSize' on this record model
        """
        self.set_field_value(self.FILESIZE__FIELD_NAME.field_name, value)

    def get_FileSize_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FileSize' from this record model
        """
        return self.get_field_value(self.FILESIZE__FIELD_NAME.field_name)

    def set_FileSourcePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileSourcePath' on this record model
        """
        self.set_field_value(self.FILESOURCEPATH__FIELD_NAME.field_name, value)

    def get_FileSourcePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileSourcePath' from this record model
        """
        return self.get_field_value(self.FILESOURCEPATH__FIELD_NAME.field_name)

    def set_InstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentType' on this record model
        """
        self.set_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_InstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentType' from this record model
        """
        return self.get_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_IsLoaded_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsLoaded' on this record model
        """
        self.set_field_value(self.ISLOADED__FIELD_NAME.field_name, value)

    def get_IsLoaded_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsLoaded' from this record model
        """
        return self.get_field_value(self.ISLOADED__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ExperimentGroupModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ExperimentGroup
    Data Type Display Name: Experiment Group (Experiment Groups)
    Fields: GroupMonth, GroupYear, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'ExperimentGroup'
    DISPLAY_NAME: Final[str] = "Experiment Group"
    PLURAL_DISPLAY_NAME: Final[str] = "Experiment Groups"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    GROUPMONTH__FIELD_NAME: Final[WrapperField] = WrapperField("GroupMonth", FieldType.PICKLIST, display_name="Group Month")
    GROUPYEAR__FIELD_NAME: Final[WrapperField] = WrapperField("GroupYear", FieldType.SHORT, display_name="Group Year")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GroupMonth_field(self, value: Optional[str]):
        """
        Set data field with field name 'GroupMonth' on this record model
        """
        self.set_field_value(self.GROUPMONTH__FIELD_NAME.field_name, value)

    def get_GroupMonth_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GroupMonth' from this record model
        """
        return self.get_field_value(self.GROUPMONTH__FIELD_NAME.field_name)

    def set_GroupYear_field(self, value: Optional[int]):
        """
        Set data field with field name 'GroupYear' on this record model
        """
        self.set_field_value(self.GROUPYEAR__FIELD_NAME.field_name, value)

    def get_GroupYear_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GroupYear' from this record model
        """
        return self.get_field_value(self.GROUPYEAR__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ExpoentialDecayModelModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ExpoentialDecayModel
    Data Type Display Name: Exponential Decay Model (Exponential Decay Models)
    Fields: MultiParentLink215, EntryName, RSquared, c, CreatedBy, d, e, RSE, RSEDOF, DateCreated, Formula, DataRecordName, SeriesName, SourceEntryId, VeloxLastModifiedDate, VeloxLastModifiedBy
    Exponential Decay follows this formula:

Y = c + (d-c) exp(-x/e)
    """
    DATA_TYPE_NAME: Final[str] = 'ExpoentialDecayModel'
    DISPLAY_NAME: Final[str] = "Exponential Decay Model"
    PLURAL_DISPLAY_NAME: Final[str] = "Exponential Decay Models"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ENTRYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("EntryName", FieldType.STRING, display_name="Entry Name")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    RSE__FIELD_NAME: Final[WrapperField] = WrapperField("RSE", FieldType.DOUBLE, display_name="Residual Standard Error")
    RSEDOF__FIELD_NAME: Final[WrapperField] = WrapperField("RSEDOF", FieldType.DOUBLE, display_name="RSE Degree of Freedom")
    RSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("RSquared", FieldType.DOUBLE, display_name="R Squared")
    SERIESNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SeriesName", FieldType.STRING, display_name="Series Name")
    SOURCEENTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("SourceEntryId", FieldType.LONG, display_name="Source Entry ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    C__FIELD_NAME: Final[WrapperField] = WrapperField("c", FieldType.DOUBLE, display_name="c")
    D__FIELD_NAME: Final[WrapperField] = WrapperField("d", FieldType.DOUBLE, display_name="d")
    E__FIELD_NAME: Final[WrapperField] = WrapperField("e", FieldType.DOUBLE, display_name="e")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EntryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'EntryName' on this record model
        """
        self.set_field_value(self.ENTRYNAME__FIELD_NAME.field_name, value)

    def get_EntryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EntryName' from this record model
        """
        return self.get_field_value(self.ENTRYNAME__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_RSE_field(self, value: Optional[float]):
        """
        Set data field with field name 'RSE' on this record model
        """
        self.set_field_value(self.RSE__FIELD_NAME.field_name, value)

    def get_RSE_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RSE' from this record model
        """
        return self.get_field_value(self.RSE__FIELD_NAME.field_name)

    def set_RSEDOF_field(self, value: Optional[float]):
        """
        Set data field with field name 'RSEDOF' on this record model
        """
        self.set_field_value(self.RSEDOF__FIELD_NAME.field_name, value)

    def get_RSEDOF_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RSEDOF' from this record model
        """
        return self.get_field_value(self.RSEDOF__FIELD_NAME.field_name)

    def set_RSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'RSquared' on this record model
        """
        self.set_field_value(self.RSQUARED__FIELD_NAME.field_name, value)

    def get_RSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RSquared' from this record model
        """
        return self.get_field_value(self.RSQUARED__FIELD_NAME.field_name)

    def set_SeriesName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SeriesName' on this record model
        """
        self.set_field_value(self.SERIESNAME__FIELD_NAME.field_name, value)

    def get_SeriesName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SeriesName' from this record model
        """
        return self.get_field_value(self.SERIESNAME__FIELD_NAME.field_name)

    def set_SourceEntryId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SourceEntryId' on this record model
        """
        self.set_field_value(self.SOURCEENTRYID__FIELD_NAME.field_name, value)

    def get_SourceEntryId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SourceEntryId' from this record model
        """
        return self.get_field_value(self.SOURCEENTRYID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_c_field(self, value: Optional[float]):
        """
        Set data field with field name 'c' on this record model
        """
        self.set_field_value(self.C__FIELD_NAME.field_name, value)

    def get_c_field(self) -> Optional[float]:
        """
        Get data field value with field name 'c' from this record model
        """
        return self.get_field_value(self.C__FIELD_NAME.field_name)

    def set_d_field(self, value: Optional[float]):
        """
        Set data field with field name 'd' on this record model
        """
        self.set_field_value(self.D__FIELD_NAME.field_name, value)

    def get_d_field(self) -> Optional[float]:
        """
        Get data field value with field name 'd' from this record model
        """
        return self.get_field_value(self.D__FIELD_NAME.field_name)

    def set_e_field(self, value: Optional[float]):
        """
        Set data field with field name 'e' on this record model
        """
        self.set_field_value(self.E__FIELD_NAME.field_name, value)

    def get_e_field(self) -> Optional[float]:
        """
        Get data field value with field name 'e' from this record model
        """
        return self.get_field_value(self.E__FIELD_NAME.field_name)


class ExponentialDecayRegParameterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ExponentialDecayRegParameter
    Data Type Display Name: Exponential Decay Regression Parameters (Exponential Decay Regression Parameters)
    Fields: CreatedBy, DataRecordName, Intercept, VeloxLastModifiedDate, VeloxLastModifiedBy, DecayRate, DateCreated, OriginalAmount
    """
    DATA_TYPE_NAME: Final[str] = 'ExponentialDecayRegParameter'
    DISPLAY_NAME: Final[str] = "Exponential Decay Regression Parameters"
    PLURAL_DISPLAY_NAME: Final[str] = "Exponential Decay Regression Parameters"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DECAYRATE__FIELD_NAME: Final[WrapperField] = WrapperField("DecayRate", FieldType.DOUBLE, display_name="Decay Rate")
    INTERCEPT__FIELD_NAME: Final[WrapperField] = WrapperField("Intercept", FieldType.DOUBLE, display_name="Intercept")
    ORIGINALAMOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("OriginalAmount", FieldType.DOUBLE, display_name="Original Amount")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DecayRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'DecayRate' on this record model
        """
        self.set_field_value(self.DECAYRATE__FIELD_NAME.field_name, value)

    def get_DecayRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DecayRate' from this record model
        """
        return self.get_field_value(self.DECAYRATE__FIELD_NAME.field_name)

    def set_Intercept_field(self, value: Optional[float]):
        """
        Set data field with field name 'Intercept' on this record model
        """
        self.set_field_value(self.INTERCEPT__FIELD_NAME.field_name, value)

    def get_Intercept_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Intercept' from this record model
        """
        return self.get_field_value(self.INTERCEPT__FIELD_NAME.field_name)

    def set_OriginalAmount_field(self, value: Optional[float]):
        """
        Set data field with field name 'OriginalAmount' on this record model
        """
        self.set_field_value(self.ORIGINALAMOUNT__FIELD_NAME.field_name, value)

    def get_OriginalAmount_field(self) -> Optional[float]:
        """
        Get data field value with field name 'OriginalAmount' from this record model
        """
        return self.get_field_value(self.ORIGINALAMOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FailedSampleDetailsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FailedSampleDetails
    Data Type Display Name: Failure Details (Failure Details)
    Fields: CreatedBy, DateCreated, ActiveTaskName, OtherSampleId, DataRecordName, FailureComment, VeloxLastModifiedDate, VeloxLastModifiedBy, ActiveWorkflowName, FailureStatus, SampleId
    """
    DATA_TYPE_NAME: Final[str] = 'FailedSampleDetails'
    DISPLAY_NAME: Final[str] = "Failure Details"
    PLURAL_DISPLAY_NAME: Final[str] = "Failure Details"
    ACTIVETASKNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveTaskName", FieldType.STRING, display_name="Task / Entry Name")
    ACTIVEWORKFLOWNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveWorkflowName", FieldType.STRING, display_name="Workflow / Experiment Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FAILURECOMMENT__FIELD_NAME: Final[WrapperField] = WrapperField("FailureComment", FieldType.STRING, display_name="Failure Comment")
    FAILURESTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("FailureStatus", FieldType.PICKLIST, display_name="Status")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Name")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveTaskName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActiveTaskName' on this record model
        """
        self.set_field_value(self.ACTIVETASKNAME__FIELD_NAME.field_name, value)

    def get_ActiveTaskName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActiveTaskName' from this record model
        """
        return self.get_field_value(self.ACTIVETASKNAME__FIELD_NAME.field_name)

    def set_ActiveWorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActiveWorkflowName' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActiveWorkflowName' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FailureComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'FailureComment' on this record model
        """
        self.set_field_value(self.FAILURECOMMENT__FIELD_NAME.field_name, value)

    def get_FailureComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FailureComment' from this record model
        """
        return self.get_field_value(self.FAILURECOMMENT__FIELD_NAME.field_name)

    def set_FailureStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'FailureStatus' on this record model
        """
        self.set_field_value(self.FAILURESTATUS__FIELD_NAME.field_name, value)

    def get_FailureStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FailureStatus' from this record model
        """
        return self.get_field_value(self.FAILURESTATUS__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FCSFileModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FCSFile
    Data Type Display Name: Flow Cytometry Standard File (Flow Cytometry Standard Files)
    Fields: FilePath, PercentCellsToTopLevel, TotalNumberOfCells, VeloxCurrentVersion, CreatedBy, RootFCSRecordId, DateCreated, IsMetadataLoaded, IsDataComplete, DataRecordName, PercentCellsToParentLevel, VeloxLastModifiedDate, VeloxLastModifiedBy, IsTopLevel
    """
    DATA_TYPE_NAME: Final[str] = 'FCSFile'
    DISPLAY_NAME: Final[str] = "Flow Cytometry Standard File"
    PLURAL_DISPLAY_NAME: Final[str] = "Flow Cytometry Standard Files"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    ISDATACOMPLETE__FIELD_NAME: Final[WrapperField] = WrapperField("IsDataComplete", FieldType.BOOLEAN, display_name="Is Data Complete")
    ISMETADATALOADED__FIELD_NAME: Final[WrapperField] = WrapperField("IsMetadataLoaded", FieldType.BOOLEAN, display_name="Is Metadata Loaded")
    ISTOPLEVEL__FIELD_NAME: Final[WrapperField] = WrapperField("IsTopLevel", FieldType.BOOLEAN, display_name="Is Top Level")
    PERCENTCELLSTOPARENTLEVEL__FIELD_NAME: Final[WrapperField] = WrapperField("PercentCellsToParentLevel", FieldType.DOUBLE, display_name="Percent Cells To Parent Level")
    PERCENTCELLSTOTOPLEVEL__FIELD_NAME: Final[WrapperField] = WrapperField("PercentCellsToTopLevel", FieldType.DOUBLE, display_name="Percent Cells To Top Level")
    ROOTFCSRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("RootFCSRecordId", FieldType.LONG, display_name="Root FCS Record Id")
    TOTALNUMBEROFCELLS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalNumberOfCells", FieldType.LONG, display_name="Total Number Of Cells")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_IsDataComplete_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsDataComplete' on this record model
        """
        self.set_field_value(self.ISDATACOMPLETE__FIELD_NAME.field_name, value)

    def get_IsDataComplete_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsDataComplete' from this record model
        """
        return self.get_field_value(self.ISDATACOMPLETE__FIELD_NAME.field_name)

    def set_IsMetadataLoaded_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsMetadataLoaded' on this record model
        """
        self.set_field_value(self.ISMETADATALOADED__FIELD_NAME.field_name, value)

    def get_IsMetadataLoaded_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsMetadataLoaded' from this record model
        """
        return self.get_field_value(self.ISMETADATALOADED__FIELD_NAME.field_name)

    def set_IsTopLevel_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsTopLevel' on this record model
        """
        self.set_field_value(self.ISTOPLEVEL__FIELD_NAME.field_name, value)

    def get_IsTopLevel_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsTopLevel' from this record model
        """
        return self.get_field_value(self.ISTOPLEVEL__FIELD_NAME.field_name)

    def set_PercentCellsToParentLevel_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentCellsToParentLevel' on this record model
        """
        self.set_field_value(self.PERCENTCELLSTOPARENTLEVEL__FIELD_NAME.field_name, value)

    def get_PercentCellsToParentLevel_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentCellsToParentLevel' from this record model
        """
        return self.get_field_value(self.PERCENTCELLSTOPARENTLEVEL__FIELD_NAME.field_name)

    def set_PercentCellsToTopLevel_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentCellsToTopLevel' on this record model
        """
        self.set_field_value(self.PERCENTCELLSTOTOPLEVEL__FIELD_NAME.field_name, value)

    def get_PercentCellsToTopLevel_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentCellsToTopLevel' from this record model
        """
        return self.get_field_value(self.PERCENTCELLSTOTOPLEVEL__FIELD_NAME.field_name)

    def set_RootFCSRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'RootFCSRecordId' on this record model
        """
        self.set_field_value(self.ROOTFCSRECORDID__FIELD_NAME.field_name, value)

    def get_RootFCSRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RootFCSRecordId' from this record model
        """
        return self.get_field_value(self.ROOTFCSRECORDID__FIELD_NAME.field_name)

    def set_TotalNumberOfCells_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalNumberOfCells' on this record model
        """
        self.set_field_value(self.TOTALNUMBEROFCELLS__FIELD_NAME.field_name, value)

    def get_TotalNumberOfCells_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalNumberOfCells' from this record model
        """
        return self.get_field_value(self.TOTALNUMBEROFCELLS__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FCSStatisticModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FCSStatistic
    Data Type Display Name: Flow Cytometry Statistic (Flow Cytometry Statistic)
    Fields: ChannelName, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, NumericValue, StatName
    A statistic record for FCS file, usually for a specific channel so they are not suited directly added to the FCSFile record.
    """
    DATA_TYPE_NAME: Final[str] = 'FCSStatistic'
    DISPLAY_NAME: Final[str] = "Flow Cytometry Statistic"
    PLURAL_DISPLAY_NAME: Final[str] = "Flow Cytometry Statistic"
    CHANNELNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ChannelName", FieldType.STRING, display_name="Channel")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    NUMERICVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("NumericValue", FieldType.DOUBLE, display_name="Numeric Value")
    STATNAME__FIELD_NAME: Final[WrapperField] = WrapperField("StatName", FieldType.STRING, display_name="Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChannelName' on this record model
        """
        self.set_field_value(self.CHANNELNAME__FIELD_NAME.field_name, value)

    def get_ChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChannelName' from this record model
        """
        return self.get_field_value(self.CHANNELNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_NumericValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'NumericValue' on this record model
        """
        self.set_field_value(self.NUMERICVALUE__FIELD_NAME.field_name, value)

    def get_NumericValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NumericValue' from this record model
        """
        return self.get_field_value(self.NUMERICVALUE__FIELD_NAME.field_name)

    def set_StatName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StatName' on this record model
        """
        self.set_field_value(self.STATNAME__FIELD_NAME.field_name, value)

    def get_StatName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StatName' from this record model
        """
        return self.get_field_value(self.STATNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FermentationResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FermentationResult
    Data Type Display Name: Fermentation Result (Fermentation Results)
    Fields: Temperature, O2, CreatedBy, DO1, DateCreated, AIR, OUR, AGIT, CER, DataRecordName, VeloxLastModifiedDate, PH, VeloxLastModifiedBy, LH, TOTFLOW
    """
    DATA_TYPE_NAME: Final[str] = 'FermentationResult'
    DISPLAY_NAME: Final[str] = "Fermentation Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Fermentation Results"
    AGIT__FIELD_NAME: Final[WrapperField] = WrapperField("AGIT", FieldType.DOUBLE, display_name="Agitation (rpm)")
    AIR__FIELD_NAME: Final[WrapperField] = WrapperField("AIR", FieldType.DOUBLE, display_name="AIR (lpm)")
    CER__FIELD_NAME: Final[WrapperField] = WrapperField("CER", FieldType.DOUBLE, display_name="Carbon Dioxide Evolution Rate (mmol/L-hr)")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DO1__FIELD_NAME: Final[WrapperField] = WrapperField("DO1", FieldType.DOUBLE, display_name="Dissolved Oxygen (%)")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    LH__FIELD_NAME: Final[WrapperField] = WrapperField("LH", FieldType.DOUBLE, display_name="Log Hour")
    O2__FIELD_NAME: Final[WrapperField] = WrapperField("O2", FieldType.DOUBLE, display_name="Oxygen (lpm)")
    OUR__FIELD_NAME: Final[WrapperField] = WrapperField("OUR", FieldType.DOUBLE, display_name="Oxygen Uptake Rate (mmol/L-hr)")
    PH__FIELD_NAME: Final[WrapperField] = WrapperField("PH", FieldType.DOUBLE, display_name="PH")
    TOTFLOW__FIELD_NAME: Final[WrapperField] = WrapperField("TOTFLOW", FieldType.DOUBLE, display_name="Total Flow (lpm)")
    TEMPERATURE__FIELD_NAME: Final[WrapperField] = WrapperField("Temperature", FieldType.DOUBLE, display_name="Temperature (C)")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AGIT_field(self, value: Optional[float]):
        """
        Set data field with field name 'AGIT' on this record model
        """
        self.set_field_value(self.AGIT__FIELD_NAME.field_name, value)

    def get_AGIT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AGIT' from this record model
        """
        return self.get_field_value(self.AGIT__FIELD_NAME.field_name)

    def set_AIR_field(self, value: Optional[float]):
        """
        Set data field with field name 'AIR' on this record model
        """
        self.set_field_value(self.AIR__FIELD_NAME.field_name, value)

    def get_AIR_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AIR' from this record model
        """
        return self.get_field_value(self.AIR__FIELD_NAME.field_name)

    def set_CER_field(self, value: Optional[float]):
        """
        Set data field with field name 'CER' on this record model
        """
        self.set_field_value(self.CER__FIELD_NAME.field_name, value)

    def get_CER_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CER' from this record model
        """
        return self.get_field_value(self.CER__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DO1_field(self, value: Optional[float]):
        """
        Set data field with field name 'DO1' on this record model
        """
        self.set_field_value(self.DO1__FIELD_NAME.field_name, value)

    def get_DO1_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DO1' from this record model
        """
        return self.get_field_value(self.DO1__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_LH_field(self, value: Optional[float]):
        """
        Set data field with field name 'LH' on this record model
        """
        self.set_field_value(self.LH__FIELD_NAME.field_name, value)

    def get_LH_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LH' from this record model
        """
        return self.get_field_value(self.LH__FIELD_NAME.field_name)

    def set_O2_field(self, value: Optional[float]):
        """
        Set data field with field name 'O2' on this record model
        """
        self.set_field_value(self.O2__FIELD_NAME.field_name, value)

    def get_O2_field(self) -> Optional[float]:
        """
        Get data field value with field name 'O2' from this record model
        """
        return self.get_field_value(self.O2__FIELD_NAME.field_name)

    def set_OUR_field(self, value: Optional[float]):
        """
        Set data field with field name 'OUR' on this record model
        """
        self.set_field_value(self.OUR__FIELD_NAME.field_name, value)

    def get_OUR_field(self) -> Optional[float]:
        """
        Get data field value with field name 'OUR' from this record model
        """
        return self.get_field_value(self.OUR__FIELD_NAME.field_name)

    def set_PH_field(self, value: Optional[float]):
        """
        Set data field with field name 'PH' on this record model
        """
        self.set_field_value(self.PH__FIELD_NAME.field_name, value)

    def get_PH_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PH' from this record model
        """
        return self.get_field_value(self.PH__FIELD_NAME.field_name)

    def set_TOTFLOW_field(self, value: Optional[float]):
        """
        Set data field with field name 'TOTFLOW' on this record model
        """
        self.set_field_value(self.TOTFLOW__FIELD_NAME.field_name, value)

    def get_TOTFLOW_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TOTFLOW' from this record model
        """
        return self.get_field_value(self.TOTFLOW__FIELD_NAME.field_name)

    def set_Temperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'Temperature' on this record model
        """
        self.set_field_value(self.TEMPERATURE__FIELD_NAME.field_name, value)

    def get_Temperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Temperature' from this record model
        """
        return self.get_field_value(self.TEMPERATURE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FileBridgeConnectionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FileBridgeConnection
    Data Type Display Name: File Bridge Connection (File Bridge Connections)
    Fields: ConnectionName, CreatedBy, DataRecordName, VeloxLastModifiedDate, AuthToken, VeloxLastModifiedBy, DateCreated, AgentRoot, ProxyHost, ProxyPort, AesKey
    This data type describes the configuration of a File Bridge Connection to be used by Exemplar.
    """
    DATA_TYPE_NAME: Final[str] = 'FileBridgeConnection'
    DISPLAY_NAME: Final[str] = "File Bridge Connection"
    PLURAL_DISPLAY_NAME: Final[str] = "File Bridge Connections"
    AESKEY__FIELD_NAME: Final[WrapperField] = WrapperField("AesKey", FieldType.STRING, display_name="AES Key")
    AGENTROOT__FIELD_NAME: Final[WrapperField] = WrapperField("AgentRoot", FieldType.STRING, display_name="Agent Root")
    AUTHTOKEN__FIELD_NAME: Final[WrapperField] = WrapperField("AuthToken", FieldType.STRING, display_name="Auth Token")
    CONNECTIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConnectionName", FieldType.STRING, display_name="Connection Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    PROXYHOST__FIELD_NAME: Final[WrapperField] = WrapperField("ProxyHost", FieldType.STRING, display_name="Proxy Host")
    PROXYPORT__FIELD_NAME: Final[WrapperField] = WrapperField("ProxyPort", FieldType.INTEGER, display_name="Proxy Port")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AesKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'AesKey' on this record model
        """
        self.set_field_value(self.AESKEY__FIELD_NAME.field_name, value)

    def get_AesKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AesKey' from this record model
        """
        return self.get_field_value(self.AESKEY__FIELD_NAME.field_name)

    def set_AgentRoot_field(self, value: Optional[str]):
        """
        Set data field with field name 'AgentRoot' on this record model
        """
        self.set_field_value(self.AGENTROOT__FIELD_NAME.field_name, value)

    def get_AgentRoot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AgentRoot' from this record model
        """
        return self.get_field_value(self.AGENTROOT__FIELD_NAME.field_name)

    def set_AuthToken_field(self, value: Optional[str]):
        """
        Set data field with field name 'AuthToken' on this record model
        """
        self.set_field_value(self.AUTHTOKEN__FIELD_NAME.field_name, value)

    def get_AuthToken_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AuthToken' from this record model
        """
        return self.get_field_value(self.AUTHTOKEN__FIELD_NAME.field_name)

    def set_ConnectionName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConnectionName' on this record model
        """
        self.set_field_value(self.CONNECTIONNAME__FIELD_NAME.field_name, value)

    def get_ConnectionName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConnectionName' from this record model
        """
        return self.get_field_value(self.CONNECTIONNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ProxyHost_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProxyHost' on this record model
        """
        self.set_field_value(self.PROXYHOST__FIELD_NAME.field_name, value)

    def get_ProxyHost_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProxyHost' from this record model
        """
        return self.get_field_value(self.PROXYHOST__FIELD_NAME.field_name)

    def set_ProxyPort_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProxyPort' on this record model
        """
        self.set_field_value(self.PROXYPORT__FIELD_NAME.field_name, value)

    def get_ProxyPort_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProxyPort' from this record model
        """
        return self.get_field_value(self.PROXYPORT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowAIRunResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowAIRunResult
    Data Type Display Name: FlowAI Run result (FlowAI Run Results)
    Fields: FilePath, VeloxCurrentVersion, CreatedBy, alphaFR, DateCreated, second_fractionFR, sideFM, outlier_binsFS, DataRecordName, pen_valueFS, decompFR, VeloxLastModifiedDate, VeloxLastModifiedBy, max_cptFS
    """
    DATA_TYPE_NAME: Final[str] = 'FlowAIRunResult'
    DISPLAY_NAME: Final[str] = "FlowAI Run result"
    PLURAL_DISPLAY_NAME: Final[str] = "FlowAI Run Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    ALPHAFR__FIELD_NAME: Final[WrapperField] = WrapperField("alphaFR", FieldType.DOUBLE, display_name="Alpha (Significance)")
    DECOMPFR__FIELD_NAME: Final[WrapperField] = WrapperField("decompFR", FieldType.BOOLEAN, display_name="Decompose Flow Rate")
    MAX_CPTFS__FIELD_NAME: Final[WrapperField] = WrapperField("max_cptFS", FieldType.INTEGER, display_name="Max # Changepoints / Channel")
    OUTLIER_BINSFS__FIELD_NAME: Final[WrapperField] = WrapperField("outlier_binsFS", FieldType.BOOLEAN, display_name="Remove Outlier Bins for SA")
    PEN_VALUEFS__FIELD_NAME: Final[WrapperField] = WrapperField("pen_valueFS", FieldType.STRING, display_name="Changepoint Detection Penalty")
    SECOND_FRACTIONFR__FIELD_NAME: Final[WrapperField] = WrapperField("second_fractionFR", FieldType.DOUBLE, display_name="Time Channel Split (Fraction of Second)")
    SIDEFM__FIELD_NAME: Final[WrapperField] = WrapperField("sideFM", FieldType.PICKLIST, display_name="Dynamic Range Limits")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_alphaFR_field(self, value: Optional[float]):
        """
        Set data field with field name 'alphaFR' on this record model
        """
        self.set_field_value(self.ALPHAFR__FIELD_NAME.field_name, value)

    def get_alphaFR_field(self) -> Optional[float]:
        """
        Get data field value with field name 'alphaFR' from this record model
        """
        return self.get_field_value(self.ALPHAFR__FIELD_NAME.field_name)

    def set_decompFR_field(self, value: Optional[bool]):
        """
        Set data field with field name 'decompFR' on this record model
        """
        self.set_field_value(self.DECOMPFR__FIELD_NAME.field_name, value)

    def get_decompFR_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'decompFR' from this record model
        """
        return self.get_field_value(self.DECOMPFR__FIELD_NAME.field_name)

    def set_max_cptFS_field(self, value: Optional[int]):
        """
        Set data field with field name 'max_cptFS' on this record model
        """
        self.set_field_value(self.MAX_CPTFS__FIELD_NAME.field_name, value)

    def get_max_cptFS_field(self) -> Optional[int]:
        """
        Get data field value with field name 'max_cptFS' from this record model
        """
        return self.get_field_value(self.MAX_CPTFS__FIELD_NAME.field_name)

    def set_outlier_binsFS_field(self, value: Optional[bool]):
        """
        Set data field with field name 'outlier_binsFS' on this record model
        """
        self.set_field_value(self.OUTLIER_BINSFS__FIELD_NAME.field_name, value)

    def get_outlier_binsFS_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'outlier_binsFS' from this record model
        """
        return self.get_field_value(self.OUTLIER_BINSFS__FIELD_NAME.field_name)

    def set_pen_valueFS_field(self, value: Optional[str]):
        """
        Set data field with field name 'pen_valueFS' on this record model
        """
        self.set_field_value(self.PEN_VALUEFS__FIELD_NAME.field_name, value)

    def get_pen_valueFS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'pen_valueFS' from this record model
        """
        return self.get_field_value(self.PEN_VALUEFS__FIELD_NAME.field_name)

    def set_second_fractionFR_field(self, value: Optional[float]):
        """
        Set data field with field name 'second_fractionFR' on this record model
        """
        self.set_field_value(self.SECOND_FRACTIONFR__FIELD_NAME.field_name, value)

    def get_second_fractionFR_field(self) -> Optional[float]:
        """
        Get data field value with field name 'second_fractionFR' from this record model
        """
        return self.get_field_value(self.SECOND_FRACTIONFR__FIELD_NAME.field_name)

    def set_sideFM_field(self, value: Optional[str]):
        """
        Set data field with field name 'sideFM' on this record model
        """
        self.set_field_value(self.SIDEFM__FIELD_NAME.field_name, value)

    def get_sideFM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'sideFM' from this record model
        """
        return self.get_field_value(self.SIDEFM__FIELD_NAME.field_name)


class FlowCellModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCell
    Data Type Display Name: Flow Cell (Flow Cells)
    Fields: PercentOccupied, OccupiedClusterCount, CreatedBy, pfClusterCount, FlowcellId, DateCreated, StorageUnitPath, RawClusterCount, DataRecordName, RowPosition, OccupancyProxyClusterCount, ColPosition, VeloxLastModifiedDate, VeloxLastModifiedBy, StorageLocationBarcode
    """
    DATA_TYPE_NAME: Final[str] = 'FlowCell'
    DISPLAY_NAME: Final[str] = "Flow Cell"
    PLURAL_DISPLAY_NAME: Final[str] = "Flow Cells"
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.SELECTION, display_name="Col Position")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FLOWCELLID__FIELD_NAME: Final[WrapperField] = WrapperField("FlowcellId", FieldType.STRING, display_name="Flowcell ID")
    OCCUPANCYPROXYCLUSTERCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("OccupancyProxyClusterCount", FieldType.LONG, display_name="Occupancy Proxy Cluster Count")
    OCCUPIEDCLUSTERCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("OccupiedClusterCount", FieldType.LONG, display_name="Occupied Cluster Count")
    PERCENTOCCUPIED__FIELD_NAME: Final[WrapperField] = WrapperField("PercentOccupied", FieldType.DOUBLE, display_name="Percent Occupied")
    RAWCLUSTERCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("RawClusterCount", FieldType.LONG, display_name="Raw Cluster Count")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.SELECTION, display_name="Row Position")
    STORAGELOCATIONBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("StorageLocationBarcode", FieldType.SELECTION, display_name="Storage Location Barcode")
    STORAGEUNITPATH__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitPath", FieldType.STRING, display_name="Storage Location Path")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    PFCLUSTERCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("pfClusterCount", FieldType.LONG, display_name="PF Cluster Count")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FlowcellId_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellId' on this record model
        """
        self.set_field_value(self.FLOWCELLID__FIELD_NAME.field_name, value)

    def get_FlowcellId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellId' from this record model
        """
        return self.get_field_value(self.FLOWCELLID__FIELD_NAME.field_name)

    def set_OccupancyProxyClusterCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'OccupancyProxyClusterCount' on this record model
        """
        self.set_field_value(self.OCCUPANCYPROXYCLUSTERCOUNT__FIELD_NAME.field_name, value)

    def get_OccupancyProxyClusterCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'OccupancyProxyClusterCount' from this record model
        """
        return self.get_field_value(self.OCCUPANCYPROXYCLUSTERCOUNT__FIELD_NAME.field_name)

    def set_OccupiedClusterCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'OccupiedClusterCount' on this record model
        """
        self.set_field_value(self.OCCUPIEDCLUSTERCOUNT__FIELD_NAME.field_name, value)

    def get_OccupiedClusterCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'OccupiedClusterCount' from this record model
        """
        return self.get_field_value(self.OCCUPIEDCLUSTERCOUNT__FIELD_NAME.field_name)

    def set_PercentOccupied_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentOccupied' on this record model
        """
        self.set_field_value(self.PERCENTOCCUPIED__FIELD_NAME.field_name, value)

    def get_PercentOccupied_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentOccupied' from this record model
        """
        return self.get_field_value(self.PERCENTOCCUPIED__FIELD_NAME.field_name)

    def set_RawClusterCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'RawClusterCount' on this record model
        """
        self.set_field_value(self.RAWCLUSTERCOUNT__FIELD_NAME.field_name, value)

    def get_RawClusterCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RawClusterCount' from this record model
        """
        return self.get_field_value(self.RAWCLUSTERCOUNT__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_StorageLocationBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageLocationBarcode' on this record model
        """
        self.set_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name, value)

    def get_StorageLocationBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageLocationBarcode' from this record model
        """
        return self.get_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_pfClusterCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'pfClusterCount' on this record model
        """
        self.set_field_value(self.PFCLUSTERCOUNT__FIELD_NAME.field_name, value)

    def get_pfClusterCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'pfClusterCount' from this record model
        """
        return self.get_field_value(self.PFCLUSTERCOUNT__FIELD_NAME.field_name)


class FlowCellLaneModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCellLane
    Data Type Display Name: Flow Cell Lane (Flow Cell Lanes)
    Fields: ExpRecId, MultiParentLink215, CreatedBy, DataRecordName, LaneNum, FlowcellId, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'FlowCellLane'
    DISPLAY_NAME: Final[str] = "Flow Cell Lane"
    PLURAL_DISPLAY_NAME: Final[str] = "Flow Cell Lanes"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPRECID__FIELD_NAME: Final[WrapperField] = WrapperField("ExpRecId", FieldType.LONG, display_name="Experiment Record ID")
    FLOWCELLID__FIELD_NAME: Final[WrapperField] = WrapperField("FlowcellId", FieldType.STRING, display_name="Flowcell ID")
    LANENUM__FIELD_NAME: Final[WrapperField] = WrapperField("LaneNum", FieldType.LONG, display_name="Lane Number")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpRecId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpRecId' on this record model
        """
        self.set_field_value(self.EXPRECID__FIELD_NAME.field_name, value)

    def get_ExpRecId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpRecId' from this record model
        """
        return self.get_field_value(self.EXPRECID__FIELD_NAME.field_name)

    def set_FlowcellId_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellId' on this record model
        """
        self.set_field_value(self.FLOWCELLID__FIELD_NAME.field_name, value)

    def get_FlowcellId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellId' from this record model
        """
        return self.get_field_value(self.FLOWCELLID__FIELD_NAME.field_name)

    def set_LaneNum_field(self, value: Optional[int]):
        """
        Set data field with field name 'LaneNum' on this record model
        """
        self.set_field_value(self.LANENUM__FIELD_NAME.field_name, value)

    def get_LaneNum_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LaneNum' from this record model
        """
        return self.get_field_value(self.LANENUM__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowClustClusterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowClustCluster
    Data Type Display Name: FlowClust Cluster (FlowClust Clusters)
    Fields: ColorHTML, CreatedBy, DataRecordName, UserAnnotation, ClusterNum, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, ColorName
    """
    DATA_TYPE_NAME: Final[str] = 'FlowClustCluster'
    DISPLAY_NAME: Final[str] = "FlowClust Cluster"
    PLURAL_DISPLAY_NAME: Final[str] = "FlowClust Clusters"
    CLUSTERNUM__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterNum", FieldType.STRING, display_name="Cluster Number")
    COLORHTML__FIELD_NAME: Final[WrapperField] = WrapperField("ColorHTML", FieldType.STRING, display_name="Color HTML")
    COLORNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ColorName", FieldType.STRING, display_name="Color Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    USERANNOTATION__FIELD_NAME: Final[WrapperField] = WrapperField("UserAnnotation", FieldType.STRING, display_name="User Annotation")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ClusterNum_field(self, value: Optional[str]):
        """
        Set data field with field name 'ClusterNum' on this record model
        """
        self.set_field_value(self.CLUSTERNUM__FIELD_NAME.field_name, value)

    def get_ClusterNum_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ClusterNum' from this record model
        """
        return self.get_field_value(self.CLUSTERNUM__FIELD_NAME.field_name)

    def set_ColorHTML_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColorHTML' on this record model
        """
        self.set_field_value(self.COLORHTML__FIELD_NAME.field_name, value)

    def get_ColorHTML_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColorHTML' from this record model
        """
        return self.get_field_value(self.COLORHTML__FIELD_NAME.field_name)

    def set_ColorName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColorName' on this record model
        """
        self.set_field_value(self.COLORNAME__FIELD_NAME.field_name, value)

    def get_ColorName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColorName' from this record model
        """
        return self.get_field_value(self.COLORNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_UserAnnotation_field(self, value: Optional[str]):
        """
        Set data field with field name 'UserAnnotation' on this record model
        """
        self.set_field_value(self.USERANNOTATION__FIELD_NAME.field_name, value)

    def get_UserAnnotation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UserAnnotation' from this record model
        """
        return self.get_field_value(self.USERANNOTATION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowClustConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowClustConfig
    Data Type Display Name: FlowClust Config (FlowClust Configs)
    Fields: criterion, seed, nu, DateCreated, MaxEMIterations, ChannelConfigJSON, tolInit, tol, LLevel, NumberOfClusters, mincount, VeloxLastModifiedBy, lam, nuest, ClusterGroupName, FilePath, maxcount, VeloxCurrentVersion, CreatedBy, zcutoff, IsDataComplete, DataRecordName, BInit, VeloxLastModifiedDate, randomStart, trans
    Sets up a FlowClust clustering package configurations.
    """
    DATA_TYPE_NAME: Final[str] = 'FlowClustConfig'
    DISPLAY_NAME: Final[str] = "FlowClust Config"
    PLURAL_DISPLAY_NAME: Final[str] = "FlowClust Configs"
    BINIT__FIELD_NAME: Final[WrapperField] = WrapperField("BInit", FieldType.INTEGER, display_name="(B.init) - Initial EM Itereations")
    CHANNELCONFIGJSON__FIELD_NAME: Final[WrapperField] = WrapperField("ChannelConfigJSON", FieldType.STRING, display_name="Channel Config Data")
    CLUSTERGROUPNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterGroupName", FieldType.STRING, display_name="Cluster Group Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    ISDATACOMPLETE__FIELD_NAME: Final[WrapperField] = WrapperField("IsDataComplete", FieldType.BOOLEAN, display_name="Is Data Complete")
    LLEVEL__FIELD_NAME: Final[WrapperField] = WrapperField("LLevel", FieldType.DOUBLE, display_name="(Level) - Outlier Quantile")
    MAXEMITERATIONS__FIELD_NAME: Final[WrapperField] = WrapperField("MaxEMIterations", FieldType.INTEGER, display_name="(B) - Max EM Iterations")
    NUMBEROFCLUSTERS__FIELD_NAME: Final[WrapperField] = WrapperField("NumberOfClusters", FieldType.INTEGER, display_name="(K) - Number of Clusters")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CRITERION__FIELD_NAME: Final[WrapperField] = WrapperField("criterion", FieldType.PICKLIST, display_name="(Criterion) - Model Selection Criterion")
    LAM__FIELD_NAME: Final[WrapperField] = WrapperField("lam", FieldType.DOUBLE, display_name="(lambda) - Initial Transformation to data.")
    MAXCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("maxcount", FieldType.INTEGER, display_name="(max.count) - Filters from Above")
    MINCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("mincount", FieldType.INTEGER, display_name="(min.count) - Filters from Below")
    NU__FIELD_NAME: Final[WrapperField] = WrapperField("nu", FieldType.INTEGER, display_name="(nu) - DoF of (t-distribution)")
    NUEST__FIELD_NAME: Final[WrapperField] = WrapperField("nuest", FieldType.PICKLIST, display_name="(nu.est) - Estimation Type of (nu)")
    RANDOMSTART__FIELD_NAME: Final[WrapperField] = WrapperField("randomStart", FieldType.INTEGER, display_name="(randomStart) - Initial Random Partitions")
    SEED__FIELD_NAME: Final[WrapperField] = WrapperField("seed", FieldType.INTEGER, display_name="Seed")
    TOL__FIELD_NAME: Final[WrapperField] = WrapperField("tol", FieldType.DOUBLE, display_name="(tol) - Tolerance for EM Convergence")
    TOLINIT__FIELD_NAME: Final[WrapperField] = WrapperField("tolInit", FieldType.DOUBLE, display_name="(tol.init) - Initial EM Convergence Tolerance")
    TRANS__FIELD_NAME: Final[WrapperField] = WrapperField("trans", FieldType.PICKLIST, display_name="(trans) - Box-Cox Estimation Type")
    ZCUTOFF__FIELD_NAME: Final[WrapperField] = WrapperField("zcutoff", FieldType.DOUBLE, display_name="(z.cutoff) - Outlier Criterion for Posterior Assignment Probability")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BInit_field(self, value: Optional[int]):
        """
        Set data field with field name 'BInit' on this record model
        """
        self.set_field_value(self.BINIT__FIELD_NAME.field_name, value)

    def get_BInit_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BInit' from this record model
        """
        return self.get_field_value(self.BINIT__FIELD_NAME.field_name)

    def set_ChannelConfigJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChannelConfigJSON' on this record model
        """
        self.set_field_value(self.CHANNELCONFIGJSON__FIELD_NAME.field_name, value)

    def get_ChannelConfigJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChannelConfigJSON' from this record model
        """
        return self.get_field_value(self.CHANNELCONFIGJSON__FIELD_NAME.field_name)

    def set_ClusterGroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ClusterGroupName' on this record model
        """
        self.set_field_value(self.CLUSTERGROUPNAME__FIELD_NAME.field_name, value)

    def get_ClusterGroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ClusterGroupName' from this record model
        """
        return self.get_field_value(self.CLUSTERGROUPNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_IsDataComplete_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsDataComplete' on this record model
        """
        self.set_field_value(self.ISDATACOMPLETE__FIELD_NAME.field_name, value)

    def get_IsDataComplete_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsDataComplete' from this record model
        """
        return self.get_field_value(self.ISDATACOMPLETE__FIELD_NAME.field_name)

    def set_LLevel_field(self, value: Optional[float]):
        """
        Set data field with field name 'LLevel' on this record model
        """
        self.set_field_value(self.LLEVEL__FIELD_NAME.field_name, value)

    def get_LLevel_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LLevel' from this record model
        """
        return self.get_field_value(self.LLEVEL__FIELD_NAME.field_name)

    def set_MaxEMIterations_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaxEMIterations' on this record model
        """
        self.set_field_value(self.MAXEMITERATIONS__FIELD_NAME.field_name, value)

    def get_MaxEMIterations_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaxEMIterations' from this record model
        """
        return self.get_field_value(self.MAXEMITERATIONS__FIELD_NAME.field_name)

    def set_NumberOfClusters_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfClusters' on this record model
        """
        self.set_field_value(self.NUMBEROFCLUSTERS__FIELD_NAME.field_name, value)

    def get_NumberOfClusters_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfClusters' from this record model
        """
        return self.get_field_value(self.NUMBEROFCLUSTERS__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_criterion_field(self, value: Optional[str]):
        """
        Set data field with field name 'criterion' on this record model
        """
        self.set_field_value(self.CRITERION__FIELD_NAME.field_name, value)

    def get_criterion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'criterion' from this record model
        """
        return self.get_field_value(self.CRITERION__FIELD_NAME.field_name)

    def set_lam_field(self, value: Optional[float]):
        """
        Set data field with field name 'lam' on this record model
        """
        self.set_field_value(self.LAM__FIELD_NAME.field_name, value)

    def get_lam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'lam' from this record model
        """
        return self.get_field_value(self.LAM__FIELD_NAME.field_name)

    def set_maxcount_field(self, value: Optional[int]):
        """
        Set data field with field name 'maxcount' on this record model
        """
        self.set_field_value(self.MAXCOUNT__FIELD_NAME.field_name, value)

    def get_maxcount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'maxcount' from this record model
        """
        return self.get_field_value(self.MAXCOUNT__FIELD_NAME.field_name)

    def set_mincount_field(self, value: Optional[int]):
        """
        Set data field with field name 'mincount' on this record model
        """
        self.set_field_value(self.MINCOUNT__FIELD_NAME.field_name, value)

    def get_mincount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'mincount' from this record model
        """
        return self.get_field_value(self.MINCOUNT__FIELD_NAME.field_name)

    def set_nu_field(self, value: Optional[int]):
        """
        Set data field with field name 'nu' on this record model
        """
        self.set_field_value(self.NU__FIELD_NAME.field_name, value)

    def get_nu_field(self) -> Optional[int]:
        """
        Get data field value with field name 'nu' from this record model
        """
        return self.get_field_value(self.NU__FIELD_NAME.field_name)

    def set_nuest_field(self, value: Optional[str]):
        """
        Set data field with field name 'nuest' on this record model
        """
        self.set_field_value(self.NUEST__FIELD_NAME.field_name, value)

    def get_nuest_field(self) -> Optional[str]:
        """
        Get data field value with field name 'nuest' from this record model
        """
        return self.get_field_value(self.NUEST__FIELD_NAME.field_name)

    def set_randomStart_field(self, value: Optional[int]):
        """
        Set data field with field name 'randomStart' on this record model
        """
        self.set_field_value(self.RANDOMSTART__FIELD_NAME.field_name, value)

    def get_randomStart_field(self) -> Optional[int]:
        """
        Get data field value with field name 'randomStart' from this record model
        """
        return self.get_field_value(self.RANDOMSTART__FIELD_NAME.field_name)

    def set_seed_field(self, value: Optional[int]):
        """
        Set data field with field name 'seed' on this record model
        """
        self.set_field_value(self.SEED__FIELD_NAME.field_name, value)

    def get_seed_field(self) -> Optional[int]:
        """
        Get data field value with field name 'seed' from this record model
        """
        return self.get_field_value(self.SEED__FIELD_NAME.field_name)

    def set_tol_field(self, value: Optional[float]):
        """
        Set data field with field name 'tol' on this record model
        """
        self.set_field_value(self.TOL__FIELD_NAME.field_name, value)

    def get_tol_field(self) -> Optional[float]:
        """
        Get data field value with field name 'tol' from this record model
        """
        return self.get_field_value(self.TOL__FIELD_NAME.field_name)

    def set_tolInit_field(self, value: Optional[float]):
        """
        Set data field with field name 'tolInit' on this record model
        """
        self.set_field_value(self.TOLINIT__FIELD_NAME.field_name, value)

    def get_tolInit_field(self) -> Optional[float]:
        """
        Get data field value with field name 'tolInit' from this record model
        """
        return self.get_field_value(self.TOLINIT__FIELD_NAME.field_name)

    def set_trans_field(self, value: Optional[str]):
        """
        Set data field with field name 'trans' on this record model
        """
        self.set_field_value(self.TRANS__FIELD_NAME.field_name, value)

    def get_trans_field(self) -> Optional[str]:
        """
        Get data field value with field name 'trans' from this record model
        """
        return self.get_field_value(self.TRANS__FIELD_NAME.field_name)

    def set_zcutoff_field(self, value: Optional[float]):
        """
        Set data field with field name 'zcutoff' on this record model
        """
        self.set_field_value(self.ZCUTOFF__FIELD_NAME.field_name, value)

    def get_zcutoff_field(self) -> Optional[float]:
        """
        Get data field value with field name 'zcutoff' from this record model
        """
        return self.get_field_value(self.ZCUTOFF__FIELD_NAME.field_name)


class FlowCompensationMatrixDatumModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCompensationMatrixDatum
    Data Type Display Name: Flow Compensation Matrix Datum (Flow Compensation Matrix Data)
    Fields: CreatedBy, RowIndex, ColumnChannelName, DateCreated, ColumnIndex, DataRecordName, VeloxLastModifiedDate, CompensationValue, RowChannelName, VeloxLastModifiedBy
    Individual flow compensation matrix data value in the matrix.
    """
    DATA_TYPE_NAME: Final[str] = 'FlowCompensationMatrixDatum'
    DISPLAY_NAME: Final[str] = "Flow Compensation Matrix Datum"
    PLURAL_DISPLAY_NAME: Final[str] = "Flow Compensation Matrix Data"
    COLUMNCHANNELNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ColumnChannelName", FieldType.STRING, display_name="Column Channel Name")
    COLUMNINDEX__FIELD_NAME: Final[WrapperField] = WrapperField("ColumnIndex", FieldType.INTEGER, display_name="Column Index")
    COMPENSATIONVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("CompensationValue", FieldType.DOUBLE, display_name="Compensation Value")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ROWCHANNELNAME__FIELD_NAME: Final[WrapperField] = WrapperField("RowChannelName", FieldType.STRING, display_name="Row Channel Name")
    ROWINDEX__FIELD_NAME: Final[WrapperField] = WrapperField("RowIndex", FieldType.INTEGER, display_name="Row Index")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColumnChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColumnChannelName' on this record model
        """
        self.set_field_value(self.COLUMNCHANNELNAME__FIELD_NAME.field_name, value)

    def get_ColumnChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColumnChannelName' from this record model
        """
        return self.get_field_value(self.COLUMNCHANNELNAME__FIELD_NAME.field_name)

    def set_ColumnIndex_field(self, value: Optional[int]):
        """
        Set data field with field name 'ColumnIndex' on this record model
        """
        self.set_field_value(self.COLUMNINDEX__FIELD_NAME.field_name, value)

    def get_ColumnIndex_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ColumnIndex' from this record model
        """
        return self.get_field_value(self.COLUMNINDEX__FIELD_NAME.field_name)

    def set_CompensationValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'CompensationValue' on this record model
        """
        self.set_field_value(self.COMPENSATIONVALUE__FIELD_NAME.field_name, value)

    def get_CompensationValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CompensationValue' from this record model
        """
        return self.get_field_value(self.COMPENSATIONVALUE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_RowChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowChannelName' on this record model
        """
        self.set_field_value(self.ROWCHANNELNAME__FIELD_NAME.field_name, value)

    def get_RowChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowChannelName' from this record model
        """
        return self.get_field_value(self.ROWCHANNELNAME__FIELD_NAME.field_name)

    def set_RowIndex_field(self, value: Optional[int]):
        """
        Set data field with field name 'RowIndex' on this record model
        """
        self.set_field_value(self.ROWINDEX__FIELD_NAME.field_name, value)

    def get_RowIndex_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RowIndex' from this record model
        """
        return self.get_field_value(self.ROWINDEX__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowCompensationMatrixInfoModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCompensationMatrixInfo
    Data Type Display Name: Flow Compensation Matrix Info (Flow Compensation Matrix Info)
    Fields: Emedded, CreatedBy, DataRecordName, ChannelNameList, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, MatrixName
    Contains the info about the matrix itself.

The parents of this matrix are those that are used to create this info file. There can be more than one parent.

This is not directly linked to children FCS files. It will be linked through FlowCompMatrixApplication type.
    """
    DATA_TYPE_NAME: Final[str] = 'FlowCompensationMatrixInfo'
    DISPLAY_NAME: Final[str] = "Flow Compensation Matrix Info"
    PLURAL_DISPLAY_NAME: Final[str] = "Flow Compensation Matrix Info"
    CHANNELNAMELIST__FIELD_NAME: Final[WrapperField] = WrapperField("ChannelNameList", FieldType.STRING, display_name="Channel Name List")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EMEDDED__FIELD_NAME: Final[WrapperField] = WrapperField("Emedded", FieldType.BOOLEAN, display_name="Emedded")
    MATRIXNAME__FIELD_NAME: Final[WrapperField] = WrapperField("MatrixName", FieldType.STRING, display_name="Matrix Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ChannelNameList_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChannelNameList' on this record model
        """
        self.set_field_value(self.CHANNELNAMELIST__FIELD_NAME.field_name, value)

    def get_ChannelNameList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChannelNameList' from this record model
        """
        return self.get_field_value(self.CHANNELNAMELIST__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Emedded_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Emedded' on this record model
        """
        self.set_field_value(self.EMEDDED__FIELD_NAME.field_name, value)

    def get_Emedded_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Emedded' from this record model
        """
        return self.get_field_value(self.EMEDDED__FIELD_NAME.field_name)

    def set_MatrixName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MatrixName' on this record model
        """
        self.set_field_value(self.MATRIXNAME__FIELD_NAME.field_name, value)

    def get_MatrixName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MatrixName' from this record model
        """
        return self.get_field_value(self.MATRIXNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowCompMatrixApplicationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCompMatrixApplication
    Data Type Display Name: Flow Comp Matrix Application (Flow Comp Matrix Applications)
    Fields: Emedded, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, MatrixInfoRecordId
    Apply a flow cyto compensation matrix for a target (parent FCS) file, against a matrix info.
    """
    DATA_TYPE_NAME: Final[str] = 'FlowCompMatrixApplication'
    DISPLAY_NAME: Final[str] = "Flow Comp Matrix Application"
    PLURAL_DISPLAY_NAME: Final[str] = "Flow Comp Matrix Applications"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EMEDDED__FIELD_NAME: Final[WrapperField] = WrapperField("Emedded", FieldType.BOOLEAN, display_name="Emedded")
    MATRIXINFORECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("MatrixInfoRecordId", FieldType.LONG, display_name="Matrix Info Record ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Emedded_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Emedded' on this record model
        """
        self.set_field_value(self.EMEDDED__FIELD_NAME.field_name, value)

    def get_Emedded_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Emedded' from this record model
        """
        return self.get_field_value(self.EMEDDED__FIELD_NAME.field_name)

    def set_MatrixInfoRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'MatrixInfoRecordId' on this record model
        """
        self.set_field_value(self.MATRIXINFORECORDID__FIELD_NAME.field_name, value)

    def get_MatrixInfoRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MatrixInfoRecordId' from this record model
        """
        return self.get_field_value(self.MATRIXINFORECORDID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowCytoFileTemplateModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCytoFileTemplate
    Data Type Display Name: Flow Cyto File Template (Flow Cyto File Templates)
    Fields: CreatedBy, TemplateData, DataRecordName, VeloxLastModifiedDate, TemplateName, VeloxLastModifiedBy, DateCreated, TemplateDescription
    Describes a saved gating and compensation strategy for a flow cytometry file.
    """
    DATA_TYPE_NAME: Final[str] = 'FlowCytoFileTemplate'
    DISPLAY_NAME: Final[str] = "Flow Cyto File Template"
    PLURAL_DISPLAY_NAME: Final[str] = "Flow Cyto File Templates"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    TEMPLATEDATA__FIELD_NAME: Final[WrapperField] = WrapperField("TemplateData", FieldType.STRING, display_name="Template Data")
    TEMPLATEDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("TemplateDescription", FieldType.STRING, display_name="Template Description")
    TEMPLATENAME__FIELD_NAME: Final[WrapperField] = WrapperField("TemplateName", FieldType.STRING, display_name="Template Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_TemplateData_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateData' on this record model
        """
        self.set_field_value(self.TEMPLATEDATA__FIELD_NAME.field_name, value)

    def get_TemplateData_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateData' from this record model
        """
        return self.get_field_value(self.TEMPLATEDATA__FIELD_NAME.field_name)

    def set_TemplateDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateDescription' on this record model
        """
        self.set_field_value(self.TEMPLATEDESCRIPTION__FIELD_NAME.field_name, value)

    def get_TemplateDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateDescription' from this record model
        """
        return self.get_field_value(self.TEMPLATEDESCRIPTION__FIELD_NAME.field_name)

    def set_TemplateName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateName' on this record model
        """
        self.set_field_value(self.TEMPLATENAME__FIELD_NAME.field_name, value)

    def get_TemplateName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateName' from this record model
        """
        return self.get_field_value(self.TEMPLATENAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowCytometryChannelInfoModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowCytometryChannelInfo
    Data Type Display Name: Flow Cytometry Channel Info (Flow Cytometry Channel Info)
    Fields: TransformGML2C, TransformGML2B, TransformGML2A, DateCreated, TransformGML2W, AxisMax, TransformGML2T, VeloxLastModifiedBy, TransformLogicleA, TransformGML2M, TransformLogicleTop, TransformLogicleW, CreatedBy, AxisMin, TransformVarA, TransformVarB, TransformMethod, Annotation, TransformLogicleM, TransformDenominator, ChannelName, DataRecordName, AxisRange, VeloxLastModifiedDate, TransformNumerator
    """
    DATA_TYPE_NAME: Final[str] = 'FlowCytometryChannelInfo'
    DISPLAY_NAME: Final[str] = "Flow Cytometry Channel Info"
    PLURAL_DISPLAY_NAME: Final[str] = "Flow Cytometry Channel Info"
    ANNOTATION__FIELD_NAME: Final[WrapperField] = WrapperField("Annotation", FieldType.STRING, display_name="Annotation")
    AXISMAX__FIELD_NAME: Final[WrapperField] = WrapperField("AxisMax", FieldType.DOUBLE, display_name="Axis Max")
    AXISMIN__FIELD_NAME: Final[WrapperField] = WrapperField("AxisMin", FieldType.DOUBLE, display_name="Axis Min")
    AXISRANGE__FIELD_NAME: Final[WrapperField] = WrapperField("AxisRange", FieldType.DOUBLE, display_name="Axis Range")
    CHANNELNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ChannelName", FieldType.STRING, display_name="Channel Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    TRANSFORMDENOMINATOR__FIELD_NAME: Final[WrapperField] = WrapperField("TransformDenominator", FieldType.STRING, display_name="Transform Denominator")
    TRANSFORMGML2A__FIELD_NAME: Final[WrapperField] = WrapperField("TransformGML2A", FieldType.DOUBLE, display_name="Transform GML2: a")
    TRANSFORMGML2B__FIELD_NAME: Final[WrapperField] = WrapperField("TransformGML2B", FieldType.DOUBLE, display_name="Transform GML2: b")
    TRANSFORMGML2C__FIELD_NAME: Final[WrapperField] = WrapperField("TransformGML2C", FieldType.DOUBLE, display_name="Transform GML2: c")
    TRANSFORMGML2M__FIELD_NAME: Final[WrapperField] = WrapperField("TransformGML2M", FieldType.DOUBLE, display_name="Transform GML2: m")
    TRANSFORMGML2T__FIELD_NAME: Final[WrapperField] = WrapperField("TransformGML2T", FieldType.DOUBLE, display_name="Transform GML2: t")
    TRANSFORMGML2W__FIELD_NAME: Final[WrapperField] = WrapperField("TransformGML2W", FieldType.DOUBLE, display_name="Transform GML2: w")
    TRANSFORMLOGICLEA__FIELD_NAME: Final[WrapperField] = WrapperField("TransformLogicleA", FieldType.DOUBLE, display_name="a (logicle neg range)")
    TRANSFORMLOGICLEM__FIELD_NAME: Final[WrapperField] = WrapperField("TransformLogicleM", FieldType.DOUBLE, display_name="m (logicle full width)")
    TRANSFORMLOGICLETOP__FIELD_NAME: Final[WrapperField] = WrapperField("TransformLogicleTop", FieldType.DOUBLE, display_name="t (logicle top)")
    TRANSFORMLOGICLEW__FIELD_NAME: Final[WrapperField] = WrapperField("TransformLogicleW", FieldType.DOUBLE, display_name="w (logicle linear width)")
    TRANSFORMMETHOD__FIELD_NAME: Final[WrapperField] = WrapperField("TransformMethod", FieldType.PICKLIST, display_name="Transform Method")
    TRANSFORMNUMERATOR__FIELD_NAME: Final[WrapperField] = WrapperField("TransformNumerator", FieldType.STRING, display_name="Transform Numerator")
    TRANSFORMVARA__FIELD_NAME: Final[WrapperField] = WrapperField("TransformVarA", FieldType.DOUBLE, display_name="a (hyperlog power)")
    TRANSFORMVARB__FIELD_NAME: Final[WrapperField] = WrapperField("TransformVarB", FieldType.DOUBLE, display_name="b (hyperlog constant)")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Annotation_field(self, value: Optional[str]):
        """
        Set data field with field name 'Annotation' on this record model
        """
        self.set_field_value(self.ANNOTATION__FIELD_NAME.field_name, value)

    def get_Annotation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Annotation' from this record model
        """
        return self.get_field_value(self.ANNOTATION__FIELD_NAME.field_name)

    def set_AxisMax_field(self, value: Optional[float]):
        """
        Set data field with field name 'AxisMax' on this record model
        """
        self.set_field_value(self.AXISMAX__FIELD_NAME.field_name, value)

    def get_AxisMax_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AxisMax' from this record model
        """
        return self.get_field_value(self.AXISMAX__FIELD_NAME.field_name)

    def set_AxisMin_field(self, value: Optional[float]):
        """
        Set data field with field name 'AxisMin' on this record model
        """
        self.set_field_value(self.AXISMIN__FIELD_NAME.field_name, value)

    def get_AxisMin_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AxisMin' from this record model
        """
        return self.get_field_value(self.AXISMIN__FIELD_NAME.field_name)

    def set_AxisRange_field(self, value: Optional[float]):
        """
        Set data field with field name 'AxisRange' on this record model
        """
        self.set_field_value(self.AXISRANGE__FIELD_NAME.field_name, value)

    def get_AxisRange_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AxisRange' from this record model
        """
        return self.get_field_value(self.AXISRANGE__FIELD_NAME.field_name)

    def set_ChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChannelName' on this record model
        """
        self.set_field_value(self.CHANNELNAME__FIELD_NAME.field_name, value)

    def get_ChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChannelName' from this record model
        """
        return self.get_field_value(self.CHANNELNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_TransformDenominator_field(self, value: Optional[str]):
        """
        Set data field with field name 'TransformDenominator' on this record model
        """
        self.set_field_value(self.TRANSFORMDENOMINATOR__FIELD_NAME.field_name, value)

    def get_TransformDenominator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TransformDenominator' from this record model
        """
        return self.get_field_value(self.TRANSFORMDENOMINATOR__FIELD_NAME.field_name)

    def set_TransformGML2A_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformGML2A' on this record model
        """
        self.set_field_value(self.TRANSFORMGML2A__FIELD_NAME.field_name, value)

    def get_TransformGML2A_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformGML2A' from this record model
        """
        return self.get_field_value(self.TRANSFORMGML2A__FIELD_NAME.field_name)

    def set_TransformGML2B_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformGML2B' on this record model
        """
        self.set_field_value(self.TRANSFORMGML2B__FIELD_NAME.field_name, value)

    def get_TransformGML2B_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformGML2B' from this record model
        """
        return self.get_field_value(self.TRANSFORMGML2B__FIELD_NAME.field_name)

    def set_TransformGML2C_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformGML2C' on this record model
        """
        self.set_field_value(self.TRANSFORMGML2C__FIELD_NAME.field_name, value)

    def get_TransformGML2C_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformGML2C' from this record model
        """
        return self.get_field_value(self.TRANSFORMGML2C__FIELD_NAME.field_name)

    def set_TransformGML2M_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformGML2M' on this record model
        """
        self.set_field_value(self.TRANSFORMGML2M__FIELD_NAME.field_name, value)

    def get_TransformGML2M_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformGML2M' from this record model
        """
        return self.get_field_value(self.TRANSFORMGML2M__FIELD_NAME.field_name)

    def set_TransformGML2T_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformGML2T' on this record model
        """
        self.set_field_value(self.TRANSFORMGML2T__FIELD_NAME.field_name, value)

    def get_TransformGML2T_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformGML2T' from this record model
        """
        return self.get_field_value(self.TRANSFORMGML2T__FIELD_NAME.field_name)

    def set_TransformGML2W_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformGML2W' on this record model
        """
        self.set_field_value(self.TRANSFORMGML2W__FIELD_NAME.field_name, value)

    def get_TransformGML2W_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformGML2W' from this record model
        """
        return self.get_field_value(self.TRANSFORMGML2W__FIELD_NAME.field_name)

    def set_TransformLogicleA_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformLogicleA' on this record model
        """
        self.set_field_value(self.TRANSFORMLOGICLEA__FIELD_NAME.field_name, value)

    def get_TransformLogicleA_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformLogicleA' from this record model
        """
        return self.get_field_value(self.TRANSFORMLOGICLEA__FIELD_NAME.field_name)

    def set_TransformLogicleM_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformLogicleM' on this record model
        """
        self.set_field_value(self.TRANSFORMLOGICLEM__FIELD_NAME.field_name, value)

    def get_TransformLogicleM_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformLogicleM' from this record model
        """
        return self.get_field_value(self.TRANSFORMLOGICLEM__FIELD_NAME.field_name)

    def set_TransformLogicleTop_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformLogicleTop' on this record model
        """
        self.set_field_value(self.TRANSFORMLOGICLETOP__FIELD_NAME.field_name, value)

    def get_TransformLogicleTop_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformLogicleTop' from this record model
        """
        return self.get_field_value(self.TRANSFORMLOGICLETOP__FIELD_NAME.field_name)

    def set_TransformLogicleW_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformLogicleW' on this record model
        """
        self.set_field_value(self.TRANSFORMLOGICLEW__FIELD_NAME.field_name, value)

    def get_TransformLogicleW_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformLogicleW' from this record model
        """
        return self.get_field_value(self.TRANSFORMLOGICLEW__FIELD_NAME.field_name)

    def set_TransformMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'TransformMethod' on this record model
        """
        self.set_field_value(self.TRANSFORMMETHOD__FIELD_NAME.field_name, value)

    def get_TransformMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TransformMethod' from this record model
        """
        return self.get_field_value(self.TRANSFORMMETHOD__FIELD_NAME.field_name)

    def set_TransformNumerator_field(self, value: Optional[str]):
        """
        Set data field with field name 'TransformNumerator' on this record model
        """
        self.set_field_value(self.TRANSFORMNUMERATOR__FIELD_NAME.field_name, value)

    def get_TransformNumerator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TransformNumerator' from this record model
        """
        return self.get_field_value(self.TRANSFORMNUMERATOR__FIELD_NAME.field_name)

    def set_TransformVarA_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformVarA' on this record model
        """
        self.set_field_value(self.TRANSFORMVARA__FIELD_NAME.field_name, value)

    def get_TransformVarA_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformVarA' from this record model
        """
        return self.get_field_value(self.TRANSFORMVARA__FIELD_NAME.field_name)

    def set_TransformVarB_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransformVarB' on this record model
        """
        self.set_field_value(self.TRANSFORMVARB__FIELD_NAME.field_name, value)

    def get_TransformVarB_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransformVarB' from this record model
        """
        return self.get_field_value(self.TRANSFORMVARB__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowDensityGateModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowDensityGate
    Data Type Display Name: Flow Density Gate (Flow Density Gates)
    Fields: PercentileY, CreatedBy, PercentileX, DateCreated, IsPositiveY, IsPositiveX, DataRecordName, UserAnnotation, YChannelName, XChannelName, VeloxLastModifiedDate, VeloxLastModifiedBy, ShapeJSON
    """
    DATA_TYPE_NAME: Final[str] = 'FlowDensityGate'
    DISPLAY_NAME: Final[str] = "Flow Density Gate"
    PLURAL_DISPLAY_NAME: Final[str] = "Flow Density Gates"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ISPOSITIVEX__FIELD_NAME: Final[WrapperField] = WrapperField("IsPositiveX", FieldType.BOOLEAN, display_name="Is Positive at X")
    ISPOSITIVEY__FIELD_NAME: Final[WrapperField] = WrapperField("IsPositiveY", FieldType.BOOLEAN, display_name="Is Positive at Y")
    PERCENTILEX__FIELD_NAME: Final[WrapperField] = WrapperField("PercentileX", FieldType.DOUBLE, display_name="Percentile X")
    PERCENTILEY__FIELD_NAME: Final[WrapperField] = WrapperField("PercentileY", FieldType.DOUBLE, display_name="Percentile Y")
    SHAPEJSON__FIELD_NAME: Final[WrapperField] = WrapperField("ShapeJSON", FieldType.STRING, display_name="Shape JSON")
    USERANNOTATION__FIELD_NAME: Final[WrapperField] = WrapperField("UserAnnotation", FieldType.STRING, display_name="Description")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    XCHANNELNAME__FIELD_NAME: Final[WrapperField] = WrapperField("XChannelName", FieldType.STRING, display_name="X Channel Name")
    YCHANNELNAME__FIELD_NAME: Final[WrapperField] = WrapperField("YChannelName", FieldType.STRING, display_name="Y Channel Name")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IsPositiveX_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPositiveX' on this record model
        """
        self.set_field_value(self.ISPOSITIVEX__FIELD_NAME.field_name, value)

    def get_IsPositiveX_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPositiveX' from this record model
        """
        return self.get_field_value(self.ISPOSITIVEX__FIELD_NAME.field_name)

    def set_IsPositiveY_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPositiveY' on this record model
        """
        self.set_field_value(self.ISPOSITIVEY__FIELD_NAME.field_name, value)

    def get_IsPositiveY_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPositiveY' from this record model
        """
        return self.get_field_value(self.ISPOSITIVEY__FIELD_NAME.field_name)

    def set_PercentileX_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentileX' on this record model
        """
        self.set_field_value(self.PERCENTILEX__FIELD_NAME.field_name, value)

    def get_PercentileX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentileX' from this record model
        """
        return self.get_field_value(self.PERCENTILEX__FIELD_NAME.field_name)

    def set_PercentileY_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentileY' on this record model
        """
        self.set_field_value(self.PERCENTILEY__FIELD_NAME.field_name, value)

    def get_PercentileY_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentileY' from this record model
        """
        return self.get_field_value(self.PERCENTILEY__FIELD_NAME.field_name)

    def set_ShapeJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'ShapeJSON' on this record model
        """
        self.set_field_value(self.SHAPEJSON__FIELD_NAME.field_name, value)

    def get_ShapeJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ShapeJSON' from this record model
        """
        return self.get_field_value(self.SHAPEJSON__FIELD_NAME.field_name)

    def set_UserAnnotation_field(self, value: Optional[str]):
        """
        Set data field with field name 'UserAnnotation' on this record model
        """
        self.set_field_value(self.USERANNOTATION__FIELD_NAME.field_name, value)

    def get_UserAnnotation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UserAnnotation' from this record model
        """
        return self.get_field_value(self.USERANNOTATION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_XChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'XChannelName' on this record model
        """
        self.set_field_value(self.XCHANNELNAME__FIELD_NAME.field_name, value)

    def get_XChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'XChannelName' from this record model
        """
        return self.get_field_value(self.XCHANNELNAME__FIELD_NAME.field_name)

    def set_YChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'YChannelName' on this record model
        """
        self.set_field_value(self.YCHANNELNAME__FIELD_NAME.field_name, value)

    def get_YChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'YChannelName' from this record model
        """
        return self.get_field_value(self.YCHANNELNAME__FIELD_NAME.field_name)


class FlowDensityGatingStrategyModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowDensityGatingStrategy
    Data Type Display Name: Flow Density Gating Strategy (Flow Density Gating Strategies)
    Fields: FilePath, PercentileY, VeloxCurrentVersion, CreatedBy, XAxisChannel, PercentileX, DateCreated, IsPositiveY, IsPositiveX, YAxisChannel, DataRecordName, IsEvaluated, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'FlowDensityGatingStrategy'
    DISPLAY_NAME: Final[str] = "Flow Density Gating Strategy"
    PLURAL_DISPLAY_NAME: Final[str] = "Flow Density Gating Strategies"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    ISEVALUATED__FIELD_NAME: Final[WrapperField] = WrapperField("IsEvaluated", FieldType.BOOLEAN, display_name="Is Evaluated")
    ISPOSITIVEX__FIELD_NAME: Final[WrapperField] = WrapperField("IsPositiveX", FieldType.BOOLEAN, display_name="Is Positive at X")
    ISPOSITIVEY__FIELD_NAME: Final[WrapperField] = WrapperField("IsPositiveY", FieldType.BOOLEAN, display_name="Is Positive at Y")
    PERCENTILEX__FIELD_NAME: Final[WrapperField] = WrapperField("PercentileX", FieldType.DOUBLE, display_name="Percentile X")
    PERCENTILEY__FIELD_NAME: Final[WrapperField] = WrapperField("PercentileY", FieldType.DOUBLE, display_name="Percentile Y")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    XAXISCHANNEL__FIELD_NAME: Final[WrapperField] = WrapperField("XAxisChannel", FieldType.SELECTION, display_name="X Axis Channel")
    YAXISCHANNEL__FIELD_NAME: Final[WrapperField] = WrapperField("YAxisChannel", FieldType.SELECTION, display_name="Y Axis Channel")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_IsEvaluated_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsEvaluated' on this record model
        """
        self.set_field_value(self.ISEVALUATED__FIELD_NAME.field_name, value)

    def get_IsEvaluated_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsEvaluated' from this record model
        """
        return self.get_field_value(self.ISEVALUATED__FIELD_NAME.field_name)

    def set_IsPositiveX_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPositiveX' on this record model
        """
        self.set_field_value(self.ISPOSITIVEX__FIELD_NAME.field_name, value)

    def get_IsPositiveX_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPositiveX' from this record model
        """
        return self.get_field_value(self.ISPOSITIVEX__FIELD_NAME.field_name)

    def set_IsPositiveY_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPositiveY' on this record model
        """
        self.set_field_value(self.ISPOSITIVEY__FIELD_NAME.field_name, value)

    def get_IsPositiveY_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPositiveY' from this record model
        """
        return self.get_field_value(self.ISPOSITIVEY__FIELD_NAME.field_name)

    def set_PercentileX_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentileX' on this record model
        """
        self.set_field_value(self.PERCENTILEX__FIELD_NAME.field_name, value)

    def get_PercentileX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentileX' from this record model
        """
        return self.get_field_value(self.PERCENTILEX__FIELD_NAME.field_name)

    def set_PercentileY_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentileY' on this record model
        """
        self.set_field_value(self.PERCENTILEY__FIELD_NAME.field_name, value)

    def get_PercentileY_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentileY' from this record model
        """
        return self.get_field_value(self.PERCENTILEY__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_XAxisChannel_field(self, value: Optional[str]):
        """
        Set data field with field name 'XAxisChannel' on this record model
        """
        self.set_field_value(self.XAXISCHANNEL__FIELD_NAME.field_name, value)

    def get_XAxisChannel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'XAxisChannel' from this record model
        """
        return self.get_field_value(self.XAXISCHANNEL__FIELD_NAME.field_name)

    def set_YAxisChannel_field(self, value: Optional[str]):
        """
        Set data field with field name 'YAxisChannel' on this record model
        """
        self.set_field_value(self.YAXISCHANNEL__FIELD_NAME.field_name, value)

    def get_YAxisChannel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'YAxisChannel' from this record model
        """
        return self.get_field_value(self.YAXISCHANNEL__FIELD_NAME.field_name)


class FlowJoWorkspaceFileModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowJoWorkspaceFile
    Data Type Display Name: FlowJo Workspace File (FlowJo Workspace Files)
    Fields: FilePath, CreatedBy, VeloxCurrentVersion, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    The raw FlowJo workspace file, in wsp format. Sapio does not use this directly after parsing the root. The workspace file here is for archival purpose.
    """
    DATA_TYPE_NAME: Final[str] = 'FlowJoWorkspaceFile'
    DISPLAY_NAME: Final[str] = "FlowJo Workspace File"
    PLURAL_DISPLAY_NAME: Final[str] = "FlowJo Workspace Files"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowJoWorkspaceGroupModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowJoWorkspaceGroup
    Data Type Display Name: FlowJo Workspace Group (FlowJo Workspace Groups)
    Fields: GroupName, FilePath, VeloxCurrentVersion, CreatedBy, DateCreated, DataRecordName, DataLoadComplete, VeloxLastModifiedDate, VeloxLastModifiedBy
    A group in FlowJo workspace may contain zero, one, or more samples. Each group can have a separate gating hierarchy.
Processing for a group is completed when all samples have been found and processed.
    """
    DATA_TYPE_NAME: Final[str] = 'FlowJoWorkspaceGroup'
    DISPLAY_NAME: Final[str] = "FlowJo Workspace Group"
    PLURAL_DISPLAY_NAME: Final[str] = "FlowJo Workspace Groups"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATALOADCOMPLETE__FIELD_NAME: Final[WrapperField] = WrapperField("DataLoadComplete", FieldType.BOOLEAN, display_name="Data Load Complete")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    GROUPNAME__FIELD_NAME: Final[WrapperField] = WrapperField("GroupName", FieldType.STRING, display_name="Group Name")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataLoadComplete_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DataLoadComplete' on this record model
        """
        self.set_field_value(self.DATALOADCOMPLETE__FIELD_NAME.field_name, value)

    def get_DataLoadComplete_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DataLoadComplete' from this record model
        """
        return self.get_field_value(self.DATALOADCOMPLETE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_GroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'GroupName' on this record model
        """
        self.set_field_value(self.GROUPNAME__FIELD_NAME.field_name, value)

    def get_GroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GroupName' from this record model
        """
        return self.get_field_value(self.GROUPNAME__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowJoWorkspaceRootModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowJoWorkspaceRoot
    Data Type Display Name: FlowJo Workspace Root (FlowJo Workspace Roots)
    Fields: FilePath, VeloxCurrentVersion, CreatedBy, DataRecordName, DataLoadComplete, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    At the top of the FlowJo Sapio workspace hierarchy when importing a wsp file. The raw data contains Sapio JSON representation of the FlowJo workspace data. The raw JSON data will be used when processing samples.
    """
    DATA_TYPE_NAME: Final[str] = 'FlowJoWorkspaceRoot'
    DISPLAY_NAME: Final[str] = "FlowJo Workspace Root"
    PLURAL_DISPLAY_NAME: Final[str] = "FlowJo Workspace Roots"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATALOADCOMPLETE__FIELD_NAME: Final[WrapperField] = WrapperField("DataLoadComplete", FieldType.BOOLEAN, display_name="Data Load Complete")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataLoadComplete_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DataLoadComplete' on this record model
        """
        self.set_field_value(self.DATALOADCOMPLETE__FIELD_NAME.field_name, value)

    def get_DataLoadComplete_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DataLoadComplete' from this record model
        """
        return self.get_field_value(self.DATALOADCOMPLETE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FlowManualGateModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FlowManualGate
    Data Type Display Name: Flow Manual Gate (Flow Manual Gates)
    Fields: CreatedBy, ShapeType, DateCreated, ShapeID, DataRecordName, UserAnnotation, YChannelName, XChannelName, VeloxLastModifiedDate, VeloxLastModifiedBy, IsNegated, ShapeJSON
    """
    DATA_TYPE_NAME: Final[str] = 'FlowManualGate'
    DISPLAY_NAME: Final[str] = "Flow Manual Gate"
    PLURAL_DISPLAY_NAME: Final[str] = "Flow Manual Gates"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ISNEGATED__FIELD_NAME: Final[WrapperField] = WrapperField("IsNegated", FieldType.BOOLEAN, display_name="Is Negated")
    SHAPEID__FIELD_NAME: Final[WrapperField] = WrapperField("ShapeID", FieldType.LONG, display_name="Shape ID")
    SHAPEJSON__FIELD_NAME: Final[WrapperField] = WrapperField("ShapeJSON", FieldType.STRING, display_name="Shape JSON")
    SHAPETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ShapeType", FieldType.STRING, display_name="Shape Type")
    USERANNOTATION__FIELD_NAME: Final[WrapperField] = WrapperField("UserAnnotation", FieldType.STRING, display_name="User Annotation")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    XCHANNELNAME__FIELD_NAME: Final[WrapperField] = WrapperField("XChannelName", FieldType.STRING, display_name="X Channel Name")
    YCHANNELNAME__FIELD_NAME: Final[WrapperField] = WrapperField("YChannelName", FieldType.STRING, display_name="Y Channel Name")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IsNegated_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsNegated' on this record model
        """
        self.set_field_value(self.ISNEGATED__FIELD_NAME.field_name, value)

    def get_IsNegated_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsNegated' from this record model
        """
        return self.get_field_value(self.ISNEGATED__FIELD_NAME.field_name)

    def set_ShapeID_field(self, value: Optional[int]):
        """
        Set data field with field name 'ShapeID' on this record model
        """
        self.set_field_value(self.SHAPEID__FIELD_NAME.field_name, value)

    def get_ShapeID_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ShapeID' from this record model
        """
        return self.get_field_value(self.SHAPEID__FIELD_NAME.field_name)

    def set_ShapeJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'ShapeJSON' on this record model
        """
        self.set_field_value(self.SHAPEJSON__FIELD_NAME.field_name, value)

    def get_ShapeJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ShapeJSON' from this record model
        """
        return self.get_field_value(self.SHAPEJSON__FIELD_NAME.field_name)

    def set_ShapeType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ShapeType' on this record model
        """
        self.set_field_value(self.SHAPETYPE__FIELD_NAME.field_name, value)

    def get_ShapeType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ShapeType' from this record model
        """
        return self.get_field_value(self.SHAPETYPE__FIELD_NAME.field_name)

    def set_UserAnnotation_field(self, value: Optional[str]):
        """
        Set data field with field name 'UserAnnotation' on this record model
        """
        self.set_field_value(self.USERANNOTATION__FIELD_NAME.field_name, value)

    def get_UserAnnotation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UserAnnotation' from this record model
        """
        return self.get_field_value(self.USERANNOTATION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_XChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'XChannelName' on this record model
        """
        self.set_field_value(self.XCHANNELNAME__FIELD_NAME.field_name, value)

    def get_XChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'XChannelName' from this record model
        """
        return self.get_field_value(self.XCHANNELNAME__FIELD_NAME.field_name)

    def set_YChannelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'YChannelName' on this record model
        """
        self.set_field_value(self.YCHANNELNAME__FIELD_NAME.field_name, value)

    def get_YChannelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'YChannelName' from this record model
        """
        return self.get_field_value(self.YCHANNELNAME__FIELD_NAME.field_name)


class FormulationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Formulation
    Data Type Display Name: Formulation (Formulations)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'Formulation'
    DISPLAY_NAME: Final[str] = "Formulation"
    PLURAL_DISPLAY_NAME: Final[str] = "Formulations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class FourPLLModelModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FourPLLModel
    Data Type Display Name: Four Parameter Logistic Regression (Four Parameter Logistic Regressions)
    Fields: FilePath, MultiParentLink215, EntryName, b, RSquared, c, VeloxCurrentVersion, CreatedBy, d, e, DateCreated, DataRecordName, SeriesName, ED90, SourceEntryId, VeloxLastModifiedDate, VeloxLastModifiedBy, ED50, ED95, ED10
    Records advanced curve viewer's four parameter logistic regression result, when measuring sample data.
    """
    DATA_TYPE_NAME: Final[str] = 'FourPLLModel'
    DISPLAY_NAME: Final[str] = "Four Parameter Logistic Regression"
    PLURAL_DISPLAY_NAME: Final[str] = "Four Parameter Logistic Regressions"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ED10__FIELD_NAME: Final[WrapperField] = WrapperField("ED10", FieldType.DOUBLE, display_name="ED-10")
    ED50__FIELD_NAME: Final[WrapperField] = WrapperField("ED50", FieldType.DOUBLE, display_name="ED-50")
    ED90__FIELD_NAME: Final[WrapperField] = WrapperField("ED90", FieldType.DOUBLE, display_name="ED-90")
    ED95__FIELD_NAME: Final[WrapperField] = WrapperField("ED95", FieldType.DOUBLE, display_name="ED-95")
    ENTRYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("EntryName", FieldType.STRING, display_name="Entry Name")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    RSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("RSquared", FieldType.DOUBLE, display_name="R Squared")
    SERIESNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SeriesName", FieldType.STRING, display_name="Series Name")
    SOURCEENTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("SourceEntryId", FieldType.LONG, display_name="Source Entry ID")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    B__FIELD_NAME: Final[WrapperField] = WrapperField("b", FieldType.DOUBLE, display_name="b (Slope)")
    C__FIELD_NAME: Final[WrapperField] = WrapperField("c", FieldType.DOUBLE, display_name="c (Lower)")
    D__FIELD_NAME: Final[WrapperField] = WrapperField("d", FieldType.DOUBLE, display_name="d (Upper)")
    E__FIELD_NAME: Final[WrapperField] = WrapperField("e", FieldType.DOUBLE, display_name="e (Inflection)")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ED10_field(self, value: Optional[float]):
        """
        Set data field with field name 'ED10' on this record model
        """
        self.set_field_value(self.ED10__FIELD_NAME.field_name, value)

    def get_ED10_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ED10' from this record model
        """
        return self.get_field_value(self.ED10__FIELD_NAME.field_name)

    def set_ED50_field(self, value: Optional[float]):
        """
        Set data field with field name 'ED50' on this record model
        """
        self.set_field_value(self.ED50__FIELD_NAME.field_name, value)

    def get_ED50_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ED50' from this record model
        """
        return self.get_field_value(self.ED50__FIELD_NAME.field_name)

    def set_ED90_field(self, value: Optional[float]):
        """
        Set data field with field name 'ED90' on this record model
        """
        self.set_field_value(self.ED90__FIELD_NAME.field_name, value)

    def get_ED90_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ED90' from this record model
        """
        return self.get_field_value(self.ED90__FIELD_NAME.field_name)

    def set_ED95_field(self, value: Optional[float]):
        """
        Set data field with field name 'ED95' on this record model
        """
        self.set_field_value(self.ED95__FIELD_NAME.field_name, value)

    def get_ED95_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ED95' from this record model
        """
        return self.get_field_value(self.ED95__FIELD_NAME.field_name)

    def set_EntryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'EntryName' on this record model
        """
        self.set_field_value(self.ENTRYNAME__FIELD_NAME.field_name, value)

    def get_EntryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EntryName' from this record model
        """
        return self.get_field_value(self.ENTRYNAME__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_RSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'RSquared' on this record model
        """
        self.set_field_value(self.RSQUARED__FIELD_NAME.field_name, value)

    def get_RSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RSquared' from this record model
        """
        return self.get_field_value(self.RSQUARED__FIELD_NAME.field_name)

    def set_SeriesName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SeriesName' on this record model
        """
        self.set_field_value(self.SERIESNAME__FIELD_NAME.field_name, value)

    def get_SeriesName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SeriesName' from this record model
        """
        return self.get_field_value(self.SERIESNAME__FIELD_NAME.field_name)

    def set_SourceEntryId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SourceEntryId' on this record model
        """
        self.set_field_value(self.SOURCEENTRYID__FIELD_NAME.field_name, value)

    def get_SourceEntryId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SourceEntryId' from this record model
        """
        return self.get_field_value(self.SOURCEENTRYID__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_b_field(self, value: Optional[float]):
        """
        Set data field with field name 'b' on this record model
        """
        self.set_field_value(self.B__FIELD_NAME.field_name, value)

    def get_b_field(self) -> Optional[float]:
        """
        Get data field value with field name 'b' from this record model
        """
        return self.get_field_value(self.B__FIELD_NAME.field_name)

    def set_c_field(self, value: Optional[float]):
        """
        Set data field with field name 'c' on this record model
        """
        self.set_field_value(self.C__FIELD_NAME.field_name, value)

    def get_c_field(self) -> Optional[float]:
        """
        Get data field value with field name 'c' from this record model
        """
        return self.get_field_value(self.C__FIELD_NAME.field_name)

    def set_d_field(self, value: Optional[float]):
        """
        Set data field with field name 'd' on this record model
        """
        self.set_field_value(self.D__FIELD_NAME.field_name, value)

    def get_d_field(self) -> Optional[float]:
        """
        Get data field value with field name 'd' from this record model
        """
        return self.get_field_value(self.D__FIELD_NAME.field_name)

    def set_e_field(self, value: Optional[float]):
        """
        Set data field with field name 'e' on this record model
        """
        self.set_field_value(self.E__FIELD_NAME.field_name, value)

    def get_e_field(self) -> Optional[float]:
        """
        Get data field value with field name 'e' from this record model
        """
        return self.get_field_value(self.E__FIELD_NAME.field_name)


class FragmentAnalyzerResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type FragmentAnalyzerResult
    Data Type Display Name: Fragment Analyzer Result (Fragment Analyzer Results)
    Fields: CreatedBy, DataRecordName, Molarity, PeakRegionIdentifier, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, AvgBPSize, MolarityUnits
    """
    DATA_TYPE_NAME: Final[str] = 'FragmentAnalyzerResult'
    DISPLAY_NAME: Final[str] = "Fragment Analyzer Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Fragment Analyzer Results"
    AVGBPSIZE__FIELD_NAME: Final[WrapperField] = WrapperField("AvgBPSize", FieldType.DOUBLE, display_name="Avg BP Size")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MOLARITY__FIELD_NAME: Final[WrapperField] = WrapperField("Molarity", FieldType.DOUBLE, display_name="Molarity")
    MOLARITYUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("MolarityUnits", FieldType.STRING, display_name="Molarity Units")
    PEAKREGIONIDENTIFIER__FIELD_NAME: Final[WrapperField] = WrapperField("PeakRegionIdentifier", FieldType.STRING, display_name="Peak/Region Identifier")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AvgBPSize_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgBPSize' on this record model
        """
        self.set_field_value(self.AVGBPSIZE__FIELD_NAME.field_name, value)

    def get_AvgBPSize_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgBPSize' from this record model
        """
        return self.get_field_value(self.AVGBPSIZE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Molarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molarity' on this record model
        """
        self.set_field_value(self.MOLARITY__FIELD_NAME.field_name, value)

    def get_Molarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molarity' from this record model
        """
        return self.get_field_value(self.MOLARITY__FIELD_NAME.field_name)

    def set_MolarityUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'MolarityUnits' on this record model
        """
        self.set_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name, value)

    def get_MolarityUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MolarityUnits' from this record model
        """
        return self.get_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name)

    def set_PeakRegionIdentifier_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeakRegionIdentifier' on this record model
        """
        self.set_field_value(self.PEAKREGIONIDENTIFIER__FIELD_NAME.field_name, value)

    def get_PeakRegionIdentifier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeakRegionIdentifier' from this record model
        """
        return self.get_field_value(self.PEAKREGIONIDENTIFIER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class GoldenGateAssemblyModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type GoldenGateAssembly
    Data Type Display Name: Golden Gate Assembly (Golden Gate Assemblies)
    Fields: AssemblyName, IsBackboneBackwards, BackboneCutPos5, CreatedBy, DateCreated, BackboneCutPos3, FinalSequenceSideLink, Problems, BackboneSideLink, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, BackboneOverhang3, BackboneOverhang5
    """
    DATA_TYPE_NAME: Final[str] = 'GoldenGateAssembly'
    DISPLAY_NAME: Final[str] = "Golden Gate Assembly"
    PLURAL_DISPLAY_NAME: Final[str] = "Golden Gate Assemblies"
    ASSEMBLYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("AssemblyName", FieldType.STRING, display_name="Assembly Name")
    BACKBONECUTPOS3__FIELD_NAME: Final[WrapperField] = WrapperField("BackboneCutPos3", FieldType.INTEGER, display_name="Backbone Cut Position 3'")
    BACKBONECUTPOS5__FIELD_NAME: Final[WrapperField] = WrapperField("BackboneCutPos5", FieldType.INTEGER, display_name="Backbone Cut Position 5'")
    BACKBONEOVERHANG3__FIELD_NAME: Final[WrapperField] = WrapperField("BackboneOverhang3", FieldType.STRING, display_name="Backbone Overhang 3'")
    BACKBONEOVERHANG5__FIELD_NAME: Final[WrapperField] = WrapperField("BackboneOverhang5", FieldType.STRING, display_name="Backbone Overhang 5'")
    BACKBONESIDELINK__FIELD_NAME: Final[WrapperField] = WrapperField("BackboneSideLink", FieldType.SIDE_LINK, display_name="Backbone Side Link")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FINALSEQUENCESIDELINK__FIELD_NAME: Final[WrapperField] = WrapperField("FinalSequenceSideLink", FieldType.SIDE_LINK, display_name="Final Sequence Side Link")
    ISBACKBONEBACKWARDS__FIELD_NAME: Final[WrapperField] = WrapperField("IsBackboneBackwards", FieldType.BOOLEAN, display_name="Is Backbone Backwards")
    PROBLEMS__FIELD_NAME: Final[WrapperField] = WrapperField("Problems", FieldType.STRING, display_name="Problems")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AssemblyName_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssemblyName' on this record model
        """
        self.set_field_value(self.ASSEMBLYNAME__FIELD_NAME.field_name, value)

    def get_AssemblyName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssemblyName' from this record model
        """
        return self.get_field_value(self.ASSEMBLYNAME__FIELD_NAME.field_name)

    def set_BackboneCutPos3_field(self, value: Optional[int]):
        """
        Set data field with field name 'BackboneCutPos3' on this record model
        """
        self.set_field_value(self.BACKBONECUTPOS3__FIELD_NAME.field_name, value)

    def get_BackboneCutPos3_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BackboneCutPos3' from this record model
        """
        return self.get_field_value(self.BACKBONECUTPOS3__FIELD_NAME.field_name)

    def set_BackboneCutPos5_field(self, value: Optional[int]):
        """
        Set data field with field name 'BackboneCutPos5' on this record model
        """
        self.set_field_value(self.BACKBONECUTPOS5__FIELD_NAME.field_name, value)

    def get_BackboneCutPos5_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BackboneCutPos5' from this record model
        """
        return self.get_field_value(self.BACKBONECUTPOS5__FIELD_NAME.field_name)

    def set_BackboneOverhang3_field(self, value: Optional[str]):
        """
        Set data field with field name 'BackboneOverhang3' on this record model
        """
        self.set_field_value(self.BACKBONEOVERHANG3__FIELD_NAME.field_name, value)

    def get_BackboneOverhang3_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BackboneOverhang3' from this record model
        """
        return self.get_field_value(self.BACKBONEOVERHANG3__FIELD_NAME.field_name)

    def set_BackboneOverhang5_field(self, value: Optional[str]):
        """
        Set data field with field name 'BackboneOverhang5' on this record model
        """
        self.set_field_value(self.BACKBONEOVERHANG5__FIELD_NAME.field_name, value)

    def get_BackboneOverhang5_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BackboneOverhang5' from this record model
        """
        return self.get_field_value(self.BACKBONEOVERHANG5__FIELD_NAME.field_name)

    def set_BackboneSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'BackboneSideLink' on this record model
        """
        self.set_field_value(self.BACKBONESIDELINK__FIELD_NAME.field_name, value)

    def get_BackboneSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BackboneSideLink' from this record model
        """
        return self.get_field_value(self.BACKBONESIDELINK__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FinalSequenceSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'FinalSequenceSideLink' on this record model
        """
        self.set_field_value(self.FINALSEQUENCESIDELINK__FIELD_NAME.field_name, value)

    def get_FinalSequenceSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FinalSequenceSideLink' from this record model
        """
        return self.get_field_value(self.FINALSEQUENCESIDELINK__FIELD_NAME.field_name)

    def set_IsBackboneBackwards_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsBackboneBackwards' on this record model
        """
        self.set_field_value(self.ISBACKBONEBACKWARDS__FIELD_NAME.field_name, value)

    def get_IsBackboneBackwards_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsBackboneBackwards' from this record model
        """
        return self.get_field_value(self.ISBACKBONEBACKWARDS__FIELD_NAME.field_name)

    def set_Problems_field(self, value: Optional[str]):
        """
        Set data field with field name 'Problems' on this record model
        """
        self.set_field_value(self.PROBLEMS__FIELD_NAME.field_name, value)

    def get_Problems_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Problems' from this record model
        """
        return self.get_field_value(self.PROBLEMS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class GoldenGateExpModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type GoldenGateExp
    Data Type Display Name: Golden Gate Experiment (Golden Gate Experiments)
    Fields: EnzymeOverhangLength, CreatedBy, DateCreated, Scenario, EnzymeRSite, DataRecordName, ExperimentName, EnzymeOverhangType, VeloxLastModifiedDate, VeloxLastModifiedBy, Warnings, TabId
    """
    DATA_TYPE_NAME: Final[str] = 'GoldenGateExp'
    DISPLAY_NAME: Final[str] = "Golden Gate Experiment"
    PLURAL_DISPLAY_NAME: Final[str] = "Golden Gate Experiments"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ENZYMEOVERHANGLENGTH__FIELD_NAME: Final[WrapperField] = WrapperField("EnzymeOverhangLength", FieldType.INTEGER, display_name="Enzyme Overhang Length")
    ENZYMEOVERHANGTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("EnzymeOverhangType", FieldType.STRING, display_name="Enzyme Overhang Type")
    ENZYMERSITE__FIELD_NAME: Final[WrapperField] = WrapperField("EnzymeRSite", FieldType.STRING, display_name="Enzyme R Site")
    EXPERIMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentName", FieldType.STRING, display_name="Experiment Name")
    SCENARIO__FIELD_NAME: Final[WrapperField] = WrapperField("Scenario", FieldType.STRING, display_name="Scenario")
    TABID__FIELD_NAME: Final[WrapperField] = WrapperField("TabId", FieldType.STRING, display_name="Tab ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WARNINGS__FIELD_NAME: Final[WrapperField] = WrapperField("Warnings", FieldType.STRING, display_name="Warnings")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EnzymeOverhangLength_field(self, value: Optional[int]):
        """
        Set data field with field name 'EnzymeOverhangLength' on this record model
        """
        self.set_field_value(self.ENZYMEOVERHANGLENGTH__FIELD_NAME.field_name, value)

    def get_EnzymeOverhangLength_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EnzymeOverhangLength' from this record model
        """
        return self.get_field_value(self.ENZYMEOVERHANGLENGTH__FIELD_NAME.field_name)

    def set_EnzymeOverhangType_field(self, value: Optional[str]):
        """
        Set data field with field name 'EnzymeOverhangType' on this record model
        """
        self.set_field_value(self.ENZYMEOVERHANGTYPE__FIELD_NAME.field_name, value)

    def get_EnzymeOverhangType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EnzymeOverhangType' from this record model
        """
        return self.get_field_value(self.ENZYMEOVERHANGTYPE__FIELD_NAME.field_name)

    def set_EnzymeRSite_field(self, value: Optional[str]):
        """
        Set data field with field name 'EnzymeRSite' on this record model
        """
        self.set_field_value(self.ENZYMERSITE__FIELD_NAME.field_name, value)

    def get_EnzymeRSite_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EnzymeRSite' from this record model
        """
        return self.get_field_value(self.ENZYMERSITE__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_Scenario_field(self, value: Optional[str]):
        """
        Set data field with field name 'Scenario' on this record model
        """
        self.set_field_value(self.SCENARIO__FIELD_NAME.field_name, value)

    def get_Scenario_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Scenario' from this record model
        """
        return self.get_field_value(self.SCENARIO__FIELD_NAME.field_name)

    def set_TabId_field(self, value: Optional[str]):
        """
        Set data field with field name 'TabId' on this record model
        """
        self.set_field_value(self.TABID__FIELD_NAME.field_name, value)

    def get_TabId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TabId' from this record model
        """
        return self.get_field_value(self.TABID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Warnings_field(self, value: Optional[str]):
        """
        Set data field with field name 'Warnings' on this record model
        """
        self.set_field_value(self.WARNINGS__FIELD_NAME.field_name, value)

    def get_Warnings_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Warnings' from this record model
        """
        return self.get_field_value(self.WARNINGS__FIELD_NAME.field_name)


class GoldenGateFragmentAssignmentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type GoldenGateFragmentAssignment
    Data Type Display Name: Golden Gate Fragment Assignment (Golden Gate Fragment Assignments)
    Fields: CreatedBy, FragNumber, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, BinName, DateCreated, FragmentSideLink, AllFragments
    """
    DATA_TYPE_NAME: Final[str] = 'GoldenGateFragmentAssignment'
    DISPLAY_NAME: Final[str] = "Golden Gate Fragment Assignment"
    PLURAL_DISPLAY_NAME: Final[str] = "Golden Gate Fragment Assignments"
    ALLFRAGMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("AllFragments", FieldType.STRING, display_name="All Fragments")
    BINNAME__FIELD_NAME: Final[WrapperField] = WrapperField("BinName", FieldType.STRING, display_name="Bin Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FRAGNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("FragNumber", FieldType.INTEGER, display_name="Frag #/Bin #")
    FRAGMENTSIDELINK__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentSideLink", FieldType.SIDE_LINK, display_name="Fragment Side Link")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AllFragments_field(self, value: Optional[str]):
        """
        Set data field with field name 'AllFragments' on this record model
        """
        self.set_field_value(self.ALLFRAGMENTS__FIELD_NAME.field_name, value)

    def get_AllFragments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AllFragments' from this record model
        """
        return self.get_field_value(self.ALLFRAGMENTS__FIELD_NAME.field_name)

    def set_BinName_field(self, value: Optional[str]):
        """
        Set data field with field name 'BinName' on this record model
        """
        self.set_field_value(self.BINNAME__FIELD_NAME.field_name, value)

    def get_BinName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BinName' from this record model
        """
        return self.get_field_value(self.BINNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FragNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'FragNumber' on this record model
        """
        self.set_field_value(self.FRAGNUMBER__FIELD_NAME.field_name, value)

    def get_FragNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FragNumber' from this record model
        """
        return self.get_field_value(self.FRAGNUMBER__FIELD_NAME.field_name)

    def set_FragmentSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'FragmentSideLink' on this record model
        """
        self.set_field_value(self.FRAGMENTSIDELINK__FIELD_NAME.field_name, value)

    def get_FragmentSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FragmentSideLink' from this record model
        """
        return self.get_field_value(self.FRAGMENTSIDELINK__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HelmChemPropertyModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HelmChemProperty
    Data Type Display Name: Helm Chem Property (Helm Chem Properties)
    Fields: ExactMass, CreatedBy, inchi, Charge, DateCreated, SMILES, MOL, CXSMILESHash, HasOrStereoGroup, TotalHBondCount, Formula, PolarSurfaceArea, TotalHBondAcceptors, DataRecordName, RegisteredToCartridge, VeloxLastModifiedDate, cLogP, VeloxLastModifiedBy, StereoRegHash, InchiKey, MolecularWeight
    """
    DATA_TYPE_NAME: Final[str] = 'HelmChemProperty'
    DISPLAY_NAME: Final[str] = "Helm Chem Property"
    PLURAL_DISPLAY_NAME: Final[str] = "Helm Chem Properties"
    CXSMILESHASH__FIELD_NAME: Final[WrapperField] = WrapperField("CXSMILESHash", FieldType.STRING, display_name="CXSMILES Hash")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    HASORSTEREOGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN, display_name="Contains OR Stereo")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="INCHI Key")
    MOL__FIELD_NAME: Final[WrapperField] = WrapperField("MOL", FieldType.STRING, display_name="MOL")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    REGISTEREDTOCARTRIDGE__FIELD_NAME: Final[WrapperField] = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN, display_name="Registered To Cartridge")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="Canonical SMILES")
    STEREOREGHASH__FIELD_NAME: Final[WrapperField] = WrapperField("StereoRegHash", FieldType.STRING, display_name="Stereo Registration Hash")
    TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondAcceptors", FieldType.INTEGER, display_name="# Hydrogen Acceptors")
    TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondCount", FieldType.INTEGER, display_name="# Hydrogen Donors")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="INCHI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class HighThroughputScreeningDetailsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HighThroughputScreeningDetails
    Data Type Display Name: High Throughput Screening Details (High Throughput Screening Details)
    Fields: MultiParentLink215, MultiParentLink159, Temperature, CreatedBy, TransferVolume, DateCreated, RPM, DataRecordName, Length, Humidity, VeloxLastModifiedDate, VeloxLastModifiedBy, NumDaughterPlates
    """
    DATA_TYPE_NAME: Final[str] = 'HighThroughputScreeningDetails'
    DISPLAY_NAME: Final[str] = "High Throughput Screening Details"
    PLURAL_DISPLAY_NAME: Final[str] = "High Throughput Screening Details"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    HUMIDITY__FIELD_NAME: Final[WrapperField] = WrapperField("Humidity", FieldType.DOUBLE, display_name="Humidity (%)")
    LENGTH__FIELD_NAME: Final[WrapperField] = WrapperField("Length", FieldType.DOUBLE, display_name="Length (hrs)")
    MULTIPARENTLINK159__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink159", FieldType.MULTIPARENTLINK, display_name="Linked Plate")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    NUMDAUGHTERPLATES__FIELD_NAME: Final[WrapperField] = WrapperField("NumDaughterPlates", FieldType.INTEGER, display_name="# of Daughter Plates")
    RPM__FIELD_NAME: Final[WrapperField] = WrapperField("RPM", FieldType.DOUBLE, display_name="RPM")
    TEMPERATURE__FIELD_NAME: Final[WrapperField] = WrapperField("Temperature", FieldType.DOUBLE, display_name="Temperature (C)")
    TRANSFERVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("TransferVolume", FieldType.DOUBLE, display_name="Transfer Volume (uL)")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Humidity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Humidity' on this record model
        """
        self.set_field_value(self.HUMIDITY__FIELD_NAME.field_name, value)

    def get_Humidity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Humidity' from this record model
        """
        return self.get_field_value(self.HUMIDITY__FIELD_NAME.field_name)

    def set_Length_field(self, value: Optional[float]):
        """
        Set data field with field name 'Length' on this record model
        """
        self.set_field_value(self.LENGTH__FIELD_NAME.field_name, value)

    def get_Length_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Length' from this record model
        """
        return self.get_field_value(self.LENGTH__FIELD_NAME.field_name)

    def set_NumDaughterPlates_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumDaughterPlates' on this record model
        """
        self.set_field_value(self.NUMDAUGHTERPLATES__FIELD_NAME.field_name, value)

    def get_NumDaughterPlates_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumDaughterPlates' from this record model
        """
        return self.get_field_value(self.NUMDAUGHTERPLATES__FIELD_NAME.field_name)

    def set_RPM_field(self, value: Optional[float]):
        """
        Set data field with field name 'RPM' on this record model
        """
        self.set_field_value(self.RPM__FIELD_NAME.field_name, value)

    def get_RPM_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RPM' from this record model
        """
        return self.get_field_value(self.RPM__FIELD_NAME.field_name)

    def set_Temperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'Temperature' on this record model
        """
        self.set_field_value(self.TEMPERATURE__FIELD_NAME.field_name, value)

    def get_Temperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Temperature' from this record model
        """
        return self.get_field_value(self.TEMPERATURE__FIELD_NAME.field_name)

    def set_TransferVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'TransferVolume' on this record model
        """
        self.set_field_value(self.TRANSFERVOLUME__FIELD_NAME.field_name, value)

    def get_TransferVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TransferVolume' from this record model
        """
        return self.get_field_value(self.TRANSFERVOLUME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HiSeqFirstBaseReportModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HiSeqFirstBaseReport
    Data Type Display Name: HiSeq First Base Report (HiSeq First Base Reports)
    Fields: CreatedBy, C_Intensity, T_Intensity, Lane, DateCreated, C_Focus_Score, Surface, A_Intensity, DataRecordName, T_Focus_Score, A_Focus_Score, G_Intensity, VeloxLastModifiedDate, VeloxLastModifiedBy, G_Focus_Score, ClusterDensity
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: Final[str] = 'HiSeqFirstBaseReport'
    DISPLAY_NAME: Final[str] = "HiSeq First Base Report"
    PLURAL_DISPLAY_NAME: Final[str] = "HiSeq First Base Reports"
    A_FOCUS_SCORE__FIELD_NAME: Final[WrapperField] = WrapperField("A_Focus_Score", FieldType.DOUBLE, display_name="A Focus Score")
    A_INTENSITY__FIELD_NAME: Final[WrapperField] = WrapperField("A_Intensity", FieldType.DOUBLE, display_name="A Intensity")
    C_FOCUS_SCORE__FIELD_NAME: Final[WrapperField] = WrapperField("C_Focus_Score", FieldType.DOUBLE, display_name="C Focus Score")
    C_INTENSITY__FIELD_NAME: Final[WrapperField] = WrapperField("C_Intensity", FieldType.DOUBLE, display_name="C Intensity")
    CLUSTERDENSITY__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterDensity", FieldType.DOUBLE, display_name="Cluster Density (k/mm^2)")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    G_FOCUS_SCORE__FIELD_NAME: Final[WrapperField] = WrapperField("G_Focus_Score", FieldType.DOUBLE, display_name="G Focus Score")
    G_INTENSITY__FIELD_NAME: Final[WrapperField] = WrapperField("G_Intensity", FieldType.DOUBLE, display_name="G Intensity")
    LANE__FIELD_NAME: Final[WrapperField] = WrapperField("Lane", FieldType.STRING, display_name="Lane")
    SURFACE__FIELD_NAME: Final[WrapperField] = WrapperField("Surface", FieldType.STRING, display_name="Surface")
    T_FOCUS_SCORE__FIELD_NAME: Final[WrapperField] = WrapperField("T_Focus_Score", FieldType.DOUBLE, display_name="T Focus Score")
    T_INTENSITY__FIELD_NAME: Final[WrapperField] = WrapperField("T_Intensity", FieldType.DOUBLE, display_name="T Intensity")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A_Focus_Score_field(self, value: Optional[float]):
        """
        Set data field with field name 'A_Focus_Score' on this record model
        """
        self.set_field_value(self.A_FOCUS_SCORE__FIELD_NAME.field_name, value)

    def get_A_Focus_Score_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A_Focus_Score' from this record model
        """
        return self.get_field_value(self.A_FOCUS_SCORE__FIELD_NAME.field_name)

    def set_A_Intensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'A_Intensity' on this record model
        """
        self.set_field_value(self.A_INTENSITY__FIELD_NAME.field_name, value)

    def get_A_Intensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A_Intensity' from this record model
        """
        return self.get_field_value(self.A_INTENSITY__FIELD_NAME.field_name)

    def set_C_Focus_Score_field(self, value: Optional[float]):
        """
        Set data field with field name 'C_Focus_Score' on this record model
        """
        self.set_field_value(self.C_FOCUS_SCORE__FIELD_NAME.field_name, value)

    def get_C_Focus_Score_field(self) -> Optional[float]:
        """
        Get data field value with field name 'C_Focus_Score' from this record model
        """
        return self.get_field_value(self.C_FOCUS_SCORE__FIELD_NAME.field_name)

    def set_C_Intensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'C_Intensity' on this record model
        """
        self.set_field_value(self.C_INTENSITY__FIELD_NAME.field_name, value)

    def get_C_Intensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'C_Intensity' from this record model
        """
        return self.get_field_value(self.C_INTENSITY__FIELD_NAME.field_name)

    def set_ClusterDensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ClusterDensity' on this record model
        """
        self.set_field_value(self.CLUSTERDENSITY__FIELD_NAME.field_name, value)

    def get_ClusterDensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ClusterDensity' from this record model
        """
        return self.get_field_value(self.CLUSTERDENSITY__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_G_Focus_Score_field(self, value: Optional[float]):
        """
        Set data field with field name 'G_Focus_Score' on this record model
        """
        self.set_field_value(self.G_FOCUS_SCORE__FIELD_NAME.field_name, value)

    def get_G_Focus_Score_field(self) -> Optional[float]:
        """
        Get data field value with field name 'G_Focus_Score' from this record model
        """
        return self.get_field_value(self.G_FOCUS_SCORE__FIELD_NAME.field_name)

    def set_G_Intensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'G_Intensity' on this record model
        """
        self.set_field_value(self.G_INTENSITY__FIELD_NAME.field_name, value)

    def get_G_Intensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'G_Intensity' from this record model
        """
        return self.get_field_value(self.G_INTENSITY__FIELD_NAME.field_name)

    def set_Lane_field(self, value: Optional[str]):
        """
        Set data field with field name 'Lane' on this record model
        """
        self.set_field_value(self.LANE__FIELD_NAME.field_name, value)

    def get_Lane_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Lane' from this record model
        """
        return self.get_field_value(self.LANE__FIELD_NAME.field_name)

    def set_Surface_field(self, value: Optional[str]):
        """
        Set data field with field name 'Surface' on this record model
        """
        self.set_field_value(self.SURFACE__FIELD_NAME.field_name, value)

    def get_Surface_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Surface' from this record model
        """
        return self.get_field_value(self.SURFACE__FIELD_NAME.field_name)

    def set_T_Focus_Score_field(self, value: Optional[float]):
        """
        Set data field with field name 'T_Focus_Score' on this record model
        """
        self.set_field_value(self.T_FOCUS_SCORE__FIELD_NAME.field_name, value)

    def get_T_Focus_Score_field(self) -> Optional[float]:
        """
        Get data field value with field name 'T_Focus_Score' from this record model
        """
        return self.get_field_value(self.T_FOCUS_SCORE__FIELD_NAME.field_name)

    def set_T_Intensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'T_Intensity' on this record model
        """
        self.set_field_value(self.T_INTENSITY__FIELD_NAME.field_name, value)

    def get_T_Intensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'T_Intensity' from this record model
        """
        return self.get_field_value(self.T_INTENSITY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HistologyGroupModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HistologyGroup
    Data Type Display Name: Histology Group (Histology Groups)
    Fields: TmSampleSubtype, GroupName, Stain, CreatedBy, TmDirection, TmContainerType, DateCreated, StainRecordId, DrugDosingDetails, DataRecordName, HistologyGroupID, TmTimepoint, VeloxLastModifiedDate, TreatmentDetails, TmSampleType, VeloxLastModifiedBy, Histology_GroupComment
    """
    DATA_TYPE_NAME: Final[str] = 'HistologyGroup'
    DISPLAY_NAME: Final[str] = "Histology Group"
    PLURAL_DISPLAY_NAME: Final[str] = "Histology Groups"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DRUGDOSINGDETAILS__FIELD_NAME: Final[WrapperField] = WrapperField("DrugDosingDetails", FieldType.STRING, display_name="Drug Dosing Details")
    GROUPNAME__FIELD_NAME: Final[WrapperField] = WrapperField("GroupName", FieldType.STRING, display_name="Histology Group Name")
    HISTOLOGYGROUPID__FIELD_NAME: Final[WrapperField] = WrapperField("HistologyGroupID", FieldType.STRING, display_name="Histology Group ID")
    HISTOLOGY_GROUPCOMMENT__FIELD_NAME: Final[WrapperField] = WrapperField("Histology_GroupComment", FieldType.STRING, display_name="Histology Group Comment")
    STAIN__FIELD_NAME: Final[WrapperField] = WrapperField("Stain", FieldType.SELECTION, display_name="Stain")
    STAINRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("StainRecordId", FieldType.LONG, display_name="Stain Record ID")
    TMCONTAINERTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("TmContainerType", FieldType.STRING, display_name="Tm Container Type")
    TMDIRECTION__FIELD_NAME: Final[WrapperField] = WrapperField("TmDirection", FieldType.STRING, display_name="Tm Direction")
    TMSAMPLESUBTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("TmSampleSubtype", FieldType.STRING, display_name="Tm Sample Subtype")
    TMSAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("TmSampleType", FieldType.STRING, display_name="Tm Sample Type")
    TMTIMEPOINT__FIELD_NAME: Final[WrapperField] = WrapperField("TmTimepoint", FieldType.STRING, display_name="Tm Timepoint")
    TREATMENTDETAILS__FIELD_NAME: Final[WrapperField] = WrapperField("TreatmentDetails", FieldType.STRING, display_name="Treatment Details")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DrugDosingDetails_field(self, value: Optional[str]):
        """
        Set data field with field name 'DrugDosingDetails' on this record model
        """
        self.set_field_value(self.DRUGDOSINGDETAILS__FIELD_NAME.field_name, value)

    def get_DrugDosingDetails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DrugDosingDetails' from this record model
        """
        return self.get_field_value(self.DRUGDOSINGDETAILS__FIELD_NAME.field_name)

    def set_GroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'GroupName' on this record model
        """
        self.set_field_value(self.GROUPNAME__FIELD_NAME.field_name, value)

    def get_GroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GroupName' from this record model
        """
        return self.get_field_value(self.GROUPNAME__FIELD_NAME.field_name)

    def set_HistologyGroupID_field(self, value: Optional[str]):
        """
        Set data field with field name 'HistologyGroupID' on this record model
        """
        self.set_field_value(self.HISTOLOGYGROUPID__FIELD_NAME.field_name, value)

    def get_HistologyGroupID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HistologyGroupID' from this record model
        """
        return self.get_field_value(self.HISTOLOGYGROUPID__FIELD_NAME.field_name)

    def set_Histology_GroupComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'Histology_GroupComment' on this record model
        """
        self.set_field_value(self.HISTOLOGY_GROUPCOMMENT__FIELD_NAME.field_name, value)

    def get_Histology_GroupComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Histology_GroupComment' from this record model
        """
        return self.get_field_value(self.HISTOLOGY_GROUPCOMMENT__FIELD_NAME.field_name)

    def set_Stain_field(self, value: Optional[str]):
        """
        Set data field with field name 'Stain' on this record model
        """
        self.set_field_value(self.STAIN__FIELD_NAME.field_name, value)

    def get_Stain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Stain' from this record model
        """
        return self.get_field_value(self.STAIN__FIELD_NAME.field_name)

    def set_StainRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'StainRecordId' on this record model
        """
        self.set_field_value(self.STAINRECORDID__FIELD_NAME.field_name, value)

    def get_StainRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StainRecordId' from this record model
        """
        return self.get_field_value(self.STAINRECORDID__FIELD_NAME.field_name)

    def set_TmContainerType_field(self, value: Optional[str]):
        """
        Set data field with field name 'TmContainerType' on this record model
        """
        self.set_field_value(self.TMCONTAINERTYPE__FIELD_NAME.field_name, value)

    def get_TmContainerType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TmContainerType' from this record model
        """
        return self.get_field_value(self.TMCONTAINERTYPE__FIELD_NAME.field_name)

    def set_TmDirection_field(self, value: Optional[str]):
        """
        Set data field with field name 'TmDirection' on this record model
        """
        self.set_field_value(self.TMDIRECTION__FIELD_NAME.field_name, value)

    def get_TmDirection_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TmDirection' from this record model
        """
        return self.get_field_value(self.TMDIRECTION__FIELD_NAME.field_name)

    def set_TmSampleSubtype_field(self, value: Optional[str]):
        """
        Set data field with field name 'TmSampleSubtype' on this record model
        """
        self.set_field_value(self.TMSAMPLESUBTYPE__FIELD_NAME.field_name, value)

    def get_TmSampleSubtype_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TmSampleSubtype' from this record model
        """
        return self.get_field_value(self.TMSAMPLESUBTYPE__FIELD_NAME.field_name)

    def set_TmSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'TmSampleType' on this record model
        """
        self.set_field_value(self.TMSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_TmSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TmSampleType' from this record model
        """
        return self.get_field_value(self.TMSAMPLETYPE__FIELD_NAME.field_name)

    def set_TmTimepoint_field(self, value: Optional[str]):
        """
        Set data field with field name 'TmTimepoint' on this record model
        """
        self.set_field_value(self.TMTIMEPOINT__FIELD_NAME.field_name, value)

    def get_TmTimepoint_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TmTimepoint' from this record model
        """
        return self.get_field_value(self.TMTIMEPOINT__FIELD_NAME.field_name)

    def set_TreatmentDetails_field(self, value: Optional[str]):
        """
        Set data field with field name 'TreatmentDetails' on this record model
        """
        self.set_field_value(self.TREATMENTDETAILS__FIELD_NAME.field_name, value)

    def get_TreatmentDetails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TreatmentDetails' from this record model
        """
        return self.get_field_value(self.TREATMENTDETAILS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HistologyProtocol1Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HistologyProtocol1
    Data Type Display Name: Histology Protocol (Histology Protocols)
    Fields: GroupName, MultiParentLink215, NextUidNumberPerPrefix, CreatedBy, RequestId, DateCreated, SubjectNumber, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, SubjectId, SampleId
    """
    DATA_TYPE_NAME: Final[str] = 'HistologyProtocol1'
    DISPLAY_NAME: Final[str] = "Histology Protocol"
    PLURAL_DISPLAY_NAME: Final[str] = "Histology Protocols"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    GROUPNAME__FIELD_NAME: Final[WrapperField] = WrapperField("GroupName", FieldType.STRING, display_name="Group Name")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    NEXTUIDNUMBERPERPREFIX__FIELD_NAME: Final[WrapperField] = WrapperField("NextUidNumberPerPrefix", FieldType.STRING, display_name="Next Uid Number Per Prefix")
    REQUESTID__FIELD_NAME: Final[WrapperField] = WrapperField("RequestId", FieldType.STRING, display_name="Request Id")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    SUBJECTID__FIELD_NAME: Final[WrapperField] = WrapperField("SubjectId", FieldType.STRING, display_name="Subject ID")
    SUBJECTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("SubjectNumber", FieldType.LONG, display_name="Subject Number")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'GroupName' on this record model
        """
        self.set_field_value(self.GROUPNAME__FIELD_NAME.field_name, value)

    def get_GroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GroupName' from this record model
        """
        return self.get_field_value(self.GROUPNAME__FIELD_NAME.field_name)

    def set_NextUidNumberPerPrefix_field(self, value: Optional[str]):
        """
        Set data field with field name 'NextUidNumberPerPrefix' on this record model
        """
        self.set_field_value(self.NEXTUIDNUMBERPERPREFIX__FIELD_NAME.field_name, value)

    def get_NextUidNumberPerPrefix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NextUidNumberPerPrefix' from this record model
        """
        return self.get_field_value(self.NEXTUIDNUMBERPERPREFIX__FIELD_NAME.field_name)

    def set_RequestId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequestId' on this record model
        """
        self.set_field_value(self.REQUESTID__FIELD_NAME.field_name, value)

    def get_RequestId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequestId' from this record model
        """
        return self.get_field_value(self.REQUESTID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SubjectId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectId' on this record model
        """
        self.set_field_value(self.SUBJECTID__FIELD_NAME.field_name, value)

    def get_SubjectId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectId' from this record model
        """
        return self.get_field_value(self.SUBJECTID__FIELD_NAME.field_name)

    def set_SubjectNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'SubjectNumber' on this record model
        """
        self.set_field_value(self.SUBJECTNUMBER__FIELD_NAME.field_name, value)

    def get_SubjectNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SubjectNumber' from this record model
        """
        return self.get_field_value(self.SUBJECTNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HistologyProtocol2Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HistologyProtocol2
    Data Type Display Name: Histology Protocol 2 (Histology Protocol 2s)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SlideId, SlidePosition, SampleId
    """
    DATA_TYPE_NAME: Final[str] = 'HistologyProtocol2'
    DISPLAY_NAME: Final[str] = "Histology Protocol 2"
    PLURAL_DISPLAY_NAME: Final[str] = "Histology Protocol 2s"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    SLIDEID__FIELD_NAME: Final[WrapperField] = WrapperField("SlideId", FieldType.STRING, display_name="Slide Id")
    SLIDEPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("SlidePosition", FieldType.SHORT, display_name="Slide Position")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SlideId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SlideId' on this record model
        """
        self.set_field_value(self.SLIDEID__FIELD_NAME.field_name, value)

    def get_SlideId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SlideId' from this record model
        """
        return self.get_field_value(self.SLIDEID__FIELD_NAME.field_name)

    def set_SlidePosition_field(self, value: Optional[int]):
        """
        Set data field with field name 'SlidePosition' on this record model
        """
        self.set_field_value(self.SLIDEPOSITION__FIELD_NAME.field_name, value)

    def get_SlidePosition_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SlidePosition' from this record model
        """
        return self.get_field_value(self.SLIDEPOSITION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HistologyProtocol3Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HistologyProtocol3
    Data Type Display Name: Histology Protocol 3 (Histology Protocol 3s)
    Fields: CreatedBy, DataRecordName, AssignedSpecialStain, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SampleId
    """
    DATA_TYPE_NAME: Final[str] = 'HistologyProtocol3'
    DISPLAY_NAME: Final[str] = "Histology Protocol 3"
    PLURAL_DISPLAY_NAME: Final[str] = "Histology Protocol 3s"
    ASSIGNEDSPECIALSTAIN__FIELD_NAME: Final[WrapperField] = WrapperField("AssignedSpecialStain", FieldType.STRING, display_name="Special Stain")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AssignedSpecialStain_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedSpecialStain' on this record model
        """
        self.set_field_value(self.ASSIGNEDSPECIALSTAIN__FIELD_NAME.field_name, value)

    def get_AssignedSpecialStain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedSpecialStain' from this record model
        """
        return self.get_field_value(self.ASSIGNEDSPECIALSTAIN__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HistologySlideModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HistologySlide
    Data Type Display Name: Histology Slide (Histology Slide)
    Fields: MultiParentLink215, AssignedGroups, NumSections, DateCreated, SlideIdClonedFrom, FileIdentifier, AssignedStain, VeloxLastModifiedBy, AssignedDosage, AperioImageId, GeneratedLayoutSlideId, FilePath, VeloxCurrentVersion, CreatedBy, AssignedTissue, SampleGroupByFieldIds, AperioId, SlideId, GeneratedLayoutAssignedStain, DataRecordName, VeloxLastModifiedDate, ProtocolNumber
    """
    DATA_TYPE_NAME: Final[str] = 'HistologySlide'
    DISPLAY_NAME: Final[str] = "Histology Slide"
    PLURAL_DISPLAY_NAME: Final[str] = "Histology Slide"
    APERIOID__FIELD_NAME: Final[WrapperField] = WrapperField("AperioId", FieldType.STRING, display_name="Aperio ID")
    APERIOIMAGEID__FIELD_NAME: Final[WrapperField] = WrapperField("AperioImageId", FieldType.STRING, display_name="Aperio Image ID")
    ASSIGNEDDOSAGE__FIELD_NAME: Final[WrapperField] = WrapperField("AssignedDosage", FieldType.STRING, display_name="Assigned Dosage")
    ASSIGNEDGROUPS__FIELD_NAME: Final[WrapperField] = WrapperField("AssignedGroups", FieldType.STRING, display_name="Section(s) On Slide")
    ASSIGNEDSTAIN__FIELD_NAME: Final[WrapperField] = WrapperField("AssignedStain", FieldType.STRING, display_name="Assigned Stain")
    ASSIGNEDTISSUE__FIELD_NAME: Final[WrapperField] = WrapperField("AssignedTissue", FieldType.STRING, display_name="Assigned Tissue")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEIDENTIFIER__FIELD_NAME: Final[WrapperField] = WrapperField("FileIdentifier", FieldType.STRING, display_name="File Identifier")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    GENERATEDLAYOUTASSIGNEDSTAIN__FIELD_NAME: Final[WrapperField] = WrapperField("GeneratedLayoutAssignedStain", FieldType.STRING, display_name="Suggested Stain")
    GENERATEDLAYOUTSLIDEID__FIELD_NAME: Final[WrapperField] = WrapperField("GeneratedLayoutSlideId", FieldType.STRING, display_name="Generated Layout Slide Id")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    NUMSECTIONS__FIELD_NAME: Final[WrapperField] = WrapperField("NumSections", FieldType.INTEGER, display_name="# Sections")
    PROTOCOLNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ProtocolNumber", FieldType.STRING, display_name="Protocol Number")
    SAMPLEGROUPBYFIELDIDS__FIELD_NAME: Final[WrapperField] = WrapperField("SampleGroupByFieldIds", FieldType.STRING, display_name="Investigator Ids")
    SLIDEID__FIELD_NAME: Final[WrapperField] = WrapperField("SlideId", FieldType.STRING, display_name="Slide ID")
    SLIDEIDCLONEDFROM__FIELD_NAME: Final[WrapperField] = WrapperField("SlideIdClonedFrom", FieldType.STRING, display_name="Slide ID Cloned From")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AperioId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AperioId' on this record model
        """
        self.set_field_value(self.APERIOID__FIELD_NAME.field_name, value)

    def get_AperioId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AperioId' from this record model
        """
        return self.get_field_value(self.APERIOID__FIELD_NAME.field_name)

    def set_AperioImageId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AperioImageId' on this record model
        """
        self.set_field_value(self.APERIOIMAGEID__FIELD_NAME.field_name, value)

    def get_AperioImageId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AperioImageId' from this record model
        """
        return self.get_field_value(self.APERIOIMAGEID__FIELD_NAME.field_name)

    def set_AssignedDosage_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedDosage' on this record model
        """
        self.set_field_value(self.ASSIGNEDDOSAGE__FIELD_NAME.field_name, value)

    def get_AssignedDosage_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedDosage' from this record model
        """
        return self.get_field_value(self.ASSIGNEDDOSAGE__FIELD_NAME.field_name)

    def set_AssignedGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedGroups' on this record model
        """
        self.set_field_value(self.ASSIGNEDGROUPS__FIELD_NAME.field_name, value)

    def get_AssignedGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedGroups' from this record model
        """
        return self.get_field_value(self.ASSIGNEDGROUPS__FIELD_NAME.field_name)

    def set_AssignedStain_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedStain' on this record model
        """
        self.set_field_value(self.ASSIGNEDSTAIN__FIELD_NAME.field_name, value)

    def get_AssignedStain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedStain' from this record model
        """
        return self.get_field_value(self.ASSIGNEDSTAIN__FIELD_NAME.field_name)

    def set_AssignedTissue_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedTissue' on this record model
        """
        self.set_field_value(self.ASSIGNEDTISSUE__FIELD_NAME.field_name, value)

    def get_AssignedTissue_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedTissue' from this record model
        """
        return self.get_field_value(self.ASSIGNEDTISSUE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FileIdentifier_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileIdentifier' on this record model
        """
        self.set_field_value(self.FILEIDENTIFIER__FIELD_NAME.field_name, value)

    def get_FileIdentifier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileIdentifier' from this record model
        """
        return self.get_field_value(self.FILEIDENTIFIER__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_GeneratedLayoutAssignedStain_field(self, value: Optional[str]):
        """
        Set data field with field name 'GeneratedLayoutAssignedStain' on this record model
        """
        self.set_field_value(self.GENERATEDLAYOUTASSIGNEDSTAIN__FIELD_NAME.field_name, value)

    def get_GeneratedLayoutAssignedStain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GeneratedLayoutAssignedStain' from this record model
        """
        return self.get_field_value(self.GENERATEDLAYOUTASSIGNEDSTAIN__FIELD_NAME.field_name)

    def set_GeneratedLayoutSlideId_field(self, value: Optional[str]):
        """
        Set data field with field name 'GeneratedLayoutSlideId' on this record model
        """
        self.set_field_value(self.GENERATEDLAYOUTSLIDEID__FIELD_NAME.field_name, value)

    def get_GeneratedLayoutSlideId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GeneratedLayoutSlideId' from this record model
        """
        return self.get_field_value(self.GENERATEDLAYOUTSLIDEID__FIELD_NAME.field_name)

    def set_NumSections_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumSections' on this record model
        """
        self.set_field_value(self.NUMSECTIONS__FIELD_NAME.field_name, value)

    def get_NumSections_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumSections' from this record model
        """
        return self.get_field_value(self.NUMSECTIONS__FIELD_NAME.field_name)

    def set_ProtocolNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProtocolNumber' on this record model
        """
        self.set_field_value(self.PROTOCOLNUMBER__FIELD_NAME.field_name, value)

    def get_ProtocolNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProtocolNumber' from this record model
        """
        return self.get_field_value(self.PROTOCOLNUMBER__FIELD_NAME.field_name)

    def set_SampleGroupByFieldIds_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleGroupByFieldIds' on this record model
        """
        self.set_field_value(self.SAMPLEGROUPBYFIELDIDS__FIELD_NAME.field_name, value)

    def get_SampleGroupByFieldIds_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleGroupByFieldIds' from this record model
        """
        return self.get_field_value(self.SAMPLEGROUPBYFIELDIDS__FIELD_NAME.field_name)

    def set_SlideId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SlideId' on this record model
        """
        self.set_field_value(self.SLIDEID__FIELD_NAME.field_name, value)

    def get_SlideId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SlideId' from this record model
        """
        return self.get_field_value(self.SLIDEID__FIELD_NAME.field_name)

    def set_SlideIdClonedFrom_field(self, value: Optional[str]):
        """
        Set data field with field name 'SlideIdClonedFrom' on this record model
        """
        self.set_field_value(self.SLIDEIDCLONEDFROM__FIELD_NAME.field_name, value)

    def get_SlideIdClonedFrom_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SlideIdClonedFrom' from this record model
        """
        return self.get_field_value(self.SLIDEIDCLONEDFROM__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class HPLCDetailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type HPLCDetail
    Data Type Display Name: HPLC Detail (HPLC Details)
    Fields: CreatedBy, DataRecordName, HPLCValue, HPLCLow, VeloxLastModifiedDate, HPLCHigh, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'HPLCDetail'
    DISPLAY_NAME: Final[str] = "HPLC Detail"
    PLURAL_DISPLAY_NAME: Final[str] = "HPLC Details"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    HPLCHIGH__FIELD_NAME: Final[WrapperField] = WrapperField("HPLCHigh", FieldType.DOUBLE, display_name="HPLC High")
    HPLCLOW__FIELD_NAME: Final[WrapperField] = WrapperField("HPLCLow", FieldType.DOUBLE, display_name="HPLC Low")
    HPLCVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("HPLCValue", FieldType.DOUBLE, display_name="HPLC Value")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HPLCHigh_field(self, value: Optional[float]):
        """
        Set data field with field name 'HPLCHigh' on this record model
        """
        self.set_field_value(self.HPLCHIGH__FIELD_NAME.field_name, value)

    def get_HPLCHigh_field(self) -> Optional[float]:
        """
        Get data field value with field name 'HPLCHigh' from this record model
        """
        return self.get_field_value(self.HPLCHIGH__FIELD_NAME.field_name)

    def set_HPLCLow_field(self, value: Optional[float]):
        """
        Set data field with field name 'HPLCLow' on this record model
        """
        self.set_field_value(self.HPLCLOW__FIELD_NAME.field_name, value)

    def get_HPLCLow_field(self) -> Optional[float]:
        """
        Get data field value with field name 'HPLCLow' from this record model
        """
        return self.get_field_value(self.HPLCLOW__FIELD_NAME.field_name)

    def set_HPLCValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'HPLCValue' on this record model
        """
        self.set_field_value(self.HPLCVALUE__FIELD_NAME.field_name, value)

    def get_HPLCValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'HPLCValue' from this record model
        """
        return self.get_field_value(self.HPLCVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IGBlastNGermlineModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IGBlastNGermline
    Data Type Display Name: igBlastN Germline (igBlastN Germlines)
    Fields: VFileName, FilePath, Organism, VeloxCurrentVersion, CreatedBy, DFileName, DateCreated, DataRecordName, GermlineName, VeloxLastModifiedDate, VeloxLastModifiedBy, JFileName, AuxFileName
    An attachment of germline file used for IGBlastN.
    """
    DATA_TYPE_NAME: Final[str] = 'IGBlastNGermline'
    DISPLAY_NAME: Final[str] = "igBlastN Germline"
    PLURAL_DISPLAY_NAME: Final[str] = "igBlastN Germlines"
    AUXFILENAME__FIELD_NAME: Final[WrapperField] = WrapperField("AuxFileName", FieldType.STRING, display_name="Aux File Name (Include File Extension)")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DFILENAME__FIELD_NAME: Final[WrapperField] = WrapperField("DFileName", FieldType.STRING, display_name="D File Name  (No File Extension)")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    GERMLINENAME__FIELD_NAME: Final[WrapperField] = WrapperField("GermlineName", FieldType.STRING, display_name="Germline Name")
    JFILENAME__FIELD_NAME: Final[WrapperField] = WrapperField("JFileName", FieldType.STRING, display_name="J File Name  (No File Extension)")
    ORGANISM__FIELD_NAME: Final[WrapperField] = WrapperField("Organism", FieldType.PICKLIST, display_name="Organism")
    VFILENAME__FIELD_NAME: Final[WrapperField] = WrapperField("VFileName", FieldType.STRING, display_name="V File Name (No File Extension)")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AuxFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'AuxFileName' on this record model
        """
        self.set_field_value(self.AUXFILENAME__FIELD_NAME.field_name, value)

    def get_AuxFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AuxFileName' from this record model
        """
        return self.get_field_value(self.AUXFILENAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DFileName' on this record model
        """
        self.set_field_value(self.DFILENAME__FIELD_NAME.field_name, value)

    def get_DFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DFileName' from this record model
        """
        return self.get_field_value(self.DFILENAME__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_GermlineName_field(self, value: Optional[str]):
        """
        Set data field with field name 'GermlineName' on this record model
        """
        self.set_field_value(self.GERMLINENAME__FIELD_NAME.field_name, value)

    def get_GermlineName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GermlineName' from this record model
        """
        return self.get_field_value(self.GERMLINENAME__FIELD_NAME.field_name)

    def set_JFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'JFileName' on this record model
        """
        self.set_field_value(self.JFILENAME__FIELD_NAME.field_name, value)

    def get_JFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'JFileName' from this record model
        """
        return self.get_field_value(self.JFILENAME__FIELD_NAME.field_name)

    def set_Organism_field(self, value: Optional[str]):
        """
        Set data field with field name 'Organism' on this record model
        """
        self.set_field_value(self.ORGANISM__FIELD_NAME.field_name, value)

    def get_Organism_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Organism' from this record model
        """
        return self.get_field_value(self.ORGANISM__FIELD_NAME.field_name)

    def set_VFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'VFileName' on this record model
        """
        self.set_field_value(self.VFILENAME__FIELD_NAME.field_name, value)

    def get_VFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VFileName' from this record model
        """
        return self.get_field_value(self.VFILENAME__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IGBlastNResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IGBlastNResult
    Data Type Display Name: igBlastN Result (igBlastN Results)
    Fields: GermlineAllV, CysNotTwo, DateCreated, NonProductive, FR4_Res1_NoTrp, CDRTranslation, NumCDRLysine, VeloxLastModifiedBy, FR4Res1NoPhe, Siblings, FilePath, VeloxCurrentVersion, CreatedBy, germline, NumCDRHistidine, CDR3UND, NGlycosilationsites, StopCodons, GermlineAllJ, DataRecordName, GermlineAllD, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: Final[str] = 'IGBlastNResult'
    DISPLAY_NAME: Final[str] = "igBlastN Result"
    PLURAL_DISPLAY_NAME: Final[str] = "igBlastN Results"
    CDR3UND__FIELD_NAME: Final[WrapperField] = WrapperField("CDR3UND", FieldType.BOOLEAN, display_name="CDR3 Undefined")
    CDRTRANSLATION__FIELD_NAME: Final[WrapperField] = WrapperField("CDRTranslation", FieldType.STRING, display_name="CDR Translation")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CYSNOTTWO__FIELD_NAME: Final[WrapperField] = WrapperField("CysNotTwo", FieldType.BOOLEAN, display_name="Cystine != 2")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FR4RES1NOPHE__FIELD_NAME: Final[WrapperField] = WrapperField("FR4Res1NoPhe", FieldType.BOOLEAN, display_name="FR4 RES1 No Phe on Light Chain")
    FR4_RES1_NOTRP__FIELD_NAME: Final[WrapperField] = WrapperField("FR4_Res1_NoTrp", FieldType.BOOLEAN, display_name="FR4 RES1 No Trp on Heavy Chain")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    GERMLINEALLD__FIELD_NAME: Final[WrapperField] = WrapperField("GermlineAllD", FieldType.STRING, display_name="Germline All D")
    GERMLINEALLJ__FIELD_NAME: Final[WrapperField] = WrapperField("GermlineAllJ", FieldType.STRING, display_name="Germline All J")
    GERMLINEALLV__FIELD_NAME: Final[WrapperField] = WrapperField("GermlineAllV", FieldType.STRING, display_name="Germline All V")
    NGLYCOSILATIONSITES__FIELD_NAME: Final[WrapperField] = WrapperField("NGlycosilationsites", FieldType.BOOLEAN, display_name="N-Glycosilation sites")
    NONPRODUCTIVE__FIELD_NAME: Final[WrapperField] = WrapperField("NonProductive", FieldType.BOOLEAN, display_name="Non-Productive")
    NUMCDRHISTIDINE__FIELD_NAME: Final[WrapperField] = WrapperField("NumCDRHistidine", FieldType.INTEGER, display_name="# CDR Histidine")
    NUMCDRLYSINE__FIELD_NAME: Final[WrapperField] = WrapperField("NumCDRLysine", FieldType.INTEGER, display_name="# CDR Lysine")
    SIBLINGS__FIELD_NAME: Final[WrapperField] = WrapperField("Siblings", FieldType.BOOLEAN, display_name="Siblings")
    STOPCODONS__FIELD_NAME: Final[WrapperField] = WrapperField("StopCodons", FieldType.BOOLEAN, display_name="Stop Codons")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    GERMLINE__FIELD_NAME: Final[WrapperField] = WrapperField("germline", FieldType.STRING, display_name="Germline")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CDR3UND_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CDR3UND' on this record model
        """
        self.set_field_value(self.CDR3UND__FIELD_NAME.field_name, value)

    def get_CDR3UND_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CDR3UND' from this record model
        """
        return self.get_field_value(self.CDR3UND__FIELD_NAME.field_name)

    def set_CDRTranslation_field(self, value: Optional[str]):
        """
        Set data field with field name 'CDRTranslation' on this record model
        """
        self.set_field_value(self.CDRTRANSLATION__FIELD_NAME.field_name, value)

    def get_CDRTranslation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CDRTranslation' from this record model
        """
        return self.get_field_value(self.CDRTRANSLATION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CysNotTwo_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CysNotTwo' on this record model
        """
        self.set_field_value(self.CYSNOTTWO__FIELD_NAME.field_name, value)

    def get_CysNotTwo_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CysNotTwo' from this record model
        """
        return self.get_field_value(self.CYSNOTTWO__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FR4Res1NoPhe_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FR4Res1NoPhe' on this record model
        """
        self.set_field_value(self.FR4RES1NOPHE__FIELD_NAME.field_name, value)

    def get_FR4Res1NoPhe_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FR4Res1NoPhe' from this record model
        """
        return self.get_field_value(self.FR4RES1NOPHE__FIELD_NAME.field_name)

    def set_FR4_Res1_NoTrp_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FR4_Res1_NoTrp' on this record model
        """
        self.set_field_value(self.FR4_RES1_NOTRP__FIELD_NAME.field_name, value)

    def get_FR4_Res1_NoTrp_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FR4_Res1_NoTrp' from this record model
        """
        return self.get_field_value(self.FR4_RES1_NOTRP__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_GermlineAllD_field(self, value: Optional[str]):
        """
        Set data field with field name 'GermlineAllD' on this record model
        """
        self.set_field_value(self.GERMLINEALLD__FIELD_NAME.field_name, value)

    def get_GermlineAllD_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GermlineAllD' from this record model
        """
        return self.get_field_value(self.GERMLINEALLD__FIELD_NAME.field_name)

    def set_GermlineAllJ_field(self, value: Optional[str]):
        """
        Set data field with field name 'GermlineAllJ' on this record model
        """
        self.set_field_value(self.GERMLINEALLJ__FIELD_NAME.field_name, value)

    def get_GermlineAllJ_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GermlineAllJ' from this record model
        """
        return self.get_field_value(self.GERMLINEALLJ__FIELD_NAME.field_name)

    def set_GermlineAllV_field(self, value: Optional[str]):
        """
        Set data field with field name 'GermlineAllV' on this record model
        """
        self.set_field_value(self.GERMLINEALLV__FIELD_NAME.field_name, value)

    def get_GermlineAllV_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GermlineAllV' from this record model
        """
        return self.get_field_value(self.GERMLINEALLV__FIELD_NAME.field_name)

    def set_NGlycosilationsites_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NGlycosilationsites' on this record model
        """
        self.set_field_value(self.NGLYCOSILATIONSITES__FIELD_NAME.field_name, value)

    def get_NGlycosilationsites_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NGlycosilationsites' from this record model
        """
        return self.get_field_value(self.NGLYCOSILATIONSITES__FIELD_NAME.field_name)

    def set_NonProductive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NonProductive' on this record model
        """
        self.set_field_value(self.NONPRODUCTIVE__FIELD_NAME.field_name, value)

    def get_NonProductive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NonProductive' from this record model
        """
        return self.get_field_value(self.NONPRODUCTIVE__FIELD_NAME.field_name)

    def set_NumCDRHistidine_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumCDRHistidine' on this record model
        """
        self.set_field_value(self.NUMCDRHISTIDINE__FIELD_NAME.field_name, value)

    def get_NumCDRHistidine_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumCDRHistidine' from this record model
        """
        return self.get_field_value(self.NUMCDRHISTIDINE__FIELD_NAME.field_name)

    def set_NumCDRLysine_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumCDRLysine' on this record model
        """
        self.set_field_value(self.NUMCDRLYSINE__FIELD_NAME.field_name, value)

    def get_NumCDRLysine_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumCDRLysine' from this record model
        """
        return self.get_field_value(self.NUMCDRLYSINE__FIELD_NAME.field_name)

    def set_Siblings_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Siblings' on this record model
        """
        self.set_field_value(self.SIBLINGS__FIELD_NAME.field_name, value)

    def get_Siblings_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Siblings' from this record model
        """
        return self.get_field_value(self.SIBLINGS__FIELD_NAME.field_name)

    def set_StopCodons_field(self, value: Optional[bool]):
        """
        Set data field with field name 'StopCodons' on this record model
        """
        self.set_field_value(self.STOPCODONS__FIELD_NAME.field_name, value)

    def get_StopCodons_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'StopCodons' from this record model
        """
        return self.get_field_value(self.STOPCODONS__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_germline_field(self, value: Optional[str]):
        """
        Set data field with field name 'germline' on this record model
        """
        self.set_field_value(self.GERMLINE__FIELD_NAME.field_name, value)

    def get_germline_field(self) -> Optional[str]:
        """
        Get data field value with field name 'germline' from this record model
        """
        return self.get_field_value(self.GERMLINE__FIELD_NAME.field_name)


class IllSeqReadModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IllSeqRead
    Data Type Display Name: Illumina Sequencing Read (Illumina Sequencing Reads)
    Fields: IsIndexedRead, CreatedBy, DataRecordName, NumCycles, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'IllSeqRead'
    DISPLAY_NAME: Final[str] = "Illumina Sequencing Read"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina Sequencing Reads"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ISINDEXEDREAD__FIELD_NAME: Final[WrapperField] = WrapperField("IsIndexedRead", FieldType.BOOLEAN, display_name="Is Indexed Read")
    NUMCYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("NumCycles", FieldType.INTEGER, display_name="Number of Cycles")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IsIndexedRead_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsIndexedRead' on this record model
        """
        self.set_field_value(self.ISINDEXEDREAD__FIELD_NAME.field_name, value)

    def get_IsIndexedRead_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsIndexedRead' from this record model
        """
        return self.get_field_value(self.ISINDEXEDREAD__FIELD_NAME.field_name)

    def set_NumCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumCycles' on this record model
        """
        self.set_field_value(self.NUMCYCLES__FIELD_NAME.field_name, value)

    def get_NumCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumCycles' from this record model
        """
        return self.get_field_value(self.NUMCYCLES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaHiSeqRunParametersModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaHiSeqRunParameters
    Data Type Display Name: Illumina HiSeq Run Parameters (Illumina HiSeq Run Parameters')
    Fields: SelectedSurface, PeriodicSave, IndexQuantity, ScanNumber, TileHeight, ScannerID, AdapterPlate, MaxInitialZJumpHalfUm, ImageWidth, KeepIntensityFiles, SelectedSection_4, SelectedSection_3, SelectedSection_2, SelectedSection_1, SelectedSection_8, SelectedSection_7, SelectedSection_6, SelectedSection_5, CreatedBy, ChemistryVersion, IndexRead, EnableAnalysis, PerformPreRunFluidicsCheck, Offset, EnableAutoCenter, ImageHeight, Barcode, RunMode, ScanID, CVGainStart, IGain, SupportMultipleSurfacesInUI, CVGainPosLocked, EnableNotifications, VeloxLastModifiedBy, EnableLft, OutputFolder, AlignToPhiXLane, MotorDelayFrames, Flowcell, SampleSheet, FCPosition, IntensityCeiling, FocusCameraFirmware, CPLDVersion, WorkFlowType, AutoTiltOnce, NumAnalysisThreads, BaseSpaceRunId, RunID, RunStartDate, ApplicationVersion, Read1, DitherSize, Rehyb, Read2, RecipeFragmentVersion, CopyImages, ExperimentName, BaseSpaceTempFolder, CanEditRunMode, CameraDriver, IHistory, IndexSerialNumber, EnableCameraLogging, BaseSpaceUseBaseSpace, ResumeCycle, DataRecordName, SlideHolder, ComputerName, IsNew50Cycle, BaseSpaceRunMonitoringOnly, Prime, FPGAVersion, FirstBaseConfirmation, NumTilesPerSwath, DateCreated, SbsQuantity, RTAVersion, MockRun, NumSwaths, NumberCyclesRemaining, SbsSerialNumber, CameraFirmware, IsNew200Cycle, LaneLength, PeSerialNumber, TileWidth, MaxSubsequentZJumpHalfUm, EnableBasecalling, ControlLane, FocusMethod, NumberOfInitialZJumps, ApplicationName, HotPixel, PromptForPeReagents, BaseSpaceUsername, UseExistingRecipe, TemplateCycleCount, Username, PeQuantity, TempFolder, VeloxLastModifiedDate, Resume, SwathScanMode
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaHiSeqRunParameters'
    DISPLAY_NAME: Final[str] = "Illumina HiSeq Run Parameters"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina HiSeq Run Parameters'"
    ADAPTERPLATE__FIELD_NAME: Final[WrapperField] = WrapperField("AdapterPlate", FieldType.STRING, display_name="Adapter Plate")
    ALIGNTOPHIXLANE__FIELD_NAME: Final[WrapperField] = WrapperField("AlignToPhiXLane", FieldType.STRING, display_name="AlignToPhiX Lane")
    APPLICATIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ApplicationName", FieldType.STRING, display_name="Application Name")
    APPLICATIONVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("ApplicationVersion", FieldType.STRING, display_name="Application Version")
    AUTOTILTONCE__FIELD_NAME: Final[WrapperField] = WrapperField("AutoTiltOnce", FieldType.BOOLEAN, display_name="Auto Tilt Once")
    BARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("Barcode", FieldType.STRING, display_name="FlowCell Barcode")
    BASESPACERUNID__FIELD_NAME: Final[WrapperField] = WrapperField("BaseSpaceRunId", FieldType.STRING, display_name="BaseSpace Run Id")
    BASESPACERUNMONITORINGONLY__FIELD_NAME: Final[WrapperField] = WrapperField("BaseSpaceRunMonitoringOnly", FieldType.BOOLEAN, display_name="BaseSpace Run Monitoring Only")
    BASESPACETEMPFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("BaseSpaceTempFolder", FieldType.STRING, display_name="BaseSpace Temp Folder")
    BASESPACEUSEBASESPACE__FIELD_NAME: Final[WrapperField] = WrapperField("BaseSpaceUseBaseSpace", FieldType.BOOLEAN, display_name="Basespace Enabled")
    BASESPACEUSERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("BaseSpaceUsername", FieldType.STRING, display_name="BaseSpace Username")
    CPLDVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("CPLDVersion", FieldType.STRING, display_name="CPLD Version")
    CVGAINPOSLOCKED__FIELD_NAME: Final[WrapperField] = WrapperField("CVGainPosLocked", FieldType.STRING, display_name="CV Gain Pos Locked")
    CVGAINSTART__FIELD_NAME: Final[WrapperField] = WrapperField("CVGainStart", FieldType.STRING, display_name="CV Gain Start")
    CAMERADRIVER__FIELD_NAME: Final[WrapperField] = WrapperField("CameraDriver", FieldType.STRING, display_name="Camera Driver")
    CAMERAFIRMWARE__FIELD_NAME: Final[WrapperField] = WrapperField("CameraFirmware", FieldType.STRING, display_name="Camera Firmware")
    CANEDITRUNMODE__FIELD_NAME: Final[WrapperField] = WrapperField("CanEditRunMode", FieldType.BOOLEAN, display_name="Can Edit Run Mode")
    CHEMISTRYVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("ChemistryVersion", FieldType.STRING, display_name="Chemistry Version")
    COMPUTERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ComputerName", FieldType.STRING, display_name="Computer Name")
    CONTROLLANE__FIELD_NAME: Final[WrapperField] = WrapperField("ControlLane", FieldType.STRING, display_name="Control Lane")
    COPYIMAGES__FIELD_NAME: Final[WrapperField] = WrapperField("CopyImages", FieldType.BOOLEAN, display_name="Copy Images")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DITHERSIZE__FIELD_NAME: Final[WrapperField] = WrapperField("DitherSize", FieldType.STRING, display_name="Dither Size")
    ENABLEANALYSIS__FIELD_NAME: Final[WrapperField] = WrapperField("EnableAnalysis", FieldType.BOOLEAN, display_name="Enable Analysis")
    ENABLEAUTOCENTER__FIELD_NAME: Final[WrapperField] = WrapperField("EnableAutoCenter", FieldType.BOOLEAN, display_name="Enable Auto Center")
    ENABLEBASECALLING__FIELD_NAME: Final[WrapperField] = WrapperField("EnableBasecalling", FieldType.BOOLEAN, display_name="Enable Basecalling")
    ENABLECAMERALOGGING__FIELD_NAME: Final[WrapperField] = WrapperField("EnableCameraLogging", FieldType.BOOLEAN, display_name="Enable Camera Logging")
    ENABLELFT__FIELD_NAME: Final[WrapperField] = WrapperField("EnableLft", FieldType.BOOLEAN, display_name="Enable Lft")
    ENABLENOTIFICATIONS__FIELD_NAME: Final[WrapperField] = WrapperField("EnableNotifications", FieldType.BOOLEAN, display_name="Enable Notifications")
    EXPERIMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentName", FieldType.STRING, display_name="Experiment Name")
    FCPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("FCPosition", FieldType.STRING, display_name="Flow Cell Position")
    FPGAVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("FPGAVersion", FieldType.STRING, display_name="FPGA Version")
    FIRSTBASECONFIRMATION__FIELD_NAME: Final[WrapperField] = WrapperField("FirstBaseConfirmation", FieldType.STRING, display_name="FirstBase Confirmation")
    FLOWCELL__FIELD_NAME: Final[WrapperField] = WrapperField("Flowcell", FieldType.STRING, display_name="Flow Cell")
    FOCUSCAMERAFIRMWARE__FIELD_NAME: Final[WrapperField] = WrapperField("FocusCameraFirmware", FieldType.STRING, display_name="Focus Camera Firmware")
    FOCUSMETHOD__FIELD_NAME: Final[WrapperField] = WrapperField("FocusMethod", FieldType.STRING, display_name="Focus Method")
    HOTPIXEL__FIELD_NAME: Final[WrapperField] = WrapperField("HotPixel", FieldType.STRING, display_name="Hot Pixel")
    IGAIN__FIELD_NAME: Final[WrapperField] = WrapperField("IGain", FieldType.STRING, display_name="I Gain")
    IHISTORY__FIELD_NAME: Final[WrapperField] = WrapperField("IHistory", FieldType.STRING, display_name="I History")
    IMAGEHEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("ImageHeight", FieldType.STRING, display_name="Image Height")
    IMAGEWIDTH__FIELD_NAME: Final[WrapperField] = WrapperField("ImageWidth", FieldType.STRING, display_name="Image Width")
    INDEXQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("IndexQuantity", FieldType.DOUBLE, display_name="Index Kit Quantity Used")
    INDEXREAD__FIELD_NAME: Final[WrapperField] = WrapperField("IndexRead", FieldType.STRING, display_name="Index Read")
    INDEXSERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("IndexSerialNumber", FieldType.SELECTION, display_name="Index Kit Serial Number")
    INTENSITYCEILING__FIELD_NAME: Final[WrapperField] = WrapperField("IntensityCeiling", FieldType.STRING, display_name="Intensity Ceiling")
    ISNEW200CYCLE__FIELD_NAME: Final[WrapperField] = WrapperField("IsNew200Cycle", FieldType.BOOLEAN, display_name="Is New SBS 200 Cycle")
    ISNEW50CYCLE__FIELD_NAME: Final[WrapperField] = WrapperField("IsNew50Cycle", FieldType.BOOLEAN, display_name="Is New SBS 50 Cycle")
    KEEPINTENSITYFILES__FIELD_NAME: Final[WrapperField] = WrapperField("KeepIntensityFiles", FieldType.STRING, display_name="Keep Intensity Files")
    LANELENGTH__FIELD_NAME: Final[WrapperField] = WrapperField("LaneLength", FieldType.STRING, display_name="Lane Length")
    MAXINITIALZJUMPHALFUM__FIELD_NAME: Final[WrapperField] = WrapperField("MaxInitialZJumpHalfUm", FieldType.STRING, display_name="Max Initial Z Jump Half Um")
    MAXSUBSEQUENTZJUMPHALFUM__FIELD_NAME: Final[WrapperField] = WrapperField("MaxSubsequentZJumpHalfUm", FieldType.STRING, display_name="Max Subsequent Z Jump Half Um")
    MOCKRUN__FIELD_NAME: Final[WrapperField] = WrapperField("MockRun", FieldType.BOOLEAN, display_name="Mock Run")
    MOTORDELAYFRAMES__FIELD_NAME: Final[WrapperField] = WrapperField("MotorDelayFrames", FieldType.STRING, display_name="Motor Delay Frames")
    NUMANALYSISTHREADS__FIELD_NAME: Final[WrapperField] = WrapperField("NumAnalysisThreads", FieldType.STRING, display_name="Num Analysis Threads")
    NUMSWATHS__FIELD_NAME: Final[WrapperField] = WrapperField("NumSwaths", FieldType.STRING, display_name="Num Swaths")
    NUMTILESPERSWATH__FIELD_NAME: Final[WrapperField] = WrapperField("NumTilesPerSwath", FieldType.STRING, display_name="Num Tiles Per Swath")
    NUMBERCYCLESREMAINING__FIELD_NAME: Final[WrapperField] = WrapperField("NumberCyclesRemaining", FieldType.LONG, display_name="SBS Cycles Remaining")
    NUMBEROFINITIALZJUMPS__FIELD_NAME: Final[WrapperField] = WrapperField("NumberOfInitialZJumps", FieldType.STRING, display_name="Number Of Initial Z Jumps")
    OFFSET__FIELD_NAME: Final[WrapperField] = WrapperField("Offset", FieldType.STRING, display_name="Offset")
    OUTPUTFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("OutputFolder", FieldType.STRING, display_name="Output Folder")
    PEQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("PeQuantity", FieldType.DOUBLE, display_name="Paired-End Kit Quantity Used")
    PESERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PeSerialNumber", FieldType.SELECTION, display_name="Paired-End Kit Serial Number")
    PERFORMPRERUNFLUIDICSCHECK__FIELD_NAME: Final[WrapperField] = WrapperField("PerformPreRunFluidicsCheck", FieldType.BOOLEAN, display_name="Perform Pre Run Fluidics Check")
    PERIODICSAVE__FIELD_NAME: Final[WrapperField] = WrapperField("PeriodicSave", FieldType.STRING, display_name="Periodic Save")
    PRIME__FIELD_NAME: Final[WrapperField] = WrapperField("Prime", FieldType.BOOLEAN, display_name="SBS Reagent Kit Prime")
    PROMPTFORPEREAGENTS__FIELD_NAME: Final[WrapperField] = WrapperField("PromptForPeReagents", FieldType.BOOLEAN, display_name="Prompt For Pe Reagents")
    RTAVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("RTAVersion", FieldType.STRING, display_name="RTA Version")
    READ1__FIELD_NAME: Final[WrapperField] = WrapperField("Read1", FieldType.STRING, display_name="Read 1")
    READ2__FIELD_NAME: Final[WrapperField] = WrapperField("Read2", FieldType.STRING, display_name="Read 2")
    RECIPEFRAGMENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("RecipeFragmentVersion", FieldType.STRING, display_name="Recipe Fragment Version")
    REHYB__FIELD_NAME: Final[WrapperField] = WrapperField("Rehyb", FieldType.STRING, display_name="Rehyb")
    RESUME__FIELD_NAME: Final[WrapperField] = WrapperField("Resume", FieldType.BOOLEAN, display_name="Resume")
    RESUMECYCLE__FIELD_NAME: Final[WrapperField] = WrapperField("ResumeCycle", FieldType.STRING, display_name="Resume Cycle")
    RUNID__FIELD_NAME: Final[WrapperField] = WrapperField("RunID", FieldType.STRING, display_name="Run ID")
    RUNMODE__FIELD_NAME: Final[WrapperField] = WrapperField("RunMode", FieldType.STRING, display_name="RunMode")
    RUNSTARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RunStartDate", FieldType.DATE, display_name="Run Start Date")
    SAMPLESHEET__FIELD_NAME: Final[WrapperField] = WrapperField("SampleSheet", FieldType.STRING, display_name="Sample Sheet Location")
    SBSQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("SbsQuantity", FieldType.DOUBLE, display_name="SBS Kit Quantity Used")
    SBSSERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("SbsSerialNumber", FieldType.SELECTION, display_name="SBS Kit Serial Number")
    SCANID__FIELD_NAME: Final[WrapperField] = WrapperField("ScanID", FieldType.STRING, display_name="Scan ID")
    SCANNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ScanNumber", FieldType.LONG, display_name="Run Number")
    SCANNERID__FIELD_NAME: Final[WrapperField] = WrapperField("ScannerID", FieldType.STRING, display_name="Scanner ID")
    SELECTEDSECTION_1__FIELD_NAME: Final[WrapperField] = WrapperField("SelectedSection_1", FieldType.STRING, display_name="Selected Section 1")
    SELECTEDSECTION_2__FIELD_NAME: Final[WrapperField] = WrapperField("SelectedSection_2", FieldType.STRING, display_name="Selected Section 2")
    SELECTEDSECTION_3__FIELD_NAME: Final[WrapperField] = WrapperField("SelectedSection_3", FieldType.STRING, display_name="Selected Section 3")
    SELECTEDSECTION_4__FIELD_NAME: Final[WrapperField] = WrapperField("SelectedSection_4", FieldType.STRING, display_name="Selected Section 4")
    SELECTEDSECTION_5__FIELD_NAME: Final[WrapperField] = WrapperField("SelectedSection_5", FieldType.STRING, display_name="Selected Section 5")
    SELECTEDSECTION_6__FIELD_NAME: Final[WrapperField] = WrapperField("SelectedSection_6", FieldType.STRING, display_name="Selected Section 6")
    SELECTEDSECTION_7__FIELD_NAME: Final[WrapperField] = WrapperField("SelectedSection_7", FieldType.STRING, display_name="Selected Section 7")
    SELECTEDSECTION_8__FIELD_NAME: Final[WrapperField] = WrapperField("SelectedSection_8", FieldType.STRING, display_name="Selected Section 8")
    SELECTEDSURFACE__FIELD_NAME: Final[WrapperField] = WrapperField("SelectedSurface", FieldType.STRING, display_name="Selected Surface")
    SLIDEHOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("SlideHolder", FieldType.STRING, display_name="Slide Holder")
    SUPPORTMULTIPLESURFACESINUI__FIELD_NAME: Final[WrapperField] = WrapperField("SupportMultipleSurfacesInUI", FieldType.BOOLEAN, display_name="Support Multiple Surfaces In UI")
    SWATHSCANMODE__FIELD_NAME: Final[WrapperField] = WrapperField("SwathScanMode", FieldType.STRING, display_name="Swath Scan Mode")
    TEMPFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("TempFolder", FieldType.STRING, display_name="Temp Folder")
    TEMPLATECYCLECOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TemplateCycleCount", FieldType.STRING, display_name="Template Cycle Count")
    TILEHEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("TileHeight", FieldType.STRING, display_name="Tile Height")
    TILEWIDTH__FIELD_NAME: Final[WrapperField] = WrapperField("TileWidth", FieldType.STRING, display_name="Tile Width")
    USEEXISTINGRECIPE__FIELD_NAME: Final[WrapperField] = WrapperField("UseExistingRecipe", FieldType.BOOLEAN, display_name="Use Existing Recipe")
    USERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Username", FieldType.STRING, display_name="Username")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WORKFLOWTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("WorkFlowType", FieldType.STRING, display_name="Workflow Type")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AdapterPlate_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterPlate' on this record model
        """
        self.set_field_value(self.ADAPTERPLATE__FIELD_NAME.field_name, value)

    def get_AdapterPlate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterPlate' from this record model
        """
        return self.get_field_value(self.ADAPTERPLATE__FIELD_NAME.field_name)

    def set_AlignToPhiXLane_field(self, value: Optional[str]):
        """
        Set data field with field name 'AlignToPhiXLane' on this record model
        """
        self.set_field_value(self.ALIGNTOPHIXLANE__FIELD_NAME.field_name, value)

    def get_AlignToPhiXLane_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AlignToPhiXLane' from this record model
        """
        return self.get_field_value(self.ALIGNTOPHIXLANE__FIELD_NAME.field_name)

    def set_ApplicationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationName' on this record model
        """
        self.set_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name, value)

    def get_ApplicationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationName' from this record model
        """
        return self.get_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name)

    def set_ApplicationVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationVersion' on this record model
        """
        self.set_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name, value)

    def get_ApplicationVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationVersion' from this record model
        """
        return self.get_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name)

    def set_AutoTiltOnce_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AutoTiltOnce' on this record model
        """
        self.set_field_value(self.AUTOTILTONCE__FIELD_NAME.field_name, value)

    def get_AutoTiltOnce_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AutoTiltOnce' from this record model
        """
        return self.get_field_value(self.AUTOTILTONCE__FIELD_NAME.field_name)

    def set_Barcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Barcode' on this record model
        """
        self.set_field_value(self.BARCODE__FIELD_NAME.field_name, value)

    def get_Barcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Barcode' from this record model
        """
        return self.get_field_value(self.BARCODE__FIELD_NAME.field_name)

    def set_BaseSpaceRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaseSpaceRunId' on this record model
        """
        self.set_field_value(self.BASESPACERUNID__FIELD_NAME.field_name, value)

    def get_BaseSpaceRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaseSpaceRunId' from this record model
        """
        return self.get_field_value(self.BASESPACERUNID__FIELD_NAME.field_name)

    def set_BaseSpaceRunMonitoringOnly_field(self, value: Optional[bool]):
        """
        Set data field with field name 'BaseSpaceRunMonitoringOnly' on this record model
        """
        self.set_field_value(self.BASESPACERUNMONITORINGONLY__FIELD_NAME.field_name, value)

    def get_BaseSpaceRunMonitoringOnly_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'BaseSpaceRunMonitoringOnly' from this record model
        """
        return self.get_field_value(self.BASESPACERUNMONITORINGONLY__FIELD_NAME.field_name)

    def set_BaseSpaceTempFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaseSpaceTempFolder' on this record model
        """
        self.set_field_value(self.BASESPACETEMPFOLDER__FIELD_NAME.field_name, value)

    def get_BaseSpaceTempFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaseSpaceTempFolder' from this record model
        """
        return self.get_field_value(self.BASESPACETEMPFOLDER__FIELD_NAME.field_name)

    def set_BaseSpaceUseBaseSpace_field(self, value: Optional[bool]):
        """
        Set data field with field name 'BaseSpaceUseBaseSpace' on this record model
        """
        self.set_field_value(self.BASESPACEUSEBASESPACE__FIELD_NAME.field_name, value)

    def get_BaseSpaceUseBaseSpace_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'BaseSpaceUseBaseSpace' from this record model
        """
        return self.get_field_value(self.BASESPACEUSEBASESPACE__FIELD_NAME.field_name)

    def set_BaseSpaceUsername_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaseSpaceUsername' on this record model
        """
        self.set_field_value(self.BASESPACEUSERNAME__FIELD_NAME.field_name, value)

    def get_BaseSpaceUsername_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaseSpaceUsername' from this record model
        """
        return self.get_field_value(self.BASESPACEUSERNAME__FIELD_NAME.field_name)

    def set_CPLDVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'CPLDVersion' on this record model
        """
        self.set_field_value(self.CPLDVERSION__FIELD_NAME.field_name, value)

    def get_CPLDVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CPLDVersion' from this record model
        """
        return self.get_field_value(self.CPLDVERSION__FIELD_NAME.field_name)

    def set_CVGainPosLocked_field(self, value: Optional[str]):
        """
        Set data field with field name 'CVGainPosLocked' on this record model
        """
        self.set_field_value(self.CVGAINPOSLOCKED__FIELD_NAME.field_name, value)

    def get_CVGainPosLocked_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CVGainPosLocked' from this record model
        """
        return self.get_field_value(self.CVGAINPOSLOCKED__FIELD_NAME.field_name)

    def set_CVGainStart_field(self, value: Optional[str]):
        """
        Set data field with field name 'CVGainStart' on this record model
        """
        self.set_field_value(self.CVGAINSTART__FIELD_NAME.field_name, value)

    def get_CVGainStart_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CVGainStart' from this record model
        """
        return self.get_field_value(self.CVGAINSTART__FIELD_NAME.field_name)

    def set_CameraDriver_field(self, value: Optional[str]):
        """
        Set data field with field name 'CameraDriver' on this record model
        """
        self.set_field_value(self.CAMERADRIVER__FIELD_NAME.field_name, value)

    def get_CameraDriver_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CameraDriver' from this record model
        """
        return self.get_field_value(self.CAMERADRIVER__FIELD_NAME.field_name)

    def set_CameraFirmware_field(self, value: Optional[str]):
        """
        Set data field with field name 'CameraFirmware' on this record model
        """
        self.set_field_value(self.CAMERAFIRMWARE__FIELD_NAME.field_name, value)

    def get_CameraFirmware_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CameraFirmware' from this record model
        """
        return self.get_field_value(self.CAMERAFIRMWARE__FIELD_NAME.field_name)

    def set_CanEditRunMode_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CanEditRunMode' on this record model
        """
        self.set_field_value(self.CANEDITRUNMODE__FIELD_NAME.field_name, value)

    def get_CanEditRunMode_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CanEditRunMode' from this record model
        """
        return self.get_field_value(self.CANEDITRUNMODE__FIELD_NAME.field_name)

    def set_ChemistryVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemistryVersion' on this record model
        """
        self.set_field_value(self.CHEMISTRYVERSION__FIELD_NAME.field_name, value)

    def get_ChemistryVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemistryVersion' from this record model
        """
        return self.get_field_value(self.CHEMISTRYVERSION__FIELD_NAME.field_name)

    def set_ComputerName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ComputerName' on this record model
        """
        self.set_field_value(self.COMPUTERNAME__FIELD_NAME.field_name, value)

    def get_ComputerName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ComputerName' from this record model
        """
        return self.get_field_value(self.COMPUTERNAME__FIELD_NAME.field_name)

    def set_ControlLane_field(self, value: Optional[str]):
        """
        Set data field with field name 'ControlLane' on this record model
        """
        self.set_field_value(self.CONTROLLANE__FIELD_NAME.field_name, value)

    def get_ControlLane_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ControlLane' from this record model
        """
        return self.get_field_value(self.CONTROLLANE__FIELD_NAME.field_name)

    def set_CopyImages_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CopyImages' on this record model
        """
        self.set_field_value(self.COPYIMAGES__FIELD_NAME.field_name, value)

    def get_CopyImages_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CopyImages' from this record model
        """
        return self.get_field_value(self.COPYIMAGES__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DitherSize_field(self, value: Optional[str]):
        """
        Set data field with field name 'DitherSize' on this record model
        """
        self.set_field_value(self.DITHERSIZE__FIELD_NAME.field_name, value)

    def get_DitherSize_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DitherSize' from this record model
        """
        return self.get_field_value(self.DITHERSIZE__FIELD_NAME.field_name)

    def set_EnableAnalysis_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableAnalysis' on this record model
        """
        self.set_field_value(self.ENABLEANALYSIS__FIELD_NAME.field_name, value)

    def get_EnableAnalysis_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableAnalysis' from this record model
        """
        return self.get_field_value(self.ENABLEANALYSIS__FIELD_NAME.field_name)

    def set_EnableAutoCenter_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableAutoCenter' on this record model
        """
        self.set_field_value(self.ENABLEAUTOCENTER__FIELD_NAME.field_name, value)

    def get_EnableAutoCenter_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableAutoCenter' from this record model
        """
        return self.get_field_value(self.ENABLEAUTOCENTER__FIELD_NAME.field_name)

    def set_EnableBasecalling_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableBasecalling' on this record model
        """
        self.set_field_value(self.ENABLEBASECALLING__FIELD_NAME.field_name, value)

    def get_EnableBasecalling_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableBasecalling' from this record model
        """
        return self.get_field_value(self.ENABLEBASECALLING__FIELD_NAME.field_name)

    def set_EnableCameraLogging_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableCameraLogging' on this record model
        """
        self.set_field_value(self.ENABLECAMERALOGGING__FIELD_NAME.field_name, value)

    def get_EnableCameraLogging_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableCameraLogging' from this record model
        """
        return self.get_field_value(self.ENABLECAMERALOGGING__FIELD_NAME.field_name)

    def set_EnableLft_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableLft' on this record model
        """
        self.set_field_value(self.ENABLELFT__FIELD_NAME.field_name, value)

    def get_EnableLft_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableLft' from this record model
        """
        return self.get_field_value(self.ENABLELFT__FIELD_NAME.field_name)

    def set_EnableNotifications_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableNotifications' on this record model
        """
        self.set_field_value(self.ENABLENOTIFICATIONS__FIELD_NAME.field_name, value)

    def get_EnableNotifications_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableNotifications' from this record model
        """
        return self.get_field_value(self.ENABLENOTIFICATIONS__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FCPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'FCPosition' on this record model
        """
        self.set_field_value(self.FCPOSITION__FIELD_NAME.field_name, value)

    def get_FCPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FCPosition' from this record model
        """
        return self.get_field_value(self.FCPOSITION__FIELD_NAME.field_name)

    def set_FPGAVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'FPGAVersion' on this record model
        """
        self.set_field_value(self.FPGAVERSION__FIELD_NAME.field_name, value)

    def get_FPGAVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FPGAVersion' from this record model
        """
        return self.get_field_value(self.FPGAVERSION__FIELD_NAME.field_name)

    def set_FirstBaseConfirmation_field(self, value: Optional[str]):
        """
        Set data field with field name 'FirstBaseConfirmation' on this record model
        """
        self.set_field_value(self.FIRSTBASECONFIRMATION__FIELD_NAME.field_name, value)

    def get_FirstBaseConfirmation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FirstBaseConfirmation' from this record model
        """
        return self.get_field_value(self.FIRSTBASECONFIRMATION__FIELD_NAME.field_name)

    def set_Flowcell_field(self, value: Optional[str]):
        """
        Set data field with field name 'Flowcell' on this record model
        """
        self.set_field_value(self.FLOWCELL__FIELD_NAME.field_name, value)

    def get_Flowcell_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Flowcell' from this record model
        """
        return self.get_field_value(self.FLOWCELL__FIELD_NAME.field_name)

    def set_FocusCameraFirmware_field(self, value: Optional[str]):
        """
        Set data field with field name 'FocusCameraFirmware' on this record model
        """
        self.set_field_value(self.FOCUSCAMERAFIRMWARE__FIELD_NAME.field_name, value)

    def get_FocusCameraFirmware_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FocusCameraFirmware' from this record model
        """
        return self.get_field_value(self.FOCUSCAMERAFIRMWARE__FIELD_NAME.field_name)

    def set_FocusMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'FocusMethod' on this record model
        """
        self.set_field_value(self.FOCUSMETHOD__FIELD_NAME.field_name, value)

    def get_FocusMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FocusMethod' from this record model
        """
        return self.get_field_value(self.FOCUSMETHOD__FIELD_NAME.field_name)

    def set_HotPixel_field(self, value: Optional[str]):
        """
        Set data field with field name 'HotPixel' on this record model
        """
        self.set_field_value(self.HOTPIXEL__FIELD_NAME.field_name, value)

    def get_HotPixel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HotPixel' from this record model
        """
        return self.get_field_value(self.HOTPIXEL__FIELD_NAME.field_name)

    def set_IGain_field(self, value: Optional[str]):
        """
        Set data field with field name 'IGain' on this record model
        """
        self.set_field_value(self.IGAIN__FIELD_NAME.field_name, value)

    def get_IGain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IGain' from this record model
        """
        return self.get_field_value(self.IGAIN__FIELD_NAME.field_name)

    def set_IHistory_field(self, value: Optional[str]):
        """
        Set data field with field name 'IHistory' on this record model
        """
        self.set_field_value(self.IHISTORY__FIELD_NAME.field_name, value)

    def get_IHistory_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IHistory' from this record model
        """
        return self.get_field_value(self.IHISTORY__FIELD_NAME.field_name)

    def set_ImageHeight_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageHeight' on this record model
        """
        self.set_field_value(self.IMAGEHEIGHT__FIELD_NAME.field_name, value)

    def get_ImageHeight_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageHeight' from this record model
        """
        return self.get_field_value(self.IMAGEHEIGHT__FIELD_NAME.field_name)

    def set_ImageWidth_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageWidth' on this record model
        """
        self.set_field_value(self.IMAGEWIDTH__FIELD_NAME.field_name, value)

    def get_ImageWidth_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageWidth' from this record model
        """
        return self.get_field_value(self.IMAGEWIDTH__FIELD_NAME.field_name)

    def set_IndexQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'IndexQuantity' on this record model
        """
        self.set_field_value(self.INDEXQUANTITY__FIELD_NAME.field_name, value)

    def get_IndexQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'IndexQuantity' from this record model
        """
        return self.get_field_value(self.INDEXQUANTITY__FIELD_NAME.field_name)

    def set_IndexRead_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexRead' on this record model
        """
        self.set_field_value(self.INDEXREAD__FIELD_NAME.field_name, value)

    def get_IndexRead_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexRead' from this record model
        """
        return self.get_field_value(self.INDEXREAD__FIELD_NAME.field_name)

    def set_IndexSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexSerialNumber' on this record model
        """
        self.set_field_value(self.INDEXSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_IndexSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexSerialNumber' from this record model
        """
        return self.get_field_value(self.INDEXSERIALNUMBER__FIELD_NAME.field_name)

    def set_IntensityCeiling_field(self, value: Optional[str]):
        """
        Set data field with field name 'IntensityCeiling' on this record model
        """
        self.set_field_value(self.INTENSITYCEILING__FIELD_NAME.field_name, value)

    def get_IntensityCeiling_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IntensityCeiling' from this record model
        """
        return self.get_field_value(self.INTENSITYCEILING__FIELD_NAME.field_name)

    def set_IsNew200Cycle_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsNew200Cycle' on this record model
        """
        self.set_field_value(self.ISNEW200CYCLE__FIELD_NAME.field_name, value)

    def get_IsNew200Cycle_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsNew200Cycle' from this record model
        """
        return self.get_field_value(self.ISNEW200CYCLE__FIELD_NAME.field_name)

    def set_IsNew50Cycle_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsNew50Cycle' on this record model
        """
        self.set_field_value(self.ISNEW50CYCLE__FIELD_NAME.field_name, value)

    def get_IsNew50Cycle_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsNew50Cycle' from this record model
        """
        return self.get_field_value(self.ISNEW50CYCLE__FIELD_NAME.field_name)

    def set_KeepIntensityFiles_field(self, value: Optional[str]):
        """
        Set data field with field name 'KeepIntensityFiles' on this record model
        """
        self.set_field_value(self.KEEPINTENSITYFILES__FIELD_NAME.field_name, value)

    def get_KeepIntensityFiles_field(self) -> Optional[str]:
        """
        Get data field value with field name 'KeepIntensityFiles' from this record model
        """
        return self.get_field_value(self.KEEPINTENSITYFILES__FIELD_NAME.field_name)

    def set_LaneLength_field(self, value: Optional[str]):
        """
        Set data field with field name 'LaneLength' on this record model
        """
        self.set_field_value(self.LANELENGTH__FIELD_NAME.field_name, value)

    def get_LaneLength_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LaneLength' from this record model
        """
        return self.get_field_value(self.LANELENGTH__FIELD_NAME.field_name)

    def set_MaxInitialZJumpHalfUm_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaxInitialZJumpHalfUm' on this record model
        """
        self.set_field_value(self.MAXINITIALZJUMPHALFUM__FIELD_NAME.field_name, value)

    def get_MaxInitialZJumpHalfUm_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaxInitialZJumpHalfUm' from this record model
        """
        return self.get_field_value(self.MAXINITIALZJUMPHALFUM__FIELD_NAME.field_name)

    def set_MaxSubsequentZJumpHalfUm_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaxSubsequentZJumpHalfUm' on this record model
        """
        self.set_field_value(self.MAXSUBSEQUENTZJUMPHALFUM__FIELD_NAME.field_name, value)

    def get_MaxSubsequentZJumpHalfUm_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaxSubsequentZJumpHalfUm' from this record model
        """
        return self.get_field_value(self.MAXSUBSEQUENTZJUMPHALFUM__FIELD_NAME.field_name)

    def set_MockRun_field(self, value: Optional[bool]):
        """
        Set data field with field name 'MockRun' on this record model
        """
        self.set_field_value(self.MOCKRUN__FIELD_NAME.field_name, value)

    def get_MockRun_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'MockRun' from this record model
        """
        return self.get_field_value(self.MOCKRUN__FIELD_NAME.field_name)

    def set_MotorDelayFrames_field(self, value: Optional[str]):
        """
        Set data field with field name 'MotorDelayFrames' on this record model
        """
        self.set_field_value(self.MOTORDELAYFRAMES__FIELD_NAME.field_name, value)

    def get_MotorDelayFrames_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MotorDelayFrames' from this record model
        """
        return self.get_field_value(self.MOTORDELAYFRAMES__FIELD_NAME.field_name)

    def set_NumAnalysisThreads_field(self, value: Optional[str]):
        """
        Set data field with field name 'NumAnalysisThreads' on this record model
        """
        self.set_field_value(self.NUMANALYSISTHREADS__FIELD_NAME.field_name, value)

    def get_NumAnalysisThreads_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NumAnalysisThreads' from this record model
        """
        return self.get_field_value(self.NUMANALYSISTHREADS__FIELD_NAME.field_name)

    def set_NumSwaths_field(self, value: Optional[str]):
        """
        Set data field with field name 'NumSwaths' on this record model
        """
        self.set_field_value(self.NUMSWATHS__FIELD_NAME.field_name, value)

    def get_NumSwaths_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NumSwaths' from this record model
        """
        return self.get_field_value(self.NUMSWATHS__FIELD_NAME.field_name)

    def set_NumTilesPerSwath_field(self, value: Optional[str]):
        """
        Set data field with field name 'NumTilesPerSwath' on this record model
        """
        self.set_field_value(self.NUMTILESPERSWATH__FIELD_NAME.field_name, value)

    def get_NumTilesPerSwath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NumTilesPerSwath' from this record model
        """
        return self.get_field_value(self.NUMTILESPERSWATH__FIELD_NAME.field_name)

    def set_NumberCyclesRemaining_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberCyclesRemaining' on this record model
        """
        self.set_field_value(self.NUMBERCYCLESREMAINING__FIELD_NAME.field_name, value)

    def get_NumberCyclesRemaining_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberCyclesRemaining' from this record model
        """
        return self.get_field_value(self.NUMBERCYCLESREMAINING__FIELD_NAME.field_name)

    def set_NumberOfInitialZJumps_field(self, value: Optional[str]):
        """
        Set data field with field name 'NumberOfInitialZJumps' on this record model
        """
        self.set_field_value(self.NUMBEROFINITIALZJUMPS__FIELD_NAME.field_name, value)

    def get_NumberOfInitialZJumps_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NumberOfInitialZJumps' from this record model
        """
        return self.get_field_value(self.NUMBEROFINITIALZJUMPS__FIELD_NAME.field_name)

    def set_Offset_field(self, value: Optional[str]):
        """
        Set data field with field name 'Offset' on this record model
        """
        self.set_field_value(self.OFFSET__FIELD_NAME.field_name, value)

    def get_Offset_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Offset' from this record model
        """
        return self.get_field_value(self.OFFSET__FIELD_NAME.field_name)

    def set_OutputFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputFolder' on this record model
        """
        self.set_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name, value)

    def get_OutputFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputFolder' from this record model
        """
        return self.get_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name)

    def set_PeQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'PeQuantity' on this record model
        """
        self.set_field_value(self.PEQUANTITY__FIELD_NAME.field_name, value)

    def get_PeQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PeQuantity' from this record model
        """
        return self.get_field_value(self.PEQUANTITY__FIELD_NAME.field_name)

    def set_PeSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeSerialNumber' on this record model
        """
        self.set_field_value(self.PESERIALNUMBER__FIELD_NAME.field_name, value)

    def get_PeSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeSerialNumber' from this record model
        """
        return self.get_field_value(self.PESERIALNUMBER__FIELD_NAME.field_name)

    def set_PerformPreRunFluidicsCheck_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PerformPreRunFluidicsCheck' on this record model
        """
        self.set_field_value(self.PERFORMPRERUNFLUIDICSCHECK__FIELD_NAME.field_name, value)

    def get_PerformPreRunFluidicsCheck_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PerformPreRunFluidicsCheck' from this record model
        """
        return self.get_field_value(self.PERFORMPRERUNFLUIDICSCHECK__FIELD_NAME.field_name)

    def set_PeriodicSave_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeriodicSave' on this record model
        """
        self.set_field_value(self.PERIODICSAVE__FIELD_NAME.field_name, value)

    def get_PeriodicSave_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeriodicSave' from this record model
        """
        return self.get_field_value(self.PERIODICSAVE__FIELD_NAME.field_name)

    def set_Prime_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Prime' on this record model
        """
        self.set_field_value(self.PRIME__FIELD_NAME.field_name, value)

    def get_Prime_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Prime' from this record model
        """
        return self.get_field_value(self.PRIME__FIELD_NAME.field_name)

    def set_PromptForPeReagents_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PromptForPeReagents' on this record model
        """
        self.set_field_value(self.PROMPTFORPEREAGENTS__FIELD_NAME.field_name, value)

    def get_PromptForPeReagents_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PromptForPeReagents' from this record model
        """
        return self.get_field_value(self.PROMPTFORPEREAGENTS__FIELD_NAME.field_name)

    def set_RTAVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RTAVersion' on this record model
        """
        self.set_field_value(self.RTAVERSION__FIELD_NAME.field_name, value)

    def get_RTAVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RTAVersion' from this record model
        """
        return self.get_field_value(self.RTAVERSION__FIELD_NAME.field_name)

    def set_Read1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Read1' on this record model
        """
        self.set_field_value(self.READ1__FIELD_NAME.field_name, value)

    def get_Read1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Read1' from this record model
        """
        return self.get_field_value(self.READ1__FIELD_NAME.field_name)

    def set_Read2_field(self, value: Optional[str]):
        """
        Set data field with field name 'Read2' on this record model
        """
        self.set_field_value(self.READ2__FIELD_NAME.field_name, value)

    def get_Read2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Read2' from this record model
        """
        return self.get_field_value(self.READ2__FIELD_NAME.field_name)

    def set_RecipeFragmentVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeFragmentVersion' on this record model
        """
        self.set_field_value(self.RECIPEFRAGMENTVERSION__FIELD_NAME.field_name, value)

    def get_RecipeFragmentVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeFragmentVersion' from this record model
        """
        return self.get_field_value(self.RECIPEFRAGMENTVERSION__FIELD_NAME.field_name)

    def set_Rehyb_field(self, value: Optional[str]):
        """
        Set data field with field name 'Rehyb' on this record model
        """
        self.set_field_value(self.REHYB__FIELD_NAME.field_name, value)

    def get_Rehyb_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Rehyb' from this record model
        """
        return self.get_field_value(self.REHYB__FIELD_NAME.field_name)

    def set_Resume_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Resume' on this record model
        """
        self.set_field_value(self.RESUME__FIELD_NAME.field_name, value)

    def get_Resume_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Resume' from this record model
        """
        return self.get_field_value(self.RESUME__FIELD_NAME.field_name)

    def set_ResumeCycle_field(self, value: Optional[str]):
        """
        Set data field with field name 'ResumeCycle' on this record model
        """
        self.set_field_value(self.RESUMECYCLE__FIELD_NAME.field_name, value)

    def get_ResumeCycle_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ResumeCycle' from this record model
        """
        return self.get_field_value(self.RESUMECYCLE__FIELD_NAME.field_name)

    def set_RunID_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunID' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunID' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_RunMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunMode' on this record model
        """
        self.set_field_value(self.RUNMODE__FIELD_NAME.field_name, value)

    def get_RunMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunMode' from this record model
        """
        return self.get_field_value(self.RUNMODE__FIELD_NAME.field_name)

    def set_RunStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunStartDate' on this record model
        """
        self.set_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name, value)

    def get_RunStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunStartDate' from this record model
        """
        return self.get_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name)

    def set_SampleSheet_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleSheet' on this record model
        """
        self.set_field_value(self.SAMPLESHEET__FIELD_NAME.field_name, value)

    def get_SampleSheet_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleSheet' from this record model
        """
        return self.get_field_value(self.SAMPLESHEET__FIELD_NAME.field_name)

    def set_SbsQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'SbsQuantity' on this record model
        """
        self.set_field_value(self.SBSQUANTITY__FIELD_NAME.field_name, value)

    def get_SbsQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SbsQuantity' from this record model
        """
        return self.get_field_value(self.SBSQUANTITY__FIELD_NAME.field_name)

    def set_SbsSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'SbsSerialNumber' on this record model
        """
        self.set_field_value(self.SBSSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_SbsSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SbsSerialNumber' from this record model
        """
        return self.get_field_value(self.SBSSERIALNUMBER__FIELD_NAME.field_name)

    def set_ScanID_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScanID' on this record model
        """
        self.set_field_value(self.SCANID__FIELD_NAME.field_name, value)

    def get_ScanID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScanID' from this record model
        """
        return self.get_field_value(self.SCANID__FIELD_NAME.field_name)

    def set_ScanNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ScanNumber' on this record model
        """
        self.set_field_value(self.SCANNUMBER__FIELD_NAME.field_name, value)

    def get_ScanNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ScanNumber' from this record model
        """
        return self.get_field_value(self.SCANNUMBER__FIELD_NAME.field_name)

    def set_ScannerID_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScannerID' on this record model
        """
        self.set_field_value(self.SCANNERID__FIELD_NAME.field_name, value)

    def get_ScannerID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScannerID' from this record model
        """
        return self.get_field_value(self.SCANNERID__FIELD_NAME.field_name)

    def set_SelectedSection_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_1' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_1__FIELD_NAME.field_name, value)

    def get_SelectedSection_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_1' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_1__FIELD_NAME.field_name)

    def set_SelectedSection_2_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_2' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_2__FIELD_NAME.field_name, value)

    def get_SelectedSection_2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_2' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_2__FIELD_NAME.field_name)

    def set_SelectedSection_3_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_3' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_3__FIELD_NAME.field_name, value)

    def get_SelectedSection_3_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_3' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_3__FIELD_NAME.field_name)

    def set_SelectedSection_4_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_4' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_4__FIELD_NAME.field_name, value)

    def get_SelectedSection_4_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_4' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_4__FIELD_NAME.field_name)

    def set_SelectedSection_5_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_5' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_5__FIELD_NAME.field_name, value)

    def get_SelectedSection_5_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_5' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_5__FIELD_NAME.field_name)

    def set_SelectedSection_6_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_6' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_6__FIELD_NAME.field_name, value)

    def get_SelectedSection_6_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_6' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_6__FIELD_NAME.field_name)

    def set_SelectedSection_7_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_7' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_7__FIELD_NAME.field_name, value)

    def get_SelectedSection_7_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_7' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_7__FIELD_NAME.field_name)

    def set_SelectedSection_8_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSection_8' on this record model
        """
        self.set_field_value(self.SELECTEDSECTION_8__FIELD_NAME.field_name, value)

    def get_SelectedSection_8_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSection_8' from this record model
        """
        return self.get_field_value(self.SELECTEDSECTION_8__FIELD_NAME.field_name)

    def set_SelectedSurface_field(self, value: Optional[str]):
        """
        Set data field with field name 'SelectedSurface' on this record model
        """
        self.set_field_value(self.SELECTEDSURFACE__FIELD_NAME.field_name, value)

    def get_SelectedSurface_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SelectedSurface' from this record model
        """
        return self.get_field_value(self.SELECTEDSURFACE__FIELD_NAME.field_name)

    def set_SlideHolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'SlideHolder' on this record model
        """
        self.set_field_value(self.SLIDEHOLDER__FIELD_NAME.field_name, value)

    def get_SlideHolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SlideHolder' from this record model
        """
        return self.get_field_value(self.SLIDEHOLDER__FIELD_NAME.field_name)

    def set_SupportMultipleSurfacesInUI_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SupportMultipleSurfacesInUI' on this record model
        """
        self.set_field_value(self.SUPPORTMULTIPLESURFACESINUI__FIELD_NAME.field_name, value)

    def get_SupportMultipleSurfacesInUI_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SupportMultipleSurfacesInUI' from this record model
        """
        return self.get_field_value(self.SUPPORTMULTIPLESURFACESINUI__FIELD_NAME.field_name)

    def set_SwathScanMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SwathScanMode' on this record model
        """
        self.set_field_value(self.SWATHSCANMODE__FIELD_NAME.field_name, value)

    def get_SwathScanMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SwathScanMode' from this record model
        """
        return self.get_field_value(self.SWATHSCANMODE__FIELD_NAME.field_name)

    def set_TempFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'TempFolder' on this record model
        """
        self.set_field_value(self.TEMPFOLDER__FIELD_NAME.field_name, value)

    def get_TempFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TempFolder' from this record model
        """
        return self.get_field_value(self.TEMPFOLDER__FIELD_NAME.field_name)

    def set_TemplateCycleCount_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateCycleCount' on this record model
        """
        self.set_field_value(self.TEMPLATECYCLECOUNT__FIELD_NAME.field_name, value)

    def get_TemplateCycleCount_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateCycleCount' from this record model
        """
        return self.get_field_value(self.TEMPLATECYCLECOUNT__FIELD_NAME.field_name)

    def set_TileHeight_field(self, value: Optional[str]):
        """
        Set data field with field name 'TileHeight' on this record model
        """
        self.set_field_value(self.TILEHEIGHT__FIELD_NAME.field_name, value)

    def get_TileHeight_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TileHeight' from this record model
        """
        return self.get_field_value(self.TILEHEIGHT__FIELD_NAME.field_name)

    def set_TileWidth_field(self, value: Optional[str]):
        """
        Set data field with field name 'TileWidth' on this record model
        """
        self.set_field_value(self.TILEWIDTH__FIELD_NAME.field_name, value)

    def get_TileWidth_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TileWidth' from this record model
        """
        return self.get_field_value(self.TILEWIDTH__FIELD_NAME.field_name)

    def set_UseExistingRecipe_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseExistingRecipe' on this record model
        """
        self.set_field_value(self.USEEXISTINGRECIPE__FIELD_NAME.field_name, value)

    def get_UseExistingRecipe_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseExistingRecipe' from this record model
        """
        return self.get_field_value(self.USEEXISTINGRECIPE__FIELD_NAME.field_name)

    def set_Username_field(self, value: Optional[str]):
        """
        Set data field with field name 'Username' on this record model
        """
        self.set_field_value(self.USERNAME__FIELD_NAME.field_name, value)

    def get_Username_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Username' from this record model
        """
        return self.get_field_value(self.USERNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkFlowType_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkFlowType' on this record model
        """
        self.set_field_value(self.WORKFLOWTYPE__FIELD_NAME.field_name, value)

    def get_WorkFlowType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkFlowType' from this record model
        """
        return self.get_field_value(self.WORKFLOWTYPE__FIELD_NAME.field_name)


class IlluminaMiSeqRunParametersModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaMiSeqRunParameters
    Data Type Display Name: Illumina MiSeq Run Parameters (Illumina MiSeq Run Parameters')
    Fields: ApplicationVersion, SaveFocusImages, SendInstrumentHealthToILMN, RecipeFolder, FlowcellPartNumber, ScannerID, SampleSheetFolder, RunNumber, ExperimentName, PR2BottleExpirationDate, ReagentKitVersion, CloudRunId, SaveScanImages, CreatedBy, FlowcellExpirationDate, EnableAnalysis, Chemistry, DataRecordName, MCSVersion, PR2BottlePartNumber, ReagentKitPartNumber, SurfaceToScan, CloudUsername, AfterRunWashMethod, FPGAVersion, NumTilesPerSwath, DateCreated, RTAVersion, SupportMultipleSurfacesInUI, NumSwaths, ILMNOnlyRecipeFolder, FlowcellSerialNumber, VeloxLastModifiedBy, ReagentKitExpirationDate, MostRecentWashType, ManifestFolder, FocusMethod, OutputFolder, EnableCloud, ApplicationName, SampleSheetName, CopyManifests, PR2BottleSerialNumber, AnalysisFolder, NumLanes, Resumable, Username, TempFolder, VeloxLastModifiedDate, ReagentKitSerialNumber, RunID, RunStartDate
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaMiSeqRunParameters'
    DISPLAY_NAME: Final[str] = "Illumina MiSeq Run Parameters"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina MiSeq Run Parameters'"
    AFTERRUNWASHMETHOD__FIELD_NAME: Final[WrapperField] = WrapperField("AfterRunWashMethod", FieldType.STRING, display_name="After Run Wash Method")
    ANALYSISFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("AnalysisFolder", FieldType.STRING, display_name="Analysis Folder")
    APPLICATIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ApplicationName", FieldType.STRING, display_name="Application Name")
    APPLICATIONVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("ApplicationVersion", FieldType.STRING, display_name="Application Version")
    CHEMISTRY__FIELD_NAME: Final[WrapperField] = WrapperField("Chemistry", FieldType.STRING, display_name="Chemistry")
    CLOUDRUNID__FIELD_NAME: Final[WrapperField] = WrapperField("CloudRunId", FieldType.STRING, display_name="Cloud Run Id")
    CLOUDUSERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("CloudUsername", FieldType.STRING, display_name="Cloud Username")
    COPYMANIFESTS__FIELD_NAME: Final[WrapperField] = WrapperField("CopyManifests", FieldType.BOOLEAN, display_name="Copy Manifests")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ENABLEANALYSIS__FIELD_NAME: Final[WrapperField] = WrapperField("EnableAnalysis", FieldType.BOOLEAN, display_name="Enable Analysis")
    ENABLECLOUD__FIELD_NAME: Final[WrapperField] = WrapperField("EnableCloud", FieldType.BOOLEAN, display_name="Enable Cloud")
    EXPERIMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentName", FieldType.STRING, display_name="Experiment Name")
    FPGAVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("FPGAVersion", FieldType.STRING, display_name="FPGA Version")
    FLOWCELLEXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("FlowcellExpirationDate", FieldType.STRING, display_name="Flowcell Expiration Date")
    FLOWCELLPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("FlowcellPartNumber", FieldType.STRING, display_name="Flowcell Part Number")
    FLOWCELLSERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("FlowcellSerialNumber", FieldType.STRING, display_name="Flowcell Serial Number")
    FOCUSMETHOD__FIELD_NAME: Final[WrapperField] = WrapperField("FocusMethod", FieldType.STRING, display_name="Focus Method")
    ILMNONLYRECIPEFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("ILMNOnlyRecipeFolder", FieldType.STRING, display_name="ILMN Only Recipe Folder")
    MCSVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("MCSVersion", FieldType.STRING, display_name="MCS Version")
    MANIFESTFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("ManifestFolder", FieldType.STRING, display_name="Manifest Folder")
    MOSTRECENTWASHTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("MostRecentWashType", FieldType.STRING, display_name="Most Recent Wash Type")
    NUMLANES__FIELD_NAME: Final[WrapperField] = WrapperField("NumLanes", FieldType.LONG, display_name="Number of Lanes")
    NUMSWATHS__FIELD_NAME: Final[WrapperField] = WrapperField("NumSwaths", FieldType.LONG, display_name="Number of Swaths")
    NUMTILESPERSWATH__FIELD_NAME: Final[WrapperField] = WrapperField("NumTilesPerSwath", FieldType.LONG, display_name="Number of Tiles Per Swath")
    OUTPUTFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("OutputFolder", FieldType.STRING, display_name="Output Folder")
    PR2BOTTLEEXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("PR2BottleExpirationDate", FieldType.STRING, display_name="PR2Bottle Expiration Date")
    PR2BOTTLEPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PR2BottlePartNumber", FieldType.STRING, display_name="PR2Bottle Part Number")
    PR2BOTTLESERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PR2BottleSerialNumber", FieldType.STRING, display_name="PR2Bottle Serial Number")
    RTAVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("RTAVersion", FieldType.STRING, display_name="RTA Version")
    REAGENTKITEXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ReagentKitExpirationDate", FieldType.STRING, display_name="ReagentKit Expiration Date")
    REAGENTKITPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ReagentKitPartNumber", FieldType.STRING, display_name="ReagentKit Part Number")
    REAGENTKITSERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ReagentKitSerialNumber", FieldType.STRING, display_name="ReagentKit Serial Number")
    REAGENTKITVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("ReagentKitVersion", FieldType.STRING, display_name="ReagentKit Version")
    RECIPEFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("RecipeFolder", FieldType.STRING, display_name="Recipe Folder")
    RESUMABLE__FIELD_NAME: Final[WrapperField] = WrapperField("Resumable", FieldType.BOOLEAN, display_name="Resumable")
    RUNID__FIELD_NAME: Final[WrapperField] = WrapperField("RunID", FieldType.STRING, display_name="Run ID")
    RUNNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("RunNumber", FieldType.LONG, display_name="Run Number")
    RUNSTARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RunStartDate", FieldType.DATE, display_name="Run Start Date")
    SAMPLESHEETFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("SampleSheetFolder", FieldType.STRING, display_name="Sample Sheet Folder")
    SAMPLESHEETNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SampleSheetName", FieldType.STRING, display_name="Sample Sheet Name")
    SAVEFOCUSIMAGES__FIELD_NAME: Final[WrapperField] = WrapperField("SaveFocusImages", FieldType.BOOLEAN, display_name="Save Focus Images")
    SAVESCANIMAGES__FIELD_NAME: Final[WrapperField] = WrapperField("SaveScanImages", FieldType.BOOLEAN, display_name="Save Scan Images")
    SCANNERID__FIELD_NAME: Final[WrapperField] = WrapperField("ScannerID", FieldType.STRING, display_name="Scanner ID")
    SENDINSTRUMENTHEALTHTOILMN__FIELD_NAME: Final[WrapperField] = WrapperField("SendInstrumentHealthToILMN", FieldType.BOOLEAN, display_name="Send Instrument Health To ILMN")
    SUPPORTMULTIPLESURFACESINUI__FIELD_NAME: Final[WrapperField] = WrapperField("SupportMultipleSurfacesInUI", FieldType.BOOLEAN, display_name="Support Multiple Surfaces In UI")
    SURFACETOSCAN__FIELD_NAME: Final[WrapperField] = WrapperField("SurfaceToScan", FieldType.STRING, display_name="Surface To Scan")
    TEMPFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("TempFolder", FieldType.STRING, display_name="Temp Folder")
    USERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Username", FieldType.STRING, display_name="Username")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AfterRunWashMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'AfterRunWashMethod' on this record model
        """
        self.set_field_value(self.AFTERRUNWASHMETHOD__FIELD_NAME.field_name, value)

    def get_AfterRunWashMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AfterRunWashMethod' from this record model
        """
        return self.get_field_value(self.AFTERRUNWASHMETHOD__FIELD_NAME.field_name)

    def set_AnalysisFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'AnalysisFolder' on this record model
        """
        self.set_field_value(self.ANALYSISFOLDER__FIELD_NAME.field_name, value)

    def get_AnalysisFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AnalysisFolder' from this record model
        """
        return self.get_field_value(self.ANALYSISFOLDER__FIELD_NAME.field_name)

    def set_ApplicationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationName' on this record model
        """
        self.set_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name, value)

    def get_ApplicationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationName' from this record model
        """
        return self.get_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name)

    def set_ApplicationVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationVersion' on this record model
        """
        self.set_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name, value)

    def get_ApplicationVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationVersion' from this record model
        """
        return self.get_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name)

    def set_Chemistry_field(self, value: Optional[str]):
        """
        Set data field with field name 'Chemistry' on this record model
        """
        self.set_field_value(self.CHEMISTRY__FIELD_NAME.field_name, value)

    def get_Chemistry_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Chemistry' from this record model
        """
        return self.get_field_value(self.CHEMISTRY__FIELD_NAME.field_name)

    def set_CloudRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'CloudRunId' on this record model
        """
        self.set_field_value(self.CLOUDRUNID__FIELD_NAME.field_name, value)

    def get_CloudRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CloudRunId' from this record model
        """
        return self.get_field_value(self.CLOUDRUNID__FIELD_NAME.field_name)

    def set_CloudUsername_field(self, value: Optional[str]):
        """
        Set data field with field name 'CloudUsername' on this record model
        """
        self.set_field_value(self.CLOUDUSERNAME__FIELD_NAME.field_name, value)

    def get_CloudUsername_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CloudUsername' from this record model
        """
        return self.get_field_value(self.CLOUDUSERNAME__FIELD_NAME.field_name)

    def set_CopyManifests_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CopyManifests' on this record model
        """
        self.set_field_value(self.COPYMANIFESTS__FIELD_NAME.field_name, value)

    def get_CopyManifests_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CopyManifests' from this record model
        """
        return self.get_field_value(self.COPYMANIFESTS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EnableAnalysis_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableAnalysis' on this record model
        """
        self.set_field_value(self.ENABLEANALYSIS__FIELD_NAME.field_name, value)

    def get_EnableAnalysis_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableAnalysis' from this record model
        """
        return self.get_field_value(self.ENABLEANALYSIS__FIELD_NAME.field_name)

    def set_EnableCloud_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EnableCloud' on this record model
        """
        self.set_field_value(self.ENABLECLOUD__FIELD_NAME.field_name, value)

    def get_EnableCloud_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EnableCloud' from this record model
        """
        return self.get_field_value(self.ENABLECLOUD__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FPGAVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'FPGAVersion' on this record model
        """
        self.set_field_value(self.FPGAVERSION__FIELD_NAME.field_name, value)

    def get_FPGAVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FPGAVersion' from this record model
        """
        return self.get_field_value(self.FPGAVERSION__FIELD_NAME.field_name)

    def set_FlowcellExpirationDate_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellExpirationDate' on this record model
        """
        self.set_field_value(self.FLOWCELLEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_FlowcellExpirationDate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellExpirationDate' from this record model
        """
        return self.get_field_value(self.FLOWCELLEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_FlowcellPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellPartNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLPARTNUMBER__FIELD_NAME.field_name, value)

    def get_FlowcellPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellPartNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLPARTNUMBER__FIELD_NAME.field_name)

    def set_FlowcellSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellSerialNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_FlowcellSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellSerialNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLSERIALNUMBER__FIELD_NAME.field_name)

    def set_FocusMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'FocusMethod' on this record model
        """
        self.set_field_value(self.FOCUSMETHOD__FIELD_NAME.field_name, value)

    def get_FocusMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FocusMethod' from this record model
        """
        return self.get_field_value(self.FOCUSMETHOD__FIELD_NAME.field_name)

    def set_ILMNOnlyRecipeFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'ILMNOnlyRecipeFolder' on this record model
        """
        self.set_field_value(self.ILMNONLYRECIPEFOLDER__FIELD_NAME.field_name, value)

    def get_ILMNOnlyRecipeFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ILMNOnlyRecipeFolder' from this record model
        """
        return self.get_field_value(self.ILMNONLYRECIPEFOLDER__FIELD_NAME.field_name)

    def set_MCSVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'MCSVersion' on this record model
        """
        self.set_field_value(self.MCSVERSION__FIELD_NAME.field_name, value)

    def get_MCSVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MCSVersion' from this record model
        """
        return self.get_field_value(self.MCSVERSION__FIELD_NAME.field_name)

    def set_ManifestFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'ManifestFolder' on this record model
        """
        self.set_field_value(self.MANIFESTFOLDER__FIELD_NAME.field_name, value)

    def get_ManifestFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ManifestFolder' from this record model
        """
        return self.get_field_value(self.MANIFESTFOLDER__FIELD_NAME.field_name)

    def set_MostRecentWashType_field(self, value: Optional[str]):
        """
        Set data field with field name 'MostRecentWashType' on this record model
        """
        self.set_field_value(self.MOSTRECENTWASHTYPE__FIELD_NAME.field_name, value)

    def get_MostRecentWashType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MostRecentWashType' from this record model
        """
        return self.get_field_value(self.MOSTRECENTWASHTYPE__FIELD_NAME.field_name)

    def set_NumLanes_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumLanes' on this record model
        """
        self.set_field_value(self.NUMLANES__FIELD_NAME.field_name, value)

    def get_NumLanes_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumLanes' from this record model
        """
        return self.get_field_value(self.NUMLANES__FIELD_NAME.field_name)

    def set_NumSwaths_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumSwaths' on this record model
        """
        self.set_field_value(self.NUMSWATHS__FIELD_NAME.field_name, value)

    def get_NumSwaths_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumSwaths' from this record model
        """
        return self.get_field_value(self.NUMSWATHS__FIELD_NAME.field_name)

    def set_NumTilesPerSwath_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumTilesPerSwath' on this record model
        """
        self.set_field_value(self.NUMTILESPERSWATH__FIELD_NAME.field_name, value)

    def get_NumTilesPerSwath_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumTilesPerSwath' from this record model
        """
        return self.get_field_value(self.NUMTILESPERSWATH__FIELD_NAME.field_name)

    def set_OutputFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputFolder' on this record model
        """
        self.set_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name, value)

    def get_OutputFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputFolder' from this record model
        """
        return self.get_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name)

    def set_PR2BottleExpirationDate_field(self, value: Optional[str]):
        """
        Set data field with field name 'PR2BottleExpirationDate' on this record model
        """
        self.set_field_value(self.PR2BOTTLEEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_PR2BottleExpirationDate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PR2BottleExpirationDate' from this record model
        """
        return self.get_field_value(self.PR2BOTTLEEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_PR2BottlePartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PR2BottlePartNumber' on this record model
        """
        self.set_field_value(self.PR2BOTTLEPARTNUMBER__FIELD_NAME.field_name, value)

    def get_PR2BottlePartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PR2BottlePartNumber' from this record model
        """
        return self.get_field_value(self.PR2BOTTLEPARTNUMBER__FIELD_NAME.field_name)

    def set_PR2BottleSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PR2BottleSerialNumber' on this record model
        """
        self.set_field_value(self.PR2BOTTLESERIALNUMBER__FIELD_NAME.field_name, value)

    def get_PR2BottleSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PR2BottleSerialNumber' from this record model
        """
        return self.get_field_value(self.PR2BOTTLESERIALNUMBER__FIELD_NAME.field_name)

    def set_RTAVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RTAVersion' on this record model
        """
        self.set_field_value(self.RTAVERSION__FIELD_NAME.field_name, value)

    def get_RTAVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RTAVersion' from this record model
        """
        return self.get_field_value(self.RTAVERSION__FIELD_NAME.field_name)

    def set_ReagentKitExpirationDate_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentKitExpirationDate' on this record model
        """
        self.set_field_value(self.REAGENTKITEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ReagentKitExpirationDate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentKitExpirationDate' from this record model
        """
        return self.get_field_value(self.REAGENTKITEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_ReagentKitPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentKitPartNumber' on this record model
        """
        self.set_field_value(self.REAGENTKITPARTNUMBER__FIELD_NAME.field_name, value)

    def get_ReagentKitPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentKitPartNumber' from this record model
        """
        return self.get_field_value(self.REAGENTKITPARTNUMBER__FIELD_NAME.field_name)

    def set_ReagentKitSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentKitSerialNumber' on this record model
        """
        self.set_field_value(self.REAGENTKITSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_ReagentKitSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentKitSerialNumber' from this record model
        """
        return self.get_field_value(self.REAGENTKITSERIALNUMBER__FIELD_NAME.field_name)

    def set_ReagentKitVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentKitVersion' on this record model
        """
        self.set_field_value(self.REAGENTKITVERSION__FIELD_NAME.field_name, value)

    def get_ReagentKitVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentKitVersion' from this record model
        """
        return self.get_field_value(self.REAGENTKITVERSION__FIELD_NAME.field_name)

    def set_RecipeFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeFolder' on this record model
        """
        self.set_field_value(self.RECIPEFOLDER__FIELD_NAME.field_name, value)

    def get_RecipeFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeFolder' from this record model
        """
        return self.get_field_value(self.RECIPEFOLDER__FIELD_NAME.field_name)

    def set_Resumable_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Resumable' on this record model
        """
        self.set_field_value(self.RESUMABLE__FIELD_NAME.field_name, value)

    def get_Resumable_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Resumable' from this record model
        """
        return self.get_field_value(self.RESUMABLE__FIELD_NAME.field_name)

    def set_RunID_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunID' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunID' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_RunNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunNumber' on this record model
        """
        self.set_field_value(self.RUNNUMBER__FIELD_NAME.field_name, value)

    def get_RunNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunNumber' from this record model
        """
        return self.get_field_value(self.RUNNUMBER__FIELD_NAME.field_name)

    def set_RunStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunStartDate' on this record model
        """
        self.set_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name, value)

    def get_RunStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunStartDate' from this record model
        """
        return self.get_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name)

    def set_SampleSheetFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleSheetFolder' on this record model
        """
        self.set_field_value(self.SAMPLESHEETFOLDER__FIELD_NAME.field_name, value)

    def get_SampleSheetFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleSheetFolder' from this record model
        """
        return self.get_field_value(self.SAMPLESHEETFOLDER__FIELD_NAME.field_name)

    def set_SampleSheetName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleSheetName' on this record model
        """
        self.set_field_value(self.SAMPLESHEETNAME__FIELD_NAME.field_name, value)

    def get_SampleSheetName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleSheetName' from this record model
        """
        return self.get_field_value(self.SAMPLESHEETNAME__FIELD_NAME.field_name)

    def set_SaveFocusImages_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SaveFocusImages' on this record model
        """
        self.set_field_value(self.SAVEFOCUSIMAGES__FIELD_NAME.field_name, value)

    def get_SaveFocusImages_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SaveFocusImages' from this record model
        """
        return self.get_field_value(self.SAVEFOCUSIMAGES__FIELD_NAME.field_name)

    def set_SaveScanImages_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SaveScanImages' on this record model
        """
        self.set_field_value(self.SAVESCANIMAGES__FIELD_NAME.field_name, value)

    def get_SaveScanImages_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SaveScanImages' from this record model
        """
        return self.get_field_value(self.SAVESCANIMAGES__FIELD_NAME.field_name)

    def set_ScannerID_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScannerID' on this record model
        """
        self.set_field_value(self.SCANNERID__FIELD_NAME.field_name, value)

    def get_ScannerID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScannerID' from this record model
        """
        return self.get_field_value(self.SCANNERID__FIELD_NAME.field_name)

    def set_SendInstrumentHealthToILMN_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SendInstrumentHealthToILMN' on this record model
        """
        self.set_field_value(self.SENDINSTRUMENTHEALTHTOILMN__FIELD_NAME.field_name, value)

    def get_SendInstrumentHealthToILMN_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SendInstrumentHealthToILMN' from this record model
        """
        return self.get_field_value(self.SENDINSTRUMENTHEALTHTOILMN__FIELD_NAME.field_name)

    def set_SupportMultipleSurfacesInUI_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SupportMultipleSurfacesInUI' on this record model
        """
        self.set_field_value(self.SUPPORTMULTIPLESURFACESINUI__FIELD_NAME.field_name, value)

    def get_SupportMultipleSurfacesInUI_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SupportMultipleSurfacesInUI' from this record model
        """
        return self.get_field_value(self.SUPPORTMULTIPLESURFACESINUI__FIELD_NAME.field_name)

    def set_SurfaceToScan_field(self, value: Optional[str]):
        """
        Set data field with field name 'SurfaceToScan' on this record model
        """
        self.set_field_value(self.SURFACETOSCAN__FIELD_NAME.field_name, value)

    def get_SurfaceToScan_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SurfaceToScan' from this record model
        """
        return self.get_field_value(self.SURFACETOSCAN__FIELD_NAME.field_name)

    def set_TempFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'TempFolder' on this record model
        """
        self.set_field_value(self.TEMPFOLDER__FIELD_NAME.field_name, value)

    def get_TempFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TempFolder' from this record model
        """
        return self.get_field_value(self.TEMPFOLDER__FIELD_NAME.field_name)

    def set_Username_field(self, value: Optional[str]):
        """
        Set data field with field name 'Username' on this record model
        """
        self.set_field_value(self.USERNAME__FIELD_NAME.field_name, value)

    def get_Username_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Username' from this record model
        """
        return self.get_field_value(self.USERNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaMiSeqSSSettingsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaMiSeqSSSettings
    Data Type Display Name: Illumina MiSeq Sample Sheet Settings (Illumina MiSeq Sample Sheet Settings)
    Fields: EnrichmentMaxRegionStatistics, Description, AdapterTrimmingStringency, CustomRead2PrimerMix, PercentTilesToScan, BaitManifestFileName, VariantFilterQualityCutoff, DateCreated, Adapter, PicardHSmetrics, MinimumCoverageDepth, Kmer, OutputGenomeVCF, ReverseComplement, Assay, CustomIndexPrimerMix, FlagPCRDuplicates, CustomAmpliconAlignerMaxIndel, ExperimentName, IndexReads, VeloxLastModifiedBy, CyclesRead1, CyclesRead2, CreatedBy, AdapterRead2, TaxonomyFile, InvestigatorName, Workflow, Aligner, CustomRead1PrimerMix, RunDate, DataRecordName, ReadType, StitchReads, VeloxLastModifiedDate, VariantCaller, ExcludeRegionsManifestA, ReagentCartridgeBarcode, QualityScoreTrim, FilterOutSingleStrandVariants
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaMiSeqSSSettings'
    DISPLAY_NAME: Final[str] = "Illumina MiSeq Sample Sheet Settings"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina MiSeq Sample Sheet Settings"
    ADAPTER__FIELD_NAME: Final[WrapperField] = WrapperField("Adapter", FieldType.STRING, display_name="Adapter")
    ADAPTERREAD2__FIELD_NAME: Final[WrapperField] = WrapperField("AdapterRead2", FieldType.STRING, display_name="Adapter Read 2")
    ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME: Final[WrapperField] = WrapperField("AdapterTrimmingStringency", FieldType.STRING, display_name="Adapter Trimming Stringency")
    ALIGNER__FIELD_NAME: Final[WrapperField] = WrapperField("Aligner", FieldType.STRING, display_name="Aligner")
    ASSAY__FIELD_NAME: Final[WrapperField] = WrapperField("Assay", FieldType.STRING, display_name="Assay")
    BAITMANIFESTFILENAME__FIELD_NAME: Final[WrapperField] = WrapperField("BaitManifestFileName", FieldType.STRING, display_name="Bait Manifest File Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CUSTOMAMPLICONALIGNERMAXINDEL__FIELD_NAME: Final[WrapperField] = WrapperField("CustomAmpliconAlignerMaxIndel", FieldType.STRING, display_name="Custom Amplicon Aligner Max Indel Size")
    CUSTOMINDEXPRIMERMIX__FIELD_NAME: Final[WrapperField] = WrapperField("CustomIndexPrimerMix", FieldType.STRING, display_name="Custom Index Primer Mix")
    CUSTOMREAD1PRIMERMIX__FIELD_NAME: Final[WrapperField] = WrapperField("CustomRead1PrimerMix", FieldType.STRING, display_name="Custom Read 1 Primer Mix")
    CUSTOMREAD2PRIMERMIX__FIELD_NAME: Final[WrapperField] = WrapperField("CustomRead2PrimerMix", FieldType.STRING, display_name="Custom Read 2 Primer Mix")
    CYCLESREAD1__FIELD_NAME: Final[WrapperField] = WrapperField("CyclesRead1", FieldType.INTEGER, display_name="Cycles Read 1")
    CYCLESREAD2__FIELD_NAME: Final[WrapperField] = WrapperField("CyclesRead2", FieldType.INTEGER, display_name="Cycles Read 2")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    ENRICHMENTMAXREGIONSTATISTICS__FIELD_NAME: Final[WrapperField] = WrapperField("EnrichmentMaxRegionStatistics", FieldType.STRING, display_name="Enrichment Max Region Statistics Count")
    EXCLUDEREGIONSMANIFESTA__FIELD_NAME: Final[WrapperField] = WrapperField("ExcludeRegionsManifestA", FieldType.STRING, display_name="Exclude Regions Manifest A")
    EXPERIMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentName", FieldType.STRING, display_name="Experiment Name")
    FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME: Final[WrapperField] = WrapperField("FilterOutSingleStrandVariants", FieldType.STRING, display_name="Filter Out Single Strand Variants")
    FLAGPCRDUPLICATES__FIELD_NAME: Final[WrapperField] = WrapperField("FlagPCRDuplicates", FieldType.BOOLEAN, display_name="Flag PCR Duplicates")
    INDEXREADS__FIELD_NAME: Final[WrapperField] = WrapperField("IndexReads", FieldType.SHORT, display_name="Index Reads")
    INVESTIGATORNAME__FIELD_NAME: Final[WrapperField] = WrapperField("InvestigatorName", FieldType.STRING, display_name="Investigator Name")
    KMER__FIELD_NAME: Final[WrapperField] = WrapperField("Kmer", FieldType.STRING, display_name="Kmer")
    MINIMUMCOVERAGEDEPTH__FIELD_NAME: Final[WrapperField] = WrapperField("MinimumCoverageDepth", FieldType.STRING, display_name="Minimum Coverage Depth")
    OUTPUTGENOMEVCF__FIELD_NAME: Final[WrapperField] = WrapperField("OutputGenomeVCF", FieldType.BOOLEAN, display_name="Output Genome VCF")
    PERCENTTILESTOSCAN__FIELD_NAME: Final[WrapperField] = WrapperField("PercentTilesToScan", FieldType.STRING, display_name="Percent Tiles To Scan")
    PICARDHSMETRICS__FIELD_NAME: Final[WrapperField] = WrapperField("PicardHSmetrics", FieldType.BOOLEAN, display_name="Picard HS Metrics")
    QUALITYSCORETRIM__FIELD_NAME: Final[WrapperField] = WrapperField("QualityScoreTrim", FieldType.STRING, display_name="Quality Score Trim")
    READTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ReadType", FieldType.PICKLIST, display_name="Read Type")
    REAGENTCARTRIDGEBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ReagentCartridgeBarcode", FieldType.STRING, display_name="Reagent Kit Barcode")
    REVERSECOMPLEMENT__FIELD_NAME: Final[WrapperField] = WrapperField("ReverseComplement", FieldType.BOOLEAN, display_name="Reverse Complement")
    RUNDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RunDate", FieldType.DATE, display_name="Date")
    STITCHREADS__FIELD_NAME: Final[WrapperField] = WrapperField("StitchReads", FieldType.BOOLEAN, display_name="Stitch Reads")
    TAXONOMYFILE__FIELD_NAME: Final[WrapperField] = WrapperField("TaxonomyFile", FieldType.STRING, display_name="TaxonomyFile")
    VARIANTCALLER__FIELD_NAME: Final[WrapperField] = WrapperField("VariantCaller", FieldType.STRING, display_name="Variant Caller")
    VARIANTFILTERQUALITYCUTOFF__FIELD_NAME: Final[WrapperField] = WrapperField("VariantFilterQualityCutoff", FieldType.STRING, display_name="Variant Filter Quality Cutoff")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WORKFLOW__FIELD_NAME: Final[WrapperField] = WrapperField("Workflow", FieldType.STRING, display_name="Workflow")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Adapter_field(self, value: Optional[str]):
        """
        Set data field with field name 'Adapter' on this record model
        """
        self.set_field_value(self.ADAPTER__FIELD_NAME.field_name, value)

    def get_Adapter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Adapter' from this record model
        """
        return self.get_field_value(self.ADAPTER__FIELD_NAME.field_name)

    def set_AdapterRead2_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterRead2' on this record model
        """
        self.set_field_value(self.ADAPTERREAD2__FIELD_NAME.field_name, value)

    def get_AdapterRead2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterRead2' from this record model
        """
        return self.get_field_value(self.ADAPTERREAD2__FIELD_NAME.field_name)

    def set_AdapterTrimmingStringency_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterTrimmingStringency' on this record model
        """
        self.set_field_value(self.ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME.field_name, value)

    def get_AdapterTrimmingStringency_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterTrimmingStringency' from this record model
        """
        return self.get_field_value(self.ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME.field_name)

    def set_Aligner_field(self, value: Optional[str]):
        """
        Set data field with field name 'Aligner' on this record model
        """
        self.set_field_value(self.ALIGNER__FIELD_NAME.field_name, value)

    def get_Aligner_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Aligner' from this record model
        """
        return self.get_field_value(self.ALIGNER__FIELD_NAME.field_name)

    def set_Assay_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assay' on this record model
        """
        self.set_field_value(self.ASSAY__FIELD_NAME.field_name, value)

    def get_Assay_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assay' from this record model
        """
        return self.get_field_value(self.ASSAY__FIELD_NAME.field_name)

    def set_BaitManifestFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaitManifestFileName' on this record model
        """
        self.set_field_value(self.BAITMANIFESTFILENAME__FIELD_NAME.field_name, value)

    def get_BaitManifestFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaitManifestFileName' from this record model
        """
        return self.get_field_value(self.BAITMANIFESTFILENAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomAmpliconAlignerMaxIndel_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomAmpliconAlignerMaxIndel' on this record model
        """
        self.set_field_value(self.CUSTOMAMPLICONALIGNERMAXINDEL__FIELD_NAME.field_name, value)

    def get_CustomAmpliconAlignerMaxIndel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomAmpliconAlignerMaxIndel' from this record model
        """
        return self.get_field_value(self.CUSTOMAMPLICONALIGNERMAXINDEL__FIELD_NAME.field_name)

    def set_CustomIndexPrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomIndexPrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMINDEXPRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomIndexPrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomIndexPrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMINDEXPRIMERMIX__FIELD_NAME.field_name)

    def set_CustomRead1PrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead1PrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMREAD1PRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomRead1PrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead1PrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD1PRIMERMIX__FIELD_NAME.field_name)

    def set_CustomRead2PrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead2PrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMREAD2PRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomRead2PrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead2PrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD2PRIMERMIX__FIELD_NAME.field_name)

    def set_CyclesRead1_field(self, value: Optional[int]):
        """
        Set data field with field name 'CyclesRead1' on this record model
        """
        self.set_field_value(self.CYCLESREAD1__FIELD_NAME.field_name, value)

    def get_CyclesRead1_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CyclesRead1' from this record model
        """
        return self.get_field_value(self.CYCLESREAD1__FIELD_NAME.field_name)

    def set_CyclesRead2_field(self, value: Optional[int]):
        """
        Set data field with field name 'CyclesRead2' on this record model
        """
        self.set_field_value(self.CYCLESREAD2__FIELD_NAME.field_name, value)

    def get_CyclesRead2_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CyclesRead2' from this record model
        """
        return self.get_field_value(self.CYCLESREAD2__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_EnrichmentMaxRegionStatistics_field(self, value: Optional[str]):
        """
        Set data field with field name 'EnrichmentMaxRegionStatistics' on this record model
        """
        self.set_field_value(self.ENRICHMENTMAXREGIONSTATISTICS__FIELD_NAME.field_name, value)

    def get_EnrichmentMaxRegionStatistics_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EnrichmentMaxRegionStatistics' from this record model
        """
        return self.get_field_value(self.ENRICHMENTMAXREGIONSTATISTICS__FIELD_NAME.field_name)

    def set_ExcludeRegionsManifestA_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExcludeRegionsManifestA' on this record model
        """
        self.set_field_value(self.EXCLUDEREGIONSMANIFESTA__FIELD_NAME.field_name, value)

    def get_ExcludeRegionsManifestA_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExcludeRegionsManifestA' from this record model
        """
        return self.get_field_value(self.EXCLUDEREGIONSMANIFESTA__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FilterOutSingleStrandVariants_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilterOutSingleStrandVariants' on this record model
        """
        self.set_field_value(self.FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME.field_name, value)

    def get_FilterOutSingleStrandVariants_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilterOutSingleStrandVariants' from this record model
        """
        return self.get_field_value(self.FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME.field_name)

    def set_FlagPCRDuplicates_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FlagPCRDuplicates' on this record model
        """
        self.set_field_value(self.FLAGPCRDUPLICATES__FIELD_NAME.field_name, value)

    def get_FlagPCRDuplicates_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FlagPCRDuplicates' from this record model
        """
        return self.get_field_value(self.FLAGPCRDUPLICATES__FIELD_NAME.field_name)

    def set_IndexReads_field(self, value: Optional[int]):
        """
        Set data field with field name 'IndexReads' on this record model
        """
        self.set_field_value(self.INDEXREADS__FIELD_NAME.field_name, value)

    def get_IndexReads_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IndexReads' from this record model
        """
        return self.get_field_value(self.INDEXREADS__FIELD_NAME.field_name)

    def set_InvestigatorName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InvestigatorName' on this record model
        """
        self.set_field_value(self.INVESTIGATORNAME__FIELD_NAME.field_name, value)

    def get_InvestigatorName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InvestigatorName' from this record model
        """
        return self.get_field_value(self.INVESTIGATORNAME__FIELD_NAME.field_name)

    def set_Kmer_field(self, value: Optional[str]):
        """
        Set data field with field name 'Kmer' on this record model
        """
        self.set_field_value(self.KMER__FIELD_NAME.field_name, value)

    def get_Kmer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Kmer' from this record model
        """
        return self.get_field_value(self.KMER__FIELD_NAME.field_name)

    def set_MinimumCoverageDepth_field(self, value: Optional[str]):
        """
        Set data field with field name 'MinimumCoverageDepth' on this record model
        """
        self.set_field_value(self.MINIMUMCOVERAGEDEPTH__FIELD_NAME.field_name, value)

    def get_MinimumCoverageDepth_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MinimumCoverageDepth' from this record model
        """
        return self.get_field_value(self.MINIMUMCOVERAGEDEPTH__FIELD_NAME.field_name)

    def set_OutputGenomeVCF_field(self, value: Optional[bool]):
        """
        Set data field with field name 'OutputGenomeVCF' on this record model
        """
        self.set_field_value(self.OUTPUTGENOMEVCF__FIELD_NAME.field_name, value)

    def get_OutputGenomeVCF_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'OutputGenomeVCF' from this record model
        """
        return self.get_field_value(self.OUTPUTGENOMEVCF__FIELD_NAME.field_name)

    def set_PercentTilesToScan_field(self, value: Optional[str]):
        """
        Set data field with field name 'PercentTilesToScan' on this record model
        """
        self.set_field_value(self.PERCENTTILESTOSCAN__FIELD_NAME.field_name, value)

    def get_PercentTilesToScan_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PercentTilesToScan' from this record model
        """
        return self.get_field_value(self.PERCENTTILESTOSCAN__FIELD_NAME.field_name)

    def set_PicardHSmetrics_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PicardHSmetrics' on this record model
        """
        self.set_field_value(self.PICARDHSMETRICS__FIELD_NAME.field_name, value)

    def get_PicardHSmetrics_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PicardHSmetrics' from this record model
        """
        return self.get_field_value(self.PICARDHSMETRICS__FIELD_NAME.field_name)

    def set_QualityScoreTrim_field(self, value: Optional[str]):
        """
        Set data field with field name 'QualityScoreTrim' on this record model
        """
        self.set_field_value(self.QUALITYSCORETRIM__FIELD_NAME.field_name, value)

    def get_QualityScoreTrim_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QualityScoreTrim' from this record model
        """
        return self.get_field_value(self.QUALITYSCORETRIM__FIELD_NAME.field_name)

    def set_ReadType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReadType' on this record model
        """
        self.set_field_value(self.READTYPE__FIELD_NAME.field_name, value)

    def get_ReadType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReadType' from this record model
        """
        return self.get_field_value(self.READTYPE__FIELD_NAME.field_name)

    def set_ReagentCartridgeBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentCartridgeBarcode' on this record model
        """
        self.set_field_value(self.REAGENTCARTRIDGEBARCODE__FIELD_NAME.field_name, value)

    def get_ReagentCartridgeBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentCartridgeBarcode' from this record model
        """
        return self.get_field_value(self.REAGENTCARTRIDGEBARCODE__FIELD_NAME.field_name)

    def set_ReverseComplement_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReverseComplement' on this record model
        """
        self.set_field_value(self.REVERSECOMPLEMENT__FIELD_NAME.field_name, value)

    def get_ReverseComplement_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReverseComplement' from this record model
        """
        return self.get_field_value(self.REVERSECOMPLEMENT__FIELD_NAME.field_name)

    def set_RunDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunDate' on this record model
        """
        self.set_field_value(self.RUNDATE__FIELD_NAME.field_name, value)

    def get_RunDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunDate' from this record model
        """
        return self.get_field_value(self.RUNDATE__FIELD_NAME.field_name)

    def set_StitchReads_field(self, value: Optional[bool]):
        """
        Set data field with field name 'StitchReads' on this record model
        """
        self.set_field_value(self.STITCHREADS__FIELD_NAME.field_name, value)

    def get_StitchReads_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'StitchReads' from this record model
        """
        return self.get_field_value(self.STITCHREADS__FIELD_NAME.field_name)

    def set_TaxonomyFile_field(self, value: Optional[str]):
        """
        Set data field with field name 'TaxonomyFile' on this record model
        """
        self.set_field_value(self.TAXONOMYFILE__FIELD_NAME.field_name, value)

    def get_TaxonomyFile_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TaxonomyFile' from this record model
        """
        return self.get_field_value(self.TAXONOMYFILE__FIELD_NAME.field_name)

    def set_VariantCaller_field(self, value: Optional[str]):
        """
        Set data field with field name 'VariantCaller' on this record model
        """
        self.set_field_value(self.VARIANTCALLER__FIELD_NAME.field_name, value)

    def get_VariantCaller_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VariantCaller' from this record model
        """
        return self.get_field_value(self.VARIANTCALLER__FIELD_NAME.field_name)

    def set_VariantFilterQualityCutoff_field(self, value: Optional[str]):
        """
        Set data field with field name 'VariantFilterQualityCutoff' on this record model
        """
        self.set_field_value(self.VARIANTFILTERQUALITYCUTOFF__FIELD_NAME.field_name, value)

    def get_VariantFilterQualityCutoff_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VariantFilterQualityCutoff' from this record model
        """
        return self.get_field_value(self.VARIANTFILTERQUALITYCUTOFF__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Workflow_field(self, value: Optional[str]):
        """
        Set data field with field name 'Workflow' on this record model
        """
        self.set_field_value(self.WORKFLOW__FIELD_NAME.field_name, value)

    def get_Workflow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Workflow' from this record model
        """
        return self.get_field_value(self.WORKFLOW__FIELD_NAME.field_name)


class IlluminaNextGenConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaNextGenConfig
    Data Type Display Name: Illumina Next-Gen Configuration (Illumina Next-Gen Configurations)
    Fields: MultiplexInstructions, Description, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, RunType, DateCreated, AssociatedProcessName
    Configuration fields required for the Illumina Next-Gen Sequencing request form
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaNextGenConfig'
    DISPLAY_NAME: Final[str] = "Illumina Next-Gen Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina Next-Gen Configurations"
    ASSOCIATEDPROCESSNAME__FIELD_NAME: Final[WrapperField] = WrapperField("AssociatedProcessName", FieldType.STRING, display_name="Associated Process")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    MULTIPLEXINSTRUCTIONS__FIELD_NAME: Final[WrapperField] = WrapperField("MultiplexInstructions", FieldType.SELECTION, display_name="Multiplex Instructions")
    RUNTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("RunType", FieldType.SELECTION, display_name="Run Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AssociatedProcessName_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssociatedProcessName' on this record model
        """
        self.set_field_value(self.ASSOCIATEDPROCESSNAME__FIELD_NAME.field_name, value)

    def get_AssociatedProcessName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssociatedProcessName' from this record model
        """
        return self.get_field_value(self.ASSOCIATEDPROCESSNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_MultiplexInstructions_field(self, value: Optional[str]):
        """
        Set data field with field name 'MultiplexInstructions' on this record model
        """
        self.set_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name, value)

    def get_MultiplexInstructions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MultiplexInstructions' from this record model
        """
        return self.get_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name)

    def set_RunType_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunType' on this record model
        """
        self.set_field_value(self.RUNTYPE__FIELD_NAME.field_name, value)

    def get_RunType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunType' from this record model
        """
        return self.get_field_value(self.RUNTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaNextSeqRunParametersModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaNextSeqRunParameters
    Data Type Display Name: Illumina NextSeq Run Parameters (Illumina NextSeq Run Parameters')
    Fields: CustomReadOnePrimer, ApplicationVersion, SaveFocusImages, RecipeFolder, Read1, BaseSpaceRunMode, Read2, LibraryID, RunNumber, RKitSerialEnteredInBaseSpace, ExperimentName, SectionPerLane, UsesCustomIndexPrimer, UsesCustomPrimer1, SaveScanImages, UsesCustomPrimer2, CreatedBy, Index2Read, CustomReadTwoPrimer, SeqCompletedWithoutErrors, Chemistry, DataRecordName, ReagentKitSerial, Index1Read, ComputerName, SurfaceToScan, RunFolder, PR2BottleSerial, NumTilesPerSwath, DateCreated, InstrumentID, RTAVersion, SupportMultipleSurfacesInUI, NumSwaths, SequencingStarted, AnalysisWorkflowType, VeloxLastModifiedBy, LanePerSection, RunManagementType, SelectiveSave, FocusMethod, OutputFolder, SequencingCompletedOrAborted, ApplicationName, FlowCellSerial, IsPairedEnd, NumLanes, VeloxLastModifiedDate, BaseSpaceRunId, RunID, RunStartDate
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaNextSeqRunParameters'
    DISPLAY_NAME: Final[str] = "Illumina NextSeq Run Parameters"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina NextSeq Run Parameters'"
    ANALYSISWORKFLOWTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("AnalysisWorkflowType", FieldType.STRING, display_name="Analysis Workflow Type")
    APPLICATIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ApplicationName", FieldType.STRING, display_name="Application Name")
    APPLICATIONVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("ApplicationVersion", FieldType.STRING, display_name="Application Version")
    BASESPACERUNID__FIELD_NAME: Final[WrapperField] = WrapperField("BaseSpaceRunId", FieldType.STRING, display_name="BaseSpace Run Id")
    BASESPACERUNMODE__FIELD_NAME: Final[WrapperField] = WrapperField("BaseSpaceRunMode", FieldType.STRING, display_name="BaseSpace Run Mode")
    CHEMISTRY__FIELD_NAME: Final[WrapperField] = WrapperField("Chemistry", FieldType.STRING, display_name="Chemistry")
    COMPUTERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ComputerName", FieldType.STRING, display_name="Computer Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CUSTOMREADONEPRIMER__FIELD_NAME: Final[WrapperField] = WrapperField("CustomReadOnePrimer", FieldType.STRING, display_name="Custom Read One Primer")
    CUSTOMREADTWOPRIMER__FIELD_NAME: Final[WrapperField] = WrapperField("CustomReadTwoPrimer", FieldType.STRING, display_name="Custom Read Two Primer")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPERIMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentName", FieldType.STRING, display_name="Experiment Name")
    FLOWCELLSERIAL__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellSerial", FieldType.STRING, display_name="Flow Cell Serial")
    FOCUSMETHOD__FIELD_NAME: Final[WrapperField] = WrapperField("FocusMethod", FieldType.STRING, display_name="Focus Method")
    INDEX1READ__FIELD_NAME: Final[WrapperField] = WrapperField("Index1Read", FieldType.LONG, display_name="Index 1 Read")
    INDEX2READ__FIELD_NAME: Final[WrapperField] = WrapperField("Index2Read", FieldType.LONG, display_name="Index 2 Read")
    INSTRUMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentID", FieldType.STRING, display_name="Instrument ID")
    ISPAIREDEND__FIELD_NAME: Final[WrapperField] = WrapperField("IsPairedEnd", FieldType.BOOLEAN, display_name="Is Paired End")
    LANEPERSECTION__FIELD_NAME: Final[WrapperField] = WrapperField("LanePerSection", FieldType.LONG, display_name="Lane Per Section")
    LIBRARYID__FIELD_NAME: Final[WrapperField] = WrapperField("LibraryID", FieldType.STRING, display_name="Library ID")
    NUMLANES__FIELD_NAME: Final[WrapperField] = WrapperField("NumLanes", FieldType.LONG, display_name="Number of Lanes")
    NUMSWATHS__FIELD_NAME: Final[WrapperField] = WrapperField("NumSwaths", FieldType.LONG, display_name="Number of Swaths")
    NUMTILESPERSWATH__FIELD_NAME: Final[WrapperField] = WrapperField("NumTilesPerSwath", FieldType.LONG, display_name="Number of Tiles Per Swath")
    OUTPUTFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("OutputFolder", FieldType.STRING, display_name="Output Folder")
    PR2BOTTLESERIAL__FIELD_NAME: Final[WrapperField] = WrapperField("PR2BottleSerial", FieldType.STRING, display_name="PR2 Bottle Serial")
    RKITSERIALENTEREDINBASESPACE__FIELD_NAME: Final[WrapperField] = WrapperField("RKitSerialEnteredInBaseSpace", FieldType.BOOLEAN, display_name="ReagentKit Serial Was Entered In BaseSpace")
    RTAVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("RTAVersion", FieldType.STRING, display_name="RTA Version")
    READ1__FIELD_NAME: Final[WrapperField] = WrapperField("Read1", FieldType.LONG, display_name="Read 1")
    READ2__FIELD_NAME: Final[WrapperField] = WrapperField("Read2", FieldType.LONG, display_name="Read 2")
    REAGENTKITSERIAL__FIELD_NAME: Final[WrapperField] = WrapperField("ReagentKitSerial", FieldType.STRING, display_name="Reagent Kit Serial")
    RECIPEFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("RecipeFolder", FieldType.STRING, display_name="Recipe Folder")
    RUNFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("RunFolder", FieldType.STRING, display_name="Run Folder")
    RUNID__FIELD_NAME: Final[WrapperField] = WrapperField("RunID", FieldType.STRING, display_name="Run ID")
    RUNMANAGEMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("RunManagementType", FieldType.STRING, display_name="Run Management Type")
    RUNNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("RunNumber", FieldType.LONG, display_name="Run Number")
    RUNSTARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RunStartDate", FieldType.DATE, display_name="Run Start Date")
    SAVEFOCUSIMAGES__FIELD_NAME: Final[WrapperField] = WrapperField("SaveFocusImages", FieldType.BOOLEAN, display_name="Save Focus Images")
    SAVESCANIMAGES__FIELD_NAME: Final[WrapperField] = WrapperField("SaveScanImages", FieldType.BOOLEAN, display_name="Save Scan Images")
    SECTIONPERLANE__FIELD_NAME: Final[WrapperField] = WrapperField("SectionPerLane", FieldType.LONG, display_name="Section Per Lane")
    SELECTIVESAVE__FIELD_NAME: Final[WrapperField] = WrapperField("SelectiveSave", FieldType.BOOLEAN, display_name="Selective Save")
    SEQCOMPLETEDWITHOUTERRORS__FIELD_NAME: Final[WrapperField] = WrapperField("SeqCompletedWithoutErrors", FieldType.BOOLEAN, display_name="Sequencing Completed Without Errors")
    SEQUENCINGCOMPLETEDORABORTED__FIELD_NAME: Final[WrapperField] = WrapperField("SequencingCompletedOrAborted", FieldType.BOOLEAN, display_name="Sequencing Completed Or Aborted")
    SEQUENCINGSTARTED__FIELD_NAME: Final[WrapperField] = WrapperField("SequencingStarted", FieldType.BOOLEAN, display_name="Sequencing Started")
    SUPPORTMULTIPLESURFACESINUI__FIELD_NAME: Final[WrapperField] = WrapperField("SupportMultipleSurfacesInUI", FieldType.BOOLEAN, display_name="Support Multiple Surfaces In UI")
    SURFACETOSCAN__FIELD_NAME: Final[WrapperField] = WrapperField("SurfaceToScan", FieldType.STRING, display_name="Surface To Scan")
    USESCUSTOMINDEXPRIMER__FIELD_NAME: Final[WrapperField] = WrapperField("UsesCustomIndexPrimer", FieldType.BOOLEAN, display_name="Uses Custom Index Primer")
    USESCUSTOMPRIMER1__FIELD_NAME: Final[WrapperField] = WrapperField("UsesCustomPrimer1", FieldType.BOOLEAN, display_name="Uses Custom Primer 1")
    USESCUSTOMPRIMER2__FIELD_NAME: Final[WrapperField] = WrapperField("UsesCustomPrimer2", FieldType.BOOLEAN, display_name="Uses Custom Primer 2")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AnalysisWorkflowType_field(self, value: Optional[str]):
        """
        Set data field with field name 'AnalysisWorkflowType' on this record model
        """
        self.set_field_value(self.ANALYSISWORKFLOWTYPE__FIELD_NAME.field_name, value)

    def get_AnalysisWorkflowType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AnalysisWorkflowType' from this record model
        """
        return self.get_field_value(self.ANALYSISWORKFLOWTYPE__FIELD_NAME.field_name)

    def set_ApplicationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationName' on this record model
        """
        self.set_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name, value)

    def get_ApplicationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationName' from this record model
        """
        return self.get_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name)

    def set_ApplicationVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationVersion' on this record model
        """
        self.set_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name, value)

    def get_ApplicationVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationVersion' from this record model
        """
        return self.get_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name)

    def set_BaseSpaceRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaseSpaceRunId' on this record model
        """
        self.set_field_value(self.BASESPACERUNID__FIELD_NAME.field_name, value)

    def get_BaseSpaceRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaseSpaceRunId' from this record model
        """
        return self.get_field_value(self.BASESPACERUNID__FIELD_NAME.field_name)

    def set_BaseSpaceRunMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaseSpaceRunMode' on this record model
        """
        self.set_field_value(self.BASESPACERUNMODE__FIELD_NAME.field_name, value)

    def get_BaseSpaceRunMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaseSpaceRunMode' from this record model
        """
        return self.get_field_value(self.BASESPACERUNMODE__FIELD_NAME.field_name)

    def set_Chemistry_field(self, value: Optional[str]):
        """
        Set data field with field name 'Chemistry' on this record model
        """
        self.set_field_value(self.CHEMISTRY__FIELD_NAME.field_name, value)

    def get_Chemistry_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Chemistry' from this record model
        """
        return self.get_field_value(self.CHEMISTRY__FIELD_NAME.field_name)

    def set_ComputerName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ComputerName' on this record model
        """
        self.set_field_value(self.COMPUTERNAME__FIELD_NAME.field_name, value)

    def get_ComputerName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ComputerName' from this record model
        """
        return self.get_field_value(self.COMPUTERNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomReadOnePrimer_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomReadOnePrimer' on this record model
        """
        self.set_field_value(self.CUSTOMREADONEPRIMER__FIELD_NAME.field_name, value)

    def get_CustomReadOnePrimer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomReadOnePrimer' from this record model
        """
        return self.get_field_value(self.CUSTOMREADONEPRIMER__FIELD_NAME.field_name)

    def set_CustomReadTwoPrimer_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomReadTwoPrimer' on this record model
        """
        self.set_field_value(self.CUSTOMREADTWOPRIMER__FIELD_NAME.field_name, value)

    def get_CustomReadTwoPrimer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomReadTwoPrimer' from this record model
        """
        return self.get_field_value(self.CUSTOMREADTWOPRIMER__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FlowCellSerial_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellSerial' on this record model
        """
        self.set_field_value(self.FLOWCELLSERIAL__FIELD_NAME.field_name, value)

    def get_FlowCellSerial_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellSerial' from this record model
        """
        return self.get_field_value(self.FLOWCELLSERIAL__FIELD_NAME.field_name)

    def set_FocusMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'FocusMethod' on this record model
        """
        self.set_field_value(self.FOCUSMETHOD__FIELD_NAME.field_name, value)

    def get_FocusMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FocusMethod' from this record model
        """
        return self.get_field_value(self.FOCUSMETHOD__FIELD_NAME.field_name)

    def set_Index1Read_field(self, value: Optional[int]):
        """
        Set data field with field name 'Index1Read' on this record model
        """
        self.set_field_value(self.INDEX1READ__FIELD_NAME.field_name, value)

    def get_Index1Read_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Index1Read' from this record model
        """
        return self.get_field_value(self.INDEX1READ__FIELD_NAME.field_name)

    def set_Index2Read_field(self, value: Optional[int]):
        """
        Set data field with field name 'Index2Read' on this record model
        """
        self.set_field_value(self.INDEX2READ__FIELD_NAME.field_name, value)

    def get_Index2Read_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Index2Read' from this record model
        """
        return self.get_field_value(self.INDEX2READ__FIELD_NAME.field_name)

    def set_InstrumentID_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentID' on this record model
        """
        self.set_field_value(self.INSTRUMENTID__FIELD_NAME.field_name, value)

    def get_InstrumentID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentID' from this record model
        """
        return self.get_field_value(self.INSTRUMENTID__FIELD_NAME.field_name)

    def set_IsPairedEnd_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPairedEnd' on this record model
        """
        self.set_field_value(self.ISPAIREDEND__FIELD_NAME.field_name, value)

    def get_IsPairedEnd_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPairedEnd' from this record model
        """
        return self.get_field_value(self.ISPAIREDEND__FIELD_NAME.field_name)

    def set_LanePerSection_field(self, value: Optional[int]):
        """
        Set data field with field name 'LanePerSection' on this record model
        """
        self.set_field_value(self.LANEPERSECTION__FIELD_NAME.field_name, value)

    def get_LanePerSection_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LanePerSection' from this record model
        """
        return self.get_field_value(self.LANEPERSECTION__FIELD_NAME.field_name)

    def set_LibraryID_field(self, value: Optional[str]):
        """
        Set data field with field name 'LibraryID' on this record model
        """
        self.set_field_value(self.LIBRARYID__FIELD_NAME.field_name, value)

    def get_LibraryID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LibraryID' from this record model
        """
        return self.get_field_value(self.LIBRARYID__FIELD_NAME.field_name)

    def set_NumLanes_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumLanes' on this record model
        """
        self.set_field_value(self.NUMLANES__FIELD_NAME.field_name, value)

    def get_NumLanes_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumLanes' from this record model
        """
        return self.get_field_value(self.NUMLANES__FIELD_NAME.field_name)

    def set_NumSwaths_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumSwaths' on this record model
        """
        self.set_field_value(self.NUMSWATHS__FIELD_NAME.field_name, value)

    def get_NumSwaths_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumSwaths' from this record model
        """
        return self.get_field_value(self.NUMSWATHS__FIELD_NAME.field_name)

    def set_NumTilesPerSwath_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumTilesPerSwath' on this record model
        """
        self.set_field_value(self.NUMTILESPERSWATH__FIELD_NAME.field_name, value)

    def get_NumTilesPerSwath_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumTilesPerSwath' from this record model
        """
        return self.get_field_value(self.NUMTILESPERSWATH__FIELD_NAME.field_name)

    def set_OutputFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputFolder' on this record model
        """
        self.set_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name, value)

    def get_OutputFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputFolder' from this record model
        """
        return self.get_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name)

    def set_PR2BottleSerial_field(self, value: Optional[str]):
        """
        Set data field with field name 'PR2BottleSerial' on this record model
        """
        self.set_field_value(self.PR2BOTTLESERIAL__FIELD_NAME.field_name, value)

    def get_PR2BottleSerial_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PR2BottleSerial' from this record model
        """
        return self.get_field_value(self.PR2BOTTLESERIAL__FIELD_NAME.field_name)

    def set_RKitSerialEnteredInBaseSpace_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RKitSerialEnteredInBaseSpace' on this record model
        """
        self.set_field_value(self.RKITSERIALENTEREDINBASESPACE__FIELD_NAME.field_name, value)

    def get_RKitSerialEnteredInBaseSpace_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RKitSerialEnteredInBaseSpace' from this record model
        """
        return self.get_field_value(self.RKITSERIALENTEREDINBASESPACE__FIELD_NAME.field_name)

    def set_RTAVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RTAVersion' on this record model
        """
        self.set_field_value(self.RTAVERSION__FIELD_NAME.field_name, value)

    def get_RTAVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RTAVersion' from this record model
        """
        return self.get_field_value(self.RTAVERSION__FIELD_NAME.field_name)

    def set_Read1_field(self, value: Optional[int]):
        """
        Set data field with field name 'Read1' on this record model
        """
        self.set_field_value(self.READ1__FIELD_NAME.field_name, value)

    def get_Read1_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Read1' from this record model
        """
        return self.get_field_value(self.READ1__FIELD_NAME.field_name)

    def set_Read2_field(self, value: Optional[int]):
        """
        Set data field with field name 'Read2' on this record model
        """
        self.set_field_value(self.READ2__FIELD_NAME.field_name, value)

    def get_Read2_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Read2' from this record model
        """
        return self.get_field_value(self.READ2__FIELD_NAME.field_name)

    def set_ReagentKitSerial_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentKitSerial' on this record model
        """
        self.set_field_value(self.REAGENTKITSERIAL__FIELD_NAME.field_name, value)

    def get_ReagentKitSerial_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentKitSerial' from this record model
        """
        return self.get_field_value(self.REAGENTKITSERIAL__FIELD_NAME.field_name)

    def set_RecipeFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeFolder' on this record model
        """
        self.set_field_value(self.RECIPEFOLDER__FIELD_NAME.field_name, value)

    def get_RecipeFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeFolder' from this record model
        """
        return self.get_field_value(self.RECIPEFOLDER__FIELD_NAME.field_name)

    def set_RunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunFolder' on this record model
        """
        self.set_field_value(self.RUNFOLDER__FIELD_NAME.field_name, value)

    def get_RunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunFolder' from this record model
        """
        return self.get_field_value(self.RUNFOLDER__FIELD_NAME.field_name)

    def set_RunID_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunID' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunID' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_RunManagementType_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunManagementType' on this record model
        """
        self.set_field_value(self.RUNMANAGEMENTTYPE__FIELD_NAME.field_name, value)

    def get_RunManagementType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunManagementType' from this record model
        """
        return self.get_field_value(self.RUNMANAGEMENTTYPE__FIELD_NAME.field_name)

    def set_RunNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunNumber' on this record model
        """
        self.set_field_value(self.RUNNUMBER__FIELD_NAME.field_name, value)

    def get_RunNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunNumber' from this record model
        """
        return self.get_field_value(self.RUNNUMBER__FIELD_NAME.field_name)

    def set_RunStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunStartDate' on this record model
        """
        self.set_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name, value)

    def get_RunStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunStartDate' from this record model
        """
        return self.get_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name)

    def set_SaveFocusImages_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SaveFocusImages' on this record model
        """
        self.set_field_value(self.SAVEFOCUSIMAGES__FIELD_NAME.field_name, value)

    def get_SaveFocusImages_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SaveFocusImages' from this record model
        """
        return self.get_field_value(self.SAVEFOCUSIMAGES__FIELD_NAME.field_name)

    def set_SaveScanImages_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SaveScanImages' on this record model
        """
        self.set_field_value(self.SAVESCANIMAGES__FIELD_NAME.field_name, value)

    def get_SaveScanImages_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SaveScanImages' from this record model
        """
        return self.get_field_value(self.SAVESCANIMAGES__FIELD_NAME.field_name)

    def set_SectionPerLane_field(self, value: Optional[int]):
        """
        Set data field with field name 'SectionPerLane' on this record model
        """
        self.set_field_value(self.SECTIONPERLANE__FIELD_NAME.field_name, value)

    def get_SectionPerLane_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SectionPerLane' from this record model
        """
        return self.get_field_value(self.SECTIONPERLANE__FIELD_NAME.field_name)

    def set_SelectiveSave_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SelectiveSave' on this record model
        """
        self.set_field_value(self.SELECTIVESAVE__FIELD_NAME.field_name, value)

    def get_SelectiveSave_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SelectiveSave' from this record model
        """
        return self.get_field_value(self.SELECTIVESAVE__FIELD_NAME.field_name)

    def set_SeqCompletedWithoutErrors_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SeqCompletedWithoutErrors' on this record model
        """
        self.set_field_value(self.SEQCOMPLETEDWITHOUTERRORS__FIELD_NAME.field_name, value)

    def get_SeqCompletedWithoutErrors_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SeqCompletedWithoutErrors' from this record model
        """
        return self.get_field_value(self.SEQCOMPLETEDWITHOUTERRORS__FIELD_NAME.field_name)

    def set_SequencingCompletedOrAborted_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SequencingCompletedOrAborted' on this record model
        """
        self.set_field_value(self.SEQUENCINGCOMPLETEDORABORTED__FIELD_NAME.field_name, value)

    def get_SequencingCompletedOrAborted_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SequencingCompletedOrAborted' from this record model
        """
        return self.get_field_value(self.SEQUENCINGCOMPLETEDORABORTED__FIELD_NAME.field_name)

    def set_SequencingStarted_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SequencingStarted' on this record model
        """
        self.set_field_value(self.SEQUENCINGSTARTED__FIELD_NAME.field_name, value)

    def get_SequencingStarted_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SequencingStarted' from this record model
        """
        return self.get_field_value(self.SEQUENCINGSTARTED__FIELD_NAME.field_name)

    def set_SupportMultipleSurfacesInUI_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SupportMultipleSurfacesInUI' on this record model
        """
        self.set_field_value(self.SUPPORTMULTIPLESURFACESINUI__FIELD_NAME.field_name, value)

    def get_SupportMultipleSurfacesInUI_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SupportMultipleSurfacesInUI' from this record model
        """
        return self.get_field_value(self.SUPPORTMULTIPLESURFACESINUI__FIELD_NAME.field_name)

    def set_SurfaceToScan_field(self, value: Optional[str]):
        """
        Set data field with field name 'SurfaceToScan' on this record model
        """
        self.set_field_value(self.SURFACETOSCAN__FIELD_NAME.field_name, value)

    def get_SurfaceToScan_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SurfaceToScan' from this record model
        """
        return self.get_field_value(self.SURFACETOSCAN__FIELD_NAME.field_name)

    def set_UsesCustomIndexPrimer_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UsesCustomIndexPrimer' on this record model
        """
        self.set_field_value(self.USESCUSTOMINDEXPRIMER__FIELD_NAME.field_name, value)

    def get_UsesCustomIndexPrimer_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UsesCustomIndexPrimer' from this record model
        """
        return self.get_field_value(self.USESCUSTOMINDEXPRIMER__FIELD_NAME.field_name)

    def set_UsesCustomPrimer1_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UsesCustomPrimer1' on this record model
        """
        self.set_field_value(self.USESCUSTOMPRIMER1__FIELD_NAME.field_name, value)

    def get_UsesCustomPrimer1_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UsesCustomPrimer1' from this record model
        """
        return self.get_field_value(self.USESCUSTOMPRIMER1__FIELD_NAME.field_name)

    def set_UsesCustomPrimer2_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UsesCustomPrimer2' on this record model
        """
        self.set_field_value(self.USESCUSTOMPRIMER2__FIELD_NAME.field_name, value)

    def get_UsesCustomPrimer2_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UsesCustomPrimer2' from this record model
        """
        return self.get_field_value(self.USESCUSTOMPRIMER2__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaNextSeqSSSettingsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaNextSeqSSSettings
    Data Type Display Name: Illumina NextSeq Sample Sheet Settings (Illumina NextSeq Sample Sheet Settings)
    Fields: DateUnix, Description, AdapterTrimmingStringency, CustomRead2PrimerMix, PercentTilesToScan, DateCreated, Adapter, Assay, CustomIndexPrimerMix, ExperimentName, IndexReads, VeloxLastModifiedBy, CyclesRead1, CyclesRead2, CreatedBy, AdapterRead2, InvestigatorName, Workflow, CustomRead1PrimerMix, DataRecordName, ReadType, StitchReads, VeloxLastModifiedDate, ReagentCartridgeBarcode, QualityScoreTrim, FilterOutSingleStrandVariants
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaNextSeqSSSettings'
    DISPLAY_NAME: Final[str] = "Illumina NextSeq Sample Sheet Settings"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina NextSeq Sample Sheet Settings"
    ADAPTER__FIELD_NAME: Final[WrapperField] = WrapperField("Adapter", FieldType.STRING, display_name="Adapter")
    ADAPTERREAD2__FIELD_NAME: Final[WrapperField] = WrapperField("AdapterRead2", FieldType.STRING, display_name="Adapter Read 2")
    ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME: Final[WrapperField] = WrapperField("AdapterTrimmingStringency", FieldType.STRING, display_name="Adapter Trimming Stringency")
    ASSAY__FIELD_NAME: Final[WrapperField] = WrapperField("Assay", FieldType.STRING, display_name="Assay")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CUSTOMINDEXPRIMERMIX__FIELD_NAME: Final[WrapperField] = WrapperField("CustomIndexPrimerMix", FieldType.STRING, display_name="Custom Index Primer Mix")
    CUSTOMREAD1PRIMERMIX__FIELD_NAME: Final[WrapperField] = WrapperField("CustomRead1PrimerMix", FieldType.STRING, display_name="Custom Read 1 Primer Mix")
    CUSTOMREAD2PRIMERMIX__FIELD_NAME: Final[WrapperField] = WrapperField("CustomRead2PrimerMix", FieldType.STRING, display_name="Custom Read 2 Primer Mix")
    CYCLESREAD1__FIELD_NAME: Final[WrapperField] = WrapperField("CyclesRead1", FieldType.INTEGER, display_name="Cycles Read 1")
    CYCLESREAD2__FIELD_NAME: Final[WrapperField] = WrapperField("CyclesRead2", FieldType.INTEGER, display_name="Cycles Read 2")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DATEUNIX__FIELD_NAME: Final[WrapperField] = WrapperField("DateUnix", FieldType.DATE, display_name="Date")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    EXPERIMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentName", FieldType.STRING, display_name="Experiment Name")
    FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME: Final[WrapperField] = WrapperField("FilterOutSingleStrandVariants", FieldType.STRING, display_name="Filter Out Single Strand Variants")
    INDEXREADS__FIELD_NAME: Final[WrapperField] = WrapperField("IndexReads", FieldType.SHORT, display_name="Index Reads")
    INVESTIGATORNAME__FIELD_NAME: Final[WrapperField] = WrapperField("InvestigatorName", FieldType.STRING, display_name="Investigator Name")
    PERCENTTILESTOSCAN__FIELD_NAME: Final[WrapperField] = WrapperField("PercentTilesToScan", FieldType.STRING, display_name="Percent Tiles To Scan")
    QUALITYSCORETRIM__FIELD_NAME: Final[WrapperField] = WrapperField("QualityScoreTrim", FieldType.STRING, display_name="Quality Score Trim")
    READTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ReadType", FieldType.PICKLIST, display_name="Read Type")
    REAGENTCARTRIDGEBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ReagentCartridgeBarcode", FieldType.STRING, display_name="Reagent Kit Barcode")
    STITCHREADS__FIELD_NAME: Final[WrapperField] = WrapperField("StitchReads", FieldType.BOOLEAN, display_name="Stitch Reads")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WORKFLOW__FIELD_NAME: Final[WrapperField] = WrapperField("Workflow", FieldType.STRING, display_name="Workflow")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Adapter_field(self, value: Optional[str]):
        """
        Set data field with field name 'Adapter' on this record model
        """
        self.set_field_value(self.ADAPTER__FIELD_NAME.field_name, value)

    def get_Adapter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Adapter' from this record model
        """
        return self.get_field_value(self.ADAPTER__FIELD_NAME.field_name)

    def set_AdapterRead2_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterRead2' on this record model
        """
        self.set_field_value(self.ADAPTERREAD2__FIELD_NAME.field_name, value)

    def get_AdapterRead2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterRead2' from this record model
        """
        return self.get_field_value(self.ADAPTERREAD2__FIELD_NAME.field_name)

    def set_AdapterTrimmingStringency_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterTrimmingStringency' on this record model
        """
        self.set_field_value(self.ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME.field_name, value)

    def get_AdapterTrimmingStringency_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterTrimmingStringency' from this record model
        """
        return self.get_field_value(self.ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME.field_name)

    def set_Assay_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assay' on this record model
        """
        self.set_field_value(self.ASSAY__FIELD_NAME.field_name, value)

    def get_Assay_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assay' from this record model
        """
        return self.get_field_value(self.ASSAY__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomIndexPrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomIndexPrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMINDEXPRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomIndexPrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomIndexPrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMINDEXPRIMERMIX__FIELD_NAME.field_name)

    def set_CustomRead1PrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead1PrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMREAD1PRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomRead1PrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead1PrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD1PRIMERMIX__FIELD_NAME.field_name)

    def set_CustomRead2PrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead2PrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMREAD2PRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomRead2PrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead2PrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD2PRIMERMIX__FIELD_NAME.field_name)

    def set_CyclesRead1_field(self, value: Optional[int]):
        """
        Set data field with field name 'CyclesRead1' on this record model
        """
        self.set_field_value(self.CYCLESREAD1__FIELD_NAME.field_name, value)

    def get_CyclesRead1_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CyclesRead1' from this record model
        """
        return self.get_field_value(self.CYCLESREAD1__FIELD_NAME.field_name)

    def set_CyclesRead2_field(self, value: Optional[int]):
        """
        Set data field with field name 'CyclesRead2' on this record model
        """
        self.set_field_value(self.CYCLESREAD2__FIELD_NAME.field_name, value)

    def get_CyclesRead2_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CyclesRead2' from this record model
        """
        return self.get_field_value(self.CYCLESREAD2__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateUnix_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateUnix' on this record model
        """
        self.set_field_value(self.DATEUNIX__FIELD_NAME.field_name, value)

    def get_DateUnix_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateUnix' from this record model
        """
        return self.get_field_value(self.DATEUNIX__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FilterOutSingleStrandVariants_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilterOutSingleStrandVariants' on this record model
        """
        self.set_field_value(self.FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME.field_name, value)

    def get_FilterOutSingleStrandVariants_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilterOutSingleStrandVariants' from this record model
        """
        return self.get_field_value(self.FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME.field_name)

    def set_IndexReads_field(self, value: Optional[int]):
        """
        Set data field with field name 'IndexReads' on this record model
        """
        self.set_field_value(self.INDEXREADS__FIELD_NAME.field_name, value)

    def get_IndexReads_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IndexReads' from this record model
        """
        return self.get_field_value(self.INDEXREADS__FIELD_NAME.field_name)

    def set_InvestigatorName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InvestigatorName' on this record model
        """
        self.set_field_value(self.INVESTIGATORNAME__FIELD_NAME.field_name, value)

    def get_InvestigatorName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InvestigatorName' from this record model
        """
        return self.get_field_value(self.INVESTIGATORNAME__FIELD_NAME.field_name)

    def set_PercentTilesToScan_field(self, value: Optional[str]):
        """
        Set data field with field name 'PercentTilesToScan' on this record model
        """
        self.set_field_value(self.PERCENTTILESTOSCAN__FIELD_NAME.field_name, value)

    def get_PercentTilesToScan_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PercentTilesToScan' from this record model
        """
        return self.get_field_value(self.PERCENTTILESTOSCAN__FIELD_NAME.field_name)

    def set_QualityScoreTrim_field(self, value: Optional[str]):
        """
        Set data field with field name 'QualityScoreTrim' on this record model
        """
        self.set_field_value(self.QUALITYSCORETRIM__FIELD_NAME.field_name, value)

    def get_QualityScoreTrim_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QualityScoreTrim' from this record model
        """
        return self.get_field_value(self.QUALITYSCORETRIM__FIELD_NAME.field_name)

    def set_ReadType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReadType' on this record model
        """
        self.set_field_value(self.READTYPE__FIELD_NAME.field_name, value)

    def get_ReadType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReadType' from this record model
        """
        return self.get_field_value(self.READTYPE__FIELD_NAME.field_name)

    def set_ReagentCartridgeBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentCartridgeBarcode' on this record model
        """
        self.set_field_value(self.REAGENTCARTRIDGEBARCODE__FIELD_NAME.field_name, value)

    def get_ReagentCartridgeBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentCartridgeBarcode' from this record model
        """
        return self.get_field_value(self.REAGENTCARTRIDGEBARCODE__FIELD_NAME.field_name)

    def set_StitchReads_field(self, value: Optional[bool]):
        """
        Set data field with field name 'StitchReads' on this record model
        """
        self.set_field_value(self.STITCHREADS__FIELD_NAME.field_name, value)

    def get_StitchReads_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'StitchReads' from this record model
        """
        return self.get_field_value(self.STITCHREADS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Workflow_field(self, value: Optional[str]):
        """
        Set data field with field name 'Workflow' on this record model
        """
        self.set_field_value(self.WORKFLOW__FIELD_NAME.field_name, value)

    def get_Workflow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Workflow' from this record model
        """
        return self.get_field_value(self.WORKFLOW__FIELD_NAME.field_name)


class IlluminaNovaSeqRunParametersModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaNovaSeqRunParameters
    Data Type Display Name: Illumina NovaSeq Run Parameters (Illumina NovaSeq Run Parameters)
    Fields: SbsRssi, ApplicationVersion, BufferPartNumber, FlowCellSupportedModes, LibraryTubeLotNumber, SbsStartDate, LibraryTubeExpirationdate, ClusterRssi, LibraryTubeSupportedModes, RtaVersion, SbsExpirationdate, ClusterStartDate, RunNumber, UseCustomRead1Primer, ExperimentName, SbsNumberOfCyclesRemaining, LibraryTubeRssi, Read2NumberOfCycles, ClusterCycleKit, FlowCellRssi, LibraryTubeSerialBarcode, FlowCellLotNumber, Autocenter, FlowCellPartNumber, IsRehyb, CreatedBy, LibraryTubePartNumber, BufferNumberOfCyclesRemaining, BufferRssi, PlannedIndex2ReadCycles, AttachmentFile, BufferLotNumber, ClusterLotNumber, ClusterNumberOfCyclesRemaining, DataRecordName, ReadType, SbsNumberOfCyclesSupported, UcsVersion, Application, ClusterExpirationdate, IndexRead1NumberOfCycles, ClusterSerialBarcode, OutputRunFolder, FlowCellSerialBarcode, UcsRunId, SbsCycleKit, PlannedRead1Cycles, DateCreated, PreRunFolder, FlowCellMode, Surface, FlowCellStartDate, SbsPartNumber, Side, SbsLotNumber, RecipeFilePath, IndexRead2NumberOfCycles, RtaRawRunFolder, BiDirectionalScanning, InstrumentName, RecipeVersion, VeloxLastModifiedBy, ClusterSupportedModes, BufferSupportedModes, RunId, LibraryTubeStartDate, SbsSerialBarcode, UseCustomIndexRead1Primer, CeMountRunFolder, BufferSerialBarcode, BufferStartDate, FlowCellNumberOfReuseRemaining, FlowCellExpirationdate, SbcRunFolder, SbsSupportedModes, PlannedRead2Cycles, CeLinuxRunFolder, VeloxLastModifiedDate, SendIlluminaHealthData, ClusterPartNumber, PlannedIndex1ReadCycles, PlatformType, Read1NumberOfCycles, BufferExpirationdate, RunStartDate, UseCustomRead2Primer
     <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaNovaSeqRunParameters'
    DISPLAY_NAME: Final[str] = "Illumina NovaSeq Run Parameters"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina NovaSeq Run Parameters"
    APPLICATION__FIELD_NAME: Final[WrapperField] = WrapperField("Application", FieldType.STRING, display_name="Application")
    APPLICATIONVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("ApplicationVersion", FieldType.STRING, display_name="Application Version")
    ATTACHMENTFILE__FIELD_NAME: Final[WrapperField] = WrapperField("AttachmentFile", FieldType.STRING, display_name="Attachment File")
    AUTOCENTER__FIELD_NAME: Final[WrapperField] = WrapperField("Autocenter", FieldType.BOOLEAN, display_name="Autocenter")
    BIDIRECTIONALSCANNING__FIELD_NAME: Final[WrapperField] = WrapperField("BiDirectionalScanning", FieldType.BOOLEAN, display_name="Bi-Directional Scanning")
    BUFFEREXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("BufferExpirationdate", FieldType.DATE, display_name="Buffer Expiration Date")
    BUFFERLOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("BufferLotNumber", FieldType.INTEGER, display_name="Buffer Lot Number")
    BUFFERNUMBEROFCYCLESREMAINING__FIELD_NAME: Final[WrapperField] = WrapperField("BufferNumberOfCyclesRemaining", FieldType.INTEGER, display_name="Buffer Cycles Remaining")
    BUFFERPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("BufferPartNumber", FieldType.INTEGER, display_name="Buffer Part Number")
    BUFFERRSSI__FIELD_NAME: Final[WrapperField] = WrapperField("BufferRssi", FieldType.INTEGER, display_name="Buffer RSSI")
    BUFFERSERIALBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("BufferSerialBarcode", FieldType.STRING, display_name="Buffer Serial Barcode")
    BUFFERSTARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("BufferStartDate", FieldType.DATE, display_name="Buffer Start Date")
    BUFFERSUPPORTEDMODES__FIELD_NAME: Final[WrapperField] = WrapperField("BufferSupportedModes", FieldType.STRING, display_name="Buffer Supported Modes")
    CELINUXRUNFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("CeLinuxRunFolder", FieldType.STRING, display_name="CE Linux Run Folder")
    CEMOUNTRUNFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("CeMountRunFolder", FieldType.STRING, display_name="CE Mount Run Folder")
    CLUSTERCYCLEKIT__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterCycleKit", FieldType.INTEGER, display_name="Cluster Cycle Kit")
    CLUSTEREXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterExpirationdate", FieldType.DATE, display_name="Cluster Expiration Date")
    CLUSTERLOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterLotNumber", FieldType.INTEGER, display_name="Cluster Lot Number")
    CLUSTERNUMBEROFCYCLESREMAINING__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterNumberOfCyclesRemaining", FieldType.INTEGER, display_name="Cluster Cycles Remaining")
    CLUSTERPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterPartNumber", FieldType.STRING, display_name="Cluster Part Number")
    CLUSTERRSSI__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterRssi", FieldType.INTEGER, display_name="Cluster RSSI")
    CLUSTERSERIALBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterSerialBarcode", FieldType.STRING, display_name="Cluster Serial Barcode")
    CLUSTERSTARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterStartDate", FieldType.DATE, display_name="Cluster Start Date")
    CLUSTERSUPPORTEDMODES__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterSupportedModes", FieldType.STRING, display_name="Cluster Supported Modes")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPERIMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentName", FieldType.STRING, display_name="Experiment Name")
    FLOWCELLEXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellExpirationdate", FieldType.DATE, display_name="Flow Cell Expiration date")
    FLOWCELLLOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellLotNumber", FieldType.INTEGER, display_name="Flow Cell Lot Number")
    FLOWCELLMODE__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellMode", FieldType.STRING, display_name="Flow Cell Mode")
    FLOWCELLNUMBEROFREUSEREMAINING__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellNumberOfReuseRemaining", FieldType.INTEGER, display_name="Flow Cell Reuses Remaining")
    FLOWCELLPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellPartNumber", FieldType.STRING, display_name="Flow Cell Part Number")
    FLOWCELLRSSI__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellRssi", FieldType.INTEGER, display_name="Flow Cell RSSI")
    FLOWCELLSERIALBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellSerialBarcode", FieldType.STRING, display_name="Flow Cell Serial Barcode")
    FLOWCELLSTARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellStartDate", FieldType.DATE, display_name="Flow Cell Start Date")
    FLOWCELLSUPPORTEDMODES__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellSupportedModes", FieldType.STRING, display_name="Flow Cell Supported Modes")
    INDEXREAD1NUMBEROFCYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("IndexRead1NumberOfCycles", FieldType.INTEGER, display_name="Index Read 1 Number Of Cycles")
    INDEXREAD2NUMBEROFCYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("IndexRead2NumberOfCycles", FieldType.INTEGER, display_name="Index Read 2 Number Of Cycles")
    INSTRUMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentName", FieldType.STRING, display_name="Instrument Name")
    ISREHYB__FIELD_NAME: Final[WrapperField] = WrapperField("IsRehyb", FieldType.BOOLEAN, display_name="Rehyb")
    LIBRARYTUBEEXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("LibraryTubeExpirationdate", FieldType.DATE, display_name="Library Tube Expiration Date")
    LIBRARYTUBELOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LibraryTubeLotNumber", FieldType.INTEGER, display_name="Library Tube Lot Number")
    LIBRARYTUBEPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LibraryTubePartNumber", FieldType.INTEGER, display_name="Library Tube Part Number")
    LIBRARYTUBERSSI__FIELD_NAME: Final[WrapperField] = WrapperField("LibraryTubeRssi", FieldType.INTEGER, display_name="Library Tube RSSI")
    LIBRARYTUBESERIALBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("LibraryTubeSerialBarcode", FieldType.STRING, display_name="Library Tube Serial Barcode")
    LIBRARYTUBESTARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("LibraryTubeStartDate", FieldType.DATE, display_name="Library Tube Start Date")
    LIBRARYTUBESUPPORTEDMODES__FIELD_NAME: Final[WrapperField] = WrapperField("LibraryTubeSupportedModes", FieldType.STRING, display_name="Library Tube Supported Modes")
    OUTPUTRUNFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("OutputRunFolder", FieldType.STRING, display_name="Output Run Folder")
    PLANNEDINDEX1READCYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("PlannedIndex1ReadCycles", FieldType.INTEGER, display_name="Planned Index 1 Read Cycles")
    PLANNEDINDEX2READCYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("PlannedIndex2ReadCycles", FieldType.INTEGER, display_name="Planned Index 2 Read Cycles")
    PLANNEDREAD1CYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("PlannedRead1Cycles", FieldType.INTEGER, display_name="Planned Read 1 Number Of Cycles")
    PLANNEDREAD2CYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("PlannedRead2Cycles", FieldType.INTEGER, display_name="Planned Read 2 Number Of Cycles")
    PLATFORMTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("PlatformType", FieldType.STRING, display_name="Platform Type")
    PRERUNFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("PreRunFolder", FieldType.STRING, display_name="Pre Run Folder")
    READ1NUMBEROFCYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("Read1NumberOfCycles", FieldType.INTEGER, display_name="Read 1 Number Of Cycles")
    READ2NUMBEROFCYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("Read2NumberOfCycles", FieldType.INTEGER, display_name="Read 2 Number Of Cycles")
    READTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ReadType", FieldType.STRING, display_name="Read Type")
    RECIPEFILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("RecipeFilePath", FieldType.STRING, display_name="Recipe File Path")
    RECIPEVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("RecipeVersion", FieldType.STRING, display_name="Recipe Version")
    RTARAWRUNFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("RtaRawRunFolder", FieldType.STRING, display_name="RTA Raw Run Folder")
    RTAVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("RtaVersion", FieldType.STRING, display_name="RTA Version")
    RUNID__FIELD_NAME: Final[WrapperField] = WrapperField("RunId", FieldType.STRING, display_name="Run ID")
    RUNNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("RunNumber", FieldType.INTEGER, display_name="Run Number")
    RUNSTARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RunStartDate", FieldType.STRING, display_name="Run Start Date")
    SBCRUNFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("SbcRunFolder", FieldType.STRING, display_name="SBC Run Folder")
    SBSCYCLEKIT__FIELD_NAME: Final[WrapperField] = WrapperField("SbsCycleKit", FieldType.INTEGER, display_name="SBS Cycle Kit")
    SBSEXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SbsExpirationdate", FieldType.DATE, display_name="SBS Expiration Date")
    SBSLOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("SbsLotNumber", FieldType.INTEGER, display_name="SBS Lot Number")
    SBSNUMBEROFCYCLESREMAINING__FIELD_NAME: Final[WrapperField] = WrapperField("SbsNumberOfCyclesRemaining", FieldType.INTEGER, display_name="SBS Cycles Remaining")
    SBSNUMBEROFCYCLESSUPPORTED__FIELD_NAME: Final[WrapperField] = WrapperField("SbsNumberOfCyclesSupported", FieldType.INTEGER, display_name="SBS Cycles Supported")
    SBSPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("SbsPartNumber", FieldType.STRING, display_name="SBS Part Number")
    SBSRSSI__FIELD_NAME: Final[WrapperField] = WrapperField("SbsRssi", FieldType.INTEGER, display_name="SBS RSSI")
    SBSSERIALBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("SbsSerialBarcode", FieldType.STRING, display_name="SBS Serial Barcode")
    SBSSTARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SbsStartDate", FieldType.DATE, display_name="SBS Start Date")
    SBSSUPPORTEDMODES__FIELD_NAME: Final[WrapperField] = WrapperField("SbsSupportedModes", FieldType.STRING, display_name="SBS Supported Modes")
    SENDILLUMINAHEALTHDATA__FIELD_NAME: Final[WrapperField] = WrapperField("SendIlluminaHealthData", FieldType.BOOLEAN, display_name="Send Illumina Health Data")
    SIDE__FIELD_NAME: Final[WrapperField] = WrapperField("Side", FieldType.STRING, display_name="Side")
    SURFACE__FIELD_NAME: Final[WrapperField] = WrapperField("Surface", FieldType.STRING, display_name="Surface")
    UCSRUNID__FIELD_NAME: Final[WrapperField] = WrapperField("UcsRunId", FieldType.STRING, display_name="UCS Run ID")
    UCSVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("UcsVersion", FieldType.STRING, display_name="UCS Version")
    USECUSTOMINDEXREAD1PRIMER__FIELD_NAME: Final[WrapperField] = WrapperField("UseCustomIndexRead1Primer", FieldType.BOOLEAN, display_name="Use Custom Index Read 1 Primer")
    USECUSTOMREAD1PRIMER__FIELD_NAME: Final[WrapperField] = WrapperField("UseCustomRead1Primer", FieldType.BOOLEAN, display_name="Use Custom Read 1 Primer")
    USECUSTOMREAD2PRIMER__FIELD_NAME: Final[WrapperField] = WrapperField("UseCustomRead2Primer", FieldType.BOOLEAN, display_name="Use Custom Read 2 Primer")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Application_field(self, value: Optional[str]):
        """
        Set data field with field name 'Application' on this record model
        """
        self.set_field_value(self.APPLICATION__FIELD_NAME.field_name, value)

    def get_Application_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Application' from this record model
        """
        return self.get_field_value(self.APPLICATION__FIELD_NAME.field_name)

    def set_ApplicationVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationVersion' on this record model
        """
        self.set_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name, value)

    def get_ApplicationVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationVersion' from this record model
        """
        return self.get_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name)

    def set_AttachmentFile_field(self, value: Optional[str]):
        """
        Set data field with field name 'AttachmentFile' on this record model
        """
        self.set_field_value(self.ATTACHMENTFILE__FIELD_NAME.field_name, value)

    def get_AttachmentFile_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AttachmentFile' from this record model
        """
        return self.get_field_value(self.ATTACHMENTFILE__FIELD_NAME.field_name)

    def set_Autocenter_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Autocenter' on this record model
        """
        self.set_field_value(self.AUTOCENTER__FIELD_NAME.field_name, value)

    def get_Autocenter_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Autocenter' from this record model
        """
        return self.get_field_value(self.AUTOCENTER__FIELD_NAME.field_name)

    def set_BiDirectionalScanning_field(self, value: Optional[bool]):
        """
        Set data field with field name 'BiDirectionalScanning' on this record model
        """
        self.set_field_value(self.BIDIRECTIONALSCANNING__FIELD_NAME.field_name, value)

    def get_BiDirectionalScanning_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'BiDirectionalScanning' from this record model
        """
        return self.get_field_value(self.BIDIRECTIONALSCANNING__FIELD_NAME.field_name)

    def set_BufferExpirationdate_field(self, value: Optional[int]):
        """
        Set data field with field name 'BufferExpirationdate' on this record model
        """
        self.set_field_value(self.BUFFEREXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_BufferExpirationdate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BufferExpirationdate' from this record model
        """
        return self.get_field_value(self.BUFFEREXPIRATIONDATE__FIELD_NAME.field_name)

    def set_BufferLotNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'BufferLotNumber' on this record model
        """
        self.set_field_value(self.BUFFERLOTNUMBER__FIELD_NAME.field_name, value)

    def get_BufferLotNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BufferLotNumber' from this record model
        """
        return self.get_field_value(self.BUFFERLOTNUMBER__FIELD_NAME.field_name)

    def set_BufferNumberOfCyclesRemaining_field(self, value: Optional[int]):
        """
        Set data field with field name 'BufferNumberOfCyclesRemaining' on this record model
        """
        self.set_field_value(self.BUFFERNUMBEROFCYCLESREMAINING__FIELD_NAME.field_name, value)

    def get_BufferNumberOfCyclesRemaining_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BufferNumberOfCyclesRemaining' from this record model
        """
        return self.get_field_value(self.BUFFERNUMBEROFCYCLESREMAINING__FIELD_NAME.field_name)

    def set_BufferPartNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'BufferPartNumber' on this record model
        """
        self.set_field_value(self.BUFFERPARTNUMBER__FIELD_NAME.field_name, value)

    def get_BufferPartNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BufferPartNumber' from this record model
        """
        return self.get_field_value(self.BUFFERPARTNUMBER__FIELD_NAME.field_name)

    def set_BufferRssi_field(self, value: Optional[int]):
        """
        Set data field with field name 'BufferRssi' on this record model
        """
        self.set_field_value(self.BUFFERRSSI__FIELD_NAME.field_name, value)

    def get_BufferRssi_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BufferRssi' from this record model
        """
        return self.get_field_value(self.BUFFERRSSI__FIELD_NAME.field_name)

    def set_BufferSerialBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'BufferSerialBarcode' on this record model
        """
        self.set_field_value(self.BUFFERSERIALBARCODE__FIELD_NAME.field_name, value)

    def get_BufferSerialBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BufferSerialBarcode' from this record model
        """
        return self.get_field_value(self.BUFFERSERIALBARCODE__FIELD_NAME.field_name)

    def set_BufferStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'BufferStartDate' on this record model
        """
        self.set_field_value(self.BUFFERSTARTDATE__FIELD_NAME.field_name, value)

    def get_BufferStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BufferStartDate' from this record model
        """
        return self.get_field_value(self.BUFFERSTARTDATE__FIELD_NAME.field_name)

    def set_BufferSupportedModes_field(self, value: Optional[str]):
        """
        Set data field with field name 'BufferSupportedModes' on this record model
        """
        self.set_field_value(self.BUFFERSUPPORTEDMODES__FIELD_NAME.field_name, value)

    def get_BufferSupportedModes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BufferSupportedModes' from this record model
        """
        return self.get_field_value(self.BUFFERSUPPORTEDMODES__FIELD_NAME.field_name)

    def set_CeLinuxRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'CeLinuxRunFolder' on this record model
        """
        self.set_field_value(self.CELINUXRUNFOLDER__FIELD_NAME.field_name, value)

    def get_CeLinuxRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CeLinuxRunFolder' from this record model
        """
        return self.get_field_value(self.CELINUXRUNFOLDER__FIELD_NAME.field_name)

    def set_CeMountRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'CeMountRunFolder' on this record model
        """
        self.set_field_value(self.CEMOUNTRUNFOLDER__FIELD_NAME.field_name, value)

    def get_CeMountRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CeMountRunFolder' from this record model
        """
        return self.get_field_value(self.CEMOUNTRUNFOLDER__FIELD_NAME.field_name)

    def set_ClusterCycleKit_field(self, value: Optional[int]):
        """
        Set data field with field name 'ClusterCycleKit' on this record model
        """
        self.set_field_value(self.CLUSTERCYCLEKIT__FIELD_NAME.field_name, value)

    def get_ClusterCycleKit_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ClusterCycleKit' from this record model
        """
        return self.get_field_value(self.CLUSTERCYCLEKIT__FIELD_NAME.field_name)

    def set_ClusterExpirationdate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ClusterExpirationdate' on this record model
        """
        self.set_field_value(self.CLUSTEREXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ClusterExpirationdate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ClusterExpirationdate' from this record model
        """
        return self.get_field_value(self.CLUSTEREXPIRATIONDATE__FIELD_NAME.field_name)

    def set_ClusterLotNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ClusterLotNumber' on this record model
        """
        self.set_field_value(self.CLUSTERLOTNUMBER__FIELD_NAME.field_name, value)

    def get_ClusterLotNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ClusterLotNumber' from this record model
        """
        return self.get_field_value(self.CLUSTERLOTNUMBER__FIELD_NAME.field_name)

    def set_ClusterNumberOfCyclesRemaining_field(self, value: Optional[int]):
        """
        Set data field with field name 'ClusterNumberOfCyclesRemaining' on this record model
        """
        self.set_field_value(self.CLUSTERNUMBEROFCYCLESREMAINING__FIELD_NAME.field_name, value)

    def get_ClusterNumberOfCyclesRemaining_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ClusterNumberOfCyclesRemaining' from this record model
        """
        return self.get_field_value(self.CLUSTERNUMBEROFCYCLESREMAINING__FIELD_NAME.field_name)

    def set_ClusterPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ClusterPartNumber' on this record model
        """
        self.set_field_value(self.CLUSTERPARTNUMBER__FIELD_NAME.field_name, value)

    def get_ClusterPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ClusterPartNumber' from this record model
        """
        return self.get_field_value(self.CLUSTERPARTNUMBER__FIELD_NAME.field_name)

    def set_ClusterRssi_field(self, value: Optional[int]):
        """
        Set data field with field name 'ClusterRssi' on this record model
        """
        self.set_field_value(self.CLUSTERRSSI__FIELD_NAME.field_name, value)

    def get_ClusterRssi_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ClusterRssi' from this record model
        """
        return self.get_field_value(self.CLUSTERRSSI__FIELD_NAME.field_name)

    def set_ClusterSerialBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ClusterSerialBarcode' on this record model
        """
        self.set_field_value(self.CLUSTERSERIALBARCODE__FIELD_NAME.field_name, value)

    def get_ClusterSerialBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ClusterSerialBarcode' from this record model
        """
        return self.get_field_value(self.CLUSTERSERIALBARCODE__FIELD_NAME.field_name)

    def set_ClusterStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ClusterStartDate' on this record model
        """
        self.set_field_value(self.CLUSTERSTARTDATE__FIELD_NAME.field_name, value)

    def get_ClusterStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ClusterStartDate' from this record model
        """
        return self.get_field_value(self.CLUSTERSTARTDATE__FIELD_NAME.field_name)

    def set_ClusterSupportedModes_field(self, value: Optional[str]):
        """
        Set data field with field name 'ClusterSupportedModes' on this record model
        """
        self.set_field_value(self.CLUSTERSUPPORTEDMODES__FIELD_NAME.field_name, value)

    def get_ClusterSupportedModes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ClusterSupportedModes' from this record model
        """
        return self.get_field_value(self.CLUSTERSUPPORTEDMODES__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FlowCellExpirationdate_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowCellExpirationdate' on this record model
        """
        self.set_field_value(self.FLOWCELLEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_FlowCellExpirationdate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowCellExpirationdate' from this record model
        """
        return self.get_field_value(self.FLOWCELLEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_FlowCellLotNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowCellLotNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLLOTNUMBER__FIELD_NAME.field_name, value)

    def get_FlowCellLotNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowCellLotNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLLOTNUMBER__FIELD_NAME.field_name)

    def set_FlowCellMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellMode' on this record model
        """
        self.set_field_value(self.FLOWCELLMODE__FIELD_NAME.field_name, value)

    def get_FlowCellMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellMode' from this record model
        """
        return self.get_field_value(self.FLOWCELLMODE__FIELD_NAME.field_name)

    def set_FlowCellNumberOfReuseRemaining_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowCellNumberOfReuseRemaining' on this record model
        """
        self.set_field_value(self.FLOWCELLNUMBEROFREUSEREMAINING__FIELD_NAME.field_name, value)

    def get_FlowCellNumberOfReuseRemaining_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowCellNumberOfReuseRemaining' from this record model
        """
        return self.get_field_value(self.FLOWCELLNUMBEROFREUSEREMAINING__FIELD_NAME.field_name)

    def set_FlowCellPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellPartNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLPARTNUMBER__FIELD_NAME.field_name, value)

    def get_FlowCellPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellPartNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLPARTNUMBER__FIELD_NAME.field_name)

    def set_FlowCellRssi_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowCellRssi' on this record model
        """
        self.set_field_value(self.FLOWCELLRSSI__FIELD_NAME.field_name, value)

    def get_FlowCellRssi_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowCellRssi' from this record model
        """
        return self.get_field_value(self.FLOWCELLRSSI__FIELD_NAME.field_name)

    def set_FlowCellSerialBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellSerialBarcode' on this record model
        """
        self.set_field_value(self.FLOWCELLSERIALBARCODE__FIELD_NAME.field_name, value)

    def get_FlowCellSerialBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellSerialBarcode' from this record model
        """
        return self.get_field_value(self.FLOWCELLSERIALBARCODE__FIELD_NAME.field_name)

    def set_FlowCellStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowCellStartDate' on this record model
        """
        self.set_field_value(self.FLOWCELLSTARTDATE__FIELD_NAME.field_name, value)

    def get_FlowCellStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowCellStartDate' from this record model
        """
        return self.get_field_value(self.FLOWCELLSTARTDATE__FIELD_NAME.field_name)

    def set_FlowCellSupportedModes_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellSupportedModes' on this record model
        """
        self.set_field_value(self.FLOWCELLSUPPORTEDMODES__FIELD_NAME.field_name, value)

    def get_FlowCellSupportedModes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellSupportedModes' from this record model
        """
        return self.get_field_value(self.FLOWCELLSUPPORTEDMODES__FIELD_NAME.field_name)

    def set_IndexRead1NumberOfCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'IndexRead1NumberOfCycles' on this record model
        """
        self.set_field_value(self.INDEXREAD1NUMBEROFCYCLES__FIELD_NAME.field_name, value)

    def get_IndexRead1NumberOfCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IndexRead1NumberOfCycles' from this record model
        """
        return self.get_field_value(self.INDEXREAD1NUMBEROFCYCLES__FIELD_NAME.field_name)

    def set_IndexRead2NumberOfCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'IndexRead2NumberOfCycles' on this record model
        """
        self.set_field_value(self.INDEXREAD2NUMBEROFCYCLES__FIELD_NAME.field_name, value)

    def get_IndexRead2NumberOfCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IndexRead2NumberOfCycles' from this record model
        """
        return self.get_field_value(self.INDEXREAD2NUMBEROFCYCLES__FIELD_NAME.field_name)

    def set_InstrumentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentName' on this record model
        """
        self.set_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name, value)

    def get_InstrumentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentName' from this record model
        """
        return self.get_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name)

    def set_IsRehyb_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsRehyb' on this record model
        """
        self.set_field_value(self.ISREHYB__FIELD_NAME.field_name, value)

    def get_IsRehyb_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsRehyb' from this record model
        """
        return self.get_field_value(self.ISREHYB__FIELD_NAME.field_name)

    def set_LibraryTubeExpirationdate_field(self, value: Optional[int]):
        """
        Set data field with field name 'LibraryTubeExpirationdate' on this record model
        """
        self.set_field_value(self.LIBRARYTUBEEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_LibraryTubeExpirationdate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LibraryTubeExpirationdate' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBEEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_LibraryTubeLotNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'LibraryTubeLotNumber' on this record model
        """
        self.set_field_value(self.LIBRARYTUBELOTNUMBER__FIELD_NAME.field_name, value)

    def get_LibraryTubeLotNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LibraryTubeLotNumber' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBELOTNUMBER__FIELD_NAME.field_name)

    def set_LibraryTubePartNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'LibraryTubePartNumber' on this record model
        """
        self.set_field_value(self.LIBRARYTUBEPARTNUMBER__FIELD_NAME.field_name, value)

    def get_LibraryTubePartNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LibraryTubePartNumber' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBEPARTNUMBER__FIELD_NAME.field_name)

    def set_LibraryTubeRssi_field(self, value: Optional[int]):
        """
        Set data field with field name 'LibraryTubeRssi' on this record model
        """
        self.set_field_value(self.LIBRARYTUBERSSI__FIELD_NAME.field_name, value)

    def get_LibraryTubeRssi_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LibraryTubeRssi' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBERSSI__FIELD_NAME.field_name)

    def set_LibraryTubeSerialBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'LibraryTubeSerialBarcode' on this record model
        """
        self.set_field_value(self.LIBRARYTUBESERIALBARCODE__FIELD_NAME.field_name, value)

    def get_LibraryTubeSerialBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LibraryTubeSerialBarcode' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBESERIALBARCODE__FIELD_NAME.field_name)

    def set_LibraryTubeStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'LibraryTubeStartDate' on this record model
        """
        self.set_field_value(self.LIBRARYTUBESTARTDATE__FIELD_NAME.field_name, value)

    def get_LibraryTubeStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LibraryTubeStartDate' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBESTARTDATE__FIELD_NAME.field_name)

    def set_LibraryTubeSupportedModes_field(self, value: Optional[str]):
        """
        Set data field with field name 'LibraryTubeSupportedModes' on this record model
        """
        self.set_field_value(self.LIBRARYTUBESUPPORTEDMODES__FIELD_NAME.field_name, value)

    def get_LibraryTubeSupportedModes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LibraryTubeSupportedModes' from this record model
        """
        return self.get_field_value(self.LIBRARYTUBESUPPORTEDMODES__FIELD_NAME.field_name)

    def set_OutputRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputRunFolder' on this record model
        """
        self.set_field_value(self.OUTPUTRUNFOLDER__FIELD_NAME.field_name, value)

    def get_OutputRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputRunFolder' from this record model
        """
        return self.get_field_value(self.OUTPUTRUNFOLDER__FIELD_NAME.field_name)

    def set_PlannedIndex1ReadCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedIndex1ReadCycles' on this record model
        """
        self.set_field_value(self.PLANNEDINDEX1READCYCLES__FIELD_NAME.field_name, value)

    def get_PlannedIndex1ReadCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedIndex1ReadCycles' from this record model
        """
        return self.get_field_value(self.PLANNEDINDEX1READCYCLES__FIELD_NAME.field_name)

    def set_PlannedIndex2ReadCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedIndex2ReadCycles' on this record model
        """
        self.set_field_value(self.PLANNEDINDEX2READCYCLES__FIELD_NAME.field_name, value)

    def get_PlannedIndex2ReadCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedIndex2ReadCycles' from this record model
        """
        return self.get_field_value(self.PLANNEDINDEX2READCYCLES__FIELD_NAME.field_name)

    def set_PlannedRead1Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedRead1Cycles' on this record model
        """
        self.set_field_value(self.PLANNEDREAD1CYCLES__FIELD_NAME.field_name, value)

    def get_PlannedRead1Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedRead1Cycles' from this record model
        """
        return self.get_field_value(self.PLANNEDREAD1CYCLES__FIELD_NAME.field_name)

    def set_PlannedRead2Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedRead2Cycles' on this record model
        """
        self.set_field_value(self.PLANNEDREAD2CYCLES__FIELD_NAME.field_name, value)

    def get_PlannedRead2Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedRead2Cycles' from this record model
        """
        return self.get_field_value(self.PLANNEDREAD2CYCLES__FIELD_NAME.field_name)

    def set_PlatformType_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlatformType' on this record model
        """
        self.set_field_value(self.PLATFORMTYPE__FIELD_NAME.field_name, value)

    def get_PlatformType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlatformType' from this record model
        """
        return self.get_field_value(self.PLATFORMTYPE__FIELD_NAME.field_name)

    def set_PreRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'PreRunFolder' on this record model
        """
        self.set_field_value(self.PRERUNFOLDER__FIELD_NAME.field_name, value)

    def get_PreRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PreRunFolder' from this record model
        """
        return self.get_field_value(self.PRERUNFOLDER__FIELD_NAME.field_name)

    def set_Read1NumberOfCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'Read1NumberOfCycles' on this record model
        """
        self.set_field_value(self.READ1NUMBEROFCYCLES__FIELD_NAME.field_name, value)

    def get_Read1NumberOfCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Read1NumberOfCycles' from this record model
        """
        return self.get_field_value(self.READ1NUMBEROFCYCLES__FIELD_NAME.field_name)

    def set_Read2NumberOfCycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'Read2NumberOfCycles' on this record model
        """
        self.set_field_value(self.READ2NUMBEROFCYCLES__FIELD_NAME.field_name, value)

    def get_Read2NumberOfCycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Read2NumberOfCycles' from this record model
        """
        return self.get_field_value(self.READ2NUMBEROFCYCLES__FIELD_NAME.field_name)

    def set_ReadType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReadType' on this record model
        """
        self.set_field_value(self.READTYPE__FIELD_NAME.field_name, value)

    def get_ReadType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReadType' from this record model
        """
        return self.get_field_value(self.READTYPE__FIELD_NAME.field_name)

    def set_RecipeFilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeFilePath' on this record model
        """
        self.set_field_value(self.RECIPEFILEPATH__FIELD_NAME.field_name, value)

    def get_RecipeFilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeFilePath' from this record model
        """
        return self.get_field_value(self.RECIPEFILEPATH__FIELD_NAME.field_name)

    def set_RecipeVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeVersion' on this record model
        """
        self.set_field_value(self.RECIPEVERSION__FIELD_NAME.field_name, value)

    def get_RecipeVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeVersion' from this record model
        """
        return self.get_field_value(self.RECIPEVERSION__FIELD_NAME.field_name)

    def set_RtaRawRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'RtaRawRunFolder' on this record model
        """
        self.set_field_value(self.RTARAWRUNFOLDER__FIELD_NAME.field_name, value)

    def get_RtaRawRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RtaRawRunFolder' from this record model
        """
        return self.get_field_value(self.RTARAWRUNFOLDER__FIELD_NAME.field_name)

    def set_RtaVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RtaVersion' on this record model
        """
        self.set_field_value(self.RTAVERSION__FIELD_NAME.field_name, value)

    def get_RtaVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RtaVersion' from this record model
        """
        return self.get_field_value(self.RTAVERSION__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_RunNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunNumber' on this record model
        """
        self.set_field_value(self.RUNNUMBER__FIELD_NAME.field_name, value)

    def get_RunNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunNumber' from this record model
        """
        return self.get_field_value(self.RUNNUMBER__FIELD_NAME.field_name)

    def set_RunStartDate_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunStartDate' on this record model
        """
        self.set_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name, value)

    def get_RunStartDate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunStartDate' from this record model
        """
        return self.get_field_value(self.RUNSTARTDATE__FIELD_NAME.field_name)

    def set_SbcRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'SbcRunFolder' on this record model
        """
        self.set_field_value(self.SBCRUNFOLDER__FIELD_NAME.field_name, value)

    def get_SbcRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SbcRunFolder' from this record model
        """
        return self.get_field_value(self.SBCRUNFOLDER__FIELD_NAME.field_name)

    def set_SbsCycleKit_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsCycleKit' on this record model
        """
        self.set_field_value(self.SBSCYCLEKIT__FIELD_NAME.field_name, value)

    def get_SbsCycleKit_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsCycleKit' from this record model
        """
        return self.get_field_value(self.SBSCYCLEKIT__FIELD_NAME.field_name)

    def set_SbsExpirationdate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsExpirationdate' on this record model
        """
        self.set_field_value(self.SBSEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_SbsExpirationdate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsExpirationdate' from this record model
        """
        return self.get_field_value(self.SBSEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_SbsLotNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsLotNumber' on this record model
        """
        self.set_field_value(self.SBSLOTNUMBER__FIELD_NAME.field_name, value)

    def get_SbsLotNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsLotNumber' from this record model
        """
        return self.get_field_value(self.SBSLOTNUMBER__FIELD_NAME.field_name)

    def set_SbsNumberOfCyclesRemaining_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsNumberOfCyclesRemaining' on this record model
        """
        self.set_field_value(self.SBSNUMBEROFCYCLESREMAINING__FIELD_NAME.field_name, value)

    def get_SbsNumberOfCyclesRemaining_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsNumberOfCyclesRemaining' from this record model
        """
        return self.get_field_value(self.SBSNUMBEROFCYCLESREMAINING__FIELD_NAME.field_name)

    def set_SbsNumberOfCyclesSupported_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsNumberOfCyclesSupported' on this record model
        """
        self.set_field_value(self.SBSNUMBEROFCYCLESSUPPORTED__FIELD_NAME.field_name, value)

    def get_SbsNumberOfCyclesSupported_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsNumberOfCyclesSupported' from this record model
        """
        return self.get_field_value(self.SBSNUMBEROFCYCLESSUPPORTED__FIELD_NAME.field_name)

    def set_SbsPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'SbsPartNumber' on this record model
        """
        self.set_field_value(self.SBSPARTNUMBER__FIELD_NAME.field_name, value)

    def get_SbsPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SbsPartNumber' from this record model
        """
        return self.get_field_value(self.SBSPARTNUMBER__FIELD_NAME.field_name)

    def set_SbsRssi_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsRssi' on this record model
        """
        self.set_field_value(self.SBSRSSI__FIELD_NAME.field_name, value)

    def get_SbsRssi_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsRssi' from this record model
        """
        return self.get_field_value(self.SBSRSSI__FIELD_NAME.field_name)

    def set_SbsSerialBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SbsSerialBarcode' on this record model
        """
        self.set_field_value(self.SBSSERIALBARCODE__FIELD_NAME.field_name, value)

    def get_SbsSerialBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SbsSerialBarcode' from this record model
        """
        return self.get_field_value(self.SBSSERIALBARCODE__FIELD_NAME.field_name)

    def set_SbsStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SbsStartDate' on this record model
        """
        self.set_field_value(self.SBSSTARTDATE__FIELD_NAME.field_name, value)

    def get_SbsStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SbsStartDate' from this record model
        """
        return self.get_field_value(self.SBSSTARTDATE__FIELD_NAME.field_name)

    def set_SbsSupportedModes_field(self, value: Optional[str]):
        """
        Set data field with field name 'SbsSupportedModes' on this record model
        """
        self.set_field_value(self.SBSSUPPORTEDMODES__FIELD_NAME.field_name, value)

    def get_SbsSupportedModes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SbsSupportedModes' from this record model
        """
        return self.get_field_value(self.SBSSUPPORTEDMODES__FIELD_NAME.field_name)

    def set_SendIlluminaHealthData_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SendIlluminaHealthData' on this record model
        """
        self.set_field_value(self.SENDILLUMINAHEALTHDATA__FIELD_NAME.field_name, value)

    def get_SendIlluminaHealthData_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SendIlluminaHealthData' from this record model
        """
        return self.get_field_value(self.SENDILLUMINAHEALTHDATA__FIELD_NAME.field_name)

    def set_Side_field(self, value: Optional[str]):
        """
        Set data field with field name 'Side' on this record model
        """
        self.set_field_value(self.SIDE__FIELD_NAME.field_name, value)

    def get_Side_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Side' from this record model
        """
        return self.get_field_value(self.SIDE__FIELD_NAME.field_name)

    def set_Surface_field(self, value: Optional[str]):
        """
        Set data field with field name 'Surface' on this record model
        """
        self.set_field_value(self.SURFACE__FIELD_NAME.field_name, value)

    def get_Surface_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Surface' from this record model
        """
        return self.get_field_value(self.SURFACE__FIELD_NAME.field_name)

    def set_UcsRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'UcsRunId' on this record model
        """
        self.set_field_value(self.UCSRUNID__FIELD_NAME.field_name, value)

    def get_UcsRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UcsRunId' from this record model
        """
        return self.get_field_value(self.UCSRUNID__FIELD_NAME.field_name)

    def set_UcsVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'UcsVersion' on this record model
        """
        self.set_field_value(self.UCSVERSION__FIELD_NAME.field_name, value)

    def get_UcsVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UcsVersion' from this record model
        """
        return self.get_field_value(self.UCSVERSION__FIELD_NAME.field_name)

    def set_UseCustomIndexRead1Primer_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseCustomIndexRead1Primer' on this record model
        """
        self.set_field_value(self.USECUSTOMINDEXREAD1PRIMER__FIELD_NAME.field_name, value)

    def get_UseCustomIndexRead1Primer_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseCustomIndexRead1Primer' from this record model
        """
        return self.get_field_value(self.USECUSTOMINDEXREAD1PRIMER__FIELD_NAME.field_name)

    def set_UseCustomRead1Primer_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseCustomRead1Primer' on this record model
        """
        self.set_field_value(self.USECUSTOMREAD1PRIMER__FIELD_NAME.field_name, value)

    def get_UseCustomRead1Primer_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseCustomRead1Primer' from this record model
        """
        return self.get_field_value(self.USECUSTOMREAD1PRIMER__FIELD_NAME.field_name)

    def set_UseCustomRead2Primer_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseCustomRead2Primer' on this record model
        """
        self.set_field_value(self.USECUSTOMREAD2PRIMER__FIELD_NAME.field_name, value)

    def get_UseCustomRead2Primer_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseCustomRead2Primer' from this record model
        """
        return self.get_field_value(self.USECUSTOMREAD2PRIMER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaNovaSeqSSSettingsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaNovaSeqSSSettings
    Data Type Display Name: Illumina NovaSeq Sample Sheet Settings (Illumina NovaSeq Sample Sheet Settings)
    Fields: DateUnix, Description, AdapterTrimmingStringency, CustomRead2PrimerMix, PercentTilesToScan, DateCreated, Adapter, Assay, CustomIndexPrimerMix, ExperimentName, IndexReads, VeloxLastModifiedBy, CyclesRead1, CyclesRead2, CreatedBy, AdapterRead2, InvestigatorName, Workflow, CustomRead1PrimerMix, DataRecordName, ReadType, StitchReads, VeloxLastModifiedDate, ReagentCartridgeBarcode, QualityScoreTrim, FilterOutSingleStrandVariants
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaNovaSeqSSSettings'
    DISPLAY_NAME: Final[str] = "Illumina NovaSeq Sample Sheet Settings"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina NovaSeq Sample Sheet Settings"
    ADAPTER__FIELD_NAME: Final[WrapperField] = WrapperField("Adapter", FieldType.STRING, display_name="Adapter")
    ADAPTERREAD2__FIELD_NAME: Final[WrapperField] = WrapperField("AdapterRead2", FieldType.STRING, display_name="Adapter Read 2")
    ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME: Final[WrapperField] = WrapperField("AdapterTrimmingStringency", FieldType.STRING, display_name="Adapter Trimming Stringency")
    ASSAY__FIELD_NAME: Final[WrapperField] = WrapperField("Assay", FieldType.STRING, display_name="Assay")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CUSTOMINDEXPRIMERMIX__FIELD_NAME: Final[WrapperField] = WrapperField("CustomIndexPrimerMix", FieldType.STRING, display_name="Custom Index Primer Mix")
    CUSTOMREAD1PRIMERMIX__FIELD_NAME: Final[WrapperField] = WrapperField("CustomRead1PrimerMix", FieldType.STRING, display_name="Custom Read 1 Primer Mix")
    CUSTOMREAD2PRIMERMIX__FIELD_NAME: Final[WrapperField] = WrapperField("CustomRead2PrimerMix", FieldType.STRING, display_name="Custom Read 2 Primer Mix")
    CYCLESREAD1__FIELD_NAME: Final[WrapperField] = WrapperField("CyclesRead1", FieldType.INTEGER, display_name="Cycles Read 1")
    CYCLESREAD2__FIELD_NAME: Final[WrapperField] = WrapperField("CyclesRead2", FieldType.INTEGER, display_name="Cycles Read 2")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DATEUNIX__FIELD_NAME: Final[WrapperField] = WrapperField("DateUnix", FieldType.DATE, display_name="Date")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    EXPERIMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentName", FieldType.STRING, display_name="Experiment Name")
    FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME: Final[WrapperField] = WrapperField("FilterOutSingleStrandVariants", FieldType.STRING, display_name="Filter Out Single Strand Variants")
    INDEXREADS__FIELD_NAME: Final[WrapperField] = WrapperField("IndexReads", FieldType.SHORT, display_name="Index Reads")
    INVESTIGATORNAME__FIELD_NAME: Final[WrapperField] = WrapperField("InvestigatorName", FieldType.STRING, display_name="Investigator Name")
    PERCENTTILESTOSCAN__FIELD_NAME: Final[WrapperField] = WrapperField("PercentTilesToScan", FieldType.STRING, display_name="Percent Tiles To Scan")
    QUALITYSCORETRIM__FIELD_NAME: Final[WrapperField] = WrapperField("QualityScoreTrim", FieldType.STRING, display_name="Quality Score Trim")
    READTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ReadType", FieldType.PICKLIST, display_name="Read Type")
    REAGENTCARTRIDGEBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ReagentCartridgeBarcode", FieldType.STRING, display_name="Reagent Kit Barcode")
    STITCHREADS__FIELD_NAME: Final[WrapperField] = WrapperField("StitchReads", FieldType.BOOLEAN, display_name="Stitch Reads")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WORKFLOW__FIELD_NAME: Final[WrapperField] = WrapperField("Workflow", FieldType.STRING, display_name="Workflow")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Adapter_field(self, value: Optional[str]):
        """
        Set data field with field name 'Adapter' on this record model
        """
        self.set_field_value(self.ADAPTER__FIELD_NAME.field_name, value)

    def get_Adapter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Adapter' from this record model
        """
        return self.get_field_value(self.ADAPTER__FIELD_NAME.field_name)

    def set_AdapterRead2_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterRead2' on this record model
        """
        self.set_field_value(self.ADAPTERREAD2__FIELD_NAME.field_name, value)

    def get_AdapterRead2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterRead2' from this record model
        """
        return self.get_field_value(self.ADAPTERREAD2__FIELD_NAME.field_name)

    def set_AdapterTrimmingStringency_field(self, value: Optional[str]):
        """
        Set data field with field name 'AdapterTrimmingStringency' on this record model
        """
        self.set_field_value(self.ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME.field_name, value)

    def get_AdapterTrimmingStringency_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AdapterTrimmingStringency' from this record model
        """
        return self.get_field_value(self.ADAPTERTRIMMINGSTRINGENCY__FIELD_NAME.field_name)

    def set_Assay_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assay' on this record model
        """
        self.set_field_value(self.ASSAY__FIELD_NAME.field_name, value)

    def get_Assay_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assay' from this record model
        """
        return self.get_field_value(self.ASSAY__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomIndexPrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomIndexPrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMINDEXPRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomIndexPrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomIndexPrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMINDEXPRIMERMIX__FIELD_NAME.field_name)

    def set_CustomRead1PrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead1PrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMREAD1PRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomRead1PrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead1PrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD1PRIMERMIX__FIELD_NAME.field_name)

    def set_CustomRead2PrimerMix_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead2PrimerMix' on this record model
        """
        self.set_field_value(self.CUSTOMREAD2PRIMERMIX__FIELD_NAME.field_name, value)

    def get_CustomRead2PrimerMix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead2PrimerMix' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD2PRIMERMIX__FIELD_NAME.field_name)

    def set_CyclesRead1_field(self, value: Optional[int]):
        """
        Set data field with field name 'CyclesRead1' on this record model
        """
        self.set_field_value(self.CYCLESREAD1__FIELD_NAME.field_name, value)

    def get_CyclesRead1_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CyclesRead1' from this record model
        """
        return self.get_field_value(self.CYCLESREAD1__FIELD_NAME.field_name)

    def set_CyclesRead2_field(self, value: Optional[int]):
        """
        Set data field with field name 'CyclesRead2' on this record model
        """
        self.set_field_value(self.CYCLESREAD2__FIELD_NAME.field_name, value)

    def get_CyclesRead2_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CyclesRead2' from this record model
        """
        return self.get_field_value(self.CYCLESREAD2__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateUnix_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateUnix' on this record model
        """
        self.set_field_value(self.DATEUNIX__FIELD_NAME.field_name, value)

    def get_DateUnix_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateUnix' from this record model
        """
        return self.get_field_value(self.DATEUNIX__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FilterOutSingleStrandVariants_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilterOutSingleStrandVariants' on this record model
        """
        self.set_field_value(self.FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME.field_name, value)

    def get_FilterOutSingleStrandVariants_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilterOutSingleStrandVariants' from this record model
        """
        return self.get_field_value(self.FILTEROUTSINGLESTRANDVARIANTS__FIELD_NAME.field_name)

    def set_IndexReads_field(self, value: Optional[int]):
        """
        Set data field with field name 'IndexReads' on this record model
        """
        self.set_field_value(self.INDEXREADS__FIELD_NAME.field_name, value)

    def get_IndexReads_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IndexReads' from this record model
        """
        return self.get_field_value(self.INDEXREADS__FIELD_NAME.field_name)

    def set_InvestigatorName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InvestigatorName' on this record model
        """
        self.set_field_value(self.INVESTIGATORNAME__FIELD_NAME.field_name, value)

    def get_InvestigatorName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InvestigatorName' from this record model
        """
        return self.get_field_value(self.INVESTIGATORNAME__FIELD_NAME.field_name)

    def set_PercentTilesToScan_field(self, value: Optional[str]):
        """
        Set data field with field name 'PercentTilesToScan' on this record model
        """
        self.set_field_value(self.PERCENTTILESTOSCAN__FIELD_NAME.field_name, value)

    def get_PercentTilesToScan_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PercentTilesToScan' from this record model
        """
        return self.get_field_value(self.PERCENTTILESTOSCAN__FIELD_NAME.field_name)

    def set_QualityScoreTrim_field(self, value: Optional[str]):
        """
        Set data field with field name 'QualityScoreTrim' on this record model
        """
        self.set_field_value(self.QUALITYSCORETRIM__FIELD_NAME.field_name, value)

    def get_QualityScoreTrim_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QualityScoreTrim' from this record model
        """
        return self.get_field_value(self.QUALITYSCORETRIM__FIELD_NAME.field_name)

    def set_ReadType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReadType' on this record model
        """
        self.set_field_value(self.READTYPE__FIELD_NAME.field_name, value)

    def get_ReadType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReadType' from this record model
        """
        return self.get_field_value(self.READTYPE__FIELD_NAME.field_name)

    def set_ReagentCartridgeBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReagentCartridgeBarcode' on this record model
        """
        self.set_field_value(self.REAGENTCARTRIDGEBARCODE__FIELD_NAME.field_name, value)

    def get_ReagentCartridgeBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReagentCartridgeBarcode' from this record model
        """
        return self.get_field_value(self.REAGENTCARTRIDGEBARCODE__FIELD_NAME.field_name)

    def set_StitchReads_field(self, value: Optional[bool]):
        """
        Set data field with field name 'StitchReads' on this record model
        """
        self.set_field_value(self.STITCHREADS__FIELD_NAME.field_name, value)

    def get_StitchReads_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'StitchReads' from this record model
        """
        return self.get_field_value(self.STITCHREADS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Workflow_field(self, value: Optional[str]):
        """
        Set data field with field name 'Workflow' on this record model
        """
        self.set_field_value(self.WORKFLOW__FIELD_NAME.field_name, value)

    def get_Workflow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Workflow' from this record model
        """
        return self.get_field_value(self.WORKFLOW__FIELD_NAME.field_name)


class IlluminaNovaSeqXRunParametersModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaNovaSeqXRunParameters
    Data Type Display Name: Illumina NovaSeq X Run Parameter (Illumina NovaSeq X Run Parameters)
    Fields: OutputFolder, RecipeName, CreatedBy, ScanSpeedMmPerSec, FlowCellName, InstrumentType, DateCreated, RunCounter, Side, DataRecordName, ExperimentName, FlowCellType, VeloxLastModifiedDate, SystemSuiteVersion, VeloxLastModifiedBy, RecipeVersion, InstrumentSerialNumber, RunId, CloudUploadMode, Application
    <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaNovaSeqXRunParameters'
    DISPLAY_NAME: Final[str] = "Illumina NovaSeq X Run Parameter"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina NovaSeq X Run Parameters"
    APPLICATION__FIELD_NAME: Final[WrapperField] = WrapperField("Application", FieldType.STRING, display_name="Application")
    CLOUDUPLOADMODE__FIELD_NAME: Final[WrapperField] = WrapperField("CloudUploadMode", FieldType.STRING, display_name="Cloud Upload Mode")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPERIMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentName", FieldType.STRING, display_name="Experiment Name")
    FLOWCELLNAME__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellName", FieldType.STRING, display_name="Flow Cell Name")
    FLOWCELLTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellType", FieldType.STRING, display_name="Flow Cell Type")
    INSTRUMENTSERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentSerialNumber", FieldType.STRING, display_name="Instrument Serial Number")
    INSTRUMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentType", FieldType.STRING, display_name="Instrument Type")
    OUTPUTFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("OutputFolder", FieldType.STRING, display_name="Output Folder")
    RECIPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("RecipeName", FieldType.STRING, display_name="Recipe Name")
    RECIPEVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("RecipeVersion", FieldType.STRING, display_name="Recipe Version")
    RUNCOUNTER__FIELD_NAME: Final[WrapperField] = WrapperField("RunCounter", FieldType.INTEGER, display_name="Run Counter")
    RUNID__FIELD_NAME: Final[WrapperField] = WrapperField("RunId", FieldType.STRING, display_name="Run ID")
    SCANSPEEDMMPERSEC__FIELD_NAME: Final[WrapperField] = WrapperField("ScanSpeedMmPerSec", FieldType.DOUBLE, display_name="Scan Speed mm Per Sec")
    SIDE__FIELD_NAME: Final[WrapperField] = WrapperField("Side", FieldType.STRING, display_name="Side")
    SYSTEMSUITEVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("SystemSuiteVersion", FieldType.STRING, display_name="System Suite Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Application_field(self, value: Optional[str]):
        """
        Set data field with field name 'Application' on this record model
        """
        self.set_field_value(self.APPLICATION__FIELD_NAME.field_name, value)

    def get_Application_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Application' from this record model
        """
        return self.get_field_value(self.APPLICATION__FIELD_NAME.field_name)

    def set_CloudUploadMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'CloudUploadMode' on this record model
        """
        self.set_field_value(self.CLOUDUPLOADMODE__FIELD_NAME.field_name, value)

    def get_CloudUploadMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CloudUploadMode' from this record model
        """
        return self.get_field_value(self.CLOUDUPLOADMODE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FlowCellName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellName' on this record model
        """
        self.set_field_value(self.FLOWCELLNAME__FIELD_NAME.field_name, value)

    def get_FlowCellName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellName' from this record model
        """
        return self.get_field_value(self.FLOWCELLNAME__FIELD_NAME.field_name)

    def set_FlowCellType_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellType' on this record model
        """
        self.set_field_value(self.FLOWCELLTYPE__FIELD_NAME.field_name, value)

    def get_FlowCellType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellType' from this record model
        """
        return self.get_field_value(self.FLOWCELLTYPE__FIELD_NAME.field_name)

    def set_InstrumentSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentSerialNumber' on this record model
        """
        self.set_field_value(self.INSTRUMENTSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_InstrumentSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentSerialNumber' from this record model
        """
        return self.get_field_value(self.INSTRUMENTSERIALNUMBER__FIELD_NAME.field_name)

    def set_InstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentType' on this record model
        """
        self.set_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_InstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentType' from this record model
        """
        return self.get_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_OutputFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputFolder' on this record model
        """
        self.set_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name, value)

    def get_OutputFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputFolder' from this record model
        """
        return self.get_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name)

    def set_RecipeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeName' on this record model
        """
        self.set_field_value(self.RECIPENAME__FIELD_NAME.field_name, value)

    def get_RecipeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeName' from this record model
        """
        return self.get_field_value(self.RECIPENAME__FIELD_NAME.field_name)

    def set_RecipeVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeVersion' on this record model
        """
        self.set_field_value(self.RECIPEVERSION__FIELD_NAME.field_name, value)

    def get_RecipeVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeVersion' from this record model
        """
        return self.get_field_value(self.RECIPEVERSION__FIELD_NAME.field_name)

    def set_RunCounter_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunCounter' on this record model
        """
        self.set_field_value(self.RUNCOUNTER__FIELD_NAME.field_name, value)

    def get_RunCounter_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunCounter' from this record model
        """
        return self.get_field_value(self.RUNCOUNTER__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_ScanSpeedMmPerSec_field(self, value: Optional[float]):
        """
        Set data field with field name 'ScanSpeedMmPerSec' on this record model
        """
        self.set_field_value(self.SCANSPEEDMMPERSEC__FIELD_NAME.field_name, value)

    def get_ScanSpeedMmPerSec_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ScanSpeedMmPerSec' from this record model
        """
        return self.get_field_value(self.SCANSPEEDMMPERSEC__FIELD_NAME.field_name)

    def set_Side_field(self, value: Optional[str]):
        """
        Set data field with field name 'Side' on this record model
        """
        self.set_field_value(self.SIDE__FIELD_NAME.field_name, value)

    def get_Side_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Side' from this record model
        """
        return self.get_field_value(self.SIDE__FIELD_NAME.field_name)

    def set_SystemSuiteVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'SystemSuiteVersion' on this record model
        """
        self.set_field_value(self.SYSTEMSUITEVERSION__FIELD_NAME.field_name, value)

    def get_SystemSuiteVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SystemSuiteVersion' from this record model
        """
        return self.get_field_value(self.SYSTEMSUITEVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaSeqExperimentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaSeqExperiment
    Data Type Display Name: Illumina Sequencing Experiment (Illumina Sequencing Experiments)
    Fields: ClusterWithCBot, SequencerRunFolder, DateCreated, Side, ActiveWorkflowId, ExperimentName, PhiXLibraryBarcode, DateCompleted, SequencerRunDate, SequencingRunMode, TimeCompleted, CanEditRunMode, VeloxLastModifiedBy, RunId, SequencerInstrument, PhiXLibraryVolume, CreatedBy, cBotReagentPlateBarcode, Comments, FlowcellId, SequencingRunType, RunCompleted, DataRecordName, cBotReagentPlateQuantity, ExperimentId, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaSeqExperiment'
    DISPLAY_NAME: Final[str] = "Illumina Sequencing Experiment"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina Sequencing Experiments"
    ACTIVEWORKFLOWID__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveWorkflowId", FieldType.LONG, display_name="Active Workflow ID")
    CANEDITRUNMODE__FIELD_NAME: Final[WrapperField] = WrapperField("CanEditRunMode", FieldType.BOOLEAN, display_name="Can Edit Run Mode")
    CLUSTERWITHCBOT__FIELD_NAME: Final[WrapperField] = WrapperField("ClusterWithCBot", FieldType.BOOLEAN, display_name="Cluster with cBot")
    COMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("Comments", FieldType.STRING, display_name="Comment")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECOMPLETED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCompleted", FieldType.DATE, display_name="Date Completed")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPERIMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentId", FieldType.STRING, display_name="Active Workflow Name")
    EXPERIMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentName", FieldType.STRING, display_name="Experiment Name")
    FLOWCELLID__FIELD_NAME: Final[WrapperField] = WrapperField("FlowcellId", FieldType.STRING, display_name="Flow Cell ID")
    PHIXLIBRARYBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("PhiXLibraryBarcode", FieldType.SELECTION, display_name="PhiX Library Barcode")
    PHIXLIBRARYVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("PhiXLibraryVolume", FieldType.DOUBLE, display_name="PhiX Library Volume (ul)")
    RUNCOMPLETED__FIELD_NAME: Final[WrapperField] = WrapperField("RunCompleted", FieldType.BOOLEAN, display_name="RunCompleted")
    RUNID__FIELD_NAME: Final[WrapperField] = WrapperField("RunId", FieldType.STRING, display_name="Run ID")
    SEQUENCERINSTRUMENT__FIELD_NAME: Final[WrapperField] = WrapperField("SequencerInstrument", FieldType.SELECTION, display_name="Sequencer Instrument")
    SEQUENCERRUNDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SequencerRunDate", FieldType.DATE, display_name="Run Start Date")
    SEQUENCERRUNFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("SequencerRunFolder", FieldType.STRING, display_name="Sequencer Run Folder")
    SEQUENCINGRUNMODE__FIELD_NAME: Final[WrapperField] = WrapperField("SequencingRunMode", FieldType.PICKLIST, display_name="Sequencing Run Mode")
    SEQUENCINGRUNTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SequencingRunType", FieldType.PICKLIST, display_name="Sequencing Run Type")
    SIDE__FIELD_NAME: Final[WrapperField] = WrapperField("Side", FieldType.STRING, display_name="Side")
    TIMECOMPLETED__FIELD_NAME: Final[WrapperField] = WrapperField("TimeCompleted", FieldType.STRING, display_name="Time Completed")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CBOTREAGENTPLATEBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("cBotReagentPlateBarcode", FieldType.STRING, display_name="cBot Reagent Plate Barcode")
    CBOTREAGENTPLATEQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("cBotReagentPlateQuantity", FieldType.DOUBLE, display_name="cBot Reagent Plate Quantity Used")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def set_CanEditRunMode_field(self, value: Optional[bool]):
        """
        Set data field with field name 'CanEditRunMode' on this record model
        """
        self.set_field_value(self.CANEDITRUNMODE__FIELD_NAME.field_name, value)

    def get_CanEditRunMode_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'CanEditRunMode' from this record model
        """
        return self.get_field_value(self.CANEDITRUNMODE__FIELD_NAME.field_name)

    def set_ClusterWithCBot_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ClusterWithCBot' on this record model
        """
        self.set_field_value(self.CLUSTERWITHCBOT__FIELD_NAME.field_name, value)

    def get_ClusterWithCBot_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ClusterWithCBot' from this record model
        """
        return self.get_field_value(self.CLUSTERWITHCBOT__FIELD_NAME.field_name)

    def set_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'Comments' on this record model
        """
        self.set_field_value(self.COMMENTS__FIELD_NAME.field_name, value)

    def get_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Comments' from this record model
        """
        return self.get_field_value(self.COMMENTS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DateCompleted_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateCompleted' on this record model
        """
        self.set_field_value(self.DATECOMPLETED__FIELD_NAME.field_name, value)

    def get_DateCompleted_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCompleted' from this record model
        """
        return self.get_field_value(self.DATECOMPLETED__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExperimentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentId' on this record model
        """
        self.set_field_value(self.EXPERIMENTID__FIELD_NAME.field_name, value)

    def get_ExperimentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTID__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FlowcellId_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellId' on this record model
        """
        self.set_field_value(self.FLOWCELLID__FIELD_NAME.field_name, value)

    def get_FlowcellId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellId' from this record model
        """
        return self.get_field_value(self.FLOWCELLID__FIELD_NAME.field_name)

    def set_PhiXLibraryBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'PhiXLibraryBarcode' on this record model
        """
        self.set_field_value(self.PHIXLIBRARYBARCODE__FIELD_NAME.field_name, value)

    def get_PhiXLibraryBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PhiXLibraryBarcode' from this record model
        """
        return self.get_field_value(self.PHIXLIBRARYBARCODE__FIELD_NAME.field_name)

    def set_PhiXLibraryVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'PhiXLibraryVolume' on this record model
        """
        self.set_field_value(self.PHIXLIBRARYVOLUME__FIELD_NAME.field_name, value)

    def get_PhiXLibraryVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PhiXLibraryVolume' from this record model
        """
        return self.get_field_value(self.PHIXLIBRARYVOLUME__FIELD_NAME.field_name)

    def set_RunCompleted_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RunCompleted' on this record model
        """
        self.set_field_value(self.RUNCOMPLETED__FIELD_NAME.field_name, value)

    def get_RunCompleted_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RunCompleted' from this record model
        """
        return self.get_field_value(self.RUNCOMPLETED__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_SequencerInstrument_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencerInstrument' on this record model
        """
        self.set_field_value(self.SEQUENCERINSTRUMENT__FIELD_NAME.field_name, value)

    def get_SequencerInstrument_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencerInstrument' from this record model
        """
        return self.get_field_value(self.SEQUENCERINSTRUMENT__FIELD_NAME.field_name)

    def set_SequencerRunDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SequencerRunDate' on this record model
        """
        self.set_field_value(self.SEQUENCERRUNDATE__FIELD_NAME.field_name, value)

    def get_SequencerRunDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SequencerRunDate' from this record model
        """
        return self.get_field_value(self.SEQUENCERRUNDATE__FIELD_NAME.field_name)

    def set_SequencerRunFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencerRunFolder' on this record model
        """
        self.set_field_value(self.SEQUENCERRUNFOLDER__FIELD_NAME.field_name, value)

    def get_SequencerRunFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencerRunFolder' from this record model
        """
        return self.get_field_value(self.SEQUENCERRUNFOLDER__FIELD_NAME.field_name)

    def set_SequencingRunMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencingRunMode' on this record model
        """
        self.set_field_value(self.SEQUENCINGRUNMODE__FIELD_NAME.field_name, value)

    def get_SequencingRunMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencingRunMode' from this record model
        """
        return self.get_field_value(self.SEQUENCINGRUNMODE__FIELD_NAME.field_name)

    def set_SequencingRunType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequencingRunType' on this record model
        """
        self.set_field_value(self.SEQUENCINGRUNTYPE__FIELD_NAME.field_name, value)

    def get_SequencingRunType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequencingRunType' from this record model
        """
        return self.get_field_value(self.SEQUENCINGRUNTYPE__FIELD_NAME.field_name)

    def set_Side_field(self, value: Optional[str]):
        """
        Set data field with field name 'Side' on this record model
        """
        self.set_field_value(self.SIDE__FIELD_NAME.field_name, value)

    def get_Side_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Side' from this record model
        """
        return self.get_field_value(self.SIDE__FIELD_NAME.field_name)

    def set_TimeCompleted_field(self, value: Optional[str]):
        """
        Set data field with field name 'TimeCompleted' on this record model
        """
        self.set_field_value(self.TIMECOMPLETED__FIELD_NAME.field_name, value)

    def get_TimeCompleted_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TimeCompleted' from this record model
        """
        return self.get_field_value(self.TIMECOMPLETED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_cBotReagentPlateBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'cBotReagentPlateBarcode' on this record model
        """
        self.set_field_value(self.CBOTREAGENTPLATEBARCODE__FIELD_NAME.field_name, value)

    def get_cBotReagentPlateBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'cBotReagentPlateBarcode' from this record model
        """
        return self.get_field_value(self.CBOTREAGENTPLATEBARCODE__FIELD_NAME.field_name)

    def set_cBotReagentPlateQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'cBotReagentPlateQuantity' on this record model
        """
        self.set_field_value(self.CBOTREAGENTPLATEQUANTITY__FIELD_NAME.field_name, value)

    def get_cBotReagentPlateQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cBotReagentPlateQuantity' from this record model
        """
        return self.get_field_value(self.CBOTREAGENTPLATEQUANTITY__FIELD_NAME.field_name)


class IlluminaSeqProtocol1Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaSeqProtocol1
    Data Type Display Name: Illumina Seq Normalization Protocol (Illumina Seq Normalization Protocols)
    Fields: InputLibVolToUse, CreatedBy, TwoNmTargetVolume, Aliq1TargetVolume, TwoNmHt1ToUse, DateCreated, InputLibMolarity, ExistingPlateRecordId, Aliq1StartingVolume, OtherSampleId, ExperimentRecordId, ActiveWorkflowId, DataRecordName, ExperimentId, Aliq1StartingConcentration, ExperimentType, VeloxLastModifiedDate, VeloxLastModifiedBy, Aliq1TargetConcentration, TwoNmMolarity, SampleId
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaSeqProtocol1'
    DISPLAY_NAME: Final[str] = "Illumina Seq Normalization Protocol"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina Seq Normalization Protocols"
    ACTIVEWORKFLOWID__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveWorkflowId", FieldType.LONG, display_name="Active Workflow ID")
    ALIQ1STARTINGCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("Aliq1StartingConcentration", FieldType.DOUBLE, display_name="Starting Concentration")
    ALIQ1STARTINGVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("Aliq1StartingVolume", FieldType.DOUBLE, display_name="Starting Volume")
    ALIQ1TARGETCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("Aliq1TargetConcentration", FieldType.DOUBLE, display_name="Target Concentration")
    ALIQ1TARGETVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("Aliq1TargetVolume", FieldType.DOUBLE, display_name="Target Volume")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXISTINGPLATERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ExistingPlateRecordId", FieldType.LONG, display_name="Existing Plate Record Id")
    EXPERIMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentId", FieldType.STRING, display_name="Active Workflow Name")
    EXPERIMENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentRecordId", FieldType.LONG, display_name="Experiment Record ID")
    EXPERIMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentType", FieldType.STRING, display_name="Experiment Type")
    INPUTLIBMOLARITY__FIELD_NAME: Final[WrapperField] = WrapperField("InputLibMolarity", FieldType.DOUBLE, display_name="Source Molarity (nM)")
    INPUTLIBVOLTOUSE__FIELD_NAME: Final[WrapperField] = WrapperField("InputLibVolToUse", FieldType.DOUBLE, display_name="Source Volume to Use (ul)")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    TWONMHT1TOUSE__FIELD_NAME: Final[WrapperField] = WrapperField("TwoNmHt1ToUse", FieldType.DOUBLE, display_name="HT1 Buffer to Use for 2 nM Dilution (ul)")
    TWONMMOLARITY__FIELD_NAME: Final[WrapperField] = WrapperField("TwoNmMolarity", FieldType.DOUBLE, display_name="2 nM Dilution Molarity (nM)")
    TWONMTARGETVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("TwoNmTargetVolume", FieldType.DOUBLE, display_name="2 nM Dilution Ending Volume (ul)")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def set_Aliq1StartingConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Aliq1StartingConcentration' on this record model
        """
        self.set_field_value(self.ALIQ1STARTINGCONCENTRATION__FIELD_NAME.field_name, value)

    def get_Aliq1StartingConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Aliq1StartingConcentration' from this record model
        """
        return self.get_field_value(self.ALIQ1STARTINGCONCENTRATION__FIELD_NAME.field_name)

    def set_Aliq1StartingVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Aliq1StartingVolume' on this record model
        """
        self.set_field_value(self.ALIQ1STARTINGVOLUME__FIELD_NAME.field_name, value)

    def get_Aliq1StartingVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Aliq1StartingVolume' from this record model
        """
        return self.get_field_value(self.ALIQ1STARTINGVOLUME__FIELD_NAME.field_name)

    def set_Aliq1TargetConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Aliq1TargetConcentration' on this record model
        """
        self.set_field_value(self.ALIQ1TARGETCONCENTRATION__FIELD_NAME.field_name, value)

    def get_Aliq1TargetConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Aliq1TargetConcentration' from this record model
        """
        return self.get_field_value(self.ALIQ1TARGETCONCENTRATION__FIELD_NAME.field_name)

    def set_Aliq1TargetVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Aliq1TargetVolume' on this record model
        """
        self.set_field_value(self.ALIQ1TARGETVOLUME__FIELD_NAME.field_name, value)

    def get_Aliq1TargetVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Aliq1TargetVolume' from this record model
        """
        return self.get_field_value(self.ALIQ1TARGETVOLUME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExistingPlateRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExistingPlateRecordId' on this record model
        """
        self.set_field_value(self.EXISTINGPLATERECORDID__FIELD_NAME.field_name, value)

    def get_ExistingPlateRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExistingPlateRecordId' from this record model
        """
        return self.get_field_value(self.EXISTINGPLATERECORDID__FIELD_NAME.field_name)

    def set_ExperimentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentId' on this record model
        """
        self.set_field_value(self.EXPERIMENTID__FIELD_NAME.field_name, value)

    def get_ExperimentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTID__FIELD_NAME.field_name)

    def set_ExperimentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExperimentRecordId' on this record model
        """
        self.set_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name, value)

    def get_ExperimentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExperimentRecordId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name)

    def set_ExperimentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentType' on this record model
        """
        self.set_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name, value)

    def get_ExperimentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentType' from this record model
        """
        return self.get_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name)

    def set_InputLibMolarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'InputLibMolarity' on this record model
        """
        self.set_field_value(self.INPUTLIBMOLARITY__FIELD_NAME.field_name, value)

    def get_InputLibMolarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InputLibMolarity' from this record model
        """
        return self.get_field_value(self.INPUTLIBMOLARITY__FIELD_NAME.field_name)

    def set_InputLibVolToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'InputLibVolToUse' on this record model
        """
        self.set_field_value(self.INPUTLIBVOLTOUSE__FIELD_NAME.field_name, value)

    def get_InputLibVolToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InputLibVolToUse' from this record model
        """
        return self.get_field_value(self.INPUTLIBVOLTOUSE__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_TwoNmHt1ToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'TwoNmHt1ToUse' on this record model
        """
        self.set_field_value(self.TWONMHT1TOUSE__FIELD_NAME.field_name, value)

    def get_TwoNmHt1ToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TwoNmHt1ToUse' from this record model
        """
        return self.get_field_value(self.TWONMHT1TOUSE__FIELD_NAME.field_name)

    def set_TwoNmMolarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'TwoNmMolarity' on this record model
        """
        self.set_field_value(self.TWONMMOLARITY__FIELD_NAME.field_name, value)

    def get_TwoNmMolarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TwoNmMolarity' from this record model
        """
        return self.get_field_value(self.TWONMMOLARITY__FIELD_NAME.field_name)

    def set_TwoNmTargetVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'TwoNmTargetVolume' on this record model
        """
        self.set_field_value(self.TWONMTARGETVOLUME__FIELD_NAME.field_name, value)

    def get_TwoNmTargetVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TwoNmTargetVolume' from this record model
        """
        return self.get_field_value(self.TWONMTARGETVOLUME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaSeqProtocol2Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaSeqProtocol2
    Data Type Display Name: Illumina Seq Denaturing Protocol (Illumina Seq Denaturing Protocols)
    Fields: DenaturedTubeVolume, CreatedBy, DenatureHT1ToUse, TwoNmTargetVolume, DateCreated, OtherSampleId, ExperimentRecordId, DenatureNormdWellToRmv, ActiveWorkflowId, DataRecordName, ExperimentId, ExperimentType, VeloxLastModifiedDate, VeloxLastModifiedBy, TwoNmMolarity, DenatureNaOHToUse, SampleId, DenaturedTubeConc
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaSeqProtocol2'
    DISPLAY_NAME: Final[str] = "Illumina Seq Denaturing Protocol"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina Seq Denaturing Protocols"
    ACTIVEWORKFLOWID__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveWorkflowId", FieldType.LONG, display_name="Active Workflow ID")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DENATUREHT1TOUSE__FIELD_NAME: Final[WrapperField] = WrapperField("DenatureHT1ToUse", FieldType.DOUBLE, display_name="HT1 to Use for Denaturing (ul)")
    DENATURENAOHTOUSE__FIELD_NAME: Final[WrapperField] = WrapperField("DenatureNaOHToUse", FieldType.DOUBLE, display_name="NaOH to Use for Denaturing (ul)")
    DENATURENORMDWELLTORMV__FIELD_NAME: Final[WrapperField] = WrapperField("DenatureNormdWellToRmv", FieldType.DOUBLE, display_name="Volume of 2 nM Dilution to Denature (ul)")
    DENATUREDTUBECONC__FIELD_NAME: Final[WrapperField] = WrapperField("DenaturedTubeConc", FieldType.DOUBLE, display_name="Denatured Sample Concentration (pM)")
    DENATUREDTUBEVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("DenaturedTubeVolume", FieldType.DOUBLE, display_name="Denatured Sample Volume (ul)")
    EXPERIMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentId", FieldType.STRING, display_name="Active Workflow Name")
    EXPERIMENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentRecordId", FieldType.LONG, display_name="Experiment Record ID")
    EXPERIMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentType", FieldType.STRING, display_name="Experiment Type")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    TWONMMOLARITY__FIELD_NAME: Final[WrapperField] = WrapperField("TwoNmMolarity", FieldType.DOUBLE, display_name="2 nM Dilution Molarity (pM)")
    TWONMTARGETVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("TwoNmTargetVolume", FieldType.DOUBLE, display_name="2 nM Dilution Ending Volume (ul)")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DenatureHT1ToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenatureHT1ToUse' on this record model
        """
        self.set_field_value(self.DENATUREHT1TOUSE__FIELD_NAME.field_name, value)

    def get_DenatureHT1ToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenatureHT1ToUse' from this record model
        """
        return self.get_field_value(self.DENATUREHT1TOUSE__FIELD_NAME.field_name)

    def set_DenatureNaOHToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenatureNaOHToUse' on this record model
        """
        self.set_field_value(self.DENATURENAOHTOUSE__FIELD_NAME.field_name, value)

    def get_DenatureNaOHToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenatureNaOHToUse' from this record model
        """
        return self.get_field_value(self.DENATURENAOHTOUSE__FIELD_NAME.field_name)

    def set_DenatureNormdWellToRmv_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenatureNormdWellToRmv' on this record model
        """
        self.set_field_value(self.DENATURENORMDWELLTORMV__FIELD_NAME.field_name, value)

    def get_DenatureNormdWellToRmv_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenatureNormdWellToRmv' from this record model
        """
        return self.get_field_value(self.DENATURENORMDWELLTORMV__FIELD_NAME.field_name)

    def set_DenaturedTubeConc_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenaturedTubeConc' on this record model
        """
        self.set_field_value(self.DENATUREDTUBECONC__FIELD_NAME.field_name, value)

    def get_DenaturedTubeConc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenaturedTubeConc' from this record model
        """
        return self.get_field_value(self.DENATUREDTUBECONC__FIELD_NAME.field_name)

    def set_DenaturedTubeVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenaturedTubeVolume' on this record model
        """
        self.set_field_value(self.DENATUREDTUBEVOLUME__FIELD_NAME.field_name, value)

    def get_DenaturedTubeVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenaturedTubeVolume' from this record model
        """
        return self.get_field_value(self.DENATUREDTUBEVOLUME__FIELD_NAME.field_name)

    def set_ExperimentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentId' on this record model
        """
        self.set_field_value(self.EXPERIMENTID__FIELD_NAME.field_name, value)

    def get_ExperimentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTID__FIELD_NAME.field_name)

    def set_ExperimentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExperimentRecordId' on this record model
        """
        self.set_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name, value)

    def get_ExperimentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExperimentRecordId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name)

    def set_ExperimentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentType' on this record model
        """
        self.set_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name, value)

    def get_ExperimentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentType' from this record model
        """
        return self.get_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_TwoNmMolarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'TwoNmMolarity' on this record model
        """
        self.set_field_value(self.TWONMMOLARITY__FIELD_NAME.field_name, value)

    def get_TwoNmMolarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TwoNmMolarity' from this record model
        """
        return self.get_field_value(self.TWONMMOLARITY__FIELD_NAME.field_name)

    def set_TwoNmTargetVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'TwoNmTargetVolume' on this record model
        """
        self.set_field_value(self.TWONMTARGETVOLUME__FIELD_NAME.field_name, value)

    def get_TwoNmTargetVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TwoNmTargetVolume' from this record model
        """
        return self.get_field_value(self.TWONMTARGETVOLUME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IlluminaSeqProtocol3Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaSeqProtocol3
    Data Type Display Name: Illumina Seq Final Protocol (Illumina Seq Final Protocols)
    Fields: CreatedBy, DenaturedTubeVolume, DilutedDNAVolume, cBotReagentPlateBarcode, DiluteDenaturedDNAVol, IndexSerialNumber, DilutedDNAConcentration, DateCreated, DiluteHT1VolToUse, OtherSampleId, SbsSerialNumber, ExperimentRecordId, ActiveWorkflowId, DataRecordName, PhiXLibraryBarcode, ExperimentId, ExperimentType, PeSerialNumber, VeloxLastModifiedDate, VeloxLastModifiedBy, SampleId, DenaturedTubeConc
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaSeqProtocol3'
    DISPLAY_NAME: Final[str] = "Illumina Seq Final Protocol"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina Seq Final Protocols"
    ACTIVEWORKFLOWID__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveWorkflowId", FieldType.LONG, display_name="Active Workflow ID")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DENATUREDTUBECONC__FIELD_NAME: Final[WrapperField] = WrapperField("DenaturedTubeConc", FieldType.DOUBLE, display_name="Denatured Sample Concentration (pM)")
    DENATUREDTUBEVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("DenaturedTubeVolume", FieldType.DOUBLE, display_name="Denatured Sample Volume (ul)")
    DILUTEDENATUREDDNAVOL__FIELD_NAME: Final[WrapperField] = WrapperField("DiluteDenaturedDNAVol", FieldType.DOUBLE, display_name="Volume of Denatured Sample to Dilute (ul)")
    DILUTEHT1VOLTOUSE__FIELD_NAME: Final[WrapperField] = WrapperField("DiluteHT1VolToUse", FieldType.DOUBLE, display_name="HT1 to Use for Final Dilution (ul)")
    DILUTEDDNACONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("DilutedDNAConcentration", FieldType.DOUBLE, display_name="Diluted Template DNA Molarity (pM)")
    DILUTEDDNAVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("DilutedDNAVolume", FieldType.DOUBLE, display_name="Diluted Template DNA Volume (ul)")
    EXPERIMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentId", FieldType.STRING, display_name="Active Workflow Name")
    EXPERIMENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentRecordId", FieldType.LONG, display_name="Experiment Record ID")
    EXPERIMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentType", FieldType.STRING, display_name="Experiment Type")
    INDEXSERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("IndexSerialNumber", FieldType.SELECTION, display_name="Index Kit Serial Number")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    PESERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PeSerialNumber", FieldType.SELECTION, display_name="Paired-End Kit Serial Number")
    PHIXLIBRARYBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("PhiXLibraryBarcode", FieldType.SELECTION, display_name="PhiX Library Barcode")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    SBSSERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("SbsSerialNumber", FieldType.SELECTION, display_name="SBS Kit Serial Number")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CBOTREAGENTPLATEBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("cBotReagentPlateBarcode", FieldType.STRING, display_name="cBot Reagent Plate Barcode")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DenaturedTubeConc_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenaturedTubeConc' on this record model
        """
        self.set_field_value(self.DENATUREDTUBECONC__FIELD_NAME.field_name, value)

    def get_DenaturedTubeConc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenaturedTubeConc' from this record model
        """
        return self.get_field_value(self.DENATUREDTUBECONC__FIELD_NAME.field_name)

    def set_DenaturedTubeVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenaturedTubeVolume' on this record model
        """
        self.set_field_value(self.DENATUREDTUBEVOLUME__FIELD_NAME.field_name, value)

    def get_DenaturedTubeVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenaturedTubeVolume' from this record model
        """
        return self.get_field_value(self.DENATUREDTUBEVOLUME__FIELD_NAME.field_name)

    def set_DiluteDenaturedDNAVol_field(self, value: Optional[float]):
        """
        Set data field with field name 'DiluteDenaturedDNAVol' on this record model
        """
        self.set_field_value(self.DILUTEDENATUREDDNAVOL__FIELD_NAME.field_name, value)

    def get_DiluteDenaturedDNAVol_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DiluteDenaturedDNAVol' from this record model
        """
        return self.get_field_value(self.DILUTEDENATUREDDNAVOL__FIELD_NAME.field_name)

    def set_DiluteHT1VolToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'DiluteHT1VolToUse' on this record model
        """
        self.set_field_value(self.DILUTEHT1VOLTOUSE__FIELD_NAME.field_name, value)

    def get_DiluteHT1VolToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DiluteHT1VolToUse' from this record model
        """
        return self.get_field_value(self.DILUTEHT1VOLTOUSE__FIELD_NAME.field_name)

    def set_DilutedDNAConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutedDNAConcentration' on this record model
        """
        self.set_field_value(self.DILUTEDDNACONCENTRATION__FIELD_NAME.field_name, value)

    def get_DilutedDNAConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutedDNAConcentration' from this record model
        """
        return self.get_field_value(self.DILUTEDDNACONCENTRATION__FIELD_NAME.field_name)

    def set_DilutedDNAVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutedDNAVolume' on this record model
        """
        self.set_field_value(self.DILUTEDDNAVOLUME__FIELD_NAME.field_name, value)

    def get_DilutedDNAVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutedDNAVolume' from this record model
        """
        return self.get_field_value(self.DILUTEDDNAVOLUME__FIELD_NAME.field_name)

    def set_ExperimentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentId' on this record model
        """
        self.set_field_value(self.EXPERIMENTID__FIELD_NAME.field_name, value)

    def get_ExperimentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTID__FIELD_NAME.field_name)

    def set_ExperimentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExperimentRecordId' on this record model
        """
        self.set_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name, value)

    def get_ExperimentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExperimentRecordId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name)

    def set_ExperimentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentType' on this record model
        """
        self.set_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name, value)

    def get_ExperimentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentType' from this record model
        """
        return self.get_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name)

    def set_IndexSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexSerialNumber' on this record model
        """
        self.set_field_value(self.INDEXSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_IndexSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexSerialNumber' from this record model
        """
        return self.get_field_value(self.INDEXSERIALNUMBER__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_PeSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeSerialNumber' on this record model
        """
        self.set_field_value(self.PESERIALNUMBER__FIELD_NAME.field_name, value)

    def get_PeSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeSerialNumber' from this record model
        """
        return self.get_field_value(self.PESERIALNUMBER__FIELD_NAME.field_name)

    def set_PhiXLibraryBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'PhiXLibraryBarcode' on this record model
        """
        self.set_field_value(self.PHIXLIBRARYBARCODE__FIELD_NAME.field_name, value)

    def get_PhiXLibraryBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PhiXLibraryBarcode' from this record model
        """
        return self.get_field_value(self.PHIXLIBRARYBARCODE__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SbsSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'SbsSerialNumber' on this record model
        """
        self.set_field_value(self.SBSSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_SbsSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SbsSerialNumber' from this record model
        """
        return self.get_field_value(self.SBSSERIALNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_cBotReagentPlateBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'cBotReagentPlateBarcode' on this record model
        """
        self.set_field_value(self.CBOTREAGENTPLATEBARCODE__FIELD_NAME.field_name, value)

    def get_cBotReagentPlateBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'cBotReagentPlateBarcode' from this record model
        """
        return self.get_field_value(self.CBOTREAGENTPLATEBARCODE__FIELD_NAME.field_name)


class IlluminaSequenceStatusModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IlluminaSequenceStatus
    Data Type Display Name: Illumina Sequencing Status (Illumina Sequencing Statuses)
    Fields: CreatedBy, FlowcellId, DateCreated, InstrumentId, SurfaceCount, LaneCount, TileCount, ReadIndexed, CurrentRead, DateOfRun, DateOfUpdate, DataRecordName, RunNumber, CyclesCompleted, TimeOfUpdate, VeloxLastModifiedDate, VeloxLastModifiedBy, RunId, SwathCount, TimeOfRun
    <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: Final[str] = 'IlluminaSequenceStatus'
    DISPLAY_NAME: Final[str] = "Illumina Sequencing Status"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina Sequencing Statuses"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CURRENTREAD__FIELD_NAME: Final[WrapperField] = WrapperField("CurrentRead", FieldType.LONG, display_name="Current Read")
    CYCLESCOMPLETED__FIELD_NAME: Final[WrapperField] = WrapperField("CyclesCompleted", FieldType.STRING, display_name="Cycles Completed")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DATEOFRUN__FIELD_NAME: Final[WrapperField] = WrapperField("DateOfRun", FieldType.DATE, display_name="Date of Run")
    DATEOFUPDATE__FIELD_NAME: Final[WrapperField] = WrapperField("DateOfUpdate", FieldType.DATE, display_name="Date of Last Update")
    FLOWCELLID__FIELD_NAME: Final[WrapperField] = WrapperField("FlowcellId", FieldType.STRING, display_name="Flowcell ID")
    INSTRUMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentId", FieldType.STRING, display_name="Instrument ID")
    LANECOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("LaneCount", FieldType.LONG, display_name="Lane Count")
    READINDEXED__FIELD_NAME: Final[WrapperField] = WrapperField("ReadIndexed", FieldType.BOOLEAN, display_name="Indexed")
    RUNID__FIELD_NAME: Final[WrapperField] = WrapperField("RunId", FieldType.STRING, display_name="Run Id")
    RUNNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("RunNumber", FieldType.LONG, display_name="Run Number")
    SURFACECOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("SurfaceCount", FieldType.INTEGER, display_name="Surface Count")
    SWATHCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("SwathCount", FieldType.LONG, display_name="Swath Count")
    TILECOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TileCount", FieldType.LONG, display_name="Tile Count")
    TIMEOFRUN__FIELD_NAME: Final[WrapperField] = WrapperField("TimeOfRun", FieldType.STRING, display_name="Time of Run")
    TIMEOFUPDATE__FIELD_NAME: Final[WrapperField] = WrapperField("TimeOfUpdate", FieldType.STRING, display_name="Time of Last Update")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CurrentRead_field(self, value: Optional[int]):
        """
        Set data field with field name 'CurrentRead' on this record model
        """
        self.set_field_value(self.CURRENTREAD__FIELD_NAME.field_name, value)

    def get_CurrentRead_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CurrentRead' from this record model
        """
        return self.get_field_value(self.CURRENTREAD__FIELD_NAME.field_name)

    def set_CyclesCompleted_field(self, value: Optional[str]):
        """
        Set data field with field name 'CyclesCompleted' on this record model
        """
        self.set_field_value(self.CYCLESCOMPLETED__FIELD_NAME.field_name, value)

    def get_CyclesCompleted_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CyclesCompleted' from this record model
        """
        return self.get_field_value(self.CYCLESCOMPLETED__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateOfRun_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateOfRun' on this record model
        """
        self.set_field_value(self.DATEOFRUN__FIELD_NAME.field_name, value)

    def get_DateOfRun_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateOfRun' from this record model
        """
        return self.get_field_value(self.DATEOFRUN__FIELD_NAME.field_name)

    def set_DateOfUpdate_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateOfUpdate' on this record model
        """
        self.set_field_value(self.DATEOFUPDATE__FIELD_NAME.field_name, value)

    def get_DateOfUpdate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateOfUpdate' from this record model
        """
        return self.get_field_value(self.DATEOFUPDATE__FIELD_NAME.field_name)

    def set_FlowcellId_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowcellId' on this record model
        """
        self.set_field_value(self.FLOWCELLID__FIELD_NAME.field_name, value)

    def get_FlowcellId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowcellId' from this record model
        """
        return self.get_field_value(self.FLOWCELLID__FIELD_NAME.field_name)

    def set_InstrumentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentId' on this record model
        """
        self.set_field_value(self.INSTRUMENTID__FIELD_NAME.field_name, value)

    def get_InstrumentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentId' from this record model
        """
        return self.get_field_value(self.INSTRUMENTID__FIELD_NAME.field_name)

    def set_LaneCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'LaneCount' on this record model
        """
        self.set_field_value(self.LANECOUNT__FIELD_NAME.field_name, value)

    def get_LaneCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LaneCount' from this record model
        """
        return self.get_field_value(self.LANECOUNT__FIELD_NAME.field_name)

    def set_ReadIndexed_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReadIndexed' on this record model
        """
        self.set_field_value(self.READINDEXED__FIELD_NAME.field_name, value)

    def get_ReadIndexed_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReadIndexed' from this record model
        """
        return self.get_field_value(self.READINDEXED__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_RunNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunNumber' on this record model
        """
        self.set_field_value(self.RUNNUMBER__FIELD_NAME.field_name, value)

    def get_RunNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunNumber' from this record model
        """
        return self.get_field_value(self.RUNNUMBER__FIELD_NAME.field_name)

    def set_SurfaceCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'SurfaceCount' on this record model
        """
        self.set_field_value(self.SURFACECOUNT__FIELD_NAME.field_name, value)

    def get_SurfaceCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SurfaceCount' from this record model
        """
        return self.get_field_value(self.SURFACECOUNT__FIELD_NAME.field_name)

    def set_SwathCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'SwathCount' on this record model
        """
        self.set_field_value(self.SWATHCOUNT__FIELD_NAME.field_name, value)

    def get_SwathCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SwathCount' from this record model
        """
        return self.get_field_value(self.SWATHCOUNT__FIELD_NAME.field_name)

    def set_TileCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TileCount' on this record model
        """
        self.set_field_value(self.TILECOUNT__FIELD_NAME.field_name, value)

    def get_TileCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TileCount' from this record model
        """
        return self.get_field_value(self.TILECOUNT__FIELD_NAME.field_name)

    def set_TimeOfRun_field(self, value: Optional[str]):
        """
        Set data field with field name 'TimeOfRun' on this record model
        """
        self.set_field_value(self.TIMEOFRUN__FIELD_NAME.field_name, value)

    def get_TimeOfRun_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TimeOfRun' from this record model
        """
        return self.get_field_value(self.TIMEOFRUN__FIELD_NAME.field_name)

    def set_TimeOfUpdate_field(self, value: Optional[str]):
        """
        Set data field with field name 'TimeOfUpdate' on this record model
        """
        self.set_field_value(self.TIMEOFUPDATE__FIELD_NAME.field_name, value)

    def get_TimeOfUpdate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TimeOfUpdate' from this record model
        """
        return self.get_field_value(self.TIMEOFUPDATE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ImageCaptureConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ImageCaptureConfig
    Data Type Display Name: Image Capture Configuration (Image Capture Configurations)
    Fields: CreatedBy, InputType, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, ImageCaptureFilePath, ImageCaptureFileExtensions, ImageCaptureFileName
    """
    DATA_TYPE_NAME: Final[str] = 'ImageCaptureConfig'
    DISPLAY_NAME: Final[str] = "Image Capture Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Image Capture Configurations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    IMAGECAPTUREFILEEXTENSIONS__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureFileExtensions", FieldType.SELECTION, display_name="Image Capture File Extensions")
    IMAGECAPTUREFILENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureFileName", FieldType.STRING, display_name="Image Capture File Name")
    IMAGECAPTUREFILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureFilePath", FieldType.STRING, display_name="Image Capture File Path")
    INPUTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("InputType", FieldType.STRING, display_name="Input Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ImageCaptureFileExtensions_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageCaptureFileExtensions' on this record model
        """
        self.set_field_value(self.IMAGECAPTUREFILEEXTENSIONS__FIELD_NAME.field_name, value)

    def get_ImageCaptureFileExtensions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageCaptureFileExtensions' from this record model
        """
        return self.get_field_value(self.IMAGECAPTUREFILEEXTENSIONS__FIELD_NAME.field_name)

    def set_ImageCaptureFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageCaptureFileName' on this record model
        """
        self.set_field_value(self.IMAGECAPTUREFILENAME__FIELD_NAME.field_name, value)

    def get_ImageCaptureFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageCaptureFileName' from this record model
        """
        return self.get_field_value(self.IMAGECAPTUREFILENAME__FIELD_NAME.field_name)

    def set_ImageCaptureFilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageCaptureFilePath' on this record model
        """
        self.set_field_value(self.IMAGECAPTUREFILEPATH__FIELD_NAME.field_name, value)

    def get_ImageCaptureFilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageCaptureFilePath' from this record model
        """
        return self.get_field_value(self.IMAGECAPTUREFILEPATH__FIELD_NAME.field_name)

    def set_InputType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InputType' on this record model
        """
        self.set_field_value(self.INPUTTYPE__FIELD_NAME.field_name, value)

    def get_InputType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InputType' from this record model
        """
        return self.get_field_value(self.INPUTTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IndexAssignmentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IndexAssignment
    Data Type Display Name: Index Assignment (Index Assignments)
    Fields: IndexId, CreatedBy, IndexTag, DateCreated, MultiParentLink286, MultiParentLink200, MultiplexInstructions, DataRecordName, RowPosition, ColPosition, VeloxLastModifiedDate, VeloxLastModifiedBy, IndexType
    """
    DATA_TYPE_NAME: Final[str] = 'IndexAssignment'
    DISPLAY_NAME: Final[str] = "Index Assignment"
    PLURAL_DISPLAY_NAME: Final[str] = "Index Assignments"
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.SELECTION, display_name="Column Position")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    INDEXID__FIELD_NAME: Final[WrapperField] = WrapperField("IndexId", FieldType.STRING, display_name="Index ID")
    INDEXTAG__FIELD_NAME: Final[WrapperField] = WrapperField("IndexTag", FieldType.STRING, display_name="Index Tag")
    INDEXTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("IndexType", FieldType.PICKLIST, display_name="Index Type")
    MULTIPARENTLINK200__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink200", FieldType.MULTIPARENTLINK, display_name="Related IndexAssignmentTypes")
    MULTIPARENTLINK286__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink286", FieldType.MULTIPARENTLINK, display_name="Related IndexAssignmentBatchs")
    MULTIPLEXINSTRUCTIONS__FIELD_NAME: Final[WrapperField] = WrapperField("MultiplexInstructions", FieldType.PICKLIST, display_name="Multiplex Instructions")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.SELECTION, display_name="Row Position")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IndexId_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexId' on this record model
        """
        self.set_field_value(self.INDEXID__FIELD_NAME.field_name, value)

    def get_IndexId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexId' from this record model
        """
        return self.get_field_value(self.INDEXID__FIELD_NAME.field_name)

    def set_IndexTag_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexTag' on this record model
        """
        self.set_field_value(self.INDEXTAG__FIELD_NAME.field_name, value)

    def get_IndexTag_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexTag' from this record model
        """
        return self.get_field_value(self.INDEXTAG__FIELD_NAME.field_name)

    def set_IndexType_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexType' on this record model
        """
        self.set_field_value(self.INDEXTYPE__FIELD_NAME.field_name, value)

    def get_IndexType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexType' from this record model
        """
        return self.get_field_value(self.INDEXTYPE__FIELD_NAME.field_name)

    def set_MultiplexInstructions_field(self, value: Optional[str]):
        """
        Set data field with field name 'MultiplexInstructions' on this record model
        """
        self.set_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name, value)

    def get_MultiplexInstructions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MultiplexInstructions' from this record model
        """
        return self.get_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IndexAssignmentBatchModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IndexAssignmentBatch
    Data Type Display Name: Index Assignment Batch (Index Assignment Batches)
    Fields: BatchSize, CreatedBy, DateCreated, IndexSetName, LastUsed, MultiplexInstructions, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, IndexType
    A batch record that contains Index Assignment data records. This is used in providing support to Multiplexing specifications in index assignment.
    """
    DATA_TYPE_NAME: Final[str] = 'IndexAssignmentBatch'
    DISPLAY_NAME: Final[str] = "Index Assignment Batch"
    PLURAL_DISPLAY_NAME: Final[str] = "Index Assignment Batches"
    BATCHSIZE__FIELD_NAME: Final[WrapperField] = WrapperField("BatchSize", FieldType.LONG, display_name="Number of Index Assignments")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    INDEXSETNAME__FIELD_NAME: Final[WrapperField] = WrapperField("IndexSetName", FieldType.STRING, display_name="Indexing Set Name")
    INDEXTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("IndexType", FieldType.STRING, display_name="Index Assignment Type")
    LASTUSED__FIELD_NAME: Final[WrapperField] = WrapperField("LastUsed", FieldType.BOOLEAN, display_name="Last Used")
    MULTIPLEXINSTRUCTIONS__FIELD_NAME: Final[WrapperField] = WrapperField("MultiplexInstructions", FieldType.PICKLIST, display_name="Multiplex Instructions")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BatchSize_field(self, value: Optional[int]):
        """
        Set data field with field name 'BatchSize' on this record model
        """
        self.set_field_value(self.BATCHSIZE__FIELD_NAME.field_name, value)

    def get_BatchSize_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BatchSize' from this record model
        """
        return self.get_field_value(self.BATCHSIZE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IndexSetName_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexSetName' on this record model
        """
        self.set_field_value(self.INDEXSETNAME__FIELD_NAME.field_name, value)

    def get_IndexSetName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexSetName' from this record model
        """
        return self.get_field_value(self.INDEXSETNAME__FIELD_NAME.field_name)

    def set_IndexType_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexType' on this record model
        """
        self.set_field_value(self.INDEXTYPE__FIELD_NAME.field_name, value)

    def get_IndexType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexType' from this record model
        """
        return self.get_field_value(self.INDEXTYPE__FIELD_NAME.field_name)

    def set_LastUsed_field(self, value: Optional[bool]):
        """
        Set data field with field name 'LastUsed' on this record model
        """
        self.set_field_value(self.LASTUSED__FIELD_NAME.field_name, value)

    def get_LastUsed_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'LastUsed' from this record model
        """
        return self.get_field_value(self.LASTUSED__FIELD_NAME.field_name)

    def set_MultiplexInstructions_field(self, value: Optional[str]):
        """
        Set data field with field name 'MultiplexInstructions' on this record model
        """
        self.set_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name, value)

    def get_MultiplexInstructions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MultiplexInstructions' from this record model
        """
        return self.get_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IndexAssignmentTypeModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IndexAssignmentType
    Data Type Display Name: Index Assignment Type (Index Assignment Types)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, IndexQty, IndexType
    A data record that encompasses multiple Index Assignment records and groups them into a single type.
    """
    DATA_TYPE_NAME: Final[str] = 'IndexAssignmentType'
    DISPLAY_NAME: Final[str] = "Index Assignment Type"
    PLURAL_DISPLAY_NAME: Final[str] = "Index Assignment Types"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    INDEXQTY__FIELD_NAME: Final[WrapperField] = WrapperField("IndexQty", FieldType.LONG, display_name="Index Quantity")
    INDEXTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("IndexType", FieldType.SELECTION, display_name="Index Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IndexQty_field(self, value: Optional[int]):
        """
        Set data field with field name 'IndexQty' on this record model
        """
        self.set_field_value(self.INDEXQTY__FIELD_NAME.field_name, value)

    def get_IndexQty_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IndexQty' from this record model
        """
        return self.get_field_value(self.INDEXQTY__FIELD_NAME.field_name)

    def set_IndexType_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexType' on this record model
        """
        self.set_field_value(self.INDEXTYPE__FIELD_NAME.field_name, value)

    def get_IndexType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexType' from this record model
        """
        return self.get_field_value(self.INDEXTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IndexBarcodeModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IndexBarcode
    Data Type Display Name: Assigned Index (Assigned Indices)
    Fields: IndexId, CreatedBy, IndexTag, DateCreated, OtherSampleId, MultiplexInstructions, DataRecordName, RowPosition, ColPosition, InputAssignmentMultiRecordId, VeloxLastModifiedDate, VeloxLastModifiedBy, InputAssignmentRecordId, SampleId
    """
    DATA_TYPE_NAME: Final[str] = 'IndexBarcode'
    DISPLAY_NAME: Final[str] = "Assigned Index"
    PLURAL_DISPLAY_NAME: Final[str] = "Assigned Indices"
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.SELECTION, display_name="Column Position")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    INDEXID__FIELD_NAME: Final[WrapperField] = WrapperField("IndexId", FieldType.STRING, display_name="Index ID")
    INDEXTAG__FIELD_NAME: Final[WrapperField] = WrapperField("IndexTag", FieldType.STRING, display_name="Index Tag")
    INPUTASSIGNMENTMULTIRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("InputAssignmentMultiRecordId", FieldType.STRING, display_name="Input Assignment Multi RecordId")
    INPUTASSIGNMENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("InputAssignmentRecordId", FieldType.LONG, display_name="Input Assignment Record ID")
    MULTIPLEXINSTRUCTIONS__FIELD_NAME: Final[WrapperField] = WrapperField("MultiplexInstructions", FieldType.SELECTION, display_name="Multiplex Instructions")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.SELECTION, display_name="Row Position")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IndexId_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexId' on this record model
        """
        self.set_field_value(self.INDEXID__FIELD_NAME.field_name, value)

    def get_IndexId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexId' from this record model
        """
        return self.get_field_value(self.INDEXID__FIELD_NAME.field_name)

    def set_IndexTag_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexTag' on this record model
        """
        self.set_field_value(self.INDEXTAG__FIELD_NAME.field_name, value)

    def get_IndexTag_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexTag' from this record model
        """
        return self.get_field_value(self.INDEXTAG__FIELD_NAME.field_name)

    def set_InputAssignmentMultiRecordId_field(self, value: Optional[str]):
        """
        Set data field with field name 'InputAssignmentMultiRecordId' on this record model
        """
        self.set_field_value(self.INPUTASSIGNMENTMULTIRECORDID__FIELD_NAME.field_name, value)

    def get_InputAssignmentMultiRecordId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InputAssignmentMultiRecordId' from this record model
        """
        return self.get_field_value(self.INPUTASSIGNMENTMULTIRECORDID__FIELD_NAME.field_name)

    def set_InputAssignmentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'InputAssignmentRecordId' on this record model
        """
        self.set_field_value(self.INPUTASSIGNMENTRECORDID__FIELD_NAME.field_name, value)

    def get_InputAssignmentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'InputAssignmentRecordId' from this record model
        """
        return self.get_field_value(self.INPUTASSIGNMENTRECORDID__FIELD_NAME.field_name)

    def set_MultiplexInstructions_field(self, value: Optional[str]):
        """
        Set data field with field name 'MultiplexInstructions' on this record model
        """
        self.set_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name, value)

    def get_MultiplexInstructions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MultiplexInstructions' from this record model
        """
        return self.get_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class IndexMetricModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type IndexMetric
    Data Type Display Name: Index Metric (Index Metrics)
    Fields: IndexSeq, CreatedBy, LaneCol, Lane, DateCreated, Project, ColRead, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, NumClusters, SampleId
    <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: Final[str] = 'IndexMetric'
    DISPLAY_NAME: Final[str] = "Index Metric"
    PLURAL_DISPLAY_NAME: Final[str] = "Index Metrics"
    COLREAD__FIELD_NAME: Final[WrapperField] = WrapperField("ColRead", FieldType.STRING, display_name="Read")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    INDEXSEQ__FIELD_NAME: Final[WrapperField] = WrapperField("IndexSeq", FieldType.STRING, display_name="Index Sequence")
    LANE__FIELD_NAME: Final[WrapperField] = WrapperField("Lane", FieldType.LONG, display_name="Lane (Long Integer)")
    LANECOL__FIELD_NAME: Final[WrapperField] = WrapperField("LaneCol", FieldType.STRING, display_name="Lane")
    NUMCLUSTERS__FIELD_NAME: Final[WrapperField] = WrapperField("NumClusters", FieldType.LONG, display_name="Number of Clusters")
    PROJECT__FIELD_NAME: Final[WrapperField] = WrapperField("Project", FieldType.STRING, display_name="Project")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColRead_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColRead' on this record model
        """
        self.set_field_value(self.COLREAD__FIELD_NAME.field_name, value)

    def get_ColRead_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColRead' from this record model
        """
        return self.get_field_value(self.COLREAD__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IndexSeq_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexSeq' on this record model
        """
        self.set_field_value(self.INDEXSEQ__FIELD_NAME.field_name, value)

    def get_IndexSeq_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexSeq' from this record model
        """
        return self.get_field_value(self.INDEXSEQ__FIELD_NAME.field_name)

    def set_Lane_field(self, value: Optional[int]):
        """
        Set data field with field name 'Lane' on this record model
        """
        self.set_field_value(self.LANE__FIELD_NAME.field_name, value)

    def get_Lane_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Lane' from this record model
        """
        return self.get_field_value(self.LANE__FIELD_NAME.field_name)

    def set_LaneCol_field(self, value: Optional[str]):
        """
        Set data field with field name 'LaneCol' on this record model
        """
        self.set_field_value(self.LANECOL__FIELD_NAME.field_name, value)

    def get_LaneCol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LaneCol' from this record model
        """
        return self.get_field_value(self.LANECOL__FIELD_NAME.field_name)

    def set_NumClusters_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumClusters' on this record model
        """
        self.set_field_value(self.NUMCLUSTERS__FIELD_NAME.field_name, value)

    def get_NumClusters_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumClusters' from this record model
        """
        return self.get_field_value(self.NUMCLUSTERS__FIELD_NAME.field_name)

    def set_Project_field(self, value: Optional[str]):
        """
        Set data field with field name 'Project' on this record model
        """
        self.set_field_value(self.PROJECT__FIELD_NAME.field_name, value)

    def get_Project_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Project' from this record model
        """
        return self.get_field_value(self.PROJECT__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InhibitionCalcModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InhibitionCalc
    Data Type Display Name: Inhibition Calc (Inhibition Calcs)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, PercentInhibition, ParentSampleId, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'InhibitionCalc'
    DISPLAY_NAME: Final[str] = "Inhibition Calc"
    PLURAL_DISPLAY_NAME: Final[str] = "Inhibition Calcs"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    PARENTSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("ParentSampleId", FieldType.STRING, display_name="Parent Sample ID")
    PERCENTINHIBITION__FIELD_NAME: Final[WrapperField] = WrapperField("PercentInhibition", FieldType.DOUBLE, display_name="% Inhibition")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ParentSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ParentSampleId' on this record model
        """
        self.set_field_value(self.PARENTSAMPLEID__FIELD_NAME.field_name, value)

    def get_ParentSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ParentSampleId' from this record model
        """
        return self.get_field_value(self.PARENTSAMPLEID__FIELD_NAME.field_name)

    def set_PercentInhibition_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentInhibition' on this record model
        """
        self.set_field_value(self.PERCENTINHIBITION__FIELD_NAME.field_name, value)

    def get_PercentInhibition_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentInhibition' from this record model
        """
        return self.get_field_value(self.PERCENTINHIBITION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Instrument
    Data Type Display Name: Instrument (Instruments)
    Fields: StainingConfiguration.VeloxLastModifiedBy, InstrumentType, StainingConfiguration.CreatedBy, ImageCaptureConfig.RecordId, StainingConfiguration.HL7MessageTemplate, ImageCaptureConfig.VeloxLastModifiedDate, StainingConfiguration.DataRecordName, ImageCaptureConfig.DataRecordName, StorageLocationBarcode, ImageCaptureConfig.ImageCaptureFileName, ModelNumber, StainingConfiguration.RecordId, CreatedBy, ImageCaptureConfig.RelatedRecord308, NetworkFilePath, StainingConfiguration.DateCreated, SerialNumber, DataRecordName, DatePurchased, Barcode, StainingConfiguration.RelatedRecord308, Site, Description, IsActive, ImageCaptureConfig.VeloxLastModifiedBy, StainingConfiguration.IpAddress, DateCreated, ImageCaptureConfig.ImageCaptureFileExtensions, InstrumentName, RowPosition, WorkstationId, ColPosition, VeloxLastModifiedBy, ImageCaptureConfig.InputType, StainingConfiguration.Password, StainingConfiguration.AvailableStainingProtocols, StainingConfiguration.PortNumber, FilePath, ImageCaptureConfig.ImageCaptureFilePath, StainingConfiguration.WebhookEndpoint, ReservedDate, Vendor, StorageUnitPath, StainingConfiguration.IntegrationURL, StainingConfiguration.VeloxLastModifiedDate, StainingConfiguration.UserName, VeloxLastModifiedDate, ImageCaptureConfig.CreatedBy, ImageCaptureConfig.DateCreated
    <!-- CONFIG: Environmental -->
    """
    DATA_TYPE_NAME: Final[str] = 'Instrument'
    DISPLAY_NAME: Final[str] = "Instrument"
    PLURAL_DISPLAY_NAME: Final[str] = "Instruments"
    BARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("Barcode", FieldType.STRING, display_name="Barcode")
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.SELECTION, display_name="Column Position")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DATEPURCHASED__FIELD_NAME: Final[WrapperField] = WrapperField("DatePurchased", FieldType.DATE, display_name="Date Purchased")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    IMAGECAPTURECONFIG_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureConfig.CreatedBy", FieldType.STRING, display_name="Created By")
    IMAGECAPTURECONFIG_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureConfig.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    IMAGECAPTURECONFIG_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureConfig.DateCreated", FieldType.DATE, display_name="Date Created")
    IMAGECAPTURECONFIG_EXT_IMAGECAPTUREFILEEXTENSIONS__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureConfig.ImageCaptureFileExtensions", FieldType.SELECTION, display_name="Image Capture File Extensions")
    IMAGECAPTURECONFIG_EXT_IMAGECAPTUREFILENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureConfig.ImageCaptureFileName", FieldType.STRING, display_name="Image Capture File Name")
    IMAGECAPTURECONFIG_EXT_IMAGECAPTUREFILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureConfig.ImageCaptureFilePath", FieldType.STRING, display_name="Image Capture File Path")
    IMAGECAPTURECONFIG_EXT_INPUTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureConfig.InputType", FieldType.STRING, display_name="Input Type")
    IMAGECAPTURECONFIG_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureConfig.RecordId", FieldType.LONG, display_name="Record ID")
    IMAGECAPTURECONFIG_EXT_RELATEDRECORD308__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureConfig.RelatedRecord308", FieldType.PARENTLINK, display_name="Linked Instrument")
    IMAGECAPTURECONFIG_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureConfig.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    IMAGECAPTURECONFIG_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ImageCaptureConfig.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    INSTRUMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentName", FieldType.STRING, display_name="Instrument Name")
    INSTRUMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentType", FieldType.SELECTION, display_name="Instrument Type")
    ISACTIVE__FIELD_NAME: Final[WrapperField] = WrapperField("IsActive", FieldType.BOOLEAN, display_name="Is Active?")
    MODELNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ModelNumber", FieldType.STRING, display_name="Model Number")
    NETWORKFILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("NetworkFilePath", FieldType.STRING, display_name="Network Path")
    RESERVEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ReservedDate", FieldType.DATE, display_name="Reserved Date")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.SELECTION, display_name="Row Position")
    SERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("SerialNumber", FieldType.STRING, display_name="Serial Number")
    SITE__FIELD_NAME: Final[WrapperField] = WrapperField("Site", FieldType.STRING, display_name="Site")
    STAININGCONFIGURATION_EXT_AVAILABLESTAININGPROTOCOLS__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.AvailableStainingProtocols", FieldType.SELECTION, display_name="Available Staining Protocols")
    STAININGCONFIGURATION_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.CreatedBy", FieldType.STRING, display_name="Created By")
    STAININGCONFIGURATION_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    STAININGCONFIGURATION_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.DateCreated", FieldType.DATE, display_name="Date Created")
    STAININGCONFIGURATION_EXT_HL7MESSAGETEMPLATE__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.HL7MessageTemplate", FieldType.STRING, display_name="HL7 Message Template")
    STAININGCONFIGURATION_EXT_INTEGRATIONURL__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.IntegrationURL", FieldType.STRING, display_name="Integration URL")
    STAININGCONFIGURATION_EXT_IPADDRESS__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.IpAddress", FieldType.STRING, display_name="Stainer IP Address")
    STAININGCONFIGURATION_EXT_PASSWORD__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.Password", FieldType.STRING, display_name="Password")
    STAININGCONFIGURATION_EXT_PORTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.PortNumber", FieldType.INTEGER, display_name="Stainer Port Number")
    STAININGCONFIGURATION_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.RecordId", FieldType.LONG, display_name="Record ID")
    STAININGCONFIGURATION_EXT_RELATEDRECORD308__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.RelatedRecord308", FieldType.PARENTLINK, display_name="Linked Instrument")
    STAININGCONFIGURATION_EXT_USERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.UserName", FieldType.STRING, display_name="User Name")
    STAININGCONFIGURATION_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    STAININGCONFIGURATION_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    STAININGCONFIGURATION_EXT_WEBHOOKENDPOINT__FIELD_NAME: Final[WrapperField] = WrapperField("StainingConfiguration.WebhookEndpoint", FieldType.STRING, display_name="Webhook Endpoint")
    STORAGELOCATIONBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("StorageLocationBarcode", FieldType.SELECTION, display_name="Storage Location Barcode")
    STORAGEUNITPATH__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitPath", FieldType.STRING, display_name="Storage Location Path")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.STRING, display_name="Vendor")
    WORKSTATIONID__FIELD_NAME: Final[WrapperField] = WrapperField("WorkstationId", FieldType.STRING, display_name="Workstation ID")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Barcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Barcode' on this record model
        """
        self.set_field_value(self.BARCODE__FIELD_NAME.field_name, value)

    def get_Barcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Barcode' from this record model
        """
        return self.get_field_value(self.BARCODE__FIELD_NAME.field_name)

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DatePurchased_field(self, value: Optional[int]):
        """
        Set data field with field name 'DatePurchased' on this record model
        """
        self.set_field_value(self.DATEPURCHASED__FIELD_NAME.field_name, value)

    def get_DatePurchased_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DatePurchased' from this record model
        """
        return self.get_field_value(self.DATEPURCHASED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_ImageCaptureConfigCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageCaptureConfig.CreatedBy' on this record model
        """
        self.set_field_value(self.IMAGECAPTURECONFIG_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_ImageCaptureConfigCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageCaptureConfig.CreatedBy' from this record model
        """
        return self.get_field_value(self.IMAGECAPTURECONFIG_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_ImageCaptureConfigDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'ImageCaptureConfig.DateCreated' on this record model
        """
        self.set_field_value(self.IMAGECAPTURECONFIG_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_ImageCaptureConfigDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ImageCaptureConfig.DateCreated' from this record model
        """
        return self.get_field_value(self.IMAGECAPTURECONFIG_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_ImageCaptureConfigImageCaptureFileExtensions_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageCaptureConfig.ImageCaptureFileExtensions' on this record model
        """
        self.set_field_value(self.IMAGECAPTURECONFIG_EXT_IMAGECAPTUREFILEEXTENSIONS__FIELD_NAME.field_name, value)

    def get_ImageCaptureConfigImageCaptureFileExtensions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageCaptureConfig.ImageCaptureFileExtensions' from this record model
        """
        return self.get_field_value(self.IMAGECAPTURECONFIG_EXT_IMAGECAPTUREFILEEXTENSIONS__FIELD_NAME.field_name)

    def set_ImageCaptureConfigImageCaptureFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageCaptureConfig.ImageCaptureFileName' on this record model
        """
        self.set_field_value(self.IMAGECAPTURECONFIG_EXT_IMAGECAPTUREFILENAME__FIELD_NAME.field_name, value)

    def get_ImageCaptureConfigImageCaptureFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageCaptureConfig.ImageCaptureFileName' from this record model
        """
        return self.get_field_value(self.IMAGECAPTURECONFIG_EXT_IMAGECAPTUREFILENAME__FIELD_NAME.field_name)

    def set_ImageCaptureConfigImageCaptureFilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageCaptureConfig.ImageCaptureFilePath' on this record model
        """
        self.set_field_value(self.IMAGECAPTURECONFIG_EXT_IMAGECAPTUREFILEPATH__FIELD_NAME.field_name, value)

    def get_ImageCaptureConfigImageCaptureFilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageCaptureConfig.ImageCaptureFilePath' from this record model
        """
        return self.get_field_value(self.IMAGECAPTURECONFIG_EXT_IMAGECAPTUREFILEPATH__FIELD_NAME.field_name)

    def set_ImageCaptureConfigInputType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageCaptureConfig.InputType' on this record model
        """
        self.set_field_value(self.IMAGECAPTURECONFIG_EXT_INPUTTYPE__FIELD_NAME.field_name, value)

    def get_ImageCaptureConfigInputType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageCaptureConfig.InputType' from this record model
        """
        return self.get_field_value(self.IMAGECAPTURECONFIG_EXT_INPUTTYPE__FIELD_NAME.field_name)

    def set_ImageCaptureConfigRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ImageCaptureConfig.RecordId' on this record model
        """
        self.set_field_value(self.IMAGECAPTURECONFIG_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_ImageCaptureConfigRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ImageCaptureConfig.RecordId' from this record model
        """
        return self.get_field_value(self.IMAGECAPTURECONFIG_EXT_RECORDID__FIELD_NAME.field_name)

    def set_ImageCaptureConfigVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImageCaptureConfig.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.IMAGECAPTURECONFIG_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_ImageCaptureConfigVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImageCaptureConfig.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.IMAGECAPTURECONFIG_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_ImageCaptureConfigVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ImageCaptureConfig.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.IMAGECAPTURECONFIG_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_ImageCaptureConfigVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ImageCaptureConfig.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.IMAGECAPTURECONFIG_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_InstrumentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentName' on this record model
        """
        self.set_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name, value)

    def get_InstrumentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentName' from this record model
        """
        return self.get_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name)

    def set_InstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentType' on this record model
        """
        self.set_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_InstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentType' from this record model
        """
        return self.get_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_IsActive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsActive' on this record model
        """
        self.set_field_value(self.ISACTIVE__FIELD_NAME.field_name, value)

    def get_IsActive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsActive' from this record model
        """
        return self.get_field_value(self.ISACTIVE__FIELD_NAME.field_name)

    def set_ModelNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ModelNumber' on this record model
        """
        self.set_field_value(self.MODELNUMBER__FIELD_NAME.field_name, value)

    def get_ModelNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ModelNumber' from this record model
        """
        return self.get_field_value(self.MODELNUMBER__FIELD_NAME.field_name)

    def set_NetworkFilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'NetworkFilePath' on this record model
        """
        self.set_field_value(self.NETWORKFILEPATH__FIELD_NAME.field_name, value)

    def get_NetworkFilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NetworkFilePath' from this record model
        """
        return self.get_field_value(self.NETWORKFILEPATH__FIELD_NAME.field_name)

    def set_ReservedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReservedDate' on this record model
        """
        self.set_field_value(self.RESERVEDDATE__FIELD_NAME.field_name, value)

    def get_ReservedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReservedDate' from this record model
        """
        return self.get_field_value(self.RESERVEDDATE__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'SerialNumber' on this record model
        """
        self.set_field_value(self.SERIALNUMBER__FIELD_NAME.field_name, value)

    def get_SerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SerialNumber' from this record model
        """
        return self.get_field_value(self.SERIALNUMBER__FIELD_NAME.field_name)

    def set_Site_field(self, value: Optional[str]):
        """
        Set data field with field name 'Site' on this record model
        """
        self.set_field_value(self.SITE__FIELD_NAME.field_name, value)

    def get_Site_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Site' from this record model
        """
        return self.get_field_value(self.SITE__FIELD_NAME.field_name)

    def set_StainingConfigurationAvailableStainingProtocols_field(self, value: Optional[str]):
        """
        Set data field with field name 'StainingConfiguration.AvailableStainingProtocols' on this record model
        """
        self.set_field_value(self.STAININGCONFIGURATION_EXT_AVAILABLESTAININGPROTOCOLS__FIELD_NAME.field_name, value)

    def get_StainingConfigurationAvailableStainingProtocols_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StainingConfiguration.AvailableStainingProtocols' from this record model
        """
        return self.get_field_value(self.STAININGCONFIGURATION_EXT_AVAILABLESTAININGPROTOCOLS__FIELD_NAME.field_name)

    def set_StainingConfigurationCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'StainingConfiguration.CreatedBy' on this record model
        """
        self.set_field_value(self.STAININGCONFIGURATION_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_StainingConfigurationCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StainingConfiguration.CreatedBy' from this record model
        """
        return self.get_field_value(self.STAININGCONFIGURATION_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_StainingConfigurationDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'StainingConfiguration.DateCreated' on this record model
        """
        self.set_field_value(self.STAININGCONFIGURATION_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_StainingConfigurationDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StainingConfiguration.DateCreated' from this record model
        """
        return self.get_field_value(self.STAININGCONFIGURATION_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_StainingConfigurationHL7MessageTemplate_field(self, value: Optional[str]):
        """
        Set data field with field name 'StainingConfiguration.HL7MessageTemplate' on this record model
        """
        self.set_field_value(self.STAININGCONFIGURATION_EXT_HL7MESSAGETEMPLATE__FIELD_NAME.field_name, value)

    def get_StainingConfigurationHL7MessageTemplate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StainingConfiguration.HL7MessageTemplate' from this record model
        """
        return self.get_field_value(self.STAININGCONFIGURATION_EXT_HL7MESSAGETEMPLATE__FIELD_NAME.field_name)

    def set_StainingConfigurationIntegrationURL_field(self, value: Optional[str]):
        """
        Set data field with field name 'StainingConfiguration.IntegrationURL' on this record model
        """
        self.set_field_value(self.STAININGCONFIGURATION_EXT_INTEGRATIONURL__FIELD_NAME.field_name, value)

    def get_StainingConfigurationIntegrationURL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StainingConfiguration.IntegrationURL' from this record model
        """
        return self.get_field_value(self.STAININGCONFIGURATION_EXT_INTEGRATIONURL__FIELD_NAME.field_name)

    def set_StainingConfigurationIpAddress_field(self, value: Optional[str]):
        """
        Set data field with field name 'StainingConfiguration.IpAddress' on this record model
        """
        self.set_field_value(self.STAININGCONFIGURATION_EXT_IPADDRESS__FIELD_NAME.field_name, value)

    def get_StainingConfigurationIpAddress_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StainingConfiguration.IpAddress' from this record model
        """
        return self.get_field_value(self.STAININGCONFIGURATION_EXT_IPADDRESS__FIELD_NAME.field_name)

    def set_StainingConfigurationPassword_field(self, value: Optional[str]):
        """
        Set data field with field name 'StainingConfiguration.Password' on this record model
        """
        self.set_field_value(self.STAININGCONFIGURATION_EXT_PASSWORD__FIELD_NAME.field_name, value)

    def get_StainingConfigurationPassword_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StainingConfiguration.Password' from this record model
        """
        return self.get_field_value(self.STAININGCONFIGURATION_EXT_PASSWORD__FIELD_NAME.field_name)

    def set_StainingConfigurationPortNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'StainingConfiguration.PortNumber' on this record model
        """
        self.set_field_value(self.STAININGCONFIGURATION_EXT_PORTNUMBER__FIELD_NAME.field_name, value)

    def get_StainingConfigurationPortNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StainingConfiguration.PortNumber' from this record model
        """
        return self.get_field_value(self.STAININGCONFIGURATION_EXT_PORTNUMBER__FIELD_NAME.field_name)

    def set_StainingConfigurationRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'StainingConfiguration.RecordId' on this record model
        """
        self.set_field_value(self.STAININGCONFIGURATION_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_StainingConfigurationRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StainingConfiguration.RecordId' from this record model
        """
        return self.get_field_value(self.STAININGCONFIGURATION_EXT_RECORDID__FIELD_NAME.field_name)

    def set_StainingConfigurationUserName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StainingConfiguration.UserName' on this record model
        """
        self.set_field_value(self.STAININGCONFIGURATION_EXT_USERNAME__FIELD_NAME.field_name, value)

    def get_StainingConfigurationUserName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StainingConfiguration.UserName' from this record model
        """
        return self.get_field_value(self.STAININGCONFIGURATION_EXT_USERNAME__FIELD_NAME.field_name)

    def set_StainingConfigurationVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'StainingConfiguration.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.STAININGCONFIGURATION_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_StainingConfigurationVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StainingConfiguration.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.STAININGCONFIGURATION_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_StainingConfigurationVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StainingConfiguration.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.STAININGCONFIGURATION_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_StainingConfigurationVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StainingConfiguration.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.STAININGCONFIGURATION_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_StainingConfigurationWebhookEndpoint_field(self, value: Optional[str]):
        """
        Set data field with field name 'StainingConfiguration.WebhookEndpoint' on this record model
        """
        self.set_field_value(self.STAININGCONFIGURATION_EXT_WEBHOOKENDPOINT__FIELD_NAME.field_name, value)

    def get_StainingConfigurationWebhookEndpoint_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StainingConfiguration.WebhookEndpoint' from this record model
        """
        return self.get_field_value(self.STAININGCONFIGURATION_EXT_WEBHOOKENDPOINT__FIELD_NAME.field_name)

    def set_StorageLocationBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageLocationBarcode' on this record model
        """
        self.set_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name, value)

    def get_StorageLocationBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageLocationBarcode' from this record model
        """
        return self.get_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)

    def set_WorkstationId_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkstationId' on this record model
        """
        self.set_field_value(self.WORKSTATIONID__FIELD_NAME.field_name, value)

    def get_WorkstationId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkstationId' from this record model
        """
        return self.get_field_value(self.WORKSTATIONID__FIELD_NAME.field_name)


class InstrumentConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentConfig
    Data Type Display Name: Instrument Configuration (Instrument Configurations)
    Fields: FileKeyIdentifier3, FileKeyIdentifier2, FileKeyIdentifier1, InstrumentType, DateCreated, FileParser, RecordHandler, FileCreator, RecordProcessor, VeloxLastModifiedBy, SupportsMolarity, CreatedBy, InstrumentConfigurationName, DataRecordName, ContainsKey2, FileDifferentiator, ContainsKey3, Presenter, ContainsKey1, VeloxLastModifiedDate, FileLoader, Validator, OutputFileCreator
    """
    DATA_TYPE_NAME: Final[str] = 'InstrumentConfig'
    DISPLAY_NAME: Final[str] = "Instrument Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Instrument Configurations"
    CONTAINSKEY1__FIELD_NAME: Final[WrapperField] = WrapperField("ContainsKey1", FieldType.BOOLEAN, display_name="Contains Key 1")
    CONTAINSKEY2__FIELD_NAME: Final[WrapperField] = WrapperField("ContainsKey2", FieldType.BOOLEAN, display_name="Contains Key 2")
    CONTAINSKEY3__FIELD_NAME: Final[WrapperField] = WrapperField("ContainsKey3", FieldType.BOOLEAN, display_name="Contains Key 3")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILECREATOR__FIELD_NAME: Final[WrapperField] = WrapperField("FileCreator", FieldType.SELECTION, display_name="File Creator Plugin Name")
    FILEDIFFERENTIATOR__FIELD_NAME: Final[WrapperField] = WrapperField("FileDifferentiator", FieldType.SELECTION, display_name="File Differentiator Plugin Name")
    FILEKEYIDENTIFIER1__FIELD_NAME: Final[WrapperField] = WrapperField("FileKeyIdentifier1", FieldType.STRING, display_name="File Key Identifier 1")
    FILEKEYIDENTIFIER2__FIELD_NAME: Final[WrapperField] = WrapperField("FileKeyIdentifier2", FieldType.STRING, display_name="File Key Identifier 2")
    FILEKEYIDENTIFIER3__FIELD_NAME: Final[WrapperField] = WrapperField("FileKeyIdentifier3", FieldType.STRING, display_name="File Key Identifier 3")
    FILELOADER__FIELD_NAME: Final[WrapperField] = WrapperField("FileLoader", FieldType.SELECTION, display_name="File Loader Plugin Name")
    FILEPARSER__FIELD_NAME: Final[WrapperField] = WrapperField("FileParser", FieldType.SELECTION, display_name="File Parser Plugin Name")
    INSTRUMENTCONFIGURATIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentConfigurationName", FieldType.STRING, display_name="Instrument Configuration Name")
    INSTRUMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentType", FieldType.STRING, display_name="Instrument Type")
    OUTPUTFILECREATOR__FIELD_NAME: Final[WrapperField] = WrapperField("OutputFileCreator", FieldType.SELECTION, display_name="Output File Creator Plugin Name")
    PRESENTER__FIELD_NAME: Final[WrapperField] = WrapperField("Presenter", FieldType.SELECTION, display_name="Record Presenter Plugin Name")
    RECORDHANDLER__FIELD_NAME: Final[WrapperField] = WrapperField("RecordHandler", FieldType.SELECTION, display_name="Record Handler Plugin Name")
    RECORDPROCESSOR__FIELD_NAME: Final[WrapperField] = WrapperField("RecordProcessor", FieldType.SELECTION, display_name="Record Processor Plugin Name(s)")
    SUPPORTSMOLARITY__FIELD_NAME: Final[WrapperField] = WrapperField("SupportsMolarity", FieldType.BOOLEAN, display_name="Supports Molarity")
    VALIDATOR__FIELD_NAME: Final[WrapperField] = WrapperField("Validator", FieldType.SELECTION, display_name="Validator Plugin Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ContainsKey1_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ContainsKey1' on this record model
        """
        self.set_field_value(self.CONTAINSKEY1__FIELD_NAME.field_name, value)

    def get_ContainsKey1_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ContainsKey1' from this record model
        """
        return self.get_field_value(self.CONTAINSKEY1__FIELD_NAME.field_name)

    def set_ContainsKey2_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ContainsKey2' on this record model
        """
        self.set_field_value(self.CONTAINSKEY2__FIELD_NAME.field_name, value)

    def get_ContainsKey2_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ContainsKey2' from this record model
        """
        return self.get_field_value(self.CONTAINSKEY2__FIELD_NAME.field_name)

    def set_ContainsKey3_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ContainsKey3' on this record model
        """
        self.set_field_value(self.CONTAINSKEY3__FIELD_NAME.field_name, value)

    def get_ContainsKey3_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ContainsKey3' from this record model
        """
        return self.get_field_value(self.CONTAINSKEY3__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FileCreator_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileCreator' on this record model
        """
        self.set_field_value(self.FILECREATOR__FIELD_NAME.field_name, value)

    def get_FileCreator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileCreator' from this record model
        """
        return self.get_field_value(self.FILECREATOR__FIELD_NAME.field_name)

    def set_FileDifferentiator_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileDifferentiator' on this record model
        """
        self.set_field_value(self.FILEDIFFERENTIATOR__FIELD_NAME.field_name, value)

    def get_FileDifferentiator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileDifferentiator' from this record model
        """
        return self.get_field_value(self.FILEDIFFERENTIATOR__FIELD_NAME.field_name)

    def set_FileKeyIdentifier1_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileKeyIdentifier1' on this record model
        """
        self.set_field_value(self.FILEKEYIDENTIFIER1__FIELD_NAME.field_name, value)

    def get_FileKeyIdentifier1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileKeyIdentifier1' from this record model
        """
        return self.get_field_value(self.FILEKEYIDENTIFIER1__FIELD_NAME.field_name)

    def set_FileKeyIdentifier2_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileKeyIdentifier2' on this record model
        """
        self.set_field_value(self.FILEKEYIDENTIFIER2__FIELD_NAME.field_name, value)

    def get_FileKeyIdentifier2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileKeyIdentifier2' from this record model
        """
        return self.get_field_value(self.FILEKEYIDENTIFIER2__FIELD_NAME.field_name)

    def set_FileKeyIdentifier3_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileKeyIdentifier3' on this record model
        """
        self.set_field_value(self.FILEKEYIDENTIFIER3__FIELD_NAME.field_name, value)

    def get_FileKeyIdentifier3_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileKeyIdentifier3' from this record model
        """
        return self.get_field_value(self.FILEKEYIDENTIFIER3__FIELD_NAME.field_name)

    def set_FileLoader_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileLoader' on this record model
        """
        self.set_field_value(self.FILELOADER__FIELD_NAME.field_name, value)

    def get_FileLoader_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileLoader' from this record model
        """
        return self.get_field_value(self.FILELOADER__FIELD_NAME.field_name)

    def set_FileParser_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileParser' on this record model
        """
        self.set_field_value(self.FILEPARSER__FIELD_NAME.field_name, value)

    def get_FileParser_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileParser' from this record model
        """
        return self.get_field_value(self.FILEPARSER__FIELD_NAME.field_name)

    def set_InstrumentConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentConfigurationName' on this record model
        """
        self.set_field_value(self.INSTRUMENTCONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_InstrumentConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentConfigurationName' from this record model
        """
        return self.get_field_value(self.INSTRUMENTCONFIGURATIONNAME__FIELD_NAME.field_name)

    def set_InstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentType' on this record model
        """
        self.set_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_InstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentType' from this record model
        """
        return self.get_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_OutputFileCreator_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputFileCreator' on this record model
        """
        self.set_field_value(self.OUTPUTFILECREATOR__FIELD_NAME.field_name, value)

    def get_OutputFileCreator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputFileCreator' from this record model
        """
        return self.get_field_value(self.OUTPUTFILECREATOR__FIELD_NAME.field_name)

    def set_Presenter_field(self, value: Optional[str]):
        """
        Set data field with field name 'Presenter' on this record model
        """
        self.set_field_value(self.PRESENTER__FIELD_NAME.field_name, value)

    def get_Presenter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Presenter' from this record model
        """
        return self.get_field_value(self.PRESENTER__FIELD_NAME.field_name)

    def set_RecordHandler_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecordHandler' on this record model
        """
        self.set_field_value(self.RECORDHANDLER__FIELD_NAME.field_name, value)

    def get_RecordHandler_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecordHandler' from this record model
        """
        return self.get_field_value(self.RECORDHANDLER__FIELD_NAME.field_name)

    def set_RecordProcessor_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecordProcessor' on this record model
        """
        self.set_field_value(self.RECORDPROCESSOR__FIELD_NAME.field_name, value)

    def get_RecordProcessor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecordProcessor' from this record model
        """
        return self.get_field_value(self.RECORDPROCESSOR__FIELD_NAME.field_name)

    def set_SupportsMolarity_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SupportsMolarity' on this record model
        """
        self.set_field_value(self.SUPPORTSMOLARITY__FIELD_NAME.field_name, value)

    def get_SupportsMolarity_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SupportsMolarity' from this record model
        """
        return self.get_field_value(self.SUPPORTSMOLARITY__FIELD_NAME.field_name)

    def set_Validator_field(self, value: Optional[str]):
        """
        Set data field with field name 'Validator' on this record model
        """
        self.set_field_value(self.VALIDATOR__FIELD_NAME.field_name, value)

    def get_Validator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Validator' from this record model
        """
        return self.get_field_value(self.VALIDATOR__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentConsumableDatumModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentConsumableDatum
    Data Type Display Name: Instrument Consumable (Instrument Consumable)
    Fields: CreatedBy, WorkflowName, DateCreated, ActiveTaskId, OtherSampleId, ExperimentRecordId, ActiveWorkflowId, DataRecordName, TaskName, ExperimentType, VeloxLastModifiedDate, VeloxLastModifiedBy, SampleId
    """
    DATA_TYPE_NAME: Final[str] = 'InstrumentConsumableDatum'
    DISPLAY_NAME: Final[str] = "Instrument Consumable"
    PLURAL_DISPLAY_NAME: Final[str] = "Instrument Consumable"
    ACTIVETASKID__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveTaskId", FieldType.LONG, display_name="Active Task ID")
    ACTIVEWORKFLOWID__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveWorkflowId", FieldType.LONG, display_name="Active Workflow ID")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPERIMENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentRecordId", FieldType.LONG, display_name="Experiment Record ID")
    EXPERIMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentType", FieldType.STRING, display_name="Experiment Type")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    TASKNAME__FIELD_NAME: Final[WrapperField] = WrapperField("TaskName", FieldType.STRING, display_name="Task Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WORKFLOWNAME__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowName", FieldType.STRING, display_name="Workflow Name")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveTaskId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveTaskId' on this record model
        """
        self.set_field_value(self.ACTIVETASKID__FIELD_NAME.field_name, value)

    def get_ActiveTaskId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveTaskId' from this record model
        """
        return self.get_field_value(self.ACTIVETASKID__FIELD_NAME.field_name)

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExperimentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExperimentRecordId' on this record model
        """
        self.set_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name, value)

    def get_ExperimentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExperimentRecordId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name)

    def set_ExperimentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentType' on this record model
        """
        self.set_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name, value)

    def get_ExperimentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentType' from this record model
        """
        return self.get_field_value(self.EXPERIMENTTYPE__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_TaskName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TaskName' on this record model
        """
        self.set_field_value(self.TASKNAME__FIELD_NAME.field_name, value)

    def get_TaskName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TaskName' from this record model
        """
        return self.get_field_value(self.TASKNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowName' on this record model
        """
        self.set_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_WorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowName' from this record model
        """
        return self.get_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name)


class InstrumentFieldMapModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentFieldMap
    Data Type Display Name: Instrument Field Map (Instrument Field Maps)
    Fields: ToRecordField, FromFileField, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'InstrumentFieldMap'
    DISPLAY_NAME: Final[str] = "Instrument Field Map"
    PLURAL_DISPLAY_NAME: Final[str] = "Instrument Field Maps"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FROMFILEFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("FromFileField", FieldType.STRING, display_name="From File Field")
    TORECORDFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("ToRecordField", FieldType.SELECTION, display_name="To Record Field")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FromFileField_field(self, value: Optional[str]):
        """
        Set data field with field name 'FromFileField' on this record model
        """
        self.set_field_value(self.FROMFILEFIELD__FIELD_NAME.field_name, value)

    def get_FromFileField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FromFileField' from this record model
        """
        return self.get_field_value(self.FROMFILEFIELD__FIELD_NAME.field_name)

    def set_ToRecordField_field(self, value: Optional[str]):
        """
        Set data field with field name 'ToRecordField' on this record model
        """
        self.set_field_value(self.TORECORDFIELD__FIELD_NAME.field_name, value)

    def get_ToRecordField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ToRecordField' from this record model
        """
        return self.get_field_value(self.TORECORDFIELD__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentImporterMapConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentImporterMapConfig
    Data Type Display Name: Instrument Importer Mapping Configuration (Instrument Importer Mapping Configurations)
    Fields: MappingGroup, MappingOrder, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: Final[str] = 'InstrumentImporterMapConfig'
    DISPLAY_NAME: Final[str] = "Instrument Importer Mapping Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Instrument Importer Mapping Configurations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MAPPINGGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("MappingGroup", FieldType.STRING, display_name="Mapping Group")
    MAPPINGORDER__FIELD_NAME: Final[WrapperField] = WrapperField("MappingOrder", FieldType.SHORT, display_name="Mapping Group Order")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_MappingGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingGroup' on this record model
        """
        self.set_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name, value)

    def get_MappingGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingGroup' from this record model
        """
        return self.get_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name)

    def set_MappingOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'MappingOrder' on this record model
        """
        self.set_field_value(self.MAPPINGORDER__FIELD_NAME.field_name, value)

    def get_MappingOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MappingOrder' from this record model
        """
        return self.get_field_value(self.MAPPINGORDER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentImporterMappingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentImporterMapping
    Data Type Display Name: Instrument Importer Mapping (Instrument Importer Mappings)
    Fields: MappingGroup, MappingOrder, CreatedBy, DateCreated, DataRecordName, DataField, DisplayName, VeloxLastModifiedDate, VeloxLastModifiedBy, DataType, MappingName
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: Final[str] = 'InstrumentImporterMapping'
    DISPLAY_NAME: Final[str] = "Instrument Importer Mapping"
    PLURAL_DISPLAY_NAME: Final[str] = "Instrument Importer Mappings"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATAFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("DataField", FieldType.SELECTION, display_name="Data Field")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DataType", FieldType.PICKLIST, display_name="Data Type")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DISPLAYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DisplayName", FieldType.STRING, display_name="Data Field Display Name")
    MAPPINGGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("MappingGroup", FieldType.STRING, display_name="Mapping Group")
    MAPPINGNAME__FIELD_NAME: Final[WrapperField] = WrapperField("MappingName", FieldType.STRING, display_name="Mapping Name")
    MAPPINGORDER__FIELD_NAME: Final[WrapperField] = WrapperField("MappingOrder", FieldType.SHORT, display_name="Mapping Group Order")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataField_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataField' on this record model
        """
        self.set_field_value(self.DATAFIELD__FIELD_NAME.field_name, value)

    def get_DataField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataField' from this record model
        """
        return self.get_field_value(self.DATAFIELD__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DisplayName' on this record model
        """
        self.set_field_value(self.DISPLAYNAME__FIELD_NAME.field_name, value)

    def get_DisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DisplayName' from this record model
        """
        return self.get_field_value(self.DISPLAYNAME__FIELD_NAME.field_name)

    def set_MappingGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingGroup' on this record model
        """
        self.set_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name, value)

    def get_MappingGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingGroup' from this record model
        """
        return self.get_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name)

    def set_MappingName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingName' on this record model
        """
        self.set_field_value(self.MAPPINGNAME__FIELD_NAME.field_name, value)

    def get_MappingName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingName' from this record model
        """
        return self.get_field_value(self.MAPPINGNAME__FIELD_NAME.field_name)

    def set_MappingOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'MappingOrder' on this record model
        """
        self.set_field_value(self.MAPPINGORDER__FIELD_NAME.field_name, value)

    def get_MappingOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MappingOrder' from this record model
        """
        return self.get_field_value(self.MAPPINGORDER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentMaintenanceReceiptModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentMaintenanceReceipt
    Data Type Display Name: Instrument Maintenance Log (Instrument Maintenance Logs)
    Fields: MaintenanceComments, CreatedBy, ApproverGroupName, DateCreated, ApproverUsername, NextDueDate, ApproverComment, MaintenancePendingDate, ActiveWorkflowId, MaintenancePerformedDate, DataRecordName, MaintenancePerformedBy, VeloxLastModifiedDate, VeloxLastModifiedBy, ApproverName, DateApproved, ActiveWorkflowName, MaintenanceStatus
    """
    DATA_TYPE_NAME: Final[str] = 'InstrumentMaintenanceReceipt'
    DISPLAY_NAME: Final[str] = "Instrument Maintenance Log"
    PLURAL_DISPLAY_NAME: Final[str] = "Instrument Maintenance Logs"
    ACTIVEWORKFLOWID__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveWorkflowId", FieldType.LONG, display_name="Active Workflow ID")
    ACTIVEWORKFLOWNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveWorkflowName", FieldType.SELECTION, display_name="Maintenance Workflow Name")
    APPROVERCOMMENT__FIELD_NAME: Final[WrapperField] = WrapperField("ApproverComment", FieldType.STRING, display_name="Reviewer Comment")
    APPROVERGROUPNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ApproverGroupName", FieldType.STRING, display_name="Reviewer Group Name")
    APPROVERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ApproverName", FieldType.STRING, display_name="Reviewer Name")
    APPROVERUSERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ApproverUsername", FieldType.STRING, display_name="Reviewer Username")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATEAPPROVED__FIELD_NAME: Final[WrapperField] = WrapperField("DateApproved", FieldType.DATE, display_name="Date Reviewed")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MAINTENANCECOMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("MaintenanceComments", FieldType.STRING, display_name="Maintenance Comments")
    MAINTENANCEPENDINGDATE__FIELD_NAME: Final[WrapperField] = WrapperField("MaintenancePendingDate", FieldType.DATE, display_name="Pending Completion Date")
    MAINTENANCEPERFORMEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("MaintenancePerformedBy", FieldType.SELECTION, display_name="Performed By")
    MAINTENANCEPERFORMEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("MaintenancePerformedDate", FieldType.DATE, display_name="Completion Date")
    MAINTENANCESTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("MaintenanceStatus", FieldType.PICKLIST, display_name="Maintenance Status")
    NEXTDUEDATE__FIELD_NAME: Final[WrapperField] = WrapperField("NextDueDate", FieldType.DATE, display_name="Next Maintenance Due Date")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def set_ActiveWorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActiveWorkflowName' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActiveWorkflowName' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWNAME__FIELD_NAME.field_name)

    def set_ApproverComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApproverComment' on this record model
        """
        self.set_field_value(self.APPROVERCOMMENT__FIELD_NAME.field_name, value)

    def get_ApproverComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApproverComment' from this record model
        """
        return self.get_field_value(self.APPROVERCOMMENT__FIELD_NAME.field_name)

    def set_ApproverGroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApproverGroupName' on this record model
        """
        self.set_field_value(self.APPROVERGROUPNAME__FIELD_NAME.field_name, value)

    def get_ApproverGroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApproverGroupName' from this record model
        """
        return self.get_field_value(self.APPROVERGROUPNAME__FIELD_NAME.field_name)

    def set_ApproverName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApproverName' on this record model
        """
        self.set_field_value(self.APPROVERNAME__FIELD_NAME.field_name, value)

    def get_ApproverName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApproverName' from this record model
        """
        return self.get_field_value(self.APPROVERNAME__FIELD_NAME.field_name)

    def set_ApproverUsername_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApproverUsername' on this record model
        """
        self.set_field_value(self.APPROVERUSERNAME__FIELD_NAME.field_name, value)

    def get_ApproverUsername_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApproverUsername' from this record model
        """
        return self.get_field_value(self.APPROVERUSERNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DateApproved_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateApproved' on this record model
        """
        self.set_field_value(self.DATEAPPROVED__FIELD_NAME.field_name, value)

    def get_DateApproved_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateApproved' from this record model
        """
        return self.get_field_value(self.DATEAPPROVED__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_MaintenanceComments_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenanceComments' on this record model
        """
        self.set_field_value(self.MAINTENANCECOMMENTS__FIELD_NAME.field_name, value)

    def get_MaintenanceComments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenanceComments' from this record model
        """
        return self.get_field_value(self.MAINTENANCECOMMENTS__FIELD_NAME.field_name)

    def set_MaintenancePendingDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaintenancePendingDate' on this record model
        """
        self.set_field_value(self.MAINTENANCEPENDINGDATE__FIELD_NAME.field_name, value)

    def get_MaintenancePendingDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaintenancePendingDate' from this record model
        """
        return self.get_field_value(self.MAINTENANCEPENDINGDATE__FIELD_NAME.field_name)

    def set_MaintenancePerformedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenancePerformedBy' on this record model
        """
        self.set_field_value(self.MAINTENANCEPERFORMEDBY__FIELD_NAME.field_name, value)

    def get_MaintenancePerformedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenancePerformedBy' from this record model
        """
        return self.get_field_value(self.MAINTENANCEPERFORMEDBY__FIELD_NAME.field_name)

    def set_MaintenancePerformedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaintenancePerformedDate' on this record model
        """
        self.set_field_value(self.MAINTENANCEPERFORMEDDATE__FIELD_NAME.field_name, value)

    def get_MaintenancePerformedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaintenancePerformedDate' from this record model
        """
        return self.get_field_value(self.MAINTENANCEPERFORMEDDATE__FIELD_NAME.field_name)

    def set_MaintenanceStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenanceStatus' on this record model
        """
        self.set_field_value(self.MAINTENANCESTATUS__FIELD_NAME.field_name, value)

    def get_MaintenanceStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenanceStatus' from this record model
        """
        return self.get_field_value(self.MAINTENANCESTATUS__FIELD_NAME.field_name)

    def set_NextDueDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'NextDueDate' on this record model
        """
        self.set_field_value(self.NEXTDUEDATE__FIELD_NAME.field_name, value)

    def get_NextDueDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NextDueDate' from this record model
        """
        return self.get_field_value(self.NEXTDUEDATE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentParseConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentParseConfig
    Data Type Display Name: Instrument Parser Config (Instrument Parser Configs)
    Fields: EndPivotOnColumn, BlockIdentifier, DataLoaderConfig, CreatedBy, DateCreated, DataRecordName, BlockType, StartPivotOnColumn, FieldName3, FieldName2, FieldName1, VeloxLastModifiedDate, VeloxLastModifiedBy
    This is for the Generic Instrument Parser.
    """
    DATA_TYPE_NAME: Final[str] = 'InstrumentParseConfig'
    DISPLAY_NAME: Final[str] = "Instrument Parser Config"
    PLURAL_DISPLAY_NAME: Final[str] = "Instrument Parser Configs"
    BLOCKIDENTIFIER__FIELD_NAME: Final[WrapperField] = WrapperField("BlockIdentifier", FieldType.STRING, display_name="Block Identifier")
    BLOCKTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("BlockType", FieldType.PICKLIST, display_name="Block Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATALOADERCONFIG__FIELD_NAME: Final[WrapperField] = WrapperField("DataLoaderConfig", FieldType.STRING, display_name="Data Loader Config Name")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ENDPIVOTONCOLUMN__FIELD_NAME: Final[WrapperField] = WrapperField("EndPivotOnColumn", FieldType.STRING, display_name="End Pivot On Column")
    FIELDNAME1__FIELD_NAME: Final[WrapperField] = WrapperField("FieldName1", FieldType.STRING, display_name="Field Name 1")
    FIELDNAME2__FIELD_NAME: Final[WrapperField] = WrapperField("FieldName2", FieldType.STRING, display_name="Field Name 2")
    FIELDNAME3__FIELD_NAME: Final[WrapperField] = WrapperField("FieldName3", FieldType.STRING, display_name="Field Name 3")
    STARTPIVOTONCOLUMN__FIELD_NAME: Final[WrapperField] = WrapperField("StartPivotOnColumn", FieldType.STRING, display_name="Start Pivot On Column")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BlockIdentifier_field(self, value: Optional[str]):
        """
        Set data field with field name 'BlockIdentifier' on this record model
        """
        self.set_field_value(self.BLOCKIDENTIFIER__FIELD_NAME.field_name, value)

    def get_BlockIdentifier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BlockIdentifier' from this record model
        """
        return self.get_field_value(self.BLOCKIDENTIFIER__FIELD_NAME.field_name)

    def set_BlockType_field(self, value: Optional[str]):
        """
        Set data field with field name 'BlockType' on this record model
        """
        self.set_field_value(self.BLOCKTYPE__FIELD_NAME.field_name, value)

    def get_BlockType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BlockType' from this record model
        """
        return self.get_field_value(self.BLOCKTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataLoaderConfig_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataLoaderConfig' on this record model
        """
        self.set_field_value(self.DATALOADERCONFIG__FIELD_NAME.field_name, value)

    def get_DataLoaderConfig_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataLoaderConfig' from this record model
        """
        return self.get_field_value(self.DATALOADERCONFIG__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EndPivotOnColumn_field(self, value: Optional[str]):
        """
        Set data field with field name 'EndPivotOnColumn' on this record model
        """
        self.set_field_value(self.ENDPIVOTONCOLUMN__FIELD_NAME.field_name, value)

    def get_EndPivotOnColumn_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EndPivotOnColumn' from this record model
        """
        return self.get_field_value(self.ENDPIVOTONCOLUMN__FIELD_NAME.field_name)

    def set_FieldName1_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldName1' on this record model
        """
        self.set_field_value(self.FIELDNAME1__FIELD_NAME.field_name, value)

    def get_FieldName1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldName1' from this record model
        """
        return self.get_field_value(self.FIELDNAME1__FIELD_NAME.field_name)

    def set_FieldName2_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldName2' on this record model
        """
        self.set_field_value(self.FIELDNAME2__FIELD_NAME.field_name, value)

    def get_FieldName2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldName2' from this record model
        """
        return self.get_field_value(self.FIELDNAME2__FIELD_NAME.field_name)

    def set_FieldName3_field(self, value: Optional[str]):
        """
        Set data field with field name 'FieldName3' on this record model
        """
        self.set_field_value(self.FIELDNAME3__FIELD_NAME.field_name, value)

    def get_FieldName3_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FieldName3' from this record model
        """
        return self.get_field_value(self.FIELDNAME3__FIELD_NAME.field_name)

    def set_StartPivotOnColumn_field(self, value: Optional[str]):
        """
        Set data field with field name 'StartPivotOnColumn' on this record model
        """
        self.set_field_value(self.STARTPIVOTONCOLUMN__FIELD_NAME.field_name, value)

    def get_StartPivotOnColumn_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StartPivotOnColumn' from this record model
        """
        return self.get_field_value(self.STARTPIVOTONCOLUMN__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentReservationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentReservation
    Data Type Display Name: Reservation (Reservations)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, Summary, VeloxLastModifiedBy, DateCreated, Duration
    """
    DATA_TYPE_NAME: Final[str] = 'InstrumentReservation'
    DISPLAY_NAME: Final[str] = "Reservation"
    PLURAL_DISPLAY_NAME: Final[str] = "Reservations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DURATION__FIELD_NAME: Final[WrapperField] = WrapperField("Duration", FieldType.DATE_RANGE, display_name="Duration")
    SUMMARY__FIELD_NAME: Final[WrapperField] = WrapperField("Summary", FieldType.STRING, display_name="Summary")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Duration_field(self, value: Optional[DateRange]):
        """
        Set data field with field name 'Duration' on this record model
        """
        if value is None:
            self.set_field_value(self.DURATION__FIELD_NAME.field_name, None)
        else:
            self.set_field_value(self.DURATION__FIELD_NAME.field_name, str(value))

    def get_Duration_field(self) -> Optional[DateRange]:
        """
        Get data field value with field name 'Duration' from this record model
        """
        return DateRange.from_str(self.get_field_value(self.DURATION__FIELD_NAME.field_name))

    def set_Summary_field(self, value: Optional[str]):
        """
        Set data field with field name 'Summary' on this record model
        """
        self.set_field_value(self.SUMMARY__FIELD_NAME.field_name, value)

    def get_Summary_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Summary' from this record model
        """
        return self.get_field_value(self.SUMMARY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class InstrumentStatusModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type InstrumentStatus
    Data Type Display Name: Instrument Status (Instrument Status)
    Fields: Status, CreatedBy, Position, DateCreated, CurrentRunId, PercentCompletion, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, LastUpdated, CurrentRunDate
    """
    DATA_TYPE_NAME: Final[str] = 'InstrumentStatus'
    DISPLAY_NAME: Final[str] = "Instrument Status"
    PLURAL_DISPLAY_NAME: Final[str] = "Instrument Status"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CURRENTRUNDATE__FIELD_NAME: Final[WrapperField] = WrapperField("CurrentRunDate", FieldType.INTEGER, display_name="Current Run Date")
    CURRENTRUNID__FIELD_NAME: Final[WrapperField] = WrapperField("CurrentRunId", FieldType.STRING, display_name="Current Run ID")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    LASTUPDATED__FIELD_NAME: Final[WrapperField] = WrapperField("LastUpdated", FieldType.DATE, display_name="Last Updated")
    PERCENTCOMPLETION__FIELD_NAME: Final[WrapperField] = WrapperField("PercentCompletion", FieldType.DOUBLE, display_name="Percent Completion")
    POSITION__FIELD_NAME: Final[WrapperField] = WrapperField("Position", FieldType.STRING, display_name="Position")
    STATUS__FIELD_NAME: Final[WrapperField] = WrapperField("Status", FieldType.STRING, display_name="Instrument Status")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CurrentRunDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'CurrentRunDate' on this record model
        """
        self.set_field_value(self.CURRENTRUNDATE__FIELD_NAME.field_name, value)

    def get_CurrentRunDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CurrentRunDate' from this record model
        """
        return self.get_field_value(self.CURRENTRUNDATE__FIELD_NAME.field_name)

    def set_CurrentRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'CurrentRunId' on this record model
        """
        self.set_field_value(self.CURRENTRUNID__FIELD_NAME.field_name, value)

    def get_CurrentRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CurrentRunId' from this record model
        """
        return self.get_field_value(self.CURRENTRUNID__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_LastUpdated_field(self, value: Optional[int]):
        """
        Set data field with field name 'LastUpdated' on this record model
        """
        self.set_field_value(self.LASTUPDATED__FIELD_NAME.field_name, value)

    def get_LastUpdated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LastUpdated' from this record model
        """
        return self.get_field_value(self.LASTUPDATED__FIELD_NAME.field_name)

    def set_PercentCompletion_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentCompletion' on this record model
        """
        self.set_field_value(self.PERCENTCOMPLETION__FIELD_NAME.field_name, value)

    def get_PercentCompletion_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentCompletion' from this record model
        """
        return self.get_field_value(self.PERCENTCOMPLETION__FIELD_NAME.field_name)

    def set_Position_field(self, value: Optional[str]):
        """
        Set data field with field name 'Position' on this record model
        """
        self.set_field_value(self.POSITION__FIELD_NAME.field_name, value)

    def get_Position_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Position' from this record model
        """
        return self.get_field_value(self.POSITION__FIELD_NAME.field_name)

    def set_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'Status' on this record model
        """
        self.set_field_value(self.STATUS__FIELD_NAME.field_name, value)

    def get_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Status' from this record model
        """
        return self.get_field_value(self.STATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class LCMSResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type LCMSResult
    Data Type Display Name: LCMS Result (LCMS Results)
    Fields: CompoundName, CreatedBy, AccuracyPercent, ISHeight, Filename, DateCreated, Concentration, DilutionFactor, CalculatedConcentration, Area, DataRecordName, FileType, ISArea, VeloxLastModifiedDate, VeloxLastModifiedBy, Height, AnalyteISArea, SampleType
    """
    DATA_TYPE_NAME: Final[str] = 'LCMSResult'
    DISPLAY_NAME: Final[str] = "LCMS Result"
    PLURAL_DISPLAY_NAME: Final[str] = "LCMS Results"
    ACCURACYPERCENT__FIELD_NAME: Final[WrapperField] = WrapperField("AccuracyPercent", FieldType.STRING, display_name="Accuracy %")
    ANALYTEISAREA__FIELD_NAME: Final[WrapperField] = WrapperField("AnalyteISArea", FieldType.DOUBLE, display_name="Analyte/IS Area")
    AREA__FIELD_NAME: Final[WrapperField] = WrapperField("Area", FieldType.DOUBLE, display_name="Analyte Peak Area (counts)")
    CALCULATEDCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("CalculatedConcentration", FieldType.DOUBLE, display_name="Calculated Concentration")
    COMPOUNDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("CompoundName", FieldType.STRING, display_name="Compound Name")
    CONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("Concentration", FieldType.DOUBLE, display_name="Analyte Concentration (uM)")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DILUTIONFACTOR__FIELD_NAME: Final[WrapperField] = WrapperField("DilutionFactor", FieldType.DOUBLE, display_name="Dilution Factor")
    FILETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("FileType", FieldType.STRING, display_name="File Type")
    FILENAME__FIELD_NAME: Final[WrapperField] = WrapperField("Filename", FieldType.STRING, display_name="Filename")
    HEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("Height", FieldType.DOUBLE, display_name="Analyte Peak Height (cps)")
    ISAREA__FIELD_NAME: Final[WrapperField] = WrapperField("ISArea", FieldType.DOUBLE, display_name="IS Peak Area (counts)")
    ISHEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("ISHeight", FieldType.DOUBLE, display_name="IS Peak Height (cps)")
    SAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SampleType", FieldType.STRING, display_name="Sample Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AccuracyPercent_field(self, value: Optional[str]):
        """
        Set data field with field name 'AccuracyPercent' on this record model
        """
        self.set_field_value(self.ACCURACYPERCENT__FIELD_NAME.field_name, value)

    def get_AccuracyPercent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AccuracyPercent' from this record model
        """
        return self.get_field_value(self.ACCURACYPERCENT__FIELD_NAME.field_name)

    def set_AnalyteISArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'AnalyteISArea' on this record model
        """
        self.set_field_value(self.ANALYTEISAREA__FIELD_NAME.field_name, value)

    def get_AnalyteISArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AnalyteISArea' from this record model
        """
        return self.get_field_value(self.ANALYTEISAREA__FIELD_NAME.field_name)

    def set_Area_field(self, value: Optional[float]):
        """
        Set data field with field name 'Area' on this record model
        """
        self.set_field_value(self.AREA__FIELD_NAME.field_name, value)

    def get_Area_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Area' from this record model
        """
        return self.get_field_value(self.AREA__FIELD_NAME.field_name)

    def set_CalculatedConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedConcentration' on this record model
        """
        self.set_field_value(self.CALCULATEDCONCENTRATION__FIELD_NAME.field_name, value)

    def get_CalculatedConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedConcentration' from this record model
        """
        return self.get_field_value(self.CALCULATEDCONCENTRATION__FIELD_NAME.field_name)

    def set_CompoundName_field(self, value: Optional[str]):
        """
        Set data field with field name 'CompoundName' on this record model
        """
        self.set_field_value(self.COMPOUNDNAME__FIELD_NAME.field_name, value)

    def get_CompoundName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CompoundName' from this record model
        """
        return self.get_field_value(self.COMPOUNDNAME__FIELD_NAME.field_name)

    def set_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Concentration' on this record model
        """
        self.set_field_value(self.CONCENTRATION__FIELD_NAME.field_name, value)

    def get_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Concentration' from this record model
        """
        return self.get_field_value(self.CONCENTRATION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutionFactor' on this record model
        """
        self.set_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_DilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutionFactor' from this record model
        """
        return self.get_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name)

    def set_FileType_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileType' on this record model
        """
        self.set_field_value(self.FILETYPE__FIELD_NAME.field_name, value)

    def get_FileType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileType' from this record model
        """
        return self.get_field_value(self.FILETYPE__FIELD_NAME.field_name)

    def set_Filename_field(self, value: Optional[str]):
        """
        Set data field with field name 'Filename' on this record model
        """
        self.set_field_value(self.FILENAME__FIELD_NAME.field_name, value)

    def get_Filename_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Filename' from this record model
        """
        return self.get_field_value(self.FILENAME__FIELD_NAME.field_name)

    def set_Height_field(self, value: Optional[float]):
        """
        Set data field with field name 'Height' on this record model
        """
        self.set_field_value(self.HEIGHT__FIELD_NAME.field_name, value)

    def get_Height_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Height' from this record model
        """
        return self.get_field_value(self.HEIGHT__FIELD_NAME.field_name)

    def set_ISArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'ISArea' on this record model
        """
        self.set_field_value(self.ISAREA__FIELD_NAME.field_name, value)

    def get_ISArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ISArea' from this record model
        """
        return self.get_field_value(self.ISAREA__FIELD_NAME.field_name)

    def set_ISHeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'ISHeight' on this record model
        """
        self.set_field_value(self.ISHEIGHT__FIELD_NAME.field_name, value)

    def get_ISHeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ISHeight' from this record model
        """
        return self.get_field_value(self.ISHEIGHT__FIELD_NAME.field_name)

    def set_SampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleType' on this record model
        """
        self.set_field_value(self.SAMPLETYPE__FIELD_NAME.field_name, value)

    def get_SampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleType' from this record model
        """
        return self.get_field_value(self.SAMPLETYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class LearnedModelsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type LearnedModels
    Data Type Display Name: Learned Model (Learned Models)
    Fields: ResponseVariableType, SoftwareSuite, AWSSageMakerClientConfig.AccessKeyId, AWSSageMakerClientConfig.VeloxLastModifiedDate, AWSSageMakerClientConfig.CreatedBy, DateCreated, FormulaName, ModelInputType, AWSSageMakerClientConfig.RelatedRecord235, AWSSageMakerClientConfig.DateCreated, AWSSageMakerClientConfig.SecretKey, VeloxLastModifiedBy, IndependentVariableTypes, ModelId, FilePath, VeloxCurrentVersion, CreatedBy, IndependentVariableNames, AWSSageMakerClientConfig.Region, SoftwareVersion, AWSSageMakerClientConfig.DataRecordName, DataRecordName, VeloxLastModifiedDate, AWSSageMakerClientConfig.VeloxLastModifiedBy, AWSSageMakerClientConfig.RecordId, ModelType, ResponseVariableName
    This is a repository of all statistical models which can be used to generate predictions.
    """
    DATA_TYPE_NAME: Final[str] = 'LearnedModels'
    DISPLAY_NAME: Final[str] = "Learned Model"
    PLURAL_DISPLAY_NAME: Final[str] = "Learned Models"
    AWSSAGEMAKERCLIENTCONFIG_EXT_ACCESSKEYID__FIELD_NAME: Final[WrapperField] = WrapperField("AWSSageMakerClientConfig.AccessKeyId", FieldType.STRING, display_name="Access Key ID")
    AWSSAGEMAKERCLIENTCONFIG_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("AWSSageMakerClientConfig.CreatedBy", FieldType.STRING, display_name="Created By")
    AWSSAGEMAKERCLIENTCONFIG_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("AWSSageMakerClientConfig.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    AWSSAGEMAKERCLIENTCONFIG_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("AWSSageMakerClientConfig.DateCreated", FieldType.DATE, display_name="Date Created")
    AWSSAGEMAKERCLIENTCONFIG_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("AWSSageMakerClientConfig.RecordId", FieldType.LONG, display_name="Record ID")
    AWSSAGEMAKERCLIENTCONFIG_EXT_REGION__FIELD_NAME: Final[WrapperField] = WrapperField("AWSSageMakerClientConfig.Region", FieldType.STRING, display_name="Region")
    AWSSAGEMAKERCLIENTCONFIG_EXT_RELATEDRECORD235__FIELD_NAME: Final[WrapperField] = WrapperField("AWSSageMakerClientConfig.RelatedRecord235", FieldType.PARENTLINK, display_name="Related LearnedModels")
    AWSSAGEMAKERCLIENTCONFIG_EXT_SECRETKEY__FIELD_NAME: Final[WrapperField] = WrapperField("AWSSageMakerClientConfig.SecretKey", FieldType.STRING, display_name="Secret Key")
    AWSSAGEMAKERCLIENTCONFIG_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("AWSSageMakerClientConfig.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    AWSSAGEMAKERCLIENTCONFIG_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("AWSSageMakerClientConfig.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    FORMULANAME__FIELD_NAME: Final[WrapperField] = WrapperField("FormulaName", FieldType.STRING, display_name="Formula Name")
    INDEPENDENTVARIABLENAMES__FIELD_NAME: Final[WrapperField] = WrapperField("IndependentVariableNames", FieldType.SELECTION, display_name="Independent Variable Names")
    INDEPENDENTVARIABLETYPES__FIELD_NAME: Final[WrapperField] = WrapperField("IndependentVariableTypes", FieldType.STRING, display_name="Independent Variable Types")
    MODELID__FIELD_NAME: Final[WrapperField] = WrapperField("ModelId", FieldType.STRING, display_name="Model ID")
    MODELINPUTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ModelInputType", FieldType.STRING, display_name="Model Input Type")
    MODELTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ModelType", FieldType.STRING, display_name="Model Type")
    RESPONSEVARIABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ResponseVariableName", FieldType.STRING, display_name="Response Variable Name")
    RESPONSEVARIABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ResponseVariableType", FieldType.STRING, display_name="Response Variable Type")
    SOFTWARESUITE__FIELD_NAME: Final[WrapperField] = WrapperField("SoftwareSuite", FieldType.STRING, display_name="Software Suite")
    SOFTWAREVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("SoftwareVersion", FieldType.STRING, display_name="Software Version")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AWSSageMakerClientConfigAccessKeyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AWSSageMakerClientConfig.AccessKeyId' on this record model
        """
        self.set_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_ACCESSKEYID__FIELD_NAME.field_name, value)

    def get_AWSSageMakerClientConfigAccessKeyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AWSSageMakerClientConfig.AccessKeyId' from this record model
        """
        return self.get_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_ACCESSKEYID__FIELD_NAME.field_name)

    def set_AWSSageMakerClientConfigCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'AWSSageMakerClientConfig.CreatedBy' on this record model
        """
        self.set_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_AWSSageMakerClientConfigCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AWSSageMakerClientConfig.CreatedBy' from this record model
        """
        return self.get_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_AWSSageMakerClientConfigDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'AWSSageMakerClientConfig.DateCreated' on this record model
        """
        self.set_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_AWSSageMakerClientConfigDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'AWSSageMakerClientConfig.DateCreated' from this record model
        """
        return self.get_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_AWSSageMakerClientConfigRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'AWSSageMakerClientConfig.RecordId' on this record model
        """
        self.set_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_AWSSageMakerClientConfigRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'AWSSageMakerClientConfig.RecordId' from this record model
        """
        return self.get_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_RECORDID__FIELD_NAME.field_name)

    def set_AWSSageMakerClientConfigRegion_field(self, value: Optional[str]):
        """
        Set data field with field name 'AWSSageMakerClientConfig.Region' on this record model
        """
        self.set_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_REGION__FIELD_NAME.field_name, value)

    def get_AWSSageMakerClientConfigRegion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AWSSageMakerClientConfig.Region' from this record model
        """
        return self.get_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_REGION__FIELD_NAME.field_name)

    def set_AWSSageMakerClientConfigSecretKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'AWSSageMakerClientConfig.SecretKey' on this record model
        """
        self.set_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_SECRETKEY__FIELD_NAME.field_name, value)

    def get_AWSSageMakerClientConfigSecretKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AWSSageMakerClientConfig.SecretKey' from this record model
        """
        return self.get_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_SECRETKEY__FIELD_NAME.field_name)

    def set_AWSSageMakerClientConfigVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'AWSSageMakerClientConfig.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_AWSSageMakerClientConfigVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AWSSageMakerClientConfig.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_AWSSageMakerClientConfigVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'AWSSageMakerClientConfig.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_AWSSageMakerClientConfigVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'AWSSageMakerClientConfig.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.AWSSAGEMAKERCLIENTCONFIG_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_FormulaName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FormulaName' on this record model
        """
        self.set_field_value(self.FORMULANAME__FIELD_NAME.field_name, value)

    def get_FormulaName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FormulaName' from this record model
        """
        return self.get_field_value(self.FORMULANAME__FIELD_NAME.field_name)

    def set_IndependentVariableNames_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndependentVariableNames' on this record model
        """
        self.set_field_value(self.INDEPENDENTVARIABLENAMES__FIELD_NAME.field_name, value)

    def get_IndependentVariableNames_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndependentVariableNames' from this record model
        """
        return self.get_field_value(self.INDEPENDENTVARIABLENAMES__FIELD_NAME.field_name)

    def set_IndependentVariableTypes_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndependentVariableTypes' on this record model
        """
        self.set_field_value(self.INDEPENDENTVARIABLETYPES__FIELD_NAME.field_name, value)

    def get_IndependentVariableTypes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndependentVariableTypes' from this record model
        """
        return self.get_field_value(self.INDEPENDENTVARIABLETYPES__FIELD_NAME.field_name)

    def set_ModelId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ModelId' on this record model
        """
        self.set_field_value(self.MODELID__FIELD_NAME.field_name, value)

    def get_ModelId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ModelId' from this record model
        """
        return self.get_field_value(self.MODELID__FIELD_NAME.field_name)

    def set_ModelInputType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ModelInputType' on this record model
        """
        self.set_field_value(self.MODELINPUTTYPE__FIELD_NAME.field_name, value)

    def get_ModelInputType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ModelInputType' from this record model
        """
        return self.get_field_value(self.MODELINPUTTYPE__FIELD_NAME.field_name)

    def set_ModelType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ModelType' on this record model
        """
        self.set_field_value(self.MODELTYPE__FIELD_NAME.field_name, value)

    def get_ModelType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ModelType' from this record model
        """
        return self.get_field_value(self.MODELTYPE__FIELD_NAME.field_name)

    def set_ResponseVariableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ResponseVariableName' on this record model
        """
        self.set_field_value(self.RESPONSEVARIABLENAME__FIELD_NAME.field_name, value)

    def get_ResponseVariableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ResponseVariableName' from this record model
        """
        return self.get_field_value(self.RESPONSEVARIABLENAME__FIELD_NAME.field_name)

    def set_ResponseVariableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ResponseVariableType' on this record model
        """
        self.set_field_value(self.RESPONSEVARIABLETYPE__FIELD_NAME.field_name, value)

    def get_ResponseVariableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ResponseVariableType' from this record model
        """
        return self.get_field_value(self.RESPONSEVARIABLETYPE__FIELD_NAME.field_name)

    def set_SoftwareSuite_field(self, value: Optional[str]):
        """
        Set data field with field name 'SoftwareSuite' on this record model
        """
        self.set_field_value(self.SOFTWARESUITE__FIELD_NAME.field_name, value)

    def get_SoftwareSuite_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SoftwareSuite' from this record model
        """
        return self.get_field_value(self.SOFTWARESUITE__FIELD_NAME.field_name)

    def set_SoftwareVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'SoftwareVersion' on this record model
        """
        self.set_field_value(self.SOFTWAREVERSION__FIELD_NAME.field_name, value)

    def get_SoftwareVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SoftwareVersion' from this record model
        """
        return self.get_field_value(self.SOFTWAREVERSION__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class LinearRegressionModelModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type LinearRegressionModel
    Data Type Display Name: Linear Regression Model (Linear Regression Models)
    Fields: MultiParentLink215, RSquared, DateCreated, A0, A1, A2, A3, A4, A5, SeriesName, A6, DegreeOfPolynomial, A7, SourceEntryId, A8, A9, VeloxLastModifiedBy, fValue, A10, EntryName, NumeratorDOF, CreatedBy, DenominatorDOF, pValue, AdjRSquared, DataRecordName, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: Final[str] = 'LinearRegressionModel'
    DISPLAY_NAME: Final[str] = "Linear Regression Model"
    PLURAL_DISPLAY_NAME: Final[str] = "Linear Regression Models"
    A0__FIELD_NAME: Final[WrapperField] = WrapperField("A0", FieldType.DOUBLE, display_name="A0 (Y-Intercept)")
    A1__FIELD_NAME: Final[WrapperField] = WrapperField("A1", FieldType.DOUBLE, display_name="A1")
    A10__FIELD_NAME: Final[WrapperField] = WrapperField("A10", FieldType.DOUBLE, display_name="A10")
    A2__FIELD_NAME: Final[WrapperField] = WrapperField("A2", FieldType.DOUBLE, display_name="A2")
    A3__FIELD_NAME: Final[WrapperField] = WrapperField("A3", FieldType.DOUBLE, display_name="A3")
    A4__FIELD_NAME: Final[WrapperField] = WrapperField("A4", FieldType.DOUBLE, display_name="A4")
    A5__FIELD_NAME: Final[WrapperField] = WrapperField("A5", FieldType.DOUBLE, display_name="A5")
    A6__FIELD_NAME: Final[WrapperField] = WrapperField("A6", FieldType.DOUBLE, display_name="A6")
    A7__FIELD_NAME: Final[WrapperField] = WrapperField("A7", FieldType.DOUBLE, display_name="A7")
    A8__FIELD_NAME: Final[WrapperField] = WrapperField("A8", FieldType.DOUBLE, display_name="A8")
    A9__FIELD_NAME: Final[WrapperField] = WrapperField("A9", FieldType.DOUBLE, display_name="A9")
    ADJRSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("AdjRSquared", FieldType.DOUBLE, display_name="Adj R Squared")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DEGREEOFPOLYNOMIAL__FIELD_NAME: Final[WrapperField] = WrapperField("DegreeOfPolynomial", FieldType.INTEGER, display_name="Degree Of Polynomial")
    DENOMINATORDOF__FIELD_NAME: Final[WrapperField] = WrapperField("DenominatorDOF", FieldType.DOUBLE, display_name="Denominator DOF")
    ENTRYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("EntryName", FieldType.STRING, display_name="Entry Name")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    NUMERATORDOF__FIELD_NAME: Final[WrapperField] = WrapperField("NumeratorDOF", FieldType.DOUBLE, display_name="Numerator DOF")
    RSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("RSquared", FieldType.DOUBLE, display_name="R Squared")
    SERIESNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SeriesName", FieldType.STRING, display_name="Series Name")
    SOURCEENTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("SourceEntryId", FieldType.LONG, display_name="Source Entry ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    FVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("fValue", FieldType.DOUBLE, display_name="F-Value")
    PVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("pValue", FieldType.DOUBLE, display_name="P-Value")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A0_field(self, value: Optional[float]):
        """
        Set data field with field name 'A0' on this record model
        """
        self.set_field_value(self.A0__FIELD_NAME.field_name, value)

    def get_A0_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A0' from this record model
        """
        return self.get_field_value(self.A0__FIELD_NAME.field_name)

    def set_A1_field(self, value: Optional[float]):
        """
        Set data field with field name 'A1' on this record model
        """
        self.set_field_value(self.A1__FIELD_NAME.field_name, value)

    def get_A1_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A1' from this record model
        """
        return self.get_field_value(self.A1__FIELD_NAME.field_name)

    def set_A10_field(self, value: Optional[float]):
        """
        Set data field with field name 'A10' on this record model
        """
        self.set_field_value(self.A10__FIELD_NAME.field_name, value)

    def get_A10_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A10' from this record model
        """
        return self.get_field_value(self.A10__FIELD_NAME.field_name)

    def set_A2_field(self, value: Optional[float]):
        """
        Set data field with field name 'A2' on this record model
        """
        self.set_field_value(self.A2__FIELD_NAME.field_name, value)

    def get_A2_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A2' from this record model
        """
        return self.get_field_value(self.A2__FIELD_NAME.field_name)

    def set_A3_field(self, value: Optional[float]):
        """
        Set data field with field name 'A3' on this record model
        """
        self.set_field_value(self.A3__FIELD_NAME.field_name, value)

    def get_A3_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A3' from this record model
        """
        return self.get_field_value(self.A3__FIELD_NAME.field_name)

    def set_A4_field(self, value: Optional[float]):
        """
        Set data field with field name 'A4' on this record model
        """
        self.set_field_value(self.A4__FIELD_NAME.field_name, value)

    def get_A4_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A4' from this record model
        """
        return self.get_field_value(self.A4__FIELD_NAME.field_name)

    def set_A5_field(self, value: Optional[float]):
        """
        Set data field with field name 'A5' on this record model
        """
        self.set_field_value(self.A5__FIELD_NAME.field_name, value)

    def get_A5_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A5' from this record model
        """
        return self.get_field_value(self.A5__FIELD_NAME.field_name)

    def set_A6_field(self, value: Optional[float]):
        """
        Set data field with field name 'A6' on this record model
        """
        self.set_field_value(self.A6__FIELD_NAME.field_name, value)

    def get_A6_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A6' from this record model
        """
        return self.get_field_value(self.A6__FIELD_NAME.field_name)

    def set_A7_field(self, value: Optional[float]):
        """
        Set data field with field name 'A7' on this record model
        """
        self.set_field_value(self.A7__FIELD_NAME.field_name, value)

    def get_A7_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A7' from this record model
        """
        return self.get_field_value(self.A7__FIELD_NAME.field_name)

    def set_A8_field(self, value: Optional[float]):
        """
        Set data field with field name 'A8' on this record model
        """
        self.set_field_value(self.A8__FIELD_NAME.field_name, value)

    def get_A8_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A8' from this record model
        """
        return self.get_field_value(self.A8__FIELD_NAME.field_name)

    def set_A9_field(self, value: Optional[float]):
        """
        Set data field with field name 'A9' on this record model
        """
        self.set_field_value(self.A9__FIELD_NAME.field_name, value)

    def get_A9_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A9' from this record model
        """
        return self.get_field_value(self.A9__FIELD_NAME.field_name)

    def set_AdjRSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'AdjRSquared' on this record model
        """
        self.set_field_value(self.ADJRSQUARED__FIELD_NAME.field_name, value)

    def get_AdjRSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AdjRSquared' from this record model
        """
        return self.get_field_value(self.ADJRSQUARED__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DegreeOfPolynomial_field(self, value: Optional[int]):
        """
        Set data field with field name 'DegreeOfPolynomial' on this record model
        """
        self.set_field_value(self.DEGREEOFPOLYNOMIAL__FIELD_NAME.field_name, value)

    def get_DegreeOfPolynomial_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DegreeOfPolynomial' from this record model
        """
        return self.get_field_value(self.DEGREEOFPOLYNOMIAL__FIELD_NAME.field_name)

    def set_DenominatorDOF_field(self, value: Optional[float]):
        """
        Set data field with field name 'DenominatorDOF' on this record model
        """
        self.set_field_value(self.DENOMINATORDOF__FIELD_NAME.field_name, value)

    def get_DenominatorDOF_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DenominatorDOF' from this record model
        """
        return self.get_field_value(self.DENOMINATORDOF__FIELD_NAME.field_name)

    def set_EntryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'EntryName' on this record model
        """
        self.set_field_value(self.ENTRYNAME__FIELD_NAME.field_name, value)

    def get_EntryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EntryName' from this record model
        """
        return self.get_field_value(self.ENTRYNAME__FIELD_NAME.field_name)

    def set_NumeratorDOF_field(self, value: Optional[float]):
        """
        Set data field with field name 'NumeratorDOF' on this record model
        """
        self.set_field_value(self.NUMERATORDOF__FIELD_NAME.field_name, value)

    def get_NumeratorDOF_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NumeratorDOF' from this record model
        """
        return self.get_field_value(self.NUMERATORDOF__FIELD_NAME.field_name)

    def set_RSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'RSquared' on this record model
        """
        self.set_field_value(self.RSQUARED__FIELD_NAME.field_name, value)

    def get_RSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RSquared' from this record model
        """
        return self.get_field_value(self.RSQUARED__FIELD_NAME.field_name)

    def set_SeriesName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SeriesName' on this record model
        """
        self.set_field_value(self.SERIESNAME__FIELD_NAME.field_name, value)

    def get_SeriesName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SeriesName' from this record model
        """
        return self.get_field_value(self.SERIESNAME__FIELD_NAME.field_name)

    def set_SourceEntryId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SourceEntryId' on this record model
        """
        self.set_field_value(self.SOURCEENTRYID__FIELD_NAME.field_name, value)

    def get_SourceEntryId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SourceEntryId' from this record model
        """
        return self.get_field_value(self.SOURCEENTRYID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_fValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'fValue' on this record model
        """
        self.set_field_value(self.FVALUE__FIELD_NAME.field_name, value)

    def get_fValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'fValue' from this record model
        """
        return self.get_field_value(self.FVALUE__FIELD_NAME.field_name)

    def set_pValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'pValue' on this record model
        """
        self.set_field_value(self.PVALUE__FIELD_NAME.field_name, value)

    def get_pValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'pValue' from this record model
        """
        return self.get_field_value(self.PVALUE__FIELD_NAME.field_name)


class LinearRegressionParameterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type LinearRegressionParameter
    Data Type Display Name: Linear Regression Parameter (Linear Regression Parameters)
    Fields: SBA_RSquared, CreatedBy, DataRecordName, Intercept, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SBA_AdjRSquared, Slope
    """
    DATA_TYPE_NAME: Final[str] = 'LinearRegressionParameter'
    DISPLAY_NAME: Final[str] = "Linear Regression Parameter"
    PLURAL_DISPLAY_NAME: Final[str] = "Linear Regression Parameters"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    INTERCEPT__FIELD_NAME: Final[WrapperField] = WrapperField("Intercept", FieldType.DOUBLE, display_name="Intercept")
    SBA_ADJRSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AdjRSquared", FieldType.DOUBLE, display_name="Adjusted R Squared")
    SBA_RSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RSquared", FieldType.DOUBLE, display_name="R Squared")
    SLOPE__FIELD_NAME: Final[WrapperField] = WrapperField("Slope", FieldType.DOUBLE, display_name="Slope")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Intercept_field(self, value: Optional[float]):
        """
        Set data field with field name 'Intercept' on this record model
        """
        self.set_field_value(self.INTERCEPT__FIELD_NAME.field_name, value)

    def get_Intercept_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Intercept' from this record model
        """
        return self.get_field_value(self.INTERCEPT__FIELD_NAME.field_name)

    def set_SBA_AdjRSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_AdjRSquared' on this record model
        """
        self.set_field_value(self.SBA_ADJRSQUARED__FIELD_NAME.field_name, value)

    def get_SBA_AdjRSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_AdjRSquared' from this record model
        """
        return self.get_field_value(self.SBA_ADJRSQUARED__FIELD_NAME.field_name)

    def set_SBA_RSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_RSquared' on this record model
        """
        self.set_field_value(self.SBA_RSQUARED__FIELD_NAME.field_name, value)

    def get_SBA_RSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_RSquared' from this record model
        """
        return self.get_field_value(self.SBA_RSQUARED__FIELD_NAME.field_name)

    def set_Slope_field(self, value: Optional[float]):
        """
        Set data field with field name 'Slope' on this record model
        """
        self.set_field_value(self.SLOPE__FIELD_NAME.field_name, value)

    def get_Slope_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Slope' from this record model
        """
        return self.get_field_value(self.SLOPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class LogisticRegressionParameterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type LogisticRegressionParameter
    Data Type Display Name: Logistic Regression Parameter (Logistic Regression Parameters)
    Fields: LogisticTop, LogisticSlope, CreatedBy, DataRecordName, LogisticICEC50, VeloxLastModifiedDate, VeloxLastModifiedBy, LogisticAsymmetry, DateCreated, LogisticBottom
    """
    DATA_TYPE_NAME: Final[str] = 'LogisticRegressionParameter'
    DISPLAY_NAME: Final[str] = "Logistic Regression Parameter"
    PLURAL_DISPLAY_NAME: Final[str] = "Logistic Regression Parameters"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    LOGISTICASYMMETRY__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticAsymmetry", FieldType.DOUBLE, display_name="Asymmetry (5P only)")
    LOGISTICBOTTOM__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticBottom", FieldType.DOUBLE, display_name="Bottom")
    LOGISTICICEC50__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticICEC50", FieldType.DOUBLE, display_name="IC50/EC50")
    LOGISTICSLOPE__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticSlope", FieldType.DOUBLE, display_name="Slope")
    LOGISTICTOP__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticTop", FieldType.DOUBLE, display_name="Top")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_LogisticAsymmetry_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticAsymmetry' on this record model
        """
        self.set_field_value(self.LOGISTICASYMMETRY__FIELD_NAME.field_name, value)

    def get_LogisticAsymmetry_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticAsymmetry' from this record model
        """
        return self.get_field_value(self.LOGISTICASYMMETRY__FIELD_NAME.field_name)

    def set_LogisticBottom_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticBottom' on this record model
        """
        self.set_field_value(self.LOGISTICBOTTOM__FIELD_NAME.field_name, value)

    def get_LogisticBottom_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticBottom' from this record model
        """
        return self.get_field_value(self.LOGISTICBOTTOM__FIELD_NAME.field_name)

    def set_LogisticICEC50_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticICEC50' on this record model
        """
        self.set_field_value(self.LOGISTICICEC50__FIELD_NAME.field_name, value)

    def get_LogisticICEC50_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticICEC50' from this record model
        """
        return self.get_field_value(self.LOGISTICICEC50__FIELD_NAME.field_name)

    def set_LogisticSlope_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticSlope' on this record model
        """
        self.set_field_value(self.LOGISTICSLOPE__FIELD_NAME.field_name, value)

    def get_LogisticSlope_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticSlope' from this record model
        """
        return self.get_field_value(self.LOGISTICSLOPE__FIELD_NAME.field_name)

    def set_LogisticTop_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticTop' on this record model
        """
        self.set_field_value(self.LOGISTICTOP__FIELD_NAME.field_name, value)

    def get_LogisticTop_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticTop' from this record model
        """
        return self.get_field_value(self.LOGISTICTOP__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class MaintenanceItemModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type MaintenanceItem
    Data Type Display Name: Instrument Maintenance Item (Instrument Maintenance Items)
    Fields: DateCreated, RequiresApproval, SentNotifications, CanPerformMaintenance, RepeatIntervalTime, ActiveWorkflowId, VeloxLastModifiedBy, NotificationUserGroupList, PreReceiptCount, RequiresESignatures, MaintenanceTechnician, LastPerformedDate, CreatedBy, MaintenanceGracePeriod, ServiceDescription, MaintenanceReason, MaxNotifications, NextDueDate, MaintenanceComment, DataRecordName, WorkOrderNumber, RepeatInstrumentMaintenance, DeactivateIfPastDue, RequirementType, AlertAdvanceNoticeInDays, VeloxLastModifiedDate, ActiveWorkflowName, MaintenanceDate, MaintenanceStatus, RepeatInterval
    """
    DATA_TYPE_NAME: Final[str] = 'MaintenanceItem'
    DISPLAY_NAME: Final[str] = "Instrument Maintenance Item"
    PLURAL_DISPLAY_NAME: Final[str] = "Instrument Maintenance Items"
    ACTIVEWORKFLOWID__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveWorkflowId", FieldType.LONG, display_name="Active Workflow ID")
    ACTIVEWORKFLOWNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveWorkflowName", FieldType.SELECTION, display_name="Maintenance Workflow Name")
    ALERTADVANCENOTICEINDAYS__FIELD_NAME: Final[WrapperField] = WrapperField("AlertAdvanceNoticeInDays", FieldType.LONG, display_name="Alert Advance Notice (Days)")
    CANPERFORMMAINTENANCE__FIELD_NAME: Final[WrapperField] = WrapperField("CanPerformMaintenance", FieldType.SELECTION, display_name="Maintenance Technicians")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DEACTIVATEIFPASTDUE__FIELD_NAME: Final[WrapperField] = WrapperField("DeactivateIfPastDue", FieldType.BOOLEAN, display_name="Deactivate Instrument If Past Due")
    LASTPERFORMEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("LastPerformedDate", FieldType.DATE, display_name="Last Maintenance Date")
    MAINTENANCECOMMENT__FIELD_NAME: Final[WrapperField] = WrapperField("MaintenanceComment", FieldType.STRING, display_name="Description of Issue/Request")
    MAINTENANCEDATE__FIELD_NAME: Final[WrapperField] = WrapperField("MaintenanceDate", FieldType.DATE, display_name="Issue Discovery Date")
    MAINTENANCEGRACEPERIOD__FIELD_NAME: Final[WrapperField] = WrapperField("MaintenanceGracePeriod", FieldType.LONG, display_name="Maintenance Grace Period (Days)")
    MAINTENANCEREASON__FIELD_NAME: Final[WrapperField] = WrapperField("MaintenanceReason", FieldType.PICKLIST, display_name="One-Time Maintenance Reason")
    MAINTENANCESTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("MaintenanceStatus", FieldType.PICKLIST, display_name="Status")
    MAINTENANCETECHNICIAN__FIELD_NAME: Final[WrapperField] = WrapperField("MaintenanceTechnician", FieldType.SELECTION, display_name="Maintenance Technician")
    MAXNOTIFICATIONS__FIELD_NAME: Final[WrapperField] = WrapperField("MaxNotifications", FieldType.INTEGER, display_name="Maximum Notifications")
    NEXTDUEDATE__FIELD_NAME: Final[WrapperField] = WrapperField("NextDueDate", FieldType.DATE, display_name="Next Maintenance Due Date")
    NOTIFICATIONUSERGROUPLIST__FIELD_NAME: Final[WrapperField] = WrapperField("NotificationUserGroupList", FieldType.SELECTION, display_name="Notification User/Group List")
    PRERECEIPTCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("PreReceiptCount", FieldType.LONG, display_name="Looking forward Maintenance Count")
    REPEATINSTRUMENTMAINTENANCE__FIELD_NAME: Final[WrapperField] = WrapperField("RepeatInstrumentMaintenance", FieldType.PICKLIST, display_name="Maintenance Type")
    REPEATINTERVAL__FIELD_NAME: Final[WrapperField] = WrapperField("RepeatInterval", FieldType.LONG, display_name="Repeat Interval")
    REPEATINTERVALTIME__FIELD_NAME: Final[WrapperField] = WrapperField("RepeatIntervalTime", FieldType.PICKLIST, display_name="Interval")
    REQUIREMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("RequirementType", FieldType.PICKLIST, display_name="Requirement Type")
    REQUIRESAPPROVAL__FIELD_NAME: Final[WrapperField] = WrapperField("RequiresApproval", FieldType.PICKLIST, display_name="Requires Approval")
    REQUIRESESIGNATURES__FIELD_NAME: Final[WrapperField] = WrapperField("RequiresESignatures", FieldType.BOOLEAN, display_name="Requires E-Signature")
    SENTNOTIFICATIONS__FIELD_NAME: Final[WrapperField] = WrapperField("SentNotifications", FieldType.INTEGER, display_name="Sent Notifications")
    SERVICEDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("ServiceDescription", FieldType.STRING, display_name="Maintenance Summary")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WORKORDERNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("WorkOrderNumber", FieldType.STRING, display_name="Work Order Number")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def set_ActiveWorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActiveWorkflowName' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActiveWorkflowName' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWNAME__FIELD_NAME.field_name)

    def set_AlertAdvanceNoticeInDays_field(self, value: Optional[int]):
        """
        Set data field with field name 'AlertAdvanceNoticeInDays' on this record model
        """
        self.set_field_value(self.ALERTADVANCENOTICEINDAYS__FIELD_NAME.field_name, value)

    def get_AlertAdvanceNoticeInDays_field(self) -> Optional[int]:
        """
        Get data field value with field name 'AlertAdvanceNoticeInDays' from this record model
        """
        return self.get_field_value(self.ALERTADVANCENOTICEINDAYS__FIELD_NAME.field_name)

    def set_CanPerformMaintenance_field(self, value: Optional[str]):
        """
        Set data field with field name 'CanPerformMaintenance' on this record model
        """
        self.set_field_value(self.CANPERFORMMAINTENANCE__FIELD_NAME.field_name, value)

    def get_CanPerformMaintenance_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CanPerformMaintenance' from this record model
        """
        return self.get_field_value(self.CANPERFORMMAINTENANCE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DeactivateIfPastDue_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DeactivateIfPastDue' on this record model
        """
        self.set_field_value(self.DEACTIVATEIFPASTDUE__FIELD_NAME.field_name, value)

    def get_DeactivateIfPastDue_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DeactivateIfPastDue' from this record model
        """
        return self.get_field_value(self.DEACTIVATEIFPASTDUE__FIELD_NAME.field_name)

    def set_LastPerformedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'LastPerformedDate' on this record model
        """
        self.set_field_value(self.LASTPERFORMEDDATE__FIELD_NAME.field_name, value)

    def get_LastPerformedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LastPerformedDate' from this record model
        """
        return self.get_field_value(self.LASTPERFORMEDDATE__FIELD_NAME.field_name)

    def set_MaintenanceComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenanceComment' on this record model
        """
        self.set_field_value(self.MAINTENANCECOMMENT__FIELD_NAME.field_name, value)

    def get_MaintenanceComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenanceComment' from this record model
        """
        return self.get_field_value(self.MAINTENANCECOMMENT__FIELD_NAME.field_name)

    def set_MaintenanceDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaintenanceDate' on this record model
        """
        self.set_field_value(self.MAINTENANCEDATE__FIELD_NAME.field_name, value)

    def get_MaintenanceDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaintenanceDate' from this record model
        """
        return self.get_field_value(self.MAINTENANCEDATE__FIELD_NAME.field_name)

    def set_MaintenanceGracePeriod_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaintenanceGracePeriod' on this record model
        """
        self.set_field_value(self.MAINTENANCEGRACEPERIOD__FIELD_NAME.field_name, value)

    def get_MaintenanceGracePeriod_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaintenanceGracePeriod' from this record model
        """
        return self.get_field_value(self.MAINTENANCEGRACEPERIOD__FIELD_NAME.field_name)

    def set_MaintenanceReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenanceReason' on this record model
        """
        self.set_field_value(self.MAINTENANCEREASON__FIELD_NAME.field_name, value)

    def get_MaintenanceReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenanceReason' from this record model
        """
        return self.get_field_value(self.MAINTENANCEREASON__FIELD_NAME.field_name)

    def set_MaintenanceStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenanceStatus' on this record model
        """
        self.set_field_value(self.MAINTENANCESTATUS__FIELD_NAME.field_name, value)

    def get_MaintenanceStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenanceStatus' from this record model
        """
        return self.get_field_value(self.MAINTENANCESTATUS__FIELD_NAME.field_name)

    def set_MaintenanceTechnician_field(self, value: Optional[str]):
        """
        Set data field with field name 'MaintenanceTechnician' on this record model
        """
        self.set_field_value(self.MAINTENANCETECHNICIAN__FIELD_NAME.field_name, value)

    def get_MaintenanceTechnician_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MaintenanceTechnician' from this record model
        """
        return self.get_field_value(self.MAINTENANCETECHNICIAN__FIELD_NAME.field_name)

    def set_MaxNotifications_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaxNotifications' on this record model
        """
        self.set_field_value(self.MAXNOTIFICATIONS__FIELD_NAME.field_name, value)

    def get_MaxNotifications_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaxNotifications' from this record model
        """
        return self.get_field_value(self.MAXNOTIFICATIONS__FIELD_NAME.field_name)

    def set_NextDueDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'NextDueDate' on this record model
        """
        self.set_field_value(self.NEXTDUEDATE__FIELD_NAME.field_name, value)

    def get_NextDueDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NextDueDate' from this record model
        """
        return self.get_field_value(self.NEXTDUEDATE__FIELD_NAME.field_name)

    def set_NotificationUserGroupList_field(self, value: Optional[str]):
        """
        Set data field with field name 'NotificationUserGroupList' on this record model
        """
        self.set_field_value(self.NOTIFICATIONUSERGROUPLIST__FIELD_NAME.field_name, value)

    def get_NotificationUserGroupList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NotificationUserGroupList' from this record model
        """
        return self.get_field_value(self.NOTIFICATIONUSERGROUPLIST__FIELD_NAME.field_name)

    def set_PreReceiptCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'PreReceiptCount' on this record model
        """
        self.set_field_value(self.PRERECEIPTCOUNT__FIELD_NAME.field_name, value)

    def get_PreReceiptCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PreReceiptCount' from this record model
        """
        return self.get_field_value(self.PRERECEIPTCOUNT__FIELD_NAME.field_name)

    def set_RepeatInstrumentMaintenance_field(self, value: Optional[str]):
        """
        Set data field with field name 'RepeatInstrumentMaintenance' on this record model
        """
        self.set_field_value(self.REPEATINSTRUMENTMAINTENANCE__FIELD_NAME.field_name, value)

    def get_RepeatInstrumentMaintenance_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RepeatInstrumentMaintenance' from this record model
        """
        return self.get_field_value(self.REPEATINSTRUMENTMAINTENANCE__FIELD_NAME.field_name)

    def set_RepeatInterval_field(self, value: Optional[int]):
        """
        Set data field with field name 'RepeatInterval' on this record model
        """
        self.set_field_value(self.REPEATINTERVAL__FIELD_NAME.field_name, value)

    def get_RepeatInterval_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RepeatInterval' from this record model
        """
        return self.get_field_value(self.REPEATINTERVAL__FIELD_NAME.field_name)

    def set_RepeatIntervalTime_field(self, value: Optional[str]):
        """
        Set data field with field name 'RepeatIntervalTime' on this record model
        """
        self.set_field_value(self.REPEATINTERVALTIME__FIELD_NAME.field_name, value)

    def get_RepeatIntervalTime_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RepeatIntervalTime' from this record model
        """
        return self.get_field_value(self.REPEATINTERVALTIME__FIELD_NAME.field_name)

    def set_RequirementType_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequirementType' on this record model
        """
        self.set_field_value(self.REQUIREMENTTYPE__FIELD_NAME.field_name, value)

    def get_RequirementType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequirementType' from this record model
        """
        return self.get_field_value(self.REQUIREMENTTYPE__FIELD_NAME.field_name)

    def set_RequiresApproval_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequiresApproval' on this record model
        """
        self.set_field_value(self.REQUIRESAPPROVAL__FIELD_NAME.field_name, value)

    def get_RequiresApproval_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequiresApproval' from this record model
        """
        return self.get_field_value(self.REQUIRESAPPROVAL__FIELD_NAME.field_name)

    def set_RequiresESignatures_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequiresESignatures' on this record model
        """
        self.set_field_value(self.REQUIRESESIGNATURES__FIELD_NAME.field_name, value)

    def get_RequiresESignatures_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequiresESignatures' from this record model
        """
        return self.get_field_value(self.REQUIRESESIGNATURES__FIELD_NAME.field_name)

    def set_SentNotifications_field(self, value: Optional[int]):
        """
        Set data field with field name 'SentNotifications' on this record model
        """
        self.set_field_value(self.SENTNOTIFICATIONS__FIELD_NAME.field_name, value)

    def get_SentNotifications_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SentNotifications' from this record model
        """
        return self.get_field_value(self.SENTNOTIFICATIONS__FIELD_NAME.field_name)

    def set_ServiceDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ServiceDescription' on this record model
        """
        self.set_field_value(self.SERVICEDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ServiceDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ServiceDescription' from this record model
        """
        return self.get_field_value(self.SERVICEDESCRIPTION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkOrderNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkOrderNumber' on this record model
        """
        self.set_field_value(self.WORKORDERNUMBER__FIELD_NAME.field_name, value)

    def get_WorkOrderNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkOrderNumber' from this record model
        """
        return self.get_field_value(self.WORKORDERNUMBER__FIELD_NAME.field_name)


class MasterMixIngredientModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type MasterMixIngredient
    Data Type Display Name: Master Mix Ingredient Definition (Master Mix Ingredient Definitions)
    Fields: PartNumber, ConsumableType, DateCreated, ConsumableItemDataType, ContributionPercent, VeloxLastModifiedBy, CreatedBy, ConsumableRecordId, ConsumableDataType, Quantity, Units, ItemExtensionDataType, DataRecordName, VeloxLastModifiedDate, ConsumableName, ConcentrationUnits
    """
    DATA_TYPE_NAME: Final[str] = 'MasterMixIngredient'
    DISPLAY_NAME: Final[str] = "Master Mix Ingredient Definition"
    PLURAL_DISPLAY_NAME: Final[str] = "Master Mix Ingredient Definitions"
    CONCENTRATIONUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("ConcentrationUnits", FieldType.PICKLIST, display_name="Units")
    CONSUMABLEDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableDataType", FieldType.STRING, display_name="Consumable Data Type")
    CONSUMABLEITEMDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableItemDataType", FieldType.SELECTION, display_name="Item Data Type")
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Consumable Name                           ")
    CONSUMABLERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableRecordId", FieldType.LONG, display_name="Consumable Record ID")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.STRING, display_name="Consumable Type                         ")
    CONTRIBUTIONPERCENT__FIELD_NAME: Final[WrapperField] = WrapperField("ContributionPercent", FieldType.DOUBLE, display_name="Ratio / Percentage Of Total Quantity")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ITEMEXTENSIONDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ItemExtensionDataType", FieldType.SELECTION, display_name="Extension Data Type")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number                       ")
    QUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("Quantity", FieldType.DOUBLE, display_name="Quantity")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConcentrationUnits' on this record model
        """
        self.set_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_ConsumableDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableDataType' on this record model
        """
        self.set_field_value(self.CONSUMABLEDATATYPE__FIELD_NAME.field_name, value)

    def get_ConsumableDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableDataType' from this record model
        """
        return self.get_field_value(self.CONSUMABLEDATATYPE__FIELD_NAME.field_name)

    def set_ConsumableItemDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableItemDataType' on this record model
        """
        self.set_field_value(self.CONSUMABLEITEMDATATYPE__FIELD_NAME.field_name, value)

    def get_ConsumableItemDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableItemDataType' from this record model
        """
        return self.get_field_value(self.CONSUMABLEITEMDATATYPE__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ConsumableRecordId' on this record model
        """
        self.set_field_value(self.CONSUMABLERECORDID__FIELD_NAME.field_name, value)

    def get_ConsumableRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ConsumableRecordId' from this record model
        """
        return self.get_field_value(self.CONSUMABLERECORDID__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_ContributionPercent_field(self, value: Optional[float]):
        """
        Set data field with field name 'ContributionPercent' on this record model
        """
        self.set_field_value(self.CONTRIBUTIONPERCENT__FIELD_NAME.field_name, value)

    def get_ContributionPercent_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ContributionPercent' from this record model
        """
        return self.get_field_value(self.CONTRIBUTIONPERCENT__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ItemExtensionDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ItemExtensionDataType' on this record model
        """
        self.set_field_value(self.ITEMEXTENSIONDATATYPE__FIELD_NAME.field_name, value)

    def get_ItemExtensionDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ItemExtensionDataType' from this record model
        """
        return self.get_field_value(self.ITEMEXTENSIONDATATYPE__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_Quantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Quantity' on this record model
        """
        self.set_field_value(self.QUANTITY__FIELD_NAME.field_name, value)

    def get_Quantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Quantity' from this record model
        """
        return self.get_field_value(self.QUANTITY__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class MasterMixInstructionsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type MasterMixInstructions
    Data Type Display Name: Master Mix Instruction (Master Mix Instructions)
    Fields: CreatedBy, DateCreated, Instructions, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'MasterMixInstructions'
    DISPLAY_NAME: Final[str] = "Master Mix Instruction"
    PLURAL_DISPLAY_NAME: Final[str] = "Master Mix Instructions"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    INSTRUCTIONS__FIELD_NAME: Final[WrapperField] = WrapperField("Instructions", FieldType.STRING, display_name="Instructions")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Instructions_field(self, value: Optional[str]):
        """
        Set data field with field name 'Instructions' on this record model
        """
        self.set_field_value(self.INSTRUCTIONS__FIELD_NAME.field_name, value)

    def get_Instructions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Instructions' from this record model
        """
        return self.get_field_value(self.INSTRUCTIONS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class MasterMixItemModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type MasterMixItem
    Data Type Display Name: Master Mix Ingredient (Master Mix Ingredients)
    Fields: CreatedBy, PartNumber, ConsumableType, ConsumableRecordId, ConsumableDataType, DateCreated, ConsumableItemDataType, ConsumableBarcode, Units, ItemExtensionDataType, DataRecordName, LockFields, VeloxLastModifiedDate, VeloxLastModifiedBy, QuantityToUse, Notes, ConcentrationUnits, LotNumber
    The MasterMixItem Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'MasterMixItem'
    DISPLAY_NAME: Final[str] = "Master Mix Ingredient"
    PLURAL_DISPLAY_NAME: Final[str] = "Master Mix Ingredients"
    CONCENTRATIONUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("ConcentrationUnits", FieldType.PICKLIST, display_name="Units")
    CONSUMABLEBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableBarcode", FieldType.SELECTION, display_name="Barcode            ")
    CONSUMABLEDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableDataType", FieldType.STRING, display_name="Consumable Data Type")
    CONSUMABLEITEMDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableItemDataType", FieldType.SELECTION, display_name="Item Data Type")
    CONSUMABLERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableRecordId", FieldType.LONG, display_name="Consumable Record ID")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Consumable Type                  ")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ITEMEXTENSIONDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ItemExtensionDataType", FieldType.SELECTION, display_name="Extension Data Type")
    LOCKFIELDS__FIELD_NAME: Final[WrapperField] = WrapperField("LockFields", FieldType.BOOLEAN, display_name="Lock Fields")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.SELECTION, display_name="Lot Number                 ")
    NOTES__FIELD_NAME: Final[WrapperField] = WrapperField("Notes", FieldType.STRING, display_name="Notes")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number                 ")
    QUANTITYTOUSE__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityToUse", FieldType.DOUBLE, display_name="Quantity Used")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConcentrationUnits' on this record model
        """
        self.set_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_ConsumableBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableBarcode' on this record model
        """
        self.set_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name, value)

    def get_ConsumableBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableBarcode' from this record model
        """
        return self.get_field_value(self.CONSUMABLEBARCODE__FIELD_NAME.field_name)

    def set_ConsumableDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableDataType' on this record model
        """
        self.set_field_value(self.CONSUMABLEDATATYPE__FIELD_NAME.field_name, value)

    def get_ConsumableDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableDataType' from this record model
        """
        return self.get_field_value(self.CONSUMABLEDATATYPE__FIELD_NAME.field_name)

    def set_ConsumableItemDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableItemDataType' on this record model
        """
        self.set_field_value(self.CONSUMABLEITEMDATATYPE__FIELD_NAME.field_name, value)

    def get_ConsumableItemDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableItemDataType' from this record model
        """
        return self.get_field_value(self.CONSUMABLEITEMDATATYPE__FIELD_NAME.field_name)

    def set_ConsumableRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ConsumableRecordId' on this record model
        """
        self.set_field_value(self.CONSUMABLERECORDID__FIELD_NAME.field_name, value)

    def get_ConsumableRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ConsumableRecordId' from this record model
        """
        return self.get_field_value(self.CONSUMABLERECORDID__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ItemExtensionDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ItemExtensionDataType' on this record model
        """
        self.set_field_value(self.ITEMEXTENSIONDATATYPE__FIELD_NAME.field_name, value)

    def get_ItemExtensionDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ItemExtensionDataType' from this record model
        """
        return self.get_field_value(self.ITEMEXTENSIONDATATYPE__FIELD_NAME.field_name)

    def set_LockFields_field(self, value: Optional[bool]):
        """
        Set data field with field name 'LockFields' on this record model
        """
        self.set_field_value(self.LOCKFIELDS__FIELD_NAME.field_name, value)

    def get_LockFields_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'LockFields' from this record model
        """
        return self.get_field_value(self.LOCKFIELDS__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_Notes_field(self, value: Optional[str]):
        """
        Set data field with field name 'Notes' on this record model
        """
        self.set_field_value(self.NOTES__FIELD_NAME.field_name, value)

    def get_Notes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Notes' from this record model
        """
        return self.get_field_value(self.NOTES__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityToUse_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityToUse' on this record model
        """
        self.set_field_value(self.QUANTITYTOUSE__FIELD_NAME.field_name, value)

    def get_QuantityToUse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityToUse' from this record model
        """
        return self.get_field_value(self.QUANTITYTOUSE__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class MeasurementExceptionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type MeasurementException
    Data Type Display Name: Observation Exception (Observation Exceptions)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SubjectRecordId
    """
    DATA_TYPE_NAME: Final[str] = 'MeasurementException'
    DISPLAY_NAME: Final[str] = "Observation Exception"
    PLURAL_DISPLAY_NAME: Final[str] = "Observation Exceptions"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SUBJECTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SubjectRecordId", FieldType.LONG, display_name="Subject Record ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SubjectRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SubjectRecordId' on this record model
        """
        self.set_field_value(self.SUBJECTRECORDID__FIELD_NAME.field_name, value)

    def get_SubjectRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SubjectRecordId' from this record model
        """
        return self.get_field_value(self.SUBJECTRECORDID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class MoleculeModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Molecule
    Data Type Display Name: Molecule (Molecules)
    Fields: Conjugate, CAS_NO, PartNumber, FaSaltCoefficient, Render, MolWeight, Formula, RequestNotes, CreatedBy, UniSubId, ConcWarhead, CompoundLocation, DataRecordName, Barcode, TheoreticalYield, ConsumableName, ScientistName, MultiParentLink215, ExactMass, ConsumableType, SmallMolecularInhibitor, Nh3SaltCoefficient, CrudeWeight, DateCreated, ChEBI_ID, ReactionCoefficient, Stereochemistry, TfaSaltCoefficient, CrudeSolvent, ADCConcentration, PeptideString, LabLocation, VeloxLastModifiedBy, ADCConcIncubationLabeled, LotNumber, SubstanceName, MolarMass, DCNumber, Charge, SMILES, Linker, CrudeVolume, DilutionFactor, ScientistEmail, ExpirationDate, DAR, SupplierName, GenerateName, JchemId, VeloxLastModifiedDate, ReturnSolConc, ActualYield, ReturnFractionFormat, YieldPercentage
    """
    DATA_TYPE_NAME: Final[str] = 'Molecule'
    DISPLAY_NAME: Final[str] = "Molecule"
    PLURAL_DISPLAY_NAME: Final[str] = "Molecules"
    ADCCONCINCUBATIONLABELED__FIELD_NAME: Final[WrapperField] = WrapperField("ADCConcIncubationLabeled", FieldType.DOUBLE, display_name="ADC conc in incubation (Labelled) (nM)")
    ADCCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("ADCConcentration", FieldType.DOUBLE, display_name="Actual ADC Concentration (uM)")
    ACTUALYIELD__FIELD_NAME: Final[WrapperField] = WrapperField("ActualYield", FieldType.DOUBLE, display_name="Actual Yield")
    BARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("Barcode", FieldType.STRING, display_name="Barcode")
    CAS_NO__FIELD_NAME: Final[WrapperField] = WrapperField("CAS_NO", FieldType.STRING, display_name="CAS_NO")
    CHEBI_ID__FIELD_NAME: Final[WrapperField] = WrapperField("ChEBI_ID", FieldType.STRING, display_name="ChEBI ID")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    COMPOUNDLOCATION__FIELD_NAME: Final[WrapperField] = WrapperField("CompoundLocation", FieldType.PICKLIST, display_name="Compound Location")
    CONCWARHEAD__FIELD_NAME: Final[WrapperField] = WrapperField("ConcWarhead", FieldType.DOUBLE, display_name="Starting Concentration of Warhead (nM)")
    CONJUGATE__FIELD_NAME: Final[WrapperField] = WrapperField("Conjugate", FieldType.STRING, display_name="Actual Conjugate")
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Consumable Name         ")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Consumable Type        ")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CRUDESOLVENT__FIELD_NAME: Final[WrapperField] = WrapperField("CrudeSolvent", FieldType.STRING, display_name="Crude Solvent")
    CRUDEVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("CrudeVolume", FieldType.DOUBLE, display_name="Crude Volume")
    CRUDEWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("CrudeWeight", FieldType.DOUBLE, display_name="Crude Weight")
    DAR__FIELD_NAME: Final[WrapperField] = WrapperField("DAR", FieldType.DOUBLE, display_name="DAR [Drug - Antibody Ratio]")
    DCNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("DCNumber", FieldType.STRING, display_name="DC Number")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DILUTIONFACTOR__FIELD_NAME: Final[WrapperField] = WrapperField("DilutionFactor", FieldType.DOUBLE, display_name="Dilution Factor")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    FASALTCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("FaSaltCoefficient", FieldType.DOUBLE, display_name="FA Salt Coefficient")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GENERATENAME__FIELD_NAME: Final[WrapperField] = WrapperField("GenerateName", FieldType.ACTION, display_name="Generate Substance Name")
    JCHEMID__FIELD_NAME: Final[WrapperField] = WrapperField("JchemId", FieldType.INTEGER, display_name="ChemAxon ID")
    LABLOCATION__FIELD_NAME: Final[WrapperField] = WrapperField("LabLocation", FieldType.STRING, display_name="Lab Location")
    LINKER__FIELD_NAME: Final[WrapperField] = WrapperField("Linker", FieldType.STRING, display_name="Linker")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number    ")
    MOLWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolWeight", FieldType.DOUBLE, display_name="Molecule Weight")
    MOLARMASS__FIELD_NAME: Final[WrapperField] = WrapperField("MolarMass", FieldType.DOUBLE, display_name="Molar Mass")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    NH3SALTCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("Nh3SaltCoefficient", FieldType.DOUBLE, display_name="NH3 Salt Coefficient")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number                       ")
    PEPTIDESTRING__FIELD_NAME: Final[WrapperField] = WrapperField("PeptideString", FieldType.STRING, display_name="Peptide String")
    REACTIONCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("ReactionCoefficient", FieldType.INTEGER, display_name="Reaction Coefficient")
    RENDER__FIELD_NAME: Final[WrapperField] = WrapperField("Render", FieldType.STRING, display_name="Render")
    REQUESTNOTES__FIELD_NAME: Final[WrapperField] = WrapperField("RequestNotes", FieldType.STRING, display_name="Request Notes")
    RETURNFRACTIONFORMAT__FIELD_NAME: Final[WrapperField] = WrapperField("ReturnFractionFormat", FieldType.STRING, display_name="Return Fraction Format")
    RETURNSOLCONC__FIELD_NAME: Final[WrapperField] = WrapperField("ReturnSolConc", FieldType.DOUBLE, display_name="Return Solution Concentration")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="SMILES")
    SCIENTISTEMAIL__FIELD_NAME: Final[WrapperField] = WrapperField("ScientistEmail", FieldType.STRING, display_name="Scientist Email")
    SCIENTISTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ScientistName", FieldType.STRING, display_name="Scientist Name")
    SMALLMOLECULARINHIBITOR__FIELD_NAME: Final[WrapperField] = WrapperField("SmallMolecularInhibitor", FieldType.INTEGER, display_name="Small Molecule Inhibitor (SMI)")
    STEREOCHEMISTRY__FIELD_NAME: Final[WrapperField] = WrapperField("Stereochemistry", FieldType.STRING, display_name="Stereochemistry")
    SUBSTANCENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SubstanceName", FieldType.STRING, display_name="Substance Name")
    SUPPLIERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SupplierName", FieldType.STRING, display_name="Supplier Name")
    TFASALTCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("TfaSaltCoefficient", FieldType.DOUBLE, display_name="TFA Salt Coefficient")
    THEORETICALYIELD__FIELD_NAME: Final[WrapperField] = WrapperField("TheoreticalYield", FieldType.DOUBLE, display_name="Theoretical Yield")
    UNISUBID__FIELD_NAME: Final[WrapperField] = WrapperField("UniSubId", FieldType.STRING, display_name="Uni Sub Id")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    YIELDPERCENTAGE__FIELD_NAME: Final[WrapperField] = WrapperField("YieldPercentage", FieldType.DOUBLE, display_name="Yield Percentage")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ADCConcIncubationLabeled_field(self, value: Optional[float]):
        """
        Set data field with field name 'ADCConcIncubationLabeled' on this record model
        """
        self.set_field_value(self.ADCCONCINCUBATIONLABELED__FIELD_NAME.field_name, value)

    def get_ADCConcIncubationLabeled_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ADCConcIncubationLabeled' from this record model
        """
        return self.get_field_value(self.ADCCONCINCUBATIONLABELED__FIELD_NAME.field_name)

    def set_ADCConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'ADCConcentration' on this record model
        """
        self.set_field_value(self.ADCCONCENTRATION__FIELD_NAME.field_name, value)

    def get_ADCConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ADCConcentration' from this record model
        """
        return self.get_field_value(self.ADCCONCENTRATION__FIELD_NAME.field_name)

    def set_ActualYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'ActualYield' on this record model
        """
        self.set_field_value(self.ACTUALYIELD__FIELD_NAME.field_name, value)

    def get_ActualYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ActualYield' from this record model
        """
        return self.get_field_value(self.ACTUALYIELD__FIELD_NAME.field_name)

    def set_Barcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Barcode' on this record model
        """
        self.set_field_value(self.BARCODE__FIELD_NAME.field_name, value)

    def get_Barcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Barcode' from this record model
        """
        return self.get_field_value(self.BARCODE__FIELD_NAME.field_name)

    def set_CAS_NO_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS_NO' on this record model
        """
        self.set_field_value(self.CAS_NO__FIELD_NAME.field_name, value)

    def get_CAS_NO_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS_NO' from this record model
        """
        return self.get_field_value(self.CAS_NO__FIELD_NAME.field_name)

    def set_ChEBI_ID_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChEBI_ID' on this record model
        """
        self.set_field_value(self.CHEBI_ID__FIELD_NAME.field_name, value)

    def get_ChEBI_ID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChEBI_ID' from this record model
        """
        return self.get_field_value(self.CHEBI_ID__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_CompoundLocation_field(self, value: Optional[str]):
        """
        Set data field with field name 'CompoundLocation' on this record model
        """
        self.set_field_value(self.COMPOUNDLOCATION__FIELD_NAME.field_name, value)

    def get_CompoundLocation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CompoundLocation' from this record model
        """
        return self.get_field_value(self.COMPOUNDLOCATION__FIELD_NAME.field_name)

    def set_ConcWarhead_field(self, value: Optional[float]):
        """
        Set data field with field name 'ConcWarhead' on this record model
        """
        self.set_field_value(self.CONCWARHEAD__FIELD_NAME.field_name, value)

    def get_ConcWarhead_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ConcWarhead' from this record model
        """
        return self.get_field_value(self.CONCWARHEAD__FIELD_NAME.field_name)

    def set_Conjugate_field(self, value: Optional[str]):
        """
        Set data field with field name 'Conjugate' on this record model
        """
        self.set_field_value(self.CONJUGATE__FIELD_NAME.field_name, value)

    def get_Conjugate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Conjugate' from this record model
        """
        return self.get_field_value(self.CONJUGATE__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CrudeSolvent_field(self, value: Optional[str]):
        """
        Set data field with field name 'CrudeSolvent' on this record model
        """
        self.set_field_value(self.CRUDESOLVENT__FIELD_NAME.field_name, value)

    def get_CrudeSolvent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CrudeSolvent' from this record model
        """
        return self.get_field_value(self.CRUDESOLVENT__FIELD_NAME.field_name)

    def set_CrudeVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'CrudeVolume' on this record model
        """
        self.set_field_value(self.CRUDEVOLUME__FIELD_NAME.field_name, value)

    def get_CrudeVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CrudeVolume' from this record model
        """
        return self.get_field_value(self.CRUDEVOLUME__FIELD_NAME.field_name)

    def set_CrudeWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'CrudeWeight' on this record model
        """
        self.set_field_value(self.CRUDEWEIGHT__FIELD_NAME.field_name, value)

    def get_CrudeWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CrudeWeight' from this record model
        """
        return self.get_field_value(self.CRUDEWEIGHT__FIELD_NAME.field_name)

    def set_DAR_field(self, value: Optional[float]):
        """
        Set data field with field name 'DAR' on this record model
        """
        self.set_field_value(self.DAR__FIELD_NAME.field_name, value)

    def get_DAR_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DAR' from this record model
        """
        return self.get_field_value(self.DAR__FIELD_NAME.field_name)

    def set_DCNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'DCNumber' on this record model
        """
        self.set_field_value(self.DCNUMBER__FIELD_NAME.field_name, value)

    def get_DCNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DCNumber' from this record model
        """
        return self.get_field_value(self.DCNUMBER__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutionFactor' on this record model
        """
        self.set_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_DilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutionFactor' from this record model
        """
        return self.get_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_FaSaltCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'FaSaltCoefficient' on this record model
        """
        self.set_field_value(self.FASALTCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_FaSaltCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FaSaltCoefficient' from this record model
        """
        return self.get_field_value(self.FASALTCOEFFICIENT__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_JchemId_field(self, value: Optional[int]):
        """
        Set data field with field name 'JchemId' on this record model
        """
        self.set_field_value(self.JCHEMID__FIELD_NAME.field_name, value)

    def get_JchemId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'JchemId' from this record model
        """
        return self.get_field_value(self.JCHEMID__FIELD_NAME.field_name)

    def set_LabLocation_field(self, value: Optional[str]):
        """
        Set data field with field name 'LabLocation' on this record model
        """
        self.set_field_value(self.LABLOCATION__FIELD_NAME.field_name, value)

    def get_LabLocation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LabLocation' from this record model
        """
        return self.get_field_value(self.LABLOCATION__FIELD_NAME.field_name)

    def set_Linker_field(self, value: Optional[str]):
        """
        Set data field with field name 'Linker' on this record model
        """
        self.set_field_value(self.LINKER__FIELD_NAME.field_name, value)

    def get_Linker_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Linker' from this record model
        """
        return self.get_field_value(self.LINKER__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolWeight' on this record model
        """
        self.set_field_value(self.MOLWEIGHT__FIELD_NAME.field_name, value)

    def get_MolWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolWeight' from this record model
        """
        return self.get_field_value(self.MOLWEIGHT__FIELD_NAME.field_name)

    def set_MolarMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolarMass' on this record model
        """
        self.set_field_value(self.MOLARMASS__FIELD_NAME.field_name, value)

    def get_MolarMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolarMass' from this record model
        """
        return self.get_field_value(self.MOLARMASS__FIELD_NAME.field_name)

    def set_Nh3SaltCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'Nh3SaltCoefficient' on this record model
        """
        self.set_field_value(self.NH3SALTCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_Nh3SaltCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Nh3SaltCoefficient' from this record model
        """
        return self.get_field_value(self.NH3SALTCOEFFICIENT__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_PeptideString_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeptideString' on this record model
        """
        self.set_field_value(self.PEPTIDESTRING__FIELD_NAME.field_name, value)

    def get_PeptideString_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeptideString' from this record model
        """
        return self.get_field_value(self.PEPTIDESTRING__FIELD_NAME.field_name)

    def set_ReactionCoefficient_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReactionCoefficient' on this record model
        """
        self.set_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_ReactionCoefficient_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReactionCoefficient' from this record model
        """
        return self.get_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name)

    def set_Render_field(self, value: Optional[str]):
        """
        Set data field with field name 'Render' on this record model
        """
        self.set_field_value(self.RENDER__FIELD_NAME.field_name, value)

    def get_Render_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Render' from this record model
        """
        return self.get_field_value(self.RENDER__FIELD_NAME.field_name)

    def set_RequestNotes_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequestNotes' on this record model
        """
        self.set_field_value(self.REQUESTNOTES__FIELD_NAME.field_name, value)

    def get_RequestNotes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequestNotes' from this record model
        """
        return self.get_field_value(self.REQUESTNOTES__FIELD_NAME.field_name)

    def set_ReturnFractionFormat_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReturnFractionFormat' on this record model
        """
        self.set_field_value(self.RETURNFRACTIONFORMAT__FIELD_NAME.field_name, value)

    def get_ReturnFractionFormat_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReturnFractionFormat' from this record model
        """
        return self.get_field_value(self.RETURNFRACTIONFORMAT__FIELD_NAME.field_name)

    def set_ReturnSolConc_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReturnSolConc' on this record model
        """
        self.set_field_value(self.RETURNSOLCONC__FIELD_NAME.field_name, value)

    def get_ReturnSolConc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReturnSolConc' from this record model
        """
        return self.get_field_value(self.RETURNSOLCONC__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_ScientistEmail_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScientistEmail' on this record model
        """
        self.set_field_value(self.SCIENTISTEMAIL__FIELD_NAME.field_name, value)

    def get_ScientistEmail_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScientistEmail' from this record model
        """
        return self.get_field_value(self.SCIENTISTEMAIL__FIELD_NAME.field_name)

    def set_ScientistName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScientistName' on this record model
        """
        self.set_field_value(self.SCIENTISTNAME__FIELD_NAME.field_name, value)

    def get_ScientistName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScientistName' from this record model
        """
        return self.get_field_value(self.SCIENTISTNAME__FIELD_NAME.field_name)

    def set_SmallMolecularInhibitor_field(self, value: Optional[int]):
        """
        Set data field with field name 'SmallMolecularInhibitor' on this record model
        """
        self.set_field_value(self.SMALLMOLECULARINHIBITOR__FIELD_NAME.field_name, value)

    def get_SmallMolecularInhibitor_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SmallMolecularInhibitor' from this record model
        """
        return self.get_field_value(self.SMALLMOLECULARINHIBITOR__FIELD_NAME.field_name)

    def set_Stereochemistry_field(self, value: Optional[str]):
        """
        Set data field with field name 'Stereochemistry' on this record model
        """
        self.set_field_value(self.STEREOCHEMISTRY__FIELD_NAME.field_name, value)

    def get_Stereochemistry_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Stereochemistry' from this record model
        """
        return self.get_field_value(self.STEREOCHEMISTRY__FIELD_NAME.field_name)

    def set_SubstanceName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubstanceName' on this record model
        """
        self.set_field_value(self.SUBSTANCENAME__FIELD_NAME.field_name, value)

    def get_SubstanceName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubstanceName' from this record model
        """
        return self.get_field_value(self.SUBSTANCENAME__FIELD_NAME.field_name)

    def set_SupplierName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SupplierName' on this record model
        """
        self.set_field_value(self.SUPPLIERNAME__FIELD_NAME.field_name, value)

    def get_SupplierName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SupplierName' from this record model
        """
        return self.get_field_value(self.SUPPLIERNAME__FIELD_NAME.field_name)

    def set_TfaSaltCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'TfaSaltCoefficient' on this record model
        """
        self.set_field_value(self.TFASALTCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_TfaSaltCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TfaSaltCoefficient' from this record model
        """
        return self.get_field_value(self.TFASALTCOEFFICIENT__FIELD_NAME.field_name)

    def set_TheoreticalYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'TheoreticalYield' on this record model
        """
        self.set_field_value(self.THEORETICALYIELD__FIELD_NAME.field_name, value)

    def get_TheoreticalYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TheoreticalYield' from this record model
        """
        return self.get_field_value(self.THEORETICALYIELD__FIELD_NAME.field_name)

    def set_UniSubId_field(self, value: Optional[str]):
        """
        Set data field with field name 'UniSubId' on this record model
        """
        self.set_field_value(self.UNISUBID__FIELD_NAME.field_name, value)

    def get_UniSubId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UniSubId' from this record model
        """
        return self.get_field_value(self.UNISUBID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_YieldPercentage_field(self, value: Optional[float]):
        """
        Set data field with field name 'YieldPercentage' on this record model
        """
        self.set_field_value(self.YIELDPERCENTAGE__FIELD_NAME.field_name, value)

    def get_YieldPercentage_field(self) -> Optional[float]:
        """
        Get data field value with field name 'YieldPercentage' from this record model
        """
        return self.get_field_value(self.YIELDPERCENTAGE__FIELD_NAME.field_name)


class MsdResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type MsdResult
    Data Type Display Name: MSD Result (MSD Results)
    Fields: Mean, DetectionLimitsBotOfRangeType, DetectionLimitsCalcLow, Spot, Well, SignalValue, DateCreated, DetectionLimitsBotOfRangeParam, BackFitCurve, DetectionRange, AlgorithmParameterWeighting, CalcConcentration, Assay, FitStatisticRSquared, VeloxLastModifiedBy, SampleDescription, AlgorithmParamCalcHillSlope, AlgorithmParamCalcBottom, Excluded, AlgorithmParamCalcAsymFactor, DetectionLimitsTopOfRangeParam, AlgorithmParamCalcYInt, CreatedBy, PlateName, Sample, Concentration, AlgorithmParamCalcTop, SampleGroup, DetectionLimitsTopOfRangeType, Algorithm, Dilution, AlgorithmParamCalcMidPoint, CV, DataRecordName, DetectionLimitsCalcHigh, VeloxLastModifiedDate, CalcConcCV, PercentRecovery, CalcConcMean, PercentRecoveryMean
    """
    DATA_TYPE_NAME: Final[str] = 'MsdResult'
    DISPLAY_NAME: Final[str] = "MSD Result"
    PLURAL_DISPLAY_NAME: Final[str] = "MSD Results"
    ALGORITHM__FIELD_NAME: Final[WrapperField] = WrapperField("Algorithm", FieldType.STRING, display_name="Algorithm")
    ALGORITHMPARAMCALCASYMFACTOR__FIELD_NAME: Final[WrapperField] = WrapperField("AlgorithmParamCalcAsymFactor", FieldType.DOUBLE, display_name="Algorithm Parameter: Calc. AsymmetryFactor")
    ALGORITHMPARAMCALCBOTTOM__FIELD_NAME: Final[WrapperField] = WrapperField("AlgorithmParamCalcBottom", FieldType.DOUBLE, display_name="Algorithm Parameter: Calc. Bottom")
    ALGORITHMPARAMCALCHILLSLOPE__FIELD_NAME: Final[WrapperField] = WrapperField("AlgorithmParamCalcHillSlope", FieldType.DOUBLE, display_name="Algorithm Parameter: Calc. HillSlope")
    ALGORITHMPARAMCALCMIDPOINT__FIELD_NAME: Final[WrapperField] = WrapperField("AlgorithmParamCalcMidPoint", FieldType.DOUBLE, display_name="Algorithm Parameter: Calc. MidPoint")
    ALGORITHMPARAMCALCTOP__FIELD_NAME: Final[WrapperField] = WrapperField("AlgorithmParamCalcTop", FieldType.DOUBLE, display_name="Algorithm Parameter: Calc. Top")
    ALGORITHMPARAMCALCYINT__FIELD_NAME: Final[WrapperField] = WrapperField("AlgorithmParamCalcYInt", FieldType.DOUBLE, display_name="Algorithm Parameter: Calc. Y intercept")
    ALGORITHMPARAMETERWEIGHTING__FIELD_NAME: Final[WrapperField] = WrapperField("AlgorithmParameterWeighting", FieldType.STRING, display_name="Algorithm Parameter: Weighting")
    ASSAY__FIELD_NAME: Final[WrapperField] = WrapperField("Assay", FieldType.STRING, display_name="Assay")
    BACKFITCURVE__FIELD_NAME: Final[WrapperField] = WrapperField("BackFitCurve", FieldType.STRING, display_name="Back Fit Curve")
    CV__FIELD_NAME: Final[WrapperField] = WrapperField("CV", FieldType.DOUBLE, display_name="CV")
    CALCCONCCV__FIELD_NAME: Final[WrapperField] = WrapperField("CalcConcCV", FieldType.DOUBLE, display_name="Calc. Conc. CV")
    CALCCONCMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("CalcConcMean", FieldType.DOUBLE, display_name="Calc. Conc. Mean")
    CALCCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("CalcConcentration", FieldType.DOUBLE, display_name="Calc. Concentration")
    CONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("Concentration", FieldType.DOUBLE, display_name="Concentration")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DETECTIONLIMITSBOTOFRANGEPARAM__FIELD_NAME: Final[WrapperField] = WrapperField("DetectionLimitsBotOfRangeParam", FieldType.DOUBLE, display_name="Detection Limits: Bottom of Range Parameter")
    DETECTIONLIMITSBOTOFRANGETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DetectionLimitsBotOfRangeType", FieldType.STRING, display_name="Detection Limits: Bottom of Range Type")
    DETECTIONLIMITSCALCHIGH__FIELD_NAME: Final[WrapperField] = WrapperField("DetectionLimitsCalcHigh", FieldType.DOUBLE, display_name="Detection Limits: Calc. High")
    DETECTIONLIMITSCALCLOW__FIELD_NAME: Final[WrapperField] = WrapperField("DetectionLimitsCalcLow", FieldType.DOUBLE, display_name="Detection Limits: Calc. Low")
    DETECTIONLIMITSTOPOFRANGEPARAM__FIELD_NAME: Final[WrapperField] = WrapperField("DetectionLimitsTopOfRangeParam", FieldType.DOUBLE, display_name="Detection Limits: Top of Range Parameter")
    DETECTIONLIMITSTOPOFRANGETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DetectionLimitsTopOfRangeType", FieldType.STRING, display_name="Detection Limits: Top of Range Type")
    DETECTIONRANGE__FIELD_NAME: Final[WrapperField] = WrapperField("DetectionRange", FieldType.STRING, display_name="Detection Range")
    DILUTION__FIELD_NAME: Final[WrapperField] = WrapperField("Dilution", FieldType.DOUBLE, display_name="Dilution")
    EXCLUDED__FIELD_NAME: Final[WrapperField] = WrapperField("Excluded", FieldType.PICKLIST, display_name="Excluded")
    FITSTATISTICRSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("FitStatisticRSquared", FieldType.DOUBLE, display_name="Fit Statistic: R Squared")
    MEAN__FIELD_NAME: Final[WrapperField] = WrapperField("Mean", FieldType.DOUBLE, display_name="Mean")
    PERCENTRECOVERY__FIELD_NAME: Final[WrapperField] = WrapperField("PercentRecovery", FieldType.DOUBLE, display_name="% Recovery")
    PERCENTRECOVERYMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("PercentRecoveryMean", FieldType.DOUBLE, display_name="% Recovery Mean")
    PLATENAME__FIELD_NAME: Final[WrapperField] = WrapperField("PlateName", FieldType.STRING, display_name="Plate Name")
    SAMPLE__FIELD_NAME: Final[WrapperField] = WrapperField("Sample", FieldType.STRING, display_name="Sample")
    SAMPLEDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("SampleDescription", FieldType.STRING, display_name="Sample Description")
    SAMPLEGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("SampleGroup", FieldType.STRING, display_name="Sample Group")
    SIGNALVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("SignalValue", FieldType.DOUBLE, display_name="Signal")
    SPOT__FIELD_NAME: Final[WrapperField] = WrapperField("Spot", FieldType.STRING, display_name="Spot")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WELL__FIELD_NAME: Final[WrapperField] = WrapperField("Well", FieldType.STRING, display_name="Well")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Algorithm_field(self, value: Optional[str]):
        """
        Set data field with field name 'Algorithm' on this record model
        """
        self.set_field_value(self.ALGORITHM__FIELD_NAME.field_name, value)

    def get_Algorithm_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Algorithm' from this record model
        """
        return self.get_field_value(self.ALGORITHM__FIELD_NAME.field_name)

    def set_AlgorithmParamCalcAsymFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlgorithmParamCalcAsymFactor' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMCALCASYMFACTOR__FIELD_NAME.field_name, value)

    def get_AlgorithmParamCalcAsymFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlgorithmParamCalcAsymFactor' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMCALCASYMFACTOR__FIELD_NAME.field_name)

    def set_AlgorithmParamCalcBottom_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlgorithmParamCalcBottom' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMCALCBOTTOM__FIELD_NAME.field_name, value)

    def get_AlgorithmParamCalcBottom_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlgorithmParamCalcBottom' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMCALCBOTTOM__FIELD_NAME.field_name)

    def set_AlgorithmParamCalcHillSlope_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlgorithmParamCalcHillSlope' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMCALCHILLSLOPE__FIELD_NAME.field_name, value)

    def get_AlgorithmParamCalcHillSlope_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlgorithmParamCalcHillSlope' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMCALCHILLSLOPE__FIELD_NAME.field_name)

    def set_AlgorithmParamCalcMidPoint_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlgorithmParamCalcMidPoint' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMCALCMIDPOINT__FIELD_NAME.field_name, value)

    def get_AlgorithmParamCalcMidPoint_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlgorithmParamCalcMidPoint' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMCALCMIDPOINT__FIELD_NAME.field_name)

    def set_AlgorithmParamCalcTop_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlgorithmParamCalcTop' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMCALCTOP__FIELD_NAME.field_name, value)

    def get_AlgorithmParamCalcTop_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlgorithmParamCalcTop' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMCALCTOP__FIELD_NAME.field_name)

    def set_AlgorithmParamCalcYInt_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlgorithmParamCalcYInt' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMCALCYINT__FIELD_NAME.field_name, value)

    def get_AlgorithmParamCalcYInt_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlgorithmParamCalcYInt' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMCALCYINT__FIELD_NAME.field_name)

    def set_AlgorithmParameterWeighting_field(self, value: Optional[str]):
        """
        Set data field with field name 'AlgorithmParameterWeighting' on this record model
        """
        self.set_field_value(self.ALGORITHMPARAMETERWEIGHTING__FIELD_NAME.field_name, value)

    def get_AlgorithmParameterWeighting_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AlgorithmParameterWeighting' from this record model
        """
        return self.get_field_value(self.ALGORITHMPARAMETERWEIGHTING__FIELD_NAME.field_name)

    def set_Assay_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assay' on this record model
        """
        self.set_field_value(self.ASSAY__FIELD_NAME.field_name, value)

    def get_Assay_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assay' from this record model
        """
        return self.get_field_value(self.ASSAY__FIELD_NAME.field_name)

    def set_BackFitCurve_field(self, value: Optional[str]):
        """
        Set data field with field name 'BackFitCurve' on this record model
        """
        self.set_field_value(self.BACKFITCURVE__FIELD_NAME.field_name, value)

    def get_BackFitCurve_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BackFitCurve' from this record model
        """
        return self.get_field_value(self.BACKFITCURVE__FIELD_NAME.field_name)

    def set_CV_field(self, value: Optional[float]):
        """
        Set data field with field name 'CV' on this record model
        """
        self.set_field_value(self.CV__FIELD_NAME.field_name, value)

    def get_CV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CV' from this record model
        """
        return self.get_field_value(self.CV__FIELD_NAME.field_name)

    def set_CalcConcCV_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalcConcCV' on this record model
        """
        self.set_field_value(self.CALCCONCCV__FIELD_NAME.field_name, value)

    def get_CalcConcCV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalcConcCV' from this record model
        """
        return self.get_field_value(self.CALCCONCCV__FIELD_NAME.field_name)

    def set_CalcConcMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalcConcMean' on this record model
        """
        self.set_field_value(self.CALCCONCMEAN__FIELD_NAME.field_name, value)

    def get_CalcConcMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalcConcMean' from this record model
        """
        return self.get_field_value(self.CALCCONCMEAN__FIELD_NAME.field_name)

    def set_CalcConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalcConcentration' on this record model
        """
        self.set_field_value(self.CALCCONCENTRATION__FIELD_NAME.field_name, value)

    def get_CalcConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalcConcentration' from this record model
        """
        return self.get_field_value(self.CALCCONCENTRATION__FIELD_NAME.field_name)

    def set_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Concentration' on this record model
        """
        self.set_field_value(self.CONCENTRATION__FIELD_NAME.field_name, value)

    def get_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Concentration' from this record model
        """
        return self.get_field_value(self.CONCENTRATION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DetectionLimitsBotOfRangeParam_field(self, value: Optional[float]):
        """
        Set data field with field name 'DetectionLimitsBotOfRangeParam' on this record model
        """
        self.set_field_value(self.DETECTIONLIMITSBOTOFRANGEPARAM__FIELD_NAME.field_name, value)

    def get_DetectionLimitsBotOfRangeParam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DetectionLimitsBotOfRangeParam' from this record model
        """
        return self.get_field_value(self.DETECTIONLIMITSBOTOFRANGEPARAM__FIELD_NAME.field_name)

    def set_DetectionLimitsBotOfRangeType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DetectionLimitsBotOfRangeType' on this record model
        """
        self.set_field_value(self.DETECTIONLIMITSBOTOFRANGETYPE__FIELD_NAME.field_name, value)

    def get_DetectionLimitsBotOfRangeType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DetectionLimitsBotOfRangeType' from this record model
        """
        return self.get_field_value(self.DETECTIONLIMITSBOTOFRANGETYPE__FIELD_NAME.field_name)

    def set_DetectionLimitsCalcHigh_field(self, value: Optional[float]):
        """
        Set data field with field name 'DetectionLimitsCalcHigh' on this record model
        """
        self.set_field_value(self.DETECTIONLIMITSCALCHIGH__FIELD_NAME.field_name, value)

    def get_DetectionLimitsCalcHigh_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DetectionLimitsCalcHigh' from this record model
        """
        return self.get_field_value(self.DETECTIONLIMITSCALCHIGH__FIELD_NAME.field_name)

    def set_DetectionLimitsCalcLow_field(self, value: Optional[float]):
        """
        Set data field with field name 'DetectionLimitsCalcLow' on this record model
        """
        self.set_field_value(self.DETECTIONLIMITSCALCLOW__FIELD_NAME.field_name, value)

    def get_DetectionLimitsCalcLow_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DetectionLimitsCalcLow' from this record model
        """
        return self.get_field_value(self.DETECTIONLIMITSCALCLOW__FIELD_NAME.field_name)

    def set_DetectionLimitsTopOfRangeParam_field(self, value: Optional[float]):
        """
        Set data field with field name 'DetectionLimitsTopOfRangeParam' on this record model
        """
        self.set_field_value(self.DETECTIONLIMITSTOPOFRANGEPARAM__FIELD_NAME.field_name, value)

    def get_DetectionLimitsTopOfRangeParam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DetectionLimitsTopOfRangeParam' from this record model
        """
        return self.get_field_value(self.DETECTIONLIMITSTOPOFRANGEPARAM__FIELD_NAME.field_name)

    def set_DetectionLimitsTopOfRangeType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DetectionLimitsTopOfRangeType' on this record model
        """
        self.set_field_value(self.DETECTIONLIMITSTOPOFRANGETYPE__FIELD_NAME.field_name, value)

    def get_DetectionLimitsTopOfRangeType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DetectionLimitsTopOfRangeType' from this record model
        """
        return self.get_field_value(self.DETECTIONLIMITSTOPOFRANGETYPE__FIELD_NAME.field_name)

    def set_DetectionRange_field(self, value: Optional[str]):
        """
        Set data field with field name 'DetectionRange' on this record model
        """
        self.set_field_value(self.DETECTIONRANGE__FIELD_NAME.field_name, value)

    def get_DetectionRange_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DetectionRange' from this record model
        """
        return self.get_field_value(self.DETECTIONRANGE__FIELD_NAME.field_name)

    def set_Dilution_field(self, value: Optional[float]):
        """
        Set data field with field name 'Dilution' on this record model
        """
        self.set_field_value(self.DILUTION__FIELD_NAME.field_name, value)

    def get_Dilution_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Dilution' from this record model
        """
        return self.get_field_value(self.DILUTION__FIELD_NAME.field_name)

    def set_Excluded_field(self, value: Optional[str]):
        """
        Set data field with field name 'Excluded' on this record model
        """
        self.set_field_value(self.EXCLUDED__FIELD_NAME.field_name, value)

    def get_Excluded_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Excluded' from this record model
        """
        return self.get_field_value(self.EXCLUDED__FIELD_NAME.field_name)

    def set_FitStatisticRSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'FitStatisticRSquared' on this record model
        """
        self.set_field_value(self.FITSTATISTICRSQUARED__FIELD_NAME.field_name, value)

    def get_FitStatisticRSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FitStatisticRSquared' from this record model
        """
        return self.get_field_value(self.FITSTATISTICRSQUARED__FIELD_NAME.field_name)

    def set_Mean_field(self, value: Optional[float]):
        """
        Set data field with field name 'Mean' on this record model
        """
        self.set_field_value(self.MEAN__FIELD_NAME.field_name, value)

    def get_Mean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Mean' from this record model
        """
        return self.get_field_value(self.MEAN__FIELD_NAME.field_name)

    def set_PercentRecovery_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentRecovery' on this record model
        """
        self.set_field_value(self.PERCENTRECOVERY__FIELD_NAME.field_name, value)

    def get_PercentRecovery_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentRecovery' from this record model
        """
        return self.get_field_value(self.PERCENTRECOVERY__FIELD_NAME.field_name)

    def set_PercentRecoveryMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentRecoveryMean' on this record model
        """
        self.set_field_value(self.PERCENTRECOVERYMEAN__FIELD_NAME.field_name, value)

    def get_PercentRecoveryMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentRecoveryMean' from this record model
        """
        return self.get_field_value(self.PERCENTRECOVERYMEAN__FIELD_NAME.field_name)

    def set_PlateName_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateName' on this record model
        """
        self.set_field_value(self.PLATENAME__FIELD_NAME.field_name, value)

    def get_PlateName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateName' from this record model
        """
        return self.get_field_value(self.PLATENAME__FIELD_NAME.field_name)

    def set_Sample_field(self, value: Optional[str]):
        """
        Set data field with field name 'Sample' on this record model
        """
        self.set_field_value(self.SAMPLE__FIELD_NAME.field_name, value)

    def get_Sample_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Sample' from this record model
        """
        return self.get_field_value(self.SAMPLE__FIELD_NAME.field_name)

    def set_SampleDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleDescription' on this record model
        """
        self.set_field_value(self.SAMPLEDESCRIPTION__FIELD_NAME.field_name, value)

    def get_SampleDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleDescription' from this record model
        """
        return self.get_field_value(self.SAMPLEDESCRIPTION__FIELD_NAME.field_name)

    def set_SampleGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleGroup' on this record model
        """
        self.set_field_value(self.SAMPLEGROUP__FIELD_NAME.field_name, value)

    def get_SampleGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleGroup' from this record model
        """
        return self.get_field_value(self.SAMPLEGROUP__FIELD_NAME.field_name)

    def set_SignalValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'SignalValue' on this record model
        """
        self.set_field_value(self.SIGNALVALUE__FIELD_NAME.field_name, value)

    def get_SignalValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SignalValue' from this record model
        """
        return self.get_field_value(self.SIGNALVALUE__FIELD_NAME.field_name)

    def set_Spot_field(self, value: Optional[str]):
        """
        Set data field with field name 'Spot' on this record model
        """
        self.set_field_value(self.SPOT__FIELD_NAME.field_name, value)

    def get_Spot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Spot' from this record model
        """
        return self.get_field_value(self.SPOT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Well_field(self, value: Optional[str]):
        """
        Set data field with field name 'Well' on this record model
        """
        self.set_field_value(self.WELL__FIELD_NAME.field_name, value)

    def get_Well_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Well' from this record model
        """
        return self.get_field_value(self.WELL__FIELD_NAME.field_name)


class NanodropResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NanodropResult
    Data Type Display Name: Nanodrop Result (Nanodrop Results)
    Fields: A260230, CreatedBy, DataRecordName, A260, A280, VeloxLastModifiedDate, A260280, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'NanodropResult'
    DISPLAY_NAME: Final[str] = "Nanodrop Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Nanodrop Results"
    A260__FIELD_NAME: Final[WrapperField] = WrapperField("A260", FieldType.DOUBLE, display_name="A260")
    A260230__FIELD_NAME: Final[WrapperField] = WrapperField("A260230", FieldType.DOUBLE, display_name="A260/230")
    A260280__FIELD_NAME: Final[WrapperField] = WrapperField("A260280", FieldType.DOUBLE, display_name="A260/280")
    A280__FIELD_NAME: Final[WrapperField] = WrapperField("A280", FieldType.DOUBLE, display_name="A280")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A260_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260' on this record model
        """
        self.set_field_value(self.A260__FIELD_NAME.field_name, value)

    def get_A260_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260' from this record model
        """
        return self.get_field_value(self.A260__FIELD_NAME.field_name)

    def set_A260230_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260230' on this record model
        """
        self.set_field_value(self.A260230__FIELD_NAME.field_name, value)

    def get_A260230_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260230' from this record model
        """
        return self.get_field_value(self.A260230__FIELD_NAME.field_name)

    def set_A260280_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260280' on this record model
        """
        self.set_field_value(self.A260280__FIELD_NAME.field_name, value)

    def get_A260280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260280' from this record model
        """
        return self.get_field_value(self.A260280__FIELD_NAME.field_name)

    def set_A280_field(self, value: Optional[float]):
        """
        Set data field with field name 'A280' on this record model
        """
        self.set_field_value(self.A280__FIELD_NAME.field_name, value)

    def get_A280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A280' from this record model
        """
        return self.get_field_value(self.A280__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class nCounterResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type nCounterResult
    Data Type Display Name: nCounter Result (nCounter Results)
    Fields: ProbeName, ProbeCount, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'nCounterResult'
    DISPLAY_NAME: Final[str] = "nCounter Result"
    PLURAL_DISPLAY_NAME: Final[str] = "nCounter Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    PROBECOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("ProbeCount", FieldType.DOUBLE, display_name="Probe Count")
    PROBENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ProbeName", FieldType.STRING, display_name="Probe Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ProbeCount_field(self, value: Optional[float]):
        """
        Set data field with field name 'ProbeCount' on this record model
        """
        self.set_field_value(self.PROBECOUNT__FIELD_NAME.field_name, value)

    def get_ProbeCount_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ProbeCount' from this record model
        """
        return self.get_field_value(self.PROBECOUNT__FIELD_NAME.field_name)

    def set_ProbeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProbeName' on this record model
        """
        self.set_field_value(self.PROBENAME__FIELD_NAME.field_name, value)

    def get_ProbeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProbeName' from this record model
        """
        return self.get_field_value(self.PROBENAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class NewChem1Model(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NewChem1
    Data Type Display Name: New Chem 1 (New Chems 1)
    Fields: ExactMass, PubchemCid, ConsumableType, Purity, DateCreated, IsGHSClassified, Formula, PolarSurfaceArea, cLogP, VeloxLastModifiedBy, MolecularWeight, InchiKey, LotNumber, CreatedBy, inchi, Charge, IUPAC, SMILES, GHSHazardCode, TotalHBondCount, TotalHBondAcceptors, DataRecordName, CAS, VeloxLastModifiedDate, RegistryId, Yield, GHSPictoCode, GHSCautionCode
    The NewChem1 Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'NewChem1'
    DISPLAY_NAME: Final[str] = "New Chem 1"
    PLURAL_DISPLAY_NAME: Final[str] = "New Chems 1"
    CAS__FIELD_NAME: Final[WrapperField] = WrapperField("CAS", FieldType.STRING, display_name="CAS")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("IUPAC", FieldType.STRING, display_name="IUPAC")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="InChI Key")
    ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("PubchemCid", FieldType.INTEGER, display_name="PubChem CID")
    PURITY__FIELD_NAME: Final[WrapperField] = WrapperField("Purity", FieldType.DOUBLE, display_name="Purity")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="Canonical SMILES")
    TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("Yield", FieldType.DOUBLE, display_name="Yield")
    CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="InChI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Purity' on this record model
        """
        self.set_field_value(self.PURITY__FIELD_NAME.field_name, value)

    def get_Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Purity' from this record model
        """
        return self.get_field_value(self.PURITY__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class NewChem1PartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NewChem1Part
    Data Type Display Name: New Chem 1 Part (New Chem 1 Parts)
    Fields: ExactMass, PubchemCid, ConsumableType, DateCreated, IsGHSClassified, QuantityPerItem, Formula, PolarSurfaceArea, ReorderLevelQuantity, RegisteredToCartridge, RequestImageUpdate, cLogP, VeloxLastModifiedBy, MolecularWeight, InchiKey, CreatedBy, inchi, EditLock, Charge, IUPAC, SMILES, MOL, QuantityOnHand, Units, GHSHazardCode, SMILESShadow, TotalHBondCount, TotalHBondAcceptors, DataRecordName, CAS, VeloxLastModifiedDate, RegistryId, INCHIShadow, GHSPictoCode, GHSCautionCode
    The NewChem1Part Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'NewChem1Part'
    DISPLAY_NAME: Final[str] = "New Chem 1 Part"
    PLURAL_DISPLAY_NAME: Final[str] = "New Chem 1 Parts"
    CAS__FIELD_NAME: Final[WrapperField] = WrapperField("CAS", FieldType.STRING, display_name="CAS")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EDITLOCK__FIELD_NAME: Final[WrapperField] = WrapperField("EditLock", FieldType.BOOLEAN, display_name="Edit Lock")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    INCHISHADOW__FIELD_NAME: Final[WrapperField] = WrapperField("INCHIShadow", FieldType.STRING, display_name="InChI Shadow")
    IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("IUPAC", FieldType.STRING, display_name="IUPAC")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="InChI Key")
    ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    MOL__FIELD_NAME: Final[WrapperField] = WrapperField("MOL", FieldType.STRING, display_name="MOL")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("PubchemCid", FieldType.INTEGER, display_name="PubChem CID")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REGISTEREDTOCARTRIDGE__FIELD_NAME: Final[WrapperField] = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN, display_name="Registered To Cartridge")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    REQUESTIMAGEUPDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RequestImageUpdate", FieldType.BOOLEAN, display_name="Request Image Update")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="Canonical SMILES")
    SMILESSHADOW__FIELD_NAME: Final[WrapperField] = WrapperField("SMILESShadow", FieldType.STRING, display_name="SMILES Shadow")
    TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="InChI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_INCHIShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'INCHIShadow' on this record model
        """
        self.set_field_value(self.INCHISHADOW__FIELD_NAME.field_name, value)

    def get_INCHIShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'INCHIShadow' from this record model
        """
        return self.get_field_value(self.INCHISHADOW__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_RequestImageUpdate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestImageUpdate' on this record model
        """
        self.set_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name, value)

    def get_RequestImageUpdate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestImageUpdate' from this record model
        """
        return self.get_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SMILESShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILESShadow' on this record model
        """
        self.set_field_value(self.SMILESSHADOW__FIELD_NAME.field_name, value)

    def get_SMILESShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILESShadow' from this record model
        """
        return self.get_field_value(self.SMILESSHADOW__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class NextSeq2KRunParameterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NextSeq2KRunParameter
    Data Type Display Name: Illumina NextSeq 2000 Run Parameter (Illumina NextSeq 2000 Run Parameters)
    Fields: RecipeName, CompletedRead2Cycles, ApplicationVersion, CartridgePartNumber, InstrumentType, SampleSheetFilePath, CustomIndex2Primer, RtaVersion, ExperimentName, PurgeReagentCartridge, CartridgeExpirationDate, CartridgeLotNumber, FlowCellLotNumber, FlowCellPartNumber, PlannedIndex1Cycles, ChmVersion, CreatedBy, SecondAnalyPlatVer, CibFpgaVersion, RunEndTime, ImbVersion, DataRecordName, FlowCellVersion, FlowCellExpirationDate, PlannedIndex2Cycles, PlannedRead1Cycles, DateCreated, CustomRead2Primer, CopyServiceVersion, RunCounter, FlowCellMode, CartridgeSerialNumber, InstrumentName, CopyServiceRunId, RecipeVersion, VeloxLastModifiedBy, CartridgeMode, CompletedIndex1Cycles, BsshMode, RunId, RunSetupMode, OutputFolder, ApplicationName, SecondaryAnalysisMode, CimVersion, SkipObdd, CompletedIndex2Cycles, CompletedRead1Cycles, CustomIndex1Primer, PlannedRunId, CustomRead1Primer, CartridgeVersion, FlowCellSerialNumber, RtaVeRunStartTimersion, SecondaryAnalysisWorkflow, PlannedRead2Cycles, VeloxLastModifiedDate, InstrumentSerialNumber, BaseSpaceRunId
    NextSeq 2000 series uses a different XML format and thus will require a different data type handling it.
    """
    DATA_TYPE_NAME: Final[str] = 'NextSeq2KRunParameter'
    DISPLAY_NAME: Final[str] = "Illumina NextSeq 2000 Run Parameter"
    PLURAL_DISPLAY_NAME: Final[str] = "Illumina NextSeq 2000 Run Parameters"
    APPLICATIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ApplicationName", FieldType.STRING, display_name="Application Name")
    APPLICATIONVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("ApplicationVersion", FieldType.STRING, display_name="Application Version")
    BASESPACERUNID__FIELD_NAME: Final[WrapperField] = WrapperField("BaseSpaceRunId", FieldType.STRING, display_name="Base Space Run ID")
    BSSHMODE__FIELD_NAME: Final[WrapperField] = WrapperField("BsshMode", FieldType.STRING, display_name="BSSH Mode")
    CARTRIDGEEXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("CartridgeExpirationDate", FieldType.DATE, display_name="Cartridge Expiration Date")
    CARTRIDGELOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("CartridgeLotNumber", FieldType.STRING, display_name="Cartridge Lot Number")
    CARTRIDGEMODE__FIELD_NAME: Final[WrapperField] = WrapperField("CartridgeMode", FieldType.STRING, display_name="Cartridge Mode")
    CARTRIDGEPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("CartridgePartNumber", FieldType.STRING, display_name="Cartridge Part #")
    CARTRIDGESERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("CartridgeSerialNumber", FieldType.STRING, display_name="Cartridge Serial #")
    CARTRIDGEVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("CartridgeVersion", FieldType.STRING, display_name="Cartridge Version")
    CHMVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("ChmVersion", FieldType.STRING, display_name="CHM Version")
    CIBFPGAVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("CibFpgaVersion", FieldType.STRING, display_name="CIB FPGA Version")
    CIMVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("CimVersion", FieldType.STRING, display_name="CIM Version")
    COMPLETEDINDEX1CYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("CompletedIndex1Cycles", FieldType.INTEGER, display_name="Completed Index 1 Cycles")
    COMPLETEDINDEX2CYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("CompletedIndex2Cycles", FieldType.INTEGER, display_name="Completed Index 2 Cycles")
    COMPLETEDREAD1CYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("CompletedRead1Cycles", FieldType.INTEGER, display_name="Completed Read 1 Cycles")
    COMPLETEDREAD2CYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("CompletedRead2Cycles", FieldType.INTEGER, display_name="Completed Read 2 Cycles")
    COPYSERVICERUNID__FIELD_NAME: Final[WrapperField] = WrapperField("CopyServiceRunId", FieldType.STRING, display_name="Copy Service Run ID")
    COPYSERVICEVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("CopyServiceVersion", FieldType.STRING, display_name="Copy Service Version")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CUSTOMINDEX1PRIMER__FIELD_NAME: Final[WrapperField] = WrapperField("CustomIndex1Primer", FieldType.STRING, display_name="Custom Index 1 Primer")
    CUSTOMINDEX2PRIMER__FIELD_NAME: Final[WrapperField] = WrapperField("CustomIndex2Primer", FieldType.STRING, display_name="Custom Index 2 Primer")
    CUSTOMREAD1PRIMER__FIELD_NAME: Final[WrapperField] = WrapperField("CustomRead1Primer", FieldType.STRING, display_name="Custom Read 1 Primer")
    CUSTOMREAD2PRIMER__FIELD_NAME: Final[WrapperField] = WrapperField("CustomRead2Primer", FieldType.STRING, display_name="Custom Read 2 Primer")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPERIMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentName", FieldType.STRING, display_name="Experiment Name")
    FLOWCELLEXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellExpirationDate", FieldType.DATE, display_name="Flow Cell Expiration Date")
    FLOWCELLLOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellLotNumber", FieldType.STRING, display_name="Flow Cell Lot Number")
    FLOWCELLMODE__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellMode", FieldType.STRING, display_name="Flow Cell Mode")
    FLOWCELLPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellPartNumber", FieldType.STRING, display_name="Flow Cell Part Number")
    FLOWCELLSERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellSerialNumber", FieldType.STRING, display_name="Flow Cell Serial #")
    FLOWCELLVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("FlowCellVersion", FieldType.STRING, display_name="Flow Cell Version")
    IMBVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("ImbVersion", FieldType.STRING, display_name="IMB Version")
    INSTRUMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentName", FieldType.STRING, display_name="Instrument Name")
    INSTRUMENTSERIALNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentSerialNumber", FieldType.STRING, display_name="Instrument Serial #")
    INSTRUMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentType", FieldType.STRING, display_name="Instrument Type")
    OUTPUTFOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("OutputFolder", FieldType.STRING, display_name="Output Folder")
    PLANNEDINDEX1CYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("PlannedIndex1Cycles", FieldType.INTEGER, display_name="Planned Index 1 Cycles")
    PLANNEDINDEX2CYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("PlannedIndex2Cycles", FieldType.INTEGER, display_name="Planned Index 2 Cycles")
    PLANNEDREAD1CYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("PlannedRead1Cycles", FieldType.INTEGER, display_name="Planned Read 1 Cycles")
    PLANNEDREAD2CYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("PlannedRead2Cycles", FieldType.INTEGER, display_name="Planned Read 2 Cycles")
    PLANNEDRUNID__FIELD_NAME: Final[WrapperField] = WrapperField("PlannedRunId", FieldType.STRING, display_name="Planned Run ID")
    PURGEREAGENTCARTRIDGE__FIELD_NAME: Final[WrapperField] = WrapperField("PurgeReagentCartridge", FieldType.BOOLEAN, display_name="Purge Reagent Cartridge")
    RECIPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("RecipeName", FieldType.STRING, display_name="Recipe Name")
    RECIPEVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("RecipeVersion", FieldType.STRING, display_name="Recipe Version")
    RTAVERUNSTARTTIMERSION__FIELD_NAME: Final[WrapperField] = WrapperField("RtaVeRunStartTimersion", FieldType.DATE, display_name="Rta Ve Run Start Timersion")
    RTAVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("RtaVersion", FieldType.STRING, display_name="RTA Version")
    RUNCOUNTER__FIELD_NAME: Final[WrapperField] = WrapperField("RunCounter", FieldType.INTEGER, display_name="Run Counter")
    RUNENDTIME__FIELD_NAME: Final[WrapperField] = WrapperField("RunEndTime", FieldType.DATE, display_name="Run End Time")
    RUNID__FIELD_NAME: Final[WrapperField] = WrapperField("RunId", FieldType.STRING, display_name="Run ID")
    RUNSETUPMODE__FIELD_NAME: Final[WrapperField] = WrapperField("RunSetupMode", FieldType.STRING, display_name="Run Setup Mode")
    SAMPLESHEETFILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("SampleSheetFilePath", FieldType.STRING, display_name="Sample Sheet File Path")
    SECONDANALYPLATVER__FIELD_NAME: Final[WrapperField] = WrapperField("SecondAnalyPlatVer", FieldType.STRING, display_name="Secondary Analysis Platform Version")
    SECONDARYANALYSISMODE__FIELD_NAME: Final[WrapperField] = WrapperField("SecondaryAnalysisMode", FieldType.STRING, display_name="Secondary Analysis Mode")
    SECONDARYANALYSISWORKFLOW__FIELD_NAME: Final[WrapperField] = WrapperField("SecondaryAnalysisWorkflow", FieldType.STRING, display_name="Secondary Analysis Workflow")
    SKIPOBDD__FIELD_NAME: Final[WrapperField] = WrapperField("SkipObdd", FieldType.BOOLEAN, display_name="Skip OBDD")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ApplicationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationName' on this record model
        """
        self.set_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name, value)

    def get_ApplicationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationName' from this record model
        """
        return self.get_field_value(self.APPLICATIONNAME__FIELD_NAME.field_name)

    def set_ApplicationVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApplicationVersion' on this record model
        """
        self.set_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name, value)

    def get_ApplicationVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApplicationVersion' from this record model
        """
        return self.get_field_value(self.APPLICATIONVERSION__FIELD_NAME.field_name)

    def set_BaseSpaceRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'BaseSpaceRunId' on this record model
        """
        self.set_field_value(self.BASESPACERUNID__FIELD_NAME.field_name, value)

    def get_BaseSpaceRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BaseSpaceRunId' from this record model
        """
        return self.get_field_value(self.BASESPACERUNID__FIELD_NAME.field_name)

    def set_BsshMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'BsshMode' on this record model
        """
        self.set_field_value(self.BSSHMODE__FIELD_NAME.field_name, value)

    def get_BsshMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BsshMode' from this record model
        """
        return self.get_field_value(self.BSSHMODE__FIELD_NAME.field_name)

    def set_CartridgeExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'CartridgeExpirationDate' on this record model
        """
        self.set_field_value(self.CARTRIDGEEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_CartridgeExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CartridgeExpirationDate' from this record model
        """
        return self.get_field_value(self.CARTRIDGEEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_CartridgeLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'CartridgeLotNumber' on this record model
        """
        self.set_field_value(self.CARTRIDGELOTNUMBER__FIELD_NAME.field_name, value)

    def get_CartridgeLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CartridgeLotNumber' from this record model
        """
        return self.get_field_value(self.CARTRIDGELOTNUMBER__FIELD_NAME.field_name)

    def set_CartridgeMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'CartridgeMode' on this record model
        """
        self.set_field_value(self.CARTRIDGEMODE__FIELD_NAME.field_name, value)

    def get_CartridgeMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CartridgeMode' from this record model
        """
        return self.get_field_value(self.CARTRIDGEMODE__FIELD_NAME.field_name)

    def set_CartridgePartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'CartridgePartNumber' on this record model
        """
        self.set_field_value(self.CARTRIDGEPARTNUMBER__FIELD_NAME.field_name, value)

    def get_CartridgePartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CartridgePartNumber' from this record model
        """
        return self.get_field_value(self.CARTRIDGEPARTNUMBER__FIELD_NAME.field_name)

    def set_CartridgeSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'CartridgeSerialNumber' on this record model
        """
        self.set_field_value(self.CARTRIDGESERIALNUMBER__FIELD_NAME.field_name, value)

    def get_CartridgeSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CartridgeSerialNumber' from this record model
        """
        return self.get_field_value(self.CARTRIDGESERIALNUMBER__FIELD_NAME.field_name)

    def set_CartridgeVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'CartridgeVersion' on this record model
        """
        self.set_field_value(self.CARTRIDGEVERSION__FIELD_NAME.field_name, value)

    def get_CartridgeVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CartridgeVersion' from this record model
        """
        return self.get_field_value(self.CARTRIDGEVERSION__FIELD_NAME.field_name)

    def set_ChmVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChmVersion' on this record model
        """
        self.set_field_value(self.CHMVERSION__FIELD_NAME.field_name, value)

    def get_ChmVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChmVersion' from this record model
        """
        return self.get_field_value(self.CHMVERSION__FIELD_NAME.field_name)

    def set_CibFpgaVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'CibFpgaVersion' on this record model
        """
        self.set_field_value(self.CIBFPGAVERSION__FIELD_NAME.field_name, value)

    def get_CibFpgaVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CibFpgaVersion' from this record model
        """
        return self.get_field_value(self.CIBFPGAVERSION__FIELD_NAME.field_name)

    def set_CimVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'CimVersion' on this record model
        """
        self.set_field_value(self.CIMVERSION__FIELD_NAME.field_name, value)

    def get_CimVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CimVersion' from this record model
        """
        return self.get_field_value(self.CIMVERSION__FIELD_NAME.field_name)

    def set_CompletedIndex1Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletedIndex1Cycles' on this record model
        """
        self.set_field_value(self.COMPLETEDINDEX1CYCLES__FIELD_NAME.field_name, value)

    def get_CompletedIndex1Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletedIndex1Cycles' from this record model
        """
        return self.get_field_value(self.COMPLETEDINDEX1CYCLES__FIELD_NAME.field_name)

    def set_CompletedIndex2Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletedIndex2Cycles' on this record model
        """
        self.set_field_value(self.COMPLETEDINDEX2CYCLES__FIELD_NAME.field_name, value)

    def get_CompletedIndex2Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletedIndex2Cycles' from this record model
        """
        return self.get_field_value(self.COMPLETEDINDEX2CYCLES__FIELD_NAME.field_name)

    def set_CompletedRead1Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletedRead1Cycles' on this record model
        """
        self.set_field_value(self.COMPLETEDREAD1CYCLES__FIELD_NAME.field_name, value)

    def get_CompletedRead1Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletedRead1Cycles' from this record model
        """
        return self.get_field_value(self.COMPLETEDREAD1CYCLES__FIELD_NAME.field_name)

    def set_CompletedRead2Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletedRead2Cycles' on this record model
        """
        self.set_field_value(self.COMPLETEDREAD2CYCLES__FIELD_NAME.field_name, value)

    def get_CompletedRead2Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletedRead2Cycles' from this record model
        """
        return self.get_field_value(self.COMPLETEDREAD2CYCLES__FIELD_NAME.field_name)

    def set_CopyServiceRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'CopyServiceRunId' on this record model
        """
        self.set_field_value(self.COPYSERVICERUNID__FIELD_NAME.field_name, value)

    def get_CopyServiceRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CopyServiceRunId' from this record model
        """
        return self.get_field_value(self.COPYSERVICERUNID__FIELD_NAME.field_name)

    def set_CopyServiceVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'CopyServiceVersion' on this record model
        """
        self.set_field_value(self.COPYSERVICEVERSION__FIELD_NAME.field_name, value)

    def get_CopyServiceVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CopyServiceVersion' from this record model
        """
        return self.get_field_value(self.COPYSERVICEVERSION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomIndex1Primer_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomIndex1Primer' on this record model
        """
        self.set_field_value(self.CUSTOMINDEX1PRIMER__FIELD_NAME.field_name, value)

    def get_CustomIndex1Primer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomIndex1Primer' from this record model
        """
        return self.get_field_value(self.CUSTOMINDEX1PRIMER__FIELD_NAME.field_name)

    def set_CustomIndex2Primer_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomIndex2Primer' on this record model
        """
        self.set_field_value(self.CUSTOMINDEX2PRIMER__FIELD_NAME.field_name, value)

    def get_CustomIndex2Primer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomIndex2Primer' from this record model
        """
        return self.get_field_value(self.CUSTOMINDEX2PRIMER__FIELD_NAME.field_name)

    def set_CustomRead1Primer_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead1Primer' on this record model
        """
        self.set_field_value(self.CUSTOMREAD1PRIMER__FIELD_NAME.field_name, value)

    def get_CustomRead1Primer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead1Primer' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD1PRIMER__FIELD_NAME.field_name)

    def set_CustomRead2Primer_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomRead2Primer' on this record model
        """
        self.set_field_value(self.CUSTOMREAD2PRIMER__FIELD_NAME.field_name, value)

    def get_CustomRead2Primer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomRead2Primer' from this record model
        """
        return self.get_field_value(self.CUSTOMREAD2PRIMER__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExperimentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExperimentName' on this record model
        """
        self.set_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name, value)

    def get_ExperimentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExperimentName' from this record model
        """
        return self.get_field_value(self.EXPERIMENTNAME__FIELD_NAME.field_name)

    def set_FlowCellExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowCellExpirationDate' on this record model
        """
        self.set_field_value(self.FLOWCELLEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_FlowCellExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowCellExpirationDate' from this record model
        """
        return self.get_field_value(self.FLOWCELLEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_FlowCellLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellLotNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLLOTNUMBER__FIELD_NAME.field_name, value)

    def get_FlowCellLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellLotNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLLOTNUMBER__FIELD_NAME.field_name)

    def set_FlowCellMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellMode' on this record model
        """
        self.set_field_value(self.FLOWCELLMODE__FIELD_NAME.field_name, value)

    def get_FlowCellMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellMode' from this record model
        """
        return self.get_field_value(self.FLOWCELLMODE__FIELD_NAME.field_name)

    def set_FlowCellPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellPartNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLPARTNUMBER__FIELD_NAME.field_name, value)

    def get_FlowCellPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellPartNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLPARTNUMBER__FIELD_NAME.field_name)

    def set_FlowCellSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellSerialNumber' on this record model
        """
        self.set_field_value(self.FLOWCELLSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_FlowCellSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellSerialNumber' from this record model
        """
        return self.get_field_value(self.FLOWCELLSERIALNUMBER__FIELD_NAME.field_name)

    def set_FlowCellVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'FlowCellVersion' on this record model
        """
        self.set_field_value(self.FLOWCELLVERSION__FIELD_NAME.field_name, value)

    def get_FlowCellVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FlowCellVersion' from this record model
        """
        return self.get_field_value(self.FLOWCELLVERSION__FIELD_NAME.field_name)

    def set_ImbVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ImbVersion' on this record model
        """
        self.set_field_value(self.IMBVERSION__FIELD_NAME.field_name, value)

    def get_ImbVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ImbVersion' from this record model
        """
        return self.get_field_value(self.IMBVERSION__FIELD_NAME.field_name)

    def set_InstrumentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentName' on this record model
        """
        self.set_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name, value)

    def get_InstrumentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentName' from this record model
        """
        return self.get_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name)

    def set_InstrumentSerialNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentSerialNumber' on this record model
        """
        self.set_field_value(self.INSTRUMENTSERIALNUMBER__FIELD_NAME.field_name, value)

    def get_InstrumentSerialNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentSerialNumber' from this record model
        """
        return self.get_field_value(self.INSTRUMENTSERIALNUMBER__FIELD_NAME.field_name)

    def set_InstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentType' on this record model
        """
        self.set_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_InstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentType' from this record model
        """
        return self.get_field_value(self.INSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_OutputFolder_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputFolder' on this record model
        """
        self.set_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name, value)

    def get_OutputFolder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputFolder' from this record model
        """
        return self.get_field_value(self.OUTPUTFOLDER__FIELD_NAME.field_name)

    def set_PlannedIndex1Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedIndex1Cycles' on this record model
        """
        self.set_field_value(self.PLANNEDINDEX1CYCLES__FIELD_NAME.field_name, value)

    def get_PlannedIndex1Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedIndex1Cycles' from this record model
        """
        return self.get_field_value(self.PLANNEDINDEX1CYCLES__FIELD_NAME.field_name)

    def set_PlannedIndex2Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedIndex2Cycles' on this record model
        """
        self.set_field_value(self.PLANNEDINDEX2CYCLES__FIELD_NAME.field_name, value)

    def get_PlannedIndex2Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedIndex2Cycles' from this record model
        """
        return self.get_field_value(self.PLANNEDINDEX2CYCLES__FIELD_NAME.field_name)

    def set_PlannedRead1Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedRead1Cycles' on this record model
        """
        self.set_field_value(self.PLANNEDREAD1CYCLES__FIELD_NAME.field_name, value)

    def get_PlannedRead1Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedRead1Cycles' from this record model
        """
        return self.get_field_value(self.PLANNEDREAD1CYCLES__FIELD_NAME.field_name)

    def set_PlannedRead2Cycles_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlannedRead2Cycles' on this record model
        """
        self.set_field_value(self.PLANNEDREAD2CYCLES__FIELD_NAME.field_name, value)

    def get_PlannedRead2Cycles_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlannedRead2Cycles' from this record model
        """
        return self.get_field_value(self.PLANNEDREAD2CYCLES__FIELD_NAME.field_name)

    def set_PlannedRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlannedRunId' on this record model
        """
        self.set_field_value(self.PLANNEDRUNID__FIELD_NAME.field_name, value)

    def get_PlannedRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlannedRunId' from this record model
        """
        return self.get_field_value(self.PLANNEDRUNID__FIELD_NAME.field_name)

    def set_PurgeReagentCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PurgeReagentCartridge' on this record model
        """
        self.set_field_value(self.PURGEREAGENTCARTRIDGE__FIELD_NAME.field_name, value)

    def get_PurgeReagentCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PurgeReagentCartridge' from this record model
        """
        return self.get_field_value(self.PURGEREAGENTCARTRIDGE__FIELD_NAME.field_name)

    def set_RecipeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeName' on this record model
        """
        self.set_field_value(self.RECIPENAME__FIELD_NAME.field_name, value)

    def get_RecipeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeName' from this record model
        """
        return self.get_field_value(self.RECIPENAME__FIELD_NAME.field_name)

    def set_RecipeVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecipeVersion' on this record model
        """
        self.set_field_value(self.RECIPEVERSION__FIELD_NAME.field_name, value)

    def get_RecipeVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecipeVersion' from this record model
        """
        return self.get_field_value(self.RECIPEVERSION__FIELD_NAME.field_name)

    def set_RtaVeRunStartTimersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'RtaVeRunStartTimersion' on this record model
        """
        self.set_field_value(self.RTAVERUNSTARTTIMERSION__FIELD_NAME.field_name, value)

    def get_RtaVeRunStartTimersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RtaVeRunStartTimersion' from this record model
        """
        return self.get_field_value(self.RTAVERUNSTARTTIMERSION__FIELD_NAME.field_name)

    def set_RtaVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'RtaVersion' on this record model
        """
        self.set_field_value(self.RTAVERSION__FIELD_NAME.field_name, value)

    def get_RtaVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RtaVersion' from this record model
        """
        return self.get_field_value(self.RTAVERSION__FIELD_NAME.field_name)

    def set_RunCounter_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunCounter' on this record model
        """
        self.set_field_value(self.RUNCOUNTER__FIELD_NAME.field_name, value)

    def get_RunCounter_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunCounter' from this record model
        """
        return self.get_field_value(self.RUNCOUNTER__FIELD_NAME.field_name)

    def set_RunEndTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'RunEndTime' on this record model
        """
        self.set_field_value(self.RUNENDTIME__FIELD_NAME.field_name, value)

    def get_RunEndTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RunEndTime' from this record model
        """
        return self.get_field_value(self.RUNENDTIME__FIELD_NAME.field_name)

    def set_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunId' on this record model
        """
        self.set_field_value(self.RUNID__FIELD_NAME.field_name, value)

    def get_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunId' from this record model
        """
        return self.get_field_value(self.RUNID__FIELD_NAME.field_name)

    def set_RunSetupMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunSetupMode' on this record model
        """
        self.set_field_value(self.RUNSETUPMODE__FIELD_NAME.field_name, value)

    def get_RunSetupMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunSetupMode' from this record model
        """
        return self.get_field_value(self.RUNSETUPMODE__FIELD_NAME.field_name)

    def set_SampleSheetFilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleSheetFilePath' on this record model
        """
        self.set_field_value(self.SAMPLESHEETFILEPATH__FIELD_NAME.field_name, value)

    def get_SampleSheetFilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleSheetFilePath' from this record model
        """
        return self.get_field_value(self.SAMPLESHEETFILEPATH__FIELD_NAME.field_name)

    def set_SecondAnalyPlatVer_field(self, value: Optional[str]):
        """
        Set data field with field name 'SecondAnalyPlatVer' on this record model
        """
        self.set_field_value(self.SECONDANALYPLATVER__FIELD_NAME.field_name, value)

    def get_SecondAnalyPlatVer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SecondAnalyPlatVer' from this record model
        """
        return self.get_field_value(self.SECONDANALYPLATVER__FIELD_NAME.field_name)

    def set_SecondaryAnalysisMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SecondaryAnalysisMode' on this record model
        """
        self.set_field_value(self.SECONDARYANALYSISMODE__FIELD_NAME.field_name, value)

    def get_SecondaryAnalysisMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SecondaryAnalysisMode' from this record model
        """
        return self.get_field_value(self.SECONDARYANALYSISMODE__FIELD_NAME.field_name)

    def set_SecondaryAnalysisWorkflow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SecondaryAnalysisWorkflow' on this record model
        """
        self.set_field_value(self.SECONDARYANALYSISWORKFLOW__FIELD_NAME.field_name, value)

    def get_SecondaryAnalysisWorkflow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SecondaryAnalysisWorkflow' from this record model
        """
        return self.get_field_value(self.SECONDARYANALYSISWORKFLOW__FIELD_NAME.field_name)

    def set_SkipObdd_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SkipObdd' on this record model
        """
        self.set_field_value(self.SKIPOBDD__FIELD_NAME.field_name, value)

    def get_SkipObdd_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SkipObdd' from this record model
        """
        return self.get_field_value(self.SKIPOBDD__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class NNetCardiotocographyDataModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NNetCardiotocographyData
    Data Type Display Name: NNet CardiotocographyDatum (NNet CardiotocographiesData)
    Fields: Mean, Max, MLTV, FM, DL, Median, DateCreated, DP, MSTV, UC, Variance, DS, VeloxLastModifiedBy, Width, AC, CreatedBy, ASTV, NSP, Nmax, ALTV, Min, DataRecordName, LB, VeloxLastModifiedDate, Tendency, Nzeros
    """
    DATA_TYPE_NAME: Final[str] = 'NNetCardiotocographyData'
    DISPLAY_NAME: Final[str] = "NNet CardiotocographyDatum"
    PLURAL_DISPLAY_NAME: Final[str] = "NNet CardiotocographiesData"
    AC__FIELD_NAME: Final[WrapperField] = WrapperField("AC", FieldType.DOUBLE, display_name="AC")
    ALTV__FIELD_NAME: Final[WrapperField] = WrapperField("ALTV", FieldType.DOUBLE, display_name="ALTV")
    ASTV__FIELD_NAME: Final[WrapperField] = WrapperField("ASTV", FieldType.DOUBLE, display_name="ASTV")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DL__FIELD_NAME: Final[WrapperField] = WrapperField("DL", FieldType.DOUBLE, display_name="DL")
    DP__FIELD_NAME: Final[WrapperField] = WrapperField("DP", FieldType.DOUBLE, display_name="DP")
    DS__FIELD_NAME: Final[WrapperField] = WrapperField("DS", FieldType.DOUBLE, display_name="DS")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FM__FIELD_NAME: Final[WrapperField] = WrapperField("FM", FieldType.DOUBLE, display_name="FM")
    LB__FIELD_NAME: Final[WrapperField] = WrapperField("LB", FieldType.DOUBLE, display_name="LB")
    MLTV__FIELD_NAME: Final[WrapperField] = WrapperField("MLTV", FieldType.DOUBLE, display_name="MLTV")
    MSTV__FIELD_NAME: Final[WrapperField] = WrapperField("MSTV", FieldType.DOUBLE, display_name="MSTV")
    MAX__FIELD_NAME: Final[WrapperField] = WrapperField("Max", FieldType.DOUBLE, display_name="Max")
    MEAN__FIELD_NAME: Final[WrapperField] = WrapperField("Mean", FieldType.DOUBLE, display_name="Mean")
    MEDIAN__FIELD_NAME: Final[WrapperField] = WrapperField("Median", FieldType.DOUBLE, display_name="Median")
    MIN__FIELD_NAME: Final[WrapperField] = WrapperField("Min", FieldType.DOUBLE, display_name="Min")
    NSP__FIELD_NAME: Final[WrapperField] = WrapperField("NSP", FieldType.STRING, display_name="NSP")
    NMAX__FIELD_NAME: Final[WrapperField] = WrapperField("Nmax", FieldType.DOUBLE, display_name="Nmax")
    NZEROS__FIELD_NAME: Final[WrapperField] = WrapperField("Nzeros", FieldType.DOUBLE, display_name="Nzeros")
    TENDENCY__FIELD_NAME: Final[WrapperField] = WrapperField("Tendency", FieldType.DOUBLE, display_name="Tendency")
    UC__FIELD_NAME: Final[WrapperField] = WrapperField("UC", FieldType.DOUBLE, display_name="UC")
    VARIANCE__FIELD_NAME: Final[WrapperField] = WrapperField("Variance", FieldType.DOUBLE, display_name="Variance")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WIDTH__FIELD_NAME: Final[WrapperField] = WrapperField("Width", FieldType.DOUBLE, display_name="Width")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AC_field(self, value: Optional[float]):
        """
        Set data field with field name 'AC' on this record model
        """
        self.set_field_value(self.AC__FIELD_NAME.field_name, value)

    def get_AC_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AC' from this record model
        """
        return self.get_field_value(self.AC__FIELD_NAME.field_name)

    def set_ALTV_field(self, value: Optional[float]):
        """
        Set data field with field name 'ALTV' on this record model
        """
        self.set_field_value(self.ALTV__FIELD_NAME.field_name, value)

    def get_ALTV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ALTV' from this record model
        """
        return self.get_field_value(self.ALTV__FIELD_NAME.field_name)

    def set_ASTV_field(self, value: Optional[float]):
        """
        Set data field with field name 'ASTV' on this record model
        """
        self.set_field_value(self.ASTV__FIELD_NAME.field_name, value)

    def get_ASTV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ASTV' from this record model
        """
        return self.get_field_value(self.ASTV__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DL_field(self, value: Optional[float]):
        """
        Set data field with field name 'DL' on this record model
        """
        self.set_field_value(self.DL__FIELD_NAME.field_name, value)

    def get_DL_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DL' from this record model
        """
        return self.get_field_value(self.DL__FIELD_NAME.field_name)

    def set_DP_field(self, value: Optional[float]):
        """
        Set data field with field name 'DP' on this record model
        """
        self.set_field_value(self.DP__FIELD_NAME.field_name, value)

    def get_DP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DP' from this record model
        """
        return self.get_field_value(self.DP__FIELD_NAME.field_name)

    def set_DS_field(self, value: Optional[float]):
        """
        Set data field with field name 'DS' on this record model
        """
        self.set_field_value(self.DS__FIELD_NAME.field_name, value)

    def get_DS_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DS' from this record model
        """
        return self.get_field_value(self.DS__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FM_field(self, value: Optional[float]):
        """
        Set data field with field name 'FM' on this record model
        """
        self.set_field_value(self.FM__FIELD_NAME.field_name, value)

    def get_FM_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FM' from this record model
        """
        return self.get_field_value(self.FM__FIELD_NAME.field_name)

    def set_LB_field(self, value: Optional[float]):
        """
        Set data field with field name 'LB' on this record model
        """
        self.set_field_value(self.LB__FIELD_NAME.field_name, value)

    def get_LB_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LB' from this record model
        """
        return self.get_field_value(self.LB__FIELD_NAME.field_name)

    def set_MLTV_field(self, value: Optional[float]):
        """
        Set data field with field name 'MLTV' on this record model
        """
        self.set_field_value(self.MLTV__FIELD_NAME.field_name, value)

    def get_MLTV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MLTV' from this record model
        """
        return self.get_field_value(self.MLTV__FIELD_NAME.field_name)

    def set_MSTV_field(self, value: Optional[float]):
        """
        Set data field with field name 'MSTV' on this record model
        """
        self.set_field_value(self.MSTV__FIELD_NAME.field_name, value)

    def get_MSTV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MSTV' from this record model
        """
        return self.get_field_value(self.MSTV__FIELD_NAME.field_name)

    def set_Max_field(self, value: Optional[float]):
        """
        Set data field with field name 'Max' on this record model
        """
        self.set_field_value(self.MAX__FIELD_NAME.field_name, value)

    def get_Max_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Max' from this record model
        """
        return self.get_field_value(self.MAX__FIELD_NAME.field_name)

    def set_Mean_field(self, value: Optional[float]):
        """
        Set data field with field name 'Mean' on this record model
        """
        self.set_field_value(self.MEAN__FIELD_NAME.field_name, value)

    def get_Mean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Mean' from this record model
        """
        return self.get_field_value(self.MEAN__FIELD_NAME.field_name)

    def set_Median_field(self, value: Optional[float]):
        """
        Set data field with field name 'Median' on this record model
        """
        self.set_field_value(self.MEDIAN__FIELD_NAME.field_name, value)

    def get_Median_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Median' from this record model
        """
        return self.get_field_value(self.MEDIAN__FIELD_NAME.field_name)

    def set_Min_field(self, value: Optional[float]):
        """
        Set data field with field name 'Min' on this record model
        """
        self.set_field_value(self.MIN__FIELD_NAME.field_name, value)

    def get_Min_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Min' from this record model
        """
        return self.get_field_value(self.MIN__FIELD_NAME.field_name)

    def set_NSP_field(self, value: Optional[str]):
        """
        Set data field with field name 'NSP' on this record model
        """
        self.set_field_value(self.NSP__FIELD_NAME.field_name, value)

    def get_NSP_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NSP' from this record model
        """
        return self.get_field_value(self.NSP__FIELD_NAME.field_name)

    def set_Nmax_field(self, value: Optional[float]):
        """
        Set data field with field name 'Nmax' on this record model
        """
        self.set_field_value(self.NMAX__FIELD_NAME.field_name, value)

    def get_Nmax_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Nmax' from this record model
        """
        return self.get_field_value(self.NMAX__FIELD_NAME.field_name)

    def set_Nzeros_field(self, value: Optional[float]):
        """
        Set data field with field name 'Nzeros' on this record model
        """
        self.set_field_value(self.NZEROS__FIELD_NAME.field_name, value)

    def get_Nzeros_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Nzeros' from this record model
        """
        return self.get_field_value(self.NZEROS__FIELD_NAME.field_name)

    def set_Tendency_field(self, value: Optional[float]):
        """
        Set data field with field name 'Tendency' on this record model
        """
        self.set_field_value(self.TENDENCY__FIELD_NAME.field_name, value)

    def get_Tendency_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Tendency' from this record model
        """
        return self.get_field_value(self.TENDENCY__FIELD_NAME.field_name)

    def set_UC_field(self, value: Optional[float]):
        """
        Set data field with field name 'UC' on this record model
        """
        self.set_field_value(self.UC__FIELD_NAME.field_name, value)

    def get_UC_field(self) -> Optional[float]:
        """
        Get data field value with field name 'UC' from this record model
        """
        return self.get_field_value(self.UC__FIELD_NAME.field_name)

    def set_Variance_field(self, value: Optional[float]):
        """
        Set data field with field name 'Variance' on this record model
        """
        self.set_field_value(self.VARIANCE__FIELD_NAME.field_name, value)

    def get_Variance_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Variance' from this record model
        """
        return self.get_field_value(self.VARIANCE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Width_field(self, value: Optional[float]):
        """
        Set data field with field name 'Width' on this record model
        """
        self.set_field_value(self.WIDTH__FIELD_NAME.field_name, value)

    def get_Width_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Width' from this record model
        """
        return self.get_field_value(self.WIDTH__FIELD_NAME.field_name)


class NNetIrisExampleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NNetIrisExample
    Data Type Display Name: NNet Iris Example (NNet Iris Examples)
    Fields: PetalWidth, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, PetalLength, SepalLength, DateCreated, SepalWidth, Variety
    """
    DATA_TYPE_NAME: Final[str] = 'NNetIrisExample'
    DISPLAY_NAME: Final[str] = "NNet Iris Example"
    PLURAL_DISPLAY_NAME: Final[str] = "NNet Iris Examples"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    PETALLENGTH__FIELD_NAME: Final[WrapperField] = WrapperField("PetalLength", FieldType.DOUBLE, display_name="Petal Length")
    PETALWIDTH__FIELD_NAME: Final[WrapperField] = WrapperField("PetalWidth", FieldType.DOUBLE, display_name="Petal Width")
    SEPALLENGTH__FIELD_NAME: Final[WrapperField] = WrapperField("SepalLength", FieldType.DOUBLE, display_name="Sepal Length")
    SEPALWIDTH__FIELD_NAME: Final[WrapperField] = WrapperField("SepalWidth", FieldType.DOUBLE, display_name="Sepal Width")
    VARIETY__FIELD_NAME: Final[WrapperField] = WrapperField("Variety", FieldType.STRING, display_name="Variety")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_PetalLength_field(self, value: Optional[float]):
        """
        Set data field with field name 'PetalLength' on this record model
        """
        self.set_field_value(self.PETALLENGTH__FIELD_NAME.field_name, value)

    def get_PetalLength_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PetalLength' from this record model
        """
        return self.get_field_value(self.PETALLENGTH__FIELD_NAME.field_name)

    def set_PetalWidth_field(self, value: Optional[float]):
        """
        Set data field with field name 'PetalWidth' on this record model
        """
        self.set_field_value(self.PETALWIDTH__FIELD_NAME.field_name, value)

    def get_PetalWidth_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PetalWidth' from this record model
        """
        return self.get_field_value(self.PETALWIDTH__FIELD_NAME.field_name)

    def set_SepalLength_field(self, value: Optional[float]):
        """
        Set data field with field name 'SepalLength' on this record model
        """
        self.set_field_value(self.SEPALLENGTH__FIELD_NAME.field_name, value)

    def get_SepalLength_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SepalLength' from this record model
        """
        return self.get_field_value(self.SEPALLENGTH__FIELD_NAME.field_name)

    def set_SepalWidth_field(self, value: Optional[float]):
        """
        Set data field with field name 'SepalWidth' on this record model
        """
        self.set_field_value(self.SEPALWIDTH__FIELD_NAME.field_name, value)

    def get_SepalWidth_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SepalWidth' from this record model
        """
        return self.get_field_value(self.SEPALWIDTH__FIELD_NAME.field_name)

    def set_Variety_field(self, value: Optional[str]):
        """
        Set data field with field name 'Variety' on this record model
        """
        self.set_field_value(self.VARIETY__FIELD_NAME.field_name, value)

    def get_Variety_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Variety' from this record model
        """
        return self.get_field_value(self.VARIETY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class NoCanTauModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NoCanTau
    Data Type Display Name: No Canonical Tautomer (No Canonical Tautomers)
    Fields: ExactMass, PubchemCid, ConsumableType, Purity, DateCreated, IsGHSClassified, HasOrStereoGroup, CXSMILESHash, Formula, PolarSurfaceArea, GHSSignal, cLogP, VeloxLastModifiedBy, MolecularWeight, InchiKey, LotNumber, CreatedBy, inchi, Charge, IUPAC, SMILES, GHSHazardCode, TotalHBondCount, TotalHBondAcceptors, DataRecordName, CAS, VeloxLastModifiedDate, RegistryId, Yield, StereoRegHash, GHSPictoCode, GHSCautionCode
    The NoCanTau Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'NoCanTau'
    DISPLAY_NAME: Final[str] = "No Canonical Tautomer"
    PLURAL_DISPLAY_NAME: Final[str] = "No Canonical Tautomers"
    CAS__FIELD_NAME: Final[WrapperField] = WrapperField("CAS", FieldType.STRING, display_name="CAS")
    CXSMILESHASH__FIELD_NAME: Final[WrapperField] = WrapperField("CXSMILESHash", FieldType.STRING, display_name="CXSMILES Hash")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("GHSSignal", FieldType.STRING, display_name="GHS Signal")
    HASORSTEREOGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN, display_name="Contains OR Stereo")
    IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("IUPAC", FieldType.STRING, display_name="IUPAC")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="InChI Key")
    ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("PubchemCid", FieldType.INTEGER, display_name="PubChem CID")
    PURITY__FIELD_NAME: Final[WrapperField] = WrapperField("Purity", FieldType.DOUBLE, display_name="Purity")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="Canonical SMILES")
    STEREOREGHASH__FIELD_NAME: Final[WrapperField] = WrapperField("StereoRegHash", FieldType.STRING, display_name="Stereo Registration Hash")
    TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("Yield", FieldType.DOUBLE, display_name="Yield")
    CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="InChI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Purity' on this record model
        """
        self.set_field_value(self.PURITY__FIELD_NAME.field_name, value)

    def get_Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Purity' from this record model
        """
        return self.get_field_value(self.PURITY__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class NoCanTauPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NoCanTauPart
    Data Type Display Name: No Canonical Tautomer Part (No Canonical Tautomer Parts)
    Fields: ExactMass, PubchemCid, ConsumableType, DateCreated, IsGHSClassified, HasOrStereoGroup, CXSMILESHash, QuantityPerItem, Formula, PolarSurfaceArea, ReorderLevelQuantity, GHSSignal, RegisteredToCartridge, RequestImageUpdate, cLogP, VeloxLastModifiedBy, MolecularWeight, InchiKey, CreatedBy, inchi, EditLock, Charge, IUPAC, SMILES, MOL, QuantityOnHand, Units, GHSHazardCode, SMILESShadow, TotalHBondCount, TotalHBondAcceptors, DataRecordName, CAS, VeloxLastModifiedDate, RegistryId, INCHIShadow, StereoRegHash, GHSPictoCode, GHSCautionCode
    The NoCanTauPart Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'NoCanTauPart'
    DISPLAY_NAME: Final[str] = "No Canonical Tautomer Part"
    PLURAL_DISPLAY_NAME: Final[str] = "No Canonical Tautomer Parts"
    CAS__FIELD_NAME: Final[WrapperField] = WrapperField("CAS", FieldType.STRING, display_name="CAS")
    CXSMILESHASH__FIELD_NAME: Final[WrapperField] = WrapperField("CXSMILESHash", FieldType.STRING, display_name="CXSMILES Hash")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EDITLOCK__FIELD_NAME: Final[WrapperField] = WrapperField("EditLock", FieldType.BOOLEAN, display_name="Edit Lock")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("GHSSignal", FieldType.STRING, display_name="GHS Signal")
    HASORSTEREOGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN, display_name="Contains OR Stereo")
    INCHISHADOW__FIELD_NAME: Final[WrapperField] = WrapperField("INCHIShadow", FieldType.STRING, display_name="InChI Shadow")
    IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("IUPAC", FieldType.STRING, display_name="IUPAC")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="InChI Key")
    ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    MOL__FIELD_NAME: Final[WrapperField] = WrapperField("MOL", FieldType.STRING, display_name="MOL")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("PubchemCid", FieldType.INTEGER, display_name="PubChem CID")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REGISTEREDTOCARTRIDGE__FIELD_NAME: Final[WrapperField] = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN, display_name="Registered To Cartridge")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    REQUESTIMAGEUPDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RequestImageUpdate", FieldType.BOOLEAN, display_name="Request Image Update")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="Canonical SMILES")
    SMILESSHADOW__FIELD_NAME: Final[WrapperField] = WrapperField("SMILESShadow", FieldType.STRING, display_name="SMILES Shadow")
    STEREOREGHASH__FIELD_NAME: Final[WrapperField] = WrapperField("StereoRegHash", FieldType.STRING, display_name="Stereo Registration Hash")
    TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="InChI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_INCHIShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'INCHIShadow' on this record model
        """
        self.set_field_value(self.INCHISHADOW__FIELD_NAME.field_name, value)

    def get_INCHIShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'INCHIShadow' from this record model
        """
        return self.get_field_value(self.INCHISHADOW__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_RequestImageUpdate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestImageUpdate' on this record model
        """
        self.set_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name, value)

    def get_RequestImageUpdate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestImageUpdate' from this record model
        """
        return self.get_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SMILESShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILESShadow' on this record model
        """
        self.set_field_value(self.SMILESSHADOW__FIELD_NAME.field_name, value)

    def get_SMILESShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILESShadow' from this record model
        """
        return self.get_field_value(self.SMILESSHADOW__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class NotebookDirectoryModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NotebookDirectory
    Data Type Display Name: Notebook Directory (Notebook Directories)
    Fields: CreatedBy, DateCreated, InheritRolesFromParent, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DirectoryName
    """
    DATA_TYPE_NAME: Final[str] = 'NotebookDirectory'
    DISPLAY_NAME: Final[str] = "Notebook Directory"
    PLURAL_DISPLAY_NAME: Final[str] = "Notebook Directories"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DIRECTORYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DirectoryName", FieldType.STRING, display_name="Directory Name")
    INHERITROLESFROMPARENT__FIELD_NAME: Final[WrapperField] = WrapperField("InheritRolesFromParent", FieldType.BOOLEAN, display_name="Inherit Roles From Parent")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DirectoryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DirectoryName' on this record model
        """
        self.set_field_value(self.DIRECTORYNAME__FIELD_NAME.field_name, value)

    def get_DirectoryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DirectoryName' from this record model
        """
        return self.get_field_value(self.DIRECTORYNAME__FIELD_NAME.field_name)

    def set_InheritRolesFromParent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InheritRolesFromParent' on this record model
        """
        self.set_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name, value)

    def get_InheritRolesFromParent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InheritRolesFromParent' from this record model
        """
        return self.get_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class NucleicAcidSequenceJsonModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type NucleicAcidSequenceJson
    Data Type Display Name: Sequence State (Sequence States)
    Fields: SequenceName, FilePath, VeloxCurrentVersion, CreatedBy, RegisteredPartDataType, DateCreated, DataRecordName, RegisteredPartRecordId, VeloxLastModifiedDate, VeloxLastModifiedBy, RegistryId
    """
    DATA_TYPE_NAME: Final[str] = 'NucleicAcidSequenceJson'
    DISPLAY_NAME: Final[str] = "Sequence State"
    PLURAL_DISPLAY_NAME: Final[str] = "Sequence States"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    REGISTEREDPARTDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("RegisteredPartDataType", FieldType.STRING, display_name="Registered Part Data Type")
    REGISTEREDPARTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("RegisteredPartRecordId", FieldType.LONG, display_name="Registered Part Record Id")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.AUTO_ACCESSION, display_name="Registry Id")
    SEQUENCENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SequenceName", FieldType.STRING, display_name="Sequence Alias")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_RegisteredPartDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegisteredPartDataType' on this record model
        """
        self.set_field_value(self.REGISTEREDPARTDATATYPE__FIELD_NAME.field_name, value)

    def get_RegisteredPartDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegisteredPartDataType' from this record model
        """
        return self.get_field_value(self.REGISTEREDPARTDATATYPE__FIELD_NAME.field_name)

    def set_RegisteredPartRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'RegisteredPartRecordId' on this record model
        """
        self.set_field_value(self.REGISTEREDPARTRECORDID__FIELD_NAME.field_name, value)

    def get_RegisteredPartRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RegisteredPartRecordId' from this record model
        """
        return self.get_field_value(self.REGISTEREDPARTRECORDID__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SequenceName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceName' on this record model
        """
        self.set_field_value(self.SEQUENCENAME__FIELD_NAME.field_name, value)

    def get_SequenceName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceName' from this record model
        """
        return self.get_field_value(self.SEQUENCENAME__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class OligoModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Oligo
    Data Type Display Name: Oligo (Oligos)
    Fields: CreatedBy, PartNumber, ConsumableType, DateCreated, DataRecordName, ExpirationDate, VeloxLastModifiedDate, VeloxLastModifiedBy, ConsumableName, LotNumber, HELM
    """
    DATA_TYPE_NAME: Final[str] = 'Oligo'
    DISPLAY_NAME: Final[str] = "Oligo"
    PLURAL_DISPLAY_NAME: Final[str] = "Oligos"
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Oligo Name")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Oligo Subtype")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    HELM__FIELD_NAME: Final[WrapperField] = WrapperField("HELM", FieldType.STRING, display_name="HELM")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class OligoPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type OligoPart
    Data Type Display Name: Oligo Part (Oligo Parts)
    Fields: CreatedBy, PartNumber, ConsumableType, DateCreated, SMILES, MOL, Sequence, Vendor, QuantityOnHand, Units, QuantityPerItem, MolecularWeigh, ReorderLevelQuantity, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, ConsumableName, HELM
    <-- VIRTUAL ENTITY CONJUGATE -->
    """
    DATA_TYPE_NAME: Final[str] = 'OligoPart'
    DISPLAY_NAME: Final[str] = "Oligo Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Oligo Parts"
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Oligo Name")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Oligo Subtype")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    HELM__FIELD_NAME: Final[WrapperField] = WrapperField("HELM", FieldType.STRING, display_name="HELM")
    MOL__FIELD_NAME: Final[WrapperField] = WrapperField("MOL", FieldType.STRING, display_name="MOL")
    MOLECULARWEIGH__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeigh", FieldType.DOUBLE, display_name="Molecular Weigh")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="SMILES")
    SEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("Sequence", FieldType.STRING, display_name="Sequence")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.SELECTION, display_name="Vendor")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeigh_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeigh' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGH__FIELD_NAME.field_name, value)

    def get_MolecularWeigh_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeigh' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGH__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_Sequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'Sequence' on this record model
        """
        self.set_field_value(self.SEQUENCE__FIELD_NAME.field_name, value)

    def get_Sequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Sequence' from this record model
        """
        return self.get_field_value(self.SEQUENCE__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class OneWayANOVAHIVDataModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type OneWayANOVAHIVData
    Data Type Display Name: One Way ANOVA HIV Datum (One Way ANOVA HIV Data)
    Fields: CreatedBy, RunLevel, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, OpticalDensity, LotLevel
    """
    DATA_TYPE_NAME: Final[str] = 'OneWayANOVAHIVData'
    DISPLAY_NAME: Final[str] = "One Way ANOVA HIV Datum"
    PLURAL_DISPLAY_NAME: Final[str] = "One Way ANOVA HIV Data"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    LOTLEVEL__FIELD_NAME: Final[WrapperField] = WrapperField("LotLevel", FieldType.STRING, display_name="Lot Level")
    OPTICALDENSITY__FIELD_NAME: Final[WrapperField] = WrapperField("OpticalDensity", FieldType.DOUBLE, display_name="Optical Density")
    RUNLEVEL__FIELD_NAME: Final[WrapperField] = WrapperField("RunLevel", FieldType.STRING, display_name="Run Level")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_LotLevel_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotLevel' on this record model
        """
        self.set_field_value(self.LOTLEVEL__FIELD_NAME.field_name, value)

    def get_LotLevel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotLevel' from this record model
        """
        return self.get_field_value(self.LOTLEVEL__FIELD_NAME.field_name)

    def set_OpticalDensity_field(self, value: Optional[float]):
        """
        Set data field with field name 'OpticalDensity' on this record model
        """
        self.set_field_value(self.OPTICALDENSITY__FIELD_NAME.field_name, value)

    def get_OpticalDensity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'OpticalDensity' from this record model
        """
        return self.get_field_value(self.OPTICALDENSITY__FIELD_NAME.field_name)

    def set_RunLevel_field(self, value: Optional[str]):
        """
        Set data field with field name 'RunLevel' on this record model
        """
        self.set_field_value(self.RUNLEVEL__FIELD_NAME.field_name, value)

    def get_RunLevel_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RunLevel' from this record model
        """
        return self.get_field_value(self.RUNLEVEL__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class OneWayAnovaPlantGrowthModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type OneWayAnovaPlantGrowth
    Data Type Display Name: One Way Anova Plant Growth (One Way Anova Plant Growths)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, weight, DateCreated, plantGroup
    """
    DATA_TYPE_NAME: Final[str] = 'OneWayAnovaPlantGrowth'
    DISPLAY_NAME: Final[str] = "One Way Anova Plant Growth"
    PLURAL_DISPLAY_NAME: Final[str] = "One Way Anova Plant Growths"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    PLANTGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("plantGroup", FieldType.STRING, display_name="Group")
    WEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("weight", FieldType.DOUBLE, display_name="Weight")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_plantGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'plantGroup' on this record model
        """
        self.set_field_value(self.PLANTGROUP__FIELD_NAME.field_name, value)

    def get_plantGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'plantGroup' from this record model
        """
        return self.get_field_value(self.PLANTGROUP__FIELD_NAME.field_name)

    def set_weight_field(self, value: Optional[float]):
        """
        Set data field with field name 'weight' on this record model
        """
        self.set_field_value(self.WEIGHT__FIELD_NAME.field_name, value)

    def get_weight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'weight' from this record model
        """
        return self.get_field_value(self.WEIGHT__FIELD_NAME.field_name)


class PairedTTestExampleDatumModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PairedTTestExampleDatum
    Data Type Display Name: Paired T-Test Example Datum (Paired T-Test Example Data)
    Fields: CreatedBy, DataRecordName, StudentNumber, TestScoreAfterUsingCalc, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, TestScoreBeforeCalc
    """
    DATA_TYPE_NAME: Final[str] = 'PairedTTestExampleDatum'
    DISPLAY_NAME: Final[str] = "Paired T-Test Example Datum"
    PLURAL_DISPLAY_NAME: Final[str] = "Paired T-Test Example Data"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    STUDENTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("StudentNumber", FieldType.INTEGER, display_name="StudentNum")
    TESTSCOREAFTERUSINGCALC__FIELD_NAME: Final[WrapperField] = WrapperField("TestScoreAfterUsingCalc", FieldType.DOUBLE, display_name="Test Score After Using Calculator")
    TESTSCOREBEFORECALC__FIELD_NAME: Final[WrapperField] = WrapperField("TestScoreBeforeCalc", FieldType.DOUBLE, display_name="Test Score Before Using Calculator")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_StudentNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'StudentNumber' on this record model
        """
        self.set_field_value(self.STUDENTNUMBER__FIELD_NAME.field_name, value)

    def get_StudentNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StudentNumber' from this record model
        """
        return self.get_field_value(self.STUDENTNUMBER__FIELD_NAME.field_name)

    def set_TestScoreAfterUsingCalc_field(self, value: Optional[float]):
        """
        Set data field with field name 'TestScoreAfterUsingCalc' on this record model
        """
        self.set_field_value(self.TESTSCOREAFTERUSINGCALC__FIELD_NAME.field_name, value)

    def get_TestScoreAfterUsingCalc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TestScoreAfterUsingCalc' from this record model
        """
        return self.get_field_value(self.TESTSCOREAFTERUSINGCALC__FIELD_NAME.field_name)

    def set_TestScoreBeforeCalc_field(self, value: Optional[float]):
        """
        Set data field with field name 'TestScoreBeforeCalc' on this record model
        """
        self.set_field_value(self.TESTSCOREBEFORECALC__FIELD_NAME.field_name, value)

    def get_TestScoreBeforeCalc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TestScoreBeforeCalc' from this record model
        """
        return self.get_field_value(self.TESTSCOREBEFORECALC__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PcrResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PcrResult
    Data Type Display Name: PCR Result (PCR Results)
    Fields: FfSoftwareVersion, Channel1Target, Channel3Cq, Channel1Cq, Channel5EndFluoRaw, SampleTypeName, Assay, Channel2EndFluoBc, Channel5EndFluoBc, AcceptOrReject, Channel3Result, Channel5Target, ApVersion, Channel1EndFluoRaw, SampleId, CreatedBy, Channel5Result, TestResult, IsRejected, Channel4Target, InstrumentId, RejectionReason, Lot, DataRecordName, Channel2EndFluoRaw, ResultInfo, Channel1EndFluoBc, Channel2Result, Channel4Cq, Channel2Cq, Channel1Result, FileName, Well, Channel3Target, Channel3EndFluoBc, DateCreated, Channel3EndFluoRaw, VeloxLastModifiedBy, Channel2Target, Channel4EndFluoBc, Channel4EndFluoRaw, Channel4Result, Outcome, VeloxLastModifiedDate, Channel5Cq, SampleType
    """
    DATA_TYPE_NAME: Final[str] = 'PcrResult'
    DISPLAY_NAME: Final[str] = "PCR Result"
    PLURAL_DISPLAY_NAME: Final[str] = "PCR Results"
    ACCEPTORREJECT__FIELD_NAME: Final[WrapperField] = WrapperField("AcceptOrReject", FieldType.PICKLIST, display_name="Accept/Reject")
    APVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("ApVersion", FieldType.STRING, display_name="AP Version")
    ASSAY__FIELD_NAME: Final[WrapperField] = WrapperField("Assay", FieldType.STRING, display_name="Assay")
    CHANNEL1CQ__FIELD_NAME: Final[WrapperField] = WrapperField("Channel1Cq", FieldType.DOUBLE, display_name="Channel 1 Cq")
    CHANNEL1ENDFLUOBC__FIELD_NAME: Final[WrapperField] = WrapperField("Channel1EndFluoBc", FieldType.DOUBLE, display_name="Channel 1 End Fluo BC")
    CHANNEL1ENDFLUORAW__FIELD_NAME: Final[WrapperField] = WrapperField("Channel1EndFluoRaw", FieldType.DOUBLE, display_name="Channel 1 End Fluo Raw")
    CHANNEL1RESULT__FIELD_NAME: Final[WrapperField] = WrapperField("Channel1Result", FieldType.STRING, display_name="Channel 1 Result")
    CHANNEL1TARGET__FIELD_NAME: Final[WrapperField] = WrapperField("Channel1Target", FieldType.STRING, display_name="Channel 1 Target")
    CHANNEL2CQ__FIELD_NAME: Final[WrapperField] = WrapperField("Channel2Cq", FieldType.DOUBLE, display_name="Channel 2 Cq")
    CHANNEL2ENDFLUOBC__FIELD_NAME: Final[WrapperField] = WrapperField("Channel2EndFluoBc", FieldType.DOUBLE, display_name="Channel 2 End Fluo BC")
    CHANNEL2ENDFLUORAW__FIELD_NAME: Final[WrapperField] = WrapperField("Channel2EndFluoRaw", FieldType.DOUBLE, display_name="Channel 2 End Fluo Raw")
    CHANNEL2RESULT__FIELD_NAME: Final[WrapperField] = WrapperField("Channel2Result", FieldType.STRING, display_name="Channel 2 Result")
    CHANNEL2TARGET__FIELD_NAME: Final[WrapperField] = WrapperField("Channel2Target", FieldType.STRING, display_name="Channel 2 Target")
    CHANNEL3CQ__FIELD_NAME: Final[WrapperField] = WrapperField("Channel3Cq", FieldType.DOUBLE, display_name="Channel 3 Cq")
    CHANNEL3ENDFLUOBC__FIELD_NAME: Final[WrapperField] = WrapperField("Channel3EndFluoBc", FieldType.DOUBLE, display_name="Channel 3 End Fluo BC")
    CHANNEL3ENDFLUORAW__FIELD_NAME: Final[WrapperField] = WrapperField("Channel3EndFluoRaw", FieldType.DOUBLE, display_name="Channel 3 End Fluo Raw")
    CHANNEL3RESULT__FIELD_NAME: Final[WrapperField] = WrapperField("Channel3Result", FieldType.STRING, display_name="Channel 3 Result")
    CHANNEL3TARGET__FIELD_NAME: Final[WrapperField] = WrapperField("Channel3Target", FieldType.STRING, display_name="Channel 3 Target")
    CHANNEL4CQ__FIELD_NAME: Final[WrapperField] = WrapperField("Channel4Cq", FieldType.DOUBLE, display_name="Channel 4 Cq")
    CHANNEL4ENDFLUOBC__FIELD_NAME: Final[WrapperField] = WrapperField("Channel4EndFluoBc", FieldType.DOUBLE, display_name="Channel 4 End Fluo BC")
    CHANNEL4ENDFLUORAW__FIELD_NAME: Final[WrapperField] = WrapperField("Channel4EndFluoRaw", FieldType.DOUBLE, display_name="Channel 4 End Fluo Raw")
    CHANNEL4RESULT__FIELD_NAME: Final[WrapperField] = WrapperField("Channel4Result", FieldType.STRING, display_name="Channel 4 Result")
    CHANNEL4TARGET__FIELD_NAME: Final[WrapperField] = WrapperField("Channel4Target", FieldType.STRING, display_name="Channel 4 Target")
    CHANNEL5CQ__FIELD_NAME: Final[WrapperField] = WrapperField("Channel5Cq", FieldType.DOUBLE, display_name="Channel 5 Cq")
    CHANNEL5ENDFLUOBC__FIELD_NAME: Final[WrapperField] = WrapperField("Channel5EndFluoBc", FieldType.DOUBLE, display_name="Channel 5 End Fluo BC")
    CHANNEL5ENDFLUORAW__FIELD_NAME: Final[WrapperField] = WrapperField("Channel5EndFluoRaw", FieldType.DOUBLE, display_name="Channel 5 End Fluo Raw")
    CHANNEL5RESULT__FIELD_NAME: Final[WrapperField] = WrapperField("Channel5Result", FieldType.STRING, display_name="Channel 5 Result")
    CHANNEL5TARGET__FIELD_NAME: Final[WrapperField] = WrapperField("Channel5Target", FieldType.STRING, display_name="Channel 5 Target")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FFSOFTWAREVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("FfSoftwareVersion", FieldType.STRING, display_name="FF Software Version")
    FILENAME__FIELD_NAME: Final[WrapperField] = WrapperField("FileName", FieldType.STRING, display_name="File Name")
    INSTRUMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentId", FieldType.STRING, display_name="Instrument ID")
    ISREJECTED__FIELD_NAME: Final[WrapperField] = WrapperField("IsRejected", FieldType.STRING, display_name="Is Rejected")
    LOT__FIELD_NAME: Final[WrapperField] = WrapperField("Lot", FieldType.STRING, display_name="Lot")
    OUTCOME__FIELD_NAME: Final[WrapperField] = WrapperField("Outcome", FieldType.STRING, display_name="Outcome")
    REJECTIONREASON__FIELD_NAME: Final[WrapperField] = WrapperField("RejectionReason", FieldType.STRING, display_name="Rejection Reason")
    RESULTINFO__FIELD_NAME: Final[WrapperField] = WrapperField("ResultInfo", FieldType.STRING, display_name="Result Info")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    SAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SampleType", FieldType.STRING, display_name="Sample Type")
    SAMPLETYPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SampleTypeName", FieldType.STRING, display_name="Sample Type Name")
    TESTRESULT__FIELD_NAME: Final[WrapperField] = WrapperField("TestResult", FieldType.STRING, display_name="Result")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WELL__FIELD_NAME: Final[WrapperField] = WrapperField("Well", FieldType.STRING, display_name="Well")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AcceptOrReject_field(self, value: Optional[str]):
        """
        Set data field with field name 'AcceptOrReject' on this record model
        """
        self.set_field_value(self.ACCEPTORREJECT__FIELD_NAME.field_name, value)

    def get_AcceptOrReject_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AcceptOrReject' from this record model
        """
        return self.get_field_value(self.ACCEPTORREJECT__FIELD_NAME.field_name)

    def set_ApVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'ApVersion' on this record model
        """
        self.set_field_value(self.APVERSION__FIELD_NAME.field_name, value)

    def get_ApVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ApVersion' from this record model
        """
        return self.get_field_value(self.APVERSION__FIELD_NAME.field_name)

    def set_Assay_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assay' on this record model
        """
        self.set_field_value(self.ASSAY__FIELD_NAME.field_name, value)

    def get_Assay_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assay' from this record model
        """
        return self.get_field_value(self.ASSAY__FIELD_NAME.field_name)

    def set_Channel1Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel1Cq' on this record model
        """
        self.set_field_value(self.CHANNEL1CQ__FIELD_NAME.field_name, value)

    def get_Channel1Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel1Cq' from this record model
        """
        return self.get_field_value(self.CHANNEL1CQ__FIELD_NAME.field_name)

    def set_Channel1EndFluoBc_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel1EndFluoBc' on this record model
        """
        self.set_field_value(self.CHANNEL1ENDFLUOBC__FIELD_NAME.field_name, value)

    def get_Channel1EndFluoBc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel1EndFluoBc' from this record model
        """
        return self.get_field_value(self.CHANNEL1ENDFLUOBC__FIELD_NAME.field_name)

    def set_Channel1EndFluoRaw_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel1EndFluoRaw' on this record model
        """
        self.set_field_value(self.CHANNEL1ENDFLUORAW__FIELD_NAME.field_name, value)

    def get_Channel1EndFluoRaw_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel1EndFluoRaw' from this record model
        """
        return self.get_field_value(self.CHANNEL1ENDFLUORAW__FIELD_NAME.field_name)

    def set_Channel1Result_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel1Result' on this record model
        """
        self.set_field_value(self.CHANNEL1RESULT__FIELD_NAME.field_name, value)

    def get_Channel1Result_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel1Result' from this record model
        """
        return self.get_field_value(self.CHANNEL1RESULT__FIELD_NAME.field_name)

    def set_Channel1Target_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel1Target' on this record model
        """
        self.set_field_value(self.CHANNEL1TARGET__FIELD_NAME.field_name, value)

    def get_Channel1Target_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel1Target' from this record model
        """
        return self.get_field_value(self.CHANNEL1TARGET__FIELD_NAME.field_name)

    def set_Channel2Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel2Cq' on this record model
        """
        self.set_field_value(self.CHANNEL2CQ__FIELD_NAME.field_name, value)

    def get_Channel2Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel2Cq' from this record model
        """
        return self.get_field_value(self.CHANNEL2CQ__FIELD_NAME.field_name)

    def set_Channel2EndFluoBc_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel2EndFluoBc' on this record model
        """
        self.set_field_value(self.CHANNEL2ENDFLUOBC__FIELD_NAME.field_name, value)

    def get_Channel2EndFluoBc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel2EndFluoBc' from this record model
        """
        return self.get_field_value(self.CHANNEL2ENDFLUOBC__FIELD_NAME.field_name)

    def set_Channel2EndFluoRaw_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel2EndFluoRaw' on this record model
        """
        self.set_field_value(self.CHANNEL2ENDFLUORAW__FIELD_NAME.field_name, value)

    def get_Channel2EndFluoRaw_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel2EndFluoRaw' from this record model
        """
        return self.get_field_value(self.CHANNEL2ENDFLUORAW__FIELD_NAME.field_name)

    def set_Channel2Result_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel2Result' on this record model
        """
        self.set_field_value(self.CHANNEL2RESULT__FIELD_NAME.field_name, value)

    def get_Channel2Result_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel2Result' from this record model
        """
        return self.get_field_value(self.CHANNEL2RESULT__FIELD_NAME.field_name)

    def set_Channel2Target_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel2Target' on this record model
        """
        self.set_field_value(self.CHANNEL2TARGET__FIELD_NAME.field_name, value)

    def get_Channel2Target_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel2Target' from this record model
        """
        return self.get_field_value(self.CHANNEL2TARGET__FIELD_NAME.field_name)

    def set_Channel3Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel3Cq' on this record model
        """
        self.set_field_value(self.CHANNEL3CQ__FIELD_NAME.field_name, value)

    def get_Channel3Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel3Cq' from this record model
        """
        return self.get_field_value(self.CHANNEL3CQ__FIELD_NAME.field_name)

    def set_Channel3EndFluoBc_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel3EndFluoBc' on this record model
        """
        self.set_field_value(self.CHANNEL3ENDFLUOBC__FIELD_NAME.field_name, value)

    def get_Channel3EndFluoBc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel3EndFluoBc' from this record model
        """
        return self.get_field_value(self.CHANNEL3ENDFLUOBC__FIELD_NAME.field_name)

    def set_Channel3EndFluoRaw_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel3EndFluoRaw' on this record model
        """
        self.set_field_value(self.CHANNEL3ENDFLUORAW__FIELD_NAME.field_name, value)

    def get_Channel3EndFluoRaw_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel3EndFluoRaw' from this record model
        """
        return self.get_field_value(self.CHANNEL3ENDFLUORAW__FIELD_NAME.field_name)

    def set_Channel3Result_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel3Result' on this record model
        """
        self.set_field_value(self.CHANNEL3RESULT__FIELD_NAME.field_name, value)

    def get_Channel3Result_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel3Result' from this record model
        """
        return self.get_field_value(self.CHANNEL3RESULT__FIELD_NAME.field_name)

    def set_Channel3Target_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel3Target' on this record model
        """
        self.set_field_value(self.CHANNEL3TARGET__FIELD_NAME.field_name, value)

    def get_Channel3Target_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel3Target' from this record model
        """
        return self.get_field_value(self.CHANNEL3TARGET__FIELD_NAME.field_name)

    def set_Channel4Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel4Cq' on this record model
        """
        self.set_field_value(self.CHANNEL4CQ__FIELD_NAME.field_name, value)

    def get_Channel4Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel4Cq' from this record model
        """
        return self.get_field_value(self.CHANNEL4CQ__FIELD_NAME.field_name)

    def set_Channel4EndFluoBc_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel4EndFluoBc' on this record model
        """
        self.set_field_value(self.CHANNEL4ENDFLUOBC__FIELD_NAME.field_name, value)

    def get_Channel4EndFluoBc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel4EndFluoBc' from this record model
        """
        return self.get_field_value(self.CHANNEL4ENDFLUOBC__FIELD_NAME.field_name)

    def set_Channel4EndFluoRaw_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel4EndFluoRaw' on this record model
        """
        self.set_field_value(self.CHANNEL4ENDFLUORAW__FIELD_NAME.field_name, value)

    def get_Channel4EndFluoRaw_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel4EndFluoRaw' from this record model
        """
        return self.get_field_value(self.CHANNEL4ENDFLUORAW__FIELD_NAME.field_name)

    def set_Channel4Result_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel4Result' on this record model
        """
        self.set_field_value(self.CHANNEL4RESULT__FIELD_NAME.field_name, value)

    def get_Channel4Result_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel4Result' from this record model
        """
        return self.get_field_value(self.CHANNEL4RESULT__FIELD_NAME.field_name)

    def set_Channel4Target_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel4Target' on this record model
        """
        self.set_field_value(self.CHANNEL4TARGET__FIELD_NAME.field_name, value)

    def get_Channel4Target_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel4Target' from this record model
        """
        return self.get_field_value(self.CHANNEL4TARGET__FIELD_NAME.field_name)

    def set_Channel5Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel5Cq' on this record model
        """
        self.set_field_value(self.CHANNEL5CQ__FIELD_NAME.field_name, value)

    def get_Channel5Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel5Cq' from this record model
        """
        return self.get_field_value(self.CHANNEL5CQ__FIELD_NAME.field_name)

    def set_Channel5EndFluoBc_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel5EndFluoBc' on this record model
        """
        self.set_field_value(self.CHANNEL5ENDFLUOBC__FIELD_NAME.field_name, value)

    def get_Channel5EndFluoBc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel5EndFluoBc' from this record model
        """
        return self.get_field_value(self.CHANNEL5ENDFLUOBC__FIELD_NAME.field_name)

    def set_Channel5EndFluoRaw_field(self, value: Optional[float]):
        """
        Set data field with field name 'Channel5EndFluoRaw' on this record model
        """
        self.set_field_value(self.CHANNEL5ENDFLUORAW__FIELD_NAME.field_name, value)

    def get_Channel5EndFluoRaw_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Channel5EndFluoRaw' from this record model
        """
        return self.get_field_value(self.CHANNEL5ENDFLUORAW__FIELD_NAME.field_name)

    def set_Channel5Result_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel5Result' on this record model
        """
        self.set_field_value(self.CHANNEL5RESULT__FIELD_NAME.field_name, value)

    def get_Channel5Result_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel5Result' from this record model
        """
        return self.get_field_value(self.CHANNEL5RESULT__FIELD_NAME.field_name)

    def set_Channel5Target_field(self, value: Optional[str]):
        """
        Set data field with field name 'Channel5Target' on this record model
        """
        self.set_field_value(self.CHANNEL5TARGET__FIELD_NAME.field_name, value)

    def get_Channel5Target_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Channel5Target' from this record model
        """
        return self.get_field_value(self.CHANNEL5TARGET__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FfSoftwareVersion_field(self, value: Optional[str]):
        """
        Set data field with field name 'FfSoftwareVersion' on this record model
        """
        self.set_field_value(self.FFSOFTWAREVERSION__FIELD_NAME.field_name, value)

    def get_FfSoftwareVersion_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FfSoftwareVersion' from this record model
        """
        return self.get_field_value(self.FFSOFTWAREVERSION__FIELD_NAME.field_name)

    def set_FileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileName' on this record model
        """
        self.set_field_value(self.FILENAME__FIELD_NAME.field_name, value)

    def get_FileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileName' from this record model
        """
        return self.get_field_value(self.FILENAME__FIELD_NAME.field_name)

    def set_InstrumentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentId' on this record model
        """
        self.set_field_value(self.INSTRUMENTID__FIELD_NAME.field_name, value)

    def get_InstrumentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentId' from this record model
        """
        return self.get_field_value(self.INSTRUMENTID__FIELD_NAME.field_name)

    def set_IsRejected_field(self, value: Optional[str]):
        """
        Set data field with field name 'IsRejected' on this record model
        """
        self.set_field_value(self.ISREJECTED__FIELD_NAME.field_name, value)

    def get_IsRejected_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IsRejected' from this record model
        """
        return self.get_field_value(self.ISREJECTED__FIELD_NAME.field_name)

    def set_Lot_field(self, value: Optional[str]):
        """
        Set data field with field name 'Lot' on this record model
        """
        self.set_field_value(self.LOT__FIELD_NAME.field_name, value)

    def get_Lot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Lot' from this record model
        """
        return self.get_field_value(self.LOT__FIELD_NAME.field_name)

    def set_Outcome_field(self, value: Optional[str]):
        """
        Set data field with field name 'Outcome' on this record model
        """
        self.set_field_value(self.OUTCOME__FIELD_NAME.field_name, value)

    def get_Outcome_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Outcome' from this record model
        """
        return self.get_field_value(self.OUTCOME__FIELD_NAME.field_name)

    def set_RejectionReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'RejectionReason' on this record model
        """
        self.set_field_value(self.REJECTIONREASON__FIELD_NAME.field_name, value)

    def get_RejectionReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RejectionReason' from this record model
        """
        return self.get_field_value(self.REJECTIONREASON__FIELD_NAME.field_name)

    def set_ResultInfo_field(self, value: Optional[str]):
        """
        Set data field with field name 'ResultInfo' on this record model
        """
        self.set_field_value(self.RESULTINFO__FIELD_NAME.field_name, value)

    def get_ResultInfo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ResultInfo' from this record model
        """
        return self.get_field_value(self.RESULTINFO__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleType' on this record model
        """
        self.set_field_value(self.SAMPLETYPE__FIELD_NAME.field_name, value)

    def get_SampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleType' from this record model
        """
        return self.get_field_value(self.SAMPLETYPE__FIELD_NAME.field_name)

    def set_SampleTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleTypeName' on this record model
        """
        self.set_field_value(self.SAMPLETYPENAME__FIELD_NAME.field_name, value)

    def get_SampleTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleTypeName' from this record model
        """
        return self.get_field_value(self.SAMPLETYPENAME__FIELD_NAME.field_name)

    def set_TestResult_field(self, value: Optional[str]):
        """
        Set data field with field name 'TestResult' on this record model
        """
        self.set_field_value(self.TESTRESULT__FIELD_NAME.field_name, value)

    def get_TestResult_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TestResult' from this record model
        """
        return self.get_field_value(self.TESTRESULT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Well_field(self, value: Optional[str]):
        """
        Set data field with field name 'Well' on this record model
        """
        self.set_field_value(self.WELL__FIELD_NAME.field_name, value)

    def get_Well_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Well' from this record model
        """
        return self.get_field_value(self.WELL__FIELD_NAME.field_name)


class PDBFileModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PDBFile
    Data Type Display Name: PDB File (PDB Files)
    Fields: FilePath, VeloxCurrentVersion, CreatedBy, Keywords, StructureName, DateCreated, MultiParentLink201, DataRecordName, VeloxLastModifiedDate, Descriptor, VeloxLastModifiedBy, NumChains, PdbId
    """
    DATA_TYPE_NAME: Final[str] = 'PDBFile'
    DISPLAY_NAME: Final[str] = "PDB File"
    PLURAL_DISPLAY_NAME: Final[str] = "PDB Files"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTOR__FIELD_NAME: Final[WrapperField] = WrapperField("Descriptor", FieldType.STRING, display_name="Descriptor")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    KEYWORDS__FIELD_NAME: Final[WrapperField] = WrapperField("Keywords", FieldType.STRING, display_name="Keywords")
    MULTIPARENTLINK201__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink201", FieldType.MULTIPARENTLINK, display_name="Linked ProteinParts")
    NUMCHAINS__FIELD_NAME: Final[WrapperField] = WrapperField("NumChains", FieldType.INTEGER, display_name="Num Chains")
    PDBID__FIELD_NAME: Final[WrapperField] = WrapperField("PdbId", FieldType.STRING, display_name="PDB ID")
    STRUCTURENAME__FIELD_NAME: Final[WrapperField] = WrapperField("StructureName", FieldType.STRING, display_name="Structure Name")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Descriptor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Descriptor' on this record model
        """
        self.set_field_value(self.DESCRIPTOR__FIELD_NAME.field_name, value)

    def get_Descriptor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Descriptor' from this record model
        """
        return self.get_field_value(self.DESCRIPTOR__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_Keywords_field(self, value: Optional[str]):
        """
        Set data field with field name 'Keywords' on this record model
        """
        self.set_field_value(self.KEYWORDS__FIELD_NAME.field_name, value)

    def get_Keywords_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Keywords' from this record model
        """
        return self.get_field_value(self.KEYWORDS__FIELD_NAME.field_name)

    def set_NumChains_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumChains' on this record model
        """
        self.set_field_value(self.NUMCHAINS__FIELD_NAME.field_name, value)

    def get_NumChains_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumChains' from this record model
        """
        return self.get_field_value(self.NUMCHAINS__FIELD_NAME.field_name)

    def set_PdbId_field(self, value: Optional[str]):
        """
        Set data field with field name 'PdbId' on this record model
        """
        self.set_field_value(self.PDBID__FIELD_NAME.field_name, value)

    def get_PdbId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PdbId' from this record model
        """
        return self.get_field_value(self.PDBID__FIELD_NAME.field_name)

    def set_StructureName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StructureName' on this record model
        """
        self.set_field_value(self.STRUCTURENAME__FIELD_NAME.field_name, value)

    def get_StructureName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StructureName' from this record model
        """
        return self.get_field_value(self.STRUCTURENAME__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PhasingPrephasingScoreModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PhasingPrephasingScore
    Data Type Display Name: Phasing and Prephasing Score (Phasing and Prephasing Scores)
    Fields: CreatedBy, LaneCol, Lane, DateCreated, ScoreTwo, ColRead, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, ScoreOne
    <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: Final[str] = 'PhasingPrephasingScore'
    DISPLAY_NAME: Final[str] = "Phasing and Prephasing Score"
    PLURAL_DISPLAY_NAME: Final[str] = "Phasing and Prephasing Scores"
    COLREAD__FIELD_NAME: Final[WrapperField] = WrapperField("ColRead", FieldType.STRING, display_name="Read")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    LANE__FIELD_NAME: Final[WrapperField] = WrapperField("Lane", FieldType.LONG, display_name="Lane (Long Integer)")
    LANECOL__FIELD_NAME: Final[WrapperField] = WrapperField("LaneCol", FieldType.STRING, display_name="Lane")
    SCOREONE__FIELD_NAME: Final[WrapperField] = WrapperField("ScoreOne", FieldType.DOUBLE, display_name="Phasing (%)")
    SCORETWO__FIELD_NAME: Final[WrapperField] = WrapperField("ScoreTwo", FieldType.DOUBLE, display_name="Prephasing (%)")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColRead_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColRead' on this record model
        """
        self.set_field_value(self.COLREAD__FIELD_NAME.field_name, value)

    def get_ColRead_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColRead' from this record model
        """
        return self.get_field_value(self.COLREAD__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Lane_field(self, value: Optional[int]):
        """
        Set data field with field name 'Lane' on this record model
        """
        self.set_field_value(self.LANE__FIELD_NAME.field_name, value)

    def get_Lane_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Lane' from this record model
        """
        return self.get_field_value(self.LANE__FIELD_NAME.field_name)

    def set_LaneCol_field(self, value: Optional[str]):
        """
        Set data field with field name 'LaneCol' on this record model
        """
        self.set_field_value(self.LANECOL__FIELD_NAME.field_name, value)

    def get_LaneCol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LaneCol' from this record model
        """
        return self.get_field_value(self.LANECOL__FIELD_NAME.field_name)

    def set_ScoreOne_field(self, value: Optional[float]):
        """
        Set data field with field name 'ScoreOne' on this record model
        """
        self.set_field_value(self.SCOREONE__FIELD_NAME.field_name, value)

    def get_ScoreOne_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ScoreOne' from this record model
        """
        return self.get_field_value(self.SCOREONE__FIELD_NAME.field_name)

    def set_ScoreTwo_field(self, value: Optional[float]):
        """
        Set data field with field name 'ScoreTwo' on this record model
        """
        self.set_field_value(self.SCORETWO__FIELD_NAME.field_name, value)

    def get_ScoreTwo_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ScoreTwo' from this record model
        """
        return self.get_field_value(self.SCORETWO__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PistoiaAttachmentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PistoiaAttachment
    Data Type Display Name: Pistoia Attachment (Pistoia Attachments)
    Fields: CreatedBy, CapGroupSMILES, AccessionId, DataRecordName, MultiParentLink240, VeloxLastModifiedDate, Label, VeloxLastModifiedBy, DateCreated, CapGroupName, AlternateId
    """
    DATA_TYPE_NAME: Final[str] = 'PistoiaAttachment'
    DISPLAY_NAME: Final[str] = "Pistoia Attachment"
    PLURAL_DISPLAY_NAME: Final[str] = "Pistoia Attachments"
    ACCESSIONID__FIELD_NAME: Final[WrapperField] = WrapperField("AccessionId", FieldType.AUTO_ACCESSION, display_name="Accession ID")
    ALTERNATEID__FIELD_NAME: Final[WrapperField] = WrapperField("AlternateId", FieldType.STRING, display_name="Alternate ID")
    CAPGROUPNAME__FIELD_NAME: Final[WrapperField] = WrapperField("CapGroupName", FieldType.STRING, display_name="Cap Group Name")
    CAPGROUPSMILES__FIELD_NAME: Final[WrapperField] = WrapperField("CapGroupSMILES", FieldType.STRING, display_name="Cap Group SMILES")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    LABEL__FIELD_NAME: Final[WrapperField] = WrapperField("Label", FieldType.STRING, display_name="Label")
    MULTIPARENTLINK240__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink240", FieldType.MULTIPARENTLINK, display_name="Linked Monomer")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AccessionId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AccessionId' on this record model
        """
        self.set_field_value(self.ACCESSIONID__FIELD_NAME.field_name, value)

    def get_AccessionId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AccessionId' from this record model
        """
        return self.get_field_value(self.ACCESSIONID__FIELD_NAME.field_name)

    def set_AlternateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AlternateId' on this record model
        """
        self.set_field_value(self.ALTERNATEID__FIELD_NAME.field_name, value)

    def get_AlternateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AlternateId' from this record model
        """
        return self.get_field_value(self.ALTERNATEID__FIELD_NAME.field_name)

    def set_CapGroupName_field(self, value: Optional[str]):
        """
        Set data field with field name 'CapGroupName' on this record model
        """
        self.set_field_value(self.CAPGROUPNAME__FIELD_NAME.field_name, value)

    def get_CapGroupName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CapGroupName' from this record model
        """
        return self.get_field_value(self.CAPGROUPNAME__FIELD_NAME.field_name)

    def set_CapGroupSMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'CapGroupSMILES' on this record model
        """
        self.set_field_value(self.CAPGROUPSMILES__FIELD_NAME.field_name, value)

    def get_CapGroupSMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CapGroupSMILES' from this record model
        """
        return self.get_field_value(self.CAPGROUPSMILES__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Label_field(self, value: Optional[str]):
        """
        Set data field with field name 'Label' on this record model
        """
        self.set_field_value(self.LABEL__FIELD_NAME.field_name, value)

    def get_Label_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Label' from this record model
        """
        return self.get_field_value(self.LABEL__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PistoiaMonomerModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PistoiaMonomer
    Data Type Display Name: Monomer (Monomers)
    Fields: CreatedBy, PolymerType, Symbol, DateCreated, MonomerType, SMILES, Name, AccessionId, DataRecordName, VeloxLastModifiedDate, NaturalAnalog, Author, VeloxLastModifiedBy, MolFile, IsValid
    """
    DATA_TYPE_NAME: Final[str] = 'PistoiaMonomer'
    DISPLAY_NAME: Final[str] = "Monomer"
    PLURAL_DISPLAY_NAME: Final[str] = "Monomers"
    ACCESSIONID__FIELD_NAME: Final[WrapperField] = WrapperField("AccessionId", FieldType.AUTO_ACCESSION, display_name="Accession ID")
    AUTHOR__FIELD_NAME: Final[WrapperField] = WrapperField("Author", FieldType.STRING, display_name="Author")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ISVALID__FIELD_NAME: Final[WrapperField] = WrapperField("IsValid", FieldType.BOOLEAN, display_name="Valid?")
    MOLFILE__FIELD_NAME: Final[WrapperField] = WrapperField("MolFile", FieldType.STRING, display_name="Mol File")
    MONOMERTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("MonomerType", FieldType.PICKLIST, display_name="Monomer Type")
    NAME__FIELD_NAME: Final[WrapperField] = WrapperField("Name", FieldType.STRING, display_name="Name")
    NATURALANALOG__FIELD_NAME: Final[WrapperField] = WrapperField("NaturalAnalog", FieldType.STRING, display_name="Natural Analog")
    POLYMERTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("PolymerType", FieldType.PICKLIST, display_name="Polymer Type")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="SMILES")
    SYMBOL__FIELD_NAME: Final[WrapperField] = WrapperField("Symbol", FieldType.STRING, display_name="Symbol")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AccessionId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AccessionId' on this record model
        """
        self.set_field_value(self.ACCESSIONID__FIELD_NAME.field_name, value)

    def get_AccessionId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AccessionId' from this record model
        """
        return self.get_field_value(self.ACCESSIONID__FIELD_NAME.field_name)

    def set_Author_field(self, value: Optional[str]):
        """
        Set data field with field name 'Author' on this record model
        """
        self.set_field_value(self.AUTHOR__FIELD_NAME.field_name, value)

    def get_Author_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Author' from this record model
        """
        return self.get_field_value(self.AUTHOR__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IsValid_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsValid' on this record model
        """
        self.set_field_value(self.ISVALID__FIELD_NAME.field_name, value)

    def get_IsValid_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsValid' from this record model
        """
        return self.get_field_value(self.ISVALID__FIELD_NAME.field_name)

    def set_MolFile_field(self, value: Optional[str]):
        """
        Set data field with field name 'MolFile' on this record model
        """
        self.set_field_value(self.MOLFILE__FIELD_NAME.field_name, value)

    def get_MolFile_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MolFile' from this record model
        """
        return self.get_field_value(self.MOLFILE__FIELD_NAME.field_name)

    def set_MonomerType_field(self, value: Optional[str]):
        """
        Set data field with field name 'MonomerType' on this record model
        """
        self.set_field_value(self.MONOMERTYPE__FIELD_NAME.field_name, value)

    def get_MonomerType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MonomerType' from this record model
        """
        return self.get_field_value(self.MONOMERTYPE__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_NaturalAnalog_field(self, value: Optional[str]):
        """
        Set data field with field name 'NaturalAnalog' on this record model
        """
        self.set_field_value(self.NATURALANALOG__FIELD_NAME.field_name, value)

    def get_NaturalAnalog_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NaturalAnalog' from this record model
        """
        return self.get_field_value(self.NATURALANALOG__FIELD_NAME.field_name)

    def set_PolymerType_field(self, value: Optional[str]):
        """
        Set data field with field name 'PolymerType' on this record model
        """
        self.set_field_value(self.POLYMERTYPE__FIELD_NAME.field_name, value)

    def get_PolymerType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PolymerType' from this record model
        """
        return self.get_field_value(self.POLYMERTYPE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_Symbol_field(self, value: Optional[str]):
        """
        Set data field with field name 'Symbol' on this record model
        """
        self.set_field_value(self.SYMBOL__FIELD_NAME.field_name, value)

    def get_Symbol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Symbol' from this record model
        """
        return self.get_field_value(self.SYMBOL__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PistoiaRulesModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PistoiaRules
    Data Type Display Name: Pistoia Rules (Pistoia Rules)
    Fields: Script, Description, Category, CreatedBy, DataRecordName, VeloxLastModifiedDate, Author, VeloxLastModifiedBy, DateCreated, Name
    """
    DATA_TYPE_NAME: Final[str] = 'PistoiaRules'
    DISPLAY_NAME: Final[str] = "Pistoia Rules"
    PLURAL_DISPLAY_NAME: Final[str] = "Pistoia Rules"
    AUTHOR__FIELD_NAME: Final[WrapperField] = WrapperField("Author", FieldType.STRING, display_name="Author")
    CATEGORY__FIELD_NAME: Final[WrapperField] = WrapperField("Category", FieldType.STRING, display_name="Category")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    NAME__FIELD_NAME: Final[WrapperField] = WrapperField("Name", FieldType.STRING, display_name="Name")
    SCRIPT__FIELD_NAME: Final[WrapperField] = WrapperField("Script", FieldType.STRING, display_name="Script")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Author_field(self, value: Optional[str]):
        """
        Set data field with field name 'Author' on this record model
        """
        self.set_field_value(self.AUTHOR__FIELD_NAME.field_name, value)

    def get_Author_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Author' from this record model
        """
        return self.get_field_value(self.AUTHOR__FIELD_NAME.field_name)

    def set_Category_field(self, value: Optional[str]):
        """
        Set data field with field name 'Category' on this record model
        """
        self.set_field_value(self.CATEGORY__FIELD_NAME.field_name, value)

    def get_Category_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Category' from this record model
        """
        return self.get_field_value(self.CATEGORY__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_Script_field(self, value: Optional[str]):
        """
        Set data field with field name 'Script' on this record model
        """
        self.set_field_value(self.SCRIPT__FIELD_NAME.field_name, value)

    def get_Script_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Script' from this record model
        """
        return self.get_field_value(self.SCRIPT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PlateModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Plate
    Data Type Display Name: Plate (Plates)
    Fields: PlateSampleType, MultiParentLink159, PlateWellCnt, PlateColumns, DateCreated, PlateNote, MultiParentLink156, MultiParentLink211, MultiParentLink135, ExemplarPlateStatus, RowPosition, ColPosition, PlateType, QCStatus, VeloxLastModifiedBy, StorageLocationBarcode, MultiParentLink203, CreatedBy, PlateBarcode, PlateRows, StorageUnitPath, DataRecordName, IsCircular, VeloxLastModifiedDate, PlateId, IsHighThroughput
    The Plate Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'Plate'
    DISPLAY_NAME: Final[str] = "Plate"
    PLURAL_DISPLAY_NAME: Final[str] = "Plates"
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.SELECTION, display_name="Column Position")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXEMPLARPLATESTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("ExemplarPlateStatus", FieldType.SELECTION, display_name="Plate Status")
    ISCIRCULAR__FIELD_NAME: Final[WrapperField] = WrapperField("IsCircular", FieldType.BOOLEAN, display_name="Is Circular")
    ISHIGHTHROUGHPUT__FIELD_NAME: Final[WrapperField] = WrapperField("IsHighThroughput", FieldType.BOOLEAN, display_name="High Throughput?")
    MULTIPARENTLINK135__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink135", FieldType.MULTIPARENTLINK, display_name="Related PlateMappingTemplateExps")
    MULTIPARENTLINK156__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink156", FieldType.MULTIPARENTLINK, display_name="Linked Request")
    MULTIPARENTLINK159__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink159", FieldType.MULTIPARENTLINK, display_name="Linked Plate")
    MULTIPARENTLINK203__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink203", FieldType.MULTIPARENTLINK, display_name="Linked Batches")
    MULTIPARENTLINK211__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink211", FieldType.MULTIPARENTLINK, display_name="Linked Assigned Process")
    PLATEBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("PlateBarcode", FieldType.STRING, display_name="Plate Barcode")
    PLATECOLUMNS__FIELD_NAME: Final[WrapperField] = WrapperField("PlateColumns", FieldType.INTEGER, display_name="Plate Columns")
    PLATEID__FIELD_NAME: Final[WrapperField] = WrapperField("PlateId", FieldType.STRING, display_name="Plate ID")
    PLATENOTE__FIELD_NAME: Final[WrapperField] = WrapperField("PlateNote", FieldType.STRING, display_name="Plate Note")
    PLATEROWS__FIELD_NAME: Final[WrapperField] = WrapperField("PlateRows", FieldType.INTEGER, display_name="Plate Rows")
    PLATESAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("PlateSampleType", FieldType.SELECTION, display_name="Plate Sample Type")
    PLATETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("PlateType", FieldType.STRING, display_name="Plate Type")
    PLATEWELLCNT__FIELD_NAME: Final[WrapperField] = WrapperField("PlateWellCnt", FieldType.ENUM, display_name="Plate Well Count")
    QCSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("QCStatus", FieldType.PICKLIST, display_name="QC Status")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.SELECTION, display_name="Row Position")
    STORAGELOCATIONBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("StorageLocationBarcode", FieldType.SELECTION, display_name="Storage Location Barcode")
    STORAGEUNITPATH__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitPath", FieldType.STRING, display_name="Storage Location Path")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExemplarPlateStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarPlateStatus' on this record model
        """
        self.set_field_value(self.EXEMPLARPLATESTATUS__FIELD_NAME.field_name, value)

    def get_ExemplarPlateStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarPlateStatus' from this record model
        """
        return self.get_field_value(self.EXEMPLARPLATESTATUS__FIELD_NAME.field_name)

    def set_IsCircular_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsCircular' on this record model
        """
        self.set_field_value(self.ISCIRCULAR__FIELD_NAME.field_name, value)

    def get_IsCircular_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsCircular' from this record model
        """
        return self.get_field_value(self.ISCIRCULAR__FIELD_NAME.field_name)

    def set_IsHighThroughput_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsHighThroughput' on this record model
        """
        self.set_field_value(self.ISHIGHTHROUGHPUT__FIELD_NAME.field_name, value)

    def get_IsHighThroughput_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsHighThroughput' from this record model
        """
        return self.get_field_value(self.ISHIGHTHROUGHPUT__FIELD_NAME.field_name)

    def set_PlateBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateBarcode' on this record model
        """
        self.set_field_value(self.PLATEBARCODE__FIELD_NAME.field_name, value)

    def get_PlateBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateBarcode' from this record model
        """
        return self.get_field_value(self.PLATEBARCODE__FIELD_NAME.field_name)

    def set_PlateColumns_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlateColumns' on this record model
        """
        self.set_field_value(self.PLATECOLUMNS__FIELD_NAME.field_name, value)

    def get_PlateColumns_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlateColumns' from this record model
        """
        return self.get_field_value(self.PLATECOLUMNS__FIELD_NAME.field_name)

    def set_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateId' on this record model
        """
        self.set_field_value(self.PLATEID__FIELD_NAME.field_name, value)

    def get_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateId' from this record model
        """
        return self.get_field_value(self.PLATEID__FIELD_NAME.field_name)

    def set_PlateNote_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateNote' on this record model
        """
        self.set_field_value(self.PLATENOTE__FIELD_NAME.field_name, value)

    def get_PlateNote_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateNote' from this record model
        """
        return self.get_field_value(self.PLATENOTE__FIELD_NAME.field_name)

    def set_PlateRows_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlateRows' on this record model
        """
        self.set_field_value(self.PLATEROWS__FIELD_NAME.field_name, value)

    def get_PlateRows_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlateRows' from this record model
        """
        return self.get_field_value(self.PLATEROWS__FIELD_NAME.field_name)

    def set_PlateSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateSampleType' on this record model
        """
        self.set_field_value(self.PLATESAMPLETYPE__FIELD_NAME.field_name, value)

    def get_PlateSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateSampleType' from this record model
        """
        return self.get_field_value(self.PLATESAMPLETYPE__FIELD_NAME.field_name)

    def set_PlateType_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateType' on this record model
        """
        self.set_field_value(self.PLATETYPE__FIELD_NAME.field_name, value)

    def get_PlateType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateType' from this record model
        """
        return self.get_field_value(self.PLATETYPE__FIELD_NAME.field_name)

    def set_PlateWellCnt_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlateWellCnt' on this record model
        """
        self.set_field_value(self.PLATEWELLCNT__FIELD_NAME.field_name, value)

    def get_PlateWellCnt_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlateWellCnt' from this record model
        """
        return self.get_field_value(self.PLATEWELLCNT__FIELD_NAME.field_name)

    def set_QCStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'QCStatus' on this record model
        """
        self.set_field_value(self.QCSTATUS__FIELD_NAME.field_name, value)

    def get_QCStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QCStatus' from this record model
        """
        return self.get_field_value(self.QCSTATUS__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_StorageLocationBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageLocationBarcode' on this record model
        """
        self.set_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name, value)

    def get_StorageLocationBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageLocationBarcode' from this record model
        """
        return self.get_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PlateDesignerWellAnnotationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateDesignerWellAnnotation
    Data Type Display Name: Plate Designer Well Annotation (Plate Designer Well Annotations)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, Notes
    Annotations for well element allows users to add additional notes at any location in a 3D plate.
    """
    DATA_TYPE_NAME: Final[str] = 'PlateDesignerWellAnnotation'
    DISPLAY_NAME: Final[str] = "Plate Designer Well Annotation"
    PLURAL_DISPLAY_NAME: Final[str] = "Plate Designer Well Annotations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    NOTES__FIELD_NAME: Final[WrapperField] = WrapperField("Notes", FieldType.STRING, display_name="Notes")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Notes_field(self, value: Optional[str]):
        """
        Set data field with field name 'Notes' on this record model
        """
        self.set_field_value(self.NOTES__FIELD_NAME.field_name, value)

    def get_Notes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Notes' from this record model
        """
        return self.get_field_value(self.NOTES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PlateDesignerWellElementModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateDesignerWellElement
    Data Type Display Name: Plate Designer Well Element (Plate Designer Well Element)
    Fields: SourceSampleConcentration, DateCreated, TargetMass, SourceDataTypeName, RowPosition, ColPosition, VeloxLastModifiedBy, SourceSampleVolume, AliquotSampleRecordId, CreatedBy, IsControl, Concentration, PlateRecordId, SourceVolumeToRemove, Layer, SourceSampleMass, DataRecordName, Volume, VeloxLastModifiedDate, SourceRecordId, ControlType, ActualVolumeRemoved, ConcentrationUnits
    A well element describes a particular location in a 3D plate. Each well element in the system is uniquely identified by (Plate ID, Layer #, Row, Column).
A well element is always describing about either a payload of an existing record, or an annotation (or both).
    """
    DATA_TYPE_NAME: Final[str] = 'PlateDesignerWellElement'
    DISPLAY_NAME: Final[str] = "Plate Designer Well Element"
    PLURAL_DISPLAY_NAME: Final[str] = "Plate Designer Well Element"
    ACTUALVOLUMEREMOVED__FIELD_NAME: Final[WrapperField] = WrapperField("ActualVolumeRemoved", FieldType.DOUBLE, display_name="Actual Volume Removed")
    ALIQUOTSAMPLERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("AliquotSampleRecordId", FieldType.LONG, display_name="Aliquot Sample Record ID")
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.SELECTION, display_name="Column Position")
    CONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("Concentration", FieldType.DOUBLE, display_name="Diluted Concentration")
    CONCENTRATIONUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("ConcentrationUnits", FieldType.STRING, display_name="Diluted Concentration Units")
    CONTROLTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ControlType", FieldType.STRING, display_name="Control Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ISCONTROL__FIELD_NAME: Final[WrapperField] = WrapperField("IsControl", FieldType.BOOLEAN, display_name="Is Control?")
    LAYER__FIELD_NAME: Final[WrapperField] = WrapperField("Layer", FieldType.INTEGER, display_name="Layer")
    PLATERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("PlateRecordId", FieldType.LONG, display_name="Plate Record ID")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.SELECTION, display_name="Row Position")
    SOURCEDATATYPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SourceDataTypeName", FieldType.STRING, display_name="Source Data Type Name")
    SOURCERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SourceRecordId", FieldType.LONG, display_name="Source Record ID")
    SOURCESAMPLECONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("SourceSampleConcentration", FieldType.DOUBLE, display_name="Source Sample Concentration")
    SOURCESAMPLEMASS__FIELD_NAME: Final[WrapperField] = WrapperField("SourceSampleMass", FieldType.DOUBLE, display_name="Source Sample Mass")
    SOURCESAMPLEVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("SourceSampleVolume", FieldType.DOUBLE, display_name="Source Sample Volume")
    SOURCEVOLUMETOREMOVE__FIELD_NAME: Final[WrapperField] = WrapperField("SourceVolumeToRemove", FieldType.DOUBLE, display_name="Source Volume To Remove")
    TARGETMASS__FIELD_NAME: Final[WrapperField] = WrapperField("TargetMass", FieldType.DOUBLE, display_name="Target Mass")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("Volume", FieldType.DOUBLE, display_name="Target Volume")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActualVolumeRemoved_field(self, value: Optional[float]):
        """
        Set data field with field name 'ActualVolumeRemoved' on this record model
        """
        self.set_field_value(self.ACTUALVOLUMEREMOVED__FIELD_NAME.field_name, value)

    def get_ActualVolumeRemoved_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ActualVolumeRemoved' from this record model
        """
        return self.get_field_value(self.ACTUALVOLUMEREMOVED__FIELD_NAME.field_name)

    def set_AliquotSampleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'AliquotSampleRecordId' on this record model
        """
        self.set_field_value(self.ALIQUOTSAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_AliquotSampleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'AliquotSampleRecordId' from this record model
        """
        return self.get_field_value(self.ALIQUOTSAMPLERECORDID__FIELD_NAME.field_name)

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def set_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Concentration' on this record model
        """
        self.set_field_value(self.CONCENTRATION__FIELD_NAME.field_name, value)

    def get_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Concentration' from this record model
        """
        return self.get_field_value(self.CONCENTRATION__FIELD_NAME.field_name)

    def set_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConcentrationUnits' on this record model
        """
        self.set_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ControlType' on this record model
        """
        self.set_field_value(self.CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ControlType' from this record model
        """
        return self.get_field_value(self.CONTROLTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IsControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsControl' on this record model
        """
        self.set_field_value(self.ISCONTROL__FIELD_NAME.field_name, value)

    def get_IsControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsControl' from this record model
        """
        return self.get_field_value(self.ISCONTROL__FIELD_NAME.field_name)

    def set_Layer_field(self, value: Optional[int]):
        """
        Set data field with field name 'Layer' on this record model
        """
        self.set_field_value(self.LAYER__FIELD_NAME.field_name, value)

    def get_Layer_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Layer' from this record model
        """
        return self.get_field_value(self.LAYER__FIELD_NAME.field_name)

    def set_PlateRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'PlateRecordId' on this record model
        """
        self.set_field_value(self.PLATERECORDID__FIELD_NAME.field_name, value)

    def get_PlateRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PlateRecordId' from this record model
        """
        return self.get_field_value(self.PLATERECORDID__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SourceDataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourceDataTypeName' on this record model
        """
        self.set_field_value(self.SOURCEDATATYPENAME__FIELD_NAME.field_name, value)

    def get_SourceDataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourceDataTypeName' from this record model
        """
        return self.get_field_value(self.SOURCEDATATYPENAME__FIELD_NAME.field_name)

    def set_SourceRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SourceRecordId' on this record model
        """
        self.set_field_value(self.SOURCERECORDID__FIELD_NAME.field_name, value)

    def get_SourceRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SourceRecordId' from this record model
        """
        return self.get_field_value(self.SOURCERECORDID__FIELD_NAME.field_name)

    def set_SourceSampleConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SourceSampleConcentration' on this record model
        """
        self.set_field_value(self.SOURCESAMPLECONCENTRATION__FIELD_NAME.field_name, value)

    def get_SourceSampleConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SourceSampleConcentration' from this record model
        """
        return self.get_field_value(self.SOURCESAMPLECONCENTRATION__FIELD_NAME.field_name)

    def set_SourceSampleMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'SourceSampleMass' on this record model
        """
        self.set_field_value(self.SOURCESAMPLEMASS__FIELD_NAME.field_name, value)

    def get_SourceSampleMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SourceSampleMass' from this record model
        """
        return self.get_field_value(self.SOURCESAMPLEMASS__FIELD_NAME.field_name)

    def set_SourceSampleVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'SourceSampleVolume' on this record model
        """
        self.set_field_value(self.SOURCESAMPLEVOLUME__FIELD_NAME.field_name, value)

    def get_SourceSampleVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SourceSampleVolume' from this record model
        """
        return self.get_field_value(self.SOURCESAMPLEVOLUME__FIELD_NAME.field_name)

    def set_SourceVolumeToRemove_field(self, value: Optional[float]):
        """
        Set data field with field name 'SourceVolumeToRemove' on this record model
        """
        self.set_field_value(self.SOURCEVOLUMETOREMOVE__FIELD_NAME.field_name, value)

    def get_SourceVolumeToRemove_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SourceVolumeToRemove' from this record model
        """
        return self.get_field_value(self.SOURCEVOLUMETOREMOVE__FIELD_NAME.field_name)

    def set_TargetMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetMass' on this record model
        """
        self.set_field_value(self.TARGETMASS__FIELD_NAME.field_name, value)

    def get_TargetMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetMass' from this record model
        """
        return self.get_field_value(self.TARGETMASS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Volume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Volume' on this record model
        """
        self.set_field_value(self.VOLUME__FIELD_NAME.field_name, value)

    def get_Volume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Volume' from this record model
        """
        return self.get_field_value(self.VOLUME__FIELD_NAME.field_name)


class PlateMappingSrcItemModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateMappingSrcItem
    Data Type Display Name: Plate Mapping Source Item (Plate Mapping Source Items)
    Fields: MultiParentLink159, Description, CreatedBy, IsControl, DateCreated, MultiParentLink135, SourceItemId, DataRecordName, RowPosition, ColPosition, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'PlateMappingSrcItem'
    DISPLAY_NAME: Final[str] = "Plate Mapping Source Item"
    PLURAL_DISPLAY_NAME: Final[str] = "Plate Mapping Source Items"
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.SELECTION, display_name="Column Position")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    ISCONTROL__FIELD_NAME: Final[WrapperField] = WrapperField("IsControl", FieldType.BOOLEAN, display_name="Is Control?")
    MULTIPARENTLINK135__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink135", FieldType.MULTIPARENTLINK, display_name="Related PlateMappingTemplateExps")
    MULTIPARENTLINK159__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink159", FieldType.MULTIPARENTLINK, display_name="Linked Plate")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.SELECTION, display_name="Row Position")
    SOURCEITEMID__FIELD_NAME: Final[WrapperField] = WrapperField("SourceItemId", FieldType.STRING, display_name="Source Item ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_IsControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsControl' on this record model
        """
        self.set_field_value(self.ISCONTROL__FIELD_NAME.field_name, value)

    def get_IsControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsControl' from this record model
        """
        return self.get_field_value(self.ISCONTROL__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SourceItemId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourceItemId' on this record model
        """
        self.set_field_value(self.SOURCEITEMID__FIELD_NAME.field_name, value)

    def get_SourceItemId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourceItemId' from this record model
        """
        return self.get_field_value(self.SOURCEITEMID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PlateMappingTemplateExpModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateMappingTemplateExp
    Data Type Display Name: Plate Mapping Template (Plate Mapping Template)
    Fields: UseCustomPlatePrefix, AllowControlsToShift, DstPlateSizeRow, TargetConcentration, PlatingMethod, DateCreated, VeloxLastModifiedBy, ReverseSortingOrder, SrcPlateSizeCol, MappingName, DstPlateSizeCol, CreatedBy, SamplesHaveSourcePosition, NumberOfPlates, SourcePlateDoesNotMatter, NumberOfSamples, DestinationPlatingOrder, AutoApplyTemplate, SrcPlateSizeRow, SortOnField, DataRecordName, TargetVol, VeloxLastModifiedDate, ControlType, WellCompaction
    """
    DATA_TYPE_NAME: Final[str] = 'PlateMappingTemplateExp'
    DISPLAY_NAME: Final[str] = "Plate Mapping Template"
    PLURAL_DISPLAY_NAME: Final[str] = "Plate Mapping Template"
    ALLOWCONTROLSTOSHIFT__FIELD_NAME: Final[WrapperField] = WrapperField("AllowControlsToShift", FieldType.BOOLEAN, display_name="Allow Controls to Shift With Consolidation")
    AUTOAPPLYTEMPLATE__FIELD_NAME: Final[WrapperField] = WrapperField("AutoApplyTemplate", FieldType.BOOLEAN, display_name="Auto Apply Template")
    CONTROLTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ControlType", FieldType.SELECTION, display_name="Aliquot Control Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESTINATIONPLATINGORDER__FIELD_NAME: Final[WrapperField] = WrapperField("DestinationPlatingOrder", FieldType.PICKLIST, display_name="Destination Plate Fill By Method")
    DSTPLATESIZECOL__FIELD_NAME: Final[WrapperField] = WrapperField("DstPlateSizeCol", FieldType.INTEGER, display_name="Target Plate Column Count")
    DSTPLATESIZEROW__FIELD_NAME: Final[WrapperField] = WrapperField("DstPlateSizeRow", FieldType.INTEGER, display_name="Target Plate Row Count")
    MAPPINGNAME__FIELD_NAME: Final[WrapperField] = WrapperField("MappingName", FieldType.STRING, display_name="Template Name")
    NUMBEROFPLATES__FIELD_NAME: Final[WrapperField] = WrapperField("NumberOfPlates", FieldType.INTEGER, display_name="Number of Source Plates")
    NUMBEROFSAMPLES__FIELD_NAME: Final[WrapperField] = WrapperField("NumberOfSamples", FieldType.INTEGER, display_name="Max Number of Samples")
    PLATINGMETHOD__FIELD_NAME: Final[WrapperField] = WrapperField("PlatingMethod", FieldType.PICKLIST, display_name="Plating Method")
    REVERSESORTINGORDER__FIELD_NAME: Final[WrapperField] = WrapperField("ReverseSortingOrder", FieldType.BOOLEAN, display_name="Reverse Sorting Order")
    SAMPLESHAVESOURCEPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("SamplesHaveSourcePosition", FieldType.BOOLEAN, display_name="Require Source Positions")
    SORTONFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("SortOnField", FieldType.SELECTION, display_name="Sort Samples by Field")
    SOURCEPLATEDOESNOTMATTER__FIELD_NAME: Final[WrapperField] = WrapperField("SourcePlateDoesNotMatter", FieldType.BOOLEAN, display_name="Source Plate Does Not Matter")
    SRCPLATESIZECOL__FIELD_NAME: Final[WrapperField] = WrapperField("SrcPlateSizeCol", FieldType.INTEGER, display_name="Source Plate Column Count")
    SRCPLATESIZEROW__FIELD_NAME: Final[WrapperField] = WrapperField("SrcPlateSizeRow", FieldType.INTEGER, display_name="Source Plate Row Count")
    TARGETCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("TargetConcentration", FieldType.DOUBLE, display_name="Target Concentration")
    TARGETVOL__FIELD_NAME: Final[WrapperField] = WrapperField("TargetVol", FieldType.DOUBLE, display_name="Target Volume")
    USECUSTOMPLATEPREFIX__FIELD_NAME: Final[WrapperField] = WrapperField("UseCustomPlatePrefix", FieldType.BOOLEAN, display_name="Use Custom Plate Prefix")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WELLCOMPACTION__FIELD_NAME: Final[WrapperField] = WrapperField("WellCompaction", FieldType.PICKLIST, display_name="Consolidate Wells")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AllowControlsToShift_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AllowControlsToShift' on this record model
        """
        self.set_field_value(self.ALLOWCONTROLSTOSHIFT__FIELD_NAME.field_name, value)

    def get_AllowControlsToShift_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AllowControlsToShift' from this record model
        """
        return self.get_field_value(self.ALLOWCONTROLSTOSHIFT__FIELD_NAME.field_name)

    def set_AutoApplyTemplate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AutoApplyTemplate' on this record model
        """
        self.set_field_value(self.AUTOAPPLYTEMPLATE__FIELD_NAME.field_name, value)

    def get_AutoApplyTemplate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AutoApplyTemplate' from this record model
        """
        return self.get_field_value(self.AUTOAPPLYTEMPLATE__FIELD_NAME.field_name)

    def set_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ControlType' on this record model
        """
        self.set_field_value(self.CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ControlType' from this record model
        """
        return self.get_field_value(self.CONTROLTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DestinationPlatingOrder_field(self, value: Optional[str]):
        """
        Set data field with field name 'DestinationPlatingOrder' on this record model
        """
        self.set_field_value(self.DESTINATIONPLATINGORDER__FIELD_NAME.field_name, value)

    def get_DestinationPlatingOrder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DestinationPlatingOrder' from this record model
        """
        return self.get_field_value(self.DESTINATIONPLATINGORDER__FIELD_NAME.field_name)

    def set_DstPlateSizeCol_field(self, value: Optional[int]):
        """
        Set data field with field name 'DstPlateSizeCol' on this record model
        """
        self.set_field_value(self.DSTPLATESIZECOL__FIELD_NAME.field_name, value)

    def get_DstPlateSizeCol_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DstPlateSizeCol' from this record model
        """
        return self.get_field_value(self.DSTPLATESIZECOL__FIELD_NAME.field_name)

    def set_DstPlateSizeRow_field(self, value: Optional[int]):
        """
        Set data field with field name 'DstPlateSizeRow' on this record model
        """
        self.set_field_value(self.DSTPLATESIZEROW__FIELD_NAME.field_name, value)

    def get_DstPlateSizeRow_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DstPlateSizeRow' from this record model
        """
        return self.get_field_value(self.DSTPLATESIZEROW__FIELD_NAME.field_name)

    def set_MappingName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingName' on this record model
        """
        self.set_field_value(self.MAPPINGNAME__FIELD_NAME.field_name, value)

    def get_MappingName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingName' from this record model
        """
        return self.get_field_value(self.MAPPINGNAME__FIELD_NAME.field_name)

    def set_NumberOfPlates_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfPlates' on this record model
        """
        self.set_field_value(self.NUMBEROFPLATES__FIELD_NAME.field_name, value)

    def get_NumberOfPlates_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfPlates' from this record model
        """
        return self.get_field_value(self.NUMBEROFPLATES__FIELD_NAME.field_name)

    def set_NumberOfSamples_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfSamples' on this record model
        """
        self.set_field_value(self.NUMBEROFSAMPLES__FIELD_NAME.field_name, value)

    def get_NumberOfSamples_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfSamples' from this record model
        """
        return self.get_field_value(self.NUMBEROFSAMPLES__FIELD_NAME.field_name)

    def set_PlatingMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlatingMethod' on this record model
        """
        self.set_field_value(self.PLATINGMETHOD__FIELD_NAME.field_name, value)

    def get_PlatingMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlatingMethod' from this record model
        """
        return self.get_field_value(self.PLATINGMETHOD__FIELD_NAME.field_name)

    def set_ReverseSortingOrder_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReverseSortingOrder' on this record model
        """
        self.set_field_value(self.REVERSESORTINGORDER__FIELD_NAME.field_name, value)

    def get_ReverseSortingOrder_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReverseSortingOrder' from this record model
        """
        return self.get_field_value(self.REVERSESORTINGORDER__FIELD_NAME.field_name)

    def set_SamplesHaveSourcePosition_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SamplesHaveSourcePosition' on this record model
        """
        self.set_field_value(self.SAMPLESHAVESOURCEPOSITION__FIELD_NAME.field_name, value)

    def get_SamplesHaveSourcePosition_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SamplesHaveSourcePosition' from this record model
        """
        return self.get_field_value(self.SAMPLESHAVESOURCEPOSITION__FIELD_NAME.field_name)

    def set_SortOnField_field(self, value: Optional[str]):
        """
        Set data field with field name 'SortOnField' on this record model
        """
        self.set_field_value(self.SORTONFIELD__FIELD_NAME.field_name, value)

    def get_SortOnField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SortOnField' from this record model
        """
        return self.get_field_value(self.SORTONFIELD__FIELD_NAME.field_name)

    def set_SourcePlateDoesNotMatter_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SourcePlateDoesNotMatter' on this record model
        """
        self.set_field_value(self.SOURCEPLATEDOESNOTMATTER__FIELD_NAME.field_name, value)

    def get_SourcePlateDoesNotMatter_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SourcePlateDoesNotMatter' from this record model
        """
        return self.get_field_value(self.SOURCEPLATEDOESNOTMATTER__FIELD_NAME.field_name)

    def set_SrcPlateSizeCol_field(self, value: Optional[int]):
        """
        Set data field with field name 'SrcPlateSizeCol' on this record model
        """
        self.set_field_value(self.SRCPLATESIZECOL__FIELD_NAME.field_name, value)

    def get_SrcPlateSizeCol_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SrcPlateSizeCol' from this record model
        """
        return self.get_field_value(self.SRCPLATESIZECOL__FIELD_NAME.field_name)

    def set_SrcPlateSizeRow_field(self, value: Optional[int]):
        """
        Set data field with field name 'SrcPlateSizeRow' on this record model
        """
        self.set_field_value(self.SRCPLATESIZEROW__FIELD_NAME.field_name, value)

    def get_SrcPlateSizeRow_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SrcPlateSizeRow' from this record model
        """
        return self.get_field_value(self.SRCPLATESIZEROW__FIELD_NAME.field_name)

    def set_TargetConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetConcentration' on this record model
        """
        self.set_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name, value)

    def get_TargetConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetConcentration' from this record model
        """
        return self.get_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name)

    def set_TargetVol_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetVol' on this record model
        """
        self.set_field_value(self.TARGETVOL__FIELD_NAME.field_name, value)

    def get_TargetVol_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetVol' from this record model
        """
        return self.get_field_value(self.TARGETVOL__FIELD_NAME.field_name)

    def set_UseCustomPlatePrefix_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseCustomPlatePrefix' on this record model
        """
        self.set_field_value(self.USECUSTOMPLATEPREFIX__FIELD_NAME.field_name, value)

    def get_UseCustomPlatePrefix_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseCustomPlatePrefix' from this record model
        """
        return self.get_field_value(self.USECUSTOMPLATEPREFIX__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WellCompaction_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellCompaction' on this record model
        """
        self.set_field_value(self.WELLCOMPACTION__FIELD_NAME.field_name, value)

    def get_WellCompaction_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellCompaction' from this record model
        """
        return self.get_field_value(self.WELLCOMPACTION__FIELD_NAME.field_name)


class PlateTemplateModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateTemplate
    Data Type Display Name: Plate Template (Plate Templates)
    Fields: CreatedBy, DataRecordName, TemplateDimensions, VeloxLastModifiedDate, TemplateName, VeloxLastModifiedBy, DateCreated, TemplateDescription
    """
    DATA_TYPE_NAME: Final[str] = 'PlateTemplate'
    DISPLAY_NAME: Final[str] = "Plate Template"
    PLURAL_DISPLAY_NAME: Final[str] = "Plate Templates"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    TEMPLATEDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("TemplateDescription", FieldType.STRING, display_name="Description")
    TEMPLATEDIMENSIONS__FIELD_NAME: Final[WrapperField] = WrapperField("TemplateDimensions", FieldType.STRING, display_name="Dimensions")
    TEMPLATENAME__FIELD_NAME: Final[WrapperField] = WrapperField("TemplateName", FieldType.STRING, display_name="Template Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_TemplateDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateDescription' on this record model
        """
        self.set_field_value(self.TEMPLATEDESCRIPTION__FIELD_NAME.field_name, value)

    def get_TemplateDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateDescription' from this record model
        """
        return self.get_field_value(self.TEMPLATEDESCRIPTION__FIELD_NAME.field_name)

    def set_TemplateDimensions_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateDimensions' on this record model
        """
        self.set_field_value(self.TEMPLATEDIMENSIONS__FIELD_NAME.field_name, value)

    def get_TemplateDimensions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateDimensions' from this record model
        """
        return self.get_field_value(self.TEMPLATEDIMENSIONS__FIELD_NAME.field_name)

    def set_TemplateName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TemplateName' on this record model
        """
        self.set_field_value(self.TEMPLATENAME__FIELD_NAME.field_name, value)

    def get_TemplateName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TemplateName' from this record model
        """
        return self.get_field_value(self.TEMPLATENAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PlateWellModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateWell
    Data Type Display Name: Plate Well (Plate Wells)
    Fields: DateCreated, OtherSampleId, IsPooled, RowPosition, ColPosition, VeloxLastModifiedBy, ExemplarSampleStatus, SampleId, VolumeUnits, CreatedBy, SourceSampleRecordId, ParentWellOrSampleRecordId, SourceSample, IsControl, Concentration, DataRecordName, Volume, ExemplarSampleType, VeloxLastModifiedDate, PlateId, ControlType, ConcentrationUnits, TotalMass
    """
    DATA_TYPE_NAME: Final[str] = 'PlateWell'
    DISPLAY_NAME: Final[str] = "Plate Well"
    PLURAL_DISPLAY_NAME: Final[str] = "Plate Wells"
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.SELECTION, display_name="Column Position")
    CONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("Concentration", FieldType.DOUBLE, display_name="Concentration")
    CONCENTRATIONUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("ConcentrationUnits", FieldType.PICKLIST, display_name="Concentration Units")
    CONTROLTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ControlType", FieldType.STRING, display_name="Control Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXEMPLARSAMPLESTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("ExemplarSampleStatus", FieldType.SELECTION, display_name="Sample Status")
    EXEMPLARSAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ExemplarSampleType", FieldType.SELECTION, display_name="Sample Type")
    ISCONTROL__FIELD_NAME: Final[WrapperField] = WrapperField("IsControl", FieldType.BOOLEAN, display_name="Is Control?")
    ISPOOLED__FIELD_NAME: Final[WrapperField] = WrapperField("IsPooled", FieldType.BOOLEAN, display_name="Is Pooled?")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    PARENTWELLORSAMPLERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ParentWellOrSampleRecordId", FieldType.STRING, display_name="Parent Well Or Sample Record ID")
    PLATEID__FIELD_NAME: Final[WrapperField] = WrapperField("PlateId", FieldType.STRING, display_name="Plate ID")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.SELECTION, display_name="Row Position")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    SOURCESAMPLE__FIELD_NAME: Final[WrapperField] = WrapperField("SourceSample", FieldType.STRING, display_name="Source Sample")
    SOURCESAMPLERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SourceSampleRecordId", FieldType.STRING, display_name="Source Sample Record ID")
    TOTALMASS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalMass", FieldType.DOUBLE, display_name="Total Mass")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("Volume", FieldType.DOUBLE, display_name="Volume")
    VOLUMEUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("VolumeUnits", FieldType.PICKLIST, display_name="Volume Units")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def set_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Concentration' on this record model
        """
        self.set_field_value(self.CONCENTRATION__FIELD_NAME.field_name, value)

    def get_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Concentration' from this record model
        """
        return self.get_field_value(self.CONCENTRATION__FIELD_NAME.field_name)

    def set_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConcentrationUnits' on this record model
        """
        self.set_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ControlType' on this record model
        """
        self.set_field_value(self.CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ControlType' from this record model
        """
        return self.get_field_value(self.CONTROLTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExemplarSampleStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleStatus' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLESTATUS__FIELD_NAME.field_name, value)

    def get_ExemplarSampleStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleStatus' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLESTATUS__FIELD_NAME.field_name)

    def set_ExemplarSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleType' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_ExemplarSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleType' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name)

    def set_IsControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsControl' on this record model
        """
        self.set_field_value(self.ISCONTROL__FIELD_NAME.field_name, value)

    def get_IsControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsControl' from this record model
        """
        return self.get_field_value(self.ISCONTROL__FIELD_NAME.field_name)

    def set_IsPooled_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPooled' on this record model
        """
        self.set_field_value(self.ISPOOLED__FIELD_NAME.field_name, value)

    def get_IsPooled_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPooled' from this record model
        """
        return self.get_field_value(self.ISPOOLED__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_ParentWellOrSampleRecordId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ParentWellOrSampleRecordId' on this record model
        """
        self.set_field_value(self.PARENTWELLORSAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_ParentWellOrSampleRecordId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ParentWellOrSampleRecordId' from this record model
        """
        return self.get_field_value(self.PARENTWELLORSAMPLERECORDID__FIELD_NAME.field_name)

    def set_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateId' on this record model
        """
        self.set_field_value(self.PLATEID__FIELD_NAME.field_name, value)

    def get_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateId' from this record model
        """
        return self.get_field_value(self.PLATEID__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SourceSample_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourceSample' on this record model
        """
        self.set_field_value(self.SOURCESAMPLE__FIELD_NAME.field_name, value)

    def get_SourceSample_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourceSample' from this record model
        """
        return self.get_field_value(self.SOURCESAMPLE__FIELD_NAME.field_name)

    def set_SourceSampleRecordId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourceSampleRecordId' on this record model
        """
        self.set_field_value(self.SOURCESAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_SourceSampleRecordId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourceSampleRecordId' from this record model
        """
        return self.get_field_value(self.SOURCESAMPLERECORDID__FIELD_NAME.field_name)

    def set_TotalMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalMass' on this record model
        """
        self.set_field_value(self.TOTALMASS__FIELD_NAME.field_name, value)

    def get_TotalMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalMass' from this record model
        """
        return self.get_field_value(self.TOTALMASS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Volume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Volume' on this record model
        """
        self.set_field_value(self.VOLUME__FIELD_NAME.field_name, value)

    def get_Volume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Volume' from this record model
        """
        return self.get_field_value(self.VOLUME__FIELD_NAME.field_name)

    def set_VolumeUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'VolumeUnits' on this record model
        """
        self.set_field_value(self.VOLUMEUNITS__FIELD_NAME.field_name, value)

    def get_VolumeUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VolumeUnits' from this record model
        """
        return self.get_field_value(self.VOLUMEUNITS__FIELD_NAME.field_name)


class PlateWellIndexModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateWellIndex
    Data Type Display Name: Plate Well Index (Plate Well Indices)
    Fields: IndexId, CreatedBy, IndexTag, DateCreated, OtherSampleId, MultiplexInstructions, DataRecordName, RowPosition, ColPosition, InputAssignmentMultiRecordId, VeloxLastModifiedDate, VeloxLastModifiedBy, InputAssignmentRecordId, SampleId
    """
    DATA_TYPE_NAME: Final[str] = 'PlateWellIndex'
    DISPLAY_NAME: Final[str] = "Plate Well Index"
    PLURAL_DISPLAY_NAME: Final[str] = "Plate Well Indices"
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.SELECTION, display_name="Column Position")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    INDEXID__FIELD_NAME: Final[WrapperField] = WrapperField("IndexId", FieldType.STRING, display_name="Index ID")
    INDEXTAG__FIELD_NAME: Final[WrapperField] = WrapperField("IndexTag", FieldType.STRING, display_name="Index Tag")
    INPUTASSIGNMENTMULTIRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("InputAssignmentMultiRecordId", FieldType.STRING, display_name="Input Assignment Multi RecordId")
    INPUTASSIGNMENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("InputAssignmentRecordId", FieldType.LONG, display_name="Input Assignment Record ID")
    MULTIPLEXINSTRUCTIONS__FIELD_NAME: Final[WrapperField] = WrapperField("MultiplexInstructions", FieldType.SELECTION, display_name="Multiplex Instructions")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.SELECTION, display_name="Row Position")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IndexId_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexId' on this record model
        """
        self.set_field_value(self.INDEXID__FIELD_NAME.field_name, value)

    def get_IndexId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexId' from this record model
        """
        return self.get_field_value(self.INDEXID__FIELD_NAME.field_name)

    def set_IndexTag_field(self, value: Optional[str]):
        """
        Set data field with field name 'IndexTag' on this record model
        """
        self.set_field_value(self.INDEXTAG__FIELD_NAME.field_name, value)

    def get_IndexTag_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IndexTag' from this record model
        """
        return self.get_field_value(self.INDEXTAG__FIELD_NAME.field_name)

    def set_InputAssignmentMultiRecordId_field(self, value: Optional[str]):
        """
        Set data field with field name 'InputAssignmentMultiRecordId' on this record model
        """
        self.set_field_value(self.INPUTASSIGNMENTMULTIRECORDID__FIELD_NAME.field_name, value)

    def get_InputAssignmentMultiRecordId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InputAssignmentMultiRecordId' from this record model
        """
        return self.get_field_value(self.INPUTASSIGNMENTMULTIRECORDID__FIELD_NAME.field_name)

    def set_InputAssignmentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'InputAssignmentRecordId' on this record model
        """
        self.set_field_value(self.INPUTASSIGNMENTRECORDID__FIELD_NAME.field_name, value)

    def get_InputAssignmentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'InputAssignmentRecordId' from this record model
        """
        return self.get_field_value(self.INPUTASSIGNMENTRECORDID__FIELD_NAME.field_name)

    def set_MultiplexInstructions_field(self, value: Optional[str]):
        """
        Set data field with field name 'MultiplexInstructions' on this record model
        """
        self.set_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name, value)

    def get_MultiplexInstructions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MultiplexInstructions' from this record model
        """
        return self.get_field_value(self.MULTIPLEXINSTRUCTIONS__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PlateWellMappingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type PlateWellMapping
    Data Type Display Name: Plate Well Mapping (Plate Well Mapping)
    Fields: SrcWellPosAliq1, SrcPlateIdAliq1, NewControl, Description, CreatedBy, TargetConcentration, TargetWellPosAliq1, DateCreated, TargetPlateIdAliq1, MultiParentLink135, SourceItemId, DataRecordName, ExemplarSampleType, TargetVol, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'PlateWellMapping'
    DISPLAY_NAME: Final[str] = "Plate Well Mapping"
    PLURAL_DISPLAY_NAME: Final[str] = "Plate Well Mapping"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    EXEMPLARSAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ExemplarSampleType", FieldType.SELECTION, display_name="Control Type")
    MULTIPARENTLINK135__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink135", FieldType.MULTIPARENTLINK, display_name="Related PlateMappingTemplateExps")
    NEWCONTROL__FIELD_NAME: Final[WrapperField] = WrapperField("NewControl", FieldType.BOOLEAN, display_name="New Control?")
    SOURCEITEMID__FIELD_NAME: Final[WrapperField] = WrapperField("SourceItemId", FieldType.STRING, display_name="Source Item ID")
    SRCPLATEIDALIQ1__FIELD_NAME: Final[WrapperField] = WrapperField("SrcPlateIdAliq1", FieldType.STRING, display_name="Source Plate ID")
    SRCWELLPOSALIQ1__FIELD_NAME: Final[WrapperField] = WrapperField("SrcWellPosAliq1", FieldType.STRING, display_name="Source Well Position")
    TARGETCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("TargetConcentration", FieldType.DOUBLE, display_name="Target Concentration")
    TARGETPLATEIDALIQ1__FIELD_NAME: Final[WrapperField] = WrapperField("TargetPlateIdAliq1", FieldType.STRING, display_name="Destination Container ID")
    TARGETVOL__FIELD_NAME: Final[WrapperField] = WrapperField("TargetVol", FieldType.DOUBLE, display_name="Target Volume")
    TARGETWELLPOSALIQ1__FIELD_NAME: Final[WrapperField] = WrapperField("TargetWellPosAliq1", FieldType.STRING, display_name="Destination Position")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_ExemplarSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleType' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_ExemplarSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleType' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name)

    def set_NewControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NewControl' on this record model
        """
        self.set_field_value(self.NEWCONTROL__FIELD_NAME.field_name, value)

    def get_NewControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NewControl' from this record model
        """
        return self.get_field_value(self.NEWCONTROL__FIELD_NAME.field_name)

    def set_SourceItemId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SourceItemId' on this record model
        """
        self.set_field_value(self.SOURCEITEMID__FIELD_NAME.field_name, value)

    def get_SourceItemId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SourceItemId' from this record model
        """
        return self.get_field_value(self.SOURCEITEMID__FIELD_NAME.field_name)

    def set_SrcPlateIdAliq1_field(self, value: Optional[str]):
        """
        Set data field with field name 'SrcPlateIdAliq1' on this record model
        """
        self.set_field_value(self.SRCPLATEIDALIQ1__FIELD_NAME.field_name, value)

    def get_SrcPlateIdAliq1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SrcPlateIdAliq1' from this record model
        """
        return self.get_field_value(self.SRCPLATEIDALIQ1__FIELD_NAME.field_name)

    def set_SrcWellPosAliq1_field(self, value: Optional[str]):
        """
        Set data field with field name 'SrcWellPosAliq1' on this record model
        """
        self.set_field_value(self.SRCWELLPOSALIQ1__FIELD_NAME.field_name, value)

    def get_SrcWellPosAliq1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SrcWellPosAliq1' from this record model
        """
        return self.get_field_value(self.SRCWELLPOSALIQ1__FIELD_NAME.field_name)

    def set_TargetConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetConcentration' on this record model
        """
        self.set_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name, value)

    def get_TargetConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetConcentration' from this record model
        """
        return self.get_field_value(self.TARGETCONCENTRATION__FIELD_NAME.field_name)

    def set_TargetPlateIdAliq1_field(self, value: Optional[str]):
        """
        Set data field with field name 'TargetPlateIdAliq1' on this record model
        """
        self.set_field_value(self.TARGETPLATEIDALIQ1__FIELD_NAME.field_name, value)

    def get_TargetPlateIdAliq1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TargetPlateIdAliq1' from this record model
        """
        return self.get_field_value(self.TARGETPLATEIDALIQ1__FIELD_NAME.field_name)

    def set_TargetVol_field(self, value: Optional[float]):
        """
        Set data field with field name 'TargetVol' on this record model
        """
        self.set_field_value(self.TARGETVOL__FIELD_NAME.field_name, value)

    def get_TargetVol_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TargetVol' from this record model
        """
        return self.get_field_value(self.TARGETVOL__FIELD_NAME.field_name)

    def set_TargetWellPosAliq1_field(self, value: Optional[str]):
        """
        Set data field with field name 'TargetWellPosAliq1' on this record model
        """
        self.set_field_value(self.TARGETWELLPOSALIQ1__FIELD_NAME.field_name, value)

    def get_TargetWellPosAliq1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TargetWellPosAliq1' from this record model
        """
        return self.get_field_value(self.TARGETWELLPOSALIQ1__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class PolynomialModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Polynomial
    Data Type Display Name: Polynomial (Polynomials)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, x, y, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'Polynomial'
    DISPLAY_NAME: Final[str] = "Polynomial"
    PLURAL_DISPLAY_NAME: Final[str] = "Polynomials"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    X__FIELD_NAME: Final[WrapperField] = WrapperField("x", FieldType.DOUBLE, display_name="x")
    Y__FIELD_NAME: Final[WrapperField] = WrapperField("y", FieldType.DOUBLE, display_name="y")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_x_field(self, value: Optional[float]):
        """
        Set data field with field name 'x' on this record model
        """
        self.set_field_value(self.X__FIELD_NAME.field_name, value)

    def get_x_field(self) -> Optional[float]:
        """
        Get data field value with field name 'x' from this record model
        """
        return self.get_field_value(self.X__FIELD_NAME.field_name)

    def set_y_field(self, value: Optional[float]):
        """
        Set data field with field name 'y' on this record model
        """
        self.set_field_value(self.Y__FIELD_NAME.field_name, value)

    def get_y_field(self) -> Optional[float]:
        """
        Get data field value with field name 'y' from this record model
        """
        return self.get_field_value(self.Y__FIELD_NAME.field_name)


class ProcessModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Process
    Data Type Display Name: Process (Processes)
    Fields: AssignedGroups, ProcessName, CreatedBy, IsActive, IsCustom, DateCreated, ProcessDescription, ProcessType, DataRecordName, DisplayName, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'Process'
    DISPLAY_NAME: Final[str] = "Process"
    PLURAL_DISPLAY_NAME: Final[str] = "Processes"
    ASSIGNEDGROUPS__FIELD_NAME: Final[WrapperField] = WrapperField("AssignedGroups", FieldType.SELECTION, display_name="Assigned Groups")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DISPLAYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DisplayName", FieldType.STRING, display_name="Display Name")
    ISACTIVE__FIELD_NAME: Final[WrapperField] = WrapperField("IsActive", FieldType.BOOLEAN, display_name="Is Active?")
    ISCUSTOM__FIELD_NAME: Final[WrapperField] = WrapperField("IsCustom", FieldType.BOOLEAN, display_name="Is Custom")
    PROCESSDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessDescription", FieldType.STRING, display_name="Process Description")
    PROCESSNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessName", FieldType.STRING, display_name="Process Name")
    PROCESSTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessType", FieldType.SELECTION, display_name="Process Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AssignedGroups_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedGroups' on this record model
        """
        self.set_field_value(self.ASSIGNEDGROUPS__FIELD_NAME.field_name, value)

    def get_AssignedGroups_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedGroups' from this record model
        """
        return self.get_field_value(self.ASSIGNEDGROUPS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DisplayName' on this record model
        """
        self.set_field_value(self.DISPLAYNAME__FIELD_NAME.field_name, value)

    def get_DisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DisplayName' from this record model
        """
        return self.get_field_value(self.DISPLAYNAME__FIELD_NAME.field_name)

    def set_IsActive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsActive' on this record model
        """
        self.set_field_value(self.ISACTIVE__FIELD_NAME.field_name, value)

    def get_IsActive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsActive' from this record model
        """
        return self.get_field_value(self.ISACTIVE__FIELD_NAME.field_name)

    def set_IsCustom_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsCustom' on this record model
        """
        self.set_field_value(self.ISCUSTOM__FIELD_NAME.field_name, value)

    def get_IsCustom_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsCustom' from this record model
        """
        return self.get_field_value(self.ISCUSTOM__FIELD_NAME.field_name)

    def set_ProcessDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessDescription' on this record model
        """
        self.set_field_value(self.PROCESSDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ProcessDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessDescription' from this record model
        """
        return self.get_field_value(self.PROCESSDESCRIPTION__FIELD_NAME.field_name)

    def set_ProcessName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessName' on this record model
        """
        self.set_field_value(self.PROCESSNAME__FIELD_NAME.field_name, value)

    def get_ProcessName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessName' from this record model
        """
        return self.get_field_value(self.PROCESSNAME__FIELD_NAME.field_name)

    def set_ProcessType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessType' on this record model
        """
        self.set_field_value(self.PROCESSTYPE__FIELD_NAME.field_name, value)

    def get_ProcessType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessType' from this record model
        """
        return self.get_field_value(self.PROCESSTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ProcessBranchConditionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProcessBranchCondition
    Data Type Display Name: Process Branch Condition (Process Branch Conditions)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, ConditionID, BranchConditionJSON
    Process Branch Condition for process manager pro.
    """
    DATA_TYPE_NAME: Final[str] = 'ProcessBranchCondition'
    DISPLAY_NAME: Final[str] = "Process Branch Condition"
    PLURAL_DISPLAY_NAME: Final[str] = "Process Branch Conditions"
    BRANCHCONDITIONJSON__FIELD_NAME: Final[WrapperField] = WrapperField("BranchConditionJSON", FieldType.STRING, display_name="Branch Condition JSON")
    CONDITIONID__FIELD_NAME: Final[WrapperField] = WrapperField("ConditionID", FieldType.LONG, display_name="Condition ID")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BranchConditionJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'BranchConditionJSON' on this record model
        """
        self.set_field_value(self.BRANCHCONDITIONJSON__FIELD_NAME.field_name, value)

    def get_BranchConditionJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BranchConditionJSON' from this record model
        """
        return self.get_field_value(self.BRANCHCONDITIONJSON__FIELD_NAME.field_name)

    def set_ConditionID_field(self, value: Optional[int]):
        """
        Set data field with field name 'ConditionID' on this record model
        """
        self.set_field_value(self.CONDITIONID__FIELD_NAME.field_name, value)

    def get_ConditionID_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ConditionID' from this record model
        """
        return self.get_field_value(self.CONDITIONID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ProcessConfigDisplayModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProcessConfigDisplay
    Data Type Display Name: Process Config Display (Process Config Displays)
    Fields: ProcessDescription, ProcessName, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, Imported, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'ProcessConfigDisplay'
    DISPLAY_NAME: Final[str] = "Process Config Display"
    PLURAL_DISPLAY_NAME: Final[str] = "Process Config Displays"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    IMPORTED__FIELD_NAME: Final[WrapperField] = WrapperField("Imported", FieldType.BOOLEAN, display_name="Imported?")
    PROCESSDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessDescription", FieldType.STRING, display_name="Description                                                                        ")
    PROCESSNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessName", FieldType.STRING, display_name="Process Name                                                   ")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Imported_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Imported' on this record model
        """
        self.set_field_value(self.IMPORTED__FIELD_NAME.field_name, value)

    def get_Imported_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Imported' from this record model
        """
        return self.get_field_value(self.IMPORTED__FIELD_NAME.field_name)

    def set_ProcessDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessDescription' on this record model
        """
        self.set_field_value(self.PROCESSDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ProcessDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessDescription' from this record model
        """
        return self.get_field_value(self.PROCESSDESCRIPTION__FIELD_NAME.field_name)

    def set_ProcessName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessName' on this record model
        """
        self.set_field_value(self.PROCESSNAME__FIELD_NAME.field_name, value)

    def get_ProcessName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessName' from this record model
        """
        return self.get_field_value(self.PROCESSNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ProcessQueueColumnModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProcessQueueColumn
    Data Type Display Name: Process Queue Column (Process Queue Columns)
    Fields: CreatedBy, FieldOrder, WorkflowName, DateCreated, DataFieldName, ColumnDataTypeName, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, QueueDataType
    """
    DATA_TYPE_NAME: Final[str] = 'ProcessQueueColumn'
    DISPLAY_NAME: Final[str] = "Process Queue Column"
    PLURAL_DISPLAY_NAME: Final[str] = "Process Queue Columns"
    COLUMNDATATYPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ColumnDataTypeName", FieldType.STRING, display_name="Column Data Type Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATAFIELDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataFieldName", FieldType.STRING, display_name="Data Field Name")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FIELDORDER__FIELD_NAME: Final[WrapperField] = WrapperField("FieldOrder", FieldType.SHORT, display_name="Field Order")
    QUEUEDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("QueueDataType", FieldType.STRING, display_name="Queue Data Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WORKFLOWNAME__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowName", FieldType.STRING, display_name="Workflow Name")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColumnDataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColumnDataTypeName' on this record model
        """
        self.set_field_value(self.COLUMNDATATYPENAME__FIELD_NAME.field_name, value)

    def get_ColumnDataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColumnDataTypeName' from this record model
        """
        return self.get_field_value(self.COLUMNDATATYPENAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataFieldName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataFieldName' on this record model
        """
        self.set_field_value(self.DATAFIELDNAME__FIELD_NAME.field_name, value)

    def get_DataFieldName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataFieldName' from this record model
        """
        return self.get_field_value(self.DATAFIELDNAME__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FieldOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'FieldOrder' on this record model
        """
        self.set_field_value(self.FIELDORDER__FIELD_NAME.field_name, value)

    def get_FieldOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FieldOrder' from this record model
        """
        return self.get_field_value(self.FIELDORDER__FIELD_NAME.field_name)

    def set_QueueDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'QueueDataType' on this record model
        """
        self.set_field_value(self.QUEUEDATATYPE__FIELD_NAME.field_name, value)

    def get_QueueDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QueueDataType' from this record model
        """
        return self.get_field_value(self.QUEUEDATATYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowName' on this record model
        """
        self.set_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_WorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowName' from this record model
        """
        return self.get_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name)


class ProcessQueueItemModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProcessQueueItem
    Data Type Display Name: Process Queue Item (Process Queue Items)
    Fields: CreatedBy, Experiment, DateCreated, ScheduledDate, AssignedTo, DataRecordId, ShowInQueue, DataRecordName, LaunchedDate, VeloxLastModifiedDate, VeloxLastModifiedBy, WorkflowHeaderName, DurationInQueue, DataTypeName, ProcessHeaderName
    """
    DATA_TYPE_NAME: Final[str] = 'ProcessQueueItem'
    DISPLAY_NAME: Final[str] = "Process Queue Item"
    PLURAL_DISPLAY_NAME: Final[str] = "Process Queue Items"
    ASSIGNEDTO__FIELD_NAME: Final[WrapperField] = WrapperField("AssignedTo", FieldType.SELECTION, display_name="Assigned To")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordId", FieldType.LONG, display_name="Data Record ID")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataTypeName", FieldType.STRING, display_name="Data Type Name")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DURATIONINQUEUE__FIELD_NAME: Final[WrapperField] = WrapperField("DurationInQueue", FieldType.LONG, display_name="Duration In Queue")
    EXPERIMENT__FIELD_NAME: Final[WrapperField] = WrapperField("Experiment", FieldType.SIDE_LINK, display_name="Experiment")
    LAUNCHEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("LaunchedDate", FieldType.DATE, display_name="Launched Date")
    PROCESSHEADERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessHeaderName", FieldType.STRING, display_name="Process Header Name")
    SCHEDULEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ScheduledDate", FieldType.DATE, display_name="Scheduled Date")
    SHOWINQUEUE__FIELD_NAME: Final[WrapperField] = WrapperField("ShowInQueue", FieldType.BOOLEAN, display_name="Show In Queue")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WORKFLOWHEADERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowHeaderName", FieldType.STRING, display_name="Workflow Header Name")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AssignedTo_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssignedTo' on this record model
        """
        self.set_field_value(self.ASSIGNEDTO__FIELD_NAME.field_name, value)

    def get_AssignedTo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssignedTo' from this record model
        """
        return self.get_field_value(self.ASSIGNEDTO__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'DataRecordId' on this record model
        """
        self.set_field_value(self.DATARECORDID__FIELD_NAME.field_name, value)

    def get_DataRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DataRecordId' from this record model
        """
        return self.get_field_value(self.DATARECORDID__FIELD_NAME.field_name)

    def set_DataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeName' on this record model
        """
        self.set_field_value(self.DATATYPENAME__FIELD_NAME.field_name, value)

    def get_DataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeName' from this record model
        """
        return self.get_field_value(self.DATATYPENAME__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DurationInQueue_field(self, value: Optional[int]):
        """
        Set data field with field name 'DurationInQueue' on this record model
        """
        self.set_field_value(self.DURATIONINQUEUE__FIELD_NAME.field_name, value)

    def get_DurationInQueue_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DurationInQueue' from this record model
        """
        return self.get_field_value(self.DURATIONINQUEUE__FIELD_NAME.field_name)

    def set_Experiment_field(self, value: Optional[int]):
        """
        Set data field with field name 'Experiment' on this record model
        """
        self.set_field_value(self.EXPERIMENT__FIELD_NAME.field_name, value)

    def get_Experiment_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Experiment' from this record model
        """
        return self.get_field_value(self.EXPERIMENT__FIELD_NAME.field_name)

    def set_LaunchedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'LaunchedDate' on this record model
        """
        self.set_field_value(self.LAUNCHEDDATE__FIELD_NAME.field_name, value)

    def get_LaunchedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LaunchedDate' from this record model
        """
        return self.get_field_value(self.LAUNCHEDDATE__FIELD_NAME.field_name)

    def set_ProcessHeaderName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessHeaderName' on this record model
        """
        self.set_field_value(self.PROCESSHEADERNAME__FIELD_NAME.field_name, value)

    def get_ProcessHeaderName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessHeaderName' from this record model
        """
        return self.get_field_value(self.PROCESSHEADERNAME__FIELD_NAME.field_name)

    def set_ScheduledDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ScheduledDate' on this record model
        """
        self.set_field_value(self.SCHEDULEDDATE__FIELD_NAME.field_name, value)

    def get_ScheduledDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ScheduledDate' from this record model
        """
        return self.get_field_value(self.SCHEDULEDDATE__FIELD_NAME.field_name)

    def set_ShowInQueue_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ShowInQueue' on this record model
        """
        self.set_field_value(self.SHOWINQUEUE__FIELD_NAME.field_name, value)

    def get_ShowInQueue_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ShowInQueue' from this record model
        """
        return self.get_field_value(self.SHOWINQUEUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowHeaderName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowHeaderName' on this record model
        """
        self.set_field_value(self.WORKFLOWHEADERNAME__FIELD_NAME.field_name, value)

    def get_WorkflowHeaderName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowHeaderName' from this record model
        """
        return self.get_field_value(self.WORKFLOWHEADERNAME__FIELD_NAME.field_name)


class ProcessWorkflowModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProcessWorkflow
    Data Type Display Name: Process Workflow (Process Workflows)
    Fields: WorkflowHistoricQueueTimeStd, ParentBranchLongId, ActionType, WorkflowHistoricTAT, IsCustom, WorkflowName, WorkflowExpectedTAT, WorkflowHistoricQueueTime, DateCreated, OutputSampleType, WorkflowExpectedTATMetric, WorkflowExpectedQTMetric, InputSampleType, WorkflowHistoricTATStd, WorkflowDescription, VeloxLastModifiedBy, WorkflowHistoricQTMetric, InputContainerType, DataTypeName, isFalseConditionBranch, IsELNTemplate, CompletionContribution, WorkflowDiffQueueTime, DequeueOnLaunch, CreatedBy, CustomDisplayName, BranchLongId, WorkflowHistoricTATMetric, ProcessStepNumber, WorkflowDiffTAT, ActionContext, ResultTypes, DataRecordName, VeloxLastModifiedDate, WorkflowExpectedQueueTime, IsPlatesOnly
    """
    DATA_TYPE_NAME: Final[str] = 'ProcessWorkflow'
    DISPLAY_NAME: Final[str] = "Process Workflow"
    PLURAL_DISPLAY_NAME: Final[str] = "Process Workflows"
    ACTIONCONTEXT__FIELD_NAME: Final[WrapperField] = WrapperField("ActionContext", FieldType.SELECTION, display_name="Action Context")
    ACTIONTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ActionType", FieldType.PICKLIST, display_name="Action Type")
    BRANCHLONGID__FIELD_NAME: Final[WrapperField] = WrapperField("BranchLongId", FieldType.LONG, display_name="Branch ID")
    COMPLETIONCONTRIBUTION__FIELD_NAME: Final[WrapperField] = WrapperField("CompletionContribution", FieldType.INTEGER, display_name="Completion Contribution Weight")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CUSTOMDISPLAYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("CustomDisplayName", FieldType.STRING, display_name="Custom Display Name")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataTypeName", FieldType.STRING, display_name="Data Type Name")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DEQUEUEONLAUNCH__FIELD_NAME: Final[WrapperField] = WrapperField("DequeueOnLaunch", FieldType.BOOLEAN, display_name="Dequeue On Launch?")
    INPUTCONTAINERTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("InputContainerType", FieldType.PICKLIST, display_name="Input Container Type")
    INPUTSAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("InputSampleType", FieldType.SELECTION, display_name="Input Sample Type")
    ISCUSTOM__FIELD_NAME: Final[WrapperField] = WrapperField("IsCustom", FieldType.BOOLEAN, display_name="Is Custom")
    ISELNTEMPLATE__FIELD_NAME: Final[WrapperField] = WrapperField("IsELNTemplate", FieldType.BOOLEAN, display_name="Is ELN Template")
    ISPLATESONLY__FIELD_NAME: Final[WrapperField] = WrapperField("IsPlatesOnly", FieldType.BOOLEAN, display_name="Accepts Plates Only?")
    OUTPUTSAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("OutputSampleType", FieldType.SELECTION, display_name="Output Sample Type")
    PARENTBRANCHLONGID__FIELD_NAME: Final[WrapperField] = WrapperField("ParentBranchLongId", FieldType.LONG, display_name="Parent Branch ID")
    PROCESSSTEPNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessStepNumber", FieldType.LONG, display_name="Process Step Number")
    RESULTTYPES__FIELD_NAME: Final[WrapperField] = WrapperField("ResultTypes", FieldType.SELECTION, display_name="Result Types")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WORKFLOWDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowDescription", FieldType.STRING, display_name="Workflow Description")
    WORKFLOWDIFFQUEUETIME__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowDiffQueueTime", FieldType.DOUBLE, display_name="Workflow Historic vs Expected Queue Time (Hours)")
    WORKFLOWDIFFTAT__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowDiffTAT", FieldType.DOUBLE, display_name="Workflow Historic vs Expected TAT (Hours)")
    WORKFLOWEXPECTEDQTMETRIC__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowExpectedQTMetric", FieldType.DOUBLE, display_name="Workflow Expected Queue Time (Hours)")
    WORKFLOWEXPECTEDQUEUETIME__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowExpectedQueueTime", FieldType.STRING, display_name="Workflow Expected Queue Time")
    WORKFLOWEXPECTEDTAT__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowExpectedTAT", FieldType.STRING, display_name="Workflow Expected TAT")
    WORKFLOWEXPECTEDTATMETRIC__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowExpectedTATMetric", FieldType.DOUBLE, display_name="Workflow Expected TAT (Hours)")
    WORKFLOWHISTORICQTMETRIC__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowHistoricQTMetric", FieldType.DOUBLE, display_name="Workflow Historic Average Queue Time (Hours)")
    WORKFLOWHISTORICQUEUETIME__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowHistoricQueueTime", FieldType.STRING, display_name="Workflow Historic Queue Time")
    WORKFLOWHISTORICQUEUETIMESTD__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowHistoricQueueTimeStd", FieldType.DOUBLE, display_name="Workflow Historic Standard Deviation Queue Time (Hours)")
    WORKFLOWHISTORICTAT__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowHistoricTAT", FieldType.STRING, display_name="Workflow Historic TAT")
    WORKFLOWHISTORICTATMETRIC__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowHistoricTATMetric", FieldType.DOUBLE, display_name="Workflow Historic Average TAT (Hours)")
    WORKFLOWHISTORICTATSTD__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowHistoricTATStd", FieldType.DOUBLE, display_name="Workflow Historic Standard Deviation TAT (Hours)")
    WORKFLOWNAME__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowName", FieldType.SELECTION, display_name="Workflow Name")
    ISFALSECONDITIONBRANCH__FIELD_NAME: Final[WrapperField] = WrapperField("isFalseConditionBranch", FieldType.BOOLEAN, display_name="Is False Condition Branch")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActionContext_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActionContext' on this record model
        """
        self.set_field_value(self.ACTIONCONTEXT__FIELD_NAME.field_name, value)

    def get_ActionContext_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActionContext' from this record model
        """
        return self.get_field_value(self.ACTIONCONTEXT__FIELD_NAME.field_name)

    def set_ActionType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActionType' on this record model
        """
        self.set_field_value(self.ACTIONTYPE__FIELD_NAME.field_name, value)

    def get_ActionType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActionType' from this record model
        """
        return self.get_field_value(self.ACTIONTYPE__FIELD_NAME.field_name)

    def set_BranchLongId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BranchLongId' on this record model
        """
        self.set_field_value(self.BRANCHLONGID__FIELD_NAME.field_name, value)

    def get_BranchLongId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BranchLongId' from this record model
        """
        return self.get_field_value(self.BRANCHLONGID__FIELD_NAME.field_name)

    def set_CompletionContribution_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletionContribution' on this record model
        """
        self.set_field_value(self.COMPLETIONCONTRIBUTION__FIELD_NAME.field_name, value)

    def get_CompletionContribution_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletionContribution' from this record model
        """
        return self.get_field_value(self.COMPLETIONCONTRIBUTION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CustomDisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'CustomDisplayName' on this record model
        """
        self.set_field_value(self.CUSTOMDISPLAYNAME__FIELD_NAME.field_name, value)

    def get_CustomDisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CustomDisplayName' from this record model
        """
        return self.get_field_value(self.CUSTOMDISPLAYNAME__FIELD_NAME.field_name)

    def set_DataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeName' on this record model
        """
        self.set_field_value(self.DATATYPENAME__FIELD_NAME.field_name, value)

    def get_DataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeName' from this record model
        """
        return self.get_field_value(self.DATATYPENAME__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DequeueOnLaunch_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DequeueOnLaunch' on this record model
        """
        self.set_field_value(self.DEQUEUEONLAUNCH__FIELD_NAME.field_name, value)

    def get_DequeueOnLaunch_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DequeueOnLaunch' from this record model
        """
        return self.get_field_value(self.DEQUEUEONLAUNCH__FIELD_NAME.field_name)

    def set_InputContainerType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InputContainerType' on this record model
        """
        self.set_field_value(self.INPUTCONTAINERTYPE__FIELD_NAME.field_name, value)

    def get_InputContainerType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InputContainerType' from this record model
        """
        return self.get_field_value(self.INPUTCONTAINERTYPE__FIELD_NAME.field_name)

    def set_InputSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'InputSampleType' on this record model
        """
        self.set_field_value(self.INPUTSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_InputSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InputSampleType' from this record model
        """
        return self.get_field_value(self.INPUTSAMPLETYPE__FIELD_NAME.field_name)

    def set_IsCustom_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsCustom' on this record model
        """
        self.set_field_value(self.ISCUSTOM__FIELD_NAME.field_name, value)

    def get_IsCustom_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsCustom' from this record model
        """
        return self.get_field_value(self.ISCUSTOM__FIELD_NAME.field_name)

    def set_IsELNTemplate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsELNTemplate' on this record model
        """
        self.set_field_value(self.ISELNTEMPLATE__FIELD_NAME.field_name, value)

    def get_IsELNTemplate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsELNTemplate' from this record model
        """
        return self.get_field_value(self.ISELNTEMPLATE__FIELD_NAME.field_name)

    def set_IsPlatesOnly_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPlatesOnly' on this record model
        """
        self.set_field_value(self.ISPLATESONLY__FIELD_NAME.field_name, value)

    def get_IsPlatesOnly_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPlatesOnly' from this record model
        """
        return self.get_field_value(self.ISPLATESONLY__FIELD_NAME.field_name)

    def set_OutputSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'OutputSampleType' on this record model
        """
        self.set_field_value(self.OUTPUTSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_OutputSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OutputSampleType' from this record model
        """
        return self.get_field_value(self.OUTPUTSAMPLETYPE__FIELD_NAME.field_name)

    def set_ParentBranchLongId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ParentBranchLongId' on this record model
        """
        self.set_field_value(self.PARENTBRANCHLONGID__FIELD_NAME.field_name, value)

    def get_ParentBranchLongId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ParentBranchLongId' from this record model
        """
        return self.get_field_value(self.PARENTBRANCHLONGID__FIELD_NAME.field_name)

    def set_ProcessStepNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProcessStepNumber' on this record model
        """
        self.set_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name, value)

    def get_ProcessStepNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProcessStepNumber' from this record model
        """
        return self.get_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name)

    def set_ResultTypes_field(self, value: Optional[str]):
        """
        Set data field with field name 'ResultTypes' on this record model
        """
        self.set_field_value(self.RESULTTYPES__FIELD_NAME.field_name, value)

    def get_ResultTypes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ResultTypes' from this record model
        """
        return self.get_field_value(self.RESULTTYPES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowDescription' on this record model
        """
        self.set_field_value(self.WORKFLOWDESCRIPTION__FIELD_NAME.field_name, value)

    def get_WorkflowDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowDescription' from this record model
        """
        return self.get_field_value(self.WORKFLOWDESCRIPTION__FIELD_NAME.field_name)

    def set_WorkflowDiffQueueTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowDiffQueueTime' on this record model
        """
        self.set_field_value(self.WORKFLOWDIFFQUEUETIME__FIELD_NAME.field_name, value)

    def get_WorkflowDiffQueueTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowDiffQueueTime' from this record model
        """
        return self.get_field_value(self.WORKFLOWDIFFQUEUETIME__FIELD_NAME.field_name)

    def set_WorkflowDiffTAT_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowDiffTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWDIFFTAT__FIELD_NAME.field_name, value)

    def get_WorkflowDiffTAT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowDiffTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWDIFFTAT__FIELD_NAME.field_name)

    def set_WorkflowExpectedQTMetric_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowExpectedQTMetric' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDQTMETRIC__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedQTMetric_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowExpectedQTMetric' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDQTMETRIC__FIELD_NAME.field_name)

    def set_WorkflowExpectedQueueTime_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowExpectedQueueTime' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDQUEUETIME__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedQueueTime_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowExpectedQueueTime' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDQUEUETIME__FIELD_NAME.field_name)

    def set_WorkflowExpectedTAT_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowExpectedTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDTAT__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedTAT_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowExpectedTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDTAT__FIELD_NAME.field_name)

    def set_WorkflowExpectedTATMetric_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowExpectedTATMetric' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDTATMETRIC__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedTATMetric_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowExpectedTATMetric' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDTATMETRIC__FIELD_NAME.field_name)

    def set_WorkflowHistoricQTMetric_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowHistoricQTMetric' on this record model
        """
        self.set_field_value(self.WORKFLOWHISTORICQTMETRIC__FIELD_NAME.field_name, value)

    def get_WorkflowHistoricQTMetric_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowHistoricQTMetric' from this record model
        """
        return self.get_field_value(self.WORKFLOWHISTORICQTMETRIC__FIELD_NAME.field_name)

    def set_WorkflowHistoricQueueTime_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowHistoricQueueTime' on this record model
        """
        self.set_field_value(self.WORKFLOWHISTORICQUEUETIME__FIELD_NAME.field_name, value)

    def get_WorkflowHistoricQueueTime_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowHistoricQueueTime' from this record model
        """
        return self.get_field_value(self.WORKFLOWHISTORICQUEUETIME__FIELD_NAME.field_name)

    def set_WorkflowHistoricQueueTimeStd_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowHistoricQueueTimeStd' on this record model
        """
        self.set_field_value(self.WORKFLOWHISTORICQUEUETIMESTD__FIELD_NAME.field_name, value)

    def get_WorkflowHistoricQueueTimeStd_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowHistoricQueueTimeStd' from this record model
        """
        return self.get_field_value(self.WORKFLOWHISTORICQUEUETIMESTD__FIELD_NAME.field_name)

    def set_WorkflowHistoricTAT_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowHistoricTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWHISTORICTAT__FIELD_NAME.field_name, value)

    def get_WorkflowHistoricTAT_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowHistoricTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWHISTORICTAT__FIELD_NAME.field_name)

    def set_WorkflowHistoricTATMetric_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowHistoricTATMetric' on this record model
        """
        self.set_field_value(self.WORKFLOWHISTORICTATMETRIC__FIELD_NAME.field_name, value)

    def get_WorkflowHistoricTATMetric_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowHistoricTATMetric' from this record model
        """
        return self.get_field_value(self.WORKFLOWHISTORICTATMETRIC__FIELD_NAME.field_name)

    def set_WorkflowHistoricTATStd_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowHistoricTATStd' on this record model
        """
        self.set_field_value(self.WORKFLOWHISTORICTATSTD__FIELD_NAME.field_name, value)

    def get_WorkflowHistoricTATStd_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowHistoricTATStd' from this record model
        """
        return self.get_field_value(self.WORKFLOWHISTORICTATSTD__FIELD_NAME.field_name)

    def set_WorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowName' on this record model
        """
        self.set_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_WorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowName' from this record model
        """
        return self.get_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name)

    def set_isFalseConditionBranch_field(self, value: Optional[bool]):
        """
        Set data field with field name 'isFalseConditionBranch' on this record model
        """
        self.set_field_value(self.ISFALSECONDITIONBRANCH__FIELD_NAME.field_name, value)

    def get_isFalseConditionBranch_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'isFalseConditionBranch' from this record model
        """
        return self.get_field_value(self.ISFALSECONDITIONBRANCH__FIELD_NAME.field_name)


class ProcessWorkflowTrackingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProcessWorkflowTracking
    Data Type Display Name: Process Workflow Tracking (Process Workflow Trackings)
    Fields: WorkflowStartUserId, SampleRecordId, StartHour, ProcessQueueItem, WorkflowName, WorkflowExpectedTAT, TurnAroundHours, QueuedHours, ExpectedQueueTime, WorkflowIdNumber, DateCreated, WorkflowTAT, WorkflowVersion, StartDate, QueueStartHour, ActiveWorkflowId, QueuedTime, EndHour, VeloxLastModifiedBy, QueuedMinutes, QueueStartDate, EndMinuteTime, Status, CreatedBy, BranchLongId, TurnAroundMinutes, ProcessStepNumber, WorkflowEndUserId, WorkflowProcessTAT, EndDate, WorkflowExpectedTotalTAT, StartMinuteTime, QueueStartMinuteTime, DataRecordName, VeloxLastModifiedDate, WorkflowExpectedQueueTime, ExpectedTAT
    Records to track time spent on process workflows
    """
    DATA_TYPE_NAME: Final[str] = 'ProcessWorkflowTracking'
    DISPLAY_NAME: Final[str] = "Process Workflow Tracking"
    PLURAL_DISPLAY_NAME: Final[str] = "Process Workflow Trackings"
    ACTIVEWORKFLOWID__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveWorkflowId", FieldType.LONG, display_name="Active Workflow ID")
    BRANCHLONGID__FIELD_NAME: Final[WrapperField] = WrapperField("BranchLongId", FieldType.LONG, display_name="Branch ID")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ENDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("EndDate", FieldType.DATE, display_name="End Date")
    ENDHOUR__FIELD_NAME: Final[WrapperField] = WrapperField("EndHour", FieldType.LONG, display_name="End Hour Time")
    ENDMINUTETIME__FIELD_NAME: Final[WrapperField] = WrapperField("EndMinuteTime", FieldType.LONG, display_name="End Minute Time")
    EXPECTEDQUEUETIME__FIELD_NAME: Final[WrapperField] = WrapperField("ExpectedQueueTime", FieldType.DOUBLE, display_name="Expected Queue Time")
    EXPECTEDTAT__FIELD_NAME: Final[WrapperField] = WrapperField("ExpectedTAT", FieldType.DOUBLE, display_name="Expected TAT")
    PROCESSQUEUEITEM__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessQueueItem", FieldType.SIDE_LINK, display_name="Process Queue Item")
    PROCESSSTEPNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessStepNumber", FieldType.LONG, display_name="Process Step Number")
    QUEUESTARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("QueueStartDate", FieldType.DATE, display_name="Queue Start Date")
    QUEUESTARTHOUR__FIELD_NAME: Final[WrapperField] = WrapperField("QueueStartHour", FieldType.LONG, display_name="Queue Start Hour")
    QUEUESTARTMINUTETIME__FIELD_NAME: Final[WrapperField] = WrapperField("QueueStartMinuteTime", FieldType.LONG, display_name="Queue Start Minute")
    QUEUEDHOURS__FIELD_NAME: Final[WrapperField] = WrapperField("QueuedHours", FieldType.LONG, display_name="In Queue Hours")
    QUEUEDMINUTES__FIELD_NAME: Final[WrapperField] = WrapperField("QueuedMinutes", FieldType.LONG, display_name="In Queue Minutes")
    QUEUEDTIME__FIELD_NAME: Final[WrapperField] = WrapperField("QueuedTime", FieldType.DOUBLE, display_name="In Queue Time")
    SAMPLERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleRecordId", FieldType.LONG, display_name="Sample Record ID")
    STARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("StartDate", FieldType.DATE, display_name="Start Date")
    STARTHOUR__FIELD_NAME: Final[WrapperField] = WrapperField("StartHour", FieldType.LONG, display_name="Start Hour Time")
    STARTMINUTETIME__FIELD_NAME: Final[WrapperField] = WrapperField("StartMinuteTime", FieldType.LONG, display_name="Start Minute Time")
    STATUS__FIELD_NAME: Final[WrapperField] = WrapperField("Status", FieldType.PICKLIST, display_name="Status")
    TURNAROUNDHOURS__FIELD_NAME: Final[WrapperField] = WrapperField("TurnAroundHours", FieldType.LONG, display_name="Turn Around Hours")
    TURNAROUNDMINUTES__FIELD_NAME: Final[WrapperField] = WrapperField("TurnAroundMinutes", FieldType.LONG, display_name="Turn Around Minutes")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WORKFLOWENDUSERID__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowEndUserId", FieldType.STRING, display_name="Workflow End User ID")
    WORKFLOWEXPECTEDQUEUETIME__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowExpectedQueueTime", FieldType.STRING, display_name="Workflow Expected Queue Time")
    WORKFLOWEXPECTEDTAT__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowExpectedTAT", FieldType.STRING, display_name="Workflow Expected TAT")
    WORKFLOWEXPECTEDTOTALTAT__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowExpectedTotalTAT", FieldType.DOUBLE, display_name="Expected Total TAT")
    WORKFLOWIDNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowIdNumber", FieldType.LONG, display_name="Workflow ID Number")
    WORKFLOWNAME__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowName", FieldType.STRING, display_name="Workflow Name")
    WORKFLOWPROCESSTAT__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowProcessTAT", FieldType.DOUBLE, display_name="Workflow Process TAT")
    WORKFLOWSTARTUSERID__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowStartUserId", FieldType.STRING, display_name="Workflow Start User ID")
    WORKFLOWTAT__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowTAT", FieldType.DOUBLE, display_name="Workflow Total TAT")
    WORKFLOWVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowVersion", FieldType.LONG, display_name="Workflow Version")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def set_BranchLongId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BranchLongId' on this record model
        """
        self.set_field_value(self.BRANCHLONGID__FIELD_NAME.field_name, value)

    def get_BranchLongId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BranchLongId' from this record model
        """
        return self.get_field_value(self.BRANCHLONGID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EndDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'EndDate' on this record model
        """
        self.set_field_value(self.ENDDATE__FIELD_NAME.field_name, value)

    def get_EndDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EndDate' from this record model
        """
        return self.get_field_value(self.ENDDATE__FIELD_NAME.field_name)

    def set_EndHour_field(self, value: Optional[int]):
        """
        Set data field with field name 'EndHour' on this record model
        """
        self.set_field_value(self.ENDHOUR__FIELD_NAME.field_name, value)

    def get_EndHour_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EndHour' from this record model
        """
        return self.get_field_value(self.ENDHOUR__FIELD_NAME.field_name)

    def set_EndMinuteTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'EndMinuteTime' on this record model
        """
        self.set_field_value(self.ENDMINUTETIME__FIELD_NAME.field_name, value)

    def get_EndMinuteTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EndMinuteTime' from this record model
        """
        return self.get_field_value(self.ENDMINUTETIME__FIELD_NAME.field_name)

    def set_ExpectedQueueTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExpectedQueueTime' on this record model
        """
        self.set_field_value(self.EXPECTEDQUEUETIME__FIELD_NAME.field_name, value)

    def get_ExpectedQueueTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExpectedQueueTime' from this record model
        """
        return self.get_field_value(self.EXPECTEDQUEUETIME__FIELD_NAME.field_name)

    def set_ExpectedTAT_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExpectedTAT' on this record model
        """
        self.set_field_value(self.EXPECTEDTAT__FIELD_NAME.field_name, value)

    def get_ExpectedTAT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExpectedTAT' from this record model
        """
        return self.get_field_value(self.EXPECTEDTAT__FIELD_NAME.field_name)

    def set_ProcessQueueItem_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProcessQueueItem' on this record model
        """
        self.set_field_value(self.PROCESSQUEUEITEM__FIELD_NAME.field_name, value)

    def get_ProcessQueueItem_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProcessQueueItem' from this record model
        """
        return self.get_field_value(self.PROCESSQUEUEITEM__FIELD_NAME.field_name)

    def set_ProcessStepNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProcessStepNumber' on this record model
        """
        self.set_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name, value)

    def get_ProcessStepNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProcessStepNumber' from this record model
        """
        return self.get_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name)

    def set_QueueStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'QueueStartDate' on this record model
        """
        self.set_field_value(self.QUEUESTARTDATE__FIELD_NAME.field_name, value)

    def get_QueueStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QueueStartDate' from this record model
        """
        return self.get_field_value(self.QUEUESTARTDATE__FIELD_NAME.field_name)

    def set_QueueStartHour_field(self, value: Optional[int]):
        """
        Set data field with field name 'QueueStartHour' on this record model
        """
        self.set_field_value(self.QUEUESTARTHOUR__FIELD_NAME.field_name, value)

    def get_QueueStartHour_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QueueStartHour' from this record model
        """
        return self.get_field_value(self.QUEUESTARTHOUR__FIELD_NAME.field_name)

    def set_QueueStartMinuteTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'QueueStartMinuteTime' on this record model
        """
        self.set_field_value(self.QUEUESTARTMINUTETIME__FIELD_NAME.field_name, value)

    def get_QueueStartMinuteTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QueueStartMinuteTime' from this record model
        """
        return self.get_field_value(self.QUEUESTARTMINUTETIME__FIELD_NAME.field_name)

    def set_QueuedHours_field(self, value: Optional[int]):
        """
        Set data field with field name 'QueuedHours' on this record model
        """
        self.set_field_value(self.QUEUEDHOURS__FIELD_NAME.field_name, value)

    def get_QueuedHours_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QueuedHours' from this record model
        """
        return self.get_field_value(self.QUEUEDHOURS__FIELD_NAME.field_name)

    def set_QueuedMinutes_field(self, value: Optional[int]):
        """
        Set data field with field name 'QueuedMinutes' on this record model
        """
        self.set_field_value(self.QUEUEDMINUTES__FIELD_NAME.field_name, value)

    def get_QueuedMinutes_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QueuedMinutes' from this record model
        """
        return self.get_field_value(self.QUEUEDMINUTES__FIELD_NAME.field_name)

    def set_QueuedTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'QueuedTime' on this record model
        """
        self.set_field_value(self.QUEUEDTIME__FIELD_NAME.field_name, value)

    def get_QueuedTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QueuedTime' from this record model
        """
        return self.get_field_value(self.QUEUEDTIME__FIELD_NAME.field_name)

    def set_SampleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleRecordId' on this record model
        """
        self.set_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_SampleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleRecordId' from this record model
        """
        return self.get_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name)

    def set_StartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartDate' on this record model
        """
        self.set_field_value(self.STARTDATE__FIELD_NAME.field_name, value)

    def get_StartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartDate' from this record model
        """
        return self.get_field_value(self.STARTDATE__FIELD_NAME.field_name)

    def set_StartHour_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartHour' on this record model
        """
        self.set_field_value(self.STARTHOUR__FIELD_NAME.field_name, value)

    def get_StartHour_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartHour' from this record model
        """
        return self.get_field_value(self.STARTHOUR__FIELD_NAME.field_name)

    def set_StartMinuteTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartMinuteTime' on this record model
        """
        self.set_field_value(self.STARTMINUTETIME__FIELD_NAME.field_name, value)

    def get_StartMinuteTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartMinuteTime' from this record model
        """
        return self.get_field_value(self.STARTMINUTETIME__FIELD_NAME.field_name)

    def set_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'Status' on this record model
        """
        self.set_field_value(self.STATUS__FIELD_NAME.field_name, value)

    def get_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Status' from this record model
        """
        return self.get_field_value(self.STATUS__FIELD_NAME.field_name)

    def set_TurnAroundHours_field(self, value: Optional[int]):
        """
        Set data field with field name 'TurnAroundHours' on this record model
        """
        self.set_field_value(self.TURNAROUNDHOURS__FIELD_NAME.field_name, value)

    def get_TurnAroundHours_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TurnAroundHours' from this record model
        """
        return self.get_field_value(self.TURNAROUNDHOURS__FIELD_NAME.field_name)

    def set_TurnAroundMinutes_field(self, value: Optional[int]):
        """
        Set data field with field name 'TurnAroundMinutes' on this record model
        """
        self.set_field_value(self.TURNAROUNDMINUTES__FIELD_NAME.field_name, value)

    def get_TurnAroundMinutes_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TurnAroundMinutes' from this record model
        """
        return self.get_field_value(self.TURNAROUNDMINUTES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowEndUserId_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowEndUserId' on this record model
        """
        self.set_field_value(self.WORKFLOWENDUSERID__FIELD_NAME.field_name, value)

    def get_WorkflowEndUserId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowEndUserId' from this record model
        """
        return self.get_field_value(self.WORKFLOWENDUSERID__FIELD_NAME.field_name)

    def set_WorkflowExpectedQueueTime_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowExpectedQueueTime' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDQUEUETIME__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedQueueTime_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowExpectedQueueTime' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDQUEUETIME__FIELD_NAME.field_name)

    def set_WorkflowExpectedTAT_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowExpectedTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDTAT__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedTAT_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowExpectedTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDTAT__FIELD_NAME.field_name)

    def set_WorkflowExpectedTotalTAT_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowExpectedTotalTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWEXPECTEDTOTALTAT__FIELD_NAME.field_name, value)

    def get_WorkflowExpectedTotalTAT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowExpectedTotalTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWEXPECTEDTOTALTAT__FIELD_NAME.field_name)

    def set_WorkflowIdNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'WorkflowIdNumber' on this record model
        """
        self.set_field_value(self.WORKFLOWIDNUMBER__FIELD_NAME.field_name, value)

    def get_WorkflowIdNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'WorkflowIdNumber' from this record model
        """
        return self.get_field_value(self.WORKFLOWIDNUMBER__FIELD_NAME.field_name)

    def set_WorkflowName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowName' on this record model
        """
        self.set_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name, value)

    def get_WorkflowName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowName' from this record model
        """
        return self.get_field_value(self.WORKFLOWNAME__FIELD_NAME.field_name)

    def set_WorkflowProcessTAT_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowProcessTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWPROCESSTAT__FIELD_NAME.field_name, value)

    def get_WorkflowProcessTAT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowProcessTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWPROCESSTAT__FIELD_NAME.field_name)

    def set_WorkflowStartUserId_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowStartUserId' on this record model
        """
        self.set_field_value(self.WORKFLOWSTARTUSERID__FIELD_NAME.field_name, value)

    def get_WorkflowStartUserId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowStartUserId' from this record model
        """
        return self.get_field_value(self.WORKFLOWSTARTUSERID__FIELD_NAME.field_name)

    def set_WorkflowTAT_field(self, value: Optional[float]):
        """
        Set data field with field name 'WorkflowTAT' on this record model
        """
        self.set_field_value(self.WORKFLOWTAT__FIELD_NAME.field_name, value)

    def get_WorkflowTAT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'WorkflowTAT' from this record model
        """
        return self.get_field_value(self.WORKFLOWTAT__FIELD_NAME.field_name)

    def set_WorkflowVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'WorkflowVersion' on this record model
        """
        self.set_field_value(self.WORKFLOWVERSION__FIELD_NAME.field_name, value)

    def get_WorkflowVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'WorkflowVersion' from this record model
        """
        return self.get_field_value(self.WORKFLOWVERSION__FIELD_NAME.field_name)


class ProjectModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Project
    Data Type Display Name: Project (Projects)
    Fields: SubjectIdPrefix, Leader, isClinical, DefaultReplicateQc, ProjectName, LeadEmail, DateCreated, VeloxApprover, StartDate, PrecisionOfConcentration, InheritRolesFromParent, StabilityExample1, VeloxLastModifiedBy, PrecisionOfCv, SDMSSubdirectory, Client, SmartsheetId, DefaultReplicateStd, CreatedBy, ProjectId, SubjectIdSequenceDigits, EndDate, DataRecordName, ProjectDesc, ProjectType, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: Final[str] = 'Project'
    DISPLAY_NAME: Final[str] = "Project"
    PLURAL_DISPLAY_NAME: Final[str] = "Projects"
    CLIENT__FIELD_NAME: Final[WrapperField] = WrapperField("Client", FieldType.STRING, display_name="Client")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DEFAULTREPLICATEQC__FIELD_NAME: Final[WrapperField] = WrapperField("DefaultReplicateQc", FieldType.INTEGER, display_name="Default # of QC Replicates")
    DEFAULTREPLICATESTD__FIELD_NAME: Final[WrapperField] = WrapperField("DefaultReplicateStd", FieldType.INTEGER, display_name="Default # of STD Replicates")
    ENDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("EndDate", FieldType.DATE, display_name="End Date")
    INHERITROLESFROMPARENT__FIELD_NAME: Final[WrapperField] = WrapperField("InheritRolesFromParent", FieldType.BOOLEAN, display_name="Inherit Roles From Parent")
    LEADEMAIL__FIELD_NAME: Final[WrapperField] = WrapperField("LeadEmail", FieldType.STRING, display_name="Lead Email")
    LEADER__FIELD_NAME: Final[WrapperField] = WrapperField("Leader", FieldType.SELECTION, display_name="Project Leader")
    PRECISIONOFCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("PrecisionOfConcentration", FieldType.INTEGER, display_name="Precision # of Concentration")
    PRECISIONOFCV__FIELD_NAME: Final[WrapperField] = WrapperField("PrecisionOfCv", FieldType.INTEGER, display_name="Precision # of % CV")
    PROJECTDESC__FIELD_NAME: Final[WrapperField] = WrapperField("ProjectDesc", FieldType.STRING, display_name="Project Description")
    PROJECTID__FIELD_NAME: Final[WrapperField] = WrapperField("ProjectId", FieldType.STRING, display_name="Project ID")
    PROJECTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ProjectName", FieldType.STRING, display_name="Project Name")
    PROJECTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ProjectType", FieldType.PICKLIST, display_name="Project Type")
    SDMSSUBDIRECTORY__FIELD_NAME: Final[WrapperField] = WrapperField("SDMSSubdirectory", FieldType.STRING, display_name="SDMS Folder")
    SMARTSHEETID__FIELD_NAME: Final[WrapperField] = WrapperField("SmartsheetId", FieldType.STRING, display_name="Smartsheet ID")
    STABILITYEXAMPLE1__FIELD_NAME: Final[WrapperField] = WrapperField("StabilityExample1", FieldType.STRING, display_name="Stability Example1")
    STARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("StartDate", FieldType.DATE, display_name="Start Date")
    SUBJECTIDPREFIX__FIELD_NAME: Final[WrapperField] = WrapperField("SubjectIdPrefix", FieldType.SELECTION, display_name="Study Subject ID Prefix")
    SUBJECTIDSEQUENCEDIGITS__FIELD_NAME: Final[WrapperField] = WrapperField("SubjectIdSequenceDigits", FieldType.INTEGER, display_name="Study Subject ID Seq Digits")
    VELOXAPPROVER__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxApprover", FieldType.SELECTION, display_name="Document Approver")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    ISCLINICAL__FIELD_NAME: Final[WrapperField] = WrapperField("isClinical", FieldType.BOOLEAN, display_name="Is Clinical")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Client_field(self, value: Optional[str]):
        """
        Set data field with field name 'Client' on this record model
        """
        self.set_field_value(self.CLIENT__FIELD_NAME.field_name, value)

    def get_Client_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Client' from this record model
        """
        return self.get_field_value(self.CLIENT__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DefaultReplicateQc_field(self, value: Optional[int]):
        """
        Set data field with field name 'DefaultReplicateQc' on this record model
        """
        self.set_field_value(self.DEFAULTREPLICATEQC__FIELD_NAME.field_name, value)

    def get_DefaultReplicateQc_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DefaultReplicateQc' from this record model
        """
        return self.get_field_value(self.DEFAULTREPLICATEQC__FIELD_NAME.field_name)

    def set_DefaultReplicateStd_field(self, value: Optional[int]):
        """
        Set data field with field name 'DefaultReplicateStd' on this record model
        """
        self.set_field_value(self.DEFAULTREPLICATESTD__FIELD_NAME.field_name, value)

    def get_DefaultReplicateStd_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DefaultReplicateStd' from this record model
        """
        return self.get_field_value(self.DEFAULTREPLICATESTD__FIELD_NAME.field_name)

    def set_EndDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'EndDate' on this record model
        """
        self.set_field_value(self.ENDDATE__FIELD_NAME.field_name, value)

    def get_EndDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EndDate' from this record model
        """
        return self.get_field_value(self.ENDDATE__FIELD_NAME.field_name)

    def set_InheritRolesFromParent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InheritRolesFromParent' on this record model
        """
        self.set_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name, value)

    def get_InheritRolesFromParent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InheritRolesFromParent' from this record model
        """
        return self.get_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name)

    def set_LeadEmail_field(self, value: Optional[str]):
        """
        Set data field with field name 'LeadEmail' on this record model
        """
        self.set_field_value(self.LEADEMAIL__FIELD_NAME.field_name, value)

    def get_LeadEmail_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LeadEmail' from this record model
        """
        return self.get_field_value(self.LEADEMAIL__FIELD_NAME.field_name)

    def set_Leader_field(self, value: Optional[str]):
        """
        Set data field with field name 'Leader' on this record model
        """
        self.set_field_value(self.LEADER__FIELD_NAME.field_name, value)

    def get_Leader_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Leader' from this record model
        """
        return self.get_field_value(self.LEADER__FIELD_NAME.field_name)

    def set_PrecisionOfConcentration_field(self, value: Optional[int]):
        """
        Set data field with field name 'PrecisionOfConcentration' on this record model
        """
        self.set_field_value(self.PRECISIONOFCONCENTRATION__FIELD_NAME.field_name, value)

    def get_PrecisionOfConcentration_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PrecisionOfConcentration' from this record model
        """
        return self.get_field_value(self.PRECISIONOFCONCENTRATION__FIELD_NAME.field_name)

    def set_PrecisionOfCv_field(self, value: Optional[int]):
        """
        Set data field with field name 'PrecisionOfCv' on this record model
        """
        self.set_field_value(self.PRECISIONOFCV__FIELD_NAME.field_name, value)

    def get_PrecisionOfCv_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PrecisionOfCv' from this record model
        """
        return self.get_field_value(self.PRECISIONOFCV__FIELD_NAME.field_name)

    def set_ProjectDesc_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProjectDesc' on this record model
        """
        self.set_field_value(self.PROJECTDESC__FIELD_NAME.field_name, value)

    def get_ProjectDesc_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProjectDesc' from this record model
        """
        return self.get_field_value(self.PROJECTDESC__FIELD_NAME.field_name)

    def set_ProjectId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProjectId' on this record model
        """
        self.set_field_value(self.PROJECTID__FIELD_NAME.field_name, value)

    def get_ProjectId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProjectId' from this record model
        """
        return self.get_field_value(self.PROJECTID__FIELD_NAME.field_name)

    def set_ProjectName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProjectName' on this record model
        """
        self.set_field_value(self.PROJECTNAME__FIELD_NAME.field_name, value)

    def get_ProjectName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProjectName' from this record model
        """
        return self.get_field_value(self.PROJECTNAME__FIELD_NAME.field_name)

    def set_ProjectType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProjectType' on this record model
        """
        self.set_field_value(self.PROJECTTYPE__FIELD_NAME.field_name, value)

    def get_ProjectType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProjectType' from this record model
        """
        return self.get_field_value(self.PROJECTTYPE__FIELD_NAME.field_name)

    def set_SDMSSubdirectory_field(self, value: Optional[str]):
        """
        Set data field with field name 'SDMSSubdirectory' on this record model
        """
        self.set_field_value(self.SDMSSUBDIRECTORY__FIELD_NAME.field_name, value)

    def get_SDMSSubdirectory_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SDMSSubdirectory' from this record model
        """
        return self.get_field_value(self.SDMSSUBDIRECTORY__FIELD_NAME.field_name)

    def set_SmartsheetId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SmartsheetId' on this record model
        """
        self.set_field_value(self.SMARTSHEETID__FIELD_NAME.field_name, value)

    def get_SmartsheetId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SmartsheetId' from this record model
        """
        return self.get_field_value(self.SMARTSHEETID__FIELD_NAME.field_name)

    def set_StabilityExample1_field(self, value: Optional[str]):
        """
        Set data field with field name 'StabilityExample1' on this record model
        """
        self.set_field_value(self.STABILITYEXAMPLE1__FIELD_NAME.field_name, value)

    def get_StabilityExample1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StabilityExample1' from this record model
        """
        return self.get_field_value(self.STABILITYEXAMPLE1__FIELD_NAME.field_name)

    def set_StartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartDate' on this record model
        """
        self.set_field_value(self.STARTDATE__FIELD_NAME.field_name, value)

    def get_StartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartDate' from this record model
        """
        return self.get_field_value(self.STARTDATE__FIELD_NAME.field_name)

    def set_SubjectIdPrefix_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectIdPrefix' on this record model
        """
        self.set_field_value(self.SUBJECTIDPREFIX__FIELD_NAME.field_name, value)

    def get_SubjectIdPrefix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectIdPrefix' from this record model
        """
        return self.get_field_value(self.SUBJECTIDPREFIX__FIELD_NAME.field_name)

    def set_SubjectIdSequenceDigits_field(self, value: Optional[int]):
        """
        Set data field with field name 'SubjectIdSequenceDigits' on this record model
        """
        self.set_field_value(self.SUBJECTIDSEQUENCEDIGITS__FIELD_NAME.field_name, value)

    def get_SubjectIdSequenceDigits_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SubjectIdSequenceDigits' from this record model
        """
        return self.get_field_value(self.SUBJECTIDSEQUENCEDIGITS__FIELD_NAME.field_name)

    def set_VeloxApprover_field(self, value: Optional[str]):
        """
        Set data field with field name 'VeloxApprover' on this record model
        """
        self.set_field_value(self.VELOXAPPROVER__FIELD_NAME.field_name, value)

    def get_VeloxApprover_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxApprover' from this record model
        """
        return self.get_field_value(self.VELOXAPPROVER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_isClinical_field(self, value: Optional[bool]):
        """
        Set data field with field name 'isClinical' on this record model
        """
        self.set_field_value(self.ISCLINICAL__FIELD_NAME.field_name, value)

    def get_isClinical_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'isClinical' from this record model
        """
        return self.get_field_value(self.ISCLINICAL__FIELD_NAME.field_name)


class ProteinModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Protein
    Data Type Display Name: Protein (Proteins)
    Fields: CreatedBy, PartNumber, ConsumableType, StructureName, DateCreated, Expired, DataRecordName, ExpirationDate, Barcode, VeloxLastModifiedDate, VeloxLastModifiedBy, ConsumableName, LotNumber
    """
    DATA_TYPE_NAME: Final[str] = 'Protein'
    DISPLAY_NAME: Final[str] = "Protein"
    PLURAL_DISPLAY_NAME: Final[str] = "Proteins"
    BARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("Barcode", FieldType.AUTO_ACCESSION, display_name="Barcode")
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Name")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.PICKLIST, display_name="Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    EXPIRED__FIELD_NAME: Final[WrapperField] = WrapperField("Expired", FieldType.BOOLEAN, display_name="Expired")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Registry ID")
    STRUCTURENAME__FIELD_NAME: Final[WrapperField] = WrapperField("StructureName", FieldType.STRING, display_name="Structure Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Barcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Barcode' on this record model
        """
        self.set_field_value(self.BARCODE__FIELD_NAME.field_name, value)

    def get_Barcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Barcode' from this record model
        """
        return self.get_field_value(self.BARCODE__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_Expired_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Expired' on this record model
        """
        self.set_field_value(self.EXPIRED__FIELD_NAME.field_name, value)

    def get_Expired_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Expired' from this record model
        """
        return self.get_field_value(self.EXPIRED__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_StructureName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StructureName' on this record model
        """
        self.set_field_value(self.STRUCTURENAME__FIELD_NAME.field_name, value)

    def get_StructureName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StructureName' from this record model
        """
        return self.get_field_value(self.STRUCTURENAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ProteinPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ProteinPart
    Data Type Display Name: Protein Part (Protein Parts)
    Fields: AbsorbanceReducedCys, PartNumber, ConsumableType, MultiParentLink152, DateCreated, MultiParentLink175, QuantityPerItem, ReorderLevelQuantity, VeloxLastModifiedBy, MolecularWeight, AutoTranslationNotes, GenbankAttachment, SourcePart, HELMHash, NumChains, HELM, SequenceLength, FilePath, ExtinctionCoefficient, VeloxCurrentVersion, CreatedBy, SequenceHash, EditLock, QuantityOnHand, Absorbance, ChemicalProperties, DataRecordName, ProteinSequence, ExtinctionCoeffReducedCys, IsoelectricPoint, VeloxLastModifiedDate, ConsumableName
    """
    DATA_TYPE_NAME: Final[str] = 'ProteinPart'
    DISPLAY_NAME: Final[str] = "Protein Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Protein Parts"
    ABSORBANCE__FIELD_NAME: Final[WrapperField] = WrapperField("Absorbance", FieldType.DOUBLE, display_name="Absorbance")
    ABSORBANCEREDUCEDCYS__FIELD_NAME: Final[WrapperField] = WrapperField("AbsorbanceReducedCys", FieldType.DOUBLE, display_name="Absorbance (Reduced Cys)")
    AUTOTRANSLATIONNOTES__FIELD_NAME: Final[WrapperField] = WrapperField("AutoTranslationNotes", FieldType.STRING, display_name="Auto Translation Notes")
    CHEMICALPROPERTIES__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalProperties", FieldType.SIDE_LINK, display_name="Chemical Properties")
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Name")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.PICKLIST, display_name="Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EDITLOCK__FIELD_NAME: Final[WrapperField] = WrapperField("EditLock", FieldType.BOOLEAN, display_name="Edit Lock")
    EXTINCTIONCOEFFREDUCEDCYS__FIELD_NAME: Final[WrapperField] = WrapperField("ExtinctionCoeffReducedCys", FieldType.DOUBLE, display_name="Extinction Coefficient (Reduced Cys)")
    EXTINCTIONCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("ExtinctionCoefficient", FieldType.DOUBLE, display_name="Extinction Coefficient")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    GENBANKATTACHMENT__FIELD_NAME: Final[WrapperField] = WrapperField("GenbankAttachment", FieldType.SIDE_LINK, display_name="Genbank Attachment")
    HELM__FIELD_NAME: Final[WrapperField] = WrapperField("HELM", FieldType.STRING, display_name="HELM")
    HELMHASH__FIELD_NAME: Final[WrapperField] = WrapperField("HELMHash", FieldType.STRING, display_name="HELM Hash")
    ISOELECTRICPOINT__FIELD_NAME: Final[WrapperField] = WrapperField("IsoelectricPoint", FieldType.DOUBLE, display_name="Isoelectric Point (pl)")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight (Da)")
    MULTIPARENTLINK152__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink152", FieldType.MULTIPARENTLINK, display_name="Linked RNA Part")
    MULTIPARENTLINK175__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink175", FieldType.MULTIPARENTLINK, display_name="Linked Projects")
    NUMCHAINS__FIELD_NAME: Final[WrapperField] = WrapperField("NumChains", FieldType.INTEGER, display_name="# Chains")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Registry ID")
    PROTEINSEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("ProteinSequence", FieldType.STRING, display_name="Protein Sequence")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    SEQUENCEHASH__FIELD_NAME: Final[WrapperField] = WrapperField("SequenceHash", FieldType.STRING, display_name="Sequence Hash")
    SEQUENCELENGTH__FIELD_NAME: Final[WrapperField] = WrapperField("SequenceLength", FieldType.INTEGER, display_name="Sequence Length")
    SOURCEPART__FIELD_NAME: Final[WrapperField] = WrapperField("SourcePart", FieldType.SIDE_LINK, display_name="Source Part")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Absorbance_field(self, value: Optional[float]):
        """
        Set data field with field name 'Absorbance' on this record model
        """
        self.set_field_value(self.ABSORBANCE__FIELD_NAME.field_name, value)

    def get_Absorbance_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Absorbance' from this record model
        """
        return self.get_field_value(self.ABSORBANCE__FIELD_NAME.field_name)

    def set_AbsorbanceReducedCys_field(self, value: Optional[float]):
        """
        Set data field with field name 'AbsorbanceReducedCys' on this record model
        """
        self.set_field_value(self.ABSORBANCEREDUCEDCYS__FIELD_NAME.field_name, value)

    def get_AbsorbanceReducedCys_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AbsorbanceReducedCys' from this record model
        """
        return self.get_field_value(self.ABSORBANCEREDUCEDCYS__FIELD_NAME.field_name)

    def set_AutoTranslationNotes_field(self, value: Optional[str]):
        """
        Set data field with field name 'AutoTranslationNotes' on this record model
        """
        self.set_field_value(self.AUTOTRANSLATIONNOTES__FIELD_NAME.field_name, value)

    def get_AutoTranslationNotes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AutoTranslationNotes' from this record model
        """
        return self.get_field_value(self.AUTOTRANSLATIONNOTES__FIELD_NAME.field_name)

    def set_ChemicalProperties_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalProperties' on this record model
        """
        self.set_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name, value)

    def get_ChemicalProperties_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalProperties' from this record model
        """
        return self.get_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExtinctionCoeffReducedCys_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExtinctionCoeffReducedCys' on this record model
        """
        self.set_field_value(self.EXTINCTIONCOEFFREDUCEDCYS__FIELD_NAME.field_name, value)

    def get_ExtinctionCoeffReducedCys_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExtinctionCoeffReducedCys' from this record model
        """
        return self.get_field_value(self.EXTINCTIONCOEFFREDUCEDCYS__FIELD_NAME.field_name)

    def set_ExtinctionCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExtinctionCoefficient' on this record model
        """
        self.set_field_value(self.EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_ExtinctionCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExtinctionCoefficient' from this record model
        """
        return self.get_field_value(self.EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_GenbankAttachment_field(self, value: Optional[int]):
        """
        Set data field with field name 'GenbankAttachment' on this record model
        """
        self.set_field_value(self.GENBANKATTACHMENT__FIELD_NAME.field_name, value)

    def get_GenbankAttachment_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GenbankAttachment' from this record model
        """
        return self.get_field_value(self.GENBANKATTACHMENT__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_HELMHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELMHash' on this record model
        """
        self.set_field_value(self.HELMHASH__FIELD_NAME.field_name, value)

    def get_HELMHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELMHash' from this record model
        """
        return self.get_field_value(self.HELMHASH__FIELD_NAME.field_name)

    def set_IsoelectricPoint_field(self, value: Optional[float]):
        """
        Set data field with field name 'IsoelectricPoint' on this record model
        """
        self.set_field_value(self.ISOELECTRICPOINT__FIELD_NAME.field_name, value)

    def get_IsoelectricPoint_field(self) -> Optional[float]:
        """
        Get data field value with field name 'IsoelectricPoint' from this record model
        """
        return self.get_field_value(self.ISOELECTRICPOINT__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_NumChains_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumChains' on this record model
        """
        self.set_field_value(self.NUMCHAINS__FIELD_NAME.field_name, value)

    def get_NumChains_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumChains' from this record model
        """
        return self.get_field_value(self.NUMCHAINS__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_ProteinSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProteinSequence' on this record model
        """
        self.set_field_value(self.PROTEINSEQUENCE__FIELD_NAME.field_name, value)

    def get_ProteinSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProteinSequence' from this record model
        """
        return self.get_field_value(self.PROTEINSEQUENCE__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_SequenceHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceHash' on this record model
        """
        self.set_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name, value)

    def get_SequenceHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceHash' from this record model
        """
        return self.get_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name)

    def set_SequenceLength_field(self, value: Optional[int]):
        """
        Set data field with field name 'SequenceLength' on this record model
        """
        self.set_field_value(self.SEQUENCELENGTH__FIELD_NAME.field_name, value)

    def get_SequenceLength_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SequenceLength' from this record model
        """
        return self.get_field_value(self.SEQUENCELENGTH__FIELD_NAME.field_name)

    def set_SourcePart_field(self, value: Optional[int]):
        """
        Set data field with field name 'SourcePart' on this record model
        """
        self.set_field_value(self.SOURCEPART__FIELD_NAME.field_name, value)

    def get_SourcePart_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SourcePart' from this record model
        """
        return self.get_field_value(self.SOURCEPART__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class QCConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type QCConfig
    Data Type Display Name: Workflow Specific QC Config (Workflow Specific QC Configs)
    Fields: CtSDMAX, DatumType, DilutionFactorMIN, A260280MAX, MapToConcentration, RequiresConcentration, A260MAX, FailedReprocess, QuantityMAX, A260MIN, QuantityMIN, MolarityMAX, PreferredExperiment, AvgSizeMAX, CtMeanMAX, DilutionFactorMAX, VolumeDeductedOnRun, MapToConcentrationUnits, CreatedBy, RequiresQC, A280MAX, CalculatedMolarityMIN, PeakValueMAX, CalculatedConcentrationMAX, QuantityMeanMAX, QuantitySDMAX, DataRecordName, CtSDMIN, CalculatedMolarityMAX, PeakValueMIN, QuantityMeanMIN, A280MIN, CalculatedConcentrationMIN, MolarityMIN, A260280MIN, ConcentrationMIN, QCConfigId, RequiredResultsPerSample, A260230MAX, DateCreated, RINMIN, AreaMAX, QuantitySDMIN, ConcentrationMAX, VeloxLastModifiedBy, AreaMIN, MultiParentLink207, CtMIN, CtMeanMIN, A260230MIN, CtMAX, VeloxLastModifiedDate, RINMAX, AvgSizeMIN
    """
    DATA_TYPE_NAME: Final[str] = 'QCConfig'
    DISPLAY_NAME: Final[str] = "Workflow Specific QC Config"
    PLURAL_DISPLAY_NAME: Final[str] = "Workflow Specific QC Configs"
    A260230MAX__FIELD_NAME: Final[WrapperField] = WrapperField("A260230MAX", FieldType.DOUBLE, display_name="Max A260/230")
    A260230MIN__FIELD_NAME: Final[WrapperField] = WrapperField("A260230MIN", FieldType.DOUBLE, display_name="Min A260/230")
    A260280MAX__FIELD_NAME: Final[WrapperField] = WrapperField("A260280MAX", FieldType.DOUBLE, display_name="Max A260/280")
    A260280MIN__FIELD_NAME: Final[WrapperField] = WrapperField("A260280MIN", FieldType.DOUBLE, display_name="Min A260/280")
    A260MAX__FIELD_NAME: Final[WrapperField] = WrapperField("A260MAX", FieldType.DOUBLE, display_name="Max A260")
    A260MIN__FIELD_NAME: Final[WrapperField] = WrapperField("A260MIN", FieldType.DOUBLE, display_name="Min A260")
    A280MAX__FIELD_NAME: Final[WrapperField] = WrapperField("A280MAX", FieldType.DOUBLE, display_name="Max A280")
    A280MIN__FIELD_NAME: Final[WrapperField] = WrapperField("A280MIN", FieldType.DOUBLE, display_name="Min A280")
    AREAMAX__FIELD_NAME: Final[WrapperField] = WrapperField("AreaMAX", FieldType.DOUBLE, display_name="Max Area")
    AREAMIN__FIELD_NAME: Final[WrapperField] = WrapperField("AreaMIN", FieldType.DOUBLE, display_name="Min Area")
    AVGSIZEMAX__FIELD_NAME: Final[WrapperField] = WrapperField("AvgSizeMAX", FieldType.DOUBLE, display_name="Max Average BP Size")
    AVGSIZEMIN__FIELD_NAME: Final[WrapperField] = WrapperField("AvgSizeMIN", FieldType.DOUBLE, display_name="Min Average BP Size")
    CALCULATEDCONCENTRATIONMAX__FIELD_NAME: Final[WrapperField] = WrapperField("CalculatedConcentrationMAX", FieldType.DOUBLE, display_name="Max Calculated Concentration")
    CALCULATEDCONCENTRATIONMIN__FIELD_NAME: Final[WrapperField] = WrapperField("CalculatedConcentrationMIN", FieldType.DOUBLE, display_name="Min Calculated Concentration")
    CALCULATEDMOLARITYMAX__FIELD_NAME: Final[WrapperField] = WrapperField("CalculatedMolarityMAX", FieldType.DOUBLE, display_name="Max Calculated Molarity")
    CALCULATEDMOLARITYMIN__FIELD_NAME: Final[WrapperField] = WrapperField("CalculatedMolarityMIN", FieldType.DOUBLE, display_name="Min Calculated Molarity")
    CONCENTRATIONMAX__FIELD_NAME: Final[WrapperField] = WrapperField("ConcentrationMAX", FieldType.DOUBLE, display_name="Max Concentration")
    CONCENTRATIONMIN__FIELD_NAME: Final[WrapperField] = WrapperField("ConcentrationMIN", FieldType.DOUBLE, display_name="Min Concentration")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CTMAX__FIELD_NAME: Final[WrapperField] = WrapperField("CtMAX", FieldType.DOUBLE, display_name="Max Ct")
    CTMIN__FIELD_NAME: Final[WrapperField] = WrapperField("CtMIN", FieldType.DOUBLE, display_name="Min Ct")
    CTMEANMAX__FIELD_NAME: Final[WrapperField] = WrapperField("CtMeanMAX", FieldType.DOUBLE, display_name="Max Ct Mean")
    CTMEANMIN__FIELD_NAME: Final[WrapperField] = WrapperField("CtMeanMIN", FieldType.DOUBLE, display_name="Min Ct Mean")
    CTSDMAX__FIELD_NAME: Final[WrapperField] = WrapperField("CtSDMAX", FieldType.DOUBLE, display_name="Max Ct SD")
    CTSDMIN__FIELD_NAME: Final[WrapperField] = WrapperField("CtSDMIN", FieldType.DOUBLE, display_name="Min Ct SD")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DATUMTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DatumType", FieldType.SELECTION, display_name="Datum Type")
    DILUTIONFACTORMAX__FIELD_NAME: Final[WrapperField] = WrapperField("DilutionFactorMAX", FieldType.DOUBLE, display_name="Max Dilution Factor")
    DILUTIONFACTORMIN__FIELD_NAME: Final[WrapperField] = WrapperField("DilutionFactorMIN", FieldType.DOUBLE, display_name="Min Dilution Factor")
    FAILEDREPROCESS__FIELD_NAME: Final[WrapperField] = WrapperField("FailedReprocess", FieldType.BOOLEAN, display_name="Default Failures to Reprocess")
    MAPTOCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("MapToConcentration", FieldType.SELECTION, display_name="Mapped Concentration Field")
    MAPTOCONCENTRATIONUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("MapToConcentrationUnits", FieldType.SELECTION, display_name="Mapped Concentration Units Field")
    MOLARITYMAX__FIELD_NAME: Final[WrapperField] = WrapperField("MolarityMAX", FieldType.DOUBLE, display_name="Max Molarity")
    MOLARITYMIN__FIELD_NAME: Final[WrapperField] = WrapperField("MolarityMIN", FieldType.DOUBLE, display_name="Min Molarity")
    MULTIPARENTLINK207__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink207", FieldType.MULTIPARENTLINK, display_name="Related ProcessWorkflows")
    PEAKVALUEMAX__FIELD_NAME: Final[WrapperField] = WrapperField("PeakValueMAX", FieldType.DOUBLE, display_name="Max Peak Value")
    PEAKVALUEMIN__FIELD_NAME: Final[WrapperField] = WrapperField("PeakValueMIN", FieldType.DOUBLE, display_name="Min Peak Value")
    PREFERREDEXPERIMENT__FIELD_NAME: Final[WrapperField] = WrapperField("PreferredExperiment", FieldType.BOOLEAN, display_name="Preferred Experiment")
    QCCONFIGID__FIELD_NAME: Final[WrapperField] = WrapperField("QCConfigId", FieldType.STRING, display_name="QC Config ID")
    QUANTITYMAX__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityMAX", FieldType.DOUBLE, display_name="Max Quantity")
    QUANTITYMIN__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityMIN", FieldType.DOUBLE, display_name="Min Quantity")
    QUANTITYMEANMAX__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityMeanMAX", FieldType.DOUBLE, display_name="Max Quantity Mean")
    QUANTITYMEANMIN__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityMeanMIN", FieldType.DOUBLE, display_name="Min Quantity Mean")
    QUANTITYSDMAX__FIELD_NAME: Final[WrapperField] = WrapperField("QuantitySDMAX", FieldType.DOUBLE, display_name="Max Quantity SD")
    QUANTITYSDMIN__FIELD_NAME: Final[WrapperField] = WrapperField("QuantitySDMIN", FieldType.DOUBLE, display_name="Min Quantity SD")
    RINMAX__FIELD_NAME: Final[WrapperField] = WrapperField("RINMAX", FieldType.DOUBLE, display_name="Min RIN")
    RINMIN__FIELD_NAME: Final[WrapperField] = WrapperField("RINMIN", FieldType.DOUBLE, display_name="Max RIN")
    REQUIREDRESULTSPERSAMPLE__FIELD_NAME: Final[WrapperField] = WrapperField("RequiredResultsPerSample", FieldType.INTEGER, display_name="Required Results Per Sample")
    REQUIRESCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("RequiresConcentration", FieldType.BOOLEAN, display_name="Mapped Datum Requires Concentration")
    REQUIRESQC__FIELD_NAME: Final[WrapperField] = WrapperField("RequiresQC", FieldType.BOOLEAN, display_name="Samples Require Quality Control")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VOLUMEDEDUCTEDONRUN__FIELD_NAME: Final[WrapperField] = WrapperField("VolumeDeductedOnRun", FieldType.DOUBLE, display_name="Volume Deducted On Run")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A260230MAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260230MAX' on this record model
        """
        self.set_field_value(self.A260230MAX__FIELD_NAME.field_name, value)

    def get_A260230MAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260230MAX' from this record model
        """
        return self.get_field_value(self.A260230MAX__FIELD_NAME.field_name)

    def set_A260230MIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260230MIN' on this record model
        """
        self.set_field_value(self.A260230MIN__FIELD_NAME.field_name, value)

    def get_A260230MIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260230MIN' from this record model
        """
        return self.get_field_value(self.A260230MIN__FIELD_NAME.field_name)

    def set_A260280MAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260280MAX' on this record model
        """
        self.set_field_value(self.A260280MAX__FIELD_NAME.field_name, value)

    def get_A260280MAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260280MAX' from this record model
        """
        return self.get_field_value(self.A260280MAX__FIELD_NAME.field_name)

    def set_A260280MIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260280MIN' on this record model
        """
        self.set_field_value(self.A260280MIN__FIELD_NAME.field_name, value)

    def get_A260280MIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260280MIN' from this record model
        """
        return self.get_field_value(self.A260280MIN__FIELD_NAME.field_name)

    def set_A260MAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260MAX' on this record model
        """
        self.set_field_value(self.A260MAX__FIELD_NAME.field_name, value)

    def get_A260MAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260MAX' from this record model
        """
        return self.get_field_value(self.A260MAX__FIELD_NAME.field_name)

    def set_A260MIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260MIN' on this record model
        """
        self.set_field_value(self.A260MIN__FIELD_NAME.field_name, value)

    def get_A260MIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260MIN' from this record model
        """
        return self.get_field_value(self.A260MIN__FIELD_NAME.field_name)

    def set_A280MAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'A280MAX' on this record model
        """
        self.set_field_value(self.A280MAX__FIELD_NAME.field_name, value)

    def get_A280MAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A280MAX' from this record model
        """
        return self.get_field_value(self.A280MAX__FIELD_NAME.field_name)

    def set_A280MIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'A280MIN' on this record model
        """
        self.set_field_value(self.A280MIN__FIELD_NAME.field_name, value)

    def get_A280MIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A280MIN' from this record model
        """
        return self.get_field_value(self.A280MIN__FIELD_NAME.field_name)

    def set_AreaMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'AreaMAX' on this record model
        """
        self.set_field_value(self.AREAMAX__FIELD_NAME.field_name, value)

    def get_AreaMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AreaMAX' from this record model
        """
        return self.get_field_value(self.AREAMAX__FIELD_NAME.field_name)

    def set_AreaMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'AreaMIN' on this record model
        """
        self.set_field_value(self.AREAMIN__FIELD_NAME.field_name, value)

    def get_AreaMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AreaMIN' from this record model
        """
        return self.get_field_value(self.AREAMIN__FIELD_NAME.field_name)

    def set_AvgSizeMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgSizeMAX' on this record model
        """
        self.set_field_value(self.AVGSIZEMAX__FIELD_NAME.field_name, value)

    def get_AvgSizeMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgSizeMAX' from this record model
        """
        return self.get_field_value(self.AVGSIZEMAX__FIELD_NAME.field_name)

    def set_AvgSizeMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgSizeMIN' on this record model
        """
        self.set_field_value(self.AVGSIZEMIN__FIELD_NAME.field_name, value)

    def get_AvgSizeMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgSizeMIN' from this record model
        """
        return self.get_field_value(self.AVGSIZEMIN__FIELD_NAME.field_name)

    def set_CalculatedConcentrationMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedConcentrationMAX' on this record model
        """
        self.set_field_value(self.CALCULATEDCONCENTRATIONMAX__FIELD_NAME.field_name, value)

    def get_CalculatedConcentrationMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedConcentrationMAX' from this record model
        """
        return self.get_field_value(self.CALCULATEDCONCENTRATIONMAX__FIELD_NAME.field_name)

    def set_CalculatedConcentrationMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedConcentrationMIN' on this record model
        """
        self.set_field_value(self.CALCULATEDCONCENTRATIONMIN__FIELD_NAME.field_name, value)

    def get_CalculatedConcentrationMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedConcentrationMIN' from this record model
        """
        return self.get_field_value(self.CALCULATEDCONCENTRATIONMIN__FIELD_NAME.field_name)

    def set_CalculatedMolarityMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedMolarityMAX' on this record model
        """
        self.set_field_value(self.CALCULATEDMOLARITYMAX__FIELD_NAME.field_name, value)

    def get_CalculatedMolarityMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedMolarityMAX' from this record model
        """
        return self.get_field_value(self.CALCULATEDMOLARITYMAX__FIELD_NAME.field_name)

    def set_CalculatedMolarityMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedMolarityMIN' on this record model
        """
        self.set_field_value(self.CALCULATEDMOLARITYMIN__FIELD_NAME.field_name, value)

    def get_CalculatedMolarityMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedMolarityMIN' from this record model
        """
        return self.get_field_value(self.CALCULATEDMOLARITYMIN__FIELD_NAME.field_name)

    def set_ConcentrationMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'ConcentrationMAX' on this record model
        """
        self.set_field_value(self.CONCENTRATIONMAX__FIELD_NAME.field_name, value)

    def get_ConcentrationMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ConcentrationMAX' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONMAX__FIELD_NAME.field_name)

    def set_ConcentrationMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'ConcentrationMIN' on this record model
        """
        self.set_field_value(self.CONCENTRATIONMIN__FIELD_NAME.field_name, value)

    def get_ConcentrationMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ConcentrationMIN' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONMIN__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CtMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtMAX' on this record model
        """
        self.set_field_value(self.CTMAX__FIELD_NAME.field_name, value)

    def get_CtMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtMAX' from this record model
        """
        return self.get_field_value(self.CTMAX__FIELD_NAME.field_name)

    def set_CtMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtMIN' on this record model
        """
        self.set_field_value(self.CTMIN__FIELD_NAME.field_name, value)

    def get_CtMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtMIN' from this record model
        """
        return self.get_field_value(self.CTMIN__FIELD_NAME.field_name)

    def set_CtMeanMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtMeanMAX' on this record model
        """
        self.set_field_value(self.CTMEANMAX__FIELD_NAME.field_name, value)

    def get_CtMeanMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtMeanMAX' from this record model
        """
        return self.get_field_value(self.CTMEANMAX__FIELD_NAME.field_name)

    def set_CtMeanMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtMeanMIN' on this record model
        """
        self.set_field_value(self.CTMEANMIN__FIELD_NAME.field_name, value)

    def get_CtMeanMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtMeanMIN' from this record model
        """
        return self.get_field_value(self.CTMEANMIN__FIELD_NAME.field_name)

    def set_CtSDMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtSDMAX' on this record model
        """
        self.set_field_value(self.CTSDMAX__FIELD_NAME.field_name, value)

    def get_CtSDMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtSDMAX' from this record model
        """
        return self.get_field_value(self.CTSDMAX__FIELD_NAME.field_name)

    def set_CtSDMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtSDMIN' on this record model
        """
        self.set_field_value(self.CTSDMIN__FIELD_NAME.field_name, value)

    def get_CtSDMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtSDMIN' from this record model
        """
        return self.get_field_value(self.CTSDMIN__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DatumType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DatumType' on this record model
        """
        self.set_field_value(self.DATUMTYPE__FIELD_NAME.field_name, value)

    def get_DatumType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DatumType' from this record model
        """
        return self.get_field_value(self.DATUMTYPE__FIELD_NAME.field_name)

    def set_DilutionFactorMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutionFactorMAX' on this record model
        """
        self.set_field_value(self.DILUTIONFACTORMAX__FIELD_NAME.field_name, value)

    def get_DilutionFactorMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutionFactorMAX' from this record model
        """
        return self.get_field_value(self.DILUTIONFACTORMAX__FIELD_NAME.field_name)

    def set_DilutionFactorMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutionFactorMIN' on this record model
        """
        self.set_field_value(self.DILUTIONFACTORMIN__FIELD_NAME.field_name, value)

    def get_DilutionFactorMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutionFactorMIN' from this record model
        """
        return self.get_field_value(self.DILUTIONFACTORMIN__FIELD_NAME.field_name)

    def set_FailedReprocess_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FailedReprocess' on this record model
        """
        self.set_field_value(self.FAILEDREPROCESS__FIELD_NAME.field_name, value)

    def get_FailedReprocess_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FailedReprocess' from this record model
        """
        return self.get_field_value(self.FAILEDREPROCESS__FIELD_NAME.field_name)

    def set_MapToConcentration_field(self, value: Optional[str]):
        """
        Set data field with field name 'MapToConcentration' on this record model
        """
        self.set_field_value(self.MAPTOCONCENTRATION__FIELD_NAME.field_name, value)

    def get_MapToConcentration_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MapToConcentration' from this record model
        """
        return self.get_field_value(self.MAPTOCONCENTRATION__FIELD_NAME.field_name)

    def set_MapToConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'MapToConcentrationUnits' on this record model
        """
        self.set_field_value(self.MAPTOCONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_MapToConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MapToConcentrationUnits' from this record model
        """
        return self.get_field_value(self.MAPTOCONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_MolarityMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolarityMAX' on this record model
        """
        self.set_field_value(self.MOLARITYMAX__FIELD_NAME.field_name, value)

    def get_MolarityMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolarityMAX' from this record model
        """
        return self.get_field_value(self.MOLARITYMAX__FIELD_NAME.field_name)

    def set_MolarityMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolarityMIN' on this record model
        """
        self.set_field_value(self.MOLARITYMIN__FIELD_NAME.field_name, value)

    def get_MolarityMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolarityMIN' from this record model
        """
        return self.get_field_value(self.MOLARITYMIN__FIELD_NAME.field_name)

    def set_PeakValueMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'PeakValueMAX' on this record model
        """
        self.set_field_value(self.PEAKVALUEMAX__FIELD_NAME.field_name, value)

    def get_PeakValueMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PeakValueMAX' from this record model
        """
        return self.get_field_value(self.PEAKVALUEMAX__FIELD_NAME.field_name)

    def set_PeakValueMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'PeakValueMIN' on this record model
        """
        self.set_field_value(self.PEAKVALUEMIN__FIELD_NAME.field_name, value)

    def get_PeakValueMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PeakValueMIN' from this record model
        """
        return self.get_field_value(self.PEAKVALUEMIN__FIELD_NAME.field_name)

    def set_PreferredExperiment_field(self, value: Optional[bool]):
        """
        Set data field with field name 'PreferredExperiment' on this record model
        """
        self.set_field_value(self.PREFERREDEXPERIMENT__FIELD_NAME.field_name, value)

    def get_PreferredExperiment_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'PreferredExperiment' from this record model
        """
        return self.get_field_value(self.PREFERREDEXPERIMENT__FIELD_NAME.field_name)

    def set_QCConfigId_field(self, value: Optional[str]):
        """
        Set data field with field name 'QCConfigId' on this record model
        """
        self.set_field_value(self.QCCONFIGID__FIELD_NAME.field_name, value)

    def get_QCConfigId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QCConfigId' from this record model
        """
        return self.get_field_value(self.QCCONFIGID__FIELD_NAME.field_name)

    def set_QuantityMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityMAX' on this record model
        """
        self.set_field_value(self.QUANTITYMAX__FIELD_NAME.field_name, value)

    def get_QuantityMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityMAX' from this record model
        """
        return self.get_field_value(self.QUANTITYMAX__FIELD_NAME.field_name)

    def set_QuantityMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityMIN' on this record model
        """
        self.set_field_value(self.QUANTITYMIN__FIELD_NAME.field_name, value)

    def get_QuantityMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityMIN' from this record model
        """
        return self.get_field_value(self.QUANTITYMIN__FIELD_NAME.field_name)

    def set_QuantityMeanMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityMeanMAX' on this record model
        """
        self.set_field_value(self.QUANTITYMEANMAX__FIELD_NAME.field_name, value)

    def get_QuantityMeanMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityMeanMAX' from this record model
        """
        return self.get_field_value(self.QUANTITYMEANMAX__FIELD_NAME.field_name)

    def set_QuantityMeanMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityMeanMIN' on this record model
        """
        self.set_field_value(self.QUANTITYMEANMIN__FIELD_NAME.field_name, value)

    def get_QuantityMeanMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityMeanMIN' from this record model
        """
        return self.get_field_value(self.QUANTITYMEANMIN__FIELD_NAME.field_name)

    def set_QuantitySDMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantitySDMAX' on this record model
        """
        self.set_field_value(self.QUANTITYSDMAX__FIELD_NAME.field_name, value)

    def get_QuantitySDMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantitySDMAX' from this record model
        """
        return self.get_field_value(self.QUANTITYSDMAX__FIELD_NAME.field_name)

    def set_QuantitySDMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantitySDMIN' on this record model
        """
        self.set_field_value(self.QUANTITYSDMIN__FIELD_NAME.field_name, value)

    def get_QuantitySDMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantitySDMIN' from this record model
        """
        return self.get_field_value(self.QUANTITYSDMIN__FIELD_NAME.field_name)

    def set_RINMAX_field(self, value: Optional[float]):
        """
        Set data field with field name 'RINMAX' on this record model
        """
        self.set_field_value(self.RINMAX__FIELD_NAME.field_name, value)

    def get_RINMAX_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RINMAX' from this record model
        """
        return self.get_field_value(self.RINMAX__FIELD_NAME.field_name)

    def set_RINMIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'RINMIN' on this record model
        """
        self.set_field_value(self.RINMIN__FIELD_NAME.field_name, value)

    def get_RINMIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RINMIN' from this record model
        """
        return self.get_field_value(self.RINMIN__FIELD_NAME.field_name)

    def set_RequiredResultsPerSample_field(self, value: Optional[int]):
        """
        Set data field with field name 'RequiredResultsPerSample' on this record model
        """
        self.set_field_value(self.REQUIREDRESULTSPERSAMPLE__FIELD_NAME.field_name, value)

    def get_RequiredResultsPerSample_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RequiredResultsPerSample' from this record model
        """
        return self.get_field_value(self.REQUIREDRESULTSPERSAMPLE__FIELD_NAME.field_name)

    def set_RequiresConcentration_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequiresConcentration' on this record model
        """
        self.set_field_value(self.REQUIRESCONCENTRATION__FIELD_NAME.field_name, value)

    def get_RequiresConcentration_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequiresConcentration' from this record model
        """
        return self.get_field_value(self.REQUIRESCONCENTRATION__FIELD_NAME.field_name)

    def set_RequiresQC_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequiresQC' on this record model
        """
        self.set_field_value(self.REQUIRESQC__FIELD_NAME.field_name, value)

    def get_RequiresQC_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequiresQC' from this record model
        """
        return self.get_field_value(self.REQUIRESQC__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_VolumeDeductedOnRun_field(self, value: Optional[float]):
        """
        Set data field with field name 'VolumeDeductedOnRun' on this record model
        """
        self.set_field_value(self.VOLUMEDEDUCTEDONRUN__FIELD_NAME.field_name, value)

    def get_VolumeDeductedOnRun_field(self) -> Optional[float]:
        """
        Get data field value with field name 'VolumeDeductedOnRun' from this record model
        """
        return self.get_field_value(self.VOLUMEDEDUCTEDONRUN__FIELD_NAME.field_name)


class QCDatumModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type QCDatum
    Data Type Display Name: Instrument Datum (Instrument Data)
    Fields: MsdResult.Assay, TargetName, FermentationResult.RecordId, TapeStationResult.VeloxLastModifiedDate, OverrideUser, LCMSResult.Height, FromTime, NanodropResult.RecordId, StartingQuantitySQ, BioSpecResult.RecordId, NanodropResult.A260230, MsdResult.AlgorithmParameterWeighting, GrossWeight, ViCellResult.ViableCellsMl, ViCellResult.DateCreated, ViCellAvgCellsImg, DropSenseA280Result.DataRecordName, InhibitionCalc.VeloxLastModifiedBy, MsdResult.AlgorithmParamCalcYInt, PeakValue, ViiA7Result.RelatedParentRecordId, BioRadResult.Content, SCIEXResult.DateCreated, RawDataValue, FragmentAnalyzerResult.DateCreated, RowPosition, DropSenseA280Result.DateCreated, MsdResult.AlgorithmParamCalcBottom, ViCellAvgCirc, BioSpecResult.DataRecordName, BioAnalyzerResult.Area, MsdResult.RelatedRecord157, TapeStationResult.Area, FragmentAnalyzerResult.AvgBPSize, ViCellImgs, TapeStationResult.DataRecordName, BioRadResult.CqMean, ViCellResult.TotalCells, AvgSize, nCounterResult.RecordId, CV, ViCellMaxDiam, AverageConcentration, ViCellTotalCells, QuantStudioGenotypingDatum.VeloxLastModifiedDate, ViiA7Result.Quantity, ABI2700Result.VeloxLastModifiedBy, LCMSResult.FileType, DatumType, LCMSResult.Area, ViCellViability, DropSenseA260Result.VeloxLastModifiedBy, DropSenseA280Result.RelatedRecord157, Cq, MsdResult.Spot, DropSenseA260Result.CreatedBy, NanodropResult.RelatedRecord157, Ct, ViCellResult.Viability, MsdResult.SignalValue, FragmentAnalyzerResult.DataRecordName, Color, ViCellResult.MaxDiam, DropSenseA280Result.VeloxLastModifiedBy, QuantStudioGenotypingDatum.DataRecordName, OverrideExplanation, TableEntryName, QuantStudioGenotypingDatum.GeneCall, Area, NanodropResult.VeloxLastModifiedDate, TapeStationResult.DateCreated, DateCreated, MsdResult.AlgorithmParamCalcHillSlope, SCIEXResult.AnalytePeakName, Attachments, QuantStudioGenotypingDatum.VeloxLastModifiedBy, CalculatedConcentration, BioRadResult.RelatedRecord157, InhibitionCalc.DataRecordName, SCIEXResult.CreatedBy, BioAnalyzerResult.VeloxLastModifiedBy, FragmentAnalyzerResult.MolarityUnits, SiriusWeigherResult.CreatedBy, ViiA7Result.DateCreated, AlignedMigrationTime, LCMSResult.RelatedParentRecordId, ViiA7Result.CtMean, ViCellResult.AvgCirc, CqStdDev, IonMode, FracRetentionTime, BaselineStart, LCMSResult.DataRecordName, RIN, VeloxLastModifiedDate, BioRadResult.Target, FragmentAnalyzerResult.VeloxLastModifiedDate, MsdResult.CV, DropSenseA260Result.DilutionFactor, QuantStudioGenotypingDatum.NCBISNPReference, ViCellAvgBg, FermentationResult.CreatedBy, FragmentAnalyzerResult.RecordId, SiriusWeigherResult.DateCreated, ViCellResult.RelatedRecord157, QuantStudioGenotypingDatum.GeneSymbol, QuantStudioGenotypingDatum.RelatedRecord157, DateTime, NH3IsFound, ViCellDateTime, SampleId, BioAnalyzerResult.MolarityUnits, nCounterResult.RelatedRecord157, InhibitionCalc.DateCreated, MsdResult.DetectionLimitsTopOfRangeType, SCIEXResult.VeloxLastModifiedDate, ViCellResult.RelatedParentRecordId, Position, ViCellResult.VeloxLastModifiedBy, DropSenseA260Result.VeloxLastModifiedDate, FermentationResult.DateCreated, SCIEXResult.CalculatedConcentration, ABI2700Result.CtSD, PercentOfTotal, FragmentAnalyzerResult.RelatedRecord157, Quencher, nCounterResult.VeloxLastModifiedDate, DropSenseA280Result.VeloxLastModifiedDate, InhibitionCalc.ParentSampleId, InhibitionCalc.RelatedParentRecordId, MsdResult.AlgorithmParamCalcAsymFactor, QuantityMean, FileSourceDirectory, ConcentrationUnits, ViCellResult.ViableCells, TareWeight, InhibitionCalc.RelatedRecord157, BioAnalyzerResult.DataRecordName, BioRadResult.Fluor, BioRadResult.BiologicalSetName, QuantStudioGenotypingDatum.DateCreated, MsdResult.Concentration, EntryId, nCounterResult.CreatedBy, FracTFAIsFound, FracTFAAreaPercentTotal, BioAnalyzerResult.RecordId, LCMSResult.CalculatedConcentration, ABI2700Result.DateCreated, MsdResult.SampleGroup, NanodropResult.DataRecordName, NetWeight, BioRadResult.CqStdDev, TimeCorrectedArea, A260230, SCIEXResult.RelatedParentRecordId, BioSpecResult.CreatedBy, SQMean, Task, ViCellResult.CreatedBy, TFAIsFound, BioAnalyzerResult.AvgBPSize, InhibitionCalc.VeloxLastModifiedDate, CalculatedMolarity, QuantitySD, ToTime, ViCellResult.VeloxLastModifiedDate, TapeStationResult.AvgBPSize, MsdResult.DataRecordName, MsdResult.RecordId, ViCellResult.AvgCellsImg, BioAnalyzerResult.PeakValue, TubeVolume, DropSenseA280Result.RecordId, QuantStudioGenotypingDatum.RelatedParentRecordId, SiriusWeigherResult.TareWeight, ROI, NH3RetentionTime, ABI2700Result.VeloxLastModifiedDate, DataRecordName, SiriusWeigherResult.RecordId, LCMSResult.AnalyteISArea, SCIEXResult.DataRecordName, ViCellComment, MolarityUnits, FermentationResult.OUR, MsdResult.DetectionLimitsCalcHigh, ViiA7Result.RelatedRecord157, CqMean, LCMSResult.DilutionFactor, ViCellFileName, A320, ViCellViableCells, ViiA7Result.VeloxLastModifiedDate, FACSPopulation, BioRadResult.SQMean, Pathlength, FermentationResult.TOTFLOW, MsdResult.DetectionLimitsCalcLow, FragmentAnalyzerResult.Molarity, NanodropResult.A260, NanodropResult.CreatedBy, ReadA, nCounterResult.RelatedParentRecordId, SQStdDev, ReadB, LCMSResult.AccuracyPercent, QuantStudioGenotypingDatum.RecordId, PerRecoveryMean, MsdResult.VeloxLastModifiedDate, MsdResult.DetectionLimitsBotOfRangeType, LCMSResult.ISHeight, TapeStationResult.PeakRegionIdentifier, BioAnalyzerResult.CreatedBy, ViCellResult.AvgDiam, ABI2700Result.Ct, nCounterResult.DateCreated, BioAnalyzerResult.RelatedParentRecordId, MapToSample, QCStatus, TapeStationResult.CreatedBy, FermentationResult.RelatedRecord157, MsdResult.FitStatisticRSquared, MsdResult.Sample, TFAAreaPercentTotal, MsdResult.AlgorithmParamCalcMidPoint, BioSpecResult.A260280, CreatedBy, NH3AreaPercentTotal, ViiA7Result.Ct, BioAnalyzerResult.PeakRegionIdentifier, ABI2700Result.DataRecordName, SiriusWeigherResult.DataRecordName, SiriusWeigherResult.RelatedRecord157, FermentationResult.VeloxLastModifiedDate, A230, LCMSResult.VeloxLastModifiedDate, MsdResult.CalcConcentration, LCMSResult.VeloxLastModifiedBy, Observations, NanodropResult.A280, FragmentAnalyzerResult.RelatedParentRecordId, MsdResult.Mean, FermentationResult.PH, ViCellType, MsdResult.Dilution, ProbeName, DropSenseA260Result.DateCreated, NanodropResult.RelatedParentRecordId, DropSenseA260Result.RelatedRecord157, Molarity, SiriusWeigherResult.NetWeight, ColPosition, BioRadResult.SetPoint, VeloxLastModifiedBy, GeneExpressionValue, ViCellResult.MinCir, ViCellResult.FileName, SampleFinalQCStatus, DropSenseA260Result.DataRecordName, SiriusWeigherResult.VeloxLastModifiedBy, FermentationResult.Temperature, LCMSResult.CreatedBy, MsdResult.DetectionLimitsTopOfRangeParam, TapeStationResult.Molarity, LCMSResult.CompoundName, MsdResult.PlateName, MsdResult.DateCreated, BioRadResult.RelatedParentRecordId, TapeStationResult.RecordId, SiriusWeigherResult.GrossWeight, ABI2700Result.RelatedParentRecordId, BioRadResult.WellNote, CtSD, FermentationResult.VeloxLastModifiedBy, FermentationResult.O2, ViiA7Result.VeloxLastModifiedBy, A260, SCIEXResult.RelatedRecord157, BioRadResult.CreatedBy, BioAnalyzerResult.RelatedRecord157, MsdResult.Excluded, MsdResult.DetectionLimitsBotOfRangeParam, SCIEXResult.RecordId, SegmentName, MsdResult.Algorithm, ViiA7Result.CtSD, TapeStationResult.RelatedParentRecordId, CtThreshold, ViCellResult.TotalCellsMl, InstrumentDataStatus, FermentationResult.CER, TapeStationResult.MolarityUnits, ViCellTotalCellsMl, FermentationResult.LH, DropSenseA260Result.RecordId, SCIEXResult.AnalytePeakArea, BioRadResult.LogStartingQuantity, ABI2700Result.CreatedBy, ViCellResult.CellType, A280, BioRadResult.DataRecordName, DropSenseA280Result.RelatedParentRecordId, MsdResult.PercentRecoveryMean, BioRadResult.Cq, ViCellResult.AspirateCycles, A260280, DilutionFactor, ExperimentRecordId, TapeStationResult.RelatedRecord157, ViiA7Result.DataRecordName, ViCellAvgDiam, ViCellViableCellsMl, FragmentAnalyzerResult.VeloxLastModifiedBy, nCounterResult.ProbeName, SizeDistribution, LCMSResult.RelatedRecord157, LCMSResult.ISArea, NanodropResult.DateCreated, SCIEXResult.VeloxLastModifiedBy, MsdResult.CalcConcCV, BioSpecResult.RelatedRecord157, ABI2700Result.Detector, DropSenseA260Result.A260280, BioRadResult.DateCreated, AnalyteQuantity, BioRadResult.VeloxLastModifiedBy, LCMSResult.DateCreated, nCounterResult.VeloxLastModifiedBy, ABI2700Result.RelatedRecord157, BioAnalyzerResult.DateCreated, FragmentAnalyzerResult.CreatedBy, CtMean, BioRadResult.VeloxLastModifiedDate, MsdResult.AlgorithmParamCalcTop, ProbeCount, MsdResult.PercentRecovery, SiriusWeigherResult.RelatedParentRecordId, FACSSubPopulation, DropSenseA280Result.ExtinctionCoefficient, LCMSResult.RecordId, NanodropResult.A260280, BioAnalyzerResult.Molarity, LCMSResult.Concentration, MsdResult.BackFitCurve, ABI2700Result.OtherSampleId, ViiA7Result.RecordId, Ratio, PlateID, BioSpecResult.VeloxLastModifiedBy, BioSpecResult.RelatedParentRecordId, FermentationResult.DataRecordName, ViCellMinDiam, BioRadResult.SQStdDev, ViCellResult.DateTime, ABI2700Result.RecordId, Reporter, Concentration, InhibitionCalc.RecordId, TFARetentionTime, nCounterResult.DataRecordName, DropSenseA260Result.RelatedParentRecordId, Results, BioSpecResult.A260230, ViCellMinCir, MsdResult.Well, NanodropResult.VeloxLastModifiedBy, InhibitionCalc.PercentInhibition, SCIEXResult.ISPeakArea, TapeStationResult.VeloxLastModifiedBy, ViCellResult.DataRecordName, ViCellAspirateCycles, MsdResult.DetectionRange, ViiA7Result.CreatedBy, MsdResult.CalcConcMean, MsdResult.RelatedParentRecordId, DetectionRange, FACSPopCount, ViCellResult.MinDiam, BioRadResult.RecordId, OtherSampleId, FermentationResult.DO1, BioAnalyzerResult.VeloxLastModifiedDate, ExtinctionCoefficient, LCMSResult.Filename, CalculatedConcentrationMean, FractionSites, DropSenseA280Result.CreatedBy, FragmentAnalyzerResult.PeakRegionIdentifier, DropSenseA260Result.A260230, FermentationResult.AIR, FermentationResult.AGIT, MsdResult.VeloxLastModifiedBy, ViCellResult.AvgBg, ViCellResult.RecordId, Analyte, BioSpecResult.VeloxLastModifiedDate, QuantStudioGenotypingDatum.CreatedBy, TotalConcentration, LCMSResult.SampleType, InstrumentName, WellPosition, MsdResult.SampleDescription, BaselineEnd, MsdSignal, ViCellResult.Imgs, ABI2700Result.Well, GeneExpressed, Quantity, ABI2700Result.SampleId, SiriusWeigherResult.VeloxLastModifiedDate, BioSpecResult.DateCreated, nCounterResult.ProbeCount, MsdResult.CreatedBy, FermentationResult.RelatedParentRecordId, InhibitionCalc.CreatedBy
    """
    DATA_TYPE_NAME: Final[str] = 'QCDatum'
    DISPLAY_NAME: Final[str] = "Instrument Datum"
    PLURAL_DISPLAY_NAME: Final[str] = "Instrument Data"
    A230__FIELD_NAME: Final[WrapperField] = WrapperField("A230", FieldType.DOUBLE, display_name="A230")
    A260__FIELD_NAME: Final[WrapperField] = WrapperField("A260", FieldType.DOUBLE, display_name="A260")
    A260230__FIELD_NAME: Final[WrapperField] = WrapperField("A260230", FieldType.DOUBLE, display_name="A260/230")
    A260280__FIELD_NAME: Final[WrapperField] = WrapperField("A260280", FieldType.DOUBLE, display_name="A260/280")
    A280__FIELD_NAME: Final[WrapperField] = WrapperField("A280", FieldType.DOUBLE, display_name="A280")
    A320__FIELD_NAME: Final[WrapperField] = WrapperField("A320", FieldType.DOUBLE, display_name="A320")
    ABI2700RESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.CreatedBy", FieldType.STRING, display_name="Created By")
    ABI2700RESULT_EXT_CT__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.Ct", FieldType.DOUBLE, display_name="Ct")
    ABI2700RESULT_EXT_CTSD__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.CtSD", FieldType.DOUBLE, display_name="Ct SD")
    ABI2700RESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    ABI2700RESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.DateCreated", FieldType.DATE, display_name="Date Created")
    ABI2700RESULT_EXT_DETECTOR__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.Detector", FieldType.STRING, display_name="Detector")
    ABI2700RESULT_EXT_OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.OtherSampleId", FieldType.STRING, display_name="Sample Name")
    ABI2700RESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.RecordId", FieldType.LONG, display_name="Record ID")
    ABI2700RESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    ABI2700RESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    ABI2700RESULT_EXT_SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.SampleId", FieldType.STRING, display_name="Sample ID")
    ABI2700RESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    ABI2700RESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    ABI2700RESULT_EXT_WELL__FIELD_NAME: Final[WrapperField] = WrapperField("ABI2700Result.Well", FieldType.STRING, display_name="Well")
    ALIGNEDMIGRATIONTIME__FIELD_NAME: Final[WrapperField] = WrapperField("AlignedMigrationTime", FieldType.DOUBLE, display_name="Aligned Migration Time")
    ANALYTE__FIELD_NAME: Final[WrapperField] = WrapperField("Analyte", FieldType.STRING, display_name="Analyte")
    ANALYTEQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("AnalyteQuantity", FieldType.DOUBLE, display_name="Analyte Quantity")
    AREA__FIELD_NAME: Final[WrapperField] = WrapperField("Area", FieldType.DOUBLE, display_name="Area")
    ATTACHMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("Attachments", FieldType.SELECTION, display_name="Instrument Files")
    AVERAGECONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("AverageConcentration", FieldType.DOUBLE, display_name="Average Concentration")
    AVGSIZE__FIELD_NAME: Final[WrapperField] = WrapperField("AvgSize", FieldType.DOUBLE, display_name="Average BP Size")
    BASELINEEND__FIELD_NAME: Final[WrapperField] = WrapperField("BaselineEnd", FieldType.LONG, display_name="Baseline End")
    BASELINESTART__FIELD_NAME: Final[WrapperField] = WrapperField("BaselineStart", FieldType.LONG, display_name="Baseline Start")
    BIOANALYZERRESULT_EXT_AREA__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.Area", FieldType.DOUBLE, display_name="Area")
    BIOANALYZERRESULT_EXT_AVGBPSIZE__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.AvgBPSize", FieldType.DOUBLE, display_name="Avg BP Size")
    BIOANALYZERRESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.CreatedBy", FieldType.STRING, display_name="Created By")
    BIOANALYZERRESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    BIOANALYZERRESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.DateCreated", FieldType.DATE, display_name="Date Created")
    BIOANALYZERRESULT_EXT_MOLARITY__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.Molarity", FieldType.DOUBLE, display_name="Molarity")
    BIOANALYZERRESULT_EXT_MOLARITYUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.MolarityUnits", FieldType.STRING, display_name="Molarity Units")
    BIOANALYZERRESULT_EXT_PEAKREGIONIDENTIFIER__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.PeakRegionIdentifier", FieldType.STRING, display_name="Peak/Region Identifier")
    BIOANALYZERRESULT_EXT_PEAKVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.PeakValue", FieldType.DOUBLE, display_name="Peak Value")
    BIOANALYZERRESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.RecordId", FieldType.LONG, display_name="Record ID")
    BIOANALYZERRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    BIOANALYZERRESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    BIOANALYZERRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    BIOANALYZERRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("BioAnalyzerResult.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    BIORADRESULT_EXT_BIOLOGICALSETNAME__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.BiologicalSetName", FieldType.STRING, display_name="Biological Set Name")
    BIORADRESULT_EXT_CONTENT__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.Content", FieldType.STRING, display_name="Content")
    BIORADRESULT_EXT_CQ__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.Cq", FieldType.DOUBLE, display_name="Cq")
    BIORADRESULT_EXT_CQMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.CqMean", FieldType.DOUBLE, display_name="Cq Mean")
    BIORADRESULT_EXT_CQSTDDEV__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.CqStdDev", FieldType.DOUBLE, display_name="Cq Std Dev")
    BIORADRESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.CreatedBy", FieldType.STRING, display_name="Created By")
    BIORADRESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    BIORADRESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.DateCreated", FieldType.DATE, display_name="Date Created")
    BIORADRESULT_EXT_FLUOR__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.Fluor", FieldType.STRING, display_name="Fluor")
    BIORADRESULT_EXT_LOGSTARTINGQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.LogStartingQuantity", FieldType.DOUBLE, display_name="Log Starting Quantity")
    BIORADRESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.RecordId", FieldType.LONG, display_name="Record ID")
    BIORADRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    BIORADRESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    BIORADRESULT_EXT_SQMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.SQMean", FieldType.DOUBLE, display_name="SQ Mean")
    BIORADRESULT_EXT_SQSTDDEV__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.SQStdDev", FieldType.DOUBLE, display_name="SQ Std. Dev")
    BIORADRESULT_EXT_SETPOINT__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.SetPoint", FieldType.DOUBLE, display_name="Set Point")
    BIORADRESULT_EXT_TARGET__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.Target", FieldType.STRING, display_name="Target")
    BIORADRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    BIORADRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    BIORADRESULT_EXT_WELLNOTE__FIELD_NAME: Final[WrapperField] = WrapperField("BioRadResult.WellNote", FieldType.STRING, display_name="Well Note")
    BIOSPECRESULT_EXT_A260230__FIELD_NAME: Final[WrapperField] = WrapperField("BioSpecResult.A260230", FieldType.DOUBLE, display_name="A260/230")
    BIOSPECRESULT_EXT_A260280__FIELD_NAME: Final[WrapperField] = WrapperField("BioSpecResult.A260280", FieldType.DOUBLE, display_name="A260/280")
    BIOSPECRESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("BioSpecResult.CreatedBy", FieldType.STRING, display_name="Created By")
    BIOSPECRESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("BioSpecResult.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    BIOSPECRESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("BioSpecResult.DateCreated", FieldType.DATE, display_name="Date Created")
    BIOSPECRESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("BioSpecResult.RecordId", FieldType.LONG, display_name="Record ID")
    BIOSPECRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("BioSpecResult.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    BIOSPECRESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("BioSpecResult.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    BIOSPECRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("BioSpecResult.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    BIOSPECRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("BioSpecResult.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CV__FIELD_NAME: Final[WrapperField] = WrapperField("CV", FieldType.DOUBLE, display_name="CV")
    CALCULATEDCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("CalculatedConcentration", FieldType.DOUBLE, display_name="Calculated Concentration")
    CALCULATEDCONCENTRATIONMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("CalculatedConcentrationMean", FieldType.DOUBLE, display_name="Calculated Concentration Mean")
    CALCULATEDMOLARITY__FIELD_NAME: Final[WrapperField] = WrapperField("CalculatedMolarity", FieldType.DOUBLE, display_name="Calculated Molarity")
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.STRING, display_name="Column Position")
    COLOR__FIELD_NAME: Final[WrapperField] = WrapperField("Color", FieldType.LONG, display_name="Color")
    CONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("Concentration", FieldType.DOUBLE, display_name="Concentration")
    CONCENTRATIONUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("ConcentrationUnits", FieldType.STRING, display_name="Concentration Units")
    CQ__FIELD_NAME: Final[WrapperField] = WrapperField("Cq", FieldType.DOUBLE, display_name="Cq")
    CQMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("CqMean", FieldType.DOUBLE, display_name="Cq Mean")
    CQSTDDEV__FIELD_NAME: Final[WrapperField] = WrapperField("CqStdDev", FieldType.DOUBLE, display_name="Cq Std Dev")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CT__FIELD_NAME: Final[WrapperField] = WrapperField("Ct", FieldType.DOUBLE, display_name="Ct")
    CTMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("CtMean", FieldType.DOUBLE, display_name="Ct Mean")
    CTSD__FIELD_NAME: Final[WrapperField] = WrapperField("CtSD", FieldType.DOUBLE, display_name="Ct SD")
    CTTHRESHOLD__FIELD_NAME: Final[WrapperField] = WrapperField("CtThreshold", FieldType.DOUBLE, display_name="CT Threshold")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DATETIME__FIELD_NAME: Final[WrapperField] = WrapperField("DateTime", FieldType.DATE, display_name="Date : Time")
    DATUMTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DatumType", FieldType.SELECTION, display_name="Instrument Type")
    DETECTIONRANGE__FIELD_NAME: Final[WrapperField] = WrapperField("DetectionRange", FieldType.STRING, display_name="Detection Range")
    DILUTIONFACTOR__FIELD_NAME: Final[WrapperField] = WrapperField("DilutionFactor", FieldType.DOUBLE, display_name="Dilution Factor")
    DROPSENSEA260RESULT_EXT_A260230__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA260Result.A260230", FieldType.DOUBLE, display_name="A260/230")
    DROPSENSEA260RESULT_EXT_A260280__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA260Result.A260280", FieldType.DOUBLE, display_name="A260/280")
    DROPSENSEA260RESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA260Result.CreatedBy", FieldType.STRING, display_name="Created By")
    DROPSENSEA260RESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA260Result.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DROPSENSEA260RESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA260Result.DateCreated", FieldType.DATE, display_name="Date Created")
    DROPSENSEA260RESULT_EXT_DILUTIONFACTOR__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA260Result.DilutionFactor", FieldType.DOUBLE, display_name="Dilution Factor")
    DROPSENSEA260RESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA260Result.RecordId", FieldType.LONG, display_name="Record ID")
    DROPSENSEA260RESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA260Result.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    DROPSENSEA260RESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA260Result.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    DROPSENSEA260RESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA260Result.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    DROPSENSEA260RESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA260Result.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    DROPSENSEA280RESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA280Result.CreatedBy", FieldType.STRING, display_name="Created By")
    DROPSENSEA280RESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA280Result.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DROPSENSEA280RESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA280Result.DateCreated", FieldType.DATE, display_name="Date Created")
    DROPSENSEA280RESULT_EXT_EXTINCTIONCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA280Result.ExtinctionCoefficient", FieldType.DOUBLE, display_name="E1%")
    DROPSENSEA280RESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA280Result.RecordId", FieldType.LONG, display_name="Record ID")
    DROPSENSEA280RESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA280Result.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    DROPSENSEA280RESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA280Result.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    DROPSENSEA280RESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA280Result.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    DROPSENSEA280RESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("DropSenseA280Result.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    ENTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("EntryId", FieldType.LONG, display_name="Entry Id")
    EXPERIMENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentRecordId", FieldType.LONG, display_name="Experiment Record ID")
    EXTINCTIONCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("ExtinctionCoefficient", FieldType.DOUBLE, display_name="E1%")
    FACSPOPCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("FACSPopCount", FieldType.LONG, display_name="FACS Population Count")
    FACSPOPULATION__FIELD_NAME: Final[WrapperField] = WrapperField("FACSPopulation", FieldType.STRING, display_name="FACS Population")
    FACSSUBPOPULATION__FIELD_NAME: Final[WrapperField] = WrapperField("FACSSubPopulation", FieldType.STRING, display_name="FACS Sub-Population")
    FERMENTATIONRESULT_EXT_AGIT__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.AGIT", FieldType.DOUBLE, display_name="Agitation (rpm)")
    FERMENTATIONRESULT_EXT_AIR__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.AIR", FieldType.DOUBLE, display_name="AIR (lpm)")
    FERMENTATIONRESULT_EXT_CER__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.CER", FieldType.DOUBLE, display_name="Carbon Dioxide Evolution Rate (mmol/L-hr)")
    FERMENTATIONRESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.CreatedBy", FieldType.STRING, display_name="Created By")
    FERMENTATIONRESULT_EXT_DO1__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.DO1", FieldType.DOUBLE, display_name="Dissolved Oxygen (%)")
    FERMENTATIONRESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    FERMENTATIONRESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.DateCreated", FieldType.DATE, display_name="Date Created")
    FERMENTATIONRESULT_EXT_LH__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.LH", FieldType.DOUBLE, display_name="Log Hour")
    FERMENTATIONRESULT_EXT_O2__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.O2", FieldType.DOUBLE, display_name="Oxygen (lpm)")
    FERMENTATIONRESULT_EXT_OUR__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.OUR", FieldType.DOUBLE, display_name="Oxygen Uptake Rate (mmol/L-hr)")
    FERMENTATIONRESULT_EXT_PH__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.PH", FieldType.DOUBLE, display_name="PH")
    FERMENTATIONRESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.RecordId", FieldType.LONG, display_name="Record ID")
    FERMENTATIONRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    FERMENTATIONRESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    FERMENTATIONRESULT_EXT_TOTFLOW__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.TOTFLOW", FieldType.DOUBLE, display_name="Total Flow (lpm)")
    FERMENTATIONRESULT_EXT_TEMPERATURE__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.Temperature", FieldType.DOUBLE, display_name="Temperature (C)")
    FERMENTATIONRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    FERMENTATIONRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("FermentationResult.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    FILESOURCEDIRECTORY__FIELD_NAME: Final[WrapperField] = WrapperField("FileSourceDirectory", FieldType.STRING, display_name="File Source Directory")
    FRACRETENTIONTIME__FIELD_NAME: Final[WrapperField] = WrapperField("FracRetentionTime", FieldType.DOUBLE, display_name="Frac Retention Time")
    FRACTFAAREAPERCENTTOTAL__FIELD_NAME: Final[WrapperField] = WrapperField("FracTFAAreaPercentTotal", FieldType.DOUBLE, display_name="Frac Area %Total")
    FRACTFAISFOUND__FIELD_NAME: Final[WrapperField] = WrapperField("FracTFAIsFound", FieldType.BOOLEAN, display_name="Frac Found")
    FRACTIONSITES__FIELD_NAME: Final[WrapperField] = WrapperField("FractionSites", FieldType.STRING, display_name="Fraction Sites")
    FRAGMENTANALYZERRESULT_EXT_AVGBPSIZE__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentAnalyzerResult.AvgBPSize", FieldType.DOUBLE, display_name="Avg BP Size")
    FRAGMENTANALYZERRESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentAnalyzerResult.CreatedBy", FieldType.STRING, display_name="Created By")
    FRAGMENTANALYZERRESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentAnalyzerResult.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    FRAGMENTANALYZERRESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentAnalyzerResult.DateCreated", FieldType.DATE, display_name="Date Created")
    FRAGMENTANALYZERRESULT_EXT_MOLARITY__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentAnalyzerResult.Molarity", FieldType.DOUBLE, display_name="Molarity")
    FRAGMENTANALYZERRESULT_EXT_MOLARITYUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentAnalyzerResult.MolarityUnits", FieldType.STRING, display_name="Molarity Units")
    FRAGMENTANALYZERRESULT_EXT_PEAKREGIONIDENTIFIER__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentAnalyzerResult.PeakRegionIdentifier", FieldType.STRING, display_name="Peak/Region Identifier")
    FRAGMENTANALYZERRESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentAnalyzerResult.RecordId", FieldType.LONG, display_name="Record ID")
    FRAGMENTANALYZERRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentAnalyzerResult.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    FRAGMENTANALYZERRESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentAnalyzerResult.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    FRAGMENTANALYZERRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentAnalyzerResult.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    FRAGMENTANALYZERRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("FragmentAnalyzerResult.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    FROMTIME__FIELD_NAME: Final[WrapperField] = WrapperField("FromTime", FieldType.INTEGER, display_name="From")
    GENEEXPRESSED__FIELD_NAME: Final[WrapperField] = WrapperField("GeneExpressed", FieldType.STRING, display_name="Gene Expressed")
    GENEEXPRESSIONVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("GeneExpressionValue", FieldType.DOUBLE, display_name="Gene Expression Value")
    GROSSWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("GrossWeight", FieldType.DOUBLE, display_name="Gross Weight")
    INHIBITIONCALC_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("InhibitionCalc.CreatedBy", FieldType.STRING, display_name="Created By")
    INHIBITIONCALC_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("InhibitionCalc.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    INHIBITIONCALC_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("InhibitionCalc.DateCreated", FieldType.DATE, display_name="Date Created")
    INHIBITIONCALC_EXT_PARENTSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("InhibitionCalc.ParentSampleId", FieldType.STRING, display_name="Parent Sample ID")
    INHIBITIONCALC_EXT_PERCENTINHIBITION__FIELD_NAME: Final[WrapperField] = WrapperField("InhibitionCalc.PercentInhibition", FieldType.DOUBLE, display_name="% Inhibition")
    INHIBITIONCALC_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("InhibitionCalc.RecordId", FieldType.LONG, display_name="Record ID")
    INHIBITIONCALC_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("InhibitionCalc.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    INHIBITIONCALC_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("InhibitionCalc.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    INHIBITIONCALC_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("InhibitionCalc.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    INHIBITIONCALC_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("InhibitionCalc.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    INSTRUMENTDATASTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentDataStatus", FieldType.PICKLIST, display_name="Instrument Data Status")
    INSTRUMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("InstrumentName", FieldType.STRING, display_name="Instrument Name")
    IONMODE__FIELD_NAME: Final[WrapperField] = WrapperField("IonMode", FieldType.STRING, display_name="Ion Mode")
    LCMSRESULT_EXT_ACCURACYPERCENT__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.AccuracyPercent", FieldType.STRING, display_name="Accuracy %")
    LCMSRESULT_EXT_ANALYTEISAREA__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.AnalyteISArea", FieldType.DOUBLE, display_name="Analyte/IS Area")
    LCMSRESULT_EXT_AREA__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.Area", FieldType.DOUBLE, display_name="Analyte Peak Area (counts)")
    LCMSRESULT_EXT_CALCULATEDCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.CalculatedConcentration", FieldType.DOUBLE, display_name="Calculated Concentration")
    LCMSRESULT_EXT_COMPOUNDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.CompoundName", FieldType.STRING, display_name="Compound Name")
    LCMSRESULT_EXT_CONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.Concentration", FieldType.DOUBLE, display_name="Analyte Concentration (uM)")
    LCMSRESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.CreatedBy", FieldType.STRING, display_name="Created By")
    LCMSRESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    LCMSRESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.DateCreated", FieldType.DATE, display_name="Date Created")
    LCMSRESULT_EXT_DILUTIONFACTOR__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.DilutionFactor", FieldType.DOUBLE, display_name="Dilution Factor")
    LCMSRESULT_EXT_FILETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.FileType", FieldType.STRING, display_name="File Type")
    LCMSRESULT_EXT_FILENAME__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.Filename", FieldType.STRING, display_name="Filename")
    LCMSRESULT_EXT_HEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.Height", FieldType.DOUBLE, display_name="Analyte Peak Height (cps)")
    LCMSRESULT_EXT_ISAREA__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.ISArea", FieldType.DOUBLE, display_name="IS Peak Area (counts)")
    LCMSRESULT_EXT_ISHEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.ISHeight", FieldType.DOUBLE, display_name="IS Peak Height (cps)")
    LCMSRESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.RecordId", FieldType.LONG, display_name="Record ID")
    LCMSRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    LCMSRESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    LCMSRESULT_EXT_SAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.SampleType", FieldType.STRING, display_name="Sample Type")
    LCMSRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    LCMSRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("LCMSResult.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    MAPTOSAMPLE__FIELD_NAME: Final[WrapperField] = WrapperField("MapToSample", FieldType.BOOLEAN, display_name="Map to Sample")
    MOLARITY__FIELD_NAME: Final[WrapperField] = WrapperField("Molarity", FieldType.DOUBLE, display_name="Molarity")
    MOLARITYUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("MolarityUnits", FieldType.STRING, display_name="Molarity Units")
    MSDRESULT_EXT_ALGORITHM__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.Algorithm", FieldType.STRING, display_name="Algorithm")
    MSDRESULT_EXT_ALGORITHMPARAMCALCASYMFACTOR__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.AlgorithmParamCalcAsymFactor", FieldType.DOUBLE, display_name="Algorithm Parameter: Calc. AsymmetryFactor")
    MSDRESULT_EXT_ALGORITHMPARAMCALCBOTTOM__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.AlgorithmParamCalcBottom", FieldType.DOUBLE, display_name="Algorithm Parameter: Calc. Bottom")
    MSDRESULT_EXT_ALGORITHMPARAMCALCHILLSLOPE__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.AlgorithmParamCalcHillSlope", FieldType.DOUBLE, display_name="Algorithm Parameter: Calc. HillSlope")
    MSDRESULT_EXT_ALGORITHMPARAMCALCMIDPOINT__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.AlgorithmParamCalcMidPoint", FieldType.DOUBLE, display_name="Algorithm Parameter: Calc. MidPoint")
    MSDRESULT_EXT_ALGORITHMPARAMCALCTOP__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.AlgorithmParamCalcTop", FieldType.DOUBLE, display_name="Algorithm Parameter: Calc. Top")
    MSDRESULT_EXT_ALGORITHMPARAMCALCYINT__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.AlgorithmParamCalcYInt", FieldType.DOUBLE, display_name="Algorithm Parameter: Calc. Y intercept")
    MSDRESULT_EXT_ALGORITHMPARAMETERWEIGHTING__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.AlgorithmParameterWeighting", FieldType.STRING, display_name="Algorithm Parameter: Weighting")
    MSDRESULT_EXT_ASSAY__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.Assay", FieldType.STRING, display_name="Assay")
    MSDRESULT_EXT_BACKFITCURVE__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.BackFitCurve", FieldType.STRING, display_name="Back Fit Curve")
    MSDRESULT_EXT_CV__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.CV", FieldType.DOUBLE, display_name="CV")
    MSDRESULT_EXT_CALCCONCCV__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.CalcConcCV", FieldType.DOUBLE, display_name="Calc. Conc. CV")
    MSDRESULT_EXT_CALCCONCMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.CalcConcMean", FieldType.DOUBLE, display_name="Calc. Conc. Mean")
    MSDRESULT_EXT_CALCCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.CalcConcentration", FieldType.DOUBLE, display_name="Calc. Concentration")
    MSDRESULT_EXT_CONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.Concentration", FieldType.DOUBLE, display_name="Concentration")
    MSDRESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.CreatedBy", FieldType.STRING, display_name="Created By")
    MSDRESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    MSDRESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.DateCreated", FieldType.DATE, display_name="Date Created")
    MSDRESULT_EXT_DETECTIONLIMITSBOTOFRANGEPARAM__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.DetectionLimitsBotOfRangeParam", FieldType.DOUBLE, display_name="Detection Limits: Bottom of Range Parameter")
    MSDRESULT_EXT_DETECTIONLIMITSBOTOFRANGETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.DetectionLimitsBotOfRangeType", FieldType.STRING, display_name="Detection Limits: Bottom of Range Type")
    MSDRESULT_EXT_DETECTIONLIMITSCALCHIGH__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.DetectionLimitsCalcHigh", FieldType.DOUBLE, display_name="Detection Limits: Calc. High")
    MSDRESULT_EXT_DETECTIONLIMITSCALCLOW__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.DetectionLimitsCalcLow", FieldType.DOUBLE, display_name="Detection Limits: Calc. Low")
    MSDRESULT_EXT_DETECTIONLIMITSTOPOFRANGEPARAM__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.DetectionLimitsTopOfRangeParam", FieldType.DOUBLE, display_name="Detection Limits: Top of Range Parameter")
    MSDRESULT_EXT_DETECTIONLIMITSTOPOFRANGETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.DetectionLimitsTopOfRangeType", FieldType.STRING, display_name="Detection Limits: Top of Range Type")
    MSDRESULT_EXT_DETECTIONRANGE__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.DetectionRange", FieldType.STRING, display_name="Detection Range")
    MSDRESULT_EXT_DILUTION__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.Dilution", FieldType.DOUBLE, display_name="Dilution")
    MSDRESULT_EXT_EXCLUDED__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.Excluded", FieldType.PICKLIST, display_name="Excluded")
    MSDRESULT_EXT_FITSTATISTICRSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.FitStatisticRSquared", FieldType.DOUBLE, display_name="Fit Statistic: R Squared")
    MSDRESULT_EXT_MEAN__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.Mean", FieldType.DOUBLE, display_name="Mean")
    MSDRESULT_EXT_PERCENTRECOVERY__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.PercentRecovery", FieldType.DOUBLE, display_name="% Recovery")
    MSDRESULT_EXT_PERCENTRECOVERYMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.PercentRecoveryMean", FieldType.DOUBLE, display_name="% Recovery Mean")
    MSDRESULT_EXT_PLATENAME__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.PlateName", FieldType.STRING, display_name="Plate Name")
    MSDRESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.RecordId", FieldType.LONG, display_name="Record ID")
    MSDRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    MSDRESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    MSDRESULT_EXT_SAMPLE__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.Sample", FieldType.STRING, display_name="Sample")
    MSDRESULT_EXT_SAMPLEDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.SampleDescription", FieldType.STRING, display_name="Sample Description")
    MSDRESULT_EXT_SAMPLEGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.SampleGroup", FieldType.STRING, display_name="Sample Group")
    MSDRESULT_EXT_SIGNALVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.SignalValue", FieldType.DOUBLE, display_name="Signal")
    MSDRESULT_EXT_SPOT__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.Spot", FieldType.STRING, display_name="Spot")
    MSDRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    MSDRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    MSDRESULT_EXT_WELL__FIELD_NAME: Final[WrapperField] = WrapperField("MsdResult.Well", FieldType.STRING, display_name="Well")
    MSDSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("MsdSignal", FieldType.INTEGER, display_name="Signal")
    NH3AREAPERCENTTOTAL__FIELD_NAME: Final[WrapperField] = WrapperField("NH3AreaPercentTotal", FieldType.DOUBLE, display_name="NH3 Area %Total")
    NH3ISFOUND__FIELD_NAME: Final[WrapperField] = WrapperField("NH3IsFound", FieldType.BOOLEAN, display_name="NH3 Found")
    NH3RETENTIONTIME__FIELD_NAME: Final[WrapperField] = WrapperField("NH3RetentionTime", FieldType.DOUBLE, display_name="NH3RetentionTime")
    NANODROPRESULT_EXT_A260__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropResult.A260", FieldType.DOUBLE, display_name="A260")
    NANODROPRESULT_EXT_A260230__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropResult.A260230", FieldType.DOUBLE, display_name="A260/230")
    NANODROPRESULT_EXT_A260280__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropResult.A260280", FieldType.DOUBLE, display_name="A260/280")
    NANODROPRESULT_EXT_A280__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropResult.A280", FieldType.DOUBLE, display_name="A280")
    NANODROPRESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropResult.CreatedBy", FieldType.STRING, display_name="Created By")
    NANODROPRESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropResult.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    NANODROPRESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropResult.DateCreated", FieldType.DATE, display_name="Date Created")
    NANODROPRESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropResult.RecordId", FieldType.LONG, display_name="Record ID")
    NANODROPRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropResult.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    NANODROPRESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropResult.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    NANODROPRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropResult.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    NANODROPRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("NanodropResult.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    NETWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("NetWeight", FieldType.DOUBLE, display_name="Net Weight")
    OBSERVATIONS__FIELD_NAME: Final[WrapperField] = WrapperField("Observations", FieldType.STRING, display_name="Observations")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    OVERRIDEEXPLANATION__FIELD_NAME: Final[WrapperField] = WrapperField("OverrideExplanation", FieldType.STRING, display_name="Override Explanation")
    OVERRIDEUSER__FIELD_NAME: Final[WrapperField] = WrapperField("OverrideUser", FieldType.STRING, display_name="Override User")
    PATHLENGTH__FIELD_NAME: Final[WrapperField] = WrapperField("Pathlength", FieldType.DOUBLE, display_name="Pathlength (mm)")
    PEAKVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("PeakValue", FieldType.DOUBLE, display_name="Peak Value")
    PERRECOVERYMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("PerRecoveryMean", FieldType.DOUBLE, display_name="% Recovery Mean")
    PERCENTOFTOTAL__FIELD_NAME: Final[WrapperField] = WrapperField("PercentOfTotal", FieldType.DOUBLE, display_name="% Of Total")
    PLATEID__FIELD_NAME: Final[WrapperField] = WrapperField("PlateID", FieldType.STRING, display_name="Plate ID")
    POSITION__FIELD_NAME: Final[WrapperField] = WrapperField("Position", FieldType.STRING, display_name="Position")
    PROBECOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("ProbeCount", FieldType.DOUBLE, display_name="Probe Count")
    PROBENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ProbeName", FieldType.STRING, display_name="Probe Name")
    QCSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("QCStatus", FieldType.PICKLIST, display_name="QC Status")
    QUANTSTUDIOGENOTYPINGDATUM_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("QuantStudioGenotypingDatum.CreatedBy", FieldType.STRING, display_name="Created By")
    QUANTSTUDIOGENOTYPINGDATUM_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("QuantStudioGenotypingDatum.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    QUANTSTUDIOGENOTYPINGDATUM_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("QuantStudioGenotypingDatum.DateCreated", FieldType.DATE, display_name="Date Created")
    QUANTSTUDIOGENOTYPINGDATUM_EXT_GENECALL__FIELD_NAME: Final[WrapperField] = WrapperField("QuantStudioGenotypingDatum.GeneCall", FieldType.STRING, display_name="Call")
    QUANTSTUDIOGENOTYPINGDATUM_EXT_GENESYMBOL__FIELD_NAME: Final[WrapperField] = WrapperField("QuantStudioGenotypingDatum.GeneSymbol", FieldType.STRING, display_name="Gene Symbol")
    QUANTSTUDIOGENOTYPINGDATUM_EXT_NCBISNPREFERENCE__FIELD_NAME: Final[WrapperField] = WrapperField("QuantStudioGenotypingDatum.NCBISNPReference", FieldType.STRING, display_name="NCBI SNP Reference")
    QUANTSTUDIOGENOTYPINGDATUM_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("QuantStudioGenotypingDatum.RecordId", FieldType.LONG, display_name="Record ID")
    QUANTSTUDIOGENOTYPINGDATUM_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("QuantStudioGenotypingDatum.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    QUANTSTUDIOGENOTYPINGDATUM_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("QuantStudioGenotypingDatum.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    QUANTSTUDIOGENOTYPINGDATUM_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("QuantStudioGenotypingDatum.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    QUANTSTUDIOGENOTYPINGDATUM_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("QuantStudioGenotypingDatum.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    QUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("Quantity", FieldType.DOUBLE, display_name="Quantity")
    QUANTITYMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityMean", FieldType.DOUBLE, display_name="Quantity Mean")
    QUANTITYSD__FIELD_NAME: Final[WrapperField] = WrapperField("QuantitySD", FieldType.DOUBLE, display_name="Quantity SD")
    QUENCHER__FIELD_NAME: Final[WrapperField] = WrapperField("Quencher", FieldType.STRING, display_name="Quencher")
    RIN__FIELD_NAME: Final[WrapperField] = WrapperField("RIN", FieldType.DOUBLE, display_name="RIN")
    ROI__FIELD_NAME: Final[WrapperField] = WrapperField("ROI", FieldType.INTEGER, display_name="Region of Interest")
    RATIO__FIELD_NAME: Final[WrapperField] = WrapperField("Ratio", FieldType.STRING, display_name="Ratio")
    RAWDATAVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("RawDataValue", FieldType.DOUBLE, display_name="Raw Reading")
    READA__FIELD_NAME: Final[WrapperField] = WrapperField("ReadA", FieldType.STRING, display_name="Read A")
    READB__FIELD_NAME: Final[WrapperField] = WrapperField("ReadB", FieldType.STRING, display_name="Read B")
    REPORTER__FIELD_NAME: Final[WrapperField] = WrapperField("Reporter", FieldType.STRING, display_name="Reporter")
    RESULTS__FIELD_NAME: Final[WrapperField] = WrapperField("Results", FieldType.STRING, display_name="Results")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.STRING, display_name="Row Position")
    SCIEXRESULT_EXT_ANALYTEPEAKAREA__FIELD_NAME: Final[WrapperField] = WrapperField("SCIEXResult.AnalytePeakArea", FieldType.DOUBLE, display_name="Analyte Peak Area (counts)")
    SCIEXRESULT_EXT_ANALYTEPEAKNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SCIEXResult.AnalytePeakName", FieldType.STRING, display_name="Analyte Peak Name")
    SCIEXRESULT_EXT_CALCULATEDCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("SCIEXResult.CalculatedConcentration", FieldType.DOUBLE, display_name="Calculated Concentration (uM)")
    SCIEXRESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SCIEXResult.CreatedBy", FieldType.STRING, display_name="Created By")
    SCIEXRESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SCIEXResult.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SCIEXRESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SCIEXResult.DateCreated", FieldType.DATE, display_name="Date Created")
    SCIEXRESULT_EXT_ISPEAKAREA__FIELD_NAME: Final[WrapperField] = WrapperField("SCIEXResult.ISPeakArea", FieldType.DOUBLE, display_name="IS Peak Area (counts)")
    SCIEXRESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SCIEXResult.RecordId", FieldType.LONG, display_name="Record ID")
    SCIEXRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SCIEXResult.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    SCIEXRESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("SCIEXResult.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    SCIEXRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SCIEXResult.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SCIEXRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SCIEXResult.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SQMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("SQMean", FieldType.DOUBLE, display_name="SQ Mean")
    SQSTDDEV__FIELD_NAME: Final[WrapperField] = WrapperField("SQStdDev", FieldType.DOUBLE, display_name="SQ Std Dev")
    SAMPLEFINALQCSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("SampleFinalQCStatus", FieldType.PICKLIST, display_name="Sample Final QC Status")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    SEGMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SegmentName", FieldType.STRING, display_name="Segment Name")
    SIRIUSWEIGHERRESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SiriusWeigherResult.CreatedBy", FieldType.STRING, display_name="Created By")
    SIRIUSWEIGHERRESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SiriusWeigherResult.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SIRIUSWEIGHERRESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SiriusWeigherResult.DateCreated", FieldType.DATE, display_name="Date Created")
    SIRIUSWEIGHERRESULT_EXT_GROSSWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("SiriusWeigherResult.GrossWeight", FieldType.DOUBLE, display_name="Gross Weight")
    SIRIUSWEIGHERRESULT_EXT_NETWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("SiriusWeigherResult.NetWeight", FieldType.DOUBLE, display_name="Net Weight")
    SIRIUSWEIGHERRESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SiriusWeigherResult.RecordId", FieldType.LONG, display_name="Record ID")
    SIRIUSWEIGHERRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SiriusWeigherResult.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    SIRIUSWEIGHERRESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("SiriusWeigherResult.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    SIRIUSWEIGHERRESULT_EXT_TAREWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("SiriusWeigherResult.TareWeight", FieldType.DOUBLE, display_name="Tare Weight")
    SIRIUSWEIGHERRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SiriusWeigherResult.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SIRIUSWEIGHERRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SiriusWeigherResult.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SIZEDISTRIBUTION__FIELD_NAME: Final[WrapperField] = WrapperField("SizeDistribution", FieldType.DOUBLE, display_name="Size Distribution")
    STARTINGQUANTITYSQ__FIELD_NAME: Final[WrapperField] = WrapperField("StartingQuantitySQ", FieldType.DOUBLE, display_name="Starting Quantity SQ")
    TFAAREAPERCENTTOTAL__FIELD_NAME: Final[WrapperField] = WrapperField("TFAAreaPercentTotal", FieldType.DOUBLE, display_name="TFA Area %Total")
    TFAISFOUND__FIELD_NAME: Final[WrapperField] = WrapperField("TFAIsFound", FieldType.BOOLEAN, display_name="TFA Found")
    TFARETENTIONTIME__FIELD_NAME: Final[WrapperField] = WrapperField("TFARetentionTime", FieldType.DOUBLE, display_name="TFA Retention Time")
    TABLEENTRYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("TableEntryName", FieldType.STRING, display_name="Peak/Region Identifier")
    TAPESTATIONRESULT_EXT_AREA__FIELD_NAME: Final[WrapperField] = WrapperField("TapeStationResult.Area", FieldType.DOUBLE, display_name="Area")
    TAPESTATIONRESULT_EXT_AVGBPSIZE__FIELD_NAME: Final[WrapperField] = WrapperField("TapeStationResult.AvgBPSize", FieldType.DOUBLE, display_name="Avg BP Size")
    TAPESTATIONRESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("TapeStationResult.CreatedBy", FieldType.STRING, display_name="Created By")
    TAPESTATIONRESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("TapeStationResult.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    TAPESTATIONRESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("TapeStationResult.DateCreated", FieldType.DATE, display_name="Date Created")
    TAPESTATIONRESULT_EXT_MOLARITY__FIELD_NAME: Final[WrapperField] = WrapperField("TapeStationResult.Molarity", FieldType.DOUBLE, display_name="Molarity")
    TAPESTATIONRESULT_EXT_MOLARITYUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("TapeStationResult.MolarityUnits", FieldType.STRING, display_name="Molarity Units")
    TAPESTATIONRESULT_EXT_PEAKREGIONIDENTIFIER__FIELD_NAME: Final[WrapperField] = WrapperField("TapeStationResult.PeakRegionIdentifier", FieldType.STRING, display_name="Peak/Region Identifier")
    TAPESTATIONRESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("TapeStationResult.RecordId", FieldType.LONG, display_name="Record ID")
    TAPESTATIONRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("TapeStationResult.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    TAPESTATIONRESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("TapeStationResult.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    TAPESTATIONRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("TapeStationResult.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    TAPESTATIONRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("TapeStationResult.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    TAREWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("TareWeight", FieldType.DOUBLE, display_name="Tare Weight")
    TARGETNAME__FIELD_NAME: Final[WrapperField] = WrapperField("TargetName", FieldType.STRING, display_name="Target Name")
    TASK__FIELD_NAME: Final[WrapperField] = WrapperField("Task", FieldType.STRING, display_name="Task")
    TIMECORRECTEDAREA__FIELD_NAME: Final[WrapperField] = WrapperField("TimeCorrectedArea", FieldType.DOUBLE, display_name="Time Corrected Area")
    TOTIME__FIELD_NAME: Final[WrapperField] = WrapperField("ToTime", FieldType.INTEGER, display_name="To")
    TOTALCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("TotalConcentration", FieldType.DOUBLE, display_name="Total Concentration")
    TUBEVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("TubeVolume", FieldType.DOUBLE, display_name="Tube Volume")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VICELLASPIRATECYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellAspirateCycles", FieldType.DOUBLE, display_name="Aspirate Cycles")
    VICELLAVGBG__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellAvgBg", FieldType.DOUBLE, display_name="Avg. BG Intensity")
    VICELLAVGCELLSIMG__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellAvgCellsImg", FieldType.DOUBLE, display_name="Avg. Cells/Image")
    VICELLAVGCIRC__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellAvgCirc", FieldType.DOUBLE, display_name="Avg. Circ.")
    VICELLAVGDIAM__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellAvgDiam", FieldType.DOUBLE, display_name="Avg. Diam.")
    VICELLCOMMENT__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellComment", FieldType.STRING, display_name="Comment")
    VICELLDATETIME__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellDateTime", FieldType.DATE, display_name="Sample Date/Time")
    VICELLFILENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellFileName", FieldType.STRING, display_name="File Name")
    VICELLIMGS__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellImgs", FieldType.DOUBLE, display_name="Images")
    VICELLMAXDIAM__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellMaxDiam", FieldType.DOUBLE, display_name="Max Diam.")
    VICELLMINCIR__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellMinCir", FieldType.DOUBLE, display_name="Minimum Circularity")
    VICELLMINDIAM__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellMinDiam", FieldType.DOUBLE, display_name="Min Diam.")
    VICELLRESULT_EXT_ASPIRATECYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.AspirateCycles", FieldType.DOUBLE, display_name="Aspirate Cycles")
    VICELLRESULT_EXT_AVGBG__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.AvgBg", FieldType.DOUBLE, display_name="Average BG Intensity")
    VICELLRESULT_EXT_AVGCELLSIMG__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.AvgCellsImg", FieldType.DOUBLE, display_name="Average Cells/Image")
    VICELLRESULT_EXT_AVGCIRC__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.AvgCirc", FieldType.DOUBLE, display_name="Average Circularity")
    VICELLRESULT_EXT_AVGDIAM__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.AvgDiam", FieldType.DOUBLE, display_name="Average Diameter")
    VICELLRESULT_EXT_CELLTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.CellType", FieldType.STRING, display_name="Cell Type")
    VICELLRESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.CreatedBy", FieldType.STRING, display_name="Created By")
    VICELLRESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    VICELLRESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.DateCreated", FieldType.DATE, display_name="Date Created")
    VICELLRESULT_EXT_DATETIME__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.DateTime", FieldType.DATE, display_name="Sample Date/Time")
    VICELLRESULT_EXT_FILENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.FileName", FieldType.STRING, display_name="File Name")
    VICELLRESULT_EXT_IMGS__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.Imgs", FieldType.DOUBLE, display_name="Images")
    VICELLRESULT_EXT_MAXDIAM__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.MaxDiam", FieldType.DOUBLE, display_name="Maxium Diameter")
    VICELLRESULT_EXT_MINCIR__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.MinCir", FieldType.DOUBLE, display_name="Minimum Circularity")
    VICELLRESULT_EXT_MINDIAM__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.MinDiam", FieldType.DOUBLE, display_name="Minimum Diameter")
    VICELLRESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.RecordId", FieldType.LONG, display_name="Record ID")
    VICELLRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    VICELLRESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    VICELLRESULT_EXT_TOTALCELLS__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.TotalCells", FieldType.DOUBLE, display_name="Total Cells")
    VICELLRESULT_EXT_TOTALCELLSML__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.TotalCellsMl", FieldType.DOUBLE, display_name="Total Cells/mL")
    VICELLRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VICELLRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VICELLRESULT_EXT_VIABILITY__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.Viability", FieldType.DOUBLE, display_name="% Viability")
    VICELLRESULT_EXT_VIABLECELLS__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.ViableCells", FieldType.DOUBLE, display_name="Viable Cells")
    VICELLRESULT_EXT_VIABLECELLSML__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellResult.ViableCellsMl", FieldType.DOUBLE, display_name="Viable Cells/mL")
    VICELLTOTALCELLS__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellTotalCells", FieldType.DOUBLE, display_name="Total Cells")
    VICELLTOTALCELLSML__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellTotalCellsMl", FieldType.DOUBLE, display_name="Total Cells/mL")
    VICELLTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellType", FieldType.STRING, display_name="Cell Type")
    VICELLVIABILITY__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellViability", FieldType.DOUBLE, display_name="% Viability")
    VICELLVIABLECELLS__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellViableCells", FieldType.DOUBLE, display_name="Viable Cells")
    VICELLVIABLECELLSML__FIELD_NAME: Final[WrapperField] = WrapperField("ViCellViableCellsMl", FieldType.DOUBLE, display_name="Viable Cells/mL")
    VIIA7RESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ViiA7Result.CreatedBy", FieldType.STRING, display_name="Created By")
    VIIA7RESULT_EXT_CT__FIELD_NAME: Final[WrapperField] = WrapperField("ViiA7Result.Ct", FieldType.DOUBLE, display_name="Ct")
    VIIA7RESULT_EXT_CTMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("ViiA7Result.CtMean", FieldType.DOUBLE, display_name="Ct Mean")
    VIIA7RESULT_EXT_CTSD__FIELD_NAME: Final[WrapperField] = WrapperField("ViiA7Result.CtSD", FieldType.DOUBLE, display_name="Ct SD")
    VIIA7RESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ViiA7Result.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    VIIA7RESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("ViiA7Result.DateCreated", FieldType.DATE, display_name="Date Created")
    VIIA7RESULT_EXT_QUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ViiA7Result.Quantity", FieldType.DOUBLE, display_name="Quantity")
    VIIA7RESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ViiA7Result.RecordId", FieldType.LONG, display_name="Record ID")
    VIIA7RESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ViiA7Result.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    VIIA7RESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("ViiA7Result.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    VIIA7RESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ViiA7Result.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VIIA7RESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ViiA7Result.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WELLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("WellPosition", FieldType.STRING, display_name="Well Position")
    NCOUNTERRESULT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("nCounterResult.CreatedBy", FieldType.STRING, display_name="Created By")
    NCOUNTERRESULT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("nCounterResult.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    NCOUNTERRESULT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("nCounterResult.DateCreated", FieldType.DATE, display_name="Date Created")
    NCOUNTERRESULT_EXT_PROBECOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("nCounterResult.ProbeCount", FieldType.DOUBLE, display_name="Probe Count")
    NCOUNTERRESULT_EXT_PROBENAME__FIELD_NAME: Final[WrapperField] = WrapperField("nCounterResult.ProbeName", FieldType.STRING, display_name="Probe Name")
    NCOUNTERRESULT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("nCounterResult.RecordId", FieldType.LONG, display_name="Record ID")
    NCOUNTERRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("nCounterResult.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    NCOUNTERRESULT_EXT_RELATEDRECORD157__FIELD_NAME: Final[WrapperField] = WrapperField("nCounterResult.RelatedRecord157", FieldType.PARENTLINK, display_name="Linked Instrument Datum")
    NCOUNTERRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("nCounterResult.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    NCOUNTERRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("nCounterResult.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_A230_field(self, value: Optional[float]):
        """
        Set data field with field name 'A230' on this record model
        """
        self.set_field_value(self.A230__FIELD_NAME.field_name, value)

    def get_A230_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A230' from this record model
        """
        return self.get_field_value(self.A230__FIELD_NAME.field_name)

    def set_A260_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260' on this record model
        """
        self.set_field_value(self.A260__FIELD_NAME.field_name, value)

    def get_A260_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260' from this record model
        """
        return self.get_field_value(self.A260__FIELD_NAME.field_name)

    def set_A260230_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260230' on this record model
        """
        self.set_field_value(self.A260230__FIELD_NAME.field_name, value)

    def get_A260230_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260230' from this record model
        """
        return self.get_field_value(self.A260230__FIELD_NAME.field_name)

    def set_A260280_field(self, value: Optional[float]):
        """
        Set data field with field name 'A260280' on this record model
        """
        self.set_field_value(self.A260280__FIELD_NAME.field_name, value)

    def get_A260280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A260280' from this record model
        """
        return self.get_field_value(self.A260280__FIELD_NAME.field_name)

    def set_A280_field(self, value: Optional[float]):
        """
        Set data field with field name 'A280' on this record model
        """
        self.set_field_value(self.A280__FIELD_NAME.field_name, value)

    def get_A280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A280' from this record model
        """
        return self.get_field_value(self.A280__FIELD_NAME.field_name)

    def set_A320_field(self, value: Optional[float]):
        """
        Set data field with field name 'A320' on this record model
        """
        self.set_field_value(self.A320__FIELD_NAME.field_name, value)

    def get_A320_field(self) -> Optional[float]:
        """
        Get data field value with field name 'A320' from this record model
        """
        return self.get_field_value(self.A320__FIELD_NAME.field_name)

    def set_ABI2700ResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ABI2700Result.CreatedBy' on this record model
        """
        self.set_field_value(self.ABI2700RESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_ABI2700ResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ABI2700Result.CreatedBy' from this record model
        """
        return self.get_field_value(self.ABI2700RESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_ABI2700ResultCt_field(self, value: Optional[float]):
        """
        Set data field with field name 'ABI2700Result.Ct' on this record model
        """
        self.set_field_value(self.ABI2700RESULT_EXT_CT__FIELD_NAME.field_name, value)

    def get_ABI2700ResultCt_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ABI2700Result.Ct' from this record model
        """
        return self.get_field_value(self.ABI2700RESULT_EXT_CT__FIELD_NAME.field_name)

    def set_ABI2700ResultCtSD_field(self, value: Optional[float]):
        """
        Set data field with field name 'ABI2700Result.CtSD' on this record model
        """
        self.set_field_value(self.ABI2700RESULT_EXT_CTSD__FIELD_NAME.field_name, value)

    def get_ABI2700ResultCtSD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ABI2700Result.CtSD' from this record model
        """
        return self.get_field_value(self.ABI2700RESULT_EXT_CTSD__FIELD_NAME.field_name)

    def set_ABI2700ResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'ABI2700Result.DateCreated' on this record model
        """
        self.set_field_value(self.ABI2700RESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_ABI2700ResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ABI2700Result.DateCreated' from this record model
        """
        return self.get_field_value(self.ABI2700RESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_ABI2700ResultDetector_field(self, value: Optional[str]):
        """
        Set data field with field name 'ABI2700Result.Detector' on this record model
        """
        self.set_field_value(self.ABI2700RESULT_EXT_DETECTOR__FIELD_NAME.field_name, value)

    def get_ABI2700ResultDetector_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ABI2700Result.Detector' from this record model
        """
        return self.get_field_value(self.ABI2700RESULT_EXT_DETECTOR__FIELD_NAME.field_name)

    def set_ABI2700ResultOtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ABI2700Result.OtherSampleId' on this record model
        """
        self.set_field_value(self.ABI2700RESULT_EXT_OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_ABI2700ResultOtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ABI2700Result.OtherSampleId' from this record model
        """
        return self.get_field_value(self.ABI2700RESULT_EXT_OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_ABI2700ResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ABI2700Result.RecordId' on this record model
        """
        self.set_field_value(self.ABI2700RESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_ABI2700ResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ABI2700Result.RecordId' from this record model
        """
        return self.get_field_value(self.ABI2700RESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_ABI2700ResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ABI2700Result.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.ABI2700RESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_ABI2700ResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ABI2700Result.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.ABI2700RESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_ABI2700ResultSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ABI2700Result.SampleId' on this record model
        """
        self.set_field_value(self.ABI2700RESULT_EXT_SAMPLEID__FIELD_NAME.field_name, value)

    def get_ABI2700ResultSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ABI2700Result.SampleId' from this record model
        """
        return self.get_field_value(self.ABI2700RESULT_EXT_SAMPLEID__FIELD_NAME.field_name)

    def set_ABI2700ResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ABI2700Result.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.ABI2700RESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_ABI2700ResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ABI2700Result.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.ABI2700RESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_ABI2700ResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ABI2700Result.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.ABI2700RESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_ABI2700ResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ABI2700Result.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.ABI2700RESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_ABI2700ResultWell_field(self, value: Optional[str]):
        """
        Set data field with field name 'ABI2700Result.Well' on this record model
        """
        self.set_field_value(self.ABI2700RESULT_EXT_WELL__FIELD_NAME.field_name, value)

    def get_ABI2700ResultWell_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ABI2700Result.Well' from this record model
        """
        return self.get_field_value(self.ABI2700RESULT_EXT_WELL__FIELD_NAME.field_name)

    def set_AlignedMigrationTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'AlignedMigrationTime' on this record model
        """
        self.set_field_value(self.ALIGNEDMIGRATIONTIME__FIELD_NAME.field_name, value)

    def get_AlignedMigrationTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AlignedMigrationTime' from this record model
        """
        return self.get_field_value(self.ALIGNEDMIGRATIONTIME__FIELD_NAME.field_name)

    def set_Analyte_field(self, value: Optional[str]):
        """
        Set data field with field name 'Analyte' on this record model
        """
        self.set_field_value(self.ANALYTE__FIELD_NAME.field_name, value)

    def get_Analyte_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Analyte' from this record model
        """
        return self.get_field_value(self.ANALYTE__FIELD_NAME.field_name)

    def set_AnalyteQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'AnalyteQuantity' on this record model
        """
        self.set_field_value(self.ANALYTEQUANTITY__FIELD_NAME.field_name, value)

    def get_AnalyteQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AnalyteQuantity' from this record model
        """
        return self.get_field_value(self.ANALYTEQUANTITY__FIELD_NAME.field_name)

    def set_Area_field(self, value: Optional[float]):
        """
        Set data field with field name 'Area' on this record model
        """
        self.set_field_value(self.AREA__FIELD_NAME.field_name, value)

    def get_Area_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Area' from this record model
        """
        return self.get_field_value(self.AREA__FIELD_NAME.field_name)

    def set_Attachments_field(self, value: Optional[str]):
        """
        Set data field with field name 'Attachments' on this record model
        """
        self.set_field_value(self.ATTACHMENTS__FIELD_NAME.field_name, value)

    def get_Attachments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Attachments' from this record model
        """
        return self.get_field_value(self.ATTACHMENTS__FIELD_NAME.field_name)

    def set_AverageConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'AverageConcentration' on this record model
        """
        self.set_field_value(self.AVERAGECONCENTRATION__FIELD_NAME.field_name, value)

    def get_AverageConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AverageConcentration' from this record model
        """
        return self.get_field_value(self.AVERAGECONCENTRATION__FIELD_NAME.field_name)

    def set_AvgSize_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgSize' on this record model
        """
        self.set_field_value(self.AVGSIZE__FIELD_NAME.field_name, value)

    def get_AvgSize_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgSize' from this record model
        """
        return self.get_field_value(self.AVGSIZE__FIELD_NAME.field_name)

    def set_BaselineEnd_field(self, value: Optional[int]):
        """
        Set data field with field name 'BaselineEnd' on this record model
        """
        self.set_field_value(self.BASELINEEND__FIELD_NAME.field_name, value)

    def get_BaselineEnd_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BaselineEnd' from this record model
        """
        return self.get_field_value(self.BASELINEEND__FIELD_NAME.field_name)

    def set_BaselineStart_field(self, value: Optional[int]):
        """
        Set data field with field name 'BaselineStart' on this record model
        """
        self.set_field_value(self.BASELINESTART__FIELD_NAME.field_name, value)

    def get_BaselineStart_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BaselineStart' from this record model
        """
        return self.get_field_value(self.BASELINESTART__FIELD_NAME.field_name)

    def set_BioAnalyzerResultArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'BioAnalyzerResult.Area' on this record model
        """
        self.set_field_value(self.BIOANALYZERRESULT_EXT_AREA__FIELD_NAME.field_name, value)

    def get_BioAnalyzerResultArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BioAnalyzerResult.Area' from this record model
        """
        return self.get_field_value(self.BIOANALYZERRESULT_EXT_AREA__FIELD_NAME.field_name)

    def set_BioAnalyzerResultAvgBPSize_field(self, value: Optional[float]):
        """
        Set data field with field name 'BioAnalyzerResult.AvgBPSize' on this record model
        """
        self.set_field_value(self.BIOANALYZERRESULT_EXT_AVGBPSIZE__FIELD_NAME.field_name, value)

    def get_BioAnalyzerResultAvgBPSize_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BioAnalyzerResult.AvgBPSize' from this record model
        """
        return self.get_field_value(self.BIOANALYZERRESULT_EXT_AVGBPSIZE__FIELD_NAME.field_name)

    def set_BioAnalyzerResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioAnalyzerResult.CreatedBy' on this record model
        """
        self.set_field_value(self.BIOANALYZERRESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_BioAnalyzerResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioAnalyzerResult.CreatedBy' from this record model
        """
        return self.get_field_value(self.BIOANALYZERRESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_BioAnalyzerResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioAnalyzerResult.DateCreated' on this record model
        """
        self.set_field_value(self.BIOANALYZERRESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_BioAnalyzerResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioAnalyzerResult.DateCreated' from this record model
        """
        return self.get_field_value(self.BIOANALYZERRESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_BioAnalyzerResultMolarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'BioAnalyzerResult.Molarity' on this record model
        """
        self.set_field_value(self.BIOANALYZERRESULT_EXT_MOLARITY__FIELD_NAME.field_name, value)

    def get_BioAnalyzerResultMolarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BioAnalyzerResult.Molarity' from this record model
        """
        return self.get_field_value(self.BIOANALYZERRESULT_EXT_MOLARITY__FIELD_NAME.field_name)

    def set_BioAnalyzerResultMolarityUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioAnalyzerResult.MolarityUnits' on this record model
        """
        self.set_field_value(self.BIOANALYZERRESULT_EXT_MOLARITYUNITS__FIELD_NAME.field_name, value)

    def get_BioAnalyzerResultMolarityUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioAnalyzerResult.MolarityUnits' from this record model
        """
        return self.get_field_value(self.BIOANALYZERRESULT_EXT_MOLARITYUNITS__FIELD_NAME.field_name)

    def set_BioAnalyzerResultPeakRegionIdentifier_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioAnalyzerResult.PeakRegionIdentifier' on this record model
        """
        self.set_field_value(self.BIOANALYZERRESULT_EXT_PEAKREGIONIDENTIFIER__FIELD_NAME.field_name, value)

    def get_BioAnalyzerResultPeakRegionIdentifier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioAnalyzerResult.PeakRegionIdentifier' from this record model
        """
        return self.get_field_value(self.BIOANALYZERRESULT_EXT_PEAKREGIONIDENTIFIER__FIELD_NAME.field_name)

    def set_BioAnalyzerResultPeakValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'BioAnalyzerResult.PeakValue' on this record model
        """
        self.set_field_value(self.BIOANALYZERRESULT_EXT_PEAKVALUE__FIELD_NAME.field_name, value)

    def get_BioAnalyzerResultPeakValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BioAnalyzerResult.PeakValue' from this record model
        """
        return self.get_field_value(self.BIOANALYZERRESULT_EXT_PEAKVALUE__FIELD_NAME.field_name)

    def set_BioAnalyzerResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioAnalyzerResult.RecordId' on this record model
        """
        self.set_field_value(self.BIOANALYZERRESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_BioAnalyzerResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioAnalyzerResult.RecordId' from this record model
        """
        return self.get_field_value(self.BIOANALYZERRESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_BioAnalyzerResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioAnalyzerResult.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.BIOANALYZERRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_BioAnalyzerResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioAnalyzerResult.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.BIOANALYZERRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_BioAnalyzerResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioAnalyzerResult.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.BIOANALYZERRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_BioAnalyzerResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioAnalyzerResult.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.BIOANALYZERRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_BioAnalyzerResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioAnalyzerResult.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.BIOANALYZERRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_BioAnalyzerResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioAnalyzerResult.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.BIOANALYZERRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_BioRadResultBiologicalSetName_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioRadResult.BiologicalSetName' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_BIOLOGICALSETNAME__FIELD_NAME.field_name, value)

    def get_BioRadResultBiologicalSetName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioRadResult.BiologicalSetName' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_BIOLOGICALSETNAME__FIELD_NAME.field_name)

    def set_BioRadResultContent_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioRadResult.Content' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_CONTENT__FIELD_NAME.field_name, value)

    def get_BioRadResultContent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioRadResult.Content' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_CONTENT__FIELD_NAME.field_name)

    def set_BioRadResultCq_field(self, value: Optional[float]):
        """
        Set data field with field name 'BioRadResult.Cq' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_CQ__FIELD_NAME.field_name, value)

    def get_BioRadResultCq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BioRadResult.Cq' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_CQ__FIELD_NAME.field_name)

    def set_BioRadResultCqMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'BioRadResult.CqMean' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_CQMEAN__FIELD_NAME.field_name, value)

    def get_BioRadResultCqMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BioRadResult.CqMean' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_CQMEAN__FIELD_NAME.field_name)

    def set_BioRadResultCqStdDev_field(self, value: Optional[float]):
        """
        Set data field with field name 'BioRadResult.CqStdDev' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_CQSTDDEV__FIELD_NAME.field_name, value)

    def get_BioRadResultCqStdDev_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BioRadResult.CqStdDev' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_CQSTDDEV__FIELD_NAME.field_name)

    def set_BioRadResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioRadResult.CreatedBy' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_BioRadResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioRadResult.CreatedBy' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_BioRadResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioRadResult.DateCreated' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_BioRadResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioRadResult.DateCreated' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_BioRadResultFluor_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioRadResult.Fluor' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_FLUOR__FIELD_NAME.field_name, value)

    def get_BioRadResultFluor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioRadResult.Fluor' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_FLUOR__FIELD_NAME.field_name)

    def set_BioRadResultLogStartingQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'BioRadResult.LogStartingQuantity' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_LOGSTARTINGQUANTITY__FIELD_NAME.field_name, value)

    def get_BioRadResultLogStartingQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BioRadResult.LogStartingQuantity' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_LOGSTARTINGQUANTITY__FIELD_NAME.field_name)

    def set_BioRadResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioRadResult.RecordId' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_BioRadResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioRadResult.RecordId' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_BioRadResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioRadResult.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_BioRadResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioRadResult.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_BioRadResultSQMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'BioRadResult.SQMean' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_SQMEAN__FIELD_NAME.field_name, value)

    def get_BioRadResultSQMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BioRadResult.SQMean' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_SQMEAN__FIELD_NAME.field_name)

    def set_BioRadResultSQStdDev_field(self, value: Optional[float]):
        """
        Set data field with field name 'BioRadResult.SQStdDev' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_SQSTDDEV__FIELD_NAME.field_name, value)

    def get_BioRadResultSQStdDev_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BioRadResult.SQStdDev' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_SQSTDDEV__FIELD_NAME.field_name)

    def set_BioRadResultSetPoint_field(self, value: Optional[float]):
        """
        Set data field with field name 'BioRadResult.SetPoint' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_SETPOINT__FIELD_NAME.field_name, value)

    def get_BioRadResultSetPoint_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BioRadResult.SetPoint' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_SETPOINT__FIELD_NAME.field_name)

    def set_BioRadResultTarget_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioRadResult.Target' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_TARGET__FIELD_NAME.field_name, value)

    def get_BioRadResultTarget_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioRadResult.Target' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_TARGET__FIELD_NAME.field_name)

    def set_BioRadResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioRadResult.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_BioRadResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioRadResult.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_BioRadResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioRadResult.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_BioRadResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioRadResult.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_BioRadResultWellNote_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioRadResult.WellNote' on this record model
        """
        self.set_field_value(self.BIORADRESULT_EXT_WELLNOTE__FIELD_NAME.field_name, value)

    def get_BioRadResultWellNote_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioRadResult.WellNote' from this record model
        """
        return self.get_field_value(self.BIORADRESULT_EXT_WELLNOTE__FIELD_NAME.field_name)

    def set_BioSpecResultA260230_field(self, value: Optional[float]):
        """
        Set data field with field name 'BioSpecResult.A260230' on this record model
        """
        self.set_field_value(self.BIOSPECRESULT_EXT_A260230__FIELD_NAME.field_name, value)

    def get_BioSpecResultA260230_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BioSpecResult.A260230' from this record model
        """
        return self.get_field_value(self.BIOSPECRESULT_EXT_A260230__FIELD_NAME.field_name)

    def set_BioSpecResultA260280_field(self, value: Optional[float]):
        """
        Set data field with field name 'BioSpecResult.A260280' on this record model
        """
        self.set_field_value(self.BIOSPECRESULT_EXT_A260280__FIELD_NAME.field_name, value)

    def get_BioSpecResultA260280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BioSpecResult.A260280' from this record model
        """
        return self.get_field_value(self.BIOSPECRESULT_EXT_A260280__FIELD_NAME.field_name)

    def set_BioSpecResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioSpecResult.CreatedBy' on this record model
        """
        self.set_field_value(self.BIOSPECRESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_BioSpecResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioSpecResult.CreatedBy' from this record model
        """
        return self.get_field_value(self.BIOSPECRESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_BioSpecResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioSpecResult.DateCreated' on this record model
        """
        self.set_field_value(self.BIOSPECRESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_BioSpecResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioSpecResult.DateCreated' from this record model
        """
        return self.get_field_value(self.BIOSPECRESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_BioSpecResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioSpecResult.RecordId' on this record model
        """
        self.set_field_value(self.BIOSPECRESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_BioSpecResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioSpecResult.RecordId' from this record model
        """
        return self.get_field_value(self.BIOSPECRESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_BioSpecResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioSpecResult.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.BIOSPECRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_BioSpecResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioSpecResult.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.BIOSPECRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_BioSpecResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioSpecResult.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.BIOSPECRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_BioSpecResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioSpecResult.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.BIOSPECRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_BioSpecResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioSpecResult.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.BIOSPECRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_BioSpecResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioSpecResult.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.BIOSPECRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_CV_field(self, value: Optional[float]):
        """
        Set data field with field name 'CV' on this record model
        """
        self.set_field_value(self.CV__FIELD_NAME.field_name, value)

    def get_CV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CV' from this record model
        """
        return self.get_field_value(self.CV__FIELD_NAME.field_name)

    def set_CalculatedConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedConcentration' on this record model
        """
        self.set_field_value(self.CALCULATEDCONCENTRATION__FIELD_NAME.field_name, value)

    def get_CalculatedConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedConcentration' from this record model
        """
        return self.get_field_value(self.CALCULATEDCONCENTRATION__FIELD_NAME.field_name)

    def set_CalculatedConcentrationMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedConcentrationMean' on this record model
        """
        self.set_field_value(self.CALCULATEDCONCENTRATIONMEAN__FIELD_NAME.field_name, value)

    def get_CalculatedConcentrationMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedConcentrationMean' from this record model
        """
        return self.get_field_value(self.CALCULATEDCONCENTRATIONMEAN__FIELD_NAME.field_name)

    def set_CalculatedMolarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedMolarity' on this record model
        """
        self.set_field_value(self.CALCULATEDMOLARITY__FIELD_NAME.field_name, value)

    def get_CalculatedMolarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedMolarity' from this record model
        """
        return self.get_field_value(self.CALCULATEDMOLARITY__FIELD_NAME.field_name)

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def set_Color_field(self, value: Optional[int]):
        """
        Set data field with field name 'Color' on this record model
        """
        self.set_field_value(self.COLOR__FIELD_NAME.field_name, value)

    def get_Color_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Color' from this record model
        """
        return self.get_field_value(self.COLOR__FIELD_NAME.field_name)

    def set_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Concentration' on this record model
        """
        self.set_field_value(self.CONCENTRATION__FIELD_NAME.field_name, value)

    def get_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Concentration' from this record model
        """
        return self.get_field_value(self.CONCENTRATION__FIELD_NAME.field_name)

    def set_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConcentrationUnits' on this record model
        """
        self.set_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_Cq_field(self, value: Optional[float]):
        """
        Set data field with field name 'Cq' on this record model
        """
        self.set_field_value(self.CQ__FIELD_NAME.field_name, value)

    def get_Cq_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Cq' from this record model
        """
        return self.get_field_value(self.CQ__FIELD_NAME.field_name)

    def set_CqMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'CqMean' on this record model
        """
        self.set_field_value(self.CQMEAN__FIELD_NAME.field_name, value)

    def get_CqMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CqMean' from this record model
        """
        return self.get_field_value(self.CQMEAN__FIELD_NAME.field_name)

    def set_CqStdDev_field(self, value: Optional[float]):
        """
        Set data field with field name 'CqStdDev' on this record model
        """
        self.set_field_value(self.CQSTDDEV__FIELD_NAME.field_name, value)

    def get_CqStdDev_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CqStdDev' from this record model
        """
        return self.get_field_value(self.CQSTDDEV__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_Ct_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ct' on this record model
        """
        self.set_field_value(self.CT__FIELD_NAME.field_name, value)

    def get_Ct_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ct' from this record model
        """
        return self.get_field_value(self.CT__FIELD_NAME.field_name)

    def set_CtMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtMean' on this record model
        """
        self.set_field_value(self.CTMEAN__FIELD_NAME.field_name, value)

    def get_CtMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtMean' from this record model
        """
        return self.get_field_value(self.CTMEAN__FIELD_NAME.field_name)

    def set_CtSD_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtSD' on this record model
        """
        self.set_field_value(self.CTSD__FIELD_NAME.field_name, value)

    def get_CtSD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtSD' from this record model
        """
        return self.get_field_value(self.CTSD__FIELD_NAME.field_name)

    def set_CtThreshold_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtThreshold' on this record model
        """
        self.set_field_value(self.CTTHRESHOLD__FIELD_NAME.field_name, value)

    def get_CtThreshold_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtThreshold' from this record model
        """
        return self.get_field_value(self.CTTHRESHOLD__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateTime' on this record model
        """
        self.set_field_value(self.DATETIME__FIELD_NAME.field_name, value)

    def get_DateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateTime' from this record model
        """
        return self.get_field_value(self.DATETIME__FIELD_NAME.field_name)

    def set_DatumType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DatumType' on this record model
        """
        self.set_field_value(self.DATUMTYPE__FIELD_NAME.field_name, value)

    def get_DatumType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DatumType' from this record model
        """
        return self.get_field_value(self.DATUMTYPE__FIELD_NAME.field_name)

    def set_DetectionRange_field(self, value: Optional[str]):
        """
        Set data field with field name 'DetectionRange' on this record model
        """
        self.set_field_value(self.DETECTIONRANGE__FIELD_NAME.field_name, value)

    def get_DetectionRange_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DetectionRange' from this record model
        """
        return self.get_field_value(self.DETECTIONRANGE__FIELD_NAME.field_name)

    def set_DilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'DilutionFactor' on this record model
        """
        self.set_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_DilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DilutionFactor' from this record model
        """
        return self.get_field_value(self.DILUTIONFACTOR__FIELD_NAME.field_name)

    def set_DropSenseA260ResultA260230_field(self, value: Optional[float]):
        """
        Set data field with field name 'DropSenseA260Result.A260230' on this record model
        """
        self.set_field_value(self.DROPSENSEA260RESULT_EXT_A260230__FIELD_NAME.field_name, value)

    def get_DropSenseA260ResultA260230_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DropSenseA260Result.A260230' from this record model
        """
        return self.get_field_value(self.DROPSENSEA260RESULT_EXT_A260230__FIELD_NAME.field_name)

    def set_DropSenseA260ResultA260280_field(self, value: Optional[float]):
        """
        Set data field with field name 'DropSenseA260Result.A260280' on this record model
        """
        self.set_field_value(self.DROPSENSEA260RESULT_EXT_A260280__FIELD_NAME.field_name, value)

    def get_DropSenseA260ResultA260280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DropSenseA260Result.A260280' from this record model
        """
        return self.get_field_value(self.DROPSENSEA260RESULT_EXT_A260280__FIELD_NAME.field_name)

    def set_DropSenseA260ResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'DropSenseA260Result.CreatedBy' on this record model
        """
        self.set_field_value(self.DROPSENSEA260RESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_DropSenseA260ResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DropSenseA260Result.CreatedBy' from this record model
        """
        return self.get_field_value(self.DROPSENSEA260RESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_DropSenseA260ResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'DropSenseA260Result.DateCreated' on this record model
        """
        self.set_field_value(self.DROPSENSEA260RESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_DropSenseA260ResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DropSenseA260Result.DateCreated' from this record model
        """
        return self.get_field_value(self.DROPSENSEA260RESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_DropSenseA260ResultDilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'DropSenseA260Result.DilutionFactor' on this record model
        """
        self.set_field_value(self.DROPSENSEA260RESULT_EXT_DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_DropSenseA260ResultDilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DropSenseA260Result.DilutionFactor' from this record model
        """
        return self.get_field_value(self.DROPSENSEA260RESULT_EXT_DILUTIONFACTOR__FIELD_NAME.field_name)

    def set_DropSenseA260ResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'DropSenseA260Result.RecordId' on this record model
        """
        self.set_field_value(self.DROPSENSEA260RESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_DropSenseA260ResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DropSenseA260Result.RecordId' from this record model
        """
        return self.get_field_value(self.DROPSENSEA260RESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_DropSenseA260ResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'DropSenseA260Result.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.DROPSENSEA260RESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_DropSenseA260ResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DropSenseA260Result.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.DROPSENSEA260RESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_DropSenseA260ResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'DropSenseA260Result.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.DROPSENSEA260RESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_DropSenseA260ResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DropSenseA260Result.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.DROPSENSEA260RESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_DropSenseA260ResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'DropSenseA260Result.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.DROPSENSEA260RESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_DropSenseA260ResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DropSenseA260Result.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.DROPSENSEA260RESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_DropSenseA280ResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'DropSenseA280Result.CreatedBy' on this record model
        """
        self.set_field_value(self.DROPSENSEA280RESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_DropSenseA280ResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DropSenseA280Result.CreatedBy' from this record model
        """
        return self.get_field_value(self.DROPSENSEA280RESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_DropSenseA280ResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'DropSenseA280Result.DateCreated' on this record model
        """
        self.set_field_value(self.DROPSENSEA280RESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_DropSenseA280ResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DropSenseA280Result.DateCreated' from this record model
        """
        return self.get_field_value(self.DROPSENSEA280RESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_DropSenseA280ResultExtinctionCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'DropSenseA280Result.ExtinctionCoefficient' on this record model
        """
        self.set_field_value(self.DROPSENSEA280RESULT_EXT_EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_DropSenseA280ResultExtinctionCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DropSenseA280Result.ExtinctionCoefficient' from this record model
        """
        return self.get_field_value(self.DROPSENSEA280RESULT_EXT_EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name)

    def set_DropSenseA280ResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'DropSenseA280Result.RecordId' on this record model
        """
        self.set_field_value(self.DROPSENSEA280RESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_DropSenseA280ResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DropSenseA280Result.RecordId' from this record model
        """
        return self.get_field_value(self.DROPSENSEA280RESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_DropSenseA280ResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'DropSenseA280Result.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.DROPSENSEA280RESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_DropSenseA280ResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DropSenseA280Result.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.DROPSENSEA280RESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_DropSenseA280ResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'DropSenseA280Result.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.DROPSENSEA280RESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_DropSenseA280ResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DropSenseA280Result.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.DROPSENSEA280RESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_DropSenseA280ResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'DropSenseA280Result.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.DROPSENSEA280RESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_DropSenseA280ResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DropSenseA280Result.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.DROPSENSEA280RESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_EntryId_field(self, value: Optional[int]):
        """
        Set data field with field name 'EntryId' on this record model
        """
        self.set_field_value(self.ENTRYID__FIELD_NAME.field_name, value)

    def get_EntryId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EntryId' from this record model
        """
        return self.get_field_value(self.ENTRYID__FIELD_NAME.field_name)

    def set_ExperimentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExperimentRecordId' on this record model
        """
        self.set_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name, value)

    def get_ExperimentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExperimentRecordId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTRECORDID__FIELD_NAME.field_name)

    def set_ExtinctionCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExtinctionCoefficient' on this record model
        """
        self.set_field_value(self.EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_ExtinctionCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExtinctionCoefficient' from this record model
        """
        return self.get_field_value(self.EXTINCTIONCOEFFICIENT__FIELD_NAME.field_name)

    def set_FACSPopCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'FACSPopCount' on this record model
        """
        self.set_field_value(self.FACSPOPCOUNT__FIELD_NAME.field_name, value)

    def get_FACSPopCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FACSPopCount' from this record model
        """
        return self.get_field_value(self.FACSPOPCOUNT__FIELD_NAME.field_name)

    def set_FACSPopulation_field(self, value: Optional[str]):
        """
        Set data field with field name 'FACSPopulation' on this record model
        """
        self.set_field_value(self.FACSPOPULATION__FIELD_NAME.field_name, value)

    def get_FACSPopulation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FACSPopulation' from this record model
        """
        return self.get_field_value(self.FACSPOPULATION__FIELD_NAME.field_name)

    def set_FACSSubPopulation_field(self, value: Optional[str]):
        """
        Set data field with field name 'FACSSubPopulation' on this record model
        """
        self.set_field_value(self.FACSSUBPOPULATION__FIELD_NAME.field_name, value)

    def get_FACSSubPopulation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FACSSubPopulation' from this record model
        """
        return self.get_field_value(self.FACSSUBPOPULATION__FIELD_NAME.field_name)

    def set_FermentationResultAGIT_field(self, value: Optional[float]):
        """
        Set data field with field name 'FermentationResult.AGIT' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_AGIT__FIELD_NAME.field_name, value)

    def get_FermentationResultAGIT_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FermentationResult.AGIT' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_AGIT__FIELD_NAME.field_name)

    def set_FermentationResultAIR_field(self, value: Optional[float]):
        """
        Set data field with field name 'FermentationResult.AIR' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_AIR__FIELD_NAME.field_name, value)

    def get_FermentationResultAIR_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FermentationResult.AIR' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_AIR__FIELD_NAME.field_name)

    def set_FermentationResultCER_field(self, value: Optional[float]):
        """
        Set data field with field name 'FermentationResult.CER' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_CER__FIELD_NAME.field_name, value)

    def get_FermentationResultCER_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FermentationResult.CER' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_CER__FIELD_NAME.field_name)

    def set_FermentationResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'FermentationResult.CreatedBy' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_FermentationResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FermentationResult.CreatedBy' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_FermentationResultDO1_field(self, value: Optional[float]):
        """
        Set data field with field name 'FermentationResult.DO1' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_DO1__FIELD_NAME.field_name, value)

    def get_FermentationResultDO1_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FermentationResult.DO1' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_DO1__FIELD_NAME.field_name)

    def set_FermentationResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'FermentationResult.DateCreated' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_FermentationResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FermentationResult.DateCreated' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_FermentationResultLH_field(self, value: Optional[float]):
        """
        Set data field with field name 'FermentationResult.LH' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_LH__FIELD_NAME.field_name, value)

    def get_FermentationResultLH_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FermentationResult.LH' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_LH__FIELD_NAME.field_name)

    def set_FermentationResultO2_field(self, value: Optional[float]):
        """
        Set data field with field name 'FermentationResult.O2' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_O2__FIELD_NAME.field_name, value)

    def get_FermentationResultO2_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FermentationResult.O2' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_O2__FIELD_NAME.field_name)

    def set_FermentationResultOUR_field(self, value: Optional[float]):
        """
        Set data field with field name 'FermentationResult.OUR' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_OUR__FIELD_NAME.field_name, value)

    def get_FermentationResultOUR_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FermentationResult.OUR' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_OUR__FIELD_NAME.field_name)

    def set_FermentationResultPH_field(self, value: Optional[float]):
        """
        Set data field with field name 'FermentationResult.PH' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_PH__FIELD_NAME.field_name, value)

    def get_FermentationResultPH_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FermentationResult.PH' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_PH__FIELD_NAME.field_name)

    def set_FermentationResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'FermentationResult.RecordId' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_FermentationResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FermentationResult.RecordId' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_FermentationResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'FermentationResult.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_FermentationResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FermentationResult.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_FermentationResultTOTFLOW_field(self, value: Optional[float]):
        """
        Set data field with field name 'FermentationResult.TOTFLOW' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_TOTFLOW__FIELD_NAME.field_name, value)

    def get_FermentationResultTOTFLOW_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FermentationResult.TOTFLOW' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_TOTFLOW__FIELD_NAME.field_name)

    def set_FermentationResultTemperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'FermentationResult.Temperature' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_TEMPERATURE__FIELD_NAME.field_name, value)

    def get_FermentationResultTemperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FermentationResult.Temperature' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_TEMPERATURE__FIELD_NAME.field_name)

    def set_FermentationResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'FermentationResult.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_FermentationResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FermentationResult.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_FermentationResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'FermentationResult.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.FERMENTATIONRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_FermentationResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FermentationResult.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.FERMENTATIONRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_FileSourceDirectory_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileSourceDirectory' on this record model
        """
        self.set_field_value(self.FILESOURCEDIRECTORY__FIELD_NAME.field_name, value)

    def get_FileSourceDirectory_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileSourceDirectory' from this record model
        """
        return self.get_field_value(self.FILESOURCEDIRECTORY__FIELD_NAME.field_name)

    def set_FracRetentionTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'FracRetentionTime' on this record model
        """
        self.set_field_value(self.FRACRETENTIONTIME__FIELD_NAME.field_name, value)

    def get_FracRetentionTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FracRetentionTime' from this record model
        """
        return self.get_field_value(self.FRACRETENTIONTIME__FIELD_NAME.field_name)

    def set_FracTFAAreaPercentTotal_field(self, value: Optional[float]):
        """
        Set data field with field name 'FracTFAAreaPercentTotal' on this record model
        """
        self.set_field_value(self.FRACTFAAREAPERCENTTOTAL__FIELD_NAME.field_name, value)

    def get_FracTFAAreaPercentTotal_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FracTFAAreaPercentTotal' from this record model
        """
        return self.get_field_value(self.FRACTFAAREAPERCENTTOTAL__FIELD_NAME.field_name)

    def set_FracTFAIsFound_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FracTFAIsFound' on this record model
        """
        self.set_field_value(self.FRACTFAISFOUND__FIELD_NAME.field_name, value)

    def get_FracTFAIsFound_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FracTFAIsFound' from this record model
        """
        return self.get_field_value(self.FRACTFAISFOUND__FIELD_NAME.field_name)

    def set_FractionSites_field(self, value: Optional[str]):
        """
        Set data field with field name 'FractionSites' on this record model
        """
        self.set_field_value(self.FRACTIONSITES__FIELD_NAME.field_name, value)

    def get_FractionSites_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FractionSites' from this record model
        """
        return self.get_field_value(self.FRACTIONSITES__FIELD_NAME.field_name)

    def set_FragmentAnalyzerResultAvgBPSize_field(self, value: Optional[float]):
        """
        Set data field with field name 'FragmentAnalyzerResult.AvgBPSize' on this record model
        """
        self.set_field_value(self.FRAGMENTANALYZERRESULT_EXT_AVGBPSIZE__FIELD_NAME.field_name, value)

    def get_FragmentAnalyzerResultAvgBPSize_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FragmentAnalyzerResult.AvgBPSize' from this record model
        """
        return self.get_field_value(self.FRAGMENTANALYZERRESULT_EXT_AVGBPSIZE__FIELD_NAME.field_name)

    def set_FragmentAnalyzerResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'FragmentAnalyzerResult.CreatedBy' on this record model
        """
        self.set_field_value(self.FRAGMENTANALYZERRESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_FragmentAnalyzerResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FragmentAnalyzerResult.CreatedBy' from this record model
        """
        return self.get_field_value(self.FRAGMENTANALYZERRESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_FragmentAnalyzerResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'FragmentAnalyzerResult.DateCreated' on this record model
        """
        self.set_field_value(self.FRAGMENTANALYZERRESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_FragmentAnalyzerResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FragmentAnalyzerResult.DateCreated' from this record model
        """
        return self.get_field_value(self.FRAGMENTANALYZERRESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_FragmentAnalyzerResultMolarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'FragmentAnalyzerResult.Molarity' on this record model
        """
        self.set_field_value(self.FRAGMENTANALYZERRESULT_EXT_MOLARITY__FIELD_NAME.field_name, value)

    def get_FragmentAnalyzerResultMolarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'FragmentAnalyzerResult.Molarity' from this record model
        """
        return self.get_field_value(self.FRAGMENTANALYZERRESULT_EXT_MOLARITY__FIELD_NAME.field_name)

    def set_FragmentAnalyzerResultMolarityUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'FragmentAnalyzerResult.MolarityUnits' on this record model
        """
        self.set_field_value(self.FRAGMENTANALYZERRESULT_EXT_MOLARITYUNITS__FIELD_NAME.field_name, value)

    def get_FragmentAnalyzerResultMolarityUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FragmentAnalyzerResult.MolarityUnits' from this record model
        """
        return self.get_field_value(self.FRAGMENTANALYZERRESULT_EXT_MOLARITYUNITS__FIELD_NAME.field_name)

    def set_FragmentAnalyzerResultPeakRegionIdentifier_field(self, value: Optional[str]):
        """
        Set data field with field name 'FragmentAnalyzerResult.PeakRegionIdentifier' on this record model
        """
        self.set_field_value(self.FRAGMENTANALYZERRESULT_EXT_PEAKREGIONIDENTIFIER__FIELD_NAME.field_name, value)

    def get_FragmentAnalyzerResultPeakRegionIdentifier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FragmentAnalyzerResult.PeakRegionIdentifier' from this record model
        """
        return self.get_field_value(self.FRAGMENTANALYZERRESULT_EXT_PEAKREGIONIDENTIFIER__FIELD_NAME.field_name)

    def set_FragmentAnalyzerResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'FragmentAnalyzerResult.RecordId' on this record model
        """
        self.set_field_value(self.FRAGMENTANALYZERRESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_FragmentAnalyzerResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FragmentAnalyzerResult.RecordId' from this record model
        """
        return self.get_field_value(self.FRAGMENTANALYZERRESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_FragmentAnalyzerResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'FragmentAnalyzerResult.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.FRAGMENTANALYZERRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_FragmentAnalyzerResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FragmentAnalyzerResult.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.FRAGMENTANALYZERRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_FragmentAnalyzerResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'FragmentAnalyzerResult.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.FRAGMENTANALYZERRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_FragmentAnalyzerResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FragmentAnalyzerResult.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.FRAGMENTANALYZERRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_FragmentAnalyzerResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'FragmentAnalyzerResult.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.FRAGMENTANALYZERRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_FragmentAnalyzerResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FragmentAnalyzerResult.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.FRAGMENTANALYZERRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_FromTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'FromTime' on this record model
        """
        self.set_field_value(self.FROMTIME__FIELD_NAME.field_name, value)

    def get_FromTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FromTime' from this record model
        """
        return self.get_field_value(self.FROMTIME__FIELD_NAME.field_name)

    def set_GeneExpressed_field(self, value: Optional[str]):
        """
        Set data field with field name 'GeneExpressed' on this record model
        """
        self.set_field_value(self.GENEEXPRESSED__FIELD_NAME.field_name, value)

    def get_GeneExpressed_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GeneExpressed' from this record model
        """
        return self.get_field_value(self.GENEEXPRESSED__FIELD_NAME.field_name)

    def set_GeneExpressionValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'GeneExpressionValue' on this record model
        """
        self.set_field_value(self.GENEEXPRESSIONVALUE__FIELD_NAME.field_name, value)

    def get_GeneExpressionValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'GeneExpressionValue' from this record model
        """
        return self.get_field_value(self.GENEEXPRESSIONVALUE__FIELD_NAME.field_name)

    def set_GrossWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'GrossWeight' on this record model
        """
        self.set_field_value(self.GROSSWEIGHT__FIELD_NAME.field_name, value)

    def get_GrossWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'GrossWeight' from this record model
        """
        return self.get_field_value(self.GROSSWEIGHT__FIELD_NAME.field_name)

    def set_InhibitionCalcCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'InhibitionCalc.CreatedBy' on this record model
        """
        self.set_field_value(self.INHIBITIONCALC_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_InhibitionCalcCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InhibitionCalc.CreatedBy' from this record model
        """
        return self.get_field_value(self.INHIBITIONCALC_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_InhibitionCalcDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'InhibitionCalc.DateCreated' on this record model
        """
        self.set_field_value(self.INHIBITIONCALC_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_InhibitionCalcDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'InhibitionCalc.DateCreated' from this record model
        """
        return self.get_field_value(self.INHIBITIONCALC_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_InhibitionCalcParentSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'InhibitionCalc.ParentSampleId' on this record model
        """
        self.set_field_value(self.INHIBITIONCALC_EXT_PARENTSAMPLEID__FIELD_NAME.field_name, value)

    def get_InhibitionCalcParentSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InhibitionCalc.ParentSampleId' from this record model
        """
        return self.get_field_value(self.INHIBITIONCALC_EXT_PARENTSAMPLEID__FIELD_NAME.field_name)

    def set_InhibitionCalcPercentInhibition_field(self, value: Optional[float]):
        """
        Set data field with field name 'InhibitionCalc.PercentInhibition' on this record model
        """
        self.set_field_value(self.INHIBITIONCALC_EXT_PERCENTINHIBITION__FIELD_NAME.field_name, value)

    def get_InhibitionCalcPercentInhibition_field(self) -> Optional[float]:
        """
        Get data field value with field name 'InhibitionCalc.PercentInhibition' from this record model
        """
        return self.get_field_value(self.INHIBITIONCALC_EXT_PERCENTINHIBITION__FIELD_NAME.field_name)

    def set_InhibitionCalcRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'InhibitionCalc.RecordId' on this record model
        """
        self.set_field_value(self.INHIBITIONCALC_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_InhibitionCalcRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'InhibitionCalc.RecordId' from this record model
        """
        return self.get_field_value(self.INHIBITIONCALC_EXT_RECORDID__FIELD_NAME.field_name)

    def set_InhibitionCalcRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'InhibitionCalc.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.INHIBITIONCALC_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_InhibitionCalcRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'InhibitionCalc.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.INHIBITIONCALC_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_InhibitionCalcVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'InhibitionCalc.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.INHIBITIONCALC_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_InhibitionCalcVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InhibitionCalc.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.INHIBITIONCALC_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_InhibitionCalcVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'InhibitionCalc.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.INHIBITIONCALC_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_InhibitionCalcVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'InhibitionCalc.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.INHIBITIONCALC_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_InstrumentDataStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentDataStatus' on this record model
        """
        self.set_field_value(self.INSTRUMENTDATASTATUS__FIELD_NAME.field_name, value)

    def get_InstrumentDataStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentDataStatus' from this record model
        """
        return self.get_field_value(self.INSTRUMENTDATASTATUS__FIELD_NAME.field_name)

    def set_InstrumentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'InstrumentName' on this record model
        """
        self.set_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name, value)

    def get_InstrumentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InstrumentName' from this record model
        """
        return self.get_field_value(self.INSTRUMENTNAME__FIELD_NAME.field_name)

    def set_IonMode_field(self, value: Optional[str]):
        """
        Set data field with field name 'IonMode' on this record model
        """
        self.set_field_value(self.IONMODE__FIELD_NAME.field_name, value)

    def get_IonMode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IonMode' from this record model
        """
        return self.get_field_value(self.IONMODE__FIELD_NAME.field_name)

    def set_LCMSResultAccuracyPercent_field(self, value: Optional[str]):
        """
        Set data field with field name 'LCMSResult.AccuracyPercent' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_ACCURACYPERCENT__FIELD_NAME.field_name, value)

    def get_LCMSResultAccuracyPercent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LCMSResult.AccuracyPercent' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_ACCURACYPERCENT__FIELD_NAME.field_name)

    def set_LCMSResultAnalyteISArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'LCMSResult.AnalyteISArea' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_ANALYTEISAREA__FIELD_NAME.field_name, value)

    def get_LCMSResultAnalyteISArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LCMSResult.AnalyteISArea' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_ANALYTEISAREA__FIELD_NAME.field_name)

    def set_LCMSResultArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'LCMSResult.Area' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_AREA__FIELD_NAME.field_name, value)

    def get_LCMSResultArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LCMSResult.Area' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_AREA__FIELD_NAME.field_name)

    def set_LCMSResultCalculatedConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'LCMSResult.CalculatedConcentration' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_CALCULATEDCONCENTRATION__FIELD_NAME.field_name, value)

    def get_LCMSResultCalculatedConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LCMSResult.CalculatedConcentration' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_CALCULATEDCONCENTRATION__FIELD_NAME.field_name)

    def set_LCMSResultCompoundName_field(self, value: Optional[str]):
        """
        Set data field with field name 'LCMSResult.CompoundName' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_COMPOUNDNAME__FIELD_NAME.field_name, value)

    def get_LCMSResultCompoundName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LCMSResult.CompoundName' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_COMPOUNDNAME__FIELD_NAME.field_name)

    def set_LCMSResultConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'LCMSResult.Concentration' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_CONCENTRATION__FIELD_NAME.field_name, value)

    def get_LCMSResultConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LCMSResult.Concentration' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_CONCENTRATION__FIELD_NAME.field_name)

    def set_LCMSResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'LCMSResult.CreatedBy' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_LCMSResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LCMSResult.CreatedBy' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_LCMSResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'LCMSResult.DateCreated' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_LCMSResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LCMSResult.DateCreated' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_LCMSResultDilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'LCMSResult.DilutionFactor' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_LCMSResultDilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LCMSResult.DilutionFactor' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_DILUTIONFACTOR__FIELD_NAME.field_name)

    def set_LCMSResultFileType_field(self, value: Optional[str]):
        """
        Set data field with field name 'LCMSResult.FileType' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_FILETYPE__FIELD_NAME.field_name, value)

    def get_LCMSResultFileType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LCMSResult.FileType' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_FILETYPE__FIELD_NAME.field_name)

    def set_LCMSResultFilename_field(self, value: Optional[str]):
        """
        Set data field with field name 'LCMSResult.Filename' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_FILENAME__FIELD_NAME.field_name, value)

    def get_LCMSResultFilename_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LCMSResult.Filename' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_FILENAME__FIELD_NAME.field_name)

    def set_LCMSResultHeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'LCMSResult.Height' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_HEIGHT__FIELD_NAME.field_name, value)

    def get_LCMSResultHeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LCMSResult.Height' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_HEIGHT__FIELD_NAME.field_name)

    def set_LCMSResultISArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'LCMSResult.ISArea' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_ISAREA__FIELD_NAME.field_name, value)

    def get_LCMSResultISArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LCMSResult.ISArea' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_ISAREA__FIELD_NAME.field_name)

    def set_LCMSResultISHeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'LCMSResult.ISHeight' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_ISHEIGHT__FIELD_NAME.field_name, value)

    def get_LCMSResultISHeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LCMSResult.ISHeight' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_ISHEIGHT__FIELD_NAME.field_name)

    def set_LCMSResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'LCMSResult.RecordId' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_LCMSResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LCMSResult.RecordId' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_LCMSResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'LCMSResult.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_LCMSResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LCMSResult.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_LCMSResultSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'LCMSResult.SampleType' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_SAMPLETYPE__FIELD_NAME.field_name, value)

    def get_LCMSResultSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LCMSResult.SampleType' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_SAMPLETYPE__FIELD_NAME.field_name)

    def set_LCMSResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'LCMSResult.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_LCMSResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LCMSResult.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_LCMSResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'LCMSResult.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.LCMSRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_LCMSResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LCMSResult.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.LCMSRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_MapToSample_field(self, value: Optional[bool]):
        """
        Set data field with field name 'MapToSample' on this record model
        """
        self.set_field_value(self.MAPTOSAMPLE__FIELD_NAME.field_name, value)

    def get_MapToSample_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'MapToSample' from this record model
        """
        return self.get_field_value(self.MAPTOSAMPLE__FIELD_NAME.field_name)

    def set_Molarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molarity' on this record model
        """
        self.set_field_value(self.MOLARITY__FIELD_NAME.field_name, value)

    def get_Molarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molarity' from this record model
        """
        return self.get_field_value(self.MOLARITY__FIELD_NAME.field_name)

    def set_MolarityUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'MolarityUnits' on this record model
        """
        self.set_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name, value)

    def get_MolarityUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MolarityUnits' from this record model
        """
        return self.get_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name)

    def set_MsdResultAlgorithm_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.Algorithm' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_ALGORITHM__FIELD_NAME.field_name, value)

    def get_MsdResultAlgorithm_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.Algorithm' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_ALGORITHM__FIELD_NAME.field_name)

    def set_MsdResultAlgorithmParamCalcAsymFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.AlgorithmParamCalcAsymFactor' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMCALCASYMFACTOR__FIELD_NAME.field_name, value)

    def get_MsdResultAlgorithmParamCalcAsymFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.AlgorithmParamCalcAsymFactor' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMCALCASYMFACTOR__FIELD_NAME.field_name)

    def set_MsdResultAlgorithmParamCalcBottom_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.AlgorithmParamCalcBottom' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMCALCBOTTOM__FIELD_NAME.field_name, value)

    def get_MsdResultAlgorithmParamCalcBottom_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.AlgorithmParamCalcBottom' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMCALCBOTTOM__FIELD_NAME.field_name)

    def set_MsdResultAlgorithmParamCalcHillSlope_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.AlgorithmParamCalcHillSlope' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMCALCHILLSLOPE__FIELD_NAME.field_name, value)

    def get_MsdResultAlgorithmParamCalcHillSlope_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.AlgorithmParamCalcHillSlope' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMCALCHILLSLOPE__FIELD_NAME.field_name)

    def set_MsdResultAlgorithmParamCalcMidPoint_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.AlgorithmParamCalcMidPoint' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMCALCMIDPOINT__FIELD_NAME.field_name, value)

    def get_MsdResultAlgorithmParamCalcMidPoint_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.AlgorithmParamCalcMidPoint' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMCALCMIDPOINT__FIELD_NAME.field_name)

    def set_MsdResultAlgorithmParamCalcTop_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.AlgorithmParamCalcTop' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMCALCTOP__FIELD_NAME.field_name, value)

    def get_MsdResultAlgorithmParamCalcTop_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.AlgorithmParamCalcTop' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMCALCTOP__FIELD_NAME.field_name)

    def set_MsdResultAlgorithmParamCalcYInt_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.AlgorithmParamCalcYInt' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMCALCYINT__FIELD_NAME.field_name, value)

    def get_MsdResultAlgorithmParamCalcYInt_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.AlgorithmParamCalcYInt' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMCALCYINT__FIELD_NAME.field_name)

    def set_MsdResultAlgorithmParameterWeighting_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.AlgorithmParameterWeighting' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMETERWEIGHTING__FIELD_NAME.field_name, value)

    def get_MsdResultAlgorithmParameterWeighting_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.AlgorithmParameterWeighting' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_ALGORITHMPARAMETERWEIGHTING__FIELD_NAME.field_name)

    def set_MsdResultAssay_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.Assay' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_ASSAY__FIELD_NAME.field_name, value)

    def get_MsdResultAssay_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.Assay' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_ASSAY__FIELD_NAME.field_name)

    def set_MsdResultBackFitCurve_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.BackFitCurve' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_BACKFITCURVE__FIELD_NAME.field_name, value)

    def get_MsdResultBackFitCurve_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.BackFitCurve' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_BACKFITCURVE__FIELD_NAME.field_name)

    def set_MsdResultCV_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.CV' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_CV__FIELD_NAME.field_name, value)

    def get_MsdResultCV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.CV' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_CV__FIELD_NAME.field_name)

    def set_MsdResultCalcConcCV_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.CalcConcCV' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_CALCCONCCV__FIELD_NAME.field_name, value)

    def get_MsdResultCalcConcCV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.CalcConcCV' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_CALCCONCCV__FIELD_NAME.field_name)

    def set_MsdResultCalcConcMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.CalcConcMean' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_CALCCONCMEAN__FIELD_NAME.field_name, value)

    def get_MsdResultCalcConcMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.CalcConcMean' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_CALCCONCMEAN__FIELD_NAME.field_name)

    def set_MsdResultCalcConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.CalcConcentration' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_CALCCONCENTRATION__FIELD_NAME.field_name, value)

    def get_MsdResultCalcConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.CalcConcentration' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_CALCCONCENTRATION__FIELD_NAME.field_name)

    def set_MsdResultConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.Concentration' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_CONCENTRATION__FIELD_NAME.field_name, value)

    def get_MsdResultConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.Concentration' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_CONCENTRATION__FIELD_NAME.field_name)

    def set_MsdResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.CreatedBy' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_MsdResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.CreatedBy' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_MsdResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'MsdResult.DateCreated' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_MsdResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MsdResult.DateCreated' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_MsdResultDetectionLimitsBotOfRangeParam_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.DetectionLimitsBotOfRangeParam' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_DETECTIONLIMITSBOTOFRANGEPARAM__FIELD_NAME.field_name, value)

    def get_MsdResultDetectionLimitsBotOfRangeParam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.DetectionLimitsBotOfRangeParam' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_DETECTIONLIMITSBOTOFRANGEPARAM__FIELD_NAME.field_name)

    def set_MsdResultDetectionLimitsBotOfRangeType_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.DetectionLimitsBotOfRangeType' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_DETECTIONLIMITSBOTOFRANGETYPE__FIELD_NAME.field_name, value)

    def get_MsdResultDetectionLimitsBotOfRangeType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.DetectionLimitsBotOfRangeType' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_DETECTIONLIMITSBOTOFRANGETYPE__FIELD_NAME.field_name)

    def set_MsdResultDetectionLimitsCalcHigh_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.DetectionLimitsCalcHigh' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_DETECTIONLIMITSCALCHIGH__FIELD_NAME.field_name, value)

    def get_MsdResultDetectionLimitsCalcHigh_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.DetectionLimitsCalcHigh' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_DETECTIONLIMITSCALCHIGH__FIELD_NAME.field_name)

    def set_MsdResultDetectionLimitsCalcLow_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.DetectionLimitsCalcLow' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_DETECTIONLIMITSCALCLOW__FIELD_NAME.field_name, value)

    def get_MsdResultDetectionLimitsCalcLow_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.DetectionLimitsCalcLow' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_DETECTIONLIMITSCALCLOW__FIELD_NAME.field_name)

    def set_MsdResultDetectionLimitsTopOfRangeParam_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.DetectionLimitsTopOfRangeParam' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_DETECTIONLIMITSTOPOFRANGEPARAM__FIELD_NAME.field_name, value)

    def get_MsdResultDetectionLimitsTopOfRangeParam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.DetectionLimitsTopOfRangeParam' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_DETECTIONLIMITSTOPOFRANGEPARAM__FIELD_NAME.field_name)

    def set_MsdResultDetectionLimitsTopOfRangeType_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.DetectionLimitsTopOfRangeType' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_DETECTIONLIMITSTOPOFRANGETYPE__FIELD_NAME.field_name, value)

    def get_MsdResultDetectionLimitsTopOfRangeType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.DetectionLimitsTopOfRangeType' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_DETECTIONLIMITSTOPOFRANGETYPE__FIELD_NAME.field_name)

    def set_MsdResultDetectionRange_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.DetectionRange' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_DETECTIONRANGE__FIELD_NAME.field_name, value)

    def get_MsdResultDetectionRange_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.DetectionRange' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_DETECTIONRANGE__FIELD_NAME.field_name)

    def set_MsdResultDilution_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.Dilution' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_DILUTION__FIELD_NAME.field_name, value)

    def get_MsdResultDilution_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.Dilution' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_DILUTION__FIELD_NAME.field_name)

    def set_MsdResultExcluded_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.Excluded' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_EXCLUDED__FIELD_NAME.field_name, value)

    def get_MsdResultExcluded_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.Excluded' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_EXCLUDED__FIELD_NAME.field_name)

    def set_MsdResultFitStatisticRSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.FitStatisticRSquared' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_FITSTATISTICRSQUARED__FIELD_NAME.field_name, value)

    def get_MsdResultFitStatisticRSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.FitStatisticRSquared' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_FITSTATISTICRSQUARED__FIELD_NAME.field_name)

    def set_MsdResultMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.Mean' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_MEAN__FIELD_NAME.field_name, value)

    def get_MsdResultMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.Mean' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_MEAN__FIELD_NAME.field_name)

    def set_MsdResultPercentRecovery_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.PercentRecovery' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_PERCENTRECOVERY__FIELD_NAME.field_name, value)

    def get_MsdResultPercentRecovery_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.PercentRecovery' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_PERCENTRECOVERY__FIELD_NAME.field_name)

    def set_MsdResultPercentRecoveryMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.PercentRecoveryMean' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_PERCENTRECOVERYMEAN__FIELD_NAME.field_name, value)

    def get_MsdResultPercentRecoveryMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.PercentRecoveryMean' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_PERCENTRECOVERYMEAN__FIELD_NAME.field_name)

    def set_MsdResultPlateName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.PlateName' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_PLATENAME__FIELD_NAME.field_name, value)

    def get_MsdResultPlateName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.PlateName' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_PLATENAME__FIELD_NAME.field_name)

    def set_MsdResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'MsdResult.RecordId' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_MsdResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MsdResult.RecordId' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_MsdResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'MsdResult.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_MsdResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MsdResult.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_MsdResultSample_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.Sample' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_SAMPLE__FIELD_NAME.field_name, value)

    def get_MsdResultSample_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.Sample' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_SAMPLE__FIELD_NAME.field_name)

    def set_MsdResultSampleDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.SampleDescription' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_SAMPLEDESCRIPTION__FIELD_NAME.field_name, value)

    def get_MsdResultSampleDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.SampleDescription' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_SAMPLEDESCRIPTION__FIELD_NAME.field_name)

    def set_MsdResultSampleGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.SampleGroup' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_SAMPLEGROUP__FIELD_NAME.field_name, value)

    def get_MsdResultSampleGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.SampleGroup' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_SAMPLEGROUP__FIELD_NAME.field_name)

    def set_MsdResultSignalValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'MsdResult.SignalValue' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_SIGNALVALUE__FIELD_NAME.field_name, value)

    def get_MsdResultSignalValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MsdResult.SignalValue' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_SIGNALVALUE__FIELD_NAME.field_name)

    def set_MsdResultSpot_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.Spot' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_SPOT__FIELD_NAME.field_name, value)

    def get_MsdResultSpot_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.Spot' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_SPOT__FIELD_NAME.field_name)

    def set_MsdResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_MsdResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_MsdResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'MsdResult.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_MsdResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MsdResult.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_MsdResultWell_field(self, value: Optional[str]):
        """
        Set data field with field name 'MsdResult.Well' on this record model
        """
        self.set_field_value(self.MSDRESULT_EXT_WELL__FIELD_NAME.field_name, value)

    def get_MsdResultWell_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MsdResult.Well' from this record model
        """
        return self.get_field_value(self.MSDRESULT_EXT_WELL__FIELD_NAME.field_name)

    def set_MsdSignal_field(self, value: Optional[int]):
        """
        Set data field with field name 'MsdSignal' on this record model
        """
        self.set_field_value(self.MSDSIGNAL__FIELD_NAME.field_name, value)

    def get_MsdSignal_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MsdSignal' from this record model
        """
        return self.get_field_value(self.MSDSIGNAL__FIELD_NAME.field_name)

    def set_NH3AreaPercentTotal_field(self, value: Optional[float]):
        """
        Set data field with field name 'NH3AreaPercentTotal' on this record model
        """
        self.set_field_value(self.NH3AREAPERCENTTOTAL__FIELD_NAME.field_name, value)

    def get_NH3AreaPercentTotal_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NH3AreaPercentTotal' from this record model
        """
        return self.get_field_value(self.NH3AREAPERCENTTOTAL__FIELD_NAME.field_name)

    def set_NH3IsFound_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NH3IsFound' on this record model
        """
        self.set_field_value(self.NH3ISFOUND__FIELD_NAME.field_name, value)

    def get_NH3IsFound_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NH3IsFound' from this record model
        """
        return self.get_field_value(self.NH3ISFOUND__FIELD_NAME.field_name)

    def set_NH3RetentionTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'NH3RetentionTime' on this record model
        """
        self.set_field_value(self.NH3RETENTIONTIME__FIELD_NAME.field_name, value)

    def get_NH3RetentionTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NH3RetentionTime' from this record model
        """
        return self.get_field_value(self.NH3RETENTIONTIME__FIELD_NAME.field_name)

    def set_NanodropResultA260_field(self, value: Optional[float]):
        """
        Set data field with field name 'NanodropResult.A260' on this record model
        """
        self.set_field_value(self.NANODROPRESULT_EXT_A260__FIELD_NAME.field_name, value)

    def get_NanodropResultA260_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NanodropResult.A260' from this record model
        """
        return self.get_field_value(self.NANODROPRESULT_EXT_A260__FIELD_NAME.field_name)

    def set_NanodropResultA260230_field(self, value: Optional[float]):
        """
        Set data field with field name 'NanodropResult.A260230' on this record model
        """
        self.set_field_value(self.NANODROPRESULT_EXT_A260230__FIELD_NAME.field_name, value)

    def get_NanodropResultA260230_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NanodropResult.A260230' from this record model
        """
        return self.get_field_value(self.NANODROPRESULT_EXT_A260230__FIELD_NAME.field_name)

    def set_NanodropResultA260280_field(self, value: Optional[float]):
        """
        Set data field with field name 'NanodropResult.A260280' on this record model
        """
        self.set_field_value(self.NANODROPRESULT_EXT_A260280__FIELD_NAME.field_name, value)

    def get_NanodropResultA260280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NanodropResult.A260280' from this record model
        """
        return self.get_field_value(self.NANODROPRESULT_EXT_A260280__FIELD_NAME.field_name)

    def set_NanodropResultA280_field(self, value: Optional[float]):
        """
        Set data field with field name 'NanodropResult.A280' on this record model
        """
        self.set_field_value(self.NANODROPRESULT_EXT_A280__FIELD_NAME.field_name, value)

    def get_NanodropResultA280_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NanodropResult.A280' from this record model
        """
        return self.get_field_value(self.NANODROPRESULT_EXT_A280__FIELD_NAME.field_name)

    def set_NanodropResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'NanodropResult.CreatedBy' on this record model
        """
        self.set_field_value(self.NANODROPRESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_NanodropResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NanodropResult.CreatedBy' from this record model
        """
        return self.get_field_value(self.NANODROPRESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_NanodropResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'NanodropResult.DateCreated' on this record model
        """
        self.set_field_value(self.NANODROPRESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_NanodropResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NanodropResult.DateCreated' from this record model
        """
        return self.get_field_value(self.NANODROPRESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_NanodropResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'NanodropResult.RecordId' on this record model
        """
        self.set_field_value(self.NANODROPRESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_NanodropResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NanodropResult.RecordId' from this record model
        """
        return self.get_field_value(self.NANODROPRESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_NanodropResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'NanodropResult.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.NANODROPRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_NanodropResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NanodropResult.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.NANODROPRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_NanodropResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'NanodropResult.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.NANODROPRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_NanodropResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NanodropResult.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.NANODROPRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_NanodropResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'NanodropResult.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.NANODROPRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_NanodropResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NanodropResult.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.NANODROPRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_NetWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'NetWeight' on this record model
        """
        self.set_field_value(self.NETWEIGHT__FIELD_NAME.field_name, value)

    def get_NetWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NetWeight' from this record model
        """
        return self.get_field_value(self.NETWEIGHT__FIELD_NAME.field_name)

    def set_Observations_field(self, value: Optional[str]):
        """
        Set data field with field name 'Observations' on this record model
        """
        self.set_field_value(self.OBSERVATIONS__FIELD_NAME.field_name, value)

    def get_Observations_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Observations' from this record model
        """
        return self.get_field_value(self.OBSERVATIONS__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_OverrideExplanation_field(self, value: Optional[str]):
        """
        Set data field with field name 'OverrideExplanation' on this record model
        """
        self.set_field_value(self.OVERRIDEEXPLANATION__FIELD_NAME.field_name, value)

    def get_OverrideExplanation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OverrideExplanation' from this record model
        """
        return self.get_field_value(self.OVERRIDEEXPLANATION__FIELD_NAME.field_name)

    def set_OverrideUser_field(self, value: Optional[str]):
        """
        Set data field with field name 'OverrideUser' on this record model
        """
        self.set_field_value(self.OVERRIDEUSER__FIELD_NAME.field_name, value)

    def get_OverrideUser_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OverrideUser' from this record model
        """
        return self.get_field_value(self.OVERRIDEUSER__FIELD_NAME.field_name)

    def set_Pathlength_field(self, value: Optional[float]):
        """
        Set data field with field name 'Pathlength' on this record model
        """
        self.set_field_value(self.PATHLENGTH__FIELD_NAME.field_name, value)

    def get_Pathlength_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Pathlength' from this record model
        """
        return self.get_field_value(self.PATHLENGTH__FIELD_NAME.field_name)

    def set_PeakValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'PeakValue' on this record model
        """
        self.set_field_value(self.PEAKVALUE__FIELD_NAME.field_name, value)

    def get_PeakValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PeakValue' from this record model
        """
        return self.get_field_value(self.PEAKVALUE__FIELD_NAME.field_name)

    def set_PerRecoveryMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'PerRecoveryMean' on this record model
        """
        self.set_field_value(self.PERRECOVERYMEAN__FIELD_NAME.field_name, value)

    def get_PerRecoveryMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PerRecoveryMean' from this record model
        """
        return self.get_field_value(self.PERRECOVERYMEAN__FIELD_NAME.field_name)

    def set_PercentOfTotal_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentOfTotal' on this record model
        """
        self.set_field_value(self.PERCENTOFTOTAL__FIELD_NAME.field_name, value)

    def get_PercentOfTotal_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentOfTotal' from this record model
        """
        return self.get_field_value(self.PERCENTOFTOTAL__FIELD_NAME.field_name)

    def set_PlateID_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateID' on this record model
        """
        self.set_field_value(self.PLATEID__FIELD_NAME.field_name, value)

    def get_PlateID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateID' from this record model
        """
        return self.get_field_value(self.PLATEID__FIELD_NAME.field_name)

    def set_Position_field(self, value: Optional[str]):
        """
        Set data field with field name 'Position' on this record model
        """
        self.set_field_value(self.POSITION__FIELD_NAME.field_name, value)

    def get_Position_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Position' from this record model
        """
        return self.get_field_value(self.POSITION__FIELD_NAME.field_name)

    def set_ProbeCount_field(self, value: Optional[float]):
        """
        Set data field with field name 'ProbeCount' on this record model
        """
        self.set_field_value(self.PROBECOUNT__FIELD_NAME.field_name, value)

    def get_ProbeCount_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ProbeCount' from this record model
        """
        return self.get_field_value(self.PROBECOUNT__FIELD_NAME.field_name)

    def set_ProbeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProbeName' on this record model
        """
        self.set_field_value(self.PROBENAME__FIELD_NAME.field_name, value)

    def get_ProbeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProbeName' from this record model
        """
        return self.get_field_value(self.PROBENAME__FIELD_NAME.field_name)

    def set_QCStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'QCStatus' on this record model
        """
        self.set_field_value(self.QCSTATUS__FIELD_NAME.field_name, value)

    def get_QCStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QCStatus' from this record model
        """
        return self.get_field_value(self.QCSTATUS__FIELD_NAME.field_name)

    def set_QuantStudioGenotypingDatumCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'QuantStudioGenotypingDatum.CreatedBy' on this record model
        """
        self.set_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_QuantStudioGenotypingDatumCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QuantStudioGenotypingDatum.CreatedBy' from this record model
        """
        return self.get_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_QuantStudioGenotypingDatumDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'QuantStudioGenotypingDatum.DateCreated' on this record model
        """
        self.set_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_QuantStudioGenotypingDatumDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QuantStudioGenotypingDatum.DateCreated' from this record model
        """
        return self.get_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_QuantStudioGenotypingDatumGeneCall_field(self, value: Optional[str]):
        """
        Set data field with field name 'QuantStudioGenotypingDatum.GeneCall' on this record model
        """
        self.set_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_GENECALL__FIELD_NAME.field_name, value)

    def get_QuantStudioGenotypingDatumGeneCall_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QuantStudioGenotypingDatum.GeneCall' from this record model
        """
        return self.get_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_GENECALL__FIELD_NAME.field_name)

    def set_QuantStudioGenotypingDatumGeneSymbol_field(self, value: Optional[str]):
        """
        Set data field with field name 'QuantStudioGenotypingDatum.GeneSymbol' on this record model
        """
        self.set_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_GENESYMBOL__FIELD_NAME.field_name, value)

    def get_QuantStudioGenotypingDatumGeneSymbol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QuantStudioGenotypingDatum.GeneSymbol' from this record model
        """
        return self.get_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_GENESYMBOL__FIELD_NAME.field_name)

    def set_QuantStudioGenotypingDatumNCBISNPReference_field(self, value: Optional[str]):
        """
        Set data field with field name 'QuantStudioGenotypingDatum.NCBISNPReference' on this record model
        """
        self.set_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_NCBISNPREFERENCE__FIELD_NAME.field_name, value)

    def get_QuantStudioGenotypingDatumNCBISNPReference_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QuantStudioGenotypingDatum.NCBISNPReference' from this record model
        """
        return self.get_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_NCBISNPREFERENCE__FIELD_NAME.field_name)

    def set_QuantStudioGenotypingDatumRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'QuantStudioGenotypingDatum.RecordId' on this record model
        """
        self.set_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_QuantStudioGenotypingDatumRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QuantStudioGenotypingDatum.RecordId' from this record model
        """
        return self.get_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_RECORDID__FIELD_NAME.field_name)

    def set_QuantStudioGenotypingDatumRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'QuantStudioGenotypingDatum.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_QuantStudioGenotypingDatumRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QuantStudioGenotypingDatum.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_QuantStudioGenotypingDatumVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'QuantStudioGenotypingDatum.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_QuantStudioGenotypingDatumVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QuantStudioGenotypingDatum.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_QuantStudioGenotypingDatumVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'QuantStudioGenotypingDatum.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_QuantStudioGenotypingDatumVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QuantStudioGenotypingDatum.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.QUANTSTUDIOGENOTYPINGDATUM_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Quantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Quantity' on this record model
        """
        self.set_field_value(self.QUANTITY__FIELD_NAME.field_name, value)

    def get_Quantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Quantity' from this record model
        """
        return self.get_field_value(self.QUANTITY__FIELD_NAME.field_name)

    def set_QuantityMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityMean' on this record model
        """
        self.set_field_value(self.QUANTITYMEAN__FIELD_NAME.field_name, value)

    def get_QuantityMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityMean' from this record model
        """
        return self.get_field_value(self.QUANTITYMEAN__FIELD_NAME.field_name)

    def set_QuantitySD_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantitySD' on this record model
        """
        self.set_field_value(self.QUANTITYSD__FIELD_NAME.field_name, value)

    def get_QuantitySD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantitySD' from this record model
        """
        return self.get_field_value(self.QUANTITYSD__FIELD_NAME.field_name)

    def set_Quencher_field(self, value: Optional[str]):
        """
        Set data field with field name 'Quencher' on this record model
        """
        self.set_field_value(self.QUENCHER__FIELD_NAME.field_name, value)

    def get_Quencher_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Quencher' from this record model
        """
        return self.get_field_value(self.QUENCHER__FIELD_NAME.field_name)

    def set_RIN_field(self, value: Optional[float]):
        """
        Set data field with field name 'RIN' on this record model
        """
        self.set_field_value(self.RIN__FIELD_NAME.field_name, value)

    def get_RIN_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RIN' from this record model
        """
        return self.get_field_value(self.RIN__FIELD_NAME.field_name)

    def set_ROI_field(self, value: Optional[int]):
        """
        Set data field with field name 'ROI' on this record model
        """
        self.set_field_value(self.ROI__FIELD_NAME.field_name, value)

    def get_ROI_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ROI' from this record model
        """
        return self.get_field_value(self.ROI__FIELD_NAME.field_name)

    def set_Ratio_field(self, value: Optional[str]):
        """
        Set data field with field name 'Ratio' on this record model
        """
        self.set_field_value(self.RATIO__FIELD_NAME.field_name, value)

    def get_Ratio_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Ratio' from this record model
        """
        return self.get_field_value(self.RATIO__FIELD_NAME.field_name)

    def set_RawDataValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'RawDataValue' on this record model
        """
        self.set_field_value(self.RAWDATAVALUE__FIELD_NAME.field_name, value)

    def get_RawDataValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'RawDataValue' from this record model
        """
        return self.get_field_value(self.RAWDATAVALUE__FIELD_NAME.field_name)

    def set_ReadA_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReadA' on this record model
        """
        self.set_field_value(self.READA__FIELD_NAME.field_name, value)

    def get_ReadA_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReadA' from this record model
        """
        return self.get_field_value(self.READA__FIELD_NAME.field_name)

    def set_ReadB_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReadB' on this record model
        """
        self.set_field_value(self.READB__FIELD_NAME.field_name, value)

    def get_ReadB_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReadB' from this record model
        """
        return self.get_field_value(self.READB__FIELD_NAME.field_name)

    def set_Reporter_field(self, value: Optional[str]):
        """
        Set data field with field name 'Reporter' on this record model
        """
        self.set_field_value(self.REPORTER__FIELD_NAME.field_name, value)

    def get_Reporter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Reporter' from this record model
        """
        return self.get_field_value(self.REPORTER__FIELD_NAME.field_name)

    def set_Results_field(self, value: Optional[str]):
        """
        Set data field with field name 'Results' on this record model
        """
        self.set_field_value(self.RESULTS__FIELD_NAME.field_name, value)

    def get_Results_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Results' from this record model
        """
        return self.get_field_value(self.RESULTS__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SCIEXResultAnalytePeakArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'SCIEXResult.AnalytePeakArea' on this record model
        """
        self.set_field_value(self.SCIEXRESULT_EXT_ANALYTEPEAKAREA__FIELD_NAME.field_name, value)

    def get_SCIEXResultAnalytePeakArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SCIEXResult.AnalytePeakArea' from this record model
        """
        return self.get_field_value(self.SCIEXRESULT_EXT_ANALYTEPEAKAREA__FIELD_NAME.field_name)

    def set_SCIEXResultAnalytePeakName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SCIEXResult.AnalytePeakName' on this record model
        """
        self.set_field_value(self.SCIEXRESULT_EXT_ANALYTEPEAKNAME__FIELD_NAME.field_name, value)

    def get_SCIEXResultAnalytePeakName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SCIEXResult.AnalytePeakName' from this record model
        """
        return self.get_field_value(self.SCIEXRESULT_EXT_ANALYTEPEAKNAME__FIELD_NAME.field_name)

    def set_SCIEXResultCalculatedConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SCIEXResult.CalculatedConcentration' on this record model
        """
        self.set_field_value(self.SCIEXRESULT_EXT_CALCULATEDCONCENTRATION__FIELD_NAME.field_name, value)

    def get_SCIEXResultCalculatedConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SCIEXResult.CalculatedConcentration' from this record model
        """
        return self.get_field_value(self.SCIEXRESULT_EXT_CALCULATEDCONCENTRATION__FIELD_NAME.field_name)

    def set_SCIEXResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SCIEXResult.CreatedBy' on this record model
        """
        self.set_field_value(self.SCIEXRESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SCIEXResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SCIEXResult.CreatedBy' from this record model
        """
        return self.get_field_value(self.SCIEXRESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SCIEXResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SCIEXResult.DateCreated' on this record model
        """
        self.set_field_value(self.SCIEXRESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SCIEXResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SCIEXResult.DateCreated' from this record model
        """
        return self.get_field_value(self.SCIEXRESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SCIEXResultISPeakArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'SCIEXResult.ISPeakArea' on this record model
        """
        self.set_field_value(self.SCIEXRESULT_EXT_ISPEAKAREA__FIELD_NAME.field_name, value)

    def get_SCIEXResultISPeakArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SCIEXResult.ISPeakArea' from this record model
        """
        return self.get_field_value(self.SCIEXRESULT_EXT_ISPEAKAREA__FIELD_NAME.field_name)

    def set_SCIEXResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SCIEXResult.RecordId' on this record model
        """
        self.set_field_value(self.SCIEXRESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SCIEXResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SCIEXResult.RecordId' from this record model
        """
        return self.get_field_value(self.SCIEXRESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SCIEXResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SCIEXResult.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.SCIEXRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_SCIEXResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SCIEXResult.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.SCIEXRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_SCIEXResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SCIEXResult.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SCIEXRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SCIEXResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SCIEXResult.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SCIEXRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SCIEXResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SCIEXResult.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SCIEXRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SCIEXResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SCIEXResult.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SCIEXRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SQMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'SQMean' on this record model
        """
        self.set_field_value(self.SQMEAN__FIELD_NAME.field_name, value)

    def get_SQMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SQMean' from this record model
        """
        return self.get_field_value(self.SQMEAN__FIELD_NAME.field_name)

    def set_SQStdDev_field(self, value: Optional[float]):
        """
        Set data field with field name 'SQStdDev' on this record model
        """
        self.set_field_value(self.SQSTDDEV__FIELD_NAME.field_name, value)

    def get_SQStdDev_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SQStdDev' from this record model
        """
        return self.get_field_value(self.SQSTDDEV__FIELD_NAME.field_name)

    def set_SampleFinalQCStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleFinalQCStatus' on this record model
        """
        self.set_field_value(self.SAMPLEFINALQCSTATUS__FIELD_NAME.field_name, value)

    def get_SampleFinalQCStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleFinalQCStatus' from this record model
        """
        return self.get_field_value(self.SAMPLEFINALQCSTATUS__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SegmentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SegmentName' on this record model
        """
        self.set_field_value(self.SEGMENTNAME__FIELD_NAME.field_name, value)

    def get_SegmentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SegmentName' from this record model
        """
        return self.get_field_value(self.SEGMENTNAME__FIELD_NAME.field_name)

    def set_SiriusWeigherResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SiriusWeigherResult.CreatedBy' on this record model
        """
        self.set_field_value(self.SIRIUSWEIGHERRESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SiriusWeigherResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SiriusWeigherResult.CreatedBy' from this record model
        """
        return self.get_field_value(self.SIRIUSWEIGHERRESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SiriusWeigherResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SiriusWeigherResult.DateCreated' on this record model
        """
        self.set_field_value(self.SIRIUSWEIGHERRESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SiriusWeigherResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SiriusWeigherResult.DateCreated' from this record model
        """
        return self.get_field_value(self.SIRIUSWEIGHERRESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SiriusWeigherResultGrossWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'SiriusWeigherResult.GrossWeight' on this record model
        """
        self.set_field_value(self.SIRIUSWEIGHERRESULT_EXT_GROSSWEIGHT__FIELD_NAME.field_name, value)

    def get_SiriusWeigherResultGrossWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SiriusWeigherResult.GrossWeight' from this record model
        """
        return self.get_field_value(self.SIRIUSWEIGHERRESULT_EXT_GROSSWEIGHT__FIELD_NAME.field_name)

    def set_SiriusWeigherResultNetWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'SiriusWeigherResult.NetWeight' on this record model
        """
        self.set_field_value(self.SIRIUSWEIGHERRESULT_EXT_NETWEIGHT__FIELD_NAME.field_name, value)

    def get_SiriusWeigherResultNetWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SiriusWeigherResult.NetWeight' from this record model
        """
        return self.get_field_value(self.SIRIUSWEIGHERRESULT_EXT_NETWEIGHT__FIELD_NAME.field_name)

    def set_SiriusWeigherResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SiriusWeigherResult.RecordId' on this record model
        """
        self.set_field_value(self.SIRIUSWEIGHERRESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SiriusWeigherResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SiriusWeigherResult.RecordId' from this record model
        """
        return self.get_field_value(self.SIRIUSWEIGHERRESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SiriusWeigherResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SiriusWeigherResult.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.SIRIUSWEIGHERRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_SiriusWeigherResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SiriusWeigherResult.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.SIRIUSWEIGHERRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_SiriusWeigherResultTareWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'SiriusWeigherResult.TareWeight' on this record model
        """
        self.set_field_value(self.SIRIUSWEIGHERRESULT_EXT_TAREWEIGHT__FIELD_NAME.field_name, value)

    def get_SiriusWeigherResultTareWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SiriusWeigherResult.TareWeight' from this record model
        """
        return self.get_field_value(self.SIRIUSWEIGHERRESULT_EXT_TAREWEIGHT__FIELD_NAME.field_name)

    def set_SiriusWeigherResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SiriusWeigherResult.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SIRIUSWEIGHERRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SiriusWeigherResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SiriusWeigherResult.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SIRIUSWEIGHERRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SiriusWeigherResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SiriusWeigherResult.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SIRIUSWEIGHERRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SiriusWeigherResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SiriusWeigherResult.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SIRIUSWEIGHERRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SizeDistribution_field(self, value: Optional[float]):
        """
        Set data field with field name 'SizeDistribution' on this record model
        """
        self.set_field_value(self.SIZEDISTRIBUTION__FIELD_NAME.field_name, value)

    def get_SizeDistribution_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SizeDistribution' from this record model
        """
        return self.get_field_value(self.SIZEDISTRIBUTION__FIELD_NAME.field_name)

    def set_StartingQuantitySQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'StartingQuantitySQ' on this record model
        """
        self.set_field_value(self.STARTINGQUANTITYSQ__FIELD_NAME.field_name, value)

    def get_StartingQuantitySQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'StartingQuantitySQ' from this record model
        """
        return self.get_field_value(self.STARTINGQUANTITYSQ__FIELD_NAME.field_name)

    def set_TFAAreaPercentTotal_field(self, value: Optional[float]):
        """
        Set data field with field name 'TFAAreaPercentTotal' on this record model
        """
        self.set_field_value(self.TFAAREAPERCENTTOTAL__FIELD_NAME.field_name, value)

    def get_TFAAreaPercentTotal_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TFAAreaPercentTotal' from this record model
        """
        return self.get_field_value(self.TFAAREAPERCENTTOTAL__FIELD_NAME.field_name)

    def set_TFAIsFound_field(self, value: Optional[bool]):
        """
        Set data field with field name 'TFAIsFound' on this record model
        """
        self.set_field_value(self.TFAISFOUND__FIELD_NAME.field_name, value)

    def get_TFAIsFound_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'TFAIsFound' from this record model
        """
        return self.get_field_value(self.TFAISFOUND__FIELD_NAME.field_name)

    def set_TFARetentionTime_field(self, value: Optional[float]):
        """
        Set data field with field name 'TFARetentionTime' on this record model
        """
        self.set_field_value(self.TFARETENTIONTIME__FIELD_NAME.field_name, value)

    def get_TFARetentionTime_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TFARetentionTime' from this record model
        """
        return self.get_field_value(self.TFARETENTIONTIME__FIELD_NAME.field_name)

    def set_TableEntryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TableEntryName' on this record model
        """
        self.set_field_value(self.TABLEENTRYNAME__FIELD_NAME.field_name, value)

    def get_TableEntryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TableEntryName' from this record model
        """
        return self.get_field_value(self.TABLEENTRYNAME__FIELD_NAME.field_name)

    def set_TapeStationResultArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'TapeStationResult.Area' on this record model
        """
        self.set_field_value(self.TAPESTATIONRESULT_EXT_AREA__FIELD_NAME.field_name, value)

    def get_TapeStationResultArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TapeStationResult.Area' from this record model
        """
        return self.get_field_value(self.TAPESTATIONRESULT_EXT_AREA__FIELD_NAME.field_name)

    def set_TapeStationResultAvgBPSize_field(self, value: Optional[float]):
        """
        Set data field with field name 'TapeStationResult.AvgBPSize' on this record model
        """
        self.set_field_value(self.TAPESTATIONRESULT_EXT_AVGBPSIZE__FIELD_NAME.field_name, value)

    def get_TapeStationResultAvgBPSize_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TapeStationResult.AvgBPSize' from this record model
        """
        return self.get_field_value(self.TAPESTATIONRESULT_EXT_AVGBPSIZE__FIELD_NAME.field_name)

    def set_TapeStationResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'TapeStationResult.CreatedBy' on this record model
        """
        self.set_field_value(self.TAPESTATIONRESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_TapeStationResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TapeStationResult.CreatedBy' from this record model
        """
        return self.get_field_value(self.TAPESTATIONRESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_TapeStationResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'TapeStationResult.DateCreated' on this record model
        """
        self.set_field_value(self.TAPESTATIONRESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_TapeStationResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TapeStationResult.DateCreated' from this record model
        """
        return self.get_field_value(self.TAPESTATIONRESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_TapeStationResultMolarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'TapeStationResult.Molarity' on this record model
        """
        self.set_field_value(self.TAPESTATIONRESULT_EXT_MOLARITY__FIELD_NAME.field_name, value)

    def get_TapeStationResultMolarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TapeStationResult.Molarity' from this record model
        """
        return self.get_field_value(self.TAPESTATIONRESULT_EXT_MOLARITY__FIELD_NAME.field_name)

    def set_TapeStationResultMolarityUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'TapeStationResult.MolarityUnits' on this record model
        """
        self.set_field_value(self.TAPESTATIONRESULT_EXT_MOLARITYUNITS__FIELD_NAME.field_name, value)

    def get_TapeStationResultMolarityUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TapeStationResult.MolarityUnits' from this record model
        """
        return self.get_field_value(self.TAPESTATIONRESULT_EXT_MOLARITYUNITS__FIELD_NAME.field_name)

    def set_TapeStationResultPeakRegionIdentifier_field(self, value: Optional[str]):
        """
        Set data field with field name 'TapeStationResult.PeakRegionIdentifier' on this record model
        """
        self.set_field_value(self.TAPESTATIONRESULT_EXT_PEAKREGIONIDENTIFIER__FIELD_NAME.field_name, value)

    def get_TapeStationResultPeakRegionIdentifier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TapeStationResult.PeakRegionIdentifier' from this record model
        """
        return self.get_field_value(self.TAPESTATIONRESULT_EXT_PEAKREGIONIDENTIFIER__FIELD_NAME.field_name)

    def set_TapeStationResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'TapeStationResult.RecordId' on this record model
        """
        self.set_field_value(self.TAPESTATIONRESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_TapeStationResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TapeStationResult.RecordId' from this record model
        """
        return self.get_field_value(self.TAPESTATIONRESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_TapeStationResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'TapeStationResult.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.TAPESTATIONRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_TapeStationResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TapeStationResult.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.TAPESTATIONRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_TapeStationResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'TapeStationResult.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.TAPESTATIONRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_TapeStationResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TapeStationResult.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.TAPESTATIONRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_TapeStationResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'TapeStationResult.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.TAPESTATIONRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_TapeStationResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TapeStationResult.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.TAPESTATIONRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_TareWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'TareWeight' on this record model
        """
        self.set_field_value(self.TAREWEIGHT__FIELD_NAME.field_name, value)

    def get_TareWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TareWeight' from this record model
        """
        return self.get_field_value(self.TAREWEIGHT__FIELD_NAME.field_name)

    def set_TargetName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TargetName' on this record model
        """
        self.set_field_value(self.TARGETNAME__FIELD_NAME.field_name, value)

    def get_TargetName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TargetName' from this record model
        """
        return self.get_field_value(self.TARGETNAME__FIELD_NAME.field_name)

    def set_Task_field(self, value: Optional[str]):
        """
        Set data field with field name 'Task' on this record model
        """
        self.set_field_value(self.TASK__FIELD_NAME.field_name, value)

    def get_Task_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Task' from this record model
        """
        return self.get_field_value(self.TASK__FIELD_NAME.field_name)

    def set_TimeCorrectedArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'TimeCorrectedArea' on this record model
        """
        self.set_field_value(self.TIMECORRECTEDAREA__FIELD_NAME.field_name, value)

    def get_TimeCorrectedArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TimeCorrectedArea' from this record model
        """
        return self.get_field_value(self.TIMECORRECTEDAREA__FIELD_NAME.field_name)

    def set_ToTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'ToTime' on this record model
        """
        self.set_field_value(self.TOTIME__FIELD_NAME.field_name, value)

    def get_ToTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ToTime' from this record model
        """
        return self.get_field_value(self.TOTIME__FIELD_NAME.field_name)

    def set_TotalConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalConcentration' on this record model
        """
        self.set_field_value(self.TOTALCONCENTRATION__FIELD_NAME.field_name, value)

    def get_TotalConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalConcentration' from this record model
        """
        return self.get_field_value(self.TOTALCONCENTRATION__FIELD_NAME.field_name)

    def set_TubeVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'TubeVolume' on this record model
        """
        self.set_field_value(self.TUBEVOLUME__FIELD_NAME.field_name, value)

    def get_TubeVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TubeVolume' from this record model
        """
        return self.get_field_value(self.TUBEVOLUME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_ViCellAspirateCycles_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellAspirateCycles' on this record model
        """
        self.set_field_value(self.VICELLASPIRATECYCLES__FIELD_NAME.field_name, value)

    def get_ViCellAspirateCycles_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellAspirateCycles' from this record model
        """
        return self.get_field_value(self.VICELLASPIRATECYCLES__FIELD_NAME.field_name)

    def set_ViCellAvgBg_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellAvgBg' on this record model
        """
        self.set_field_value(self.VICELLAVGBG__FIELD_NAME.field_name, value)

    def get_ViCellAvgBg_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellAvgBg' from this record model
        """
        return self.get_field_value(self.VICELLAVGBG__FIELD_NAME.field_name)

    def set_ViCellAvgCellsImg_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellAvgCellsImg' on this record model
        """
        self.set_field_value(self.VICELLAVGCELLSIMG__FIELD_NAME.field_name, value)

    def get_ViCellAvgCellsImg_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellAvgCellsImg' from this record model
        """
        return self.get_field_value(self.VICELLAVGCELLSIMG__FIELD_NAME.field_name)

    def set_ViCellAvgCirc_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellAvgCirc' on this record model
        """
        self.set_field_value(self.VICELLAVGCIRC__FIELD_NAME.field_name, value)

    def get_ViCellAvgCirc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellAvgCirc' from this record model
        """
        return self.get_field_value(self.VICELLAVGCIRC__FIELD_NAME.field_name)

    def set_ViCellAvgDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellAvgDiam' on this record model
        """
        self.set_field_value(self.VICELLAVGDIAM__FIELD_NAME.field_name, value)

    def get_ViCellAvgDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellAvgDiam' from this record model
        """
        return self.get_field_value(self.VICELLAVGDIAM__FIELD_NAME.field_name)

    def set_ViCellComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViCellComment' on this record model
        """
        self.set_field_value(self.VICELLCOMMENT__FIELD_NAME.field_name, value)

    def get_ViCellComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViCellComment' from this record model
        """
        return self.get_field_value(self.VICELLCOMMENT__FIELD_NAME.field_name)

    def set_ViCellDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViCellDateTime' on this record model
        """
        self.set_field_value(self.VICELLDATETIME__FIELD_NAME.field_name, value)

    def get_ViCellDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViCellDateTime' from this record model
        """
        return self.get_field_value(self.VICELLDATETIME__FIELD_NAME.field_name)

    def set_ViCellFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViCellFileName' on this record model
        """
        self.set_field_value(self.VICELLFILENAME__FIELD_NAME.field_name, value)

    def get_ViCellFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViCellFileName' from this record model
        """
        return self.get_field_value(self.VICELLFILENAME__FIELD_NAME.field_name)

    def set_ViCellImgs_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellImgs' on this record model
        """
        self.set_field_value(self.VICELLIMGS__FIELD_NAME.field_name, value)

    def get_ViCellImgs_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellImgs' from this record model
        """
        return self.get_field_value(self.VICELLIMGS__FIELD_NAME.field_name)

    def set_ViCellMaxDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellMaxDiam' on this record model
        """
        self.set_field_value(self.VICELLMAXDIAM__FIELD_NAME.field_name, value)

    def get_ViCellMaxDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellMaxDiam' from this record model
        """
        return self.get_field_value(self.VICELLMAXDIAM__FIELD_NAME.field_name)

    def set_ViCellMinCir_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellMinCir' on this record model
        """
        self.set_field_value(self.VICELLMINCIR__FIELD_NAME.field_name, value)

    def get_ViCellMinCir_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellMinCir' from this record model
        """
        return self.get_field_value(self.VICELLMINCIR__FIELD_NAME.field_name)

    def set_ViCellMinDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellMinDiam' on this record model
        """
        self.set_field_value(self.VICELLMINDIAM__FIELD_NAME.field_name, value)

    def get_ViCellMinDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellMinDiam' from this record model
        """
        return self.get_field_value(self.VICELLMINDIAM__FIELD_NAME.field_name)

    def set_ViCellResultAspirateCycles_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.AspirateCycles' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_ASPIRATECYCLES__FIELD_NAME.field_name, value)

    def get_ViCellResultAspirateCycles_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.AspirateCycles' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_ASPIRATECYCLES__FIELD_NAME.field_name)

    def set_ViCellResultAvgBg_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.AvgBg' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_AVGBG__FIELD_NAME.field_name, value)

    def get_ViCellResultAvgBg_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.AvgBg' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_AVGBG__FIELD_NAME.field_name)

    def set_ViCellResultAvgCellsImg_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.AvgCellsImg' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_AVGCELLSIMG__FIELD_NAME.field_name, value)

    def get_ViCellResultAvgCellsImg_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.AvgCellsImg' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_AVGCELLSIMG__FIELD_NAME.field_name)

    def set_ViCellResultAvgCirc_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.AvgCirc' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_AVGCIRC__FIELD_NAME.field_name, value)

    def get_ViCellResultAvgCirc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.AvgCirc' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_AVGCIRC__FIELD_NAME.field_name)

    def set_ViCellResultAvgDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.AvgDiam' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_AVGDIAM__FIELD_NAME.field_name, value)

    def get_ViCellResultAvgDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.AvgDiam' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_AVGDIAM__FIELD_NAME.field_name)

    def set_ViCellResultCellType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViCellResult.CellType' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_CELLTYPE__FIELD_NAME.field_name, value)

    def get_ViCellResultCellType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViCellResult.CellType' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_CELLTYPE__FIELD_NAME.field_name)

    def set_ViCellResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViCellResult.CreatedBy' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_ViCellResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViCellResult.CreatedBy' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_ViCellResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViCellResult.DateCreated' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_ViCellResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViCellResult.DateCreated' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_ViCellResultDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViCellResult.DateTime' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_DATETIME__FIELD_NAME.field_name, value)

    def get_ViCellResultDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViCellResult.DateTime' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_DATETIME__FIELD_NAME.field_name)

    def set_ViCellResultFileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViCellResult.FileName' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_FILENAME__FIELD_NAME.field_name, value)

    def get_ViCellResultFileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViCellResult.FileName' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_FILENAME__FIELD_NAME.field_name)

    def set_ViCellResultImgs_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.Imgs' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_IMGS__FIELD_NAME.field_name, value)

    def get_ViCellResultImgs_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.Imgs' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_IMGS__FIELD_NAME.field_name)

    def set_ViCellResultMaxDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.MaxDiam' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_MAXDIAM__FIELD_NAME.field_name, value)

    def get_ViCellResultMaxDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.MaxDiam' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_MAXDIAM__FIELD_NAME.field_name)

    def set_ViCellResultMinCir_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.MinCir' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_MINCIR__FIELD_NAME.field_name, value)

    def get_ViCellResultMinCir_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.MinCir' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_MINCIR__FIELD_NAME.field_name)

    def set_ViCellResultMinDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.MinDiam' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_MINDIAM__FIELD_NAME.field_name, value)

    def get_ViCellResultMinDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.MinDiam' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_MINDIAM__FIELD_NAME.field_name)

    def set_ViCellResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViCellResult.RecordId' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_ViCellResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViCellResult.RecordId' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_ViCellResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViCellResult.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_ViCellResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViCellResult.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_ViCellResultTotalCells_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.TotalCells' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_TOTALCELLS__FIELD_NAME.field_name, value)

    def get_ViCellResultTotalCells_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.TotalCells' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_TOTALCELLS__FIELD_NAME.field_name)

    def set_ViCellResultTotalCellsMl_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.TotalCellsMl' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_TOTALCELLSML__FIELD_NAME.field_name, value)

    def get_ViCellResultTotalCellsMl_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.TotalCellsMl' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_TOTALCELLSML__FIELD_NAME.field_name)

    def set_ViCellResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViCellResult.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_ViCellResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViCellResult.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_ViCellResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViCellResult.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_ViCellResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViCellResult.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_ViCellResultViability_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.Viability' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_VIABILITY__FIELD_NAME.field_name, value)

    def get_ViCellResultViability_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.Viability' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_VIABILITY__FIELD_NAME.field_name)

    def set_ViCellResultViableCells_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.ViableCells' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_VIABLECELLS__FIELD_NAME.field_name, value)

    def get_ViCellResultViableCells_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.ViableCells' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_VIABLECELLS__FIELD_NAME.field_name)

    def set_ViCellResultViableCellsMl_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellResult.ViableCellsMl' on this record model
        """
        self.set_field_value(self.VICELLRESULT_EXT_VIABLECELLSML__FIELD_NAME.field_name, value)

    def get_ViCellResultViableCellsMl_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellResult.ViableCellsMl' from this record model
        """
        return self.get_field_value(self.VICELLRESULT_EXT_VIABLECELLSML__FIELD_NAME.field_name)

    def set_ViCellTotalCells_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellTotalCells' on this record model
        """
        self.set_field_value(self.VICELLTOTALCELLS__FIELD_NAME.field_name, value)

    def get_ViCellTotalCells_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellTotalCells' from this record model
        """
        return self.get_field_value(self.VICELLTOTALCELLS__FIELD_NAME.field_name)

    def set_ViCellTotalCellsMl_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellTotalCellsMl' on this record model
        """
        self.set_field_value(self.VICELLTOTALCELLSML__FIELD_NAME.field_name, value)

    def get_ViCellTotalCellsMl_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellTotalCellsMl' from this record model
        """
        return self.get_field_value(self.VICELLTOTALCELLSML__FIELD_NAME.field_name)

    def set_ViCellType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViCellType' on this record model
        """
        self.set_field_value(self.VICELLTYPE__FIELD_NAME.field_name, value)

    def get_ViCellType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViCellType' from this record model
        """
        return self.get_field_value(self.VICELLTYPE__FIELD_NAME.field_name)

    def set_ViCellViability_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellViability' on this record model
        """
        self.set_field_value(self.VICELLVIABILITY__FIELD_NAME.field_name, value)

    def get_ViCellViability_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellViability' from this record model
        """
        return self.get_field_value(self.VICELLVIABILITY__FIELD_NAME.field_name)

    def set_ViCellViableCells_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellViableCells' on this record model
        """
        self.set_field_value(self.VICELLVIABLECELLS__FIELD_NAME.field_name, value)

    def get_ViCellViableCells_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellViableCells' from this record model
        """
        return self.get_field_value(self.VICELLVIABLECELLS__FIELD_NAME.field_name)

    def set_ViCellViableCellsMl_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViCellViableCellsMl' on this record model
        """
        self.set_field_value(self.VICELLVIABLECELLSML__FIELD_NAME.field_name, value)

    def get_ViCellViableCellsMl_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViCellViableCellsMl' from this record model
        """
        return self.get_field_value(self.VICELLVIABLECELLSML__FIELD_NAME.field_name)

    def set_ViiA7ResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViiA7Result.CreatedBy' on this record model
        """
        self.set_field_value(self.VIIA7RESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_ViiA7ResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViiA7Result.CreatedBy' from this record model
        """
        return self.get_field_value(self.VIIA7RESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_ViiA7ResultCt_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViiA7Result.Ct' on this record model
        """
        self.set_field_value(self.VIIA7RESULT_EXT_CT__FIELD_NAME.field_name, value)

    def get_ViiA7ResultCt_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViiA7Result.Ct' from this record model
        """
        return self.get_field_value(self.VIIA7RESULT_EXT_CT__FIELD_NAME.field_name)

    def set_ViiA7ResultCtMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViiA7Result.CtMean' on this record model
        """
        self.set_field_value(self.VIIA7RESULT_EXT_CTMEAN__FIELD_NAME.field_name, value)

    def get_ViiA7ResultCtMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViiA7Result.CtMean' from this record model
        """
        return self.get_field_value(self.VIIA7RESULT_EXT_CTMEAN__FIELD_NAME.field_name)

    def set_ViiA7ResultCtSD_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViiA7Result.CtSD' on this record model
        """
        self.set_field_value(self.VIIA7RESULT_EXT_CTSD__FIELD_NAME.field_name, value)

    def get_ViiA7ResultCtSD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViiA7Result.CtSD' from this record model
        """
        return self.get_field_value(self.VIIA7RESULT_EXT_CTSD__FIELD_NAME.field_name)

    def set_ViiA7ResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViiA7Result.DateCreated' on this record model
        """
        self.set_field_value(self.VIIA7RESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_ViiA7ResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViiA7Result.DateCreated' from this record model
        """
        return self.get_field_value(self.VIIA7RESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_ViiA7ResultQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViiA7Result.Quantity' on this record model
        """
        self.set_field_value(self.VIIA7RESULT_EXT_QUANTITY__FIELD_NAME.field_name, value)

    def get_ViiA7ResultQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViiA7Result.Quantity' from this record model
        """
        return self.get_field_value(self.VIIA7RESULT_EXT_QUANTITY__FIELD_NAME.field_name)

    def set_ViiA7ResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViiA7Result.RecordId' on this record model
        """
        self.set_field_value(self.VIIA7RESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_ViiA7ResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViiA7Result.RecordId' from this record model
        """
        return self.get_field_value(self.VIIA7RESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_ViiA7ResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViiA7Result.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.VIIA7RESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_ViiA7ResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViiA7Result.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.VIIA7RESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_ViiA7ResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViiA7Result.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.VIIA7RESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_ViiA7ResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViiA7Result.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VIIA7RESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_ViiA7ResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViiA7Result.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.VIIA7RESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_ViiA7ResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViiA7Result.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VIIA7RESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WellPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellPosition' on this record model
        """
        self.set_field_value(self.WELLPOSITION__FIELD_NAME.field_name, value)

    def get_WellPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellPosition' from this record model
        """
        return self.get_field_value(self.WELLPOSITION__FIELD_NAME.field_name)

    def set_nCounterResultCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'nCounterResult.CreatedBy' on this record model
        """
        self.set_field_value(self.NCOUNTERRESULT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_nCounterResultCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'nCounterResult.CreatedBy' from this record model
        """
        return self.get_field_value(self.NCOUNTERRESULT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_nCounterResultDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'nCounterResult.DateCreated' on this record model
        """
        self.set_field_value(self.NCOUNTERRESULT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_nCounterResultDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'nCounterResult.DateCreated' from this record model
        """
        return self.get_field_value(self.NCOUNTERRESULT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_nCounterResultProbeCount_field(self, value: Optional[float]):
        """
        Set data field with field name 'nCounterResult.ProbeCount' on this record model
        """
        self.set_field_value(self.NCOUNTERRESULT_EXT_PROBECOUNT__FIELD_NAME.field_name, value)

    def get_nCounterResultProbeCount_field(self) -> Optional[float]:
        """
        Get data field value with field name 'nCounterResult.ProbeCount' from this record model
        """
        return self.get_field_value(self.NCOUNTERRESULT_EXT_PROBECOUNT__FIELD_NAME.field_name)

    def set_nCounterResultProbeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'nCounterResult.ProbeName' on this record model
        """
        self.set_field_value(self.NCOUNTERRESULT_EXT_PROBENAME__FIELD_NAME.field_name, value)

    def get_nCounterResultProbeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'nCounterResult.ProbeName' from this record model
        """
        return self.get_field_value(self.NCOUNTERRESULT_EXT_PROBENAME__FIELD_NAME.field_name)

    def set_nCounterResultRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'nCounterResult.RecordId' on this record model
        """
        self.set_field_value(self.NCOUNTERRESULT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_nCounterResultRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'nCounterResult.RecordId' from this record model
        """
        return self.get_field_value(self.NCOUNTERRESULT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_nCounterResultRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'nCounterResult.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.NCOUNTERRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_nCounterResultRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'nCounterResult.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.NCOUNTERRESULT_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_nCounterResultVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'nCounterResult.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.NCOUNTERRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_nCounterResultVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'nCounterResult.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.NCOUNTERRESULT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_nCounterResultVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'nCounterResult.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.NCOUNTERRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_nCounterResultVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'nCounterResult.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.NCOUNTERRESULT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class QScoreDistributionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type QScoreDistribution
    Data Type Display Name: Q Score Distribution (Q Score Distributions)
    Fields: CreatedBy, LaneCol, Lane, DateCreated, ColRead, DataRecordName, PercentGreatQTwenty, PercentGreatQThirty, VeloxLastModifiedDate, VeloxLastModifiedBy
    <!-- DISPLAY IN INSTRUMENT RUN MONITOR -->
    """
    DATA_TYPE_NAME: Final[str] = 'QScoreDistribution'
    DISPLAY_NAME: Final[str] = "Q Score Distribution"
    PLURAL_DISPLAY_NAME: Final[str] = "Q Score Distributions"
    COLREAD__FIELD_NAME: Final[WrapperField] = WrapperField("ColRead", FieldType.STRING, display_name="Read")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    LANE__FIELD_NAME: Final[WrapperField] = WrapperField("Lane", FieldType.LONG, display_name="Lane (Long Integer)")
    LANECOL__FIELD_NAME: Final[WrapperField] = WrapperField("LaneCol", FieldType.STRING, display_name="Lane")
    PERCENTGREATQTHIRTY__FIELD_NAME: Final[WrapperField] = WrapperField("PercentGreatQThirty", FieldType.DOUBLE, display_name="% >= Q30")
    PERCENTGREATQTWENTY__FIELD_NAME: Final[WrapperField] = WrapperField("PercentGreatQTwenty", FieldType.DOUBLE, display_name="% >= Q20")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColRead_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColRead' on this record model
        """
        self.set_field_value(self.COLREAD__FIELD_NAME.field_name, value)

    def get_ColRead_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColRead' from this record model
        """
        return self.get_field_value(self.COLREAD__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Lane_field(self, value: Optional[int]):
        """
        Set data field with field name 'Lane' on this record model
        """
        self.set_field_value(self.LANE__FIELD_NAME.field_name, value)

    def get_Lane_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Lane' from this record model
        """
        return self.get_field_value(self.LANE__FIELD_NAME.field_name)

    def set_LaneCol_field(self, value: Optional[str]):
        """
        Set data field with field name 'LaneCol' on this record model
        """
        self.set_field_value(self.LANECOL__FIELD_NAME.field_name, value)

    def get_LaneCol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LaneCol' from this record model
        """
        return self.get_field_value(self.LANECOL__FIELD_NAME.field_name)

    def set_PercentGreatQThirty_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentGreatQThirty' on this record model
        """
        self.set_field_value(self.PERCENTGREATQTHIRTY__FIELD_NAME.field_name, value)

    def get_PercentGreatQThirty_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentGreatQThirty' from this record model
        """
        return self.get_field_value(self.PERCENTGREATQTHIRTY__FIELD_NAME.field_name)

    def set_PercentGreatQTwenty_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentGreatQTwenty' on this record model
        """
        self.set_field_value(self.PERCENTGREATQTWENTY__FIELD_NAME.field_name, value)

    def get_PercentGreatQTwenty_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentGreatQTwenty' from this record model
        """
        return self.get_field_value(self.PERCENTGREATQTWENTY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class QuadraticRegressionParameterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type QuadraticRegressionParameter
    Data Type Display Name: Quadratic Regression Parameter (Quadratic Regression Parameters)
    Fields: QuadraticB, QuadraticC, SBA_RSquared, QuadraticA, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SBA_AdjRSquared
    """
    DATA_TYPE_NAME: Final[str] = 'QuadraticRegressionParameter'
    DISPLAY_NAME: Final[str] = "Quadratic Regression Parameter"
    PLURAL_DISPLAY_NAME: Final[str] = "Quadratic Regression Parameters"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    QUADRATICA__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticA", FieldType.DOUBLE, display_name="A")
    QUADRATICB__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticB", FieldType.DOUBLE, display_name="B")
    QUADRATICC__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticC", FieldType.DOUBLE, display_name="C")
    SBA_ADJRSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AdjRSquared", FieldType.DOUBLE, display_name="Adjusted R Squared")
    SBA_RSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RSquared", FieldType.DOUBLE, display_name="R Squared")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_QuadraticA_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuadraticA' on this record model
        """
        self.set_field_value(self.QUADRATICA__FIELD_NAME.field_name, value)

    def get_QuadraticA_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuadraticA' from this record model
        """
        return self.get_field_value(self.QUADRATICA__FIELD_NAME.field_name)

    def set_QuadraticB_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuadraticB' on this record model
        """
        self.set_field_value(self.QUADRATICB__FIELD_NAME.field_name, value)

    def get_QuadraticB_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuadraticB' from this record model
        """
        return self.get_field_value(self.QUADRATICB__FIELD_NAME.field_name)

    def set_QuadraticC_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuadraticC' on this record model
        """
        self.set_field_value(self.QUADRATICC__FIELD_NAME.field_name, value)

    def get_QuadraticC_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuadraticC' from this record model
        """
        return self.get_field_value(self.QUADRATICC__FIELD_NAME.field_name)

    def set_SBA_AdjRSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_AdjRSquared' on this record model
        """
        self.set_field_value(self.SBA_ADJRSQUARED__FIELD_NAME.field_name, value)

    def get_SBA_AdjRSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_AdjRSquared' from this record model
        """
        return self.get_field_value(self.SBA_ADJRSQUARED__FIELD_NAME.field_name)

    def set_SBA_RSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_RSquared' on this record model
        """
        self.set_field_value(self.SBA_RSQUARED__FIELD_NAME.field_name, value)

    def get_SBA_RSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_RSquared' from this record model
        """
        return self.get_field_value(self.SBA_RSQUARED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class QuantStudioGenotypingDatumModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type QuantStudioGenotypingDatum
    Data Type Display Name: QuantStudio Genotyping Datum (QuantStudio Genotyping Datums)
    Fields: NCBISNPReference, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, GeneCall, GeneSymbol
    """
    DATA_TYPE_NAME: Final[str] = 'QuantStudioGenotypingDatum'
    DISPLAY_NAME: Final[str] = "QuantStudio Genotyping Datum"
    PLURAL_DISPLAY_NAME: Final[str] = "QuantStudio Genotyping Datums"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    GENECALL__FIELD_NAME: Final[WrapperField] = WrapperField("GeneCall", FieldType.STRING, display_name="Call")
    GENESYMBOL__FIELD_NAME: Final[WrapperField] = WrapperField("GeneSymbol", FieldType.STRING, display_name="Gene Symbol")
    NCBISNPREFERENCE__FIELD_NAME: Final[WrapperField] = WrapperField("NCBISNPReference", FieldType.STRING, display_name="NCBI SNP Reference")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GeneCall_field(self, value: Optional[str]):
        """
        Set data field with field name 'GeneCall' on this record model
        """
        self.set_field_value(self.GENECALL__FIELD_NAME.field_name, value)

    def get_GeneCall_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GeneCall' from this record model
        """
        return self.get_field_value(self.GENECALL__FIELD_NAME.field_name)

    def set_GeneSymbol_field(self, value: Optional[str]):
        """
        Set data field with field name 'GeneSymbol' on this record model
        """
        self.set_field_value(self.GENESYMBOL__FIELD_NAME.field_name, value)

    def get_GeneSymbol_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GeneSymbol' from this record model
        """
        return self.get_field_value(self.GENESYMBOL__FIELD_NAME.field_name)

    def set_NCBISNPReference_field(self, value: Optional[str]):
        """
        Set data field with field name 'NCBISNPReference' on this record model
        """
        self.set_field_value(self.NCBISNPREFERENCE__FIELD_NAME.field_name, value)

    def get_NCBISNPReference_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NCBISNPReference' from this record model
        """
        return self.get_field_value(self.NCBISNPREFERENCE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ReactionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Reaction
    Data Type Display Name: Reaction (Reactions)
    Fields: SubstanceName, Products, CreatedBy, Render, rxn, DateCreated, SMILES, ReactionCoefficient, MultiParentLink175, MultiParentLink230, Formula, DataRecordName, Reactants, RegisteredToCartridge, GenerateName, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'Reaction'
    DISPLAY_NAME: Final[str] = "Reaction"
    PLURAL_DISPLAY_NAME: Final[str] = "Reactions"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GENERATENAME__FIELD_NAME: Final[WrapperField] = WrapperField("GenerateName", FieldType.ACTION, display_name="Generate Substance Name")
    MULTIPARENTLINK175__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink175", FieldType.MULTIPARENTLINK, display_name="Linked Projects")
    MULTIPARENTLINK230__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink230", FieldType.MULTIPARENTLINK, display_name="Linked Studies")
    PRODUCTS__FIELD_NAME: Final[WrapperField] = WrapperField("Products", FieldType.SELECTION, display_name="Products")
    REACTANTS__FIELD_NAME: Final[WrapperField] = WrapperField("Reactants", FieldType.SELECTION, display_name="Reactants")
    REACTIONCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("ReactionCoefficient", FieldType.INTEGER, display_name="Reaction Coefficient")
    REGISTEREDTOCARTRIDGE__FIELD_NAME: Final[WrapperField] = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN, display_name="Registered To Cartridge")
    RENDER__FIELD_NAME: Final[WrapperField] = WrapperField("Render", FieldType.STRING, display_name="Render")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="SMILES")
    SUBSTANCENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SubstanceName", FieldType.STRING, display_name="Substance Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    RXN__FIELD_NAME: Final[WrapperField] = WrapperField("rxn", FieldType.STRING, display_name="RxN")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_Products_field(self, value: Optional[str]):
        """
        Set data field with field name 'Products' on this record model
        """
        self.set_field_value(self.PRODUCTS__FIELD_NAME.field_name, value)

    def get_Products_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Products' from this record model
        """
        return self.get_field_value(self.PRODUCTS__FIELD_NAME.field_name)

    def set_Reactants_field(self, value: Optional[str]):
        """
        Set data field with field name 'Reactants' on this record model
        """
        self.set_field_value(self.REACTANTS__FIELD_NAME.field_name, value)

    def get_Reactants_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Reactants' from this record model
        """
        return self.get_field_value(self.REACTANTS__FIELD_NAME.field_name)

    def set_ReactionCoefficient_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReactionCoefficient' on this record model
        """
        self.set_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_ReactionCoefficient_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReactionCoefficient' from this record model
        """
        return self.get_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_Render_field(self, value: Optional[str]):
        """
        Set data field with field name 'Render' on this record model
        """
        self.set_field_value(self.RENDER__FIELD_NAME.field_name, value)

    def get_Render_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Render' from this record model
        """
        return self.get_field_value(self.RENDER__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SubstanceName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubstanceName' on this record model
        """
        self.set_field_value(self.SUBSTANCENAME__FIELD_NAME.field_name, value)

    def get_SubstanceName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubstanceName' from this record model
        """
        return self.get_field_value(self.SUBSTANCENAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_rxn_field(self, value: Optional[str]):
        """
        Set data field with field name 'rxn' on this record model
        """
        self.set_field_value(self.RXN__FIELD_NAME.field_name, value)

    def get_rxn_field(self) -> Optional[str]:
        """
        Get data field value with field name 'rxn' from this record model
        """
        return self.get_field_value(self.RXN__FIELD_NAME.field_name)


class ReactionComponentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ReactionComponent
    Data Type Display Name: Reaction Component (Reaction Components)
    Fields: CreatedBy, inchi, DateCreated, NoStereoSmiles, MOL, ReactionCoefficient, CXSMILESHash, HasOrStereoGroup, LimitingReactant, Name, Role, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, StereoRegHash, InchiKey
    """
    DATA_TYPE_NAME: Final[str] = 'ReactionComponent'
    DISPLAY_NAME: Final[str] = "Reaction Component"
    PLURAL_DISPLAY_NAME: Final[str] = "Reaction Components"
    CXSMILESHASH__FIELD_NAME: Final[WrapperField] = WrapperField("CXSMILESHash", FieldType.STRING, display_name="CXSMILES Hash")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    HASORSTEREOGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("HasOrStereoGroup", FieldType.BOOLEAN, display_name="Contains OR Stereo")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="INCHI Key")
    LIMITINGREACTANT__FIELD_NAME: Final[WrapperField] = WrapperField("LimitingReactant", FieldType.BOOLEAN, display_name="Limiting Reactant")
    MOL__FIELD_NAME: Final[WrapperField] = WrapperField("MOL", FieldType.STRING, display_name="MOL")
    NAME__FIELD_NAME: Final[WrapperField] = WrapperField("Name", FieldType.STRING, display_name="Name")
    NOSTEREOSMILES__FIELD_NAME: Final[WrapperField] = WrapperField("NoStereoSmiles", FieldType.STRING, display_name="No Stereo Smiles")
    REACTIONCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("ReactionCoefficient", FieldType.DOUBLE, display_name="Reaction Coefficient")
    ROLE__FIELD_NAME: Final[WrapperField] = WrapperField("Role", FieldType.SELECTION, display_name="Role")
    STEREOREGHASH__FIELD_NAME: Final[WrapperField] = WrapperField("StereoRegHash", FieldType.STRING, display_name="Stereo Registration Hash")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="INCHI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'CXSMILESHash' on this record model
        """
        self.set_field_value(self.CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CXSMILESHASH__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_HasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_LimitingReactant_field(self, value: Optional[bool]):
        """
        Set data field with field name 'LimitingReactant' on this record model
        """
        self.set_field_value(self.LIMITINGREACTANT__FIELD_NAME.field_name, value)

    def get_LimitingReactant_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'LimitingReactant' from this record model
        """
        return self.get_field_value(self.LIMITINGREACTANT__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_Name_field(self, value: Optional[str]):
        """
        Set data field with field name 'Name' on this record model
        """
        self.set_field_value(self.NAME__FIELD_NAME.field_name, value)

    def get_Name_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Name' from this record model
        """
        return self.get_field_value(self.NAME__FIELD_NAME.field_name)

    def set_NoStereoSmiles_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoStereoSmiles' on this record model
        """
        self.set_field_value(self.NOSTEREOSMILES__FIELD_NAME.field_name, value)

    def get_NoStereoSmiles_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoStereoSmiles' from this record model
        """
        return self.get_field_value(self.NOSTEREOSMILES__FIELD_NAME.field_name)

    def set_ReactionCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReactionCoefficient' on this record model
        """
        self.set_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_ReactionCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReactionCoefficient' from this record model
        """
        return self.get_field_value(self.REACTIONCOEFFICIENT__FIELD_NAME.field_name)

    def set_Role_field(self, value: Optional[str]):
        """
        Set data field with field name 'Role' on this record model
        """
        self.set_field_value(self.ROLE__FIELD_NAME.field_name, value)

    def get_Role_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Role' from this record model
        """
        return self.get_field_value(self.ROLE__FIELD_NAME.field_name)

    def set_StereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'StereoRegHash' on this record model
        """
        self.set_field_value(self.STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_StereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StereoRegHash' from this record model
        """
        return self.get_field_value(self.STEREOREGHASH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class ReactionConditionsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ReactionConditions
    Data Type Display Name: Reaction Conditions (Reaction Conditions)
    Fields: CreatedBy, DataRecordName, GabUniqueId, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, Yield, Ratio
    """
    DATA_TYPE_NAME: Final[str] = 'ReactionConditions'
    DISPLAY_NAME: Final[str] = "Reaction Conditions"
    PLURAL_DISPLAY_NAME: Final[str] = "Reaction Conditions"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    GABUNIQUEID__FIELD_NAME: Final[WrapperField] = WrapperField("GabUniqueId", FieldType.STRING, display_name="Gab Unique Id")
    RATIO__FIELD_NAME: Final[WrapperField] = WrapperField("Ratio", FieldType.DOUBLE, display_name="Ratio")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("Yield", FieldType.DOUBLE, display_name="Yield %")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GabUniqueId_field(self, value: Optional[str]):
        """
        Set data field with field name 'GabUniqueId' on this record model
        """
        self.set_field_value(self.GABUNIQUEID__FIELD_NAME.field_name, value)

    def get_GabUniqueId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GabUniqueId' from this record model
        """
        return self.get_field_value(self.GABUNIQUEID__FIELD_NAME.field_name)

    def set_Ratio_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ratio' on this record model
        """
        self.set_field_value(self.RATIO__FIELD_NAME.field_name, value)

    def get_Ratio_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ratio' from this record model
        """
        return self.get_field_value(self.RATIO__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)


class RequestModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Request
    Data Type Display Name: Request (Requests)
    Fields: StudySubjectRequest.NumberOfSubjects, StudySubjectRequest.Species, ArePoolsIncluded, DisableRequetFields, RequesterPhoneNumber, StudySubjectRequest.CreatedBy, InProcessDate, AreSamplesLibraries, Status, StudySubjectRequest.Gender, CreatedBy, RequestId, StudySubjectRequest.VeloxLastModifiedBy, StudySubjectRequest.DataRecordName, DeliveryDestination, TATFromInProcessing, CompletedDate, StudySubjectRequest.LaunchSubjectRegistration, ReceivedDate, StudySubjectRequest.RecordId, AddSamplesMethod, DataRecordName, RequesterOrganization, StudySubjectRequest.SubjectCondition, DeliveryDueDate, TotalSampleVolume, RequestedStain, StudySubjectRequest.Strain, DateCreated, StudySubjectRequest.VeloxLastModifiedDate, StudySubjectRequest.DateCreated, RequestApproved, RequestDate, TATFromReceiving, RequesterName, NumOfReadsNeeded, VeloxLastModifiedBy, RequesterEmail, RequestorGroup, RequestName, PartiallyReceivedDate, NumberOfSamples, StudySubjectRequest.RelatedRecord156, VeloxLastModifiedDate
    """
    DATA_TYPE_NAME: Final[str] = 'Request'
    DISPLAY_NAME: Final[str] = "Request"
    PLURAL_DISPLAY_NAME: Final[str] = "Requests"
    ADDSAMPLESMETHOD__FIELD_NAME: Final[WrapperField] = WrapperField("AddSamplesMethod", FieldType.PICKLIST, display_name="Sample Creation or Selection Method")
    AREPOOLSINCLUDED__FIELD_NAME: Final[WrapperField] = WrapperField("ArePoolsIncluded", FieldType.BOOLEAN, display_name="Are Pools Included?")
    ARESAMPLESLIBRARIES__FIELD_NAME: Final[WrapperField] = WrapperField("AreSamplesLibraries", FieldType.BOOLEAN, display_name="Are Samples Libraries?")
    COMPLETEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("CompletedDate", FieldType.DATE, display_name="Completed Date")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DELIVERYDESTINATION__FIELD_NAME: Final[WrapperField] = WrapperField("DeliveryDestination", FieldType.STRING, display_name="Delivery Destination")
    DELIVERYDUEDATE__FIELD_NAME: Final[WrapperField] = WrapperField("DeliveryDueDate", FieldType.DATE, display_name="Delivery Due Date")
    DISABLEREQUETFIELDS__FIELD_NAME: Final[WrapperField] = WrapperField("DisableRequetFields", FieldType.BOOLEAN, display_name="Disable Request Fields")
    INPROCESSDATE__FIELD_NAME: Final[WrapperField] = WrapperField("InProcessDate", FieldType.DATE, display_name="In Process Date")
    NUMOFREADSNEEDED__FIELD_NAME: Final[WrapperField] = WrapperField("NumOfReadsNeeded", FieldType.INTEGER, display_name="Num Of Reads Needed")
    NUMBEROFSAMPLES__FIELD_NAME: Final[WrapperField] = WrapperField("NumberOfSamples", FieldType.LONG, display_name="Number Of Samples")
    PARTIALLYRECEIVEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("PartiallyReceivedDate", FieldType.DATE, display_name="Partially Received Date")
    RECEIVEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ReceivedDate", FieldType.DATE, display_name="Received Date")
    REQUESTAPPROVED__FIELD_NAME: Final[WrapperField] = WrapperField("RequestApproved", FieldType.BOOLEAN, display_name="Request Approved")
    REQUESTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RequestDate", FieldType.DATE, display_name="Request Date")
    REQUESTID__FIELD_NAME: Final[WrapperField] = WrapperField("RequestId", FieldType.AUTO_ACCESSION, display_name="Request ID")
    REQUESTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("RequestName", FieldType.STRING, display_name="Request Name")
    REQUESTEDSTAIN__FIELD_NAME: Final[WrapperField] = WrapperField("RequestedStain", FieldType.PICKLIST, display_name="Requested Stain")
    REQUESTEREMAIL__FIELD_NAME: Final[WrapperField] = WrapperField("RequesterEmail", FieldType.STRING, display_name="Requester Email")
    REQUESTERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("RequesterName", FieldType.STRING, display_name="Requester Name")
    REQUESTERORGANIZATION__FIELD_NAME: Final[WrapperField] = WrapperField("RequesterOrganization", FieldType.STRING, display_name="Requester Organization")
    REQUESTERPHONENUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("RequesterPhoneNumber", FieldType.STRING, display_name="Requester Phone Number")
    REQUESTORGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("RequestorGroup", FieldType.STRING, display_name="Requestor Group")
    STATUS__FIELD_NAME: Final[WrapperField] = WrapperField("Status", FieldType.PICKLIST, display_name="Status")
    STUDYSUBJECTREQUEST_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRequest.CreatedBy", FieldType.STRING, display_name="Created By")
    STUDYSUBJECTREQUEST_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRequest.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    STUDYSUBJECTREQUEST_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRequest.DateCreated", FieldType.DATE, display_name="Date Created")
    STUDYSUBJECTREQUEST_EXT_GENDER__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRequest.Gender", FieldType.SELECTION, display_name="Gender")
    STUDYSUBJECTREQUEST_EXT_LAUNCHSUBJECTREGISTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRequest.LaunchSubjectRegistration", FieldType.ACTION, display_name="Begin Subject Registration")
    STUDYSUBJECTREQUEST_EXT_NUMBEROFSUBJECTS__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRequest.NumberOfSubjects", FieldType.INTEGER, display_name="Number Of Subjects")
    STUDYSUBJECTREQUEST_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRequest.RecordId", FieldType.LONG, display_name="Record ID")
    STUDYSUBJECTREQUEST_EXT_RELATEDRECORD156__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRequest.RelatedRecord156", FieldType.PARENTLINK, display_name="Linked Request")
    STUDYSUBJECTREQUEST_EXT_SPECIES__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRequest.Species", FieldType.PICKLIST, display_name="Species")
    STUDYSUBJECTREQUEST_EXT_STRAIN__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRequest.Strain", FieldType.SELECTION, display_name="Strain")
    STUDYSUBJECTREQUEST_EXT_SUBJECTCONDITION__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRequest.SubjectCondition", FieldType.SELECTION, display_name="Subject Condition")
    STUDYSUBJECTREQUEST_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRequest.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    STUDYSUBJECTREQUEST_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRequest.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    TATFROMINPROCESSING__FIELD_NAME: Final[WrapperField] = WrapperField("TATFromInProcessing", FieldType.STRING, display_name="TAT From Processing")
    TATFROMRECEIVING__FIELD_NAME: Final[WrapperField] = WrapperField("TATFromReceiving", FieldType.STRING, display_name="TAT from Receiving")
    TOTALSAMPLEVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("TotalSampleVolume", FieldType.DOUBLE, display_name="Total Sample Volume")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AddSamplesMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'AddSamplesMethod' on this record model
        """
        self.set_field_value(self.ADDSAMPLESMETHOD__FIELD_NAME.field_name, value)

    def get_AddSamplesMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AddSamplesMethod' from this record model
        """
        return self.get_field_value(self.ADDSAMPLESMETHOD__FIELD_NAME.field_name)

    def set_ArePoolsIncluded_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ArePoolsIncluded' on this record model
        """
        self.set_field_value(self.AREPOOLSINCLUDED__FIELD_NAME.field_name, value)

    def get_ArePoolsIncluded_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ArePoolsIncluded' from this record model
        """
        return self.get_field_value(self.AREPOOLSINCLUDED__FIELD_NAME.field_name)

    def set_AreSamplesLibraries_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AreSamplesLibraries' on this record model
        """
        self.set_field_value(self.ARESAMPLESLIBRARIES__FIELD_NAME.field_name, value)

    def get_AreSamplesLibraries_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AreSamplesLibraries' from this record model
        """
        return self.get_field_value(self.ARESAMPLESLIBRARIES__FIELD_NAME.field_name)

    def set_CompletedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'CompletedDate' on this record model
        """
        self.set_field_value(self.COMPLETEDDATE__FIELD_NAME.field_name, value)

    def get_CompletedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CompletedDate' from this record model
        """
        return self.get_field_value(self.COMPLETEDDATE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DeliveryDestination_field(self, value: Optional[str]):
        """
        Set data field with field name 'DeliveryDestination' on this record model
        """
        self.set_field_value(self.DELIVERYDESTINATION__FIELD_NAME.field_name, value)

    def get_DeliveryDestination_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DeliveryDestination' from this record model
        """
        return self.get_field_value(self.DELIVERYDESTINATION__FIELD_NAME.field_name)

    def set_DeliveryDueDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'DeliveryDueDate' on this record model
        """
        self.set_field_value(self.DELIVERYDUEDATE__FIELD_NAME.field_name, value)

    def get_DeliveryDueDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DeliveryDueDate' from this record model
        """
        return self.get_field_value(self.DELIVERYDUEDATE__FIELD_NAME.field_name)

    def set_DisableRequetFields_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DisableRequetFields' on this record model
        """
        self.set_field_value(self.DISABLEREQUETFIELDS__FIELD_NAME.field_name, value)

    def get_DisableRequetFields_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DisableRequetFields' from this record model
        """
        return self.get_field_value(self.DISABLEREQUETFIELDS__FIELD_NAME.field_name)

    def set_InProcessDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'InProcessDate' on this record model
        """
        self.set_field_value(self.INPROCESSDATE__FIELD_NAME.field_name, value)

    def get_InProcessDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'InProcessDate' from this record model
        """
        return self.get_field_value(self.INPROCESSDATE__FIELD_NAME.field_name)

    def set_NumOfReadsNeeded_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumOfReadsNeeded' on this record model
        """
        self.set_field_value(self.NUMOFREADSNEEDED__FIELD_NAME.field_name, value)

    def get_NumOfReadsNeeded_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumOfReadsNeeded' from this record model
        """
        return self.get_field_value(self.NUMOFREADSNEEDED__FIELD_NAME.field_name)

    def set_NumberOfSamples_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfSamples' on this record model
        """
        self.set_field_value(self.NUMBEROFSAMPLES__FIELD_NAME.field_name, value)

    def get_NumberOfSamples_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfSamples' from this record model
        """
        return self.get_field_value(self.NUMBEROFSAMPLES__FIELD_NAME.field_name)

    def set_PartiallyReceivedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'PartiallyReceivedDate' on this record model
        """
        self.set_field_value(self.PARTIALLYRECEIVEDDATE__FIELD_NAME.field_name, value)

    def get_PartiallyReceivedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PartiallyReceivedDate' from this record model
        """
        return self.get_field_value(self.PARTIALLYRECEIVEDDATE__FIELD_NAME.field_name)

    def set_ReceivedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReceivedDate' on this record model
        """
        self.set_field_value(self.RECEIVEDDATE__FIELD_NAME.field_name, value)

    def get_ReceivedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReceivedDate' from this record model
        """
        return self.get_field_value(self.RECEIVEDDATE__FIELD_NAME.field_name)

    def set_RequestApproved_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestApproved' on this record model
        """
        self.set_field_value(self.REQUESTAPPROVED__FIELD_NAME.field_name, value)

    def get_RequestApproved_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestApproved' from this record model
        """
        return self.get_field_value(self.REQUESTAPPROVED__FIELD_NAME.field_name)

    def set_RequestDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'RequestDate' on this record model
        """
        self.set_field_value(self.REQUESTDATE__FIELD_NAME.field_name, value)

    def get_RequestDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RequestDate' from this record model
        """
        return self.get_field_value(self.REQUESTDATE__FIELD_NAME.field_name)

    def set_RequestId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequestId' on this record model
        """
        self.set_field_value(self.REQUESTID__FIELD_NAME.field_name, value)

    def get_RequestId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequestId' from this record model
        """
        return self.get_field_value(self.REQUESTID__FIELD_NAME.field_name)

    def set_RequestName_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequestName' on this record model
        """
        self.set_field_value(self.REQUESTNAME__FIELD_NAME.field_name, value)

    def get_RequestName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequestName' from this record model
        """
        return self.get_field_value(self.REQUESTNAME__FIELD_NAME.field_name)

    def set_RequestedStain_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequestedStain' on this record model
        """
        self.set_field_value(self.REQUESTEDSTAIN__FIELD_NAME.field_name, value)

    def get_RequestedStain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequestedStain' from this record model
        """
        return self.get_field_value(self.REQUESTEDSTAIN__FIELD_NAME.field_name)

    def set_RequesterEmail_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequesterEmail' on this record model
        """
        self.set_field_value(self.REQUESTEREMAIL__FIELD_NAME.field_name, value)

    def get_RequesterEmail_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequesterEmail' from this record model
        """
        return self.get_field_value(self.REQUESTEREMAIL__FIELD_NAME.field_name)

    def set_RequesterName_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequesterName' on this record model
        """
        self.set_field_value(self.REQUESTERNAME__FIELD_NAME.field_name, value)

    def get_RequesterName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequesterName' from this record model
        """
        return self.get_field_value(self.REQUESTERNAME__FIELD_NAME.field_name)

    def set_RequesterOrganization_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequesterOrganization' on this record model
        """
        self.set_field_value(self.REQUESTERORGANIZATION__FIELD_NAME.field_name, value)

    def get_RequesterOrganization_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequesterOrganization' from this record model
        """
        return self.get_field_value(self.REQUESTERORGANIZATION__FIELD_NAME.field_name)

    def set_RequesterPhoneNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequesterPhoneNumber' on this record model
        """
        self.set_field_value(self.REQUESTERPHONENUMBER__FIELD_NAME.field_name, value)

    def get_RequesterPhoneNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequesterPhoneNumber' from this record model
        """
        return self.get_field_value(self.REQUESTERPHONENUMBER__FIELD_NAME.field_name)

    def set_RequestorGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'RequestorGroup' on this record model
        """
        self.set_field_value(self.REQUESTORGROUP__FIELD_NAME.field_name, value)

    def get_RequestorGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RequestorGroup' from this record model
        """
        return self.get_field_value(self.REQUESTORGROUP__FIELD_NAME.field_name)

    def set_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'Status' on this record model
        """
        self.set_field_value(self.STATUS__FIELD_NAME.field_name, value)

    def get_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Status' from this record model
        """
        return self.get_field_value(self.STATUS__FIELD_NAME.field_name)

    def set_StudySubjectRequestCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudySubjectRequest.CreatedBy' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTREQUEST_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_StudySubjectRequestCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudySubjectRequest.CreatedBy' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTREQUEST_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_StudySubjectRequestDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'StudySubjectRequest.DateCreated' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTREQUEST_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_StudySubjectRequestDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StudySubjectRequest.DateCreated' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTREQUEST_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_StudySubjectRequestGender_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudySubjectRequest.Gender' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTREQUEST_EXT_GENDER__FIELD_NAME.field_name, value)

    def get_StudySubjectRequestGender_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudySubjectRequest.Gender' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTREQUEST_EXT_GENDER__FIELD_NAME.field_name)

    def set_StudySubjectRequestNumberOfSubjects_field(self, value: Optional[int]):
        """
        Set data field with field name 'StudySubjectRequest.NumberOfSubjects' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTREQUEST_EXT_NUMBEROFSUBJECTS__FIELD_NAME.field_name, value)

    def get_StudySubjectRequestNumberOfSubjects_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StudySubjectRequest.NumberOfSubjects' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTREQUEST_EXT_NUMBEROFSUBJECTS__FIELD_NAME.field_name)

    def set_StudySubjectRequestRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'StudySubjectRequest.RecordId' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTREQUEST_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_StudySubjectRequestRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StudySubjectRequest.RecordId' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTREQUEST_EXT_RECORDID__FIELD_NAME.field_name)

    def set_StudySubjectRequestSpecies_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudySubjectRequest.Species' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTREQUEST_EXT_SPECIES__FIELD_NAME.field_name, value)

    def get_StudySubjectRequestSpecies_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudySubjectRequest.Species' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTREQUEST_EXT_SPECIES__FIELD_NAME.field_name)

    def set_StudySubjectRequestStrain_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudySubjectRequest.Strain' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTREQUEST_EXT_STRAIN__FIELD_NAME.field_name, value)

    def get_StudySubjectRequestStrain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudySubjectRequest.Strain' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTREQUEST_EXT_STRAIN__FIELD_NAME.field_name)

    def set_StudySubjectRequestSubjectCondition_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudySubjectRequest.SubjectCondition' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTREQUEST_EXT_SUBJECTCONDITION__FIELD_NAME.field_name, value)

    def get_StudySubjectRequestSubjectCondition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudySubjectRequest.SubjectCondition' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTREQUEST_EXT_SUBJECTCONDITION__FIELD_NAME.field_name)

    def set_StudySubjectRequestVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudySubjectRequest.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTREQUEST_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_StudySubjectRequestVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudySubjectRequest.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTREQUEST_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_StudySubjectRequestVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StudySubjectRequest.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTREQUEST_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_StudySubjectRequestVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StudySubjectRequest.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTREQUEST_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_TATFromInProcessing_field(self, value: Optional[str]):
        """
        Set data field with field name 'TATFromInProcessing' on this record model
        """
        self.set_field_value(self.TATFROMINPROCESSING__FIELD_NAME.field_name, value)

    def get_TATFromInProcessing_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TATFromInProcessing' from this record model
        """
        return self.get_field_value(self.TATFROMINPROCESSING__FIELD_NAME.field_name)

    def set_TATFromReceiving_field(self, value: Optional[str]):
        """
        Set data field with field name 'TATFromReceiving' on this record model
        """
        self.set_field_value(self.TATFROMRECEIVING__FIELD_NAME.field_name, value)

    def get_TATFromReceiving_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TATFromReceiving' from this record model
        """
        return self.get_field_value(self.TATFROMRECEIVING__FIELD_NAME.field_name)

    def set_TotalSampleVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalSampleVolume' on this record model
        """
        self.set_field_value(self.TOTALSAMPLEVOLUME__FIELD_NAME.field_name, value)

    def get_TotalSampleVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalSampleVolume' from this record model
        """
        return self.get_field_value(self.TOTALSAMPLEVOLUME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class RequesterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Requester
    Data Type Display Name: Requester (Requesters)
    Fields: CreatedBy, FirstName, DateCreated, MiddleName, JobTitle, EmailAddress, IsApproved, DataRecordName, Username, Phone, VeloxLastModifiedDate, VeloxLastModifiedBy, LastName
    The Requester Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'Requester'
    DISPLAY_NAME: Final[str] = "Requester"
    PLURAL_DISPLAY_NAME: Final[str] = "Requesters"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EMAILADDRESS__FIELD_NAME: Final[WrapperField] = WrapperField("EmailAddress", FieldType.STRING, display_name="Email Address")
    FIRSTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("FirstName", FieldType.STRING, display_name="First Name")
    ISAPPROVED__FIELD_NAME: Final[WrapperField] = WrapperField("IsApproved", FieldType.BOOLEAN, display_name="Is Approved")
    JOBTITLE__FIELD_NAME: Final[WrapperField] = WrapperField("JobTitle", FieldType.STRING, display_name="Job Title")
    LASTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("LastName", FieldType.STRING, display_name="Last Name")
    MIDDLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("MiddleName", FieldType.STRING, display_name="Middle Name")
    PHONE__FIELD_NAME: Final[WrapperField] = WrapperField("Phone", FieldType.STRING, display_name="Phone")
    USERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Username", FieldType.STRING, display_name="Username")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EmailAddress_field(self, value: Optional[str]):
        """
        Set data field with field name 'EmailAddress' on this record model
        """
        self.set_field_value(self.EMAILADDRESS__FIELD_NAME.field_name, value)

    def get_EmailAddress_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EmailAddress' from this record model
        """
        return self.get_field_value(self.EMAILADDRESS__FIELD_NAME.field_name)

    def set_FirstName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FirstName' on this record model
        """
        self.set_field_value(self.FIRSTNAME__FIELD_NAME.field_name, value)

    def get_FirstName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FirstName' from this record model
        """
        return self.get_field_value(self.FIRSTNAME__FIELD_NAME.field_name)

    def set_IsApproved_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsApproved' on this record model
        """
        self.set_field_value(self.ISAPPROVED__FIELD_NAME.field_name, value)

    def get_IsApproved_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsApproved' from this record model
        """
        return self.get_field_value(self.ISAPPROVED__FIELD_NAME.field_name)

    def set_JobTitle_field(self, value: Optional[str]):
        """
        Set data field with field name 'JobTitle' on this record model
        """
        self.set_field_value(self.JOBTITLE__FIELD_NAME.field_name, value)

    def get_JobTitle_field(self) -> Optional[str]:
        """
        Get data field value with field name 'JobTitle' from this record model
        """
        return self.get_field_value(self.JOBTITLE__FIELD_NAME.field_name)

    def set_LastName_field(self, value: Optional[str]):
        """
        Set data field with field name 'LastName' on this record model
        """
        self.set_field_value(self.LASTNAME__FIELD_NAME.field_name, value)

    def get_LastName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LastName' from this record model
        """
        return self.get_field_value(self.LASTNAME__FIELD_NAME.field_name)

    def set_MiddleName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MiddleName' on this record model
        """
        self.set_field_value(self.MIDDLENAME__FIELD_NAME.field_name, value)

    def get_MiddleName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MiddleName' from this record model
        """
        return self.get_field_value(self.MIDDLENAME__FIELD_NAME.field_name)

    def set_Phone_field(self, value: Optional[str]):
        """
        Set data field with field name 'Phone' on this record model
        """
        self.set_field_value(self.PHONE__FIELD_NAME.field_name, value)

    def get_Phone_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Phone' from this record model
        """
        return self.get_field_value(self.PHONE__FIELD_NAME.field_name)

    def set_Username_field(self, value: Optional[str]):
        """
        Set data field with field name 'Username' on this record model
        """
        self.set_field_value(self.USERNAME__FIELD_NAME.field_name, value)

    def get_Username_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Username' from this record model
        """
        return self.get_field_value(self.USERNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class RestrictionEnzymePartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type RestrictionEnzymePart
    Data Type Display Name: Restriction Enzyme Part (Restriction Enzyme Parts)
    Fields: CutPos1s, RecognitionSequence, CreatedBy, CutPos2s, DateCreated, Isoschizomers, SixPlus, NonDeg, Neoschizomers, CutPos2a, DataRecordName, CutPos1a, VeloxLastModifiedDate, VeloxLastModifiedBy
    Part extension type for enzyme part for restriction enzymes.
    """
    DATA_TYPE_NAME: Final[str] = 'RestrictionEnzymePart'
    DISPLAY_NAME: Final[str] = "Restriction Enzyme Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Restriction Enzyme Parts"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CUTPOS1A__FIELD_NAME: Final[WrapperField] = WrapperField("CutPos1a", FieldType.INTEGER, display_name="Cut Position 1A")
    CUTPOS1S__FIELD_NAME: Final[WrapperField] = WrapperField("CutPos1s", FieldType.INTEGER, display_name="Cut Position 1S")
    CUTPOS2A__FIELD_NAME: Final[WrapperField] = WrapperField("CutPos2a", FieldType.INTEGER, display_name="Cut Position 2A")
    CUTPOS2S__FIELD_NAME: Final[WrapperField] = WrapperField("CutPos2s", FieldType.INTEGER, display_name="Cut Position 2S")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ISOSCHIZOMERS__FIELD_NAME: Final[WrapperField] = WrapperField("Isoschizomers", FieldType.STRING, display_name="Isoschizomers")
    NEOSCHIZOMERS__FIELD_NAME: Final[WrapperField] = WrapperField("Neoschizomers", FieldType.STRING, display_name="Neoschizomers")
    NONDEG__FIELD_NAME: Final[WrapperField] = WrapperField("NonDeg", FieldType.BOOLEAN, display_name="Non Deg")
    RECOGNITIONSEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("RecognitionSequence", FieldType.STRING, display_name="Recognition Sequence")
    SIXPLUS__FIELD_NAME: Final[WrapperField] = WrapperField("SixPlus", FieldType.BOOLEAN, display_name="Six Plus")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CutPos1a_field(self, value: Optional[int]):
        """
        Set data field with field name 'CutPos1a' on this record model
        """
        self.set_field_value(self.CUTPOS1A__FIELD_NAME.field_name, value)

    def get_CutPos1a_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CutPos1a' from this record model
        """
        return self.get_field_value(self.CUTPOS1A__FIELD_NAME.field_name)

    def set_CutPos1s_field(self, value: Optional[int]):
        """
        Set data field with field name 'CutPos1s' on this record model
        """
        self.set_field_value(self.CUTPOS1S__FIELD_NAME.field_name, value)

    def get_CutPos1s_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CutPos1s' from this record model
        """
        return self.get_field_value(self.CUTPOS1S__FIELD_NAME.field_name)

    def set_CutPos2a_field(self, value: Optional[int]):
        """
        Set data field with field name 'CutPos2a' on this record model
        """
        self.set_field_value(self.CUTPOS2A__FIELD_NAME.field_name, value)

    def get_CutPos2a_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CutPos2a' from this record model
        """
        return self.get_field_value(self.CUTPOS2A__FIELD_NAME.field_name)

    def set_CutPos2s_field(self, value: Optional[int]):
        """
        Set data field with field name 'CutPos2s' on this record model
        """
        self.set_field_value(self.CUTPOS2S__FIELD_NAME.field_name, value)

    def get_CutPos2s_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CutPos2s' from this record model
        """
        return self.get_field_value(self.CUTPOS2S__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Isoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Isoschizomers' on this record model
        """
        self.set_field_value(self.ISOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_Isoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Isoschizomers' from this record model
        """
        return self.get_field_value(self.ISOSCHIZOMERS__FIELD_NAME.field_name)

    def set_Neoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Neoschizomers' on this record model
        """
        self.set_field_value(self.NEOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_Neoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Neoschizomers' from this record model
        """
        return self.get_field_value(self.NEOSCHIZOMERS__FIELD_NAME.field_name)

    def set_NonDeg_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NonDeg' on this record model
        """
        self.set_field_value(self.NONDEG__FIELD_NAME.field_name, value)

    def get_NonDeg_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NonDeg' from this record model
        """
        return self.get_field_value(self.NONDEG__FIELD_NAME.field_name)

    def set_RecognitionSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'RecognitionSequence' on this record model
        """
        self.set_field_value(self.RECOGNITIONSEQUENCE__FIELD_NAME.field_name, value)

    def get_RecognitionSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RecognitionSequence' from this record model
        """
        return self.get_field_value(self.RECOGNITIONSEQUENCE__FIELD_NAME.field_name)

    def set_SixPlus_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SixPlus' on this record model
        """
        self.set_field_value(self.SIXPLUS__FIELD_NAME.field_name, value)

    def get_SixPlus_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SixPlus' from this record model
        """
        return self.get_field_value(self.SIXPLUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ReturnPointModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ReturnPoint
    Data Type Display Name: Return Point (Return Points)
    Fields: ProcessName, CreatedBy, SampleRecordId, BranchLongId, AttachPointId, ProcessStepNumber, DateCreated, MultiParentLink211, NextWorkflow, DataRecordName, ExemplarSampleType, VeloxLastModifiedDate, VeloxLastModifiedBy, ProcessPointNumber, TrackedRecordDataType, SampleId
    This data is used to determine where you should restart a sample during reprocessing.
    """
    DATA_TYPE_NAME: Final[str] = 'ReturnPoint'
    DISPLAY_NAME: Final[str] = "Return Point"
    PLURAL_DISPLAY_NAME: Final[str] = "Return Points"
    ATTACHPOINTID__FIELD_NAME: Final[WrapperField] = WrapperField("AttachPointId", FieldType.STRING, display_name="Attach Point ID")
    BRANCHLONGID__FIELD_NAME: Final[WrapperField] = WrapperField("BranchLongId", FieldType.LONG, display_name="Branch ID")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXEMPLARSAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ExemplarSampleType", FieldType.SELECTION, display_name="Sample Type")
    MULTIPARENTLINK211__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink211", FieldType.MULTIPARENTLINK, display_name="Related AssignedProcesss")
    NEXTWORKFLOW__FIELD_NAME: Final[WrapperField] = WrapperField("NextWorkflow", FieldType.STRING, display_name="Workflow / Template Name")
    PROCESSNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessName", FieldType.STRING, display_name="Process Name")
    PROCESSPOINTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessPointNumber", FieldType.LONG, display_name="Process Point Number")
    PROCESSSTEPNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ProcessStepNumber", FieldType.LONG, display_name="Process Step Number")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    SAMPLERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleRecordId", FieldType.LONG, display_name="Sample Record Id")
    TRACKEDRECORDDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("TrackedRecordDataType", FieldType.STRING, display_name="Tracked Record Data Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AttachPointId_field(self, value: Optional[str]):
        """
        Set data field with field name 'AttachPointId' on this record model
        """
        self.set_field_value(self.ATTACHPOINTID__FIELD_NAME.field_name, value)

    def get_AttachPointId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AttachPointId' from this record model
        """
        return self.get_field_value(self.ATTACHPOINTID__FIELD_NAME.field_name)

    def set_BranchLongId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BranchLongId' on this record model
        """
        self.set_field_value(self.BRANCHLONGID__FIELD_NAME.field_name, value)

    def get_BranchLongId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BranchLongId' from this record model
        """
        return self.get_field_value(self.BRANCHLONGID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExemplarSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleType' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_ExemplarSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleType' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name)

    def set_NextWorkflow_field(self, value: Optional[str]):
        """
        Set data field with field name 'NextWorkflow' on this record model
        """
        self.set_field_value(self.NEXTWORKFLOW__FIELD_NAME.field_name, value)

    def get_NextWorkflow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NextWorkflow' from this record model
        """
        return self.get_field_value(self.NEXTWORKFLOW__FIELD_NAME.field_name)

    def set_ProcessName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProcessName' on this record model
        """
        self.set_field_value(self.PROCESSNAME__FIELD_NAME.field_name, value)

    def get_ProcessName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProcessName' from this record model
        """
        return self.get_field_value(self.PROCESSNAME__FIELD_NAME.field_name)

    def set_ProcessPointNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProcessPointNumber' on this record model
        """
        self.set_field_value(self.PROCESSPOINTNUMBER__FIELD_NAME.field_name, value)

    def get_ProcessPointNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProcessPointNumber' from this record model
        """
        return self.get_field_value(self.PROCESSPOINTNUMBER__FIELD_NAME.field_name)

    def set_ProcessStepNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ProcessStepNumber' on this record model
        """
        self.set_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name, value)

    def get_ProcessStepNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ProcessStepNumber' from this record model
        """
        return self.get_field_value(self.PROCESSSTEPNUMBER__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SampleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleRecordId' on this record model
        """
        self.set_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_SampleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleRecordId' from this record model
        """
        return self.get_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name)

    def set_TrackedRecordDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'TrackedRecordDataType' on this record model
        """
        self.set_field_value(self.TRACKEDRECORDDATATYPE__FIELD_NAME.field_name, value)

    def get_TrackedRecordDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TrackedRecordDataType' from this record model
        """
        return self.get_field_value(self.TRACKEDRECORDDATATYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class RNAModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type RNA
    Data Type Display Name: RNA (RNAs)
    Fields: CreatedBy, DataRecordName, ExpirationDate, ConsumableType, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, RegistryId, ConsumableName, LotNumber
    """
    DATA_TYPE_NAME: Final[str] = 'RNA'
    DISPLAY_NAME: Final[str] = "RNA"
    PLURAL_DISPLAY_NAME: Final[str] = "RNAs"
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Name")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class RNAPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type RNAPart
    Data Type Display Name: RNA Part (RNA Parts)
    Fields: CreatedBy, SequenceHash, ConsumableType, EditLock, DateCreated, Sequence, Vendor, QuantityOnHand, Units, QuantityPerItem, ReorderLevelQuantity, ChemicalProperties, DataRecordName, MultiParentLink170, VeloxLastModifiedDate, VeloxLastModifiedBy, RegistryId, ConsumableName, AutoTranslationNotes, GenbankAttachment, SourcePart, HELMHash, HELM
    """
    DATA_TYPE_NAME: Final[str] = 'RNAPart'
    DISPLAY_NAME: Final[str] = "RNA Part"
    PLURAL_DISPLAY_NAME: Final[str] = "RNA Parts"
    AUTOTRANSLATIONNOTES__FIELD_NAME: Final[WrapperField] = WrapperField("AutoTranslationNotes", FieldType.STRING, display_name="Auto Translation Notes")
    CHEMICALPROPERTIES__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalProperties", FieldType.SIDE_LINK, display_name="Chemical Properties")
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Name")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EDITLOCK__FIELD_NAME: Final[WrapperField] = WrapperField("EditLock", FieldType.BOOLEAN, display_name="Edit Lock")
    GENBANKATTACHMENT__FIELD_NAME: Final[WrapperField] = WrapperField("GenbankAttachment", FieldType.SIDE_LINK, display_name="Genbank Attachment")
    HELM__FIELD_NAME: Final[WrapperField] = WrapperField("HELM", FieldType.STRING, display_name="HELM")
    HELMHASH__FIELD_NAME: Final[WrapperField] = WrapperField("HELMHash", FieldType.STRING, display_name="HELM Hash")
    MULTIPARENTLINK170__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink170", FieldType.MULTIPARENTLINK, display_name="Linked DNA Part")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    SEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("Sequence", FieldType.STRING, display_name="Sequence")
    SEQUENCEHASH__FIELD_NAME: Final[WrapperField] = WrapperField("SequenceHash", FieldType.STRING, display_name="Sequence Hash")
    SOURCEPART__FIELD_NAME: Final[WrapperField] = WrapperField("SourcePart", FieldType.SIDE_LINK, display_name="Source Part")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.SELECTION, display_name="Vendor")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AutoTranslationNotes_field(self, value: Optional[str]):
        """
        Set data field with field name 'AutoTranslationNotes' on this record model
        """
        self.set_field_value(self.AUTOTRANSLATIONNOTES__FIELD_NAME.field_name, value)

    def get_AutoTranslationNotes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AutoTranslationNotes' from this record model
        """
        return self.get_field_value(self.AUTOTRANSLATIONNOTES__FIELD_NAME.field_name)

    def set_ChemicalProperties_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalProperties' on this record model
        """
        self.set_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name, value)

    def get_ChemicalProperties_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalProperties' from this record model
        """
        return self.get_field_value(self.CHEMICALPROPERTIES__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_GenbankAttachment_field(self, value: Optional[int]):
        """
        Set data field with field name 'GenbankAttachment' on this record model
        """
        self.set_field_value(self.GENBANKATTACHMENT__FIELD_NAME.field_name, value)

    def get_GenbankAttachment_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GenbankAttachment' from this record model
        """
        return self.get_field_value(self.GENBANKATTACHMENT__FIELD_NAME.field_name)

    def set_HELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELM' on this record model
        """
        self.set_field_value(self.HELM__FIELD_NAME.field_name, value)

    def get_HELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELM' from this record model
        """
        return self.get_field_value(self.HELM__FIELD_NAME.field_name)

    def set_HELMHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'HELMHash' on this record model
        """
        self.set_field_value(self.HELMHASH__FIELD_NAME.field_name, value)

    def get_HELMHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HELMHash' from this record model
        """
        return self.get_field_value(self.HELMHASH__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Sequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'Sequence' on this record model
        """
        self.set_field_value(self.SEQUENCE__FIELD_NAME.field_name, value)

    def get_Sequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Sequence' from this record model
        """
        return self.get_field_value(self.SEQUENCE__FIELD_NAME.field_name)

    def set_SequenceHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'SequenceHash' on this record model
        """
        self.set_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name, value)

    def get_SequenceHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SequenceHash' from this record model
        """
        return self.get_field_value(self.SEQUENCEHASH__FIELD_NAME.field_name)

    def set_SourcePart_field(self, value: Optional[int]):
        """
        Set data field with field name 'SourcePart' on this record model
        """
        self.set_field_value(self.SOURCEPART__FIELD_NAME.field_name, value)

    def get_SourcePart_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SourcePart' from this record model
        """
        return self.get_field_value(self.SOURCEPART__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class Robs3rdRegModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Robs3rdReg
    Data Type Display Name: Regie McReg Face Part (Regiie McRegFace Parts)
    Fields: ExactMass, PubchemCid, ConsumableType, Purity, DateCreated, IsGHSClassified, Formula, PolarSurfaceArea, GHSSignal, cLogP, VeloxLastModifiedBy, MolecularWeight, InchiKey, LotNumber, CreatedBy, inchi, Charge, IUPAC, SMILES, GHSHazardCode, TotalHBondCount, TotalHBondAcceptors, DataRecordName, CAS, VeloxLastModifiedDate, RegistryId, Yield, GHSPictoCode, GHSCautionCode
    The Robs3rdReg Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'Robs3rdReg'
    DISPLAY_NAME: Final[str] = "Regie McReg Face Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Regiie McRegFace Parts"
    CAS__FIELD_NAME: Final[WrapperField] = WrapperField("CAS", FieldType.STRING, display_name="CAS")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("GHSSignal", FieldType.STRING, display_name="GHS Signal")
    IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("IUPAC", FieldType.STRING, display_name="IUPAC")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="InChI Key")
    ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("PubchemCid", FieldType.INTEGER, display_name="PubChem CID")
    PURITY__FIELD_NAME: Final[WrapperField] = WrapperField("Purity", FieldType.DOUBLE, display_name="Purity")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="Canonical SMILES")
    TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("Yield", FieldType.DOUBLE, display_name="Yield")
    CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="InChI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Purity' on this record model
        """
        self.set_field_value(self.PURITY__FIELD_NAME.field_name, value)

    def get_Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Purity' from this record model
        """
        return self.get_field_value(self.PURITY__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Yield' on this record model
        """
        self.set_field_value(self.YIELD__FIELD_NAME.field_name, value)

    def get_Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Yield' from this record model
        """
        return self.get_field_value(self.YIELD__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class Robs3rdRegPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Robs3rdRegPart
    Data Type Display Name: Regie McReg Face Part Part (Regie McReg Face Part Parts)
    Fields: ExactMass, PubchemCid, ConsumableType, DateCreated, IsGHSClassified, QuantityPerItem, Formula, PolarSurfaceArea, ReorderLevelQuantity, GHSSignal, RegisteredToCartridge, RequestImageUpdate, cLogP, VeloxLastModifiedBy, MolecularWeight, InchiKey, CreatedBy, inchi, EditLock, Charge, IUPAC, SMILES, MOL, QuantityOnHand, Units, GHSHazardCode, SMILESShadow, TotalHBondCount, TotalHBondAcceptors, DataRecordName, CAS, VeloxLastModifiedDate, RegistryId, INCHIShadow, GHSPictoCode, GHSCautionCode
    The Robs3rdRegPart Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'Robs3rdRegPart'
    DISPLAY_NAME: Final[str] = "Regie McReg Face Part Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Regie McReg Face Part Parts"
    CAS__FIELD_NAME: Final[WrapperField] = WrapperField("CAS", FieldType.STRING, display_name="CAS")
    CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Charge", FieldType.INTEGER, display_name="Charge")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EDITLOCK__FIELD_NAME: Final[WrapperField] = WrapperField("EditLock", FieldType.BOOLEAN, display_name="Edit Lock")
    EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Formula", FieldType.STRING, display_name="Formula")
    GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("GHSSignal", FieldType.STRING, display_name="GHS Signal")
    INCHISHADOW__FIELD_NAME: Final[WrapperField] = WrapperField("INCHIShadow", FieldType.STRING, display_name="InChI Shadow")
    IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("IUPAC", FieldType.STRING, display_name="IUPAC")
    INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("InchiKey", FieldType.STRING, display_name="InChI Key")
    ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    MOL__FIELD_NAME: Final[WrapperField] = WrapperField("MOL", FieldType.STRING, display_name="MOL")
    MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("PubchemCid", FieldType.INTEGER, display_name="PubChem CID")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REGISTEREDTOCARTRIDGE__FIELD_NAME: Final[WrapperField] = WrapperField("RegisteredToCartridge", FieldType.BOOLEAN, display_name="Registered To Cartridge")
    REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RegistryId", FieldType.STRING, display_name="Registry ID")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    REQUESTIMAGEUPDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RequestImageUpdate", FieldType.BOOLEAN, display_name="Request Image Update")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="Canonical SMILES")
    SMILESSHADOW__FIELD_NAME: Final[WrapperField] = WrapperField("SMILESShadow", FieldType.STRING, display_name="SMILES Shadow")
    TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("inchi", FieldType.STRING, display_name="InChI")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'CAS' on this record model
        """
        self.set_field_value(self.CAS__FIELD_NAME.field_name, value)

    def get_CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CAS' from this record model
        """
        return self.get_field_value(self.CAS__FIELD_NAME.field_name)

    def set_Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Charge' on this record model
        """
        self.set_field_value(self.CHARGE__FIELD_NAME.field_name, value)

    def get_Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Charge' from this record model
        """
        return self.get_field_value(self.CHARGE__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EditLock_field(self, value: Optional[bool]):
        """
        Set data field with field name 'EditLock' on this record model
        """
        self.set_field_value(self.EDITLOCK__FIELD_NAME.field_name, value)

    def get_EditLock_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'EditLock' from this record model
        """
        return self.get_field_value(self.EDITLOCK__FIELD_NAME.field_name)

    def set_ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExactMass' on this record model
        """
        self.set_field_value(self.EXACTMASS__FIELD_NAME.field_name, value)

    def get_ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExactMass' from this record model
        """
        return self.get_field_value(self.EXACTMASS__FIELD_NAME.field_name)

    def set_Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formula' on this record model
        """
        self.set_field_value(self.FORMULA__FIELD_NAME.field_name, value)

    def get_Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formula' from this record model
        """
        return self.get_field_value(self.FORMULA__FIELD_NAME.field_name)

    def set_GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSCautionCode' on this record model
        """
        self.set_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSCautionCode' from this record model
        """
        return self.get_field_value(self.GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSHazardCode' on this record model
        """
        self.set_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSHazardCode' from this record model
        """
        return self.get_field_value(self.GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSPictoCode' on this record model
        """
        self.set_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSPictoCode' from this record model
        """
        return self.get_field_value(self.GHSPICTOCODE__FIELD_NAME.field_name)

    def set_GHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'GHSSignal' on this record model
        """
        self.set_field_value(self.GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_GHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'GHSSignal' from this record model
        """
        return self.get_field_value(self.GHSSIGNAL__FIELD_NAME.field_name)

    def set_INCHIShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'INCHIShadow' on this record model
        """
        self.set_field_value(self.INCHISHADOW__FIELD_NAME.field_name, value)

    def get_INCHIShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'INCHIShadow' from this record model
        """
        return self.get_field_value(self.INCHISHADOW__FIELD_NAME.field_name)

    def set_IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'IUPAC' on this record model
        """
        self.set_field_value(self.IUPAC__FIELD_NAME.field_name, value)

    def get_IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IUPAC' from this record model
        """
        return self.get_field_value(self.IUPAC__FIELD_NAME.field_name)

    def set_InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'InchiKey' on this record model
        """
        self.set_field_value(self.INCHIKEY__FIELD_NAME.field_name, value)

    def get_InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'InchiKey' from this record model
        """
        return self.get_field_value(self.INCHIKEY__FIELD_NAME.field_name)

    def set_IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGHSClassified' on this record model
        """
        self.set_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'MolecularWeight' on this record model
        """
        self.set_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MolecularWeight' from this record model
        """
        return self.get_field_value(self.MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'PubchemCid' on this record model
        """
        self.set_field_value(self.PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PubchemCid' from this record model
        """
        return self.get_field_value(self.PUBCHEMCID__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_RegisteredToCartridge_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RegisteredToCartridge' on this record model
        """
        self.set_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name, value)

    def get_RegisteredToCartridge_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RegisteredToCartridge' from this record model
        """
        return self.get_field_value(self.REGISTEREDTOCARTRIDGE__FIELD_NAME.field_name)

    def set_RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegistryId' on this record model
        """
        self.set_field_value(self.REGISTRYID__FIELD_NAME.field_name, value)

    def get_RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegistryId' from this record model
        """
        return self.get_field_value(self.REGISTRYID__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_RequestImageUpdate_field(self, value: Optional[bool]):
        """
        Set data field with field name 'RequestImageUpdate' on this record model
        """
        self.set_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name, value)

    def get_RequestImageUpdate_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'RequestImageUpdate' from this record model
        """
        return self.get_field_value(self.REQUESTIMAGEUPDATE__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def set_SMILESShadow_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILESShadow' on this record model
        """
        self.set_field_value(self.SMILESSHADOW__FIELD_NAME.field_name, value)

    def get_SMILESShadow_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILESShadow' from this record model
        """
        return self.get_field_value(self.SMILESSHADOW__FIELD_NAME.field_name)

    def set_TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'TotalHBondCount' on this record model
        """
        self.set_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TotalHBondCount' from this record model
        """
        return self.get_field_value(self.TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'cLogP' on this record model
        """
        self.set_field_value(self.CLOGP__FIELD_NAME.field_name, value)

    def get_cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'cLogP' from this record model
        """
        return self.get_field_value(self.CLOGP__FIELD_NAME.field_name)

    def set_inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'inchi' on this record model
        """
        self.set_field_value(self.INCHI__FIELD_NAME.field_name, value)

    def get_inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'inchi' from this record model
        """
        return self.get_field_value(self.INCHI__FIELD_NAME.field_name)


class SaasUserActivityModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SaasUserActivity
    Data Type Display Name: SaaS User Activity (SaaS User Activities)
    Fields: ButtonName, CreatedBy, ActivityDescription, DataRecordName, ActivityTimestamp, ActivityType, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SessionId, ActivityPlace
    """
    DATA_TYPE_NAME: Final[str] = 'SaasUserActivity'
    DISPLAY_NAME: Final[str] = "SaaS User Activity"
    PLURAL_DISPLAY_NAME: Final[str] = "SaaS User Activities"
    ACTIVITYDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("ActivityDescription", FieldType.STRING, display_name="Activity Description")
    ACTIVITYPLACE__FIELD_NAME: Final[WrapperField] = WrapperField("ActivityPlace", FieldType.STRING, display_name="Activity Place")
    ACTIVITYTIMESTAMP__FIELD_NAME: Final[WrapperField] = WrapperField("ActivityTimestamp", FieldType.DATE, display_name="Activity Timestamp")
    ACTIVITYTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ActivityType", FieldType.STRING, display_name="Activity Type")
    BUTTONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ButtonName", FieldType.STRING, display_name="Button Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SESSIONID__FIELD_NAME: Final[WrapperField] = WrapperField("SessionId", FieldType.STRING, display_name="Session Id")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActivityDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActivityDescription' on this record model
        """
        self.set_field_value(self.ACTIVITYDESCRIPTION__FIELD_NAME.field_name, value)

    def get_ActivityDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActivityDescription' from this record model
        """
        return self.get_field_value(self.ACTIVITYDESCRIPTION__FIELD_NAME.field_name)

    def set_ActivityPlace_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActivityPlace' on this record model
        """
        self.set_field_value(self.ACTIVITYPLACE__FIELD_NAME.field_name, value)

    def get_ActivityPlace_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActivityPlace' from this record model
        """
        return self.get_field_value(self.ACTIVITYPLACE__FIELD_NAME.field_name)

    def set_ActivityTimestamp_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActivityTimestamp' on this record model
        """
        self.set_field_value(self.ACTIVITYTIMESTAMP__FIELD_NAME.field_name, value)

    def get_ActivityTimestamp_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActivityTimestamp' from this record model
        """
        return self.get_field_value(self.ACTIVITYTIMESTAMP__FIELD_NAME.field_name)

    def set_ActivityType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ActivityType' on this record model
        """
        self.set_field_value(self.ACTIVITYTYPE__FIELD_NAME.field_name, value)

    def get_ActivityType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ActivityType' from this record model
        """
        return self.get_field_value(self.ACTIVITYTYPE__FIELD_NAME.field_name)

    def set_ButtonName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ButtonName' on this record model
        """
        self.set_field_value(self.BUTTONNAME__FIELD_NAME.field_name, value)

    def get_ButtonName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ButtonName' from this record model
        """
        return self.get_field_value(self.BUTTONNAME__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SessionId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SessionId' on this record model
        """
        self.set_field_value(self.SESSIONID__FIELD_NAME.field_name, value)

    def get_SessionId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SessionId' from this record model
        """
        return self.get_field_value(self.SESSIONID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SampleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Sample
    Data Type Display Name: Sample (Samples)
    Fields: CellLine.DataRecordName, Strain.VeloxLastModifiedDate, Compound.InchiKey, Antibody.RecordId, ViralVector.ConsumableType, RNA.RecordId, ChemRegPart.CreatedBy, NewChem1.cLogP, StrainDetails.MultiParentLink215, Compound.CAS, Robs3rdReg.GHSHazardCode, SacrificedDate, Compound.PolarSurfaceArea, StrainDetails.RecordId, CellLine.CreatedBy, Strain.ConsumableType, Protein.ConsumableName, Oligo.ConsumableName, Enzyme.DateCreated, NewChem1.PubchemCid, Robs3rdReg.Formula, StrainDetails.PlasmidSequence, ViralVector.RecordId, Oligo.CreatedBy, DNA.SequenceType, PatientID, DNA.RelatedRecord215, DNA.DateCreated, HistologyProtocol3.RecordId, Protein.DataRecordName, StrainDetails.StrainPartNumber, Molecule.DilutionFactor, BrainTissue.RecordId, ChemRegPart.GHSHazardCode, ChemicalReagent.StereoRegHash, DNA.CreatedBy, Sex, ChemRegPart.GHSCautionCode, StudySamplingId, Tissue, NoCanTau.IUPAC, Compound.GHSPictoCode, RowPosition, BioConjugate.RegistryId, Robs3rdReg.RegistryId, Robs3rdReg.Yield, ChemicalReagent.CXSMILESHash, ExemplarSampleStatus, NoCanTau.Formula, Stain.RecordId, CellLine.RecordId, Enzyme.Isoschizomers, Compound.TotalHBondCount, NoCanTau.GHSSignal, RNA.CreatedBy, ChemicalReagent.CreatedBy, BioConjugate.VeloxLastModifiedDate, Compound.Yield, NoCanTau.HasOrStereoGroup, Molecule.Stereochemistry, NoCanTau.InchiKey, UrgentRequest, Molecule.ExpirationDate, Enzyme.PartNumber, Enzyme.RelatedRecord215, DNA.RecordId, Enzyme.DateOfPurchase, Compound.Density, StrainDetails.StrainName, Strain.RecordId, ActiveWorkflowId, ChemicalReagent.RelatedRecord215, Molecule.ConcWarhead, NewChem1.IUPAC, ChemicalReagent.Charge, Compound.Temperature, ChemRegPart.ConsumableType, ChemRegPart.LotNumber, CellLine.ViableCellNumbers, ElnbNumber, ChemRegPart.InchiKey, Blood.CreatedBy, Strain.CreatedBy, Strain.LotNumber, DateofBirth, Enzyme.Neoschizomers, NoCanTau.inchi, ViralVector.ExpirationDate, ChemicalReagent.Formula, ChemRegPart.TotalHBondCount, ChemicalReagent.MolecularWeight, Compound.PubchemCid, Oligo.RelatedRecord215, NoCanTau.VeloxLastModifiedDate, Molecule.GenerateName, BioConjugate.DataRecordName, ViralVector.VectorType, TubeBarcode, Molecule.RequestNotes, Molecule.Linker, DateCreated, Strain.ConsumableName, Enzyme.ExpirationDate, Molecule.ReturnFractionFormat, RNA.LotNumber, ChemRegPart.DataRecordName, Strain.ExpirationDate, Oligo.RecordId, NoCanTau.PubchemCid, Enzyme.CuttingPattern, Robs3rdReg.MolecularWeight, Antibody.Vendor, Age, CellLine.Subclass1_1, Compound.cLogP, Compound.IUPAC, Protein.Barcode, Enzyme.VeloxLastModifiedBy, VeloxLastModifiedDate, NewChem1.ConsumableType, RNA.ExpirationDate, Blood.VeloxLastModifiedBy, Robs3rdReg.cLogP, ChemicalReagent.CAS, Molecule.DAR, IsInvalid, BioConjugate.ConsumableType, NewChem1.VeloxLastModifiedDate, Compound.MolecularWeight, HistologyProtocol3.CreatedBy, NewChem1.CreatedBy, Molecule.CrudeWeight, Compound.TotalHBondAcceptors, NoCanTau.Charge, StrainDetails.DateCreated, ViralVector.DateCreated, NewChem1.IsGHSClassified, NewChem1.PolarSurfaceArea, Oligo.VeloxLastModifiedDate, Protein.ExpirationDate, Stain.CreatedBy, NGSSingleTemplateProcess, Compound.ConsumableType, Compound.GHSSignal, ChemicalReagent.cLogP, StrainDetails.VeloxLastModifiedBy, Antibody.PartNumber, Compound.DateCreated, Molecule.DateCreated, SampleId, Molecule.JchemId, Molecule.PartNumber, Robs3rdReg.IsGHSClassified, CollectionDateTime, Protein.RelatedRecord215, Molecule.SupplierName, IsControl, ChemRegPart.RegistryId, CellLine.MultiParentLink215, NewChem1.RecordId, NoCanTau.CXSMILESHash, Variant, DonorID, ChemicalReagent.InchiKey, Molecule.CreatedBy, NoCanTau.DataRecordName, Molecule.ConsumableType, ChemRegPart.IUPAC, TotalMass, ConcentrationUnits, CollectionDate, ChemicalReagent.SMILES, BioConjugate.ConsumableName, Oligo.ConsumableType, Antibody.CreatedBy, Robs3rdReg.GHSCautionCode, BrainTissue.DateCreated, TestLastField, Compound.RelatedRecord215, NoCanTau.PolarSurfaceArea, StrainDetails.StrainLotNumber, Molecule.Barcode, Protein.RecordId, NoCanTau.StereoRegHash, Stain.RelatedRecord215, CellLine.TotalCellNumbers, Protein.PartNumber, Molecule.ADCConcentration, Strain.Ci95Bounds, Protein.Expired, Antibody.ExpirationDate, TatProgressStatus, Organ, ChemicalReagent.GHSSignal, Molecule.CrudeSolvent, Antibody.HELM, NoCanTau.CAS, NewChem1.InchiKey, ChemRegPart.Charge, DNA.ItemId, Molecule.YieldPercentage, ChemRegPart.MolecularWeight, NoCanTau.GHSPictoCode, Compound.VeloxLastModifiedBy, Molecule.Conjugate, Stain.ConsumableType, Strain.RelatedRecord215, NewChem1.RelatedRecord215, NoCanTau.Yield, HistologyProtocol3.AssignedSpecialStain, Compound.ExactMass, Compound.Purity, Oligo.DateCreated, StorageLocationBarcode, NewChem1.inchi, Molecule.ReactionCoefficient, NewChem1.ExactMass, HistologyProtocol3.VeloxLastModifiedBy, Robs3rdReg.RecordId, Robs3rdReg.inchi, PercentRecoveries, Compound.inchi, Robs3rdReg.PolarSurfaceArea, ChemicalReagent.RecordId, Molecule.ReturnSolConc, Molecule.Render, ExemplarSampleSubtyp, DataRecordName, Compound.HasOrStereoGroup, BlockNumber, Molecule.ScientistEmail, Enzyme.DataRecordName, Molecule.VeloxLastModifiedDate, NoCanTau.VeloxLastModifiedBy, Stain.DataRecordName, Molecule.Charge, NewChem1.Formula, NewChem1.GHSPictoCode, Molecule.ActualYield, NewChem1.LotNumber, Robs3rdReg.InchiKey, DNA.PartNumber, ChemicalReagent.ExpirationDate, Molecule.CrudeVolume, ChemRegPart.inchi, AliquotNumber, Strain.SampleStd, Oligo.DataRecordName, Molecule.CompoundLocation, Strain.DateCreated, Molecule.DataRecordName, ChemicalReagent.LotNumber, NewChem1.Charge, Comments, NoCanTau.ConsumableType, Compound.StereoRegHash, LastEditedBy, StrainDetails.VeloxLastModifiedDate, ChemicalReagent.VeloxLastModifiedDate, DNA.DataRecordName, StrainDetails.CreatedBy, DNA.VeloxLastModifiedBy, Enzyme.ConsumableType, Molecule.ScientistName, Strain.VeloxLastModifiedBy, ChemicalReagent.PolarSurfaceArea, NewChem1.Purity, Molecule.ChEBI_ID, NoCanTau.RecordId, CellLine.Subclass1_1_1, CellLine.Class1, MultiParentLink156, CellLine.DateCreated, ReadyforRnD, Compound.Formula, Antibody.LotNumber, Protein.StructureName, ViralVector.VectorSequence, ChemicalReagent.DataRecordName, RNA.VeloxLastModifiedBy, CreatedBy, Molecule.DCNumber, Strain.SampleNormalizedMean, Robs3rdReg.RelatedRecord215, ChemRegPart.GHSSignal, StrainDetails.PlasmidLotNumber, MultiParentLink266, HistologyProtocol3.VeloxLastModifiedDate, Molecule.SMILES, Molecule.VeloxLastModifiedBy, ChemicalReagent.ExactMass, Volume, Molecule.SmallMolecularInhibitor, Molecule.Formula, ChemicalReagent.IsGHSClassified, Molecule.LotNumber, Compound.DataRecordName, NoCanTau.MolecularWeight, DiseasePathology, Robs3rdReg.LotNumber, IntField, StrainDetails.PlasmidName, PicklistField, ChemicalReagent.GHSPictoCode, Protein.VeloxLastModifiedBy, ChemRegPart.SMILES, NoCanTau.CreatedBy, NewChem1.CAS, ColPosition, BrainTissue.DataRecordName, Stain.ConsumableName, VeloxLastModifiedBy, NoCanTau.RelatedRecord215, NoCanTau.TotalHBondAcceptors, ChemicalReagent.RegistryId, Molecule.ConsumableName, Robs3rdReg.CAS, TimePoint, Robs3rdReg.Purity, Flags, NoCanTau.Purity, Antibody.ConsumableType, SapioSingleTemplateProcess, NoCanTau.GHSCautionCode, TestConcatField, AssayType, Blood.VeloxLastModifiedDate, ViralVector.PartNumber, Molecule.CAS_NO, Robs3rdReg.GHSPictoCode, ChemRegPart.DateCreated, Stain.DateCreated, DNA.VeloxLastModifiedDate, BioConjugate.RecordId, ObservedCondition, Protein.DateCreated, Stain.PartNumber, Molecule.RecordId, Robs3rdReg.CreatedBy, ChemRegPart.RelatedRecord215, Molecule.MolWeight, Compound.RecordId, ChemRegPart.ExactMass, Robs3rdReg.SMILES, ChemicalReagent.IUPAC, Molecule.SubstanceName, DNA.ExpirationDate, Blood.DateCreated, BrainTissue.CreatedBy, Molecule.TfaSaltCoefficient, ChemicalReagent.GHSCautionCode, Compound.Charge, NewChem1.MolecularWeight, ChemRegPart.Yield, ChemRegPart.Purity, NewChem1.GHSHazardCode, Organism, ChemicalReagent.DateCreated, NewChem1.RegistryId, ChemicalReagent.inchi, NewChem1.DataRecordName, Compound.LotNumber, ViralVector.CreatedBy, RNA.DateCreated, Robs3rdReg.IUPAC, Enzyme.ConsumableName, ChemicalReagent.HasOrStereoGroup, Protein.CreatedBy, Antibody.VeloxLastModifiedBy, ChemRegPart.cLogP, ChemicalReagent.GHSHazardCode, Strain.SampleMean, HoldStatus, ChemicalReagent.ConsumableType, Enzyme.VeloxLastModifiedDate, HistologyProtocol3.RelatedRecord215, DNA.Name, BioConjugate.VeloxLastModifiedBy, IsPooled, Stain.ProtocolNumber, Strain.StrainDetails, Molecule.MultiParentLink215, VolumeUnits, Antibody.RegistryId, NoCanTau.TotalHBondCount, Molecule.LabLocation, Oligo.PartNumber, Stain.LotNumber, Strain.StandardError, ChemRegPart.Formula, ChemRegPart.CAS, Handling, Stain.VeloxLastModifiedDate, C_MyNewDataField, NewChem1.VeloxLastModifiedBy, ViralVector.ORF, MultiParentLink670, Antibody.DateCreated, ChemicalReagent.PubchemCid, FlowJoGroupSideLink, NewChem1.GHSCautionCode, Molecule.MolarMass, RNA.VeloxLastModifiedDate, StrainDetails.DataRecordName, BrainTissue.VeloxLastModifiedDate, Compound.Pressure, HistologyProtocol3.DateCreated, Molecule.FaSaltCoefficient, ViralVector.LotNumber, ChemRegPart.IsGHSClassified, Stain.ExpirationDate, CellLine.VeloxLastModifiedDate, Compound.CreatedBy, RNA.DataRecordName, Robs3rdReg.DataRecordName, ViralVector.VeloxLastModifiedBy, NoCanTau.RegistryId, RNA.ConsumableName, Antibody.RelatedRecord215, ChemicalReagent.TotalHBondAcceptors, NoCanTau.SMILES, Robs3rdReg.TotalHBondAcceptors, ExemplarSampleType, ControlType, Molecule.Nh3SaltCoefficient, ChemRegPart.RecordId, MultiParentLink215, Oligo.ExpirationDate, Blood.DataRecordName, BrainTissue.BrainTissueType, BioConjugate.LotNumber, MultiParentLink211, Compound.CXSMILESHash, Robs3rdReg.PubchemCid, Enzyme.CreatedBy, TissueSectionsPerSlide, Compound.GHSCautionCode, Compound.ZoBioonly, Robs3rdReg.ExactMass, MultiParentLink203, Oligo.HELM, MultiParentLink689, Molecule.TheoreticalYield, Fermented, Protein.VeloxLastModifiedDate, ChemRegPart.TotalHBondAcceptors, Concentration, StaticDate, StorageUnitPath, ChemRegPart.PolarSurfaceArea, Blood.DrawSite, ChemRegPart.VeloxLastModifiedDate, Molecule.ExactMass, NewChem1.Yield, NoCanTau.IsGHSClassified, Strain.DataRecordName, NewChem1.SMILES, HistologyProtocol3.DataRecordName, NoCanTau.cLogP, Molecule.UniSubId, Strain.PartNumber, PlateId, ViralVector.ConsumableName, Compound.SMILES, Enzyme.LotNumber, StrainHit, Robs3rdReg.VeloxLastModifiedDate, Enzyme.Vendor, Disease, RNA.RelatedRecord215, Blood.RelatedRecord215, Robs3rdReg.ConsumableType, BioConjugate.Vendor, MultiParentLink752, Antibody.VeloxLastModifiedDate, Enzyme.RecordId, OtherSampleId, ChemRegPart.VeloxLastModifiedBy, NoCanTau.GHSHazardCode, ViralVector.RelatedRecord215, ChemRegPart.PubchemCid, SampleExpirationDate, ChemicalReagent.VeloxLastModifiedBy, Robs3rdReg.VeloxLastModifiedBy, ChemicalReagent.TotalHBondCount, Robs3rdReg.TotalHBondCount, Compound.VeloxLastModifiedDate, BrainTissue.RelatedRecord215, BioConjugate.CreatedBy, FedExTrackingNo, NewChem1.DateCreated, CellLine.VeloxLastModifiedBy, Antibody.DataRecordName, HistologyProtocol3.SampleId, Protein.LotNumber, ChemRegPart.GHSPictoCode, Oligo.LotNumber, Antibody.ConsumableName, NewChem1.TotalHBondAcceptors, Oligo.VeloxLastModifiedBy, Stain.VeloxLastModifiedBy, ChemicalReagent.Purity, Compound.GHSHazardCode, Robs3rdReg.Charge, ChemicalReagent.Yield, BioConjugate.DateCreated, Robs3rdReg.GHSSignal, NoCanTau.ExactMass, ViralVector.VeloxLastModifiedDate, Molecule.ADCConcIncubationLabeled, Enzyme.EnzymeType, Blood.RecordId, Compound.IsGHSClassified, Molecule.PeptideString, Robs3rdReg.DateCreated, Compound.ExpirationDate, BioConjugate.RelatedRecord215, BrainTissue.VeloxLastModifiedBy, NoCanTau.LotNumber, ContainerType, PreviousExemplarStatus, ViralVector.DataRecordName, BioConjugate.ExpirationDate, RNA.ConsumableType, RNA.RegistryId, Compound.RegistryId, NoCanTau.DateCreated, Protein.ConsumableType, NewChem1.TotalHBondCount, ExemplarSampleSubtype
    """
    DATA_TYPE_NAME: Final[str] = 'Sample'
    DISPLAY_NAME: Final[str] = "Sample"
    PLURAL_DISPLAY_NAME: Final[str] = "Samples"
    ACTIVEWORKFLOWID__FIELD_NAME: Final[WrapperField] = WrapperField("ActiveWorkflowId", FieldType.LONG, display_name="Active Workflow ID")
    AGE__FIELD_NAME: Final[WrapperField] = WrapperField("Age", FieldType.STRING, display_name="Age")
    ALIQUOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("AliquotNumber", FieldType.INTEGER, display_name="Aliquot Number")
    ANTIBODY_EXT_CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.ConsumableName", FieldType.STRING, display_name="Antibody Name")
    ANTIBODY_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.ConsumableType", FieldType.SELECTION, display_name="Antibody Subtype")
    ANTIBODY_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.CreatedBy", FieldType.STRING, display_name="Created By")
    ANTIBODY_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    ANTIBODY_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.DateCreated", FieldType.DATE, display_name="Date Created")
    ANTIBODY_EXT_EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    ANTIBODY_EXT_HELM__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.HELM", FieldType.STRING, display_name="HELM")
    ANTIBODY_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.LotNumber", FieldType.STRING, display_name="Lot Number")
    ANTIBODY_EXT_PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.PartNumber", FieldType.STRING, display_name="Part Number")
    ANTIBODY_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.RecordId", FieldType.LONG, display_name="Record ID")
    ANTIBODY_EXT_REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.RegistryId", FieldType.STRING, display_name="Registry ID")
    ANTIBODY_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    ANTIBODY_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    ANTIBODY_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    ANTIBODY_EXT_VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Antibody.Vendor", FieldType.SELECTION, display_name="Vendor")
    ASSAYTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("AssayType", FieldType.STRING, display_name="[System Field] Assay Type")
    BIOCONJUGATE_EXT_CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("BioConjugate.ConsumableName", FieldType.STRING, display_name="Conjugate Name")
    BIOCONJUGATE_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("BioConjugate.ConsumableType", FieldType.SELECTION, display_name="Conjugate Subtype")
    BIOCONJUGATE_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("BioConjugate.CreatedBy", FieldType.STRING, display_name="Created By")
    BIOCONJUGATE_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("BioConjugate.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    BIOCONJUGATE_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("BioConjugate.DateCreated", FieldType.DATE, display_name="Date Created")
    BIOCONJUGATE_EXT_EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("BioConjugate.ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    BIOCONJUGATE_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("BioConjugate.LotNumber", FieldType.STRING, display_name="Lot Number")
    BIOCONJUGATE_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("BioConjugate.RecordId", FieldType.LONG, display_name="Record ID")
    BIOCONJUGATE_EXT_REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("BioConjugate.RegistryId", FieldType.STRING, display_name="Registry ID")
    BIOCONJUGATE_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("BioConjugate.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    BIOCONJUGATE_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("BioConjugate.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    BIOCONJUGATE_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("BioConjugate.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    BIOCONJUGATE_EXT_VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("BioConjugate.Vendor", FieldType.SELECTION, display_name="Vendor")
    BLOCKNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("BlockNumber", FieldType.INTEGER, display_name="Block #")
    BLOOD_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Blood.CreatedBy", FieldType.STRING, display_name="Created By")
    BLOOD_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Blood.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    BLOOD_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("Blood.DateCreated", FieldType.DATE, display_name="Date Created")
    BLOOD_EXT_DRAWSITE__FIELD_NAME: Final[WrapperField] = WrapperField("Blood.DrawSite", FieldType.PICKLIST, display_name="Draw Site")
    BLOOD_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("Blood.RecordId", FieldType.LONG, display_name="Record ID")
    BLOOD_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("Blood.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    BLOOD_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Blood.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    BLOOD_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Blood.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    BRAINTISSUE_EXT_BRAINTISSUETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("BrainTissue.BrainTissueType", FieldType.SELECTION, display_name="Brain Tissue Type")
    BRAINTISSUE_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("BrainTissue.CreatedBy", FieldType.STRING, display_name="Created By")
    BRAINTISSUE_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("BrainTissue.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    BRAINTISSUE_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("BrainTissue.DateCreated", FieldType.DATE, display_name="Date Created")
    BRAINTISSUE_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("BrainTissue.RecordId", FieldType.LONG, display_name="Record ID")
    BRAINTISSUE_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("BrainTissue.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    BRAINTISSUE_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("BrainTissue.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    BRAINTISSUE_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("BrainTissue.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    C_MYNEWDATAFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("C_MyNewDataField", FieldType.STRING, display_name="My New Data Field")
    CELLLINE_EXT_CLASS1__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine.Class1", FieldType.SELECTION, display_name="1. Class")
    CELLLINE_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine.CreatedBy", FieldType.STRING, display_name="Created By")
    CELLLINE_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    CELLLINE_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine.DateCreated", FieldType.DATE, display_name="Date Created")
    CELLLINE_EXT_MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine.MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    CELLLINE_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine.RecordId", FieldType.LONG, display_name="Record ID")
    CELLLINE_EXT_SUBCLASS1_1__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine.Subclass1_1", FieldType.SELECTION, display_name="1.1 Subclass")
    CELLLINE_EXT_SUBCLASS1_1_1__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine.Subclass1_1_1", FieldType.SELECTION, display_name="1.1.1 Subclass")
    CELLLINE_EXT_TOTALCELLNUMBERS__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine.TotalCellNumbers", FieldType.LONG, display_name="Total Cell Numbers")
    CELLLINE_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    CELLLINE_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CELLLINE_EXT_VIABLECELLNUMBERS__FIELD_NAME: Final[WrapperField] = WrapperField("CellLine.ViableCellNumbers", FieldType.LONG, display_name="Viable Cell Numbers")
    CHEMREGPART_EXT_CAS__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.CAS", FieldType.STRING, display_name="CAS")
    CHEMREGPART_EXT_CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.Charge", FieldType.INTEGER, display_name="Charge")
    CHEMREGPART_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.ConsumableType", FieldType.SELECTION, display_name="Name")
    CHEMREGPART_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.CreatedBy", FieldType.STRING, display_name="Created By")
    CHEMREGPART_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    CHEMREGPART_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.DateCreated", FieldType.DATE, display_name="Date Created")
    CHEMREGPART_EXT_EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    CHEMREGPART_EXT_FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.Formula", FieldType.STRING, display_name="Formula")
    CHEMREGPART_EXT_GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    CHEMREGPART_EXT_GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    CHEMREGPART_EXT_GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    CHEMREGPART_EXT_GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.GHSSignal", FieldType.STRING, display_name="GHS Signal")
    CHEMREGPART_EXT_IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.IUPAC", FieldType.STRING, display_name="IUPAC")
    CHEMREGPART_EXT_INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.InchiKey", FieldType.STRING, display_name="InChI Key")
    CHEMREGPART_EXT_ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    CHEMREGPART_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.LotNumber", FieldType.STRING, display_name="Lot Number")
    CHEMREGPART_EXT_MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    CHEMREGPART_EXT_POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    CHEMREGPART_EXT_PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.PubchemCid", FieldType.INTEGER, display_name="PubChem CID")
    CHEMREGPART_EXT_PURITY__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.Purity", FieldType.DOUBLE, display_name="Purity")
    CHEMREGPART_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.RecordId", FieldType.LONG, display_name="Record ID")
    CHEMREGPART_EXT_REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.RegistryId", FieldType.STRING, display_name="Registry ID")
    CHEMREGPART_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    CHEMREGPART_EXT_SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.SMILES", FieldType.STRING, display_name="Canonical SMILES")
    CHEMREGPART_EXT_TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    CHEMREGPART_EXT_TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    CHEMREGPART_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    CHEMREGPART_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CHEMREGPART_EXT_YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.Yield", FieldType.DOUBLE, display_name="Yield")
    CHEMREGPART_EXT_CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    CHEMREGPART_EXT_INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("ChemRegPart.inchi", FieldType.STRING, display_name="InChI")
    CHEMICALREAGENT_EXT_CAS__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.CAS", FieldType.STRING, display_name="CAS")
    CHEMICALREAGENT_EXT_CXSMILESHASH__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.CXSMILESHash", FieldType.STRING, display_name="CXSMILES Hash")
    CHEMICALREAGENT_EXT_CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.Charge", FieldType.INTEGER, display_name="Charge")
    CHEMICALREAGENT_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.ConsumableType", FieldType.SELECTION, display_name="Name")
    CHEMICALREAGENT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.CreatedBy", FieldType.STRING, display_name="Created By")
    CHEMICALREAGENT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    CHEMICALREAGENT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.DateCreated", FieldType.DATE, display_name="Date Created")
    CHEMICALREAGENT_EXT_EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    CHEMICALREAGENT_EXT_EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    CHEMICALREAGENT_EXT_FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.Formula", FieldType.STRING, display_name="Formula")
    CHEMICALREAGENT_EXT_GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    CHEMICALREAGENT_EXT_GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    CHEMICALREAGENT_EXT_GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    CHEMICALREAGENT_EXT_GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.GHSSignal", FieldType.STRING, display_name="GHS Signal")
    CHEMICALREAGENT_EXT_HASORSTEREOGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.HasOrStereoGroup", FieldType.BOOLEAN, display_name="Contains OR Stereo")
    CHEMICALREAGENT_EXT_IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.IUPAC", FieldType.STRING, display_name="IUPAC")
    CHEMICALREAGENT_EXT_INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.InchiKey", FieldType.STRING, display_name="INCHI Key")
    CHEMICALREAGENT_EXT_ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    CHEMICALREAGENT_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.LotNumber", FieldType.STRING, display_name="Lot Number")
    CHEMICALREAGENT_EXT_MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    CHEMICALREAGENT_EXT_POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    CHEMICALREAGENT_EXT_PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.PubchemCid", FieldType.INTEGER, display_name="Pubchem CID")
    CHEMICALREAGENT_EXT_PURITY__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.Purity", FieldType.DOUBLE, display_name="Purity")
    CHEMICALREAGENT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.RecordId", FieldType.LONG, display_name="Record ID")
    CHEMICALREAGENT_EXT_REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.RegistryId", FieldType.STRING, display_name="Registry ID")
    CHEMICALREAGENT_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    CHEMICALREAGENT_EXT_SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.SMILES", FieldType.STRING, display_name="Canonical SMILES")
    CHEMICALREAGENT_EXT_STEREOREGHASH__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.StereoRegHash", FieldType.STRING, display_name="Stereo Registration Hash")
    CHEMICALREAGENT_EXT_TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    CHEMICALREAGENT_EXT_TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    CHEMICALREAGENT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    CHEMICALREAGENT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CHEMICALREAGENT_EXT_YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.Yield", FieldType.DOUBLE, display_name="Yield")
    CHEMICALREAGENT_EXT_CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    CHEMICALREAGENT_EXT_INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("ChemicalReagent.inchi", FieldType.STRING, display_name="INCHI")
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.SELECTION, display_name="Column Position")
    COLLECTIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("CollectionDate", FieldType.DATE, display_name="Collection Date")
    COLLECTIONDATETIME__FIELD_NAME: Final[WrapperField] = WrapperField("CollectionDateTime", FieldType.DATE, display_name="Collection Date/Time")
    COMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("Comments", FieldType.STRING, display_name="Comments")
    COMPOUND_EXT_CAS__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.CAS", FieldType.STRING, display_name="CAS")
    COMPOUND_EXT_CXSMILESHASH__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.CXSMILESHash", FieldType.STRING, display_name="CXSMILES Hash")
    COMPOUND_EXT_CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.Charge", FieldType.INTEGER, display_name="Charge")
    COMPOUND_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.ConsumableType", FieldType.SELECTION, display_name="Name")
    COMPOUND_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.CreatedBy", FieldType.STRING, display_name="Created By")
    COMPOUND_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    COMPOUND_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.DateCreated", FieldType.DATE, display_name="Date Created")
    COMPOUND_EXT_DENSITY__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.Density", FieldType.STRING, display_name="Density")
    COMPOUND_EXT_EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    COMPOUND_EXT_EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    COMPOUND_EXT_FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.Formula", FieldType.STRING, display_name="Formula")
    COMPOUND_EXT_GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    COMPOUND_EXT_GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    COMPOUND_EXT_GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    COMPOUND_EXT_GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.GHSSignal", FieldType.STRING, display_name="GHS Signal")
    COMPOUND_EXT_HASORSTEREOGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.HasOrStereoGroup", FieldType.BOOLEAN, display_name="Contains OR Stereo")
    COMPOUND_EXT_IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.IUPAC", FieldType.STRING, display_name="IUPAC")
    COMPOUND_EXT_INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.InchiKey", FieldType.STRING, display_name="INCHI Key")
    COMPOUND_EXT_ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    COMPOUND_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.LotNumber", FieldType.STRING, display_name="Lot Number")
    COMPOUND_EXT_MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    COMPOUND_EXT_POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    COMPOUND_EXT_PRESSURE__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.Pressure", FieldType.DOUBLE, display_name="Pressure")
    COMPOUND_EXT_PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.PubchemCid", FieldType.INTEGER, display_name="Pubchem CID")
    COMPOUND_EXT_PURITY__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.Purity", FieldType.DOUBLE, display_name="Purity")
    COMPOUND_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.RecordId", FieldType.LONG, display_name="Record ID")
    COMPOUND_EXT_REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.RegistryId", FieldType.STRING, display_name="Registry ID")
    COMPOUND_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    COMPOUND_EXT_SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.SMILES", FieldType.STRING, display_name="SMILES")
    COMPOUND_EXT_STEREOREGHASH__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.StereoRegHash", FieldType.STRING, display_name="Stereo Registration Hash")
    COMPOUND_EXT_TEMPERATURE__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.Temperature", FieldType.DOUBLE, display_name="Temperature")
    COMPOUND_EXT_TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    COMPOUND_EXT_TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    COMPOUND_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    COMPOUND_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    COMPOUND_EXT_YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.Yield", FieldType.DOUBLE, display_name="Yield")
    COMPOUND_EXT_ZOBIOONLY__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.ZoBioonly", FieldType.BOOLEAN, display_name="Zo Bio only")
    COMPOUND_EXT_CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    COMPOUND_EXT_INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("Compound.inchi", FieldType.STRING, display_name="INCHI")
    CONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("Concentration", FieldType.DOUBLE, display_name="Concentration")
    CONCENTRATIONUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("ConcentrationUnits", FieldType.PICKLIST, display_name="Concentration Units")
    CONTAINERTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ContainerType", FieldType.PICKLIST, display_name="Container Type")
    CONTROLTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ControlType", FieldType.STRING, display_name="Control Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DNA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("DNA.CreatedBy", FieldType.STRING, display_name="Created By")
    DNA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DNA.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DNA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DNA.DateCreated", FieldType.DATE, display_name="Date Created")
    DNA_EXT_EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("DNA.ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    DNA_EXT_ITEMID__FIELD_NAME: Final[WrapperField] = WrapperField("DNA.ItemId", FieldType.STRING, display_name="Lot Number")
    DNA_EXT_NAME__FIELD_NAME: Final[WrapperField] = WrapperField("DNA.Name", FieldType.STRING, display_name="Name")
    DNA_EXT_PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("DNA.PartNumber", FieldType.STRING, display_name="Registry ID")
    DNA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("DNA.RecordId", FieldType.LONG, display_name="Record ID")
    DNA_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("DNA.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    DNA_EXT_SEQUENCETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DNA.SequenceType", FieldType.PICKLIST, display_name="Sequence Type")
    DNA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("DNA.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    DNA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("DNA.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DATEOFBIRTH__FIELD_NAME: Final[WrapperField] = WrapperField("DateofBirth", FieldType.DATE, display_name="Date of Birth")
    DISEASE__FIELD_NAME: Final[WrapperField] = WrapperField("Disease", FieldType.STRING, display_name="Disease")
    DISEASEPATHOLOGY__FIELD_NAME: Final[WrapperField] = WrapperField("DiseasePathology", FieldType.PICKLIST, display_name="Disease Pathology")
    DONORID__FIELD_NAME: Final[WrapperField] = WrapperField("DonorID", FieldType.STRING, display_name="Donor ID")
    ELNBNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ElnbNumber", FieldType.STRING, display_name="eLNB #")
    ENZYME_EXT_CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.ConsumableName", FieldType.STRING, display_name="Enzyme ID")
    ENZYME_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.ConsumableType", FieldType.SELECTION, display_name="Enzyme Name")
    ENZYME_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.CreatedBy", FieldType.STRING, display_name="Created By")
    ENZYME_EXT_CUTTINGPATTERN__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.CuttingPattern", FieldType.STRING, display_name="Cutting Pattern")
    ENZYME_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    ENZYME_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.DateCreated", FieldType.DATE, display_name="Date Created")
    ENZYME_EXT_DATEOFPURCHASE__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.DateOfPurchase", FieldType.DATE, display_name="Date Of Purchase")
    ENZYME_EXT_ENZYMETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.EnzymeType", FieldType.PICKLIST, display_name="Enzyme Type")
    ENZYME_EXT_EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    ENZYME_EXT_ISOSCHIZOMERS__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.Isoschizomers", FieldType.STRING, display_name="Isoschizomers")
    ENZYME_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.LotNumber", FieldType.STRING, display_name="Lot Number")
    ENZYME_EXT_NEOSCHIZOMERS__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.Neoschizomers", FieldType.STRING, display_name="Neoschizomers")
    ENZYME_EXT_PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.PartNumber", FieldType.STRING, display_name="Part Number")
    ENZYME_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.RecordId", FieldType.LONG, display_name="Record ID")
    ENZYME_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    ENZYME_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    ENZYME_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    ENZYME_EXT_VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Enzyme.Vendor", FieldType.SELECTION, display_name="Vendor")
    EXEMPLARSAMPLESTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("ExemplarSampleStatus", FieldType.SELECTION, display_name="Sample Status")
    EXEMPLARSAMPLESUBTYP__FIELD_NAME: Final[WrapperField] = WrapperField("ExemplarSampleSubtyp", FieldType.PICKLIST, display_name="Tissue Type")
    EXEMPLARSAMPLESUBTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ExemplarSampleSubtype", FieldType.SELECTION, display_name="Tissue type")
    EXEMPLARSAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ExemplarSampleType", FieldType.SELECTION, display_name="Sample Type")
    FEDEXTRACKINGNO__FIELD_NAME: Final[WrapperField] = WrapperField("FedExTrackingNo", FieldType.STRING, display_name="FedEx Tracking Number")
    FERMENTED__FIELD_NAME: Final[WrapperField] = WrapperField("Fermented", FieldType.BOOLEAN, display_name="Fermented")
    FLAGS__FIELD_NAME: Final[WrapperField] = WrapperField("Flags", FieldType.STRING, display_name="Flags")
    FLOWJOGROUPSIDELINK__FIELD_NAME: Final[WrapperField] = WrapperField("FlowJoGroupSideLink", FieldType.SIDE_LINK, display_name="Flow Jo Group Side Link")
    HANDLING__FIELD_NAME: Final[WrapperField] = WrapperField("Handling", FieldType.STRING, display_name="Handling")
    HISTOLOGYPROTOCOL3_EXT_ASSIGNEDSPECIALSTAIN__FIELD_NAME: Final[WrapperField] = WrapperField("HistologyProtocol3.AssignedSpecialStain", FieldType.STRING, display_name="Special Stain")
    HISTOLOGYPROTOCOL3_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("HistologyProtocol3.CreatedBy", FieldType.STRING, display_name="Created By")
    HISTOLOGYPROTOCOL3_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("HistologyProtocol3.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    HISTOLOGYPROTOCOL3_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("HistologyProtocol3.DateCreated", FieldType.DATE, display_name="Date Created")
    HISTOLOGYPROTOCOL3_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("HistologyProtocol3.RecordId", FieldType.LONG, display_name="Record ID")
    HISTOLOGYPROTOCOL3_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("HistologyProtocol3.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    HISTOLOGYPROTOCOL3_EXT_SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("HistologyProtocol3.SampleId", FieldType.STRING, display_name="Sample ID")
    HISTOLOGYPROTOCOL3_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("HistologyProtocol3.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    HISTOLOGYPROTOCOL3_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("HistologyProtocol3.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    HOLDSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("HoldStatus", FieldType.PICKLIST, display_name="Hold Status")
    INTFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("IntField", FieldType.INTEGER, display_name="Int Field")
    ISCONTROL__FIELD_NAME: Final[WrapperField] = WrapperField("IsControl", FieldType.BOOLEAN, display_name="Is Control?")
    ISINVALID__FIELD_NAME: Final[WrapperField] = WrapperField("IsInvalid", FieldType.BOOLEAN, display_name="Is Invalid?")
    ISPOOLED__FIELD_NAME: Final[WrapperField] = WrapperField("IsPooled", FieldType.BOOLEAN, display_name="Is Pooled?")
    LASTEDITEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("LastEditedBy", FieldType.STRING, display_name="Last Edited By")
    MOLECULE_EXT_ADCCONCINCUBATIONLABELED__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ADCConcIncubationLabeled", FieldType.DOUBLE, display_name="ADC conc in incubation (Labelled) (nM)")
    MOLECULE_EXT_ADCCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ADCConcentration", FieldType.DOUBLE, display_name="Actual ADC Concentration (uM)")
    MOLECULE_EXT_ACTUALYIELD__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ActualYield", FieldType.DOUBLE, display_name="Actual Yield")
    MOLECULE_EXT_BARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.Barcode", FieldType.STRING, display_name="Barcode")
    MOLECULE_EXT_CAS_NO__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.CAS_NO", FieldType.STRING, display_name="CAS_NO")
    MOLECULE_EXT_CHEBI_ID__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ChEBI_ID", FieldType.STRING, display_name="ChEBI ID")
    MOLECULE_EXT_CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.Charge", FieldType.INTEGER, display_name="Charge")
    MOLECULE_EXT_COMPOUNDLOCATION__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.CompoundLocation", FieldType.PICKLIST, display_name="Compound Location")
    MOLECULE_EXT_CONCWARHEAD__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ConcWarhead", FieldType.DOUBLE, display_name="Starting Concentration of Warhead (nM)")
    MOLECULE_EXT_CONJUGATE__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.Conjugate", FieldType.STRING, display_name="Actual Conjugate")
    MOLECULE_EXT_CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ConsumableName", FieldType.STRING, display_name="Consumable Name         ")
    MOLECULE_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ConsumableType", FieldType.SELECTION, display_name="Consumable Type        ")
    MOLECULE_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.CreatedBy", FieldType.STRING, display_name="Created By")
    MOLECULE_EXT_CRUDESOLVENT__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.CrudeSolvent", FieldType.STRING, display_name="Crude Solvent")
    MOLECULE_EXT_CRUDEVOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.CrudeVolume", FieldType.DOUBLE, display_name="Crude Volume")
    MOLECULE_EXT_CRUDEWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.CrudeWeight", FieldType.DOUBLE, display_name="Crude Weight")
    MOLECULE_EXT_DAR__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.DAR", FieldType.DOUBLE, display_name="DAR [Drug - Antibody Ratio]")
    MOLECULE_EXT_DCNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.DCNumber", FieldType.STRING, display_name="DC Number")
    MOLECULE_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    MOLECULE_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.DateCreated", FieldType.DATE, display_name="Date Created")
    MOLECULE_EXT_DILUTIONFACTOR__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.DilutionFactor", FieldType.DOUBLE, display_name="Dilution Factor")
    MOLECULE_EXT_EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    MOLECULE_EXT_EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    MOLECULE_EXT_FASALTCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.FaSaltCoefficient", FieldType.DOUBLE, display_name="FA Salt Coefficient")
    MOLECULE_EXT_FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.Formula", FieldType.STRING, display_name="Formula")
    MOLECULE_EXT_GENERATENAME__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.GenerateName", FieldType.ACTION, display_name="Generate Substance Name")
    MOLECULE_EXT_JCHEMID__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.JchemId", FieldType.INTEGER, display_name="ChemAxon ID")
    MOLECULE_EXT_LABLOCATION__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.LabLocation", FieldType.STRING, display_name="Lab Location")
    MOLECULE_EXT_LINKER__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.Linker", FieldType.STRING, display_name="Linker")
    MOLECULE_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.LotNumber", FieldType.STRING, display_name="Lot Number    ")
    MOLECULE_EXT_MOLWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.MolWeight", FieldType.DOUBLE, display_name="Molecule Weight")
    MOLECULE_EXT_MOLARMASS__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.MolarMass", FieldType.DOUBLE, display_name="Molar Mass")
    MOLECULE_EXT_MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    MOLECULE_EXT_NH3SALTCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.Nh3SaltCoefficient", FieldType.DOUBLE, display_name="NH3 Salt Coefficient")
    MOLECULE_EXT_PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.PartNumber", FieldType.STRING, display_name="Part Number                       ")
    MOLECULE_EXT_PEPTIDESTRING__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.PeptideString", FieldType.STRING, display_name="Peptide String")
    MOLECULE_EXT_REACTIONCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ReactionCoefficient", FieldType.INTEGER, display_name="Reaction Coefficient")
    MOLECULE_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.RecordId", FieldType.LONG, display_name="Record ID")
    MOLECULE_EXT_RENDER__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.Render", FieldType.STRING, display_name="Render")
    MOLECULE_EXT_REQUESTNOTES__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.RequestNotes", FieldType.STRING, display_name="Request Notes")
    MOLECULE_EXT_RETURNFRACTIONFORMAT__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ReturnFractionFormat", FieldType.STRING, display_name="Return Fraction Format")
    MOLECULE_EXT_RETURNSOLCONC__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ReturnSolConc", FieldType.DOUBLE, display_name="Return Solution Concentration")
    MOLECULE_EXT_SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.SMILES", FieldType.STRING, display_name="SMILES")
    MOLECULE_EXT_SCIENTISTEMAIL__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ScientistEmail", FieldType.STRING, display_name="Scientist Email")
    MOLECULE_EXT_SCIENTISTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.ScientistName", FieldType.STRING, display_name="Scientist Name")
    MOLECULE_EXT_SMALLMOLECULARINHIBITOR__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.SmallMolecularInhibitor", FieldType.INTEGER, display_name="Small Molecule Inhibitor (SMI)")
    MOLECULE_EXT_STEREOCHEMISTRY__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.Stereochemistry", FieldType.STRING, display_name="Stereochemistry")
    MOLECULE_EXT_SUBSTANCENAME__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.SubstanceName", FieldType.STRING, display_name="Substance Name")
    MOLECULE_EXT_SUPPLIERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.SupplierName", FieldType.STRING, display_name="Supplier Name")
    MOLECULE_EXT_TFASALTCOEFFICIENT__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.TfaSaltCoefficient", FieldType.DOUBLE, display_name="TFA Salt Coefficient")
    MOLECULE_EXT_THEORETICALYIELD__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.TheoreticalYield", FieldType.DOUBLE, display_name="Theoretical Yield")
    MOLECULE_EXT_UNISUBID__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.UniSubId", FieldType.STRING, display_name="Uni Sub Id")
    MOLECULE_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    MOLECULE_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    MOLECULE_EXT_YIELDPERCENTAGE__FIELD_NAME: Final[WrapperField] = WrapperField("Molecule.YieldPercentage", FieldType.DOUBLE, display_name="Yield Percentage")
    MULTIPARENTLINK156__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink156", FieldType.MULTIPARENTLINK, display_name="Linked Request")
    MULTIPARENTLINK203__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink203", FieldType.MULTIPARENTLINK, display_name="Related Batchs")
    MULTIPARENTLINK211__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink211", FieldType.MULTIPARENTLINK, display_name="Related AssignedProcesss")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Parent Sample(s)")
    MULTIPARENTLINK266__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink266", FieldType.MULTIPARENTLINK, display_name="Linked HistologySlides")
    MULTIPARENTLINK670__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink670", FieldType.MULTIPARENTLINK, display_name="Linked HistologyGroups")
    MULTIPARENTLINK689__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink689", FieldType.MULTIPARENTLINK, display_name="Linked Master Assay")
    MULTIPARENTLINK752__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink752", FieldType.MULTIPARENTLINK, display_name="Linked Master Assay Run")
    NGSSINGLETEMPLATEPROCESS__FIELD_NAME: Final[WrapperField] = WrapperField("NGSSingleTemplateProcess", FieldType.PICKLIST, display_name="NGS Single Template Process")
    NEWCHEM1_EXT_CAS__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.CAS", FieldType.STRING, display_name="CAS")
    NEWCHEM1_EXT_CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.Charge", FieldType.INTEGER, display_name="Charge")
    NEWCHEM1_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.ConsumableType", FieldType.SELECTION, display_name="Name")
    NEWCHEM1_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.CreatedBy", FieldType.STRING, display_name="Created By")
    NEWCHEM1_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    NEWCHEM1_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.DateCreated", FieldType.DATE, display_name="Date Created")
    NEWCHEM1_EXT_EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    NEWCHEM1_EXT_FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.Formula", FieldType.STRING, display_name="Formula")
    NEWCHEM1_EXT_GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    NEWCHEM1_EXT_GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    NEWCHEM1_EXT_GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    NEWCHEM1_EXT_IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.IUPAC", FieldType.STRING, display_name="IUPAC")
    NEWCHEM1_EXT_INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.InchiKey", FieldType.STRING, display_name="InChI Key")
    NEWCHEM1_EXT_ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    NEWCHEM1_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.LotNumber", FieldType.STRING, display_name="Lot Number")
    NEWCHEM1_EXT_MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    NEWCHEM1_EXT_POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    NEWCHEM1_EXT_PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.PubchemCid", FieldType.INTEGER, display_name="PubChem CID")
    NEWCHEM1_EXT_PURITY__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.Purity", FieldType.DOUBLE, display_name="Purity")
    NEWCHEM1_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.RecordId", FieldType.LONG, display_name="Record ID")
    NEWCHEM1_EXT_REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.RegistryId", FieldType.STRING, display_name="Registry ID")
    NEWCHEM1_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    NEWCHEM1_EXT_SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.SMILES", FieldType.STRING, display_name="Canonical SMILES")
    NEWCHEM1_EXT_TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    NEWCHEM1_EXT_TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    NEWCHEM1_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    NEWCHEM1_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    NEWCHEM1_EXT_YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.Yield", FieldType.DOUBLE, display_name="Yield")
    NEWCHEM1_EXT_CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    NEWCHEM1_EXT_INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("NewChem1.inchi", FieldType.STRING, display_name="InChI")
    NOCANTAU_EXT_CAS__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.CAS", FieldType.STRING, display_name="CAS")
    NOCANTAU_EXT_CXSMILESHASH__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.CXSMILESHash", FieldType.STRING, display_name="CXSMILES Hash")
    NOCANTAU_EXT_CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.Charge", FieldType.INTEGER, display_name="Charge")
    NOCANTAU_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.ConsumableType", FieldType.SELECTION, display_name="Name")
    NOCANTAU_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.CreatedBy", FieldType.STRING, display_name="Created By")
    NOCANTAU_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    NOCANTAU_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.DateCreated", FieldType.DATE, display_name="Date Created")
    NOCANTAU_EXT_EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    NOCANTAU_EXT_FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.Formula", FieldType.STRING, display_name="Formula")
    NOCANTAU_EXT_GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    NOCANTAU_EXT_GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    NOCANTAU_EXT_GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    NOCANTAU_EXT_GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.GHSSignal", FieldType.STRING, display_name="GHS Signal")
    NOCANTAU_EXT_HASORSTEREOGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.HasOrStereoGroup", FieldType.BOOLEAN, display_name="Contains OR Stereo")
    NOCANTAU_EXT_IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.IUPAC", FieldType.STRING, display_name="IUPAC")
    NOCANTAU_EXT_INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.InchiKey", FieldType.STRING, display_name="InChI Key")
    NOCANTAU_EXT_ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    NOCANTAU_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.LotNumber", FieldType.STRING, display_name="Lot Number")
    NOCANTAU_EXT_MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    NOCANTAU_EXT_POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    NOCANTAU_EXT_PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.PubchemCid", FieldType.INTEGER, display_name="PubChem CID")
    NOCANTAU_EXT_PURITY__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.Purity", FieldType.DOUBLE, display_name="Purity")
    NOCANTAU_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.RecordId", FieldType.LONG, display_name="Record ID")
    NOCANTAU_EXT_REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.RegistryId", FieldType.STRING, display_name="Registry ID")
    NOCANTAU_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    NOCANTAU_EXT_SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.SMILES", FieldType.STRING, display_name="Canonical SMILES")
    NOCANTAU_EXT_STEREOREGHASH__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.StereoRegHash", FieldType.STRING, display_name="Stereo Registration Hash")
    NOCANTAU_EXT_TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    NOCANTAU_EXT_TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    NOCANTAU_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    NOCANTAU_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    NOCANTAU_EXT_YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.Yield", FieldType.DOUBLE, display_name="Yield")
    NOCANTAU_EXT_CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    NOCANTAU_EXT_INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("NoCanTau.inchi", FieldType.STRING, display_name="InChI")
    OBSERVEDCONDITION__FIELD_NAME: Final[WrapperField] = WrapperField("ObservedCondition", FieldType.SELECTION, display_name="Observed Aspects")
    OLIGO_EXT_CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("Oligo.ConsumableName", FieldType.STRING, display_name="Oligo Name")
    OLIGO_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("Oligo.ConsumableType", FieldType.SELECTION, display_name="Oligo Subtype")
    OLIGO_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Oligo.CreatedBy", FieldType.STRING, display_name="Created By")
    OLIGO_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Oligo.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    OLIGO_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("Oligo.DateCreated", FieldType.DATE, display_name="Date Created")
    OLIGO_EXT_EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Oligo.ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    OLIGO_EXT_HELM__FIELD_NAME: Final[WrapperField] = WrapperField("Oligo.HELM", FieldType.STRING, display_name="HELM")
    OLIGO_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Oligo.LotNumber", FieldType.STRING, display_name="Lot Number")
    OLIGO_EXT_PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Oligo.PartNumber", FieldType.STRING, display_name="Part Number")
    OLIGO_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("Oligo.RecordId", FieldType.LONG, display_name="Record ID")
    OLIGO_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("Oligo.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    OLIGO_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Oligo.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    OLIGO_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Oligo.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    ORGAN__FIELD_NAME: Final[WrapperField] = WrapperField("Organ", FieldType.STRING, display_name="Organ")
    ORGANISM__FIELD_NAME: Final[WrapperField] = WrapperField("Organism", FieldType.PICKLIST, display_name="Organism")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    PATIENTID__FIELD_NAME: Final[WrapperField] = WrapperField("PatientID", FieldType.STRING, display_name="Patient ID")
    PERCENTRECOVERIES__FIELD_NAME: Final[WrapperField] = WrapperField("PercentRecoveries", FieldType.DOUBLE, display_name="% Recoveries")
    PICKLISTFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("PicklistField", FieldType.PICKLIST, display_name="Picklist Field")
    PLATEID__FIELD_NAME: Final[WrapperField] = WrapperField("PlateId", FieldType.STRING, display_name="Plate ID")
    PREVIOUSEXEMPLARSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("PreviousExemplarStatus", FieldType.SELECTION, display_name="Previous Sample Status")
    PROTEIN_EXT_BARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.Barcode", FieldType.AUTO_ACCESSION, display_name="Barcode")
    PROTEIN_EXT_CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.ConsumableName", FieldType.STRING, display_name="Name")
    PROTEIN_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.ConsumableType", FieldType.PICKLIST, display_name="Type")
    PROTEIN_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.CreatedBy", FieldType.STRING, display_name="Created By")
    PROTEIN_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    PROTEIN_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.DateCreated", FieldType.DATE, display_name="Date Created")
    PROTEIN_EXT_EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    PROTEIN_EXT_EXPIRED__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.Expired", FieldType.BOOLEAN, display_name="Expired")
    PROTEIN_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.LotNumber", FieldType.STRING, display_name="Lot Number")
    PROTEIN_EXT_PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.PartNumber", FieldType.STRING, display_name="Registry ID")
    PROTEIN_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.RecordId", FieldType.LONG, display_name="Record ID")
    PROTEIN_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    PROTEIN_EXT_STRUCTURENAME__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.StructureName", FieldType.STRING, display_name="Structure Name")
    PROTEIN_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    PROTEIN_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Protein.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    RNA_EXT_CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("RNA.ConsumableName", FieldType.STRING, display_name="Name")
    RNA_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("RNA.ConsumableType", FieldType.SELECTION, display_name="Type")
    RNA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("RNA.CreatedBy", FieldType.STRING, display_name="Created By")
    RNA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("RNA.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    RNA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("RNA.DateCreated", FieldType.DATE, display_name="Date Created")
    RNA_EXT_EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RNA.ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    RNA_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("RNA.LotNumber", FieldType.STRING, display_name="Lot Number")
    RNA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("RNA.RecordId", FieldType.LONG, display_name="Record ID")
    RNA_EXT_REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("RNA.RegistryId", FieldType.STRING, display_name="Registry ID")
    RNA_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("RNA.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    RNA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("RNA.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    RNA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("RNA.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    READYFORRND__FIELD_NAME: Final[WrapperField] = WrapperField("ReadyforRnD", FieldType.BOOLEAN, display_name="Ready for R n D")
    ROBS3RDREG_EXT_CAS__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.CAS", FieldType.STRING, display_name="CAS")
    ROBS3RDREG_EXT_CHARGE__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.Charge", FieldType.INTEGER, display_name="Charge")
    ROBS3RDREG_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.ConsumableType", FieldType.SELECTION, display_name="Name")
    ROBS3RDREG_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.CreatedBy", FieldType.STRING, display_name="Created By")
    ROBS3RDREG_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    ROBS3RDREG_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.DateCreated", FieldType.DATE, display_name="Date Created")
    ROBS3RDREG_EXT_EXACTMASS__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.ExactMass", FieldType.DOUBLE, display_name="Exact Mass")
    ROBS3RDREG_EXT_FORMULA__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.Formula", FieldType.STRING, display_name="Formula")
    ROBS3RDREG_EXT_GHSCAUTIONCODE__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.GHSCautionCode", FieldType.STRING, display_name="GHS Caution Code")
    ROBS3RDREG_EXT_GHSHAZARDCODE__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.GHSHazardCode", FieldType.STRING, display_name="GHS Hazard Code")
    ROBS3RDREG_EXT_GHSPICTOCODE__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.GHSPictoCode", FieldType.STRING, display_name="GHS Pictogram Codes")
    ROBS3RDREG_EXT_GHSSIGNAL__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.GHSSignal", FieldType.STRING, display_name="GHS Signal")
    ROBS3RDREG_EXT_IUPAC__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.IUPAC", FieldType.STRING, display_name="IUPAC")
    ROBS3RDREG_EXT_INCHIKEY__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.InchiKey", FieldType.STRING, display_name="InChI Key")
    ROBS3RDREG_EXT_ISGHSCLASSIFIED__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.IsGHSClassified", FieldType.BOOLEAN, display_name="Is GHS Classified")
    ROBS3RDREG_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.LotNumber", FieldType.STRING, display_name="Lot Number")
    ROBS3RDREG_EXT_MOLECULARWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.MolecularWeight", FieldType.DOUBLE, display_name="Molecular Weight")
    ROBS3RDREG_EXT_POLARSURFACEAREA__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.PolarSurfaceArea", FieldType.DOUBLE, display_name="Polar Surface Area")
    ROBS3RDREG_EXT_PUBCHEMCID__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.PubchemCid", FieldType.INTEGER, display_name="PubChem CID")
    ROBS3RDREG_EXT_PURITY__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.Purity", FieldType.DOUBLE, display_name="Purity")
    ROBS3RDREG_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.RecordId", FieldType.LONG, display_name="Record ID")
    ROBS3RDREG_EXT_REGISTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.RegistryId", FieldType.STRING, display_name="Registry ID")
    ROBS3RDREG_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    ROBS3RDREG_EXT_SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.SMILES", FieldType.STRING, display_name="Canonical SMILES")
    ROBS3RDREG_EXT_TOTALHBONDACCEPTORS__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.TotalHBondAcceptors", FieldType.INTEGER, display_name="#Hydrogen Bond Acceptors")
    ROBS3RDREG_EXT_TOTALHBONDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.TotalHBondCount", FieldType.INTEGER, display_name="#Hydrogen Bond Donors")
    ROBS3RDREG_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    ROBS3RDREG_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    ROBS3RDREG_EXT_YIELD__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.Yield", FieldType.DOUBLE, display_name="Yield")
    ROBS3RDREG_EXT_CLOGP__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.cLogP", FieldType.DOUBLE, display_name="Calculated cLogP")
    ROBS3RDREG_EXT_INCHI__FIELD_NAME: Final[WrapperField] = WrapperField("Robs3rdReg.inchi", FieldType.STRING, display_name="InChI")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.SELECTION, display_name="Row Position")
    SACRIFICEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SacrificedDate", FieldType.DATE, display_name="Sacrificed Date")
    SAMPLEEXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SampleExpirationDate", FieldType.DATE, display_name="Expiration Date")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    SAPIOSINGLETEMPLATEPROCESS__FIELD_NAME: Final[WrapperField] = WrapperField("SapioSingleTemplateProcess", FieldType.PICKLIST, display_name="Sapio Single Template Process")
    SEX__FIELD_NAME: Final[WrapperField] = WrapperField("Sex", FieldType.PICKLIST, display_name="Sex")
    STAIN_EXT_CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("Stain.ConsumableName", FieldType.STRING, display_name="Stain Id")
    STAIN_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("Stain.ConsumableType", FieldType.SELECTION, display_name="Assay Name")
    STAIN_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Stain.CreatedBy", FieldType.STRING, display_name="Created By")
    STAIN_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Stain.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    STAIN_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("Stain.DateCreated", FieldType.DATE, display_name="Date Created")
    STAIN_EXT_EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Stain.ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    STAIN_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Stain.LotNumber", FieldType.STRING, display_name="Lot Number")
    STAIN_EXT_PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Stain.PartNumber", FieldType.STRING, display_name="Part Number")
    STAIN_EXT_PROTOCOLNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Stain.ProtocolNumber", FieldType.STRING, display_name="Protocol Number")
    STAIN_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("Stain.RecordId", FieldType.LONG, display_name="Record ID")
    STAIN_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("Stain.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    STAIN_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Stain.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    STAIN_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Stain.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    STATICDATE__FIELD_NAME: Final[WrapperField] = WrapperField("StaticDate", FieldType.DATE, display_name="Static Date")
    STORAGELOCATIONBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("StorageLocationBarcode", FieldType.SELECTION, display_name="Storage Location Barcode")
    STORAGEUNITPATH__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitPath", FieldType.STRING, display_name="Storage Location Path")
    STRAIN_EXT_CI95BOUNDS__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.Ci95Bounds", FieldType.DOUBLE, display_name="CI 95% Bounds")
    STRAIN_EXT_CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.ConsumableName", FieldType.STRING, display_name="Strain Name")
    STRAIN_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.ConsumableType", FieldType.SELECTION, display_name="Strain Subtype")
    STRAIN_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.CreatedBy", FieldType.STRING, display_name="Created By")
    STRAIN_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    STRAIN_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.DateCreated", FieldType.DATE, display_name="Date Created")
    STRAIN_EXT_EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    STRAIN_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.LotNumber", FieldType.STRING, display_name="Lot Number")
    STRAIN_EXT_PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.PartNumber", FieldType.STRING, display_name="Part Number")
    STRAIN_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.RecordId", FieldType.LONG, display_name="Record ID")
    STRAIN_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    STRAIN_EXT_SAMPLEMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.SampleMean", FieldType.DOUBLE, display_name="Mean")
    STRAIN_EXT_SAMPLENORMALIZEDMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.SampleNormalizedMean", FieldType.DOUBLE, display_name="Normalized Mean")
    STRAIN_EXT_SAMPLESTD__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.SampleStd", FieldType.DOUBLE, display_name="Standard Deviation")
    STRAIN_EXT_STANDARDERROR__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.StandardError", FieldType.DOUBLE, display_name="Standard Error")
    STRAIN_EXT_STRAINDETAILS__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.StrainDetails", FieldType.STRING, display_name="Strain Details")
    STRAIN_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    STRAIN_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Strain.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    STRAINDETAILS_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails.CreatedBy", FieldType.STRING, display_name="Created By")
    STRAINDETAILS_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    STRAINDETAILS_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails.DateCreated", FieldType.DATE, display_name="Date Created")
    STRAINDETAILS_EXT_MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails.MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    STRAINDETAILS_EXT_PLASMIDLOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails.PlasmidLotNumber", FieldType.STRING, display_name="Plasmid Lot Number")
    STRAINDETAILS_EXT_PLASMIDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails.PlasmidName", FieldType.STRING, display_name="Plasmid Name")
    STRAINDETAILS_EXT_PLASMIDSEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails.PlasmidSequence", FieldType.STRING, display_name="Plasmid Sequence")
    STRAINDETAILS_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails.RecordId", FieldType.LONG, display_name="Record ID")
    STRAINDETAILS_EXT_STRAINLOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails.StrainLotNumber", FieldType.STRING, display_name="Strain Lot Number")
    STRAINDETAILS_EXT_STRAINNAME__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails.StrainName", FieldType.STRING, display_name="Strain Name")
    STRAINDETAILS_EXT_STRAINPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails.StrainPartNumber", FieldType.STRING, display_name="Strain Part Number")
    STRAINDETAILS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    STRAINDETAILS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    STRAINHIT__FIELD_NAME: Final[WrapperField] = WrapperField("StrainHit", FieldType.BOOLEAN, display_name="Strain Hit?")
    STUDYSAMPLINGID__FIELD_NAME: Final[WrapperField] = WrapperField("StudySamplingId", FieldType.STRING, display_name="Study Sampling ID")
    TATPROGRESSSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("TatProgressStatus", FieldType.PICKLIST, display_name="TAT Progress Status")
    TESTCONCATFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("TestConcatField", FieldType.STRING, display_name="Test Concat Field")
    TESTLASTFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("TestLastField", FieldType.STRING, display_name="Test Last Field")
    TIMEPOINT__FIELD_NAME: Final[WrapperField] = WrapperField("TimePoint", FieldType.DOUBLE, display_name="Time Point (hr)")
    TISSUE__FIELD_NAME: Final[WrapperField] = WrapperField("Tissue", FieldType.STRING, display_name="Tissue")
    TISSUESECTIONSPERSLIDE__FIELD_NAME: Final[WrapperField] = WrapperField("TissueSectionsPerSlide", FieldType.INTEGER, display_name="Tissue Sections Per Slide")
    TOTALMASS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalMass", FieldType.DOUBLE, display_name="Total Mass")
    TUBEBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("TubeBarcode", FieldType.STRING, display_name="Tube Barcode")
    URGENTREQUEST__FIELD_NAME: Final[WrapperField] = WrapperField("UrgentRequest", FieldType.SELECTION, display_name="Urgent Request")
    VARIANT__FIELD_NAME: Final[WrapperField] = WrapperField("Variant", FieldType.STRING, display_name="Variant")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VIRALVECTOR_EXT_CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.ConsumableName", FieldType.STRING, display_name="Sapio Vector Accession Number")
    VIRALVECTOR_EXT_CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.ConsumableType", FieldType.SELECTION, display_name="Viral Vector Subtype")
    VIRALVECTOR_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.CreatedBy", FieldType.STRING, display_name="Created By")
    VIRALVECTOR_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    VIRALVECTOR_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.DateCreated", FieldType.DATE, display_name="Date Created")
    VIRALVECTOR_EXT_EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    VIRALVECTOR_EXT_LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.LotNumber", FieldType.STRING, display_name="Lot Number")
    VIRALVECTOR_EXT_ORF__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.ORF", FieldType.STRING, display_name="ORF")
    VIRALVECTOR_EXT_PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.PartNumber", FieldType.STRING, display_name="Vector ID")
    VIRALVECTOR_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.RecordId", FieldType.LONG, display_name="Record ID")
    VIRALVECTOR_EXT_RELATEDRECORD215__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.RelatedRecord215", FieldType.PARENTLINK, display_name="Linked Sample")
    VIRALVECTOR_EXT_VECTORSEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.VectorSequence", FieldType.STRING, display_name="Vector Sequence")
    VIRALVECTOR_EXT_VECTORTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.VectorType", FieldType.STRING, display_name="Vector Type")
    VIRALVECTOR_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VIRALVECTOR_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ViralVector.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("Volume", FieldType.DOUBLE, display_name="Quantity")
    VOLUMEUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("VolumeUnits", FieldType.PICKLIST, display_name="Volume Units")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ActiveWorkflowId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ActiveWorkflowId' on this record model
        """
        self.set_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name, value)

    def get_ActiveWorkflowId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ActiveWorkflowId' from this record model
        """
        return self.get_field_value(self.ACTIVEWORKFLOWID__FIELD_NAME.field_name)

    def set_Age_field(self, value: Optional[str]):
        """
        Set data field with field name 'Age' on this record model
        """
        self.set_field_value(self.AGE__FIELD_NAME.field_name, value)

    def get_Age_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Age' from this record model
        """
        return self.get_field_value(self.AGE__FIELD_NAME.field_name)

    def set_AliquotNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'AliquotNumber' on this record model
        """
        self.set_field_value(self.ALIQUOTNUMBER__FIELD_NAME.field_name, value)

    def get_AliquotNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'AliquotNumber' from this record model
        """
        return self.get_field_value(self.ALIQUOTNUMBER__FIELD_NAME.field_name)

    def set_AntibodyConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'Antibody.ConsumableName' on this record model
        """
        self.set_field_value(self.ANTIBODY_EXT_CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_AntibodyConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Antibody.ConsumableName' from this record model
        """
        return self.get_field_value(self.ANTIBODY_EXT_CONSUMABLENAME__FIELD_NAME.field_name)

    def set_AntibodyConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'Antibody.ConsumableType' on this record model
        """
        self.set_field_value(self.ANTIBODY_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_AntibodyConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Antibody.ConsumableType' from this record model
        """
        return self.get_field_value(self.ANTIBODY_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_AntibodyCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Antibody.CreatedBy' on this record model
        """
        self.set_field_value(self.ANTIBODY_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_AntibodyCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Antibody.CreatedBy' from this record model
        """
        return self.get_field_value(self.ANTIBODY_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_AntibodyDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'Antibody.DateCreated' on this record model
        """
        self.set_field_value(self.ANTIBODY_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_AntibodyDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Antibody.DateCreated' from this record model
        """
        return self.get_field_value(self.ANTIBODY_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_AntibodyExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Antibody.ExpirationDate' on this record model
        """
        self.set_field_value(self.ANTIBODY_EXT_EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_AntibodyExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Antibody.ExpirationDate' from this record model
        """
        return self.get_field_value(self.ANTIBODY_EXT_EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_AntibodyHELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'Antibody.HELM' on this record model
        """
        self.set_field_value(self.ANTIBODY_EXT_HELM__FIELD_NAME.field_name, value)

    def get_AntibodyHELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Antibody.HELM' from this record model
        """
        return self.get_field_value(self.ANTIBODY_EXT_HELM__FIELD_NAME.field_name)

    def set_AntibodyLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Antibody.LotNumber' on this record model
        """
        self.set_field_value(self.ANTIBODY_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_AntibodyLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Antibody.LotNumber' from this record model
        """
        return self.get_field_value(self.ANTIBODY_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_AntibodyPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Antibody.PartNumber' on this record model
        """
        self.set_field_value(self.ANTIBODY_EXT_PARTNUMBER__FIELD_NAME.field_name, value)

    def get_AntibodyPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Antibody.PartNumber' from this record model
        """
        return self.get_field_value(self.ANTIBODY_EXT_PARTNUMBER__FIELD_NAME.field_name)

    def set_AntibodyRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'Antibody.RecordId' on this record model
        """
        self.set_field_value(self.ANTIBODY_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_AntibodyRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Antibody.RecordId' from this record model
        """
        return self.get_field_value(self.ANTIBODY_EXT_RECORDID__FIELD_NAME.field_name)

    def set_AntibodyRegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'Antibody.RegistryId' on this record model
        """
        self.set_field_value(self.ANTIBODY_EXT_REGISTRYID__FIELD_NAME.field_name, value)

    def get_AntibodyRegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Antibody.RegistryId' from this record model
        """
        return self.get_field_value(self.ANTIBODY_EXT_REGISTRYID__FIELD_NAME.field_name)

    def set_AntibodyVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Antibody.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.ANTIBODY_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_AntibodyVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Antibody.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.ANTIBODY_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_AntibodyVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Antibody.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.ANTIBODY_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_AntibodyVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Antibody.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.ANTIBODY_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_AntibodyVendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Antibody.Vendor' on this record model
        """
        self.set_field_value(self.ANTIBODY_EXT_VENDOR__FIELD_NAME.field_name, value)

    def get_AntibodyVendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Antibody.Vendor' from this record model
        """
        return self.get_field_value(self.ANTIBODY_EXT_VENDOR__FIELD_NAME.field_name)

    def set_AssayType_field(self, value: Optional[str]):
        """
        Set data field with field name 'AssayType' on this record model
        """
        self.set_field_value(self.ASSAYTYPE__FIELD_NAME.field_name, value)

    def get_AssayType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AssayType' from this record model
        """
        return self.get_field_value(self.ASSAYTYPE__FIELD_NAME.field_name)

    def set_BioConjugateConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioConjugate.ConsumableName' on this record model
        """
        self.set_field_value(self.BIOCONJUGATE_EXT_CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_BioConjugateConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioConjugate.ConsumableName' from this record model
        """
        return self.get_field_value(self.BIOCONJUGATE_EXT_CONSUMABLENAME__FIELD_NAME.field_name)

    def set_BioConjugateConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioConjugate.ConsumableType' on this record model
        """
        self.set_field_value(self.BIOCONJUGATE_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_BioConjugateConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioConjugate.ConsumableType' from this record model
        """
        return self.get_field_value(self.BIOCONJUGATE_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_BioConjugateCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioConjugate.CreatedBy' on this record model
        """
        self.set_field_value(self.BIOCONJUGATE_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_BioConjugateCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioConjugate.CreatedBy' from this record model
        """
        return self.get_field_value(self.BIOCONJUGATE_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_BioConjugateDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioConjugate.DateCreated' on this record model
        """
        self.set_field_value(self.BIOCONJUGATE_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_BioConjugateDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioConjugate.DateCreated' from this record model
        """
        return self.get_field_value(self.BIOCONJUGATE_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_BioConjugateExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioConjugate.ExpirationDate' on this record model
        """
        self.set_field_value(self.BIOCONJUGATE_EXT_EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_BioConjugateExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioConjugate.ExpirationDate' from this record model
        """
        return self.get_field_value(self.BIOCONJUGATE_EXT_EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_BioConjugateLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioConjugate.LotNumber' on this record model
        """
        self.set_field_value(self.BIOCONJUGATE_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_BioConjugateLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioConjugate.LotNumber' from this record model
        """
        return self.get_field_value(self.BIOCONJUGATE_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_BioConjugateRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioConjugate.RecordId' on this record model
        """
        self.set_field_value(self.BIOCONJUGATE_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_BioConjugateRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioConjugate.RecordId' from this record model
        """
        return self.get_field_value(self.BIOCONJUGATE_EXT_RECORDID__FIELD_NAME.field_name)

    def set_BioConjugateRegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioConjugate.RegistryId' on this record model
        """
        self.set_field_value(self.BIOCONJUGATE_EXT_REGISTRYID__FIELD_NAME.field_name, value)

    def get_BioConjugateRegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioConjugate.RegistryId' from this record model
        """
        return self.get_field_value(self.BIOCONJUGATE_EXT_REGISTRYID__FIELD_NAME.field_name)

    def set_BioConjugateVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioConjugate.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.BIOCONJUGATE_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_BioConjugateVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioConjugate.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.BIOCONJUGATE_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_BioConjugateVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'BioConjugate.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.BIOCONJUGATE_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_BioConjugateVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BioConjugate.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.BIOCONJUGATE_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_BioConjugateVendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'BioConjugate.Vendor' on this record model
        """
        self.set_field_value(self.BIOCONJUGATE_EXT_VENDOR__FIELD_NAME.field_name, value)

    def get_BioConjugateVendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BioConjugate.Vendor' from this record model
        """
        return self.get_field_value(self.BIOCONJUGATE_EXT_VENDOR__FIELD_NAME.field_name)

    def set_BlockNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'BlockNumber' on this record model
        """
        self.set_field_value(self.BLOCKNUMBER__FIELD_NAME.field_name, value)

    def get_BlockNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BlockNumber' from this record model
        """
        return self.get_field_value(self.BLOCKNUMBER__FIELD_NAME.field_name)

    def set_BloodCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Blood.CreatedBy' on this record model
        """
        self.set_field_value(self.BLOOD_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_BloodCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Blood.CreatedBy' from this record model
        """
        return self.get_field_value(self.BLOOD_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_BloodDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'Blood.DateCreated' on this record model
        """
        self.set_field_value(self.BLOOD_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_BloodDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Blood.DateCreated' from this record model
        """
        return self.get_field_value(self.BLOOD_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_BloodDrawSite_field(self, value: Optional[str]):
        """
        Set data field with field name 'Blood.DrawSite' on this record model
        """
        self.set_field_value(self.BLOOD_EXT_DRAWSITE__FIELD_NAME.field_name, value)

    def get_BloodDrawSite_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Blood.DrawSite' from this record model
        """
        return self.get_field_value(self.BLOOD_EXT_DRAWSITE__FIELD_NAME.field_name)

    def set_BloodRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'Blood.RecordId' on this record model
        """
        self.set_field_value(self.BLOOD_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_BloodRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Blood.RecordId' from this record model
        """
        return self.get_field_value(self.BLOOD_EXT_RECORDID__FIELD_NAME.field_name)

    def set_BloodVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Blood.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.BLOOD_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_BloodVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Blood.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.BLOOD_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_BloodVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Blood.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.BLOOD_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_BloodVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Blood.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.BLOOD_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_BrainTissueBrainTissueType_field(self, value: Optional[str]):
        """
        Set data field with field name 'BrainTissue.BrainTissueType' on this record model
        """
        self.set_field_value(self.BRAINTISSUE_EXT_BRAINTISSUETYPE__FIELD_NAME.field_name, value)

    def get_BrainTissueBrainTissueType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BrainTissue.BrainTissueType' from this record model
        """
        return self.get_field_value(self.BRAINTISSUE_EXT_BRAINTISSUETYPE__FIELD_NAME.field_name)

    def set_BrainTissueCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'BrainTissue.CreatedBy' on this record model
        """
        self.set_field_value(self.BRAINTISSUE_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_BrainTissueCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BrainTissue.CreatedBy' from this record model
        """
        return self.get_field_value(self.BRAINTISSUE_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_BrainTissueDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'BrainTissue.DateCreated' on this record model
        """
        self.set_field_value(self.BRAINTISSUE_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_BrainTissueDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BrainTissue.DateCreated' from this record model
        """
        return self.get_field_value(self.BRAINTISSUE_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_BrainTissueRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BrainTissue.RecordId' on this record model
        """
        self.set_field_value(self.BRAINTISSUE_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_BrainTissueRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BrainTissue.RecordId' from this record model
        """
        return self.get_field_value(self.BRAINTISSUE_EXT_RECORDID__FIELD_NAME.field_name)

    def set_BrainTissueVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'BrainTissue.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.BRAINTISSUE_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_BrainTissueVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BrainTissue.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.BRAINTISSUE_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_BrainTissueVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'BrainTissue.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.BRAINTISSUE_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_BrainTissueVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BrainTissue.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.BRAINTISSUE_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_C_MyNewDataField_field(self, value: Optional[str]):
        """
        Set data field with field name 'C_MyNewDataField' on this record model
        """
        self.set_field_value(self.C_MYNEWDATAFIELD__FIELD_NAME.field_name, value)

    def get_C_MyNewDataField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'C_MyNewDataField' from this record model
        """
        return self.get_field_value(self.C_MYNEWDATAFIELD__FIELD_NAME.field_name)

    def set_CellLineClass1_field(self, value: Optional[str]):
        """
        Set data field with field name 'CellLine.Class1' on this record model
        """
        self.set_field_value(self.CELLLINE_EXT_CLASS1__FIELD_NAME.field_name, value)

    def get_CellLineClass1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CellLine.Class1' from this record model
        """
        return self.get_field_value(self.CELLLINE_EXT_CLASS1__FIELD_NAME.field_name)

    def set_CellLineCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'CellLine.CreatedBy' on this record model
        """
        self.set_field_value(self.CELLLINE_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_CellLineCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CellLine.CreatedBy' from this record model
        """
        return self.get_field_value(self.CELLLINE_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_CellLineDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'CellLine.DateCreated' on this record model
        """
        self.set_field_value(self.CELLLINE_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_CellLineDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CellLine.DateCreated' from this record model
        """
        return self.get_field_value(self.CELLLINE_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_CellLineRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'CellLine.RecordId' on this record model
        """
        self.set_field_value(self.CELLLINE_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_CellLineRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CellLine.RecordId' from this record model
        """
        return self.get_field_value(self.CELLLINE_EXT_RECORDID__FIELD_NAME.field_name)

    def set_CellLineSubclass1_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'CellLine.Subclass1_1' on this record model
        """
        self.set_field_value(self.CELLLINE_EXT_SUBCLASS1_1__FIELD_NAME.field_name, value)

    def get_CellLineSubclass1_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CellLine.Subclass1_1' from this record model
        """
        return self.get_field_value(self.CELLLINE_EXT_SUBCLASS1_1__FIELD_NAME.field_name)

    def set_CellLineSubclass1_1_1_field(self, value: Optional[str]):
        """
        Set data field with field name 'CellLine.Subclass1_1_1' on this record model
        """
        self.set_field_value(self.CELLLINE_EXT_SUBCLASS1_1_1__FIELD_NAME.field_name, value)

    def get_CellLineSubclass1_1_1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CellLine.Subclass1_1_1' from this record model
        """
        return self.get_field_value(self.CELLLINE_EXT_SUBCLASS1_1_1__FIELD_NAME.field_name)

    def set_CellLineTotalCellNumbers_field(self, value: Optional[int]):
        """
        Set data field with field name 'CellLine.TotalCellNumbers' on this record model
        """
        self.set_field_value(self.CELLLINE_EXT_TOTALCELLNUMBERS__FIELD_NAME.field_name, value)

    def get_CellLineTotalCellNumbers_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CellLine.TotalCellNumbers' from this record model
        """
        return self.get_field_value(self.CELLLINE_EXT_TOTALCELLNUMBERS__FIELD_NAME.field_name)

    def set_CellLineVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'CellLine.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.CELLLINE_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_CellLineVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CellLine.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.CELLLINE_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_CellLineVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'CellLine.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.CELLLINE_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_CellLineVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CellLine.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.CELLLINE_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_CellLineViableCellNumbers_field(self, value: Optional[int]):
        """
        Set data field with field name 'CellLine.ViableCellNumbers' on this record model
        """
        self.set_field_value(self.CELLLINE_EXT_VIABLECELLNUMBERS__FIELD_NAME.field_name, value)

    def get_CellLineViableCellNumbers_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CellLine.ViableCellNumbers' from this record model
        """
        return self.get_field_value(self.CELLLINE_EXT_VIABLECELLNUMBERS__FIELD_NAME.field_name)

    def set_ChemRegPartCAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.CAS' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_CAS__FIELD_NAME.field_name, value)

    def get_ChemRegPartCAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.CAS' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_CAS__FIELD_NAME.field_name)

    def set_ChemRegPartCharge_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemRegPart.Charge' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_CHARGE__FIELD_NAME.field_name, value)

    def get_ChemRegPartCharge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemRegPart.Charge' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_CHARGE__FIELD_NAME.field_name)

    def set_ChemRegPartConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.ConsumableType' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ChemRegPartConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.ConsumableType' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_ChemRegPartCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.CreatedBy' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_ChemRegPartCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.CreatedBy' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_ChemRegPartDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemRegPart.DateCreated' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_ChemRegPartDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemRegPart.DateCreated' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_ChemRegPartExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ChemRegPart.ExactMass' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_EXACTMASS__FIELD_NAME.field_name, value)

    def get_ChemRegPartExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ChemRegPart.ExactMass' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_EXACTMASS__FIELD_NAME.field_name)

    def set_ChemRegPartFormula_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.Formula' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_FORMULA__FIELD_NAME.field_name, value)

    def get_ChemRegPartFormula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.Formula' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_FORMULA__FIELD_NAME.field_name)

    def set_ChemRegPartGHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.GHSCautionCode' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_ChemRegPartGHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.GHSCautionCode' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_ChemRegPartGHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.GHSHazardCode' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_ChemRegPartGHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.GHSHazardCode' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_ChemRegPartGHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.GHSPictoCode' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_ChemRegPartGHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.GHSPictoCode' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_GHSPICTOCODE__FIELD_NAME.field_name)

    def set_ChemRegPartGHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.GHSSignal' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_ChemRegPartGHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.GHSSignal' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_GHSSIGNAL__FIELD_NAME.field_name)

    def set_ChemRegPartIUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.IUPAC' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_IUPAC__FIELD_NAME.field_name, value)

    def get_ChemRegPartIUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.IUPAC' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_IUPAC__FIELD_NAME.field_name)

    def set_ChemRegPartInchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.InchiKey' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_INCHIKEY__FIELD_NAME.field_name, value)

    def get_ChemRegPartInchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.InchiKey' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_INCHIKEY__FIELD_NAME.field_name)

    def set_ChemRegPartIsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ChemRegPart.IsGHSClassified' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_ChemRegPartIsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ChemRegPart.IsGHSClassified' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_ChemRegPartLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.LotNumber' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_ChemRegPartLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.LotNumber' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_ChemRegPartMolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'ChemRegPart.MolecularWeight' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_ChemRegPartMolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ChemRegPart.MolecularWeight' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_ChemRegPartPolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'ChemRegPart.PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_ChemRegPartPolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ChemRegPart.PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_ChemRegPartPubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemRegPart.PubchemCid' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_ChemRegPartPubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemRegPart.PubchemCid' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_PUBCHEMCID__FIELD_NAME.field_name)

    def set_ChemRegPartPurity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ChemRegPart.Purity' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_PURITY__FIELD_NAME.field_name, value)

    def get_ChemRegPartPurity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ChemRegPart.Purity' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_PURITY__FIELD_NAME.field_name)

    def set_ChemRegPartRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemRegPart.RecordId' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_ChemRegPartRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemRegPart.RecordId' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_RECORDID__FIELD_NAME.field_name)

    def set_ChemRegPartRegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.RegistryId' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_REGISTRYID__FIELD_NAME.field_name, value)

    def get_ChemRegPartRegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.RegistryId' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_REGISTRYID__FIELD_NAME.field_name)

    def set_ChemRegPartSMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.SMILES' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_SMILES__FIELD_NAME.field_name, value)

    def get_ChemRegPartSMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.SMILES' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_SMILES__FIELD_NAME.field_name)

    def set_ChemRegPartTotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemRegPart.TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_ChemRegPartTotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemRegPart.TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_ChemRegPartTotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemRegPart.TotalHBondCount' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_ChemRegPartTotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemRegPart.TotalHBondCount' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_ChemRegPartVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_ChemRegPartVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_ChemRegPartVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemRegPart.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_ChemRegPartVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemRegPart.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_ChemRegPartYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'ChemRegPart.Yield' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_YIELD__FIELD_NAME.field_name, value)

    def get_ChemRegPartYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ChemRegPart.Yield' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_YIELD__FIELD_NAME.field_name)

    def set_ChemRegPartcLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'ChemRegPart.cLogP' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_CLOGP__FIELD_NAME.field_name, value)

    def get_ChemRegPartcLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ChemRegPart.cLogP' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_CLOGP__FIELD_NAME.field_name)

    def set_ChemRegPartinchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemRegPart.inchi' on this record model
        """
        self.set_field_value(self.CHEMREGPART_EXT_INCHI__FIELD_NAME.field_name, value)

    def get_ChemRegPartinchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemRegPart.inchi' from this record model
        """
        return self.get_field_value(self.CHEMREGPART_EXT_INCHI__FIELD_NAME.field_name)

    def set_ChemicalReagentCAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.CAS' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_CAS__FIELD_NAME.field_name, value)

    def get_ChemicalReagentCAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.CAS' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_CAS__FIELD_NAME.field_name)

    def set_ChemicalReagentCXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.CXSMILESHash' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_ChemicalReagentCXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.CXSMILESHash' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_CXSMILESHASH__FIELD_NAME.field_name)

    def set_ChemicalReagentCharge_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalReagent.Charge' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_CHARGE__FIELD_NAME.field_name, value)

    def get_ChemicalReagentCharge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalReagent.Charge' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_CHARGE__FIELD_NAME.field_name)

    def set_ChemicalReagentConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.ConsumableType' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ChemicalReagentConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.ConsumableType' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_ChemicalReagentCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.CreatedBy' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_ChemicalReagentCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.CreatedBy' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_ChemicalReagentDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalReagent.DateCreated' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_ChemicalReagentDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalReagent.DateCreated' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_ChemicalReagentExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'ChemicalReagent.ExactMass' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_EXACTMASS__FIELD_NAME.field_name, value)

    def get_ChemicalReagentExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ChemicalReagent.ExactMass' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_EXACTMASS__FIELD_NAME.field_name)

    def set_ChemicalReagentExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalReagent.ExpirationDate' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ChemicalReagentExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalReagent.ExpirationDate' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_ChemicalReagentFormula_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.Formula' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_FORMULA__FIELD_NAME.field_name, value)

    def get_ChemicalReagentFormula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.Formula' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_FORMULA__FIELD_NAME.field_name)

    def set_ChemicalReagentGHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.GHSCautionCode' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_ChemicalReagentGHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.GHSCautionCode' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_ChemicalReagentGHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.GHSHazardCode' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_ChemicalReagentGHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.GHSHazardCode' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_ChemicalReagentGHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.GHSPictoCode' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_ChemicalReagentGHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.GHSPictoCode' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_GHSPICTOCODE__FIELD_NAME.field_name)

    def set_ChemicalReagentGHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.GHSSignal' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_ChemicalReagentGHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.GHSSignal' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_GHSSIGNAL__FIELD_NAME.field_name)

    def set_ChemicalReagentHasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ChemicalReagent.HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_ChemicalReagentHasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ChemicalReagent.HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_ChemicalReagentIUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.IUPAC' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_IUPAC__FIELD_NAME.field_name, value)

    def get_ChemicalReagentIUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.IUPAC' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_IUPAC__FIELD_NAME.field_name)

    def set_ChemicalReagentInchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.InchiKey' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_INCHIKEY__FIELD_NAME.field_name, value)

    def get_ChemicalReagentInchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.InchiKey' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_INCHIKEY__FIELD_NAME.field_name)

    def set_ChemicalReagentIsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ChemicalReagent.IsGHSClassified' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_ChemicalReagentIsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ChemicalReagent.IsGHSClassified' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_ChemicalReagentLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.LotNumber' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_ChemicalReagentLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.LotNumber' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_ChemicalReagentMolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'ChemicalReagent.MolecularWeight' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_ChemicalReagentMolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ChemicalReagent.MolecularWeight' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_ChemicalReagentPolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'ChemicalReagent.PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_ChemicalReagentPolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ChemicalReagent.PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_ChemicalReagentPubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalReagent.PubchemCid' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_ChemicalReagentPubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalReagent.PubchemCid' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_PUBCHEMCID__FIELD_NAME.field_name)

    def set_ChemicalReagentPurity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ChemicalReagent.Purity' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_PURITY__FIELD_NAME.field_name, value)

    def get_ChemicalReagentPurity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ChemicalReagent.Purity' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_PURITY__FIELD_NAME.field_name)

    def set_ChemicalReagentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalReagent.RecordId' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_ChemicalReagentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalReagent.RecordId' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_ChemicalReagentRegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.RegistryId' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_REGISTRYID__FIELD_NAME.field_name, value)

    def get_ChemicalReagentRegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.RegistryId' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_REGISTRYID__FIELD_NAME.field_name)

    def set_ChemicalReagentSMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.SMILES' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_SMILES__FIELD_NAME.field_name, value)

    def get_ChemicalReagentSMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.SMILES' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_SMILES__FIELD_NAME.field_name)

    def set_ChemicalReagentStereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.StereoRegHash' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_ChemicalReagentStereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.StereoRegHash' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_STEREOREGHASH__FIELD_NAME.field_name)

    def set_ChemicalReagentTotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalReagent.TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_ChemicalReagentTotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalReagent.TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_ChemicalReagentTotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalReagent.TotalHBondCount' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_ChemicalReagentTotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalReagent.TotalHBondCount' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_ChemicalReagentVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_ChemicalReagentVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_ChemicalReagentVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ChemicalReagent.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_ChemicalReagentVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ChemicalReagent.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_ChemicalReagentYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'ChemicalReagent.Yield' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_YIELD__FIELD_NAME.field_name, value)

    def get_ChemicalReagentYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ChemicalReagent.Yield' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_YIELD__FIELD_NAME.field_name)

    def set_ChemicalReagentcLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'ChemicalReagent.cLogP' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_CLOGP__FIELD_NAME.field_name, value)

    def get_ChemicalReagentcLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ChemicalReagent.cLogP' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_CLOGP__FIELD_NAME.field_name)

    def set_ChemicalReagentinchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemicalReagent.inchi' on this record model
        """
        self.set_field_value(self.CHEMICALREAGENT_EXT_INCHI__FIELD_NAME.field_name, value)

    def get_ChemicalReagentinchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemicalReagent.inchi' from this record model
        """
        return self.get_field_value(self.CHEMICALREAGENT_EXT_INCHI__FIELD_NAME.field_name)

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def set_CollectionDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'CollectionDate' on this record model
        """
        self.set_field_value(self.COLLECTIONDATE__FIELD_NAME.field_name, value)

    def get_CollectionDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CollectionDate' from this record model
        """
        return self.get_field_value(self.COLLECTIONDATE__FIELD_NAME.field_name)

    def set_CollectionDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'CollectionDateTime' on this record model
        """
        self.set_field_value(self.COLLECTIONDATETIME__FIELD_NAME.field_name, value)

    def get_CollectionDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CollectionDateTime' from this record model
        """
        return self.get_field_value(self.COLLECTIONDATETIME__FIELD_NAME.field_name)

    def set_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'Comments' on this record model
        """
        self.set_field_value(self.COMMENTS__FIELD_NAME.field_name, value)

    def get_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Comments' from this record model
        """
        return self.get_field_value(self.COMMENTS__FIELD_NAME.field_name)

    def set_CompoundCAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.CAS' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_CAS__FIELD_NAME.field_name, value)

    def get_CompoundCAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.CAS' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_CAS__FIELD_NAME.field_name)

    def set_CompoundCXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.CXSMILESHash' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_CompoundCXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.CXSMILESHash' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_CXSMILESHASH__FIELD_NAME.field_name)

    def set_CompoundCharge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Compound.Charge' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_CHARGE__FIELD_NAME.field_name, value)

    def get_CompoundCharge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Compound.Charge' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_CHARGE__FIELD_NAME.field_name)

    def set_CompoundConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.ConsumableType' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_CompoundConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.ConsumableType' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_CompoundCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.CreatedBy' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_CompoundCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.CreatedBy' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_CompoundDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'Compound.DateCreated' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_CompoundDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Compound.DateCreated' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_CompoundDensity_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.Density' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_DENSITY__FIELD_NAME.field_name, value)

    def get_CompoundDensity_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.Density' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_DENSITY__FIELD_NAME.field_name)

    def set_CompoundExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'Compound.ExactMass' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_EXACTMASS__FIELD_NAME.field_name, value)

    def get_CompoundExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Compound.ExactMass' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_EXACTMASS__FIELD_NAME.field_name)

    def set_CompoundExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Compound.ExpirationDate' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_CompoundExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Compound.ExpirationDate' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_CompoundFormula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.Formula' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_FORMULA__FIELD_NAME.field_name, value)

    def get_CompoundFormula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.Formula' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_FORMULA__FIELD_NAME.field_name)

    def set_CompoundGHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.GHSCautionCode' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_CompoundGHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.GHSCautionCode' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_CompoundGHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.GHSHazardCode' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_CompoundGHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.GHSHazardCode' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_CompoundGHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.GHSPictoCode' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_CompoundGHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.GHSPictoCode' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_GHSPICTOCODE__FIELD_NAME.field_name)

    def set_CompoundGHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.GHSSignal' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_CompoundGHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.GHSSignal' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_GHSSIGNAL__FIELD_NAME.field_name)

    def set_CompoundHasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Compound.HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_CompoundHasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Compound.HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_CompoundIUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.IUPAC' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_IUPAC__FIELD_NAME.field_name, value)

    def get_CompoundIUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.IUPAC' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_IUPAC__FIELD_NAME.field_name)

    def set_CompoundInchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.InchiKey' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_INCHIKEY__FIELD_NAME.field_name, value)

    def get_CompoundInchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.InchiKey' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_INCHIKEY__FIELD_NAME.field_name)

    def set_CompoundIsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Compound.IsGHSClassified' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_CompoundIsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Compound.IsGHSClassified' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_CompoundLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.LotNumber' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_CompoundLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.LotNumber' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_CompoundMolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'Compound.MolecularWeight' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_CompoundMolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Compound.MolecularWeight' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_CompoundPolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'Compound.PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_CompoundPolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Compound.PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_CompoundPressure_field(self, value: Optional[float]):
        """
        Set data field with field name 'Compound.Pressure' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_PRESSURE__FIELD_NAME.field_name, value)

    def get_CompoundPressure_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Compound.Pressure' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_PRESSURE__FIELD_NAME.field_name)

    def set_CompoundPubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'Compound.PubchemCid' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_CompoundPubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Compound.PubchemCid' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_PUBCHEMCID__FIELD_NAME.field_name)

    def set_CompoundPurity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Compound.Purity' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_PURITY__FIELD_NAME.field_name, value)

    def get_CompoundPurity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Compound.Purity' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_PURITY__FIELD_NAME.field_name)

    def set_CompoundRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'Compound.RecordId' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_CompoundRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Compound.RecordId' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_RECORDID__FIELD_NAME.field_name)

    def set_CompoundRegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.RegistryId' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_REGISTRYID__FIELD_NAME.field_name, value)

    def get_CompoundRegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.RegistryId' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_REGISTRYID__FIELD_NAME.field_name)

    def set_CompoundSMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.SMILES' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_SMILES__FIELD_NAME.field_name, value)

    def get_CompoundSMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.SMILES' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_SMILES__FIELD_NAME.field_name)

    def set_CompoundStereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.StereoRegHash' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_CompoundStereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.StereoRegHash' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_STEREOREGHASH__FIELD_NAME.field_name)

    def set_CompoundTemperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'Compound.Temperature' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_TEMPERATURE__FIELD_NAME.field_name, value)

    def get_CompoundTemperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Compound.Temperature' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_TEMPERATURE__FIELD_NAME.field_name)

    def set_CompoundTotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'Compound.TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_CompoundTotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Compound.TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_CompoundTotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'Compound.TotalHBondCount' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_CompoundTotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Compound.TotalHBondCount' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_CompoundVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_CompoundVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_CompoundVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Compound.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_CompoundVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Compound.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_CompoundYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Compound.Yield' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_YIELD__FIELD_NAME.field_name, value)

    def get_CompoundYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Compound.Yield' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_YIELD__FIELD_NAME.field_name)

    def set_CompoundZoBioonly_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Compound.ZoBioonly' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_ZOBIOONLY__FIELD_NAME.field_name, value)

    def get_CompoundZoBioonly_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Compound.ZoBioonly' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_ZOBIOONLY__FIELD_NAME.field_name)

    def set_CompoundcLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'Compound.cLogP' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_CLOGP__FIELD_NAME.field_name, value)

    def get_CompoundcLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Compound.cLogP' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_CLOGP__FIELD_NAME.field_name)

    def set_Compoundinchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'Compound.inchi' on this record model
        """
        self.set_field_value(self.COMPOUND_EXT_INCHI__FIELD_NAME.field_name, value)

    def get_Compoundinchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Compound.inchi' from this record model
        """
        return self.get_field_value(self.COMPOUND_EXT_INCHI__FIELD_NAME.field_name)

    def set_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Concentration' on this record model
        """
        self.set_field_value(self.CONCENTRATION__FIELD_NAME.field_name, value)

    def get_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Concentration' from this record model
        """
        return self.get_field_value(self.CONCENTRATION__FIELD_NAME.field_name)

    def set_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConcentrationUnits' on this record model
        """
        self.set_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_ContainerType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ContainerType' on this record model
        """
        self.set_field_value(self.CONTAINERTYPE__FIELD_NAME.field_name, value)

    def get_ContainerType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ContainerType' from this record model
        """
        return self.get_field_value(self.CONTAINERTYPE__FIELD_NAME.field_name)

    def set_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ControlType' on this record model
        """
        self.set_field_value(self.CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ControlType' from this record model
        """
        return self.get_field_value(self.CONTROLTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DNACreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'DNA.CreatedBy' on this record model
        """
        self.set_field_value(self.DNA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_DNACreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DNA.CreatedBy' from this record model
        """
        return self.get_field_value(self.DNA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_DNADateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'DNA.DateCreated' on this record model
        """
        self.set_field_value(self.DNA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_DNADateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DNA.DateCreated' from this record model
        """
        return self.get_field_value(self.DNA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_DNAExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'DNA.ExpirationDate' on this record model
        """
        self.set_field_value(self.DNA_EXT_EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_DNAExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DNA.ExpirationDate' from this record model
        """
        return self.get_field_value(self.DNA_EXT_EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_DNAItemId_field(self, value: Optional[str]):
        """
        Set data field with field name 'DNA.ItemId' on this record model
        """
        self.set_field_value(self.DNA_EXT_ITEMID__FIELD_NAME.field_name, value)

    def get_DNAItemId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DNA.ItemId' from this record model
        """
        return self.get_field_value(self.DNA_EXT_ITEMID__FIELD_NAME.field_name)

    def set_DNAName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DNA.Name' on this record model
        """
        self.set_field_value(self.DNA_EXT_NAME__FIELD_NAME.field_name, value)

    def get_DNAName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DNA.Name' from this record model
        """
        return self.get_field_value(self.DNA_EXT_NAME__FIELD_NAME.field_name)

    def set_DNAPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'DNA.PartNumber' on this record model
        """
        self.set_field_value(self.DNA_EXT_PARTNUMBER__FIELD_NAME.field_name, value)

    def get_DNAPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DNA.PartNumber' from this record model
        """
        return self.get_field_value(self.DNA_EXT_PARTNUMBER__FIELD_NAME.field_name)

    def set_DNARecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'DNA.RecordId' on this record model
        """
        self.set_field_value(self.DNA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_DNARecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DNA.RecordId' from this record model
        """
        return self.get_field_value(self.DNA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_DNASequenceType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DNA.SequenceType' on this record model
        """
        self.set_field_value(self.DNA_EXT_SEQUENCETYPE__FIELD_NAME.field_name, value)

    def get_DNASequenceType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DNA.SequenceType' from this record model
        """
        return self.get_field_value(self.DNA_EXT_SEQUENCETYPE__FIELD_NAME.field_name)

    def set_DNAVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'DNA.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.DNA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_DNAVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DNA.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.DNA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_DNAVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'DNA.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.DNA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_DNAVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DNA.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.DNA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateofBirth_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateofBirth' on this record model
        """
        self.set_field_value(self.DATEOFBIRTH__FIELD_NAME.field_name, value)

    def get_DateofBirth_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateofBirth' from this record model
        """
        return self.get_field_value(self.DATEOFBIRTH__FIELD_NAME.field_name)

    def set_Disease_field(self, value: Optional[str]):
        """
        Set data field with field name 'Disease' on this record model
        """
        self.set_field_value(self.DISEASE__FIELD_NAME.field_name, value)

    def get_Disease_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Disease' from this record model
        """
        return self.get_field_value(self.DISEASE__FIELD_NAME.field_name)

    def set_DiseasePathology_field(self, value: Optional[str]):
        """
        Set data field with field name 'DiseasePathology' on this record model
        """
        self.set_field_value(self.DISEASEPATHOLOGY__FIELD_NAME.field_name, value)

    def get_DiseasePathology_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DiseasePathology' from this record model
        """
        return self.get_field_value(self.DISEASEPATHOLOGY__FIELD_NAME.field_name)

    def set_DonorID_field(self, value: Optional[str]):
        """
        Set data field with field name 'DonorID' on this record model
        """
        self.set_field_value(self.DONORID__FIELD_NAME.field_name, value)

    def get_DonorID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DonorID' from this record model
        """
        return self.get_field_value(self.DONORID__FIELD_NAME.field_name)

    def set_ElnbNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ElnbNumber' on this record model
        """
        self.set_field_value(self.ELNBNUMBER__FIELD_NAME.field_name, value)

    def get_ElnbNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ElnbNumber' from this record model
        """
        return self.get_field_value(self.ELNBNUMBER__FIELD_NAME.field_name)

    def set_EnzymeConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'Enzyme.ConsumableName' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_EnzymeConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Enzyme.ConsumableName' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_CONSUMABLENAME__FIELD_NAME.field_name)

    def set_EnzymeConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'Enzyme.ConsumableType' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_EnzymeConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Enzyme.ConsumableType' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_EnzymeCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Enzyme.CreatedBy' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_EnzymeCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Enzyme.CreatedBy' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_EnzymeCuttingPattern_field(self, value: Optional[str]):
        """
        Set data field with field name 'Enzyme.CuttingPattern' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_CUTTINGPATTERN__FIELD_NAME.field_name, value)

    def get_EnzymeCuttingPattern_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Enzyme.CuttingPattern' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_CUTTINGPATTERN__FIELD_NAME.field_name)

    def set_EnzymeDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'Enzyme.DateCreated' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_EnzymeDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Enzyme.DateCreated' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_EnzymeDateOfPurchase_field(self, value: Optional[int]):
        """
        Set data field with field name 'Enzyme.DateOfPurchase' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_DATEOFPURCHASE__FIELD_NAME.field_name, value)

    def get_EnzymeDateOfPurchase_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Enzyme.DateOfPurchase' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_DATEOFPURCHASE__FIELD_NAME.field_name)

    def set_EnzymeEnzymeType_field(self, value: Optional[str]):
        """
        Set data field with field name 'Enzyme.EnzymeType' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_ENZYMETYPE__FIELD_NAME.field_name, value)

    def get_EnzymeEnzymeType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Enzyme.EnzymeType' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_ENZYMETYPE__FIELD_NAME.field_name)

    def set_EnzymeExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Enzyme.ExpirationDate' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_EnzymeExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Enzyme.ExpirationDate' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_EnzymeIsoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Enzyme.Isoschizomers' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_ISOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_EnzymeIsoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Enzyme.Isoschizomers' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_ISOSCHIZOMERS__FIELD_NAME.field_name)

    def set_EnzymeLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Enzyme.LotNumber' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_EnzymeLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Enzyme.LotNumber' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_EnzymeNeoschizomers_field(self, value: Optional[str]):
        """
        Set data field with field name 'Enzyme.Neoschizomers' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_NEOSCHIZOMERS__FIELD_NAME.field_name, value)

    def get_EnzymeNeoschizomers_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Enzyme.Neoschizomers' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_NEOSCHIZOMERS__FIELD_NAME.field_name)

    def set_EnzymePartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Enzyme.PartNumber' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_PARTNUMBER__FIELD_NAME.field_name, value)

    def get_EnzymePartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Enzyme.PartNumber' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_PARTNUMBER__FIELD_NAME.field_name)

    def set_EnzymeRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'Enzyme.RecordId' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_EnzymeRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Enzyme.RecordId' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_RECORDID__FIELD_NAME.field_name)

    def set_EnzymeVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Enzyme.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_EnzymeVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Enzyme.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_EnzymeVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Enzyme.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_EnzymeVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Enzyme.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_EnzymeVendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Enzyme.Vendor' on this record model
        """
        self.set_field_value(self.ENZYME_EXT_VENDOR__FIELD_NAME.field_name, value)

    def get_EnzymeVendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Enzyme.Vendor' from this record model
        """
        return self.get_field_value(self.ENZYME_EXT_VENDOR__FIELD_NAME.field_name)

    def set_ExemplarSampleStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleStatus' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLESTATUS__FIELD_NAME.field_name, value)

    def get_ExemplarSampleStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleStatus' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLESTATUS__FIELD_NAME.field_name)

    def set_ExemplarSampleSubtyp_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleSubtyp' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLESUBTYP__FIELD_NAME.field_name, value)

    def get_ExemplarSampleSubtyp_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleSubtyp' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLESUBTYP__FIELD_NAME.field_name)

    def set_ExemplarSampleSubtype_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleSubtype' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLESUBTYPE__FIELD_NAME.field_name, value)

    def get_ExemplarSampleSubtype_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleSubtype' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLESUBTYPE__FIELD_NAME.field_name)

    def set_ExemplarSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleType' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_ExemplarSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleType' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name)

    def set_FedExTrackingNo_field(self, value: Optional[str]):
        """
        Set data field with field name 'FedExTrackingNo' on this record model
        """
        self.set_field_value(self.FEDEXTRACKINGNO__FIELD_NAME.field_name, value)

    def get_FedExTrackingNo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FedExTrackingNo' from this record model
        """
        return self.get_field_value(self.FEDEXTRACKINGNO__FIELD_NAME.field_name)

    def set_Fermented_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Fermented' on this record model
        """
        self.set_field_value(self.FERMENTED__FIELD_NAME.field_name, value)

    def get_Fermented_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Fermented' from this record model
        """
        return self.get_field_value(self.FERMENTED__FIELD_NAME.field_name)

    def set_Flags_field(self, value: Optional[str]):
        """
        Set data field with field name 'Flags' on this record model
        """
        self.set_field_value(self.FLAGS__FIELD_NAME.field_name, value)

    def get_Flags_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Flags' from this record model
        """
        return self.get_field_value(self.FLAGS__FIELD_NAME.field_name)

    def set_FlowJoGroupSideLink_field(self, value: Optional[int]):
        """
        Set data field with field name 'FlowJoGroupSideLink' on this record model
        """
        self.set_field_value(self.FLOWJOGROUPSIDELINK__FIELD_NAME.field_name, value)

    def get_FlowJoGroupSideLink_field(self) -> Optional[int]:
        """
        Get data field value with field name 'FlowJoGroupSideLink' from this record model
        """
        return self.get_field_value(self.FLOWJOGROUPSIDELINK__FIELD_NAME.field_name)

    def set_Handling_field(self, value: Optional[str]):
        """
        Set data field with field name 'Handling' on this record model
        """
        self.set_field_value(self.HANDLING__FIELD_NAME.field_name, value)

    def get_Handling_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Handling' from this record model
        """
        return self.get_field_value(self.HANDLING__FIELD_NAME.field_name)

    def set_HistologyProtocol3AssignedSpecialStain_field(self, value: Optional[str]):
        """
        Set data field with field name 'HistologyProtocol3.AssignedSpecialStain' on this record model
        """
        self.set_field_value(self.HISTOLOGYPROTOCOL3_EXT_ASSIGNEDSPECIALSTAIN__FIELD_NAME.field_name, value)

    def get_HistologyProtocol3AssignedSpecialStain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HistologyProtocol3.AssignedSpecialStain' from this record model
        """
        return self.get_field_value(self.HISTOLOGYPROTOCOL3_EXT_ASSIGNEDSPECIALSTAIN__FIELD_NAME.field_name)

    def set_HistologyProtocol3CreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'HistologyProtocol3.CreatedBy' on this record model
        """
        self.set_field_value(self.HISTOLOGYPROTOCOL3_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_HistologyProtocol3CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HistologyProtocol3.CreatedBy' from this record model
        """
        return self.get_field_value(self.HISTOLOGYPROTOCOL3_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_HistologyProtocol3DateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'HistologyProtocol3.DateCreated' on this record model
        """
        self.set_field_value(self.HISTOLOGYPROTOCOL3_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_HistologyProtocol3DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'HistologyProtocol3.DateCreated' from this record model
        """
        return self.get_field_value(self.HISTOLOGYPROTOCOL3_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_HistologyProtocol3RecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'HistologyProtocol3.RecordId' on this record model
        """
        self.set_field_value(self.HISTOLOGYPROTOCOL3_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_HistologyProtocol3RecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'HistologyProtocol3.RecordId' from this record model
        """
        return self.get_field_value(self.HISTOLOGYPROTOCOL3_EXT_RECORDID__FIELD_NAME.field_name)

    def set_HistologyProtocol3SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'HistologyProtocol3.SampleId' on this record model
        """
        self.set_field_value(self.HISTOLOGYPROTOCOL3_EXT_SAMPLEID__FIELD_NAME.field_name, value)

    def get_HistologyProtocol3SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HistologyProtocol3.SampleId' from this record model
        """
        return self.get_field_value(self.HISTOLOGYPROTOCOL3_EXT_SAMPLEID__FIELD_NAME.field_name)

    def set_HistologyProtocol3VeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'HistologyProtocol3.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.HISTOLOGYPROTOCOL3_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_HistologyProtocol3VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HistologyProtocol3.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.HISTOLOGYPROTOCOL3_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_HistologyProtocol3VeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'HistologyProtocol3.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.HISTOLOGYPROTOCOL3_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_HistologyProtocol3VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'HistologyProtocol3.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.HISTOLOGYPROTOCOL3_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_HoldStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'HoldStatus' on this record model
        """
        self.set_field_value(self.HOLDSTATUS__FIELD_NAME.field_name, value)

    def get_HoldStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HoldStatus' from this record model
        """
        return self.get_field_value(self.HOLDSTATUS__FIELD_NAME.field_name)

    def set_IntField_field(self, value: Optional[int]):
        """
        Set data field with field name 'IntField' on this record model
        """
        self.set_field_value(self.INTFIELD__FIELD_NAME.field_name, value)

    def get_IntField_field(self) -> Optional[int]:
        """
        Get data field value with field name 'IntField' from this record model
        """
        return self.get_field_value(self.INTFIELD__FIELD_NAME.field_name)

    def set_IsControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsControl' on this record model
        """
        self.set_field_value(self.ISCONTROL__FIELD_NAME.field_name, value)

    def get_IsControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsControl' from this record model
        """
        return self.get_field_value(self.ISCONTROL__FIELD_NAME.field_name)

    def set_IsInvalid_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsInvalid' on this record model
        """
        self.set_field_value(self.ISINVALID__FIELD_NAME.field_name, value)

    def get_IsInvalid_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsInvalid' from this record model
        """
        return self.get_field_value(self.ISINVALID__FIELD_NAME.field_name)

    def set_IsPooled_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPooled' on this record model
        """
        self.set_field_value(self.ISPOOLED__FIELD_NAME.field_name, value)

    def get_IsPooled_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPooled' from this record model
        """
        return self.get_field_value(self.ISPOOLED__FIELD_NAME.field_name)

    def set_LastEditedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'LastEditedBy' on this record model
        """
        self.set_field_value(self.LASTEDITEDBY__FIELD_NAME.field_name, value)

    def get_LastEditedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LastEditedBy' from this record model
        """
        return self.get_field_value(self.LASTEDITEDBY__FIELD_NAME.field_name)

    def set_MoleculeADCConcIncubationLabeled_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.ADCConcIncubationLabeled' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_ADCCONCINCUBATIONLABELED__FIELD_NAME.field_name, value)

    def get_MoleculeADCConcIncubationLabeled_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.ADCConcIncubationLabeled' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_ADCCONCINCUBATIONLABELED__FIELD_NAME.field_name)

    def set_MoleculeADCConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.ADCConcentration' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_ADCCONCENTRATION__FIELD_NAME.field_name, value)

    def get_MoleculeADCConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.ADCConcentration' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_ADCCONCENTRATION__FIELD_NAME.field_name)

    def set_MoleculeActualYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.ActualYield' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_ACTUALYIELD__FIELD_NAME.field_name, value)

    def get_MoleculeActualYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.ActualYield' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_ACTUALYIELD__FIELD_NAME.field_name)

    def set_MoleculeBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.Barcode' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_BARCODE__FIELD_NAME.field_name, value)

    def get_MoleculeBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.Barcode' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_BARCODE__FIELD_NAME.field_name)

    def set_MoleculeCAS_NO_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.CAS_NO' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_CAS_NO__FIELD_NAME.field_name, value)

    def get_MoleculeCAS_NO_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.CAS_NO' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_CAS_NO__FIELD_NAME.field_name)

    def set_MoleculeChEBI_ID_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.ChEBI_ID' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_CHEBI_ID__FIELD_NAME.field_name, value)

    def get_MoleculeChEBI_ID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.ChEBI_ID' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_CHEBI_ID__FIELD_NAME.field_name)

    def set_MoleculeCharge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Molecule.Charge' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_CHARGE__FIELD_NAME.field_name, value)

    def get_MoleculeCharge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Molecule.Charge' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_CHARGE__FIELD_NAME.field_name)

    def set_MoleculeCompoundLocation_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.CompoundLocation' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_COMPOUNDLOCATION__FIELD_NAME.field_name, value)

    def get_MoleculeCompoundLocation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.CompoundLocation' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_COMPOUNDLOCATION__FIELD_NAME.field_name)

    def set_MoleculeConcWarhead_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.ConcWarhead' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_CONCWARHEAD__FIELD_NAME.field_name, value)

    def get_MoleculeConcWarhead_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.ConcWarhead' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_CONCWARHEAD__FIELD_NAME.field_name)

    def set_MoleculeConjugate_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.Conjugate' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_CONJUGATE__FIELD_NAME.field_name, value)

    def get_MoleculeConjugate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.Conjugate' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_CONJUGATE__FIELD_NAME.field_name)

    def set_MoleculeConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.ConsumableName' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_MoleculeConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.ConsumableName' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_CONSUMABLENAME__FIELD_NAME.field_name)

    def set_MoleculeConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.ConsumableType' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_MoleculeConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.ConsumableType' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_MoleculeCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.CreatedBy' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_MoleculeCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.CreatedBy' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_MoleculeCrudeSolvent_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.CrudeSolvent' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_CRUDESOLVENT__FIELD_NAME.field_name, value)

    def get_MoleculeCrudeSolvent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.CrudeSolvent' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_CRUDESOLVENT__FIELD_NAME.field_name)

    def set_MoleculeCrudeVolume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.CrudeVolume' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_CRUDEVOLUME__FIELD_NAME.field_name, value)

    def get_MoleculeCrudeVolume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.CrudeVolume' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_CRUDEVOLUME__FIELD_NAME.field_name)

    def set_MoleculeCrudeWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.CrudeWeight' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_CRUDEWEIGHT__FIELD_NAME.field_name, value)

    def get_MoleculeCrudeWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.CrudeWeight' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_CRUDEWEIGHT__FIELD_NAME.field_name)

    def set_MoleculeDAR_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.DAR' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_DAR__FIELD_NAME.field_name, value)

    def get_MoleculeDAR_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.DAR' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_DAR__FIELD_NAME.field_name)

    def set_MoleculeDCNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.DCNumber' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_DCNUMBER__FIELD_NAME.field_name, value)

    def get_MoleculeDCNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.DCNumber' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_DCNUMBER__FIELD_NAME.field_name)

    def set_MoleculeDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'Molecule.DateCreated' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_MoleculeDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Molecule.DateCreated' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_MoleculeDilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.DilutionFactor' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_MoleculeDilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.DilutionFactor' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_DILUTIONFACTOR__FIELD_NAME.field_name)

    def set_MoleculeExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.ExactMass' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_EXACTMASS__FIELD_NAME.field_name, value)

    def get_MoleculeExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.ExactMass' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_EXACTMASS__FIELD_NAME.field_name)

    def set_MoleculeExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Molecule.ExpirationDate' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_MoleculeExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Molecule.ExpirationDate' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_MoleculeFaSaltCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.FaSaltCoefficient' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_FASALTCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_MoleculeFaSaltCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.FaSaltCoefficient' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_FASALTCOEFFICIENT__FIELD_NAME.field_name)

    def set_MoleculeFormula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.Formula' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_FORMULA__FIELD_NAME.field_name, value)

    def get_MoleculeFormula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.Formula' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_FORMULA__FIELD_NAME.field_name)

    def set_MoleculeJchemId_field(self, value: Optional[int]):
        """
        Set data field with field name 'Molecule.JchemId' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_JCHEMID__FIELD_NAME.field_name, value)

    def get_MoleculeJchemId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Molecule.JchemId' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_JCHEMID__FIELD_NAME.field_name)

    def set_MoleculeLabLocation_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.LabLocation' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_LABLOCATION__FIELD_NAME.field_name, value)

    def get_MoleculeLabLocation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.LabLocation' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_LABLOCATION__FIELD_NAME.field_name)

    def set_MoleculeLinker_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.Linker' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_LINKER__FIELD_NAME.field_name, value)

    def get_MoleculeLinker_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.Linker' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_LINKER__FIELD_NAME.field_name)

    def set_MoleculeLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.LotNumber' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_MoleculeLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.LotNumber' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_MoleculeMolWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.MolWeight' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_MOLWEIGHT__FIELD_NAME.field_name, value)

    def get_MoleculeMolWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.MolWeight' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_MOLWEIGHT__FIELD_NAME.field_name)

    def set_MoleculeMolarMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.MolarMass' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_MOLARMASS__FIELD_NAME.field_name, value)

    def get_MoleculeMolarMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.MolarMass' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_MOLARMASS__FIELD_NAME.field_name)

    def set_MoleculeNh3SaltCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.Nh3SaltCoefficient' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_NH3SALTCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_MoleculeNh3SaltCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.Nh3SaltCoefficient' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_NH3SALTCOEFFICIENT__FIELD_NAME.field_name)

    def set_MoleculePartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.PartNumber' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_PARTNUMBER__FIELD_NAME.field_name, value)

    def get_MoleculePartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.PartNumber' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_PARTNUMBER__FIELD_NAME.field_name)

    def set_MoleculePeptideString_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.PeptideString' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_PEPTIDESTRING__FIELD_NAME.field_name, value)

    def get_MoleculePeptideString_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.PeptideString' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_PEPTIDESTRING__FIELD_NAME.field_name)

    def set_MoleculeReactionCoefficient_field(self, value: Optional[int]):
        """
        Set data field with field name 'Molecule.ReactionCoefficient' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_REACTIONCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_MoleculeReactionCoefficient_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Molecule.ReactionCoefficient' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_REACTIONCOEFFICIENT__FIELD_NAME.field_name)

    def set_MoleculeRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'Molecule.RecordId' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_MoleculeRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Molecule.RecordId' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_RECORDID__FIELD_NAME.field_name)

    def set_MoleculeRender_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.Render' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_RENDER__FIELD_NAME.field_name, value)

    def get_MoleculeRender_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.Render' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_RENDER__FIELD_NAME.field_name)

    def set_MoleculeRequestNotes_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.RequestNotes' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_REQUESTNOTES__FIELD_NAME.field_name, value)

    def get_MoleculeRequestNotes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.RequestNotes' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_REQUESTNOTES__FIELD_NAME.field_name)

    def set_MoleculeReturnFractionFormat_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.ReturnFractionFormat' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_RETURNFRACTIONFORMAT__FIELD_NAME.field_name, value)

    def get_MoleculeReturnFractionFormat_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.ReturnFractionFormat' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_RETURNFRACTIONFORMAT__FIELD_NAME.field_name)

    def set_MoleculeReturnSolConc_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.ReturnSolConc' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_RETURNSOLCONC__FIELD_NAME.field_name, value)

    def get_MoleculeReturnSolConc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.ReturnSolConc' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_RETURNSOLCONC__FIELD_NAME.field_name)

    def set_MoleculeSMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.SMILES' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_SMILES__FIELD_NAME.field_name, value)

    def get_MoleculeSMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.SMILES' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_SMILES__FIELD_NAME.field_name)

    def set_MoleculeScientistEmail_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.ScientistEmail' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_SCIENTISTEMAIL__FIELD_NAME.field_name, value)

    def get_MoleculeScientistEmail_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.ScientistEmail' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_SCIENTISTEMAIL__FIELD_NAME.field_name)

    def set_MoleculeScientistName_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.ScientistName' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_SCIENTISTNAME__FIELD_NAME.field_name, value)

    def get_MoleculeScientistName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.ScientistName' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_SCIENTISTNAME__FIELD_NAME.field_name)

    def set_MoleculeSmallMolecularInhibitor_field(self, value: Optional[int]):
        """
        Set data field with field name 'Molecule.SmallMolecularInhibitor' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_SMALLMOLECULARINHIBITOR__FIELD_NAME.field_name, value)

    def get_MoleculeSmallMolecularInhibitor_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Molecule.SmallMolecularInhibitor' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_SMALLMOLECULARINHIBITOR__FIELD_NAME.field_name)

    def set_MoleculeStereochemistry_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.Stereochemistry' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_STEREOCHEMISTRY__FIELD_NAME.field_name, value)

    def get_MoleculeStereochemistry_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.Stereochemistry' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_STEREOCHEMISTRY__FIELD_NAME.field_name)

    def set_MoleculeSubstanceName_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.SubstanceName' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_SUBSTANCENAME__FIELD_NAME.field_name, value)

    def get_MoleculeSubstanceName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.SubstanceName' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_SUBSTANCENAME__FIELD_NAME.field_name)

    def set_MoleculeSupplierName_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.SupplierName' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_SUPPLIERNAME__FIELD_NAME.field_name, value)

    def get_MoleculeSupplierName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.SupplierName' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_SUPPLIERNAME__FIELD_NAME.field_name)

    def set_MoleculeTfaSaltCoefficient_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.TfaSaltCoefficient' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_TFASALTCOEFFICIENT__FIELD_NAME.field_name, value)

    def get_MoleculeTfaSaltCoefficient_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.TfaSaltCoefficient' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_TFASALTCOEFFICIENT__FIELD_NAME.field_name)

    def set_MoleculeTheoreticalYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.TheoreticalYield' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_THEORETICALYIELD__FIELD_NAME.field_name, value)

    def get_MoleculeTheoreticalYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.TheoreticalYield' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_THEORETICALYIELD__FIELD_NAME.field_name)

    def set_MoleculeUniSubId_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.UniSubId' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_UNISUBID__FIELD_NAME.field_name, value)

    def get_MoleculeUniSubId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.UniSubId' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_UNISUBID__FIELD_NAME.field_name)

    def set_MoleculeVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Molecule.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_MoleculeVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Molecule.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_MoleculeVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Molecule.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_MoleculeVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Molecule.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_MoleculeYieldPercentage_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molecule.YieldPercentage' on this record model
        """
        self.set_field_value(self.MOLECULE_EXT_YIELDPERCENTAGE__FIELD_NAME.field_name, value)

    def get_MoleculeYieldPercentage_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molecule.YieldPercentage' from this record model
        """
        return self.get_field_value(self.MOLECULE_EXT_YIELDPERCENTAGE__FIELD_NAME.field_name)

    def set_NGSSingleTemplateProcess_field(self, value: Optional[str]):
        """
        Set data field with field name 'NGSSingleTemplateProcess' on this record model
        """
        self.set_field_value(self.NGSSINGLETEMPLATEPROCESS__FIELD_NAME.field_name, value)

    def get_NGSSingleTemplateProcess_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NGSSingleTemplateProcess' from this record model
        """
        return self.get_field_value(self.NGSSINGLETEMPLATEPROCESS__FIELD_NAME.field_name)

    def set_NewChem1CAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.CAS' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_CAS__FIELD_NAME.field_name, value)

    def get_NewChem1CAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.CAS' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_CAS__FIELD_NAME.field_name)

    def set_NewChem1Charge_field(self, value: Optional[int]):
        """
        Set data field with field name 'NewChem1.Charge' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_CHARGE__FIELD_NAME.field_name, value)

    def get_NewChem1Charge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NewChem1.Charge' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_CHARGE__FIELD_NAME.field_name)

    def set_NewChem1ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.ConsumableType' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_NewChem1ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.ConsumableType' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_NewChem1CreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.CreatedBy' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_NewChem1CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.CreatedBy' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_NewChem1DateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'NewChem1.DateCreated' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_NewChem1DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NewChem1.DateCreated' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_NewChem1ExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'NewChem1.ExactMass' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_EXACTMASS__FIELD_NAME.field_name, value)

    def get_NewChem1ExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NewChem1.ExactMass' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_EXACTMASS__FIELD_NAME.field_name)

    def set_NewChem1Formula_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.Formula' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_FORMULA__FIELD_NAME.field_name, value)

    def get_NewChem1Formula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.Formula' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_FORMULA__FIELD_NAME.field_name)

    def set_NewChem1GHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.GHSCautionCode' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_NewChem1GHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.GHSCautionCode' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_NewChem1GHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.GHSHazardCode' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_NewChem1GHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.GHSHazardCode' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_NewChem1GHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.GHSPictoCode' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_NewChem1GHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.GHSPictoCode' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_GHSPICTOCODE__FIELD_NAME.field_name)

    def set_NewChem1IUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.IUPAC' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_IUPAC__FIELD_NAME.field_name, value)

    def get_NewChem1IUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.IUPAC' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_IUPAC__FIELD_NAME.field_name)

    def set_NewChem1InchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.InchiKey' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_INCHIKEY__FIELD_NAME.field_name, value)

    def get_NewChem1InchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.InchiKey' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_INCHIKEY__FIELD_NAME.field_name)

    def set_NewChem1IsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NewChem1.IsGHSClassified' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_NewChem1IsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NewChem1.IsGHSClassified' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_NewChem1LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.LotNumber' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_NewChem1LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.LotNumber' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_NewChem1MolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'NewChem1.MolecularWeight' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_NewChem1MolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NewChem1.MolecularWeight' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_NewChem1PolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'NewChem1.PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_NewChem1PolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NewChem1.PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_NewChem1PubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'NewChem1.PubchemCid' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_NewChem1PubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NewChem1.PubchemCid' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_PUBCHEMCID__FIELD_NAME.field_name)

    def set_NewChem1Purity_field(self, value: Optional[float]):
        """
        Set data field with field name 'NewChem1.Purity' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_PURITY__FIELD_NAME.field_name, value)

    def get_NewChem1Purity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NewChem1.Purity' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_PURITY__FIELD_NAME.field_name)

    def set_NewChem1RecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'NewChem1.RecordId' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_NewChem1RecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NewChem1.RecordId' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_RECORDID__FIELD_NAME.field_name)

    def set_NewChem1RegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.RegistryId' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_REGISTRYID__FIELD_NAME.field_name, value)

    def get_NewChem1RegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.RegistryId' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_REGISTRYID__FIELD_NAME.field_name)

    def set_NewChem1SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.SMILES' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_SMILES__FIELD_NAME.field_name, value)

    def get_NewChem1SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.SMILES' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_SMILES__FIELD_NAME.field_name)

    def set_NewChem1TotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'NewChem1.TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_NewChem1TotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NewChem1.TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_NewChem1TotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'NewChem1.TotalHBondCount' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_NewChem1TotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NewChem1.TotalHBondCount' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_NewChem1VeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_NewChem1VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_NewChem1VeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'NewChem1.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_NewChem1VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NewChem1.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_NewChem1Yield_field(self, value: Optional[float]):
        """
        Set data field with field name 'NewChem1.Yield' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_YIELD__FIELD_NAME.field_name, value)

    def get_NewChem1Yield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NewChem1.Yield' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_YIELD__FIELD_NAME.field_name)

    def set_NewChem1cLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'NewChem1.cLogP' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_CLOGP__FIELD_NAME.field_name, value)

    def get_NewChem1cLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NewChem1.cLogP' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_CLOGP__FIELD_NAME.field_name)

    def set_NewChem1inchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'NewChem1.inchi' on this record model
        """
        self.set_field_value(self.NEWCHEM1_EXT_INCHI__FIELD_NAME.field_name, value)

    def get_NewChem1inchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NewChem1.inchi' from this record model
        """
        return self.get_field_value(self.NEWCHEM1_EXT_INCHI__FIELD_NAME.field_name)

    def set_NoCanTauCAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.CAS' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_CAS__FIELD_NAME.field_name, value)

    def get_NoCanTauCAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.CAS' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_CAS__FIELD_NAME.field_name)

    def set_NoCanTauCXSMILESHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.CXSMILESHash' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_CXSMILESHASH__FIELD_NAME.field_name, value)

    def get_NoCanTauCXSMILESHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.CXSMILESHash' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_CXSMILESHASH__FIELD_NAME.field_name)

    def set_NoCanTauCharge_field(self, value: Optional[int]):
        """
        Set data field with field name 'NoCanTau.Charge' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_CHARGE__FIELD_NAME.field_name, value)

    def get_NoCanTauCharge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NoCanTau.Charge' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_CHARGE__FIELD_NAME.field_name)

    def set_NoCanTauConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.ConsumableType' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_NoCanTauConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.ConsumableType' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_NoCanTauCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.CreatedBy' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_NoCanTauCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.CreatedBy' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_NoCanTauDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'NoCanTau.DateCreated' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_NoCanTauDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NoCanTau.DateCreated' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_NoCanTauExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'NoCanTau.ExactMass' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_EXACTMASS__FIELD_NAME.field_name, value)

    def get_NoCanTauExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NoCanTau.ExactMass' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_EXACTMASS__FIELD_NAME.field_name)

    def set_NoCanTauFormula_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.Formula' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_FORMULA__FIELD_NAME.field_name, value)

    def get_NoCanTauFormula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.Formula' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_FORMULA__FIELD_NAME.field_name)

    def set_NoCanTauGHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.GHSCautionCode' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_NoCanTauGHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.GHSCautionCode' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_NoCanTauGHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.GHSHazardCode' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_NoCanTauGHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.GHSHazardCode' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_NoCanTauGHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.GHSPictoCode' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_NoCanTauGHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.GHSPictoCode' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_GHSPICTOCODE__FIELD_NAME.field_name)

    def set_NoCanTauGHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.GHSSignal' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_NoCanTauGHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.GHSSignal' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_GHSSIGNAL__FIELD_NAME.field_name)

    def set_NoCanTauHasOrStereoGroup_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NoCanTau.HasOrStereoGroup' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_HASORSTEREOGROUP__FIELD_NAME.field_name, value)

    def get_NoCanTauHasOrStereoGroup_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NoCanTau.HasOrStereoGroup' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_HASORSTEREOGROUP__FIELD_NAME.field_name)

    def set_NoCanTauIUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.IUPAC' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_IUPAC__FIELD_NAME.field_name, value)

    def get_NoCanTauIUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.IUPAC' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_IUPAC__FIELD_NAME.field_name)

    def set_NoCanTauInchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.InchiKey' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_INCHIKEY__FIELD_NAME.field_name, value)

    def get_NoCanTauInchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.InchiKey' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_INCHIKEY__FIELD_NAME.field_name)

    def set_NoCanTauIsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NoCanTau.IsGHSClassified' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_NoCanTauIsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NoCanTau.IsGHSClassified' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_NoCanTauLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.LotNumber' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_NoCanTauLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.LotNumber' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_NoCanTauMolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'NoCanTau.MolecularWeight' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_NoCanTauMolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NoCanTau.MolecularWeight' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_NoCanTauPolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'NoCanTau.PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_NoCanTauPolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NoCanTau.PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_NoCanTauPubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'NoCanTau.PubchemCid' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_NoCanTauPubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NoCanTau.PubchemCid' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_PUBCHEMCID__FIELD_NAME.field_name)

    def set_NoCanTauPurity_field(self, value: Optional[float]):
        """
        Set data field with field name 'NoCanTau.Purity' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_PURITY__FIELD_NAME.field_name, value)

    def get_NoCanTauPurity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NoCanTau.Purity' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_PURITY__FIELD_NAME.field_name)

    def set_NoCanTauRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'NoCanTau.RecordId' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_NoCanTauRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NoCanTau.RecordId' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_RECORDID__FIELD_NAME.field_name)

    def set_NoCanTauRegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.RegistryId' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_REGISTRYID__FIELD_NAME.field_name, value)

    def get_NoCanTauRegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.RegistryId' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_REGISTRYID__FIELD_NAME.field_name)

    def set_NoCanTauSMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.SMILES' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_SMILES__FIELD_NAME.field_name, value)

    def get_NoCanTauSMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.SMILES' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_SMILES__FIELD_NAME.field_name)

    def set_NoCanTauStereoRegHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.StereoRegHash' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_STEREOREGHASH__FIELD_NAME.field_name, value)

    def get_NoCanTauStereoRegHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.StereoRegHash' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_STEREOREGHASH__FIELD_NAME.field_name)

    def set_NoCanTauTotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'NoCanTau.TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_NoCanTauTotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NoCanTau.TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_NoCanTauTotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'NoCanTau.TotalHBondCount' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_NoCanTauTotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NoCanTau.TotalHBondCount' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_NoCanTauVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_NoCanTauVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_NoCanTauVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'NoCanTau.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_NoCanTauVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NoCanTau.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_NoCanTauYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'NoCanTau.Yield' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_YIELD__FIELD_NAME.field_name, value)

    def get_NoCanTauYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NoCanTau.Yield' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_YIELD__FIELD_NAME.field_name)

    def set_NoCanTaucLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'NoCanTau.cLogP' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_CLOGP__FIELD_NAME.field_name, value)

    def get_NoCanTaucLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NoCanTau.cLogP' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_CLOGP__FIELD_NAME.field_name)

    def set_NoCanTauinchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'NoCanTau.inchi' on this record model
        """
        self.set_field_value(self.NOCANTAU_EXT_INCHI__FIELD_NAME.field_name, value)

    def get_NoCanTauinchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'NoCanTau.inchi' from this record model
        """
        return self.get_field_value(self.NOCANTAU_EXT_INCHI__FIELD_NAME.field_name)

    def set_ObservedCondition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ObservedCondition' on this record model
        """
        self.set_field_value(self.OBSERVEDCONDITION__FIELD_NAME.field_name, value)

    def get_ObservedCondition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ObservedCondition' from this record model
        """
        return self.get_field_value(self.OBSERVEDCONDITION__FIELD_NAME.field_name)

    def set_OligoConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'Oligo.ConsumableName' on this record model
        """
        self.set_field_value(self.OLIGO_EXT_CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_OligoConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Oligo.ConsumableName' from this record model
        """
        return self.get_field_value(self.OLIGO_EXT_CONSUMABLENAME__FIELD_NAME.field_name)

    def set_OligoConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'Oligo.ConsumableType' on this record model
        """
        self.set_field_value(self.OLIGO_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_OligoConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Oligo.ConsumableType' from this record model
        """
        return self.get_field_value(self.OLIGO_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_OligoCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Oligo.CreatedBy' on this record model
        """
        self.set_field_value(self.OLIGO_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_OligoCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Oligo.CreatedBy' from this record model
        """
        return self.get_field_value(self.OLIGO_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_OligoDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'Oligo.DateCreated' on this record model
        """
        self.set_field_value(self.OLIGO_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_OligoDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Oligo.DateCreated' from this record model
        """
        return self.get_field_value(self.OLIGO_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_OligoExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Oligo.ExpirationDate' on this record model
        """
        self.set_field_value(self.OLIGO_EXT_EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_OligoExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Oligo.ExpirationDate' from this record model
        """
        return self.get_field_value(self.OLIGO_EXT_EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_OligoHELM_field(self, value: Optional[str]):
        """
        Set data field with field name 'Oligo.HELM' on this record model
        """
        self.set_field_value(self.OLIGO_EXT_HELM__FIELD_NAME.field_name, value)

    def get_OligoHELM_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Oligo.HELM' from this record model
        """
        return self.get_field_value(self.OLIGO_EXT_HELM__FIELD_NAME.field_name)

    def set_OligoLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Oligo.LotNumber' on this record model
        """
        self.set_field_value(self.OLIGO_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_OligoLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Oligo.LotNumber' from this record model
        """
        return self.get_field_value(self.OLIGO_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_OligoPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Oligo.PartNumber' on this record model
        """
        self.set_field_value(self.OLIGO_EXT_PARTNUMBER__FIELD_NAME.field_name, value)

    def get_OligoPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Oligo.PartNumber' from this record model
        """
        return self.get_field_value(self.OLIGO_EXT_PARTNUMBER__FIELD_NAME.field_name)

    def set_OligoRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'Oligo.RecordId' on this record model
        """
        self.set_field_value(self.OLIGO_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_OligoRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Oligo.RecordId' from this record model
        """
        return self.get_field_value(self.OLIGO_EXT_RECORDID__FIELD_NAME.field_name)

    def set_OligoVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Oligo.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.OLIGO_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_OligoVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Oligo.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.OLIGO_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_OligoVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Oligo.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.OLIGO_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_OligoVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Oligo.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.OLIGO_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Organ_field(self, value: Optional[str]):
        """
        Set data field with field name 'Organ' on this record model
        """
        self.set_field_value(self.ORGAN__FIELD_NAME.field_name, value)

    def get_Organ_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Organ' from this record model
        """
        return self.get_field_value(self.ORGAN__FIELD_NAME.field_name)

    def set_Organism_field(self, value: Optional[str]):
        """
        Set data field with field name 'Organism' on this record model
        """
        self.set_field_value(self.ORGANISM__FIELD_NAME.field_name, value)

    def get_Organism_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Organism' from this record model
        """
        return self.get_field_value(self.ORGANISM__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_PatientID_field(self, value: Optional[str]):
        """
        Set data field with field name 'PatientID' on this record model
        """
        self.set_field_value(self.PATIENTID__FIELD_NAME.field_name, value)

    def get_PatientID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PatientID' from this record model
        """
        return self.get_field_value(self.PATIENTID__FIELD_NAME.field_name)

    def set_PercentRecoveries_field(self, value: Optional[float]):
        """
        Set data field with field name 'PercentRecoveries' on this record model
        """
        self.set_field_value(self.PERCENTRECOVERIES__FIELD_NAME.field_name, value)

    def get_PercentRecoveries_field(self) -> Optional[float]:
        """
        Get data field value with field name 'PercentRecoveries' from this record model
        """
        return self.get_field_value(self.PERCENTRECOVERIES__FIELD_NAME.field_name)

    def set_PicklistField_field(self, value: Optional[str]):
        """
        Set data field with field name 'PicklistField' on this record model
        """
        self.set_field_value(self.PICKLISTFIELD__FIELD_NAME.field_name, value)

    def get_PicklistField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PicklistField' from this record model
        """
        return self.get_field_value(self.PICKLISTFIELD__FIELD_NAME.field_name)

    def set_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlateId' on this record model
        """
        self.set_field_value(self.PLATEID__FIELD_NAME.field_name, value)

    def get_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlateId' from this record model
        """
        return self.get_field_value(self.PLATEID__FIELD_NAME.field_name)

    def set_PreviousExemplarStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'PreviousExemplarStatus' on this record model
        """
        self.set_field_value(self.PREVIOUSEXEMPLARSTATUS__FIELD_NAME.field_name, value)

    def get_PreviousExemplarStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PreviousExemplarStatus' from this record model
        """
        return self.get_field_value(self.PREVIOUSEXEMPLARSTATUS__FIELD_NAME.field_name)

    def set_ProteinBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Protein.Barcode' on this record model
        """
        self.set_field_value(self.PROTEIN_EXT_BARCODE__FIELD_NAME.field_name, value)

    def get_ProteinBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Protein.Barcode' from this record model
        """
        return self.get_field_value(self.PROTEIN_EXT_BARCODE__FIELD_NAME.field_name)

    def set_ProteinConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'Protein.ConsumableName' on this record model
        """
        self.set_field_value(self.PROTEIN_EXT_CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ProteinConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Protein.ConsumableName' from this record model
        """
        return self.get_field_value(self.PROTEIN_EXT_CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ProteinConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'Protein.ConsumableType' on this record model
        """
        self.set_field_value(self.PROTEIN_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ProteinConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Protein.ConsumableType' from this record model
        """
        return self.get_field_value(self.PROTEIN_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_ProteinCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Protein.CreatedBy' on this record model
        """
        self.set_field_value(self.PROTEIN_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_ProteinCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Protein.CreatedBy' from this record model
        """
        return self.get_field_value(self.PROTEIN_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_ProteinDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'Protein.DateCreated' on this record model
        """
        self.set_field_value(self.PROTEIN_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_ProteinDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Protein.DateCreated' from this record model
        """
        return self.get_field_value(self.PROTEIN_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_ProteinExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Protein.ExpirationDate' on this record model
        """
        self.set_field_value(self.PROTEIN_EXT_EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ProteinExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Protein.ExpirationDate' from this record model
        """
        return self.get_field_value(self.PROTEIN_EXT_EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_ProteinExpired_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Protein.Expired' on this record model
        """
        self.set_field_value(self.PROTEIN_EXT_EXPIRED__FIELD_NAME.field_name, value)

    def get_ProteinExpired_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Protein.Expired' from this record model
        """
        return self.get_field_value(self.PROTEIN_EXT_EXPIRED__FIELD_NAME.field_name)

    def set_ProteinLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Protein.LotNumber' on this record model
        """
        self.set_field_value(self.PROTEIN_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_ProteinLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Protein.LotNumber' from this record model
        """
        return self.get_field_value(self.PROTEIN_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_ProteinPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Protein.PartNumber' on this record model
        """
        self.set_field_value(self.PROTEIN_EXT_PARTNUMBER__FIELD_NAME.field_name, value)

    def get_ProteinPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Protein.PartNumber' from this record model
        """
        return self.get_field_value(self.PROTEIN_EXT_PARTNUMBER__FIELD_NAME.field_name)

    def set_ProteinRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'Protein.RecordId' on this record model
        """
        self.set_field_value(self.PROTEIN_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_ProteinRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Protein.RecordId' from this record model
        """
        return self.get_field_value(self.PROTEIN_EXT_RECORDID__FIELD_NAME.field_name)

    def set_ProteinStructureName_field(self, value: Optional[str]):
        """
        Set data field with field name 'Protein.StructureName' on this record model
        """
        self.set_field_value(self.PROTEIN_EXT_STRUCTURENAME__FIELD_NAME.field_name, value)

    def get_ProteinStructureName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Protein.StructureName' from this record model
        """
        return self.get_field_value(self.PROTEIN_EXT_STRUCTURENAME__FIELD_NAME.field_name)

    def set_ProteinVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Protein.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.PROTEIN_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_ProteinVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Protein.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.PROTEIN_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_ProteinVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Protein.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.PROTEIN_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_ProteinVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Protein.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.PROTEIN_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_RNAConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'RNA.ConsumableName' on this record model
        """
        self.set_field_value(self.RNA_EXT_CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_RNAConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RNA.ConsumableName' from this record model
        """
        return self.get_field_value(self.RNA_EXT_CONSUMABLENAME__FIELD_NAME.field_name)

    def set_RNAConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'RNA.ConsumableType' on this record model
        """
        self.set_field_value(self.RNA_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_RNAConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RNA.ConsumableType' from this record model
        """
        return self.get_field_value(self.RNA_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_RNACreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'RNA.CreatedBy' on this record model
        """
        self.set_field_value(self.RNA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_RNACreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RNA.CreatedBy' from this record model
        """
        return self.get_field_value(self.RNA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_RNADateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'RNA.DateCreated' on this record model
        """
        self.set_field_value(self.RNA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_RNADateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RNA.DateCreated' from this record model
        """
        return self.get_field_value(self.RNA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_RNAExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'RNA.ExpirationDate' on this record model
        """
        self.set_field_value(self.RNA_EXT_EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_RNAExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RNA.ExpirationDate' from this record model
        """
        return self.get_field_value(self.RNA_EXT_EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_RNALotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'RNA.LotNumber' on this record model
        """
        self.set_field_value(self.RNA_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_RNALotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RNA.LotNumber' from this record model
        """
        return self.get_field_value(self.RNA_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_RNARecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'RNA.RecordId' on this record model
        """
        self.set_field_value(self.RNA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_RNARecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RNA.RecordId' from this record model
        """
        return self.get_field_value(self.RNA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_RNARegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'RNA.RegistryId' on this record model
        """
        self.set_field_value(self.RNA_EXT_REGISTRYID__FIELD_NAME.field_name, value)

    def get_RNARegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RNA.RegistryId' from this record model
        """
        return self.get_field_value(self.RNA_EXT_REGISTRYID__FIELD_NAME.field_name)

    def set_RNAVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'RNA.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.RNA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_RNAVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RNA.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.RNA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_RNAVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'RNA.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.RNA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_RNAVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'RNA.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.RNA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_ReadyforRnD_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ReadyforRnD' on this record model
        """
        self.set_field_value(self.READYFORRND__FIELD_NAME.field_name, value)

    def get_ReadyforRnD_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ReadyforRnD' from this record model
        """
        return self.get_field_value(self.READYFORRND__FIELD_NAME.field_name)

    def set_Robs3rdRegCAS_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.CAS' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_CAS__FIELD_NAME.field_name, value)

    def get_Robs3rdRegCAS_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.CAS' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_CAS__FIELD_NAME.field_name)

    def set_Robs3rdRegCharge_field(self, value: Optional[int]):
        """
        Set data field with field name 'Robs3rdReg.Charge' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_CHARGE__FIELD_NAME.field_name, value)

    def get_Robs3rdRegCharge_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Robs3rdReg.Charge' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_CHARGE__FIELD_NAME.field_name)

    def set_Robs3rdRegConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.ConsumableType' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_Robs3rdRegConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.ConsumableType' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_Robs3rdRegCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.CreatedBy' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_Robs3rdRegCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.CreatedBy' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_Robs3rdRegDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'Robs3rdReg.DateCreated' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_Robs3rdRegDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Robs3rdReg.DateCreated' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_Robs3rdRegExactMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'Robs3rdReg.ExactMass' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_EXACTMASS__FIELD_NAME.field_name, value)

    def get_Robs3rdRegExactMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Robs3rdReg.ExactMass' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_EXACTMASS__FIELD_NAME.field_name)

    def set_Robs3rdRegFormula_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.Formula' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_FORMULA__FIELD_NAME.field_name, value)

    def get_Robs3rdRegFormula_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.Formula' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_FORMULA__FIELD_NAME.field_name)

    def set_Robs3rdRegGHSCautionCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.GHSCautionCode' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_GHSCAUTIONCODE__FIELD_NAME.field_name, value)

    def get_Robs3rdRegGHSCautionCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.GHSCautionCode' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_GHSCAUTIONCODE__FIELD_NAME.field_name)

    def set_Robs3rdRegGHSHazardCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.GHSHazardCode' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_GHSHAZARDCODE__FIELD_NAME.field_name, value)

    def get_Robs3rdRegGHSHazardCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.GHSHazardCode' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_GHSHAZARDCODE__FIELD_NAME.field_name)

    def set_Robs3rdRegGHSPictoCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.GHSPictoCode' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_GHSPICTOCODE__FIELD_NAME.field_name, value)

    def get_Robs3rdRegGHSPictoCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.GHSPictoCode' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_GHSPICTOCODE__FIELD_NAME.field_name)

    def set_Robs3rdRegGHSSignal_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.GHSSignal' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_GHSSIGNAL__FIELD_NAME.field_name, value)

    def get_Robs3rdRegGHSSignal_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.GHSSignal' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_GHSSIGNAL__FIELD_NAME.field_name)

    def set_Robs3rdRegIUPAC_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.IUPAC' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_IUPAC__FIELD_NAME.field_name, value)

    def get_Robs3rdRegIUPAC_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.IUPAC' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_IUPAC__FIELD_NAME.field_name)

    def set_Robs3rdRegInchiKey_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.InchiKey' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_INCHIKEY__FIELD_NAME.field_name, value)

    def get_Robs3rdRegInchiKey_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.InchiKey' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_INCHIKEY__FIELD_NAME.field_name)

    def set_Robs3rdRegIsGHSClassified_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Robs3rdReg.IsGHSClassified' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_ISGHSCLASSIFIED__FIELD_NAME.field_name, value)

    def get_Robs3rdRegIsGHSClassified_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Robs3rdReg.IsGHSClassified' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_ISGHSCLASSIFIED__FIELD_NAME.field_name)

    def set_Robs3rdRegLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.LotNumber' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_Robs3rdRegLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.LotNumber' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_Robs3rdRegMolecularWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'Robs3rdReg.MolecularWeight' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_MOLECULARWEIGHT__FIELD_NAME.field_name, value)

    def get_Robs3rdRegMolecularWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Robs3rdReg.MolecularWeight' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_MOLECULARWEIGHT__FIELD_NAME.field_name)

    def set_Robs3rdRegPolarSurfaceArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'Robs3rdReg.PolarSurfaceArea' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_POLARSURFACEAREA__FIELD_NAME.field_name, value)

    def get_Robs3rdRegPolarSurfaceArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Robs3rdReg.PolarSurfaceArea' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_POLARSURFACEAREA__FIELD_NAME.field_name)

    def set_Robs3rdRegPubchemCid_field(self, value: Optional[int]):
        """
        Set data field with field name 'Robs3rdReg.PubchemCid' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_PUBCHEMCID__FIELD_NAME.field_name, value)

    def get_Robs3rdRegPubchemCid_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Robs3rdReg.PubchemCid' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_PUBCHEMCID__FIELD_NAME.field_name)

    def set_Robs3rdRegPurity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Robs3rdReg.Purity' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_PURITY__FIELD_NAME.field_name, value)

    def get_Robs3rdRegPurity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Robs3rdReg.Purity' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_PURITY__FIELD_NAME.field_name)

    def set_Robs3rdRegRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'Robs3rdReg.RecordId' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_Robs3rdRegRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Robs3rdReg.RecordId' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_RECORDID__FIELD_NAME.field_name)

    def set_Robs3rdRegRegistryId_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.RegistryId' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_REGISTRYID__FIELD_NAME.field_name, value)

    def get_Robs3rdRegRegistryId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.RegistryId' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_REGISTRYID__FIELD_NAME.field_name)

    def set_Robs3rdRegSMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.SMILES' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_SMILES__FIELD_NAME.field_name, value)

    def get_Robs3rdRegSMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.SMILES' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_SMILES__FIELD_NAME.field_name)

    def set_Robs3rdRegTotalHBondAcceptors_field(self, value: Optional[int]):
        """
        Set data field with field name 'Robs3rdReg.TotalHBondAcceptors' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_TOTALHBONDACCEPTORS__FIELD_NAME.field_name, value)

    def get_Robs3rdRegTotalHBondAcceptors_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Robs3rdReg.TotalHBondAcceptors' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_TOTALHBONDACCEPTORS__FIELD_NAME.field_name)

    def set_Robs3rdRegTotalHBondCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'Robs3rdReg.TotalHBondCount' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_TOTALHBONDCOUNT__FIELD_NAME.field_name, value)

    def get_Robs3rdRegTotalHBondCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Robs3rdReg.TotalHBondCount' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_TOTALHBONDCOUNT__FIELD_NAME.field_name)

    def set_Robs3rdRegVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_Robs3rdRegVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_Robs3rdRegVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Robs3rdReg.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_Robs3rdRegVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Robs3rdReg.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Robs3rdRegYield_field(self, value: Optional[float]):
        """
        Set data field with field name 'Robs3rdReg.Yield' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_YIELD__FIELD_NAME.field_name, value)

    def get_Robs3rdRegYield_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Robs3rdReg.Yield' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_YIELD__FIELD_NAME.field_name)

    def set_Robs3rdRegcLogP_field(self, value: Optional[float]):
        """
        Set data field with field name 'Robs3rdReg.cLogP' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_CLOGP__FIELD_NAME.field_name, value)

    def get_Robs3rdRegcLogP_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Robs3rdReg.cLogP' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_CLOGP__FIELD_NAME.field_name)

    def set_Robs3rdReginchi_field(self, value: Optional[str]):
        """
        Set data field with field name 'Robs3rdReg.inchi' on this record model
        """
        self.set_field_value(self.ROBS3RDREG_EXT_INCHI__FIELD_NAME.field_name, value)

    def get_Robs3rdReginchi_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Robs3rdReg.inchi' from this record model
        """
        return self.get_field_value(self.ROBS3RDREG_EXT_INCHI__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_SacrificedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SacrificedDate' on this record model
        """
        self.set_field_value(self.SACRIFICEDDATE__FIELD_NAME.field_name, value)

    def get_SacrificedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SacrificedDate' from this record model
        """
        return self.get_field_value(self.SACRIFICEDDATE__FIELD_NAME.field_name)

    def set_SampleExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleExpirationDate' on this record model
        """
        self.set_field_value(self.SAMPLEEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_SampleExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleExpirationDate' from this record model
        """
        return self.get_field_value(self.SAMPLEEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SapioSingleTemplateProcess_field(self, value: Optional[str]):
        """
        Set data field with field name 'SapioSingleTemplateProcess' on this record model
        """
        self.set_field_value(self.SAPIOSINGLETEMPLATEPROCESS__FIELD_NAME.field_name, value)

    def get_SapioSingleTemplateProcess_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SapioSingleTemplateProcess' from this record model
        """
        return self.get_field_value(self.SAPIOSINGLETEMPLATEPROCESS__FIELD_NAME.field_name)

    def set_Sex_field(self, value: Optional[str]):
        """
        Set data field with field name 'Sex' on this record model
        """
        self.set_field_value(self.SEX__FIELD_NAME.field_name, value)

    def get_Sex_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Sex' from this record model
        """
        return self.get_field_value(self.SEX__FIELD_NAME.field_name)

    def set_StainConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'Stain.ConsumableName' on this record model
        """
        self.set_field_value(self.STAIN_EXT_CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_StainConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Stain.ConsumableName' from this record model
        """
        return self.get_field_value(self.STAIN_EXT_CONSUMABLENAME__FIELD_NAME.field_name)

    def set_StainConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'Stain.ConsumableType' on this record model
        """
        self.set_field_value(self.STAIN_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_StainConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Stain.ConsumableType' from this record model
        """
        return self.get_field_value(self.STAIN_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_StainCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Stain.CreatedBy' on this record model
        """
        self.set_field_value(self.STAIN_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_StainCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Stain.CreatedBy' from this record model
        """
        return self.get_field_value(self.STAIN_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_StainDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'Stain.DateCreated' on this record model
        """
        self.set_field_value(self.STAIN_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_StainDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Stain.DateCreated' from this record model
        """
        return self.get_field_value(self.STAIN_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_StainExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Stain.ExpirationDate' on this record model
        """
        self.set_field_value(self.STAIN_EXT_EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_StainExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Stain.ExpirationDate' from this record model
        """
        return self.get_field_value(self.STAIN_EXT_EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_StainLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Stain.LotNumber' on this record model
        """
        self.set_field_value(self.STAIN_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_StainLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Stain.LotNumber' from this record model
        """
        return self.get_field_value(self.STAIN_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_StainPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Stain.PartNumber' on this record model
        """
        self.set_field_value(self.STAIN_EXT_PARTNUMBER__FIELD_NAME.field_name, value)

    def get_StainPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Stain.PartNumber' from this record model
        """
        return self.get_field_value(self.STAIN_EXT_PARTNUMBER__FIELD_NAME.field_name)

    def set_StainProtocolNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Stain.ProtocolNumber' on this record model
        """
        self.set_field_value(self.STAIN_EXT_PROTOCOLNUMBER__FIELD_NAME.field_name, value)

    def get_StainProtocolNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Stain.ProtocolNumber' from this record model
        """
        return self.get_field_value(self.STAIN_EXT_PROTOCOLNUMBER__FIELD_NAME.field_name)

    def set_StainRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'Stain.RecordId' on this record model
        """
        self.set_field_value(self.STAIN_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_StainRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Stain.RecordId' from this record model
        """
        return self.get_field_value(self.STAIN_EXT_RECORDID__FIELD_NAME.field_name)

    def set_StainVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Stain.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.STAIN_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_StainVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Stain.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.STAIN_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_StainVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Stain.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.STAIN_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_StainVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Stain.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.STAIN_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_StaticDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StaticDate' on this record model
        """
        self.set_field_value(self.STATICDATE__FIELD_NAME.field_name, value)

    def get_StaticDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StaticDate' from this record model
        """
        return self.get_field_value(self.STATICDATE__FIELD_NAME.field_name)

    def set_StorageLocationBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageLocationBarcode' on this record model
        """
        self.set_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name, value)

    def get_StorageLocationBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageLocationBarcode' from this record model
        """
        return self.get_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def set_StrainCi95Bounds_field(self, value: Optional[float]):
        """
        Set data field with field name 'Strain.Ci95Bounds' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_CI95BOUNDS__FIELD_NAME.field_name, value)

    def get_StrainCi95Bounds_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Strain.Ci95Bounds' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_CI95BOUNDS__FIELD_NAME.field_name)

    def set_StrainConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'Strain.ConsumableName' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_StrainConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Strain.ConsumableName' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_CONSUMABLENAME__FIELD_NAME.field_name)

    def set_StrainConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'Strain.ConsumableType' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_StrainConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Strain.ConsumableType' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_StrainCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Strain.CreatedBy' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_StrainCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Strain.CreatedBy' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_StrainDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'Strain.DateCreated' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_StrainDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Strain.DateCreated' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_StrainExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Strain.ExpirationDate' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_StrainExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Strain.ExpirationDate' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_StrainLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Strain.LotNumber' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_StrainLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Strain.LotNumber' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_StrainPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'Strain.PartNumber' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_PARTNUMBER__FIELD_NAME.field_name, value)

    def get_StrainPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Strain.PartNumber' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_PARTNUMBER__FIELD_NAME.field_name)

    def set_StrainRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'Strain.RecordId' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_StrainRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Strain.RecordId' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_RECORDID__FIELD_NAME.field_name)

    def set_StrainSampleMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'Strain.SampleMean' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_SAMPLEMEAN__FIELD_NAME.field_name, value)

    def get_StrainSampleMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Strain.SampleMean' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_SAMPLEMEAN__FIELD_NAME.field_name)

    def set_StrainSampleNormalizedMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'Strain.SampleNormalizedMean' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_SAMPLENORMALIZEDMEAN__FIELD_NAME.field_name, value)

    def get_StrainSampleNormalizedMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Strain.SampleNormalizedMean' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_SAMPLENORMALIZEDMEAN__FIELD_NAME.field_name)

    def set_StrainSampleStd_field(self, value: Optional[float]):
        """
        Set data field with field name 'Strain.SampleStd' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_SAMPLESTD__FIELD_NAME.field_name, value)

    def get_StrainSampleStd_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Strain.SampleStd' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_SAMPLESTD__FIELD_NAME.field_name)

    def set_StrainStandardError_field(self, value: Optional[float]):
        """
        Set data field with field name 'Strain.StandardError' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_STANDARDERROR__FIELD_NAME.field_name, value)

    def get_StrainStandardError_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Strain.StandardError' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_STANDARDERROR__FIELD_NAME.field_name)

    def set_StrainStrainDetails_field(self, value: Optional[str]):
        """
        Set data field with field name 'Strain.StrainDetails' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_STRAINDETAILS__FIELD_NAME.field_name, value)

    def get_StrainStrainDetails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Strain.StrainDetails' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_STRAINDETAILS__FIELD_NAME.field_name)

    def set_StrainVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Strain.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_StrainVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Strain.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_StrainVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Strain.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.STRAIN_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_StrainVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Strain.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.STRAIN_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_StrainDetailsCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainDetails.CreatedBy' on this record model
        """
        self.set_field_value(self.STRAINDETAILS_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_StrainDetailsCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainDetails.CreatedBy' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_StrainDetailsDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'StrainDetails.DateCreated' on this record model
        """
        self.set_field_value(self.STRAINDETAILS_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_StrainDetailsDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StrainDetails.DateCreated' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_StrainDetailsPlasmidLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainDetails.PlasmidLotNumber' on this record model
        """
        self.set_field_value(self.STRAINDETAILS_EXT_PLASMIDLOTNUMBER__FIELD_NAME.field_name, value)

    def get_StrainDetailsPlasmidLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainDetails.PlasmidLotNumber' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS_EXT_PLASMIDLOTNUMBER__FIELD_NAME.field_name)

    def set_StrainDetailsPlasmidName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainDetails.PlasmidName' on this record model
        """
        self.set_field_value(self.STRAINDETAILS_EXT_PLASMIDNAME__FIELD_NAME.field_name, value)

    def get_StrainDetailsPlasmidName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainDetails.PlasmidName' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS_EXT_PLASMIDNAME__FIELD_NAME.field_name)

    def set_StrainDetailsPlasmidSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainDetails.PlasmidSequence' on this record model
        """
        self.set_field_value(self.STRAINDETAILS_EXT_PLASMIDSEQUENCE__FIELD_NAME.field_name, value)

    def get_StrainDetailsPlasmidSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainDetails.PlasmidSequence' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS_EXT_PLASMIDSEQUENCE__FIELD_NAME.field_name)

    def set_StrainDetailsRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'StrainDetails.RecordId' on this record model
        """
        self.set_field_value(self.STRAINDETAILS_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_StrainDetailsRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StrainDetails.RecordId' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS_EXT_RECORDID__FIELD_NAME.field_name)

    def set_StrainDetailsStrainLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainDetails.StrainLotNumber' on this record model
        """
        self.set_field_value(self.STRAINDETAILS_EXT_STRAINLOTNUMBER__FIELD_NAME.field_name, value)

    def get_StrainDetailsStrainLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainDetails.StrainLotNumber' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS_EXT_STRAINLOTNUMBER__FIELD_NAME.field_name)

    def set_StrainDetailsStrainName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainDetails.StrainName' on this record model
        """
        self.set_field_value(self.STRAINDETAILS_EXT_STRAINNAME__FIELD_NAME.field_name, value)

    def get_StrainDetailsStrainName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainDetails.StrainName' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS_EXT_STRAINNAME__FIELD_NAME.field_name)

    def set_StrainDetailsStrainPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainDetails.StrainPartNumber' on this record model
        """
        self.set_field_value(self.STRAINDETAILS_EXT_STRAINPARTNUMBER__FIELD_NAME.field_name, value)

    def get_StrainDetailsStrainPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainDetails.StrainPartNumber' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS_EXT_STRAINPARTNUMBER__FIELD_NAME.field_name)

    def set_StrainDetailsVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainDetails.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.STRAINDETAILS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_StrainDetailsVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainDetails.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_StrainDetailsVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StrainDetails.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.STRAINDETAILS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_StrainDetailsVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StrainDetails.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_StrainHit_field(self, value: Optional[bool]):
        """
        Set data field with field name 'StrainHit' on this record model
        """
        self.set_field_value(self.STRAINHIT__FIELD_NAME.field_name, value)

    def get_StrainHit_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'StrainHit' from this record model
        """
        return self.get_field_value(self.STRAINHIT__FIELD_NAME.field_name)

    def set_StudySamplingId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudySamplingId' on this record model
        """
        self.set_field_value(self.STUDYSAMPLINGID__FIELD_NAME.field_name, value)

    def get_StudySamplingId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudySamplingId' from this record model
        """
        return self.get_field_value(self.STUDYSAMPLINGID__FIELD_NAME.field_name)

    def set_TatProgressStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'TatProgressStatus' on this record model
        """
        self.set_field_value(self.TATPROGRESSSTATUS__FIELD_NAME.field_name, value)

    def get_TatProgressStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TatProgressStatus' from this record model
        """
        return self.get_field_value(self.TATPROGRESSSTATUS__FIELD_NAME.field_name)

    def set_TestConcatField_field(self, value: Optional[str]):
        """
        Set data field with field name 'TestConcatField' on this record model
        """
        self.set_field_value(self.TESTCONCATFIELD__FIELD_NAME.field_name, value)

    def get_TestConcatField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TestConcatField' from this record model
        """
        return self.get_field_value(self.TESTCONCATFIELD__FIELD_NAME.field_name)

    def set_TestLastField_field(self, value: Optional[str]):
        """
        Set data field with field name 'TestLastField' on this record model
        """
        self.set_field_value(self.TESTLASTFIELD__FIELD_NAME.field_name, value)

    def get_TestLastField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TestLastField' from this record model
        """
        return self.get_field_value(self.TESTLASTFIELD__FIELD_NAME.field_name)

    def set_TimePoint_field(self, value: Optional[float]):
        """
        Set data field with field name 'TimePoint' on this record model
        """
        self.set_field_value(self.TIMEPOINT__FIELD_NAME.field_name, value)

    def get_TimePoint_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TimePoint' from this record model
        """
        return self.get_field_value(self.TIMEPOINT__FIELD_NAME.field_name)

    def set_Tissue_field(self, value: Optional[str]):
        """
        Set data field with field name 'Tissue' on this record model
        """
        self.set_field_value(self.TISSUE__FIELD_NAME.field_name, value)

    def get_Tissue_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Tissue' from this record model
        """
        return self.get_field_value(self.TISSUE__FIELD_NAME.field_name)

    def set_TissueSectionsPerSlide_field(self, value: Optional[int]):
        """
        Set data field with field name 'TissueSectionsPerSlide' on this record model
        """
        self.set_field_value(self.TISSUESECTIONSPERSLIDE__FIELD_NAME.field_name, value)

    def get_TissueSectionsPerSlide_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TissueSectionsPerSlide' from this record model
        """
        return self.get_field_value(self.TISSUESECTIONSPERSLIDE__FIELD_NAME.field_name)

    def set_TotalMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalMass' on this record model
        """
        self.set_field_value(self.TOTALMASS__FIELD_NAME.field_name, value)

    def get_TotalMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalMass' from this record model
        """
        return self.get_field_value(self.TOTALMASS__FIELD_NAME.field_name)

    def set_TubeBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'TubeBarcode' on this record model
        """
        self.set_field_value(self.TUBEBARCODE__FIELD_NAME.field_name, value)

    def get_TubeBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TubeBarcode' from this record model
        """
        return self.get_field_value(self.TUBEBARCODE__FIELD_NAME.field_name)

    def set_UrgentRequest_field(self, value: Optional[str]):
        """
        Set data field with field name 'UrgentRequest' on this record model
        """
        self.set_field_value(self.URGENTREQUEST__FIELD_NAME.field_name, value)

    def get_UrgentRequest_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UrgentRequest' from this record model
        """
        return self.get_field_value(self.URGENTREQUEST__FIELD_NAME.field_name)

    def set_Variant_field(self, value: Optional[str]):
        """
        Set data field with field name 'Variant' on this record model
        """
        self.set_field_value(self.VARIANT__FIELD_NAME.field_name, value)

    def get_Variant_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Variant' from this record model
        """
        return self.get_field_value(self.VARIANT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_ViralVectorConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViralVector.ConsumableName' on this record model
        """
        self.set_field_value(self.VIRALVECTOR_EXT_CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ViralVectorConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViralVector.ConsumableName' from this record model
        """
        return self.get_field_value(self.VIRALVECTOR_EXT_CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ViralVectorConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViralVector.ConsumableType' on this record model
        """
        self.set_field_value(self.VIRALVECTOR_EXT_CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ViralVectorConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViralVector.ConsumableType' from this record model
        """
        return self.get_field_value(self.VIRALVECTOR_EXT_CONSUMABLETYPE__FIELD_NAME.field_name)

    def set_ViralVectorCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViralVector.CreatedBy' on this record model
        """
        self.set_field_value(self.VIRALVECTOR_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_ViralVectorCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViralVector.CreatedBy' from this record model
        """
        return self.get_field_value(self.VIRALVECTOR_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_ViralVectorDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViralVector.DateCreated' on this record model
        """
        self.set_field_value(self.VIRALVECTOR_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_ViralVectorDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViralVector.DateCreated' from this record model
        """
        return self.get_field_value(self.VIRALVECTOR_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_ViralVectorExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViralVector.ExpirationDate' on this record model
        """
        self.set_field_value(self.VIRALVECTOR_EXT_EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ViralVectorExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViralVector.ExpirationDate' from this record model
        """
        return self.get_field_value(self.VIRALVECTOR_EXT_EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_ViralVectorLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViralVector.LotNumber' on this record model
        """
        self.set_field_value(self.VIRALVECTOR_EXT_LOTNUMBER__FIELD_NAME.field_name, value)

    def get_ViralVectorLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViralVector.LotNumber' from this record model
        """
        return self.get_field_value(self.VIRALVECTOR_EXT_LOTNUMBER__FIELD_NAME.field_name)

    def set_ViralVectorORF_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViralVector.ORF' on this record model
        """
        self.set_field_value(self.VIRALVECTOR_EXT_ORF__FIELD_NAME.field_name, value)

    def get_ViralVectorORF_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViralVector.ORF' from this record model
        """
        return self.get_field_value(self.VIRALVECTOR_EXT_ORF__FIELD_NAME.field_name)

    def set_ViralVectorPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViralVector.PartNumber' on this record model
        """
        self.set_field_value(self.VIRALVECTOR_EXT_PARTNUMBER__FIELD_NAME.field_name, value)

    def get_ViralVectorPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViralVector.PartNumber' from this record model
        """
        return self.get_field_value(self.VIRALVECTOR_EXT_PARTNUMBER__FIELD_NAME.field_name)

    def set_ViralVectorRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViralVector.RecordId' on this record model
        """
        self.set_field_value(self.VIRALVECTOR_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_ViralVectorRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViralVector.RecordId' from this record model
        """
        return self.get_field_value(self.VIRALVECTOR_EXT_RECORDID__FIELD_NAME.field_name)

    def set_ViralVectorVectorSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViralVector.VectorSequence' on this record model
        """
        self.set_field_value(self.VIRALVECTOR_EXT_VECTORSEQUENCE__FIELD_NAME.field_name, value)

    def get_ViralVectorVectorSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViralVector.VectorSequence' from this record model
        """
        return self.get_field_value(self.VIRALVECTOR_EXT_VECTORSEQUENCE__FIELD_NAME.field_name)

    def set_ViralVectorVectorType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViralVector.VectorType' on this record model
        """
        self.set_field_value(self.VIRALVECTOR_EXT_VECTORTYPE__FIELD_NAME.field_name, value)

    def get_ViralVectorVectorType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViralVector.VectorType' from this record model
        """
        return self.get_field_value(self.VIRALVECTOR_EXT_VECTORTYPE__FIELD_NAME.field_name)

    def set_ViralVectorVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ViralVector.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.VIRALVECTOR_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_ViralVectorVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ViralVector.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VIRALVECTOR_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_ViralVectorVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ViralVector.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.VIRALVECTOR_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_ViralVectorVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ViralVector.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VIRALVECTOR_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Volume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Volume' on this record model
        """
        self.set_field_value(self.VOLUME__FIELD_NAME.field_name, value)

    def get_Volume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Volume' from this record model
        """
        return self.get_field_value(self.VOLUME__FIELD_NAME.field_name)

    def set_VolumeUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'VolumeUnits' on this record model
        """
        self.set_field_value(self.VOLUMEUNITS__FIELD_NAME.field_name, value)

    def get_VolumeUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VolumeUnits' from this record model
        """
        return self.get_field_value(self.VOLUMEUNITS__FIELD_NAME.field_name)


class SampleEventModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SampleEvent
    Data Type Display Name: Sample Event (Sample Events)
    Fields: Description, CreatedBy, DataRecordName, EventType, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'SampleEvent'
    DISPLAY_NAME: Final[str] = "Sample Event"
    PLURAL_DISPLAY_NAME: Final[str] = "Sample Events"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    EVENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("EventType", FieldType.PICKLIST, display_name="Event Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_EventType_field(self, value: Optional[str]):
        """
        Set data field with field name 'EventType' on this record model
        """
        self.set_field_value(self.EVENTTYPE__FIELD_NAME.field_name, value)

    def get_EventType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EventType' from this record model
        """
        return self.get_field_value(self.EVENTTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SampleImporterMappingModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SampleImporterMapping
    Data Type Display Name: Sample Importer Mapping (Sample Importer Mappings)
    Fields: MappingGroup, MappingOrder, CreatedBy, DateCreated, DataRecordName, DataField, DisplayName, VeloxLastModifiedDate, VeloxLastModifiedBy, DataType, MappingName
    """
    DATA_TYPE_NAME: Final[str] = 'SampleImporterMapping'
    DISPLAY_NAME: Final[str] = "Sample Importer Mapping"
    PLURAL_DISPLAY_NAME: Final[str] = "Sample Importer Mappings"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATAFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("DataField", FieldType.SELECTION, display_name="Data Field")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DataType", FieldType.SELECTION, display_name="Data Type")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DISPLAYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DisplayName", FieldType.STRING, display_name="Data Field Display Name")
    MAPPINGGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("MappingGroup", FieldType.STRING, display_name="Mapping Group")
    MAPPINGNAME__FIELD_NAME: Final[WrapperField] = WrapperField("MappingName", FieldType.STRING, display_name="Mapping Name")
    MAPPINGORDER__FIELD_NAME: Final[WrapperField] = WrapperField("MappingOrder", FieldType.SHORT, display_name="Mapping Group Order")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataField_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataField' on this record model
        """
        self.set_field_value(self.DATAFIELD__FIELD_NAME.field_name, value)

    def get_DataField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataField' from this record model
        """
        return self.get_field_value(self.DATAFIELD__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DisplayName' on this record model
        """
        self.set_field_value(self.DISPLAYNAME__FIELD_NAME.field_name, value)

    def get_DisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DisplayName' from this record model
        """
        return self.get_field_value(self.DISPLAYNAME__FIELD_NAME.field_name)

    def set_MappingGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingGroup' on this record model
        """
        self.set_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name, value)

    def get_MappingGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingGroup' from this record model
        """
        return self.get_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name)

    def set_MappingName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingName' on this record model
        """
        self.set_field_value(self.MAPPINGNAME__FIELD_NAME.field_name, value)

    def get_MappingName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingName' from this record model
        """
        return self.get_field_value(self.MAPPINGNAME__FIELD_NAME.field_name)

    def set_MappingOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'MappingOrder' on this record model
        """
        self.set_field_value(self.MAPPINGORDER__FIELD_NAME.field_name, value)

    def get_MappingOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MappingOrder' from this record model
        """
        return self.get_field_value(self.MAPPINGORDER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SampleImporterMappingConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SampleImporterMappingConfig
    Data Type Display Name: Sample Importer Mapping Configuration (Sample Importer Mapping Configurations)
    Fields: MappingGroup, MappingOrder, CreatedBy, DateCreated, HandlePlateManifest, DataRecordName, HandlePools, HandleSampleManifest, HandleLibraries, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'SampleImporterMappingConfig'
    DISPLAY_NAME: Final[str] = "Sample Importer Mapping Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Sample Importer Mapping Configurations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    HANDLELIBRARIES__FIELD_NAME: Final[WrapperField] = WrapperField("HandleLibraries", FieldType.BOOLEAN, display_name="Handle Libraries")
    HANDLEPLATEMANIFEST__FIELD_NAME: Final[WrapperField] = WrapperField("HandlePlateManifest", FieldType.BOOLEAN, display_name="Handle Plate Manifest")
    HANDLEPOOLS__FIELD_NAME: Final[WrapperField] = WrapperField("HandlePools", FieldType.BOOLEAN, display_name="Handle Pools")
    HANDLESAMPLEMANIFEST__FIELD_NAME: Final[WrapperField] = WrapperField("HandleSampleManifest", FieldType.BOOLEAN, display_name="Handle Sample Manifest")
    MAPPINGGROUP__FIELD_NAME: Final[WrapperField] = WrapperField("MappingGroup", FieldType.STRING, display_name="Mapping Group")
    MAPPINGORDER__FIELD_NAME: Final[WrapperField] = WrapperField("MappingOrder", FieldType.SHORT, display_name="Mapping Group Order")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HandleLibraries_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HandleLibraries' on this record model
        """
        self.set_field_value(self.HANDLELIBRARIES__FIELD_NAME.field_name, value)

    def get_HandleLibraries_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HandleLibraries' from this record model
        """
        return self.get_field_value(self.HANDLELIBRARIES__FIELD_NAME.field_name)

    def set_HandlePlateManifest_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HandlePlateManifest' on this record model
        """
        self.set_field_value(self.HANDLEPLATEMANIFEST__FIELD_NAME.field_name, value)

    def get_HandlePlateManifest_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HandlePlateManifest' from this record model
        """
        return self.get_field_value(self.HANDLEPLATEMANIFEST__FIELD_NAME.field_name)

    def set_HandlePools_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HandlePools' on this record model
        """
        self.set_field_value(self.HANDLEPOOLS__FIELD_NAME.field_name, value)

    def get_HandlePools_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HandlePools' from this record model
        """
        return self.get_field_value(self.HANDLEPOOLS__FIELD_NAME.field_name)

    def set_HandleSampleManifest_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HandleSampleManifest' on this record model
        """
        self.set_field_value(self.HANDLESAMPLEMANIFEST__FIELD_NAME.field_name, value)

    def get_HandleSampleManifest_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HandleSampleManifest' from this record model
        """
        return self.get_field_value(self.HANDLESAMPLEMANIFEST__FIELD_NAME.field_name)

    def set_MappingGroup_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingGroup' on this record model
        """
        self.set_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name, value)

    def get_MappingGroup_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingGroup' from this record model
        """
        return self.get_field_value(self.MAPPINGGROUP__FIELD_NAME.field_name)

    def set_MappingOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'MappingOrder' on this record model
        """
        self.set_field_value(self.MAPPINGORDER__FIELD_NAME.field_name, value)

    def get_MappingOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MappingOrder' from this record model
        """
        return self.get_field_value(self.MAPPINGORDER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SampleReceiptModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SampleReceipt
    Data Type Display Name: Sample Receipt (Sample Receipts)
    Fields: Discrepancy, CreatedBy, DateCreated, SampleReceivedRejected, RejectionReason, OtherSampleId, ReceivedDate, ReceivedBy, StudyId, DataRecordName, Volume, ContainerId, SampleComment, FailureComment, ExemplarSampleType, VeloxLastModifiedDate, VeloxLastModifiedBy, SampleId
    """
    DATA_TYPE_NAME: Final[str] = 'SampleReceipt'
    DISPLAY_NAME: Final[str] = "Sample Receipt"
    PLURAL_DISPLAY_NAME: Final[str] = "Sample Receipts"
    CONTAINERID__FIELD_NAME: Final[WrapperField] = WrapperField("ContainerId", FieldType.STRING, display_name="Container ID")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DISCREPANCY__FIELD_NAME: Final[WrapperField] = WrapperField("Discrepancy", FieldType.STRING, display_name="Discrepancy")
    EXEMPLARSAMPLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ExemplarSampleType", FieldType.SELECTION, display_name="Sample Type")
    FAILURECOMMENT__FIELD_NAME: Final[WrapperField] = WrapperField("FailureComment", FieldType.STRING, display_name="Failure Comment")
    OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("OtherSampleId", FieldType.STRING, display_name="Sample Name")
    RECEIVEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ReceivedBy", FieldType.SELECTION, display_name="Received By")
    RECEIVEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ReceivedDate", FieldType.DATE, display_name="Received Date")
    REJECTIONREASON__FIELD_NAME: Final[WrapperField] = WrapperField("RejectionReason", FieldType.PICKLIST, display_name="Rejection Reason")
    SAMPLECOMMENT__FIELD_NAME: Final[WrapperField] = WrapperField("SampleComment", FieldType.STRING, display_name="Sample Comments")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.STRING, display_name="Sample ID")
    SAMPLERECEIVEDREJECTED__FIELD_NAME: Final[WrapperField] = WrapperField("SampleReceivedRejected", FieldType.PICKLIST, display_name="Sample Receipt Status")
    STUDYID__FIELD_NAME: Final[WrapperField] = WrapperField("StudyId", FieldType.STRING, display_name="Study ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VOLUME__FIELD_NAME: Final[WrapperField] = WrapperField("Volume", FieldType.DOUBLE, display_name="Quantity")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ContainerId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ContainerId' on this record model
        """
        self.set_field_value(self.CONTAINERID__FIELD_NAME.field_name, value)

    def get_ContainerId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ContainerId' from this record model
        """
        return self.get_field_value(self.CONTAINERID__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Discrepancy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Discrepancy' on this record model
        """
        self.set_field_value(self.DISCREPANCY__FIELD_NAME.field_name, value)

    def get_Discrepancy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Discrepancy' from this record model
        """
        return self.get_field_value(self.DISCREPANCY__FIELD_NAME.field_name)

    def set_ExemplarSampleType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExemplarSampleType' on this record model
        """
        self.set_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name, value)

    def get_ExemplarSampleType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExemplarSampleType' from this record model
        """
        return self.get_field_value(self.EXEMPLARSAMPLETYPE__FIELD_NAME.field_name)

    def set_FailureComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'FailureComment' on this record model
        """
        self.set_field_value(self.FAILURECOMMENT__FIELD_NAME.field_name, value)

    def get_FailureComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FailureComment' from this record model
        """
        return self.get_field_value(self.FAILURECOMMENT__FIELD_NAME.field_name)

    def set_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'OtherSampleId' on this record model
        """
        self.set_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'OtherSampleId' from this record model
        """
        return self.get_field_value(self.OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_ReceivedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ReceivedBy' on this record model
        """
        self.set_field_value(self.RECEIVEDBY__FIELD_NAME.field_name, value)

    def get_ReceivedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ReceivedBy' from this record model
        """
        return self.get_field_value(self.RECEIVEDBY__FIELD_NAME.field_name)

    def set_ReceivedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ReceivedDate' on this record model
        """
        self.set_field_value(self.RECEIVEDDATE__FIELD_NAME.field_name, value)

    def get_ReceivedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ReceivedDate' from this record model
        """
        return self.get_field_value(self.RECEIVEDDATE__FIELD_NAME.field_name)

    def set_RejectionReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'RejectionReason' on this record model
        """
        self.set_field_value(self.REJECTIONREASON__FIELD_NAME.field_name, value)

    def get_RejectionReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RejectionReason' from this record model
        """
        return self.get_field_value(self.REJECTIONREASON__FIELD_NAME.field_name)

    def set_SampleComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleComment' on this record model
        """
        self.set_field_value(self.SAMPLECOMMENT__FIELD_NAME.field_name, value)

    def get_SampleComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleComment' from this record model
        """
        return self.get_field_value(self.SAMPLECOMMENT__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_SampleReceivedRejected_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleReceivedRejected' on this record model
        """
        self.set_field_value(self.SAMPLERECEIVEDREJECTED__FIELD_NAME.field_name, value)

    def get_SampleReceivedRejected_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleReceivedRejected' from this record model
        """
        return self.get_field_value(self.SAMPLERECEIVEDREJECTED__FIELD_NAME.field_name)

    def set_StudyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyId' on this record model
        """
        self.set_field_value(self.STUDYID__FIELD_NAME.field_name, value)

    def get_StudyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyId' from this record model
        """
        return self.get_field_value(self.STUDYID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Volume_field(self, value: Optional[float]):
        """
        Set data field with field name 'Volume' on this record model
        """
        self.set_field_value(self.VOLUME__FIELD_NAME.field_name, value)

    def get_Volume_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Volume' from this record model
        """
        return self.get_field_value(self.VOLUME__FIELD_NAME.field_name)


class SampleRegistrationAssociationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SampleRegistrationAssociation
    Data Type Display Name: Sample Registration Data Type Association (Sample Registration Data Type Associations)
    Fields: DataTypeFilter, CreatedBy, DataRecordName, VeloxLastModifiedDate, DataType, VeloxLastModifiedBy, DateCreated
    Data Types to associate registered samples to
<!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: Final[str] = 'SampleRegistrationAssociation'
    DISPLAY_NAME: Final[str] = "Sample Registration Data Type Association"
    PLURAL_DISPLAY_NAME: Final[str] = "Sample Registration Data Type Associations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DataType", FieldType.SELECTION, display_name="Data Type")
    DATATYPEFILTER__FIELD_NAME: Final[WrapperField] = WrapperField("DataTypeFilter", FieldType.STRING, display_name="Filter")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def set_DataTypeFilter_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeFilter' on this record model
        """
        self.set_field_value(self.DATATYPEFILTER__FIELD_NAME.field_name, value)

    def get_DataTypeFilter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeFilter' from this record model
        """
        return self.get_field_value(self.DATATYPEFILTER__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SampleRegistrationSetupModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SampleRegistrationSetup
    Data Type Display Name: Sample Registration Setup (Sample Registration Setups)
    Fields: SamplesToCreate, SampleRegistrationType, CreatedBy, SampleLayoutToUse, DataTypeField, DateCreated, PrefixField, ElnEntyAssociation, DataFieldName, ExperimentEntryId, DataRecordName, NumberOfDigits, MappingToUse, NotebookExperimentId, VeloxLastModifiedDate, VeloxLastModifiedBy, StartNumber, SampleTransfer, SuffixField, DefaultToExperimentParent
    <!-- CONFIG: Static --><!-- CONFIG: REPLACEABLE -->
    """
    DATA_TYPE_NAME: Final[str] = 'SampleRegistrationSetup'
    DISPLAY_NAME: Final[str] = "Sample Registration Setup"
    PLURAL_DISPLAY_NAME: Final[str] = "Sample Registration Setups"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATAFIELDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataFieldName", FieldType.SELECTION, display_name="Data Field")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPEFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("DataTypeField", FieldType.SELECTION, display_name="Data Type")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DEFAULTTOEXPERIMENTPARENT__FIELD_NAME: Final[WrapperField] = WrapperField("DefaultToExperimentParent", FieldType.BOOLEAN, display_name="Default To Experiment Parent")
    ELNENTYASSOCIATION__FIELD_NAME: Final[WrapperField] = WrapperField("ElnEntyAssociation", FieldType.SELECTION, display_name="ELN Entries to Associate Samples To")
    EXPERIMENTENTRYID__FIELD_NAME: Final[WrapperField] = WrapperField("ExperimentEntryId", FieldType.LONG, display_name="Experiment Entry ID")
    MAPPINGTOUSE__FIELD_NAME: Final[WrapperField] = WrapperField("MappingToUse", FieldType.SELECTION, display_name="Default Mapping To Use")
    NOTEBOOKEXPERIMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("NotebookExperimentId", FieldType.LONG, display_name="Notebook Experiment ID")
    NUMBEROFDIGITS__FIELD_NAME: Final[WrapperField] = WrapperField("NumberOfDigits", FieldType.INTEGER, display_name="Number Of Digits")
    PREFIXFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("PrefixField", FieldType.STRING, display_name="Prefix Field")
    SAMPLELAYOUTTOUSE__FIELD_NAME: Final[WrapperField] = WrapperField("SampleLayoutToUse", FieldType.SELECTION, display_name="Sample Layout To Use")
    SAMPLEREGISTRATIONTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SampleRegistrationType", FieldType.SELECTION, display_name="Sample Registration Type")
    SAMPLETRANSFER__FIELD_NAME: Final[WrapperField] = WrapperField("SampleTransfer", FieldType.SELECTION, display_name="Allow Transfer To")
    SAMPLESTOCREATE__FIELD_NAME: Final[WrapperField] = WrapperField("SamplesToCreate", FieldType.LONG, display_name="Default Number of Samples to Create")
    STARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("StartNumber", FieldType.INTEGER, display_name="Start Number")
    SUFFIXFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("SuffixField", FieldType.STRING, display_name="Suffix Field")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataFieldName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataFieldName' on this record model
        """
        self.set_field_value(self.DATAFIELDNAME__FIELD_NAME.field_name, value)

    def get_DataFieldName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataFieldName' from this record model
        """
        return self.get_field_value(self.DATAFIELDNAME__FIELD_NAME.field_name)

    def set_DataTypeField_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataTypeField' on this record model
        """
        self.set_field_value(self.DATATYPEFIELD__FIELD_NAME.field_name, value)

    def get_DataTypeField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataTypeField' from this record model
        """
        return self.get_field_value(self.DATATYPEFIELD__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DefaultToExperimentParent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DefaultToExperimentParent' on this record model
        """
        self.set_field_value(self.DEFAULTTOEXPERIMENTPARENT__FIELD_NAME.field_name, value)

    def get_DefaultToExperimentParent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DefaultToExperimentParent' from this record model
        """
        return self.get_field_value(self.DEFAULTTOEXPERIMENTPARENT__FIELD_NAME.field_name)

    def set_ElnEntyAssociation_field(self, value: Optional[str]):
        """
        Set data field with field name 'ElnEntyAssociation' on this record model
        """
        self.set_field_value(self.ELNENTYASSOCIATION__FIELD_NAME.field_name, value)

    def get_ElnEntyAssociation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ElnEntyAssociation' from this record model
        """
        return self.get_field_value(self.ELNENTYASSOCIATION__FIELD_NAME.field_name)

    def set_ExperimentEntryId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExperimentEntryId' on this record model
        """
        self.set_field_value(self.EXPERIMENTENTRYID__FIELD_NAME.field_name, value)

    def get_ExperimentEntryId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExperimentEntryId' from this record model
        """
        return self.get_field_value(self.EXPERIMENTENTRYID__FIELD_NAME.field_name)

    def set_MappingToUse_field(self, value: Optional[str]):
        """
        Set data field with field name 'MappingToUse' on this record model
        """
        self.set_field_value(self.MAPPINGTOUSE__FIELD_NAME.field_name, value)

    def get_MappingToUse_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MappingToUse' from this record model
        """
        return self.get_field_value(self.MAPPINGTOUSE__FIELD_NAME.field_name)

    def set_NotebookExperimentId_field(self, value: Optional[int]):
        """
        Set data field with field name 'NotebookExperimentId' on this record model
        """
        self.set_field_value(self.NOTEBOOKEXPERIMENTID__FIELD_NAME.field_name, value)

    def get_NotebookExperimentId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NotebookExperimentId' from this record model
        """
        return self.get_field_value(self.NOTEBOOKEXPERIMENTID__FIELD_NAME.field_name)

    def set_NumberOfDigits_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfDigits' on this record model
        """
        self.set_field_value(self.NUMBEROFDIGITS__FIELD_NAME.field_name, value)

    def get_NumberOfDigits_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfDigits' from this record model
        """
        return self.get_field_value(self.NUMBEROFDIGITS__FIELD_NAME.field_name)

    def set_PrefixField_field(self, value: Optional[str]):
        """
        Set data field with field name 'PrefixField' on this record model
        """
        self.set_field_value(self.PREFIXFIELD__FIELD_NAME.field_name, value)

    def get_PrefixField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PrefixField' from this record model
        """
        return self.get_field_value(self.PREFIXFIELD__FIELD_NAME.field_name)

    def set_SampleLayoutToUse_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleLayoutToUse' on this record model
        """
        self.set_field_value(self.SAMPLELAYOUTTOUSE__FIELD_NAME.field_name, value)

    def get_SampleLayoutToUse_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleLayoutToUse' from this record model
        """
        return self.get_field_value(self.SAMPLELAYOUTTOUSE__FIELD_NAME.field_name)

    def set_SampleRegistrationType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleRegistrationType' on this record model
        """
        self.set_field_value(self.SAMPLEREGISTRATIONTYPE__FIELD_NAME.field_name, value)

    def get_SampleRegistrationType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleRegistrationType' from this record model
        """
        return self.get_field_value(self.SAMPLEREGISTRATIONTYPE__FIELD_NAME.field_name)

    def set_SampleTransfer_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleTransfer' on this record model
        """
        self.set_field_value(self.SAMPLETRANSFER__FIELD_NAME.field_name, value)

    def get_SampleTransfer_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleTransfer' from this record model
        """
        return self.get_field_value(self.SAMPLETRANSFER__FIELD_NAME.field_name)

    def set_SamplesToCreate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplesToCreate' on this record model
        """
        self.set_field_value(self.SAMPLESTOCREATE__FIELD_NAME.field_name, value)

    def get_SamplesToCreate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplesToCreate' from this record model
        """
        return self.get_field_value(self.SAMPLESTOCREATE__FIELD_NAME.field_name)

    def set_StartNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'StartNumber' on this record model
        """
        self.set_field_value(self.STARTNUMBER__FIELD_NAME.field_name, value)

    def get_StartNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StartNumber' from this record model
        """
        return self.get_field_value(self.STARTNUMBER__FIELD_NAME.field_name)

    def set_SuffixField_field(self, value: Optional[str]):
        """
        Set data field with field name 'SuffixField' on this record model
        """
        self.set_field_value(self.SUFFIXFIELD__FIELD_NAME.field_name, value)

    def get_SuffixField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SuffixField' from this record model
        """
        return self.get_field_value(self.SUFFIXFIELD__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SamplingExceptionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SamplingException
    Data Type Display Name: Sampling Exception (Sampling Exceptions)
    Fields: CreatedBy, DataRecordName, NumberToExclude, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SubjectRecordId, SamplingResultRecordIdSet
    """
    DATA_TYPE_NAME: Final[str] = 'SamplingException'
    DISPLAY_NAME: Final[str] = "Sampling Exception"
    PLURAL_DISPLAY_NAME: Final[str] = "Sampling Exceptions"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    NUMBERTOEXCLUDE__FIELD_NAME: Final[WrapperField] = WrapperField("NumberToExclude", FieldType.INTEGER, display_name="Number To Exclude")
    SAMPLINGRESULTRECORDIDSET__FIELD_NAME: Final[WrapperField] = WrapperField("SamplingResultRecordIdSet", FieldType.STRING, display_name="Sampling Result Record Id Set")
    SUBJECTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SubjectRecordId", FieldType.LONG, display_name="Subject Record ID")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_NumberToExclude_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberToExclude' on this record model
        """
        self.set_field_value(self.NUMBERTOEXCLUDE__FIELD_NAME.field_name, value)

    def get_NumberToExclude_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberToExclude' from this record model
        """
        return self.get_field_value(self.NUMBERTOEXCLUDE__FIELD_NAME.field_name)

    def set_SamplingResultRecordIdSet_field(self, value: Optional[str]):
        """
        Set data field with field name 'SamplingResultRecordIdSet' on this record model
        """
        self.set_field_value(self.SAMPLINGRESULTRECORDIDSET__FIELD_NAME.field_name, value)

    def get_SamplingResultRecordIdSet_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SamplingResultRecordIdSet' from this record model
        """
        return self.get_field_value(self.SAMPLINGRESULTRECORDIDSET__FIELD_NAME.field_name)

    def set_SubjectRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SubjectRecordId' on this record model
        """
        self.set_field_value(self.SUBJECTRECORDID__FIELD_NAME.field_name, value)

    def get_SubjectRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SubjectRecordId' from this record model
        """
        return self.get_field_value(self.SUBJECTRECORDID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SamplingResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SamplingResult
    Data Type Display Name: Sampling Result (Sampling Results)
    Fields: CreatedBy, SampleRecordId, CollectionComments, DateCreated, SamplingRecordId, CollectionResult, BiologicalMatrix, DataRecordName, SamplingSplitNumber, DateCompleted, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'SamplingResult'
    DISPLAY_NAME: Final[str] = "Sampling Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Sampling Results"
    BIOLOGICALMATRIX__FIELD_NAME: Final[WrapperField] = WrapperField("BiologicalMatrix", FieldType.SELECTION, display_name="Biological Matrix")
    COLLECTIONCOMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("CollectionComments", FieldType.STRING, display_name="Comments")
    COLLECTIONRESULT__FIELD_NAME: Final[WrapperField] = WrapperField("CollectionResult", FieldType.PICKLIST, display_name="Collection Result")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECOMPLETED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCompleted", FieldType.DATE, display_name="Date Completed")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SAMPLERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleRecordId", FieldType.LONG, display_name="Sample Record ID")
    SAMPLINGRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SamplingRecordId", FieldType.LONG, display_name="Sampling Record ID")
    SAMPLINGSPLITNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("SamplingSplitNumber", FieldType.INTEGER, display_name="Sampling Split Number")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BiologicalMatrix_field(self, value: Optional[str]):
        """
        Set data field with field name 'BiologicalMatrix' on this record model
        """
        self.set_field_value(self.BIOLOGICALMATRIX__FIELD_NAME.field_name, value)

    def get_BiologicalMatrix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BiologicalMatrix' from this record model
        """
        return self.get_field_value(self.BIOLOGICALMATRIX__FIELD_NAME.field_name)

    def set_CollectionComments_field(self, value: Optional[str]):
        """
        Set data field with field name 'CollectionComments' on this record model
        """
        self.set_field_value(self.COLLECTIONCOMMENTS__FIELD_NAME.field_name, value)

    def get_CollectionComments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CollectionComments' from this record model
        """
        return self.get_field_value(self.COLLECTIONCOMMENTS__FIELD_NAME.field_name)

    def set_CollectionResult_field(self, value: Optional[str]):
        """
        Set data field with field name 'CollectionResult' on this record model
        """
        self.set_field_value(self.COLLECTIONRESULT__FIELD_NAME.field_name, value)

    def get_CollectionResult_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CollectionResult' from this record model
        """
        return self.get_field_value(self.COLLECTIONRESULT__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DateCompleted_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateCompleted' on this record model
        """
        self.set_field_value(self.DATECOMPLETED__FIELD_NAME.field_name, value)

    def get_DateCompleted_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCompleted' from this record model
        """
        return self.get_field_value(self.DATECOMPLETED__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SampleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleRecordId' on this record model
        """
        self.set_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name, value)

    def get_SampleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleRecordId' from this record model
        """
        return self.get_field_value(self.SAMPLERECORDID__FIELD_NAME.field_name)

    def set_SamplingRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplingRecordId' on this record model
        """
        self.set_field_value(self.SAMPLINGRECORDID__FIELD_NAME.field_name, value)

    def get_SamplingRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplingRecordId' from this record model
        """
        return self.get_field_value(self.SAMPLINGRECORDID__FIELD_NAME.field_name)

    def set_SamplingSplitNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplingSplitNumber' on this record model
        """
        self.set_field_value(self.SAMPLINGSPLITNUMBER__FIELD_NAME.field_name, value)

    def get_SamplingSplitNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplingSplitNumber' from this record model
        """
        return self.get_field_value(self.SAMPLINGSPLITNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SamplingScheduleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SamplingSchedule
    Data Type Display Name: Sampling Schedule (Sampling Schedules)
    Fields: TimepointDuration, CreatedBy, DateCreated, GroupId, IsPredose, BiologicalMatrix, DataRecordName, SamplingMilliseconds, VeloxLastModifiedDate, VeloxLastModifiedBy, SampleCount
    """
    DATA_TYPE_NAME: Final[str] = 'SamplingSchedule'
    DISPLAY_NAME: Final[str] = "Sampling Schedule"
    PLURAL_DISPLAY_NAME: Final[str] = "Sampling Schedules"
    BIOLOGICALMATRIX__FIELD_NAME: Final[WrapperField] = WrapperField("BiologicalMatrix", FieldType.SELECTION, display_name="Biological Matrix")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    GROUPID__FIELD_NAME: Final[WrapperField] = WrapperField("GroupId", FieldType.INTEGER, display_name="Group ID")
    ISPREDOSE__FIELD_NAME: Final[WrapperField] = WrapperField("IsPredose", FieldType.BOOLEAN, display_name="Is Predose")
    SAMPLECOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("SampleCount", FieldType.INTEGER, display_name="Sample Count")
    SAMPLINGMILLISECONDS__FIELD_NAME: Final[WrapperField] = WrapperField("SamplingMilliseconds", FieldType.LONG, display_name="Sampling Milliseconds")
    TIMEPOINTDURATION__FIELD_NAME: Final[WrapperField] = WrapperField("TimepointDuration", FieldType.DATE, display_name="Duration (HH:mm)")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BiologicalMatrix_field(self, value: Optional[str]):
        """
        Set data field with field name 'BiologicalMatrix' on this record model
        """
        self.set_field_value(self.BIOLOGICALMATRIX__FIELD_NAME.field_name, value)

    def get_BiologicalMatrix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BiologicalMatrix' from this record model
        """
        return self.get_field_value(self.BIOLOGICALMATRIX__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GroupId_field(self, value: Optional[int]):
        """
        Set data field with field name 'GroupId' on this record model
        """
        self.set_field_value(self.GROUPID__FIELD_NAME.field_name, value)

    def get_GroupId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GroupId' from this record model
        """
        return self.get_field_value(self.GROUPID__FIELD_NAME.field_name)

    def set_IsPredose_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPredose' on this record model
        """
        self.set_field_value(self.ISPREDOSE__FIELD_NAME.field_name, value)

    def get_IsPredose_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPredose' from this record model
        """
        return self.get_field_value(self.ISPREDOSE__FIELD_NAME.field_name)

    def set_SampleCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'SampleCount' on this record model
        """
        self.set_field_value(self.SAMPLECOUNT__FIELD_NAME.field_name, value)

    def get_SampleCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SampleCount' from this record model
        """
        return self.get_field_value(self.SAMPLECOUNT__FIELD_NAME.field_name)

    def set_SamplingMilliseconds_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplingMilliseconds' on this record model
        """
        self.set_field_value(self.SAMPLINGMILLISECONDS__FIELD_NAME.field_name, value)

    def get_SamplingMilliseconds_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplingMilliseconds' from this record model
        """
        return self.get_field_value(self.SAMPLINGMILLISECONDS__FIELD_NAME.field_name)

    def set_TimepointDuration_field(self, value: Optional[int]):
        """
        Set data field with field name 'TimepointDuration' on this record model
        """
        self.set_field_value(self.TIMEPOINTDURATION__FIELD_NAME.field_name, value)

    def get_TimepointDuration_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TimepointDuration' from this record model
        """
        return self.get_field_value(self.TIMEPOINTDURATION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SavedChemImportJSONModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SavedChemImportJSON
    Data Type Display Name: Saved Chem Import JSON (Saved Chem Import JSONs)
    Fields: CreatedBy, DataRecordName, ChemImportConfigJSON, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'SavedChemImportJSON'
    DISPLAY_NAME: Final[str] = "Saved Chem Import JSON"
    PLURAL_DISPLAY_NAME: Final[str] = "Saved Chem Import JSONs"
    CHEMIMPORTCONFIGJSON__FIELD_NAME: Final[WrapperField] = WrapperField("ChemImportConfigJSON", FieldType.STRING, display_name="Chem Import Config JSON")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ChemImportConfigJSON_field(self, value: Optional[str]):
        """
        Set data field with field name 'ChemImportConfigJSON' on this record model
        """
        self.set_field_value(self.CHEMIMPORTCONFIGJSON__FIELD_NAME.field_name, value)

    def get_ChemImportConfigJSON_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ChemImportConfigJSON' from this record model
        """
        return self.get_field_value(self.CHEMIMPORTCONFIGJSON__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AccAndPrecCriteriaInterModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AccAndPrecCriteriaInter
    Data Type Display Name: Accuracy and Precision Inter Criteria (Accuracy and Precision Inter Criteria)
    Fields: CreatedBy, SBA_MaxCVInter, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SBA_MinRunInter, SBA_MaxMeanBiasInter, SBA_MinRatioLQCOverLLOQ
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AccAndPrecCriteriaInter'
    DISPLAY_NAME: Final[str] = "Accuracy and Precision Inter Criteria"
    PLURAL_DISPLAY_NAME: Final[str] = "Accuracy and Precision Inter Criteria"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_MAXCVINTER__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxCVInter", FieldType.DOUBLE, display_name="Max CV% Across Runs")
    SBA_MAXMEANBIASINTER__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxMeanBiasInter", FieldType.DOUBLE, display_name="Max Mean Bias% Across Runs")
    SBA_MINRATIOLQCOVERLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MinRatioLQCOverLLOQ", FieldType.DOUBLE, display_name="Min Ratio of LQC/LLOQ Across Runs")
    SBA_MINRUNINTER__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MinRunInter", FieldType.INTEGER, display_name="Min Run #")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxCVInter_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxCVInter' on this record model
        """
        self.set_field_value(self.SBA_MAXCVINTER__FIELD_NAME.field_name, value)

    def get_SBA_MaxCVInter_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxCVInter' from this record model
        """
        return self.get_field_value(self.SBA_MAXCVINTER__FIELD_NAME.field_name)

    def set_SBA_MaxMeanBiasInter_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxMeanBiasInter' on this record model
        """
        self.set_field_value(self.SBA_MAXMEANBIASINTER__FIELD_NAME.field_name, value)

    def get_SBA_MaxMeanBiasInter_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxMeanBiasInter' from this record model
        """
        return self.get_field_value(self.SBA_MAXMEANBIASINTER__FIELD_NAME.field_name)

    def set_SBA_MinRatioLQCOverLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MinRatioLQCOverLLOQ' on this record model
        """
        self.set_field_value(self.SBA_MINRATIOLQCOVERLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_MinRatioLQCOverLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MinRatioLQCOverLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_MINRATIOLQCOVERLLOQ__FIELD_NAME.field_name)

    def set_SBA_MinRunInter_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_MinRunInter' on this record model
        """
        self.set_field_value(self.SBA_MINRUNINTER__FIELD_NAME.field_name, value)

    def get_SBA_MinRunInter_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_MinRunInter' from this record model
        """
        return self.get_field_value(self.SBA_MINRUNINTER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AccAndPrecInterResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AccAndPrecInterResults
    Data Type Display Name: Accuracy and Precision Inter Results (Accuracy and Precision Inter Results)
    Fields: SBA_AllLevelsPassMeanBiasInter, CreatedBy, DataRecordName, SBA_AnalyteName, VeloxLastModifiedDate, SBA_AllLevelsPassCVCheckInter, VeloxLastModifiedBy, DateCreated, SBA_RunInter
    The SBA_AccAndPrecInterResults Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AccAndPrecInterResults'
    DISPLAY_NAME: Final[str] = "Accuracy and Precision Inter Results"
    PLURAL_DISPLAY_NAME: Final[str] = "Accuracy and Precision Inter Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ALLLEVELSPASSCVCHECKINTER__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AllLevelsPassCVCheckInter", FieldType.BOOLEAN, display_name="All Levels Pass CV% Check Across Runs")
    SBA_ALLLEVELSPASSMEANBIASINTER__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AllLevelsPassMeanBiasInter", FieldType.BOOLEAN, display_name="All Levels Pass Bias% Check Across Runs")
    SBA_ANALYTENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AnalyteName", FieldType.SELECTION, display_name="Analyte Name")
    SBA_RUNINTER__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RunInter", FieldType.INTEGER, display_name="Number of Runs")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AllLevelsPassCVCheckInter_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AllLevelsPassCVCheckInter' on this record model
        """
        self.set_field_value(self.SBA_ALLLEVELSPASSCVCHECKINTER__FIELD_NAME.field_name, value)

    def get_SBA_AllLevelsPassCVCheckInter_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AllLevelsPassCVCheckInter' from this record model
        """
        return self.get_field_value(self.SBA_ALLLEVELSPASSCVCHECKINTER__FIELD_NAME.field_name)

    def set_SBA_AllLevelsPassMeanBiasInter_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AllLevelsPassMeanBiasInter' on this record model
        """
        self.set_field_value(self.SBA_ALLLEVELSPASSMEANBIASINTER__FIELD_NAME.field_name, value)

    def get_SBA_AllLevelsPassMeanBiasInter_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AllLevelsPassMeanBiasInter' from this record model
        """
        return self.get_field_value(self.SBA_ALLLEVELSPASSMEANBIASINTER__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_RunInter_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_RunInter' on this record model
        """
        self.set_field_value(self.SBA_RUNINTER__FIELD_NAME.field_name, value)

    def get_SBA_RunInter_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_RunInter' from this record model
        """
        return self.get_field_value(self.SBA_RUNINTER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AccAndPrecIntraResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AccAndPrecIntraResults
    Data Type Display Name: Accuracy and Precision Intra Results (Accuracy and Precision Intra Results)
    Fields: CreatedBy, DataRecordName, SBA_AllLevelsPassMeanBiasIntra, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SBA_AllLevelsPassCVCheckIntra
    The SBA_AccAndPrecIntraResults Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AccAndPrecIntraResults'
    DISPLAY_NAME: Final[str] = "Accuracy and Precision Intra Results"
    PLURAL_DISPLAY_NAME: Final[str] = "Accuracy and Precision Intra Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ALLLEVELSPASSCVCHECKINTRA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AllLevelsPassCVCheckIntra", FieldType.BOOLEAN, display_name="All Levels Pass CV% Check")
    SBA_ALLLEVELSPASSMEANBIASINTRA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AllLevelsPassMeanBiasIntra", FieldType.BOOLEAN, display_name="All Levels Pass Bias% Check")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AllLevelsPassCVCheckIntra_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AllLevelsPassCVCheckIntra' on this record model
        """
        self.set_field_value(self.SBA_ALLLEVELSPASSCVCHECKINTRA__FIELD_NAME.field_name, value)

    def get_SBA_AllLevelsPassCVCheckIntra_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AllLevelsPassCVCheckIntra' from this record model
        """
        return self.get_field_value(self.SBA_ALLLEVELSPASSCVCHECKINTRA__FIELD_NAME.field_name)

    def set_SBA_AllLevelsPassMeanBiasIntra_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AllLevelsPassMeanBiasIntra' on this record model
        """
        self.set_field_value(self.SBA_ALLLEVELSPASSMEANBIASINTRA__FIELD_NAME.field_name, value)

    def get_SBA_AllLevelsPassMeanBiasIntra_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AllLevelsPassMeanBiasIntra' from this record model
        """
        return self.get_field_value(self.SBA_ALLLEVELSPASSMEANBIASINTRA__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AccuracyAndPrecCriteriaModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AccuracyAndPrecCriteria
    Data Type Display Name: Accuracy and Precision Criteria (Accuracy and Precision Criteria)
    Fields: SBA_MaxCVIntra, CreatedBy, SBA_MaxMeanBiasIntra, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SBA_MinReplicateNumIntra
    The AccuracyAndPrecisionCriteria Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AccuracyAndPrecCriteria'
    DISPLAY_NAME: Final[str] = "Accuracy and Precision Criteria"
    PLURAL_DISPLAY_NAME: Final[str] = "Accuracy and Precision Criteria"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_MAXCVINTRA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxCVIntra", FieldType.DOUBLE, display_name="Max CV%")
    SBA_MAXMEANBIASINTRA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxMeanBiasIntra", FieldType.DOUBLE, display_name="Max Mean Bias%")
    SBA_MINREPLICATENUMINTRA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MinReplicateNumIntra", FieldType.INTEGER, display_name="Minimum Replicate # of QCs")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxCVIntra_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxCVIntra' on this record model
        """
        self.set_field_value(self.SBA_MAXCVINTRA__FIELD_NAME.field_name, value)

    def get_SBA_MaxCVIntra_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxCVIntra' from this record model
        """
        return self.get_field_value(self.SBA_MAXCVINTRA__FIELD_NAME.field_name)

    def set_SBA_MaxMeanBiasIntra_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxMeanBiasIntra' on this record model
        """
        self.set_field_value(self.SBA_MAXMEANBIASINTRA__FIELD_NAME.field_name, value)

    def get_SBA_MaxMeanBiasIntra_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxMeanBiasIntra' from this record model
        """
        return self.get_field_value(self.SBA_MAXMEANBIASINTRA__FIELD_NAME.field_name)

    def set_SBA_MinReplicateNumIntra_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_MinReplicateNumIntra' on this record model
        """
        self.set_field_value(self.SBA_MINREPLICATENUMINTRA__FIELD_NAME.field_name, value)

    def get_SBA_MinReplicateNumIntra_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_MinReplicateNumIntra' from this record model
        """
        return self.get_field_value(self.SBA_MINREPLICATENUMINTRA__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AnalyteConcentrationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AnalyteConcentration
    Data Type Display Name: Analyte Concentration (Analyte Concentrations)
    Fields: CreatedBy, DateCreated, SBA_AnalyteConcentration, DataRecordName, SBA_AnalyteName, SBA_ControlName, VeloxLastModifiedDate, SBA_AssayAnalyteRecordId, VeloxLastModifiedBy, SBA_ConcentrationUnit, SBA_FlagPctDiff
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AnalyteConcentration'
    DISPLAY_NAME: Final[str] = "Analyte Concentration"
    PLURAL_DISPLAY_NAME: Final[str] = "Analyte Concentrations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ANALYTECONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AnalyteConcentration", FieldType.DOUBLE, display_name="Analyte Concentration")
    SBA_ANALYTENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AnalyteName", FieldType.SELECTION, display_name="Analyte Name")
    SBA_ASSAYANALYTERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayAnalyteRecordId", FieldType.LONG, display_name="Assay Analyte Record ID")
    SBA_CONCENTRATIONUNIT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ConcentrationUnit", FieldType.SELECTION, display_name="Concentration Unit")
    SBA_CONTROLNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ControlName", FieldType.STRING, display_name="Control Name")
    SBA_FLAGPCTDIFF__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_FlagPctDiff", FieldType.DOUBLE, display_name="Max Bias %")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AnalyteConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_AnalyteConcentration' on this record model
        """
        self.set_field_value(self.SBA_ANALYTECONCENTRATION__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_AnalyteConcentration' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTECONCENTRATION__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_AssayAnalyteRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AssayAnalyteRecordId' on this record model
        """
        self.set_field_value(self.SBA_ASSAYANALYTERECORDID__FIELD_NAME.field_name, value)

    def get_SBA_AssayAnalyteRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AssayAnalyteRecordId' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYANALYTERECORDID__FIELD_NAME.field_name)

    def set_SBA_ConcentrationUnit_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConcentrationUnit' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONUNIT__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationUnit_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConcentrationUnit' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONUNIT__FIELD_NAME.field_name)

    def set_SBA_ControlName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ControlName' on this record model
        """
        self.set_field_value(self.SBA_CONTROLNAME__FIELD_NAME.field_name, value)

    def get_SBA_ControlName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ControlName' from this record model
        """
        return self.get_field_value(self.SBA_CONTROLNAME__FIELD_NAME.field_name)

    def set_SBA_FlagPctDiff_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_FlagPctDiff' on this record model
        """
        self.set_field_value(self.SBA_FLAGPCTDIFF__FIELD_NAME.field_name, value)

    def get_SBA_FlagPctDiff_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_FlagPctDiff' from this record model
        """
        return self.get_field_value(self.SBA_FLAGPCTDIFF__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayAnalyteModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayAnalyte
    Data Type Display Name: Assay Analyte (Assay Analytes)
    Fields: CreatedBy, SBA_RelatedAnalyteRecordId, SBA_LLOQ, DateCreated, SBA_ULOQ, SBA_IsrDiffPercentLimit, SBA_InternalStandard, SBA_RelatedAnalyteDataTypeName, DataRecordName, SBA_AnalyteName, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AssayAnalyte'
    DISPLAY_NAME: Final[str] = "Assay Analyte"
    PLURAL_DISPLAY_NAME: Final[str] = "Assay Analytes"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ANALYTENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AnalyteName", FieldType.STRING, display_name="Analyte Name")
    SBA_INTERNALSTANDARD__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_InternalStandard", FieldType.STRING, display_name="Internal Standard")
    SBA_ISRDIFFPERCENTLIMIT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_IsrDiffPercentLimit", FieldType.DOUBLE, display_name="ISR Difference Percent Limit")
    SBA_LLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_LLOQ", FieldType.DOUBLE, display_name="LLOQ")
    SBA_RELATEDANALYTEDATATYPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RelatedAnalyteDataTypeName", FieldType.STRING, display_name="Related Analyte Data Type Name")
    SBA_RELATEDANALYTERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RelatedAnalyteRecordId", FieldType.LONG, display_name="Related Analyte Record Id")
    SBA_ULOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ULOQ", FieldType.DOUBLE, display_name="ULOQ")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_InternalStandard_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_InternalStandard' on this record model
        """
        self.set_field_value(self.SBA_INTERNALSTANDARD__FIELD_NAME.field_name, value)

    def get_SBA_InternalStandard_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_InternalStandard' from this record model
        """
        return self.get_field_value(self.SBA_INTERNALSTANDARD__FIELD_NAME.field_name)

    def set_SBA_IsrDiffPercentLimit_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_IsrDiffPercentLimit' on this record model
        """
        self.set_field_value(self.SBA_ISRDIFFPERCENTLIMIT__FIELD_NAME.field_name, value)

    def get_SBA_IsrDiffPercentLimit_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_IsrDiffPercentLimit' from this record model
        """
        return self.get_field_value(self.SBA_ISRDIFFPERCENTLIMIT__FIELD_NAME.field_name)

    def set_SBA_LLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_LLOQ' on this record model
        """
        self.set_field_value(self.SBA_LLOQ__FIELD_NAME.field_name, value)

    def get_SBA_LLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_LLOQ' from this record model
        """
        return self.get_field_value(self.SBA_LLOQ__FIELD_NAME.field_name)

    def set_SBA_RelatedAnalyteDataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RelatedAnalyteDataTypeName' on this record model
        """
        self.set_field_value(self.SBA_RELATEDANALYTEDATATYPENAME__FIELD_NAME.field_name, value)

    def get_SBA_RelatedAnalyteDataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RelatedAnalyteDataTypeName' from this record model
        """
        return self.get_field_value(self.SBA_RELATEDANALYTEDATATYPENAME__FIELD_NAME.field_name)

    def set_SBA_RelatedAnalyteRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_RelatedAnalyteRecordId' on this record model
        """
        self.set_field_value(self.SBA_RELATEDANALYTERECORDID__FIELD_NAME.field_name, value)

    def get_SBA_RelatedAnalyteRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_RelatedAnalyteRecordId' from this record model
        """
        return self.get_field_value(self.SBA_RELATEDANALYTERECORDID__FIELD_NAME.field_name)

    def set_SBA_ULOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_ULOQ' on this record model
        """
        self.set_field_value(self.SBA_ULOQ__FIELD_NAME.field_name, value)

    def get_SBA_ULOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_ULOQ' from this record model
        """
        return self.get_field_value(self.SBA_ULOQ__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayInstrumentConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayInstrumentConfig
    Data Type Display Name: Assay Instrument Configuration (Assay Instrument Configurations)
    Fields: SBA_PlateIdMapping, SBA_SampleIdMapping, SBA_WellPositionMapping, DateCreated, SBA_IsResponseMapping, SBA_InstrumentOutputFileLayout, SBA_AssayDateMapping, SBA_ConfigurationName, VeloxLastModifiedBy, SBA_AnalyteNameMapping, SBA_FirstWellPositionColumn, SBA_PlateIdCellColumn, SBA_ConcentrationMapping, CreatedBy, SBA_FirstWellPositionRow, SBA_RetentionMapping, SBA_InstrumentOutputFileType, SBA_CustomParserPluginPath, SBA_IsActive, SBA_WellPositionRepresentation, SBA_RunIdMapping, SBA_PlateIdCellRow, SBA_InstrumentResponseMapping, DataRecordName, VeloxLastModifiedDate, SBA_ExpectedConcentrationUnits, SBA_AssayInstrumentType
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AssayInstrumentConfig'
    DISPLAY_NAME: Final[str] = "Assay Instrument Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Assay Instrument Configurations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ANALYTENAMEMAPPING__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AnalyteNameMapping", FieldType.STRING, display_name="Analyte Name is found in")
    SBA_ASSAYDATEMAPPING__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayDateMapping", FieldType.STRING, display_name="Assay Date is found in")
    SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayInstrumentType", FieldType.PICKLIST, display_name="Assay Instrument Type")
    SBA_CONCENTRATIONMAPPING__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ConcentrationMapping", FieldType.STRING, display_name="Concentration is found in")
    SBA_CONFIGURATIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ConfigurationName", FieldType.STRING, display_name="Configuration Name")
    SBA_CUSTOMPARSERPLUGINPATH__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CustomParserPluginPath", FieldType.SELECTION, display_name="Custom Parser Plugin Path")
    SBA_EXPECTEDCONCENTRATIONUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ExpectedConcentrationUnits", FieldType.PICKLIST, display_name="Expected Concentration Units")
    SBA_FIRSTWELLPOSITIONCOLUMN__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_FirstWellPositionColumn", FieldType.INTEGER, display_name="First Well Position Column")
    SBA_FIRSTWELLPOSITIONROW__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_FirstWellPositionRow", FieldType.INTEGER, display_name="First Well Position Row")
    SBA_INSTRUMENTOUTPUTFILELAYOUT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_InstrumentOutputFileLayout", FieldType.PICKLIST, display_name="Instrument Output File Parser Type")
    SBA_INSTRUMENTOUTPUTFILETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_InstrumentOutputFileType", FieldType.STRING, display_name="Instrument Output File Type")
    SBA_INSTRUMENTRESPONSEMAPPING__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_InstrumentResponseMapping", FieldType.STRING, display_name="Instrument Response is found in")
    SBA_ISACTIVE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_IsActive", FieldType.BOOLEAN, display_name="Is Active")
    SBA_ISRESPONSEMAPPING__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_IsResponseMapping", FieldType.STRING, display_name="IS Response is found in")
    SBA_PLATEIDCELLCOLUMN__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_PlateIdCellColumn", FieldType.INTEGER, display_name="Plate ID Cell Column")
    SBA_PLATEIDCELLROW__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_PlateIdCellRow", FieldType.INTEGER, display_name="Plate ID Cell Row")
    SBA_PLATEIDMAPPING__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_PlateIdMapping", FieldType.STRING, display_name="Plate ID is found in")
    SBA_RETENTIONMAPPING__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RetentionMapping", FieldType.STRING, display_name="Retention is found in")
    SBA_RUNIDMAPPING__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RunIdMapping", FieldType.STRING, display_name="Run ID is found in")
    SBA_SAMPLEIDMAPPING__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SampleIdMapping", FieldType.STRING, display_name="Sample ID is found in")
    SBA_WELLPOSITIONMAPPING__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_WellPositionMapping", FieldType.STRING, display_name="Well Position is found in")
    SBA_WELLPOSITIONREPRESENTATION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_WellPositionRepresentation", FieldType.PICKLIST, display_name="Well Position Representation")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AnalyteNameMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteNameMapping' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAMEMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteNameMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteNameMapping' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAMEMAPPING__FIELD_NAME.field_name)

    def set_SBA_AssayDateMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayDateMapping' on this record model
        """
        self.set_field_value(self.SBA_ASSAYDATEMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_AssayDateMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayDateMapping' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYDATEMAPPING__FIELD_NAME.field_name)

    def set_SBA_AssayInstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayInstrumentType' on this record model
        """
        self.set_field_value(self.SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_SBA_AssayInstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayInstrumentType' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_SBA_ConcentrationMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConcentrationMapping' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConcentrationMapping' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONMAPPING__FIELD_NAME.field_name)

    def set_SBA_ConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConfigurationName' on this record model
        """
        self.set_field_value(self.SBA_CONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_SBA_ConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConfigurationName' from this record model
        """
        return self.get_field_value(self.SBA_CONFIGURATIONNAME__FIELD_NAME.field_name)

    def set_SBA_CustomParserPluginPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CustomParserPluginPath' on this record model
        """
        self.set_field_value(self.SBA_CUSTOMPARSERPLUGINPATH__FIELD_NAME.field_name, value)

    def get_SBA_CustomParserPluginPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CustomParserPluginPath' from this record model
        """
        return self.get_field_value(self.SBA_CUSTOMPARSERPLUGINPATH__FIELD_NAME.field_name)

    def set_SBA_ExpectedConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ExpectedConcentrationUnits' on this record model
        """
        self.set_field_value(self.SBA_EXPECTEDCONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_SBA_ExpectedConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ExpectedConcentrationUnits' from this record model
        """
        return self.get_field_value(self.SBA_EXPECTEDCONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_SBA_FirstWellPositionColumn_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_FirstWellPositionColumn' on this record model
        """
        self.set_field_value(self.SBA_FIRSTWELLPOSITIONCOLUMN__FIELD_NAME.field_name, value)

    def get_SBA_FirstWellPositionColumn_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_FirstWellPositionColumn' from this record model
        """
        return self.get_field_value(self.SBA_FIRSTWELLPOSITIONCOLUMN__FIELD_NAME.field_name)

    def set_SBA_FirstWellPositionRow_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_FirstWellPositionRow' on this record model
        """
        self.set_field_value(self.SBA_FIRSTWELLPOSITIONROW__FIELD_NAME.field_name, value)

    def get_SBA_FirstWellPositionRow_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_FirstWellPositionRow' from this record model
        """
        return self.get_field_value(self.SBA_FIRSTWELLPOSITIONROW__FIELD_NAME.field_name)

    def set_SBA_InstrumentOutputFileLayout_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_InstrumentOutputFileLayout' on this record model
        """
        self.set_field_value(self.SBA_INSTRUMENTOUTPUTFILELAYOUT__FIELD_NAME.field_name, value)

    def get_SBA_InstrumentOutputFileLayout_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_InstrumentOutputFileLayout' from this record model
        """
        return self.get_field_value(self.SBA_INSTRUMENTOUTPUTFILELAYOUT__FIELD_NAME.field_name)

    def set_SBA_InstrumentOutputFileType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_InstrumentOutputFileType' on this record model
        """
        self.set_field_value(self.SBA_INSTRUMENTOUTPUTFILETYPE__FIELD_NAME.field_name, value)

    def get_SBA_InstrumentOutputFileType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_InstrumentOutputFileType' from this record model
        """
        return self.get_field_value(self.SBA_INSTRUMENTOUTPUTFILETYPE__FIELD_NAME.field_name)

    def set_SBA_InstrumentResponseMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_InstrumentResponseMapping' on this record model
        """
        self.set_field_value(self.SBA_INSTRUMENTRESPONSEMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_InstrumentResponseMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_InstrumentResponseMapping' from this record model
        """
        return self.get_field_value(self.SBA_INSTRUMENTRESPONSEMAPPING__FIELD_NAME.field_name)

    def set_SBA_IsActive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsActive' on this record model
        """
        self.set_field_value(self.SBA_ISACTIVE__FIELD_NAME.field_name, value)

    def get_SBA_IsActive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsActive' from this record model
        """
        return self.get_field_value(self.SBA_ISACTIVE__FIELD_NAME.field_name)

    def set_SBA_IsResponseMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_IsResponseMapping' on this record model
        """
        self.set_field_value(self.SBA_ISRESPONSEMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_IsResponseMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_IsResponseMapping' from this record model
        """
        return self.get_field_value(self.SBA_ISRESPONSEMAPPING__FIELD_NAME.field_name)

    def set_SBA_PlateIdCellColumn_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_PlateIdCellColumn' on this record model
        """
        self.set_field_value(self.SBA_PLATEIDCELLCOLUMN__FIELD_NAME.field_name, value)

    def get_SBA_PlateIdCellColumn_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_PlateIdCellColumn' from this record model
        """
        return self.get_field_value(self.SBA_PLATEIDCELLCOLUMN__FIELD_NAME.field_name)

    def set_SBA_PlateIdCellRow_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_PlateIdCellRow' on this record model
        """
        self.set_field_value(self.SBA_PLATEIDCELLROW__FIELD_NAME.field_name, value)

    def get_SBA_PlateIdCellRow_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_PlateIdCellRow' from this record model
        """
        return self.get_field_value(self.SBA_PLATEIDCELLROW__FIELD_NAME.field_name)

    def set_SBA_PlateIdMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_PlateIdMapping' on this record model
        """
        self.set_field_value(self.SBA_PLATEIDMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_PlateIdMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_PlateIdMapping' from this record model
        """
        return self.get_field_value(self.SBA_PLATEIDMAPPING__FIELD_NAME.field_name)

    def set_SBA_RetentionMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RetentionMapping' on this record model
        """
        self.set_field_value(self.SBA_RETENTIONMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_RetentionMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RetentionMapping' from this record model
        """
        return self.get_field_value(self.SBA_RETENTIONMAPPING__FIELD_NAME.field_name)

    def set_SBA_RunIdMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RunIdMapping' on this record model
        """
        self.set_field_value(self.SBA_RUNIDMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_RunIdMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RunIdMapping' from this record model
        """
        return self.get_field_value(self.SBA_RUNIDMAPPING__FIELD_NAME.field_name)

    def set_SBA_SampleIdMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleIdMapping' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEIDMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_SampleIdMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleIdMapping' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEIDMAPPING__FIELD_NAME.field_name)

    def set_SBA_WellPositionMapping_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_WellPositionMapping' on this record model
        """
        self.set_field_value(self.SBA_WELLPOSITIONMAPPING__FIELD_NAME.field_name, value)

    def get_SBA_WellPositionMapping_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_WellPositionMapping' from this record model
        """
        return self.get_field_value(self.SBA_WELLPOSITIONMAPPING__FIELD_NAME.field_name)

    def set_SBA_WellPositionRepresentation_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_WellPositionRepresentation' on this record model
        """
        self.set_field_value(self.SBA_WELLPOSITIONREPRESENTATION__FIELD_NAME.field_name, value)

    def get_SBA_WellPositionRepresentation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_WellPositionRepresentation' from this record model
        """
        return self.get_field_value(self.SBA_WELLPOSITIONREPRESENTATION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayInstrumentExampleFileModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayInstrumentExampleFile
    Data Type Display Name: Assay Instrument Example File (Assay Instrument Example Files)
    Fields: FilePath, CreatedBy, VeloxCurrentVersion, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AssayInstrumentExampleFile'
    DISPLAY_NAME: Final[str] = "Assay Instrument Example File"
    PLURAL_DISPLAY_NAME: Final[str] = "Assay Instrument Example Files"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayPlateTemplateWellModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayPlateTemplateWell
    Data Type Display Name: Assay Plate Template Well (Assay Plate Template Wells)
    Fields: SBA_PlateRows, CreatedBy, SBA_ControlType, SBA_PlateTemplateName, DateCreated, SBA_PlateNumber, SBA_RowPosition, DataRecordName, SBA_ControlName, SBA_PlateColumns, VeloxLastModifiedDate, VeloxLastModifiedBy, SBA_ColPosition
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AssayPlateTemplateWell'
    DISPLAY_NAME: Final[str] = "Assay Plate Template Well"
    PLURAL_DISPLAY_NAME: Final[str] = "Assay Plate Template Wells"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ColPosition", FieldType.SELECTION, display_name="Column Position")
    SBA_CONTROLNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ControlName", FieldType.STRING, display_name="Control Name")
    SBA_CONTROLTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ControlType", FieldType.STRING, display_name="Control Type")
    SBA_PLATECOLUMNS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_PlateColumns", FieldType.INTEGER, display_name="Plate Columns")
    SBA_PLATENUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_PlateNumber", FieldType.INTEGER, display_name="Plate Number")
    SBA_PLATEROWS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_PlateRows", FieldType.INTEGER, display_name="Plate Rows")
    SBA_PLATETEMPLATENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_PlateTemplateName", FieldType.STRING, display_name="Plate Template Name")
    SBA_ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RowPosition", FieldType.SELECTION, display_name="Row Position")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ColPosition' on this record model
        """
        self.set_field_value(self.SBA_COLPOSITION__FIELD_NAME.field_name, value)

    def get_SBA_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ColPosition' from this record model
        """
        return self.get_field_value(self.SBA_COLPOSITION__FIELD_NAME.field_name)

    def set_SBA_ControlName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ControlName' on this record model
        """
        self.set_field_value(self.SBA_CONTROLNAME__FIELD_NAME.field_name, value)

    def get_SBA_ControlName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ControlName' from this record model
        """
        return self.get_field_value(self.SBA_CONTROLNAME__FIELD_NAME.field_name)

    def set_SBA_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ControlType' on this record model
        """
        self.set_field_value(self.SBA_CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_SBA_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ControlType' from this record model
        """
        return self.get_field_value(self.SBA_CONTROLTYPE__FIELD_NAME.field_name)

    def set_SBA_PlateColumns_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_PlateColumns' on this record model
        """
        self.set_field_value(self.SBA_PLATECOLUMNS__FIELD_NAME.field_name, value)

    def get_SBA_PlateColumns_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_PlateColumns' from this record model
        """
        return self.get_field_value(self.SBA_PLATECOLUMNS__FIELD_NAME.field_name)

    def set_SBA_PlateNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_PlateNumber' on this record model
        """
        self.set_field_value(self.SBA_PLATENUMBER__FIELD_NAME.field_name, value)

    def get_SBA_PlateNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_PlateNumber' from this record model
        """
        return self.get_field_value(self.SBA_PLATENUMBER__FIELD_NAME.field_name)

    def set_SBA_PlateRows_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_PlateRows' on this record model
        """
        self.set_field_value(self.SBA_PLATEROWS__FIELD_NAME.field_name, value)

    def get_SBA_PlateRows_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_PlateRows' from this record model
        """
        return self.get_field_value(self.SBA_PLATEROWS__FIELD_NAME.field_name)

    def set_SBA_PlateTemplateName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_PlateTemplateName' on this record model
        """
        self.set_field_value(self.SBA_PLATETEMPLATENAME__FIELD_NAME.field_name, value)

    def get_SBA_PlateTemplateName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_PlateTemplateName' from this record model
        """
        return self.get_field_value(self.SBA_PLATETEMPLATENAME__FIELD_NAME.field_name)

    def set_SBA_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RowPosition' on this record model
        """
        self.set_field_value(self.SBA_ROWPOSITION__FIELD_NAME.field_name, value)

    def get_SBA_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RowPosition' from this record model
        """
        return self.get_field_value(self.SBA_ROWPOSITION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayResultDataModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayResultData
    Data Type Display Name: Assay Result Data (Assay Result Datas)
    Fields: CreatedBy, SBA_BiasPercentage, SBA_AssayDateTime, DateCreated, SBA_RawDataValue, SBA_IsResponse, DataRecordName, SBA_SampleAssayStatus, SBA_AnalyteName, VeloxLastModifiedDate, SBA_Concentration, VeloxLastModifiedBy, SBA_FoundConcentration, SBA_Retention, SBA_DeactivateReason
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AssayResultData'
    DISPLAY_NAME: Final[str] = "Assay Result Data"
    PLURAL_DISPLAY_NAME: Final[str] = "Assay Result Datas"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ANALYTENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AnalyteName", FieldType.STRING, display_name="Analyte Name")
    SBA_ASSAYDATETIME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayDateTime", FieldType.DATE, display_name="Assay Date/Time")
    SBA_BIASPERCENTAGE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_BiasPercentage", FieldType.DOUBLE, display_name="Bias%")
    SBA_CONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_Concentration", FieldType.DOUBLE, display_name="Calculated Concentration")
    SBA_DEACTIVATEREASON__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_DeactivateReason", FieldType.STRING, display_name="Deactivate Reason")
    SBA_FOUNDCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_FoundConcentration", FieldType.DOUBLE, display_name="Found Concentration")
    SBA_ISRESPONSE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_IsResponse", FieldType.DOUBLE, display_name="IS Response")
    SBA_RAWDATAVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RawDataValue", FieldType.DOUBLE, display_name="Raw Data Value")
    SBA_RETENTION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_Retention", FieldType.DOUBLE, display_name="Retention")
    SBA_SAMPLEASSAYSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SampleAssayStatus", FieldType.SELECTION, display_name="Sample Assay Status")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_AssayDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AssayDateTime' on this record model
        """
        self.set_field_value(self.SBA_ASSAYDATETIME__FIELD_NAME.field_name, value)

    def get_SBA_AssayDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AssayDateTime' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYDATETIME__FIELD_NAME.field_name)

    def set_SBA_BiasPercentage_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_BiasPercentage' on this record model
        """
        self.set_field_value(self.SBA_BIASPERCENTAGE__FIELD_NAME.field_name, value)

    def get_SBA_BiasPercentage_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_BiasPercentage' from this record model
        """
        return self.get_field_value(self.SBA_BIASPERCENTAGE__FIELD_NAME.field_name)

    def set_SBA_Concentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_Concentration' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATION__FIELD_NAME.field_name, value)

    def get_SBA_Concentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_Concentration' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATION__FIELD_NAME.field_name)

    def set_SBA_DeactivateReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_DeactivateReason' on this record model
        """
        self.set_field_value(self.SBA_DEACTIVATEREASON__FIELD_NAME.field_name, value)

    def get_SBA_DeactivateReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_DeactivateReason' from this record model
        """
        return self.get_field_value(self.SBA_DEACTIVATEREASON__FIELD_NAME.field_name)

    def set_SBA_FoundConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_FoundConcentration' on this record model
        """
        self.set_field_value(self.SBA_FOUNDCONCENTRATION__FIELD_NAME.field_name, value)

    def get_SBA_FoundConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_FoundConcentration' from this record model
        """
        return self.get_field_value(self.SBA_FOUNDCONCENTRATION__FIELD_NAME.field_name)

    def set_SBA_IsResponse_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_IsResponse' on this record model
        """
        self.set_field_value(self.SBA_ISRESPONSE__FIELD_NAME.field_name, value)

    def get_SBA_IsResponse_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_IsResponse' from this record model
        """
        return self.get_field_value(self.SBA_ISRESPONSE__FIELD_NAME.field_name)

    def set_SBA_RawDataValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_RawDataValue' on this record model
        """
        self.set_field_value(self.SBA_RAWDATAVALUE__FIELD_NAME.field_name, value)

    def get_SBA_RawDataValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_RawDataValue' from this record model
        """
        return self.get_field_value(self.SBA_RAWDATAVALUE__FIELD_NAME.field_name)

    def set_SBA_Retention_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_Retention' on this record model
        """
        self.set_field_value(self.SBA_RETENTION__FIELD_NAME.field_name, value)

    def get_SBA_Retention_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_Retention' from this record model
        """
        return self.get_field_value(self.SBA_RETENTION__FIELD_NAME.field_name)

    def set_SBA_SampleAssayStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleAssayStatus' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEASSAYSTATUS__FIELD_NAME.field_name, value)

    def get_SBA_SampleAssayStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleAssayStatus' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEASSAYSTATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayRunControlResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayRunControlResult
    Data Type Display Name: Assay Run Control Result (Assay Run Control Results)
    Fields: SBA_StandardDeviation, SBA_MeanBiasPercentage, CreatedBy, SBA_ControlType, SBA_TheoreticalValue, DateCreated, SBA_MeanConcentration, SBA_PlateId, DataRecordName, SBA_SampleAssayStatus, SBA_AnalyteName, SBA_ControlName, VeloxLastModifiedDate, VeloxLastModifiedBy, SBA_ConcentrationUnit, SBA_ConcentrationCV, SBA_DeactivateReason
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AssayRunControlResult'
    DISPLAY_NAME: Final[str] = "Assay Run Control Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Assay Run Control Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ANALYTENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AnalyteName", FieldType.STRING, display_name="Analyte Name")
    SBA_CONCENTRATIONCV__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ConcentrationCV", FieldType.DOUBLE, display_name="CV %")
    SBA_CONCENTRATIONUNIT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ConcentrationUnit", FieldType.SELECTION, display_name="Concentration Unit")
    SBA_CONTROLNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ControlName", FieldType.STRING, display_name="Control Name")
    SBA_CONTROLTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ControlType", FieldType.SELECTION, display_name="Control Type")
    SBA_DEACTIVATEREASON__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_DeactivateReason", FieldType.STRING, display_name="Deactivate Reason")
    SBA_MEANBIASPERCENTAGE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MeanBiasPercentage", FieldType.DOUBLE, display_name="Mean Bias %")
    SBA_MEANCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MeanConcentration", FieldType.DOUBLE, display_name="Mean Concentration")
    SBA_PLATEID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_PlateId", FieldType.STRING, display_name="Plate ID")
    SBA_SAMPLEASSAYSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SampleAssayStatus", FieldType.SELECTION, display_name="Sample Assay Status")
    SBA_STANDARDDEVIATION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_StandardDeviation", FieldType.DOUBLE, display_name="Standard Deviation")
    SBA_THEORETICALVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_TheoreticalValue", FieldType.DOUBLE, display_name="Theoretical Value")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_ConcentrationCV_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_ConcentrationCV' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONCV__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationCV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_ConcentrationCV' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONCV__FIELD_NAME.field_name)

    def set_SBA_ConcentrationUnit_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConcentrationUnit' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONUNIT__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationUnit_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConcentrationUnit' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONUNIT__FIELD_NAME.field_name)

    def set_SBA_ControlName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ControlName' on this record model
        """
        self.set_field_value(self.SBA_CONTROLNAME__FIELD_NAME.field_name, value)

    def get_SBA_ControlName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ControlName' from this record model
        """
        return self.get_field_value(self.SBA_CONTROLNAME__FIELD_NAME.field_name)

    def set_SBA_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ControlType' on this record model
        """
        self.set_field_value(self.SBA_CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_SBA_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ControlType' from this record model
        """
        return self.get_field_value(self.SBA_CONTROLTYPE__FIELD_NAME.field_name)

    def set_SBA_DeactivateReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_DeactivateReason' on this record model
        """
        self.set_field_value(self.SBA_DEACTIVATEREASON__FIELD_NAME.field_name, value)

    def get_SBA_DeactivateReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_DeactivateReason' from this record model
        """
        return self.get_field_value(self.SBA_DEACTIVATEREASON__FIELD_NAME.field_name)

    def set_SBA_MeanBiasPercentage_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MeanBiasPercentage' on this record model
        """
        self.set_field_value(self.SBA_MEANBIASPERCENTAGE__FIELD_NAME.field_name, value)

    def get_SBA_MeanBiasPercentage_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MeanBiasPercentage' from this record model
        """
        return self.get_field_value(self.SBA_MEANBIASPERCENTAGE__FIELD_NAME.field_name)

    def set_SBA_MeanConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MeanConcentration' on this record model
        """
        self.set_field_value(self.SBA_MEANCONCENTRATION__FIELD_NAME.field_name, value)

    def get_SBA_MeanConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MeanConcentration' from this record model
        """
        return self.get_field_value(self.SBA_MEANCONCENTRATION__FIELD_NAME.field_name)

    def set_SBA_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_PlateId' on this record model
        """
        self.set_field_value(self.SBA_PLATEID__FIELD_NAME.field_name, value)

    def get_SBA_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_PlateId' from this record model
        """
        return self.get_field_value(self.SBA_PLATEID__FIELD_NAME.field_name)

    def set_SBA_SampleAssayStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleAssayStatus' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEASSAYSTATUS__FIELD_NAME.field_name, value)

    def get_SBA_SampleAssayStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleAssayStatus' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEASSAYSTATUS__FIELD_NAME.field_name)

    def set_SBA_StandardDeviation_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_StandardDeviation' on this record model
        """
        self.set_field_value(self.SBA_STANDARDDEVIATION__FIELD_NAME.field_name, value)

    def get_SBA_StandardDeviation_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_StandardDeviation' from this record model
        """
        return self.get_field_value(self.SBA_STANDARDDEVIATION__FIELD_NAME.field_name)

    def set_SBA_TheoreticalValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_TheoreticalValue' on this record model
        """
        self.set_field_value(self.SBA_THEORETICALVALUE__FIELD_NAME.field_name, value)

    def get_SBA_TheoreticalValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_TheoreticalValue' from this record model
        """
        return self.get_field_value(self.SBA_THEORETICALVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayRunResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayRunResult
    Data Type Display Name: Assay Run Result (Assay Run Result)
    Fields: LogisticRegressionParameter.RelatedRecord714, ExponentialDecayRegParameter.Intercept, SBA_FailureReason, ExponentialDecayRegParameter.RelatedRecord714, ExponentialDecayRegParameter.DecayRate, SBA_RecoveryResults.VeloxLastModifiedDate, SBA_SensitivityResults.DateCreated, LinearRegressionParameter.Slope, QuadraticRegressionParameter.VeloxLastModifiedBy, LogisticRegressionParameter.LogisticTop, SBA_AccAndPrecIntraResults.DateCreated, SBA_AssayRunId, SBA_SelectivityResults.CreatedBy, CreatedBy, SBA_RecoveryResults.RelatedRecord714, QuadraticRegressionParameter.DateCreated, LogisticRegressionParameter.RecordId, SBA_AccAndPrecIntraResults.DataRecordName, LinearRegressionParameter.RelatedRecord714, SBA_CurveFitModelName, LogisticRegressionParameter.CreatedBy, SBA_SelectivityResults.SBA_NumPassedSamplesIS, LinearRegressionParameter.SBA_RSquared, LogisticRegressionParameter.LogisticICEC50, SBA_SelectivityResults.RecordId, SBA_AccAndPrecIntraResults.RecordId, SBA_RecoveryResults.DataRecordName, SBA_SelectivityResults.VeloxLastModifiedBy, SBA_AccAndPrecIntraResults.RelatedRecord714, SBA_SensitivityResults.VeloxLastModifiedBy, ExponentialDecayRegParameter.DateCreated, SBA_AccAndPrecIntraResults.VeloxLastModifiedBy, QuadraticRegressionParameter.VeloxLastModifiedDate, VeloxLastModifiedBy, QuadraticRegressionParameter.DataRecordName, SBA_Status, LogisticRegressionParameter.LogisticAsymmetry, QuadraticRegressionParameter.RecordId, SBA_CarryOverResults.VeloxLastModifiedBy, SBA_SensitivityResults.SBA_AllPassBiasCheck, SBA_SensitivityResults.CreatedBy, SBA_ManualOverrideReason, SBA_CarryOverResults.VeloxLastModifiedDate, SBA_RecoveryResults.DateCreated, LogisticRegressionParameter.LogisticSlope, ExponentialDecayRegParameter.VeloxLastModifiedBy, LinearRegressionParameter.DateCreated, SBA_SelectivityResults.RelatedRecord714, SBA_CalibrationCurveResults.DataRecordName, SBA_AccAndPrecIntraResults.CreatedBy, SBA_AllQCLevelsPassCVCheck, SBA_CarryOverResults.RecordId, SBA_CarryOverResults.DateCreated, SBA_SelectivityResults.SBA_NumPassedSamplesLLOQ, SBA_SelectivityResults.DateCreated, QuadraticRegressionParameter.RelatedRecord714, SBA_CalibrationCurveResults.RecordId, LogisticRegressionParameter.DateCreated, ExponentialDecayRegParameter.VeloxLastModifiedDate, LinearRegressionParameter.RecordId, LogisticRegressionParameter.VeloxLastModifiedBy, QuadraticRegressionParameter.SBA_AdjRSquared, QuadraticRegressionParameter.CreatedBy, SBA_CalibrationCurveResults.SBA_NumSTDPassRate, SBA_CalibrationCurveResults.DateCreated, SBA_SensitivityResults.DataRecordName, SBA_PlateId, SBA_SensitivityResults.VeloxLastModifiedDate, ExponentialDecayRegParameter.DataRecordName, LinearRegressionParameter.VeloxLastModifiedDate, SBA_CarryOverResults.SBA_CarryoverAgainstLLOQ, SBA_CalibrationCurveResults.SBA_NumSTDLevels, LinearRegressionParameter.VeloxLastModifiedBy, SBA_SensitivityResults.RecordId, SBA_AccAndPrecIntraResults.SBA_AllLevelsPassCVCheckIntra, LinearRegressionParameter.CreatedBy, QuadraticRegressionParameter.SBA_RSquared, SBA_ManualRejectionReason, SBA_CarryOverResults.CreatedBy, DataRecordName, QuadraticRegressionParameter.QuadraticA, SBA_AnalyteName, SBA_SelectivityResults.DataRecordName, ExponentialDecayRegParameter.RecordId, LogisticRegressionParameter.LogisticBottom, QuadraticRegressionParameter.QuadraticB, QuadraticRegressionParameter.QuadraticC, ExponentialDecayRegParameter.OriginalAmount, DateCreated, SBA_CalibrationCurveResults.VeloxLastModifiedBy, SBA_CarryOverResults.DataRecordName, SBA_AccAndPrecIntraResults.SBA_AllLevelsPassMeanBiasIntra, SBA_CarryOverResults.SBA_CarryoverAgainstIS, SBA_RecoveryResults.CreatedBy, SBA_SelectivityResults.VeloxLastModifiedDate, SBA_RecoveryResults.RecordId, LogisticRegressionParameter.DataRecordName, SBA_CarryOverResults.RelatedRecord714, SBA_CalibrationCurveResults.SBA_WithinStdLevelBiasPass, SBA_SensitivityResults.RelatedRecord714, SBA_RecoveryResults.SBA_MaxMinRecoveryDiff, ExponentialDecayRegParameter.CreatedBy, LinearRegressionParameter.DataRecordName, LogisticRegressionParameter.VeloxLastModifiedDate, SBA_CalibrationCurveResults.VeloxLastModifiedDate, SBA_CalibrationCurveResults.CreatedBy, SBA_CalibrationCurveResults.RelatedRecord714, SBA_AccAndPrecIntraResults.VeloxLastModifiedDate, VeloxLastModifiedDate, LinearRegressionParameter.SBA_AdjRSquared, SBA_AcceptOrReject, SBA_FailureDetected, SBA_RecoveryResults.VeloxLastModifiedBy, LinearRegressionParameter.Intercept
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AssayRunResult'
    DISPLAY_NAME: Final[str] = "Assay Run Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Assay Run Result"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPONENTIALDECAYREGPARAMETER_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ExponentialDecayRegParameter.CreatedBy", FieldType.STRING, display_name="Created By")
    EXPONENTIALDECAYREGPARAMETER_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ExponentialDecayRegParameter.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    EXPONENTIALDECAYREGPARAMETER_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("ExponentialDecayRegParameter.DateCreated", FieldType.DATE, display_name="Date Created")
    EXPONENTIALDECAYREGPARAMETER_EXT_DECAYRATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExponentialDecayRegParameter.DecayRate", FieldType.DOUBLE, display_name="Decay Rate")
    EXPONENTIALDECAYREGPARAMETER_EXT_INTERCEPT__FIELD_NAME: Final[WrapperField] = WrapperField("ExponentialDecayRegParameter.Intercept", FieldType.DOUBLE, display_name="Intercept")
    EXPONENTIALDECAYREGPARAMETER_EXT_ORIGINALAMOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("ExponentialDecayRegParameter.OriginalAmount", FieldType.DOUBLE, display_name="Original Amount")
    EXPONENTIALDECAYREGPARAMETER_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("ExponentialDecayRegParameter.RecordId", FieldType.LONG, display_name="Record ID")
    EXPONENTIALDECAYREGPARAMETER_EXT_RELATEDRECORD714__FIELD_NAME: Final[WrapperField] = WrapperField("ExponentialDecayRegParameter.RelatedRecord714", FieldType.PARENTLINK, display_name="Linked Assay Run Result")
    EXPONENTIALDECAYREGPARAMETER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("ExponentialDecayRegParameter.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    EXPONENTIALDECAYREGPARAMETER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExponentialDecayRegParameter.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    LINEARREGRESSIONPARAMETER_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("LinearRegressionParameter.CreatedBy", FieldType.STRING, display_name="Created By")
    LINEARREGRESSIONPARAMETER_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("LinearRegressionParameter.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    LINEARREGRESSIONPARAMETER_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("LinearRegressionParameter.DateCreated", FieldType.DATE, display_name="Date Created")
    LINEARREGRESSIONPARAMETER_EXT_INTERCEPT__FIELD_NAME: Final[WrapperField] = WrapperField("LinearRegressionParameter.Intercept", FieldType.DOUBLE, display_name="Intercept")
    LINEARREGRESSIONPARAMETER_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("LinearRegressionParameter.RecordId", FieldType.LONG, display_name="Record ID")
    LINEARREGRESSIONPARAMETER_EXT_RELATEDRECORD714__FIELD_NAME: Final[WrapperField] = WrapperField("LinearRegressionParameter.RelatedRecord714", FieldType.PARENTLINK, display_name="Linked Assay Run Result")
    LINEARREGRESSIONPARAMETER_EXT_SBA_ADJRSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("LinearRegressionParameter.SBA_AdjRSquared", FieldType.DOUBLE, display_name="Adjusted R Squared")
    LINEARREGRESSIONPARAMETER_EXT_SBA_RSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("LinearRegressionParameter.SBA_RSquared", FieldType.DOUBLE, display_name="R Squared")
    LINEARREGRESSIONPARAMETER_EXT_SLOPE__FIELD_NAME: Final[WrapperField] = WrapperField("LinearRegressionParameter.Slope", FieldType.DOUBLE, display_name="Slope")
    LINEARREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("LinearRegressionParameter.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    LINEARREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("LinearRegressionParameter.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    LOGISTICREGRESSIONPARAMETER_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticRegressionParameter.CreatedBy", FieldType.STRING, display_name="Created By")
    LOGISTICREGRESSIONPARAMETER_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticRegressionParameter.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    LOGISTICREGRESSIONPARAMETER_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticRegressionParameter.DateCreated", FieldType.DATE, display_name="Date Created")
    LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICASYMMETRY__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticRegressionParameter.LogisticAsymmetry", FieldType.DOUBLE, display_name="Asymmetry (5P only)")
    LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICBOTTOM__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticRegressionParameter.LogisticBottom", FieldType.DOUBLE, display_name="Bottom")
    LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICICEC50__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticRegressionParameter.LogisticICEC50", FieldType.DOUBLE, display_name="IC50/EC50")
    LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICSLOPE__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticRegressionParameter.LogisticSlope", FieldType.DOUBLE, display_name="Slope")
    LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICTOP__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticRegressionParameter.LogisticTop", FieldType.DOUBLE, display_name="Top")
    LOGISTICREGRESSIONPARAMETER_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticRegressionParameter.RecordId", FieldType.LONG, display_name="Record ID")
    LOGISTICREGRESSIONPARAMETER_EXT_RELATEDRECORD714__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticRegressionParameter.RelatedRecord714", FieldType.PARENTLINK, display_name="Linked Assay Run Result")
    LOGISTICREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticRegressionParameter.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    LOGISTICREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("LogisticRegressionParameter.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    QUADRATICREGRESSIONPARAMETER_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticRegressionParameter.CreatedBy", FieldType.STRING, display_name="Created By")
    QUADRATICREGRESSIONPARAMETER_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticRegressionParameter.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    QUADRATICREGRESSIONPARAMETER_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticRegressionParameter.DateCreated", FieldType.DATE, display_name="Date Created")
    QUADRATICREGRESSIONPARAMETER_EXT_QUADRATICA__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticRegressionParameter.QuadraticA", FieldType.DOUBLE, display_name="A")
    QUADRATICREGRESSIONPARAMETER_EXT_QUADRATICB__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticRegressionParameter.QuadraticB", FieldType.DOUBLE, display_name="B")
    QUADRATICREGRESSIONPARAMETER_EXT_QUADRATICC__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticRegressionParameter.QuadraticC", FieldType.DOUBLE, display_name="C")
    QUADRATICREGRESSIONPARAMETER_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticRegressionParameter.RecordId", FieldType.LONG, display_name="Record ID")
    QUADRATICREGRESSIONPARAMETER_EXT_RELATEDRECORD714__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticRegressionParameter.RelatedRecord714", FieldType.PARENTLINK, display_name="Linked Assay Run Result")
    QUADRATICREGRESSIONPARAMETER_EXT_SBA_ADJRSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticRegressionParameter.SBA_AdjRSquared", FieldType.DOUBLE, display_name="Adjusted R Squared")
    QUADRATICREGRESSIONPARAMETER_EXT_SBA_RSQUARED__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticRegressionParameter.SBA_RSquared", FieldType.DOUBLE, display_name="R Squared")
    QUADRATICREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticRegressionParameter.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    QUADRATICREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("QuadraticRegressionParameter.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_ACCANDPRECINTRARESULTS_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecIntraResults.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_ACCANDPRECINTRARESULTS_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecIntraResults.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_ACCANDPRECINTRARESULTS_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecIntraResults.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ACCANDPRECINTRARESULTS_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecIntraResults.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_ACCANDPRECINTRARESULTS_EXT_RELATEDRECORD714__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecIntraResults.RelatedRecord714", FieldType.PARENTLINK, display_name="Linked Assay Run Result")
    SBA_ACCANDPRECINTRARESULTS_EXT_SBA_ALLLEVELSPASSCVCHECKINTRA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecIntraResults.SBA_AllLevelsPassCVCheckIntra", FieldType.BOOLEAN, display_name="All Levels Pass CV% Check")
    SBA_ACCANDPRECINTRARESULTS_EXT_SBA_ALLLEVELSPASSMEANBIASINTRA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecIntraResults.SBA_AllLevelsPassMeanBiasIntra", FieldType.BOOLEAN, display_name="All Levels Pass Bias% Check")
    SBA_ACCANDPRECINTRARESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecIntraResults.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_ACCANDPRECINTRARESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecIntraResults.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_ACCEPTORREJECT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AcceptOrReject", FieldType.PICKLIST, display_name="Accept/Reject")
    SBA_ALLQCLEVELSPASSCVCHECK__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AllQCLevelsPassCVCheck", FieldType.BOOLEAN, display_name="All QC Pass CV Check")
    SBA_ANALYTENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AnalyteName", FieldType.SELECTION, display_name="Analyte Name")
    SBA_ASSAYRUNID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayRunId", FieldType.STRING, display_name="Assay Run ID")
    SBA_CALIBRATIONCURVERESULTS_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveResults.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_CALIBRATIONCURVERESULTS_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveResults.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_CALIBRATIONCURVERESULTS_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveResults.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_CALIBRATIONCURVERESULTS_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveResults.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_CALIBRATIONCURVERESULTS_EXT_RELATEDRECORD714__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveResults.RelatedRecord714", FieldType.PARENTLINK, display_name="Linked Assay Run Result")
    SBA_CALIBRATIONCURVERESULTS_EXT_SBA_NUMSTDLEVELS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveResults.SBA_NumSTDLevels", FieldType.LONG, display_name="# of STD Levels")
    SBA_CALIBRATIONCURVERESULTS_EXT_SBA_NUMSTDPASSRATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveResults.SBA_NumSTDPassRate", FieldType.DOUBLE, display_name="STD Pass Rate")
    SBA_CALIBRATIONCURVERESULTS_EXT_SBA_WITHINSTDLEVELBIASPASS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveResults.SBA_WithinStdLevelBiasPass", FieldType.BOOLEAN, display_name="Within STD Level Bias% Check Passed")
    SBA_CALIBRATIONCURVERESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveResults.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_CALIBRATIONCURVERESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveResults.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_CARRYOVERRESULTS_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverResults.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_CARRYOVERRESULTS_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverResults.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_CARRYOVERRESULTS_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverResults.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_CARRYOVERRESULTS_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverResults.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_CARRYOVERRESULTS_EXT_RELATEDRECORD714__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverResults.RelatedRecord714", FieldType.PARENTLINK, display_name="Linked Assay Run Result")
    SBA_CARRYOVERRESULTS_EXT_SBA_CARRYOVERAGAINSTIS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverResults.SBA_CarryoverAgainstIS", FieldType.DOUBLE, display_name="Carry-over(%) against IS")
    SBA_CARRYOVERRESULTS_EXT_SBA_CARRYOVERAGAINSTLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverResults.SBA_CarryoverAgainstLLOQ", FieldType.DOUBLE, display_name="Carry-over(%) against LLOQ")
    SBA_CARRYOVERRESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverResults.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_CARRYOVERRESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverResults.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_CURVEFITMODELNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CurveFitModelName", FieldType.STRING, display_name="Curve Fit Model")
    SBA_FAILUREDETECTED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_FailureDetected", FieldType.STRING, display_name="Failure Detected")
    SBA_FAILUREREASON__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_FailureReason", FieldType.STRING, display_name="Failure Reason")
    SBA_MANUALOVERRIDEREASON__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ManualOverrideReason", FieldType.STRING, display_name="Manual Override Reason")
    SBA_MANUALREJECTIONREASON__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ManualRejectionReason", FieldType.STRING, display_name="Manual Rejection Reason")
    SBA_PLATEID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_PlateId", FieldType.STRING, display_name="Plate ID")
    SBA_RECOVERYRESULTS_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryResults.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_RECOVERYRESULTS_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryResults.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_RECOVERYRESULTS_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryResults.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_RECOVERYRESULTS_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryResults.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_RECOVERYRESULTS_EXT_RELATEDRECORD714__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryResults.RelatedRecord714", FieldType.PARENTLINK, display_name="Linked Assay Run Result")
    SBA_RECOVERYRESULTS_EXT_SBA_MAXMINRECOVERYDIFF__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryResults.SBA_MaxMinRecoveryDiff", FieldType.DOUBLE, display_name="Max&Min Recovery% Diff")
    SBA_RECOVERYRESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryResults.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_RECOVERYRESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryResults.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_SELECTIVITYRESULTS_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityResults.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_SELECTIVITYRESULTS_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityResults.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_SELECTIVITYRESULTS_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityResults.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_SELECTIVITYRESULTS_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityResults.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_SELECTIVITYRESULTS_EXT_RELATEDRECORD714__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityResults.RelatedRecord714", FieldType.PARENTLINK, display_name="Linked Assay Run Result")
    SBA_SELECTIVITYRESULTS_EXT_SBA_NUMPASSEDSAMPLESIS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityResults.SBA_NumPassedSamplesIS", FieldType.LONG, display_name="# of Passed Blanks against IS")
    SBA_SELECTIVITYRESULTS_EXT_SBA_NUMPASSEDSAMPLESLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityResults.SBA_NumPassedSamplesLLOQ", FieldType.LONG, display_name="# of Passed Blanks against LLOQ")
    SBA_SELECTIVITYRESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityResults.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_SELECTIVITYRESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityResults.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_SENSITIVITYRESULTS_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityResults.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_SENSITIVITYRESULTS_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityResults.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_SENSITIVITYRESULTS_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityResults.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_SENSITIVITYRESULTS_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityResults.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_SENSITIVITYRESULTS_EXT_RELATEDRECORD714__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityResults.RelatedRecord714", FieldType.PARENTLINK, display_name="Linked Assay Run Result")
    SBA_SENSITIVITYRESULTS_EXT_SBA_ALLPASSBIASCHECK__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityResults.SBA_AllPassBiasCheck", FieldType.BOOLEAN, display_name="All Replicates Pass Bias Check")
    SBA_SENSITIVITYRESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityResults.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_SENSITIVITYRESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityResults.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_STATUS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_Status", FieldType.SELECTION, display_name="Acceptance Evaluation")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExponentialDecayRegParameterCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExponentialDecayRegParameter.CreatedBy' on this record model
        """
        self.set_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_ExponentialDecayRegParameterCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExponentialDecayRegParameter.CreatedBy' from this record model
        """
        return self.get_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_ExponentialDecayRegParameterDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExponentialDecayRegParameter.DateCreated' on this record model
        """
        self.set_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_ExponentialDecayRegParameterDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExponentialDecayRegParameter.DateCreated' from this record model
        """
        return self.get_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_ExponentialDecayRegParameterDecayRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExponentialDecayRegParameter.DecayRate' on this record model
        """
        self.set_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_DECAYRATE__FIELD_NAME.field_name, value)

    def get_ExponentialDecayRegParameterDecayRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExponentialDecayRegParameter.DecayRate' from this record model
        """
        return self.get_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_DECAYRATE__FIELD_NAME.field_name)

    def set_ExponentialDecayRegParameterIntercept_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExponentialDecayRegParameter.Intercept' on this record model
        """
        self.set_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_INTERCEPT__FIELD_NAME.field_name, value)

    def get_ExponentialDecayRegParameterIntercept_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExponentialDecayRegParameter.Intercept' from this record model
        """
        return self.get_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_INTERCEPT__FIELD_NAME.field_name)

    def set_ExponentialDecayRegParameterOriginalAmount_field(self, value: Optional[float]):
        """
        Set data field with field name 'ExponentialDecayRegParameter.OriginalAmount' on this record model
        """
        self.set_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_ORIGINALAMOUNT__FIELD_NAME.field_name, value)

    def get_ExponentialDecayRegParameterOriginalAmount_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ExponentialDecayRegParameter.OriginalAmount' from this record model
        """
        return self.get_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_ORIGINALAMOUNT__FIELD_NAME.field_name)

    def set_ExponentialDecayRegParameterRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExponentialDecayRegParameter.RecordId' on this record model
        """
        self.set_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_ExponentialDecayRegParameterRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExponentialDecayRegParameter.RecordId' from this record model
        """
        return self.get_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_RECORDID__FIELD_NAME.field_name)

    def set_ExponentialDecayRegParameterVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExponentialDecayRegParameter.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_ExponentialDecayRegParameterVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExponentialDecayRegParameter.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_ExponentialDecayRegParameterVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExponentialDecayRegParameter.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_ExponentialDecayRegParameterVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExponentialDecayRegParameter.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.EXPONENTIALDECAYREGPARAMETER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_LinearRegressionParameterCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'LinearRegressionParameter.CreatedBy' on this record model
        """
        self.set_field_value(self.LINEARREGRESSIONPARAMETER_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_LinearRegressionParameterCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LinearRegressionParameter.CreatedBy' from this record model
        """
        return self.get_field_value(self.LINEARREGRESSIONPARAMETER_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_LinearRegressionParameterDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'LinearRegressionParameter.DateCreated' on this record model
        """
        self.set_field_value(self.LINEARREGRESSIONPARAMETER_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_LinearRegressionParameterDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LinearRegressionParameter.DateCreated' from this record model
        """
        return self.get_field_value(self.LINEARREGRESSIONPARAMETER_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_LinearRegressionParameterIntercept_field(self, value: Optional[float]):
        """
        Set data field with field name 'LinearRegressionParameter.Intercept' on this record model
        """
        self.set_field_value(self.LINEARREGRESSIONPARAMETER_EXT_INTERCEPT__FIELD_NAME.field_name, value)

    def get_LinearRegressionParameterIntercept_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LinearRegressionParameter.Intercept' from this record model
        """
        return self.get_field_value(self.LINEARREGRESSIONPARAMETER_EXT_INTERCEPT__FIELD_NAME.field_name)

    def set_LinearRegressionParameterRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'LinearRegressionParameter.RecordId' on this record model
        """
        self.set_field_value(self.LINEARREGRESSIONPARAMETER_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_LinearRegressionParameterRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LinearRegressionParameter.RecordId' from this record model
        """
        return self.get_field_value(self.LINEARREGRESSIONPARAMETER_EXT_RECORDID__FIELD_NAME.field_name)

    def set_LinearRegressionParameterSBA_AdjRSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'LinearRegressionParameter.SBA_AdjRSquared' on this record model
        """
        self.set_field_value(self.LINEARREGRESSIONPARAMETER_EXT_SBA_ADJRSQUARED__FIELD_NAME.field_name, value)

    def get_LinearRegressionParameterSBA_AdjRSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LinearRegressionParameter.SBA_AdjRSquared' from this record model
        """
        return self.get_field_value(self.LINEARREGRESSIONPARAMETER_EXT_SBA_ADJRSQUARED__FIELD_NAME.field_name)

    def set_LinearRegressionParameterSBA_RSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'LinearRegressionParameter.SBA_RSquared' on this record model
        """
        self.set_field_value(self.LINEARREGRESSIONPARAMETER_EXT_SBA_RSQUARED__FIELD_NAME.field_name, value)

    def get_LinearRegressionParameterSBA_RSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LinearRegressionParameter.SBA_RSquared' from this record model
        """
        return self.get_field_value(self.LINEARREGRESSIONPARAMETER_EXT_SBA_RSQUARED__FIELD_NAME.field_name)

    def set_LinearRegressionParameterSlope_field(self, value: Optional[float]):
        """
        Set data field with field name 'LinearRegressionParameter.Slope' on this record model
        """
        self.set_field_value(self.LINEARREGRESSIONPARAMETER_EXT_SLOPE__FIELD_NAME.field_name, value)

    def get_LinearRegressionParameterSlope_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LinearRegressionParameter.Slope' from this record model
        """
        return self.get_field_value(self.LINEARREGRESSIONPARAMETER_EXT_SLOPE__FIELD_NAME.field_name)

    def set_LinearRegressionParameterVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'LinearRegressionParameter.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.LINEARREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_LinearRegressionParameterVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LinearRegressionParameter.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.LINEARREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_LinearRegressionParameterVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'LinearRegressionParameter.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.LINEARREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_LinearRegressionParameterVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LinearRegressionParameter.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.LINEARREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_LogisticRegressionParameterCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'LogisticRegressionParameter.CreatedBy' on this record model
        """
        self.set_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_LogisticRegressionParameterCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LogisticRegressionParameter.CreatedBy' from this record model
        """
        return self.get_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_LogisticRegressionParameterDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'LogisticRegressionParameter.DateCreated' on this record model
        """
        self.set_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_LogisticRegressionParameterDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LogisticRegressionParameter.DateCreated' from this record model
        """
        return self.get_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_LogisticRegressionParameterLogisticAsymmetry_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticRegressionParameter.LogisticAsymmetry' on this record model
        """
        self.set_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICASYMMETRY__FIELD_NAME.field_name, value)

    def get_LogisticRegressionParameterLogisticAsymmetry_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticRegressionParameter.LogisticAsymmetry' from this record model
        """
        return self.get_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICASYMMETRY__FIELD_NAME.field_name)

    def set_LogisticRegressionParameterLogisticBottom_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticRegressionParameter.LogisticBottom' on this record model
        """
        self.set_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICBOTTOM__FIELD_NAME.field_name, value)

    def get_LogisticRegressionParameterLogisticBottom_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticRegressionParameter.LogisticBottom' from this record model
        """
        return self.get_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICBOTTOM__FIELD_NAME.field_name)

    def set_LogisticRegressionParameterLogisticICEC50_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticRegressionParameter.LogisticICEC50' on this record model
        """
        self.set_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICICEC50__FIELD_NAME.field_name, value)

    def get_LogisticRegressionParameterLogisticICEC50_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticRegressionParameter.LogisticICEC50' from this record model
        """
        return self.get_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICICEC50__FIELD_NAME.field_name)

    def set_LogisticRegressionParameterLogisticSlope_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticRegressionParameter.LogisticSlope' on this record model
        """
        self.set_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICSLOPE__FIELD_NAME.field_name, value)

    def get_LogisticRegressionParameterLogisticSlope_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticRegressionParameter.LogisticSlope' from this record model
        """
        return self.get_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICSLOPE__FIELD_NAME.field_name)

    def set_LogisticRegressionParameterLogisticTop_field(self, value: Optional[float]):
        """
        Set data field with field name 'LogisticRegressionParameter.LogisticTop' on this record model
        """
        self.set_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICTOP__FIELD_NAME.field_name, value)

    def get_LogisticRegressionParameterLogisticTop_field(self) -> Optional[float]:
        """
        Get data field value with field name 'LogisticRegressionParameter.LogisticTop' from this record model
        """
        return self.get_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_LOGISTICTOP__FIELD_NAME.field_name)

    def set_LogisticRegressionParameterRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'LogisticRegressionParameter.RecordId' on this record model
        """
        self.set_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_LogisticRegressionParameterRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LogisticRegressionParameter.RecordId' from this record model
        """
        return self.get_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_RECORDID__FIELD_NAME.field_name)

    def set_LogisticRegressionParameterVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'LogisticRegressionParameter.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_LogisticRegressionParameterVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LogisticRegressionParameter.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_LogisticRegressionParameterVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'LogisticRegressionParameter.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_LogisticRegressionParameterVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'LogisticRegressionParameter.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.LOGISTICREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_QuadraticRegressionParameterCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'QuadraticRegressionParameter.CreatedBy' on this record model
        """
        self.set_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_QuadraticRegressionParameterCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QuadraticRegressionParameter.CreatedBy' from this record model
        """
        return self.get_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_QuadraticRegressionParameterDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'QuadraticRegressionParameter.DateCreated' on this record model
        """
        self.set_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_QuadraticRegressionParameterDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QuadraticRegressionParameter.DateCreated' from this record model
        """
        return self.get_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_QuadraticRegressionParameterQuadraticA_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuadraticRegressionParameter.QuadraticA' on this record model
        """
        self.set_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_QUADRATICA__FIELD_NAME.field_name, value)

    def get_QuadraticRegressionParameterQuadraticA_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuadraticRegressionParameter.QuadraticA' from this record model
        """
        return self.get_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_QUADRATICA__FIELD_NAME.field_name)

    def set_QuadraticRegressionParameterQuadraticB_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuadraticRegressionParameter.QuadraticB' on this record model
        """
        self.set_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_QUADRATICB__FIELD_NAME.field_name, value)

    def get_QuadraticRegressionParameterQuadraticB_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuadraticRegressionParameter.QuadraticB' from this record model
        """
        return self.get_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_QUADRATICB__FIELD_NAME.field_name)

    def set_QuadraticRegressionParameterQuadraticC_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuadraticRegressionParameter.QuadraticC' on this record model
        """
        self.set_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_QUADRATICC__FIELD_NAME.field_name, value)

    def get_QuadraticRegressionParameterQuadraticC_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuadraticRegressionParameter.QuadraticC' from this record model
        """
        return self.get_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_QUADRATICC__FIELD_NAME.field_name)

    def set_QuadraticRegressionParameterRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'QuadraticRegressionParameter.RecordId' on this record model
        """
        self.set_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_QuadraticRegressionParameterRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QuadraticRegressionParameter.RecordId' from this record model
        """
        return self.get_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_RECORDID__FIELD_NAME.field_name)

    def set_QuadraticRegressionParameterSBA_AdjRSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuadraticRegressionParameter.SBA_AdjRSquared' on this record model
        """
        self.set_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_SBA_ADJRSQUARED__FIELD_NAME.field_name, value)

    def get_QuadraticRegressionParameterSBA_AdjRSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuadraticRegressionParameter.SBA_AdjRSquared' from this record model
        """
        return self.get_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_SBA_ADJRSQUARED__FIELD_NAME.field_name)

    def set_QuadraticRegressionParameterSBA_RSquared_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuadraticRegressionParameter.SBA_RSquared' on this record model
        """
        self.set_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_SBA_RSQUARED__FIELD_NAME.field_name, value)

    def get_QuadraticRegressionParameterSBA_RSquared_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuadraticRegressionParameter.SBA_RSquared' from this record model
        """
        return self.get_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_SBA_RSQUARED__FIELD_NAME.field_name)

    def set_QuadraticRegressionParameterVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'QuadraticRegressionParameter.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_QuadraticRegressionParameterVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'QuadraticRegressionParameter.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_QuadraticRegressionParameterVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'QuadraticRegressionParameter.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_QuadraticRegressionParameterVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'QuadraticRegressionParameter.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.QUADRATICREGRESSIONPARAMETER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecIntraResultsCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AccAndPrecIntraResults.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecIntraResultsCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AccAndPrecIntraResults.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecIntraResultsDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccAndPrecIntraResults.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecIntraResultsDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccAndPrecIntraResults.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecIntraResultsRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccAndPrecIntraResults.RecordId' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecIntraResultsRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccAndPrecIntraResults.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecIntraResultsSBA_AllLevelsPassCVCheckIntra_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AccAndPrecIntraResults.SBA_AllLevelsPassCVCheckIntra' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_SBA_ALLLEVELSPASSCVCHECKINTRA__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecIntraResultsSBA_AllLevelsPassCVCheckIntra_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AccAndPrecIntraResults.SBA_AllLevelsPassCVCheckIntra' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_SBA_ALLLEVELSPASSCVCHECKINTRA__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecIntraResultsSBA_AllLevelsPassMeanBiasIntra_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AccAndPrecIntraResults.SBA_AllLevelsPassMeanBiasIntra' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_SBA_ALLLEVELSPASSMEANBIASINTRA__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecIntraResultsSBA_AllLevelsPassMeanBiasIntra_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AccAndPrecIntraResults.SBA_AllLevelsPassMeanBiasIntra' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_SBA_ALLLEVELSPASSMEANBIASINTRA__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecIntraResultsVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AccAndPrecIntraResults.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecIntraResultsVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AccAndPrecIntraResults.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecIntraResultsVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccAndPrecIntraResults.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecIntraResultsVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccAndPrecIntraResults.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECINTRARESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_AcceptOrReject_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AcceptOrReject' on this record model
        """
        self.set_field_value(self.SBA_ACCEPTORREJECT__FIELD_NAME.field_name, value)

    def get_SBA_AcceptOrReject_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AcceptOrReject' from this record model
        """
        return self.get_field_value(self.SBA_ACCEPTORREJECT__FIELD_NAME.field_name)

    def set_SBA_AllQCLevelsPassCVCheck_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AllQCLevelsPassCVCheck' on this record model
        """
        self.set_field_value(self.SBA_ALLQCLEVELSPASSCVCHECK__FIELD_NAME.field_name, value)

    def get_SBA_AllQCLevelsPassCVCheck_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AllQCLevelsPassCVCheck' from this record model
        """
        return self.get_field_value(self.SBA_ALLQCLEVELSPASSCVCHECK__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_AssayRunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayRunId' on this record model
        """
        self.set_field_value(self.SBA_ASSAYRUNID__FIELD_NAME.field_name, value)

    def get_SBA_AssayRunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayRunId' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYRUNID__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveResultsCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CalibrationCurveResults.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveResultsCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CalibrationCurveResults.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveResultsDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CalibrationCurveResults.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveResultsDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CalibrationCurveResults.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveResultsRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CalibrationCurveResults.RecordId' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveResultsRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CalibrationCurveResults.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveResultsSBA_NumSTDLevels_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CalibrationCurveResults.SBA_NumSTDLevels' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_SBA_NUMSTDLEVELS__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveResultsSBA_NumSTDLevels_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CalibrationCurveResults.SBA_NumSTDLevels' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_SBA_NUMSTDLEVELS__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveResultsSBA_NumSTDPassRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CalibrationCurveResults.SBA_NumSTDPassRate' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_SBA_NUMSTDPASSRATE__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveResultsSBA_NumSTDPassRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CalibrationCurveResults.SBA_NumSTDPassRate' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_SBA_NUMSTDPASSRATE__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveResultsSBA_WithinStdLevelBiasPass_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_CalibrationCurveResults.SBA_WithinStdLevelBiasPass' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_SBA_WITHINSTDLEVELBIASPASS__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveResultsSBA_WithinStdLevelBiasPass_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_CalibrationCurveResults.SBA_WithinStdLevelBiasPass' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_SBA_WITHINSTDLEVELBIASPASS__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveResultsVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CalibrationCurveResults.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveResultsVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CalibrationCurveResults.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveResultsVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CalibrationCurveResults.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveResultsVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CalibrationCurveResults.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVERESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_CarryOverResultsCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CarryOverResults.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERRESULTS_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverResultsCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CarryOverResults.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERRESULTS_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_CarryOverResultsDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CarryOverResults.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERRESULTS_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverResultsDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CarryOverResults.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERRESULTS_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_CarryOverResultsRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CarryOverResults.RecordId' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERRESULTS_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverResultsRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CarryOverResults.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERRESULTS_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_CarryOverResultsSBA_CarryoverAgainstIS_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CarryOverResults.SBA_CarryoverAgainstIS' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERRESULTS_EXT_SBA_CARRYOVERAGAINSTIS__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverResultsSBA_CarryoverAgainstIS_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CarryOverResults.SBA_CarryoverAgainstIS' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERRESULTS_EXT_SBA_CARRYOVERAGAINSTIS__FIELD_NAME.field_name)

    def set_SBA_CarryOverResultsSBA_CarryoverAgainstLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CarryOverResults.SBA_CarryoverAgainstLLOQ' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERRESULTS_EXT_SBA_CARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverResultsSBA_CarryoverAgainstLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CarryOverResults.SBA_CarryoverAgainstLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERRESULTS_EXT_SBA_CARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name)

    def set_SBA_CarryOverResultsVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CarryOverResults.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERRESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverResultsVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CarryOverResults.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERRESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_CarryOverResultsVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CarryOverResults.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERRESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverResultsVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CarryOverResults.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERRESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_CurveFitModelName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CurveFitModelName' on this record model
        """
        self.set_field_value(self.SBA_CURVEFITMODELNAME__FIELD_NAME.field_name, value)

    def get_SBA_CurveFitModelName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CurveFitModelName' from this record model
        """
        return self.get_field_value(self.SBA_CURVEFITMODELNAME__FIELD_NAME.field_name)

    def set_SBA_FailureDetected_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_FailureDetected' on this record model
        """
        self.set_field_value(self.SBA_FAILUREDETECTED__FIELD_NAME.field_name, value)

    def get_SBA_FailureDetected_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_FailureDetected' from this record model
        """
        return self.get_field_value(self.SBA_FAILUREDETECTED__FIELD_NAME.field_name)

    def set_SBA_FailureReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_FailureReason' on this record model
        """
        self.set_field_value(self.SBA_FAILUREREASON__FIELD_NAME.field_name, value)

    def get_SBA_FailureReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_FailureReason' from this record model
        """
        return self.get_field_value(self.SBA_FAILUREREASON__FIELD_NAME.field_name)

    def set_SBA_ManualOverrideReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ManualOverrideReason' on this record model
        """
        self.set_field_value(self.SBA_MANUALOVERRIDEREASON__FIELD_NAME.field_name, value)

    def get_SBA_ManualOverrideReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ManualOverrideReason' from this record model
        """
        return self.get_field_value(self.SBA_MANUALOVERRIDEREASON__FIELD_NAME.field_name)

    def set_SBA_ManualRejectionReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ManualRejectionReason' on this record model
        """
        self.set_field_value(self.SBA_MANUALREJECTIONREASON__FIELD_NAME.field_name, value)

    def get_SBA_ManualRejectionReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ManualRejectionReason' from this record model
        """
        return self.get_field_value(self.SBA_MANUALREJECTIONREASON__FIELD_NAME.field_name)

    def set_SBA_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_PlateId' on this record model
        """
        self.set_field_value(self.SBA_PLATEID__FIELD_NAME.field_name, value)

    def get_SBA_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_PlateId' from this record model
        """
        return self.get_field_value(self.SBA_PLATEID__FIELD_NAME.field_name)

    def set_SBA_RecoveryResultsCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RecoveryResults.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYRESULTS_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryResultsCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RecoveryResults.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYRESULTS_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_RecoveryResultsDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_RecoveryResults.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYRESULTS_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryResultsDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_RecoveryResults.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYRESULTS_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_RecoveryResultsRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_RecoveryResults.RecordId' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYRESULTS_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryResultsRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_RecoveryResults.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYRESULTS_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_RecoveryResultsSBA_MaxMinRecoveryDiff_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_RecoveryResults.SBA_MaxMinRecoveryDiff' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYRESULTS_EXT_SBA_MAXMINRECOVERYDIFF__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryResultsSBA_MaxMinRecoveryDiff_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_RecoveryResults.SBA_MaxMinRecoveryDiff' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYRESULTS_EXT_SBA_MAXMINRECOVERYDIFF__FIELD_NAME.field_name)

    def set_SBA_RecoveryResultsVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RecoveryResults.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYRESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryResultsVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RecoveryResults.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYRESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_RecoveryResultsVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_RecoveryResults.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYRESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryResultsVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_RecoveryResults.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYRESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_SelectivityResultsCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SelectivityResults.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYRESULTS_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityResultsCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SelectivityResults.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYRESULTS_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_SelectivityResultsDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SelectivityResults.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYRESULTS_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityResultsDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SelectivityResults.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYRESULTS_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_SelectivityResultsRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SelectivityResults.RecordId' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYRESULTS_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityResultsRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SelectivityResults.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYRESULTS_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_SelectivityResultsSBA_NumPassedSamplesIS_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SelectivityResults.SBA_NumPassedSamplesIS' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYRESULTS_EXT_SBA_NUMPASSEDSAMPLESIS__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityResultsSBA_NumPassedSamplesIS_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SelectivityResults.SBA_NumPassedSamplesIS' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYRESULTS_EXT_SBA_NUMPASSEDSAMPLESIS__FIELD_NAME.field_name)

    def set_SBA_SelectivityResultsSBA_NumPassedSamplesLLOQ_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SelectivityResults.SBA_NumPassedSamplesLLOQ' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYRESULTS_EXT_SBA_NUMPASSEDSAMPLESLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityResultsSBA_NumPassedSamplesLLOQ_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SelectivityResults.SBA_NumPassedSamplesLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYRESULTS_EXT_SBA_NUMPASSEDSAMPLESLLOQ__FIELD_NAME.field_name)

    def set_SBA_SelectivityResultsVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SelectivityResults.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYRESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityResultsVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SelectivityResults.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYRESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_SelectivityResultsVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SelectivityResults.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYRESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityResultsVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SelectivityResults.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYRESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_SensitivityResultsCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SensitivityResults.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYRESULTS_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityResultsCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SensitivityResults.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYRESULTS_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_SensitivityResultsDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SensitivityResults.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYRESULTS_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityResultsDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SensitivityResults.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYRESULTS_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_SensitivityResultsRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SensitivityResults.RecordId' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYRESULTS_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityResultsRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SensitivityResults.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYRESULTS_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_SensitivityResultsSBA_AllPassBiasCheck_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_SensitivityResults.SBA_AllPassBiasCheck' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYRESULTS_EXT_SBA_ALLPASSBIASCHECK__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityResultsSBA_AllPassBiasCheck_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_SensitivityResults.SBA_AllPassBiasCheck' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYRESULTS_EXT_SBA_ALLPASSBIASCHECK__FIELD_NAME.field_name)

    def set_SBA_SensitivityResultsVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SensitivityResults.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYRESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityResultsVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SensitivityResults.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYRESULTS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_SensitivityResultsVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SensitivityResults.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYRESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityResultsVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SensitivityResults.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYRESULTS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_Status_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Status' on this record model
        """
        self.set_field_value(self.SBA_STATUS__FIELD_NAME.field_name, value)

    def get_SBA_Status_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Status' from this record model
        """
        return self.get_field_value(self.SBA_STATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssayRunSampleResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssayRunSampleResult
    Data Type Display Name: Assay Run Sample Result (Assay Run Sample Results)
    Fields: SBA_StandardDeviation, CreatedBy, SBA_SampleId, DateCreated, SBA_MeanFoundConcentration, SBA_MeanConcentration, SBA_AssayProcessStatus, SBA_AssayDetectionQuality, SBA_PlateId, DataRecordName, SBA_SampleAssayStatus, SBA_AnalyteName, VeloxLastModifiedDate, VeloxLastModifiedBy, SBA_ConcentrationUnit, SBA_ConcentrationCV, SBA_OtherSampleId, SBA_DeactivateReason
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AssayRunSampleResult'
    DISPLAY_NAME: Final[str] = "Assay Run Sample Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Assay Run Sample Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ANALYTENAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AnalyteName", FieldType.STRING, display_name="Analyte Name")
    SBA_ASSAYDETECTIONQUALITY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayDetectionQuality", FieldType.SELECTION, display_name="Detection Status")
    SBA_ASSAYPROCESSSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayProcessStatus", FieldType.SELECTION, display_name="Process Status")
    SBA_CONCENTRATIONCV__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ConcentrationCV", FieldType.DOUBLE, display_name="CV %")
    SBA_CONCENTRATIONUNIT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ConcentrationUnit", FieldType.SELECTION, display_name="Concentration Unit")
    SBA_DEACTIVATEREASON__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_DeactivateReason", FieldType.STRING, display_name="Deactivate Reason")
    SBA_MEANCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MeanConcentration", FieldType.DOUBLE, display_name="Mean Concentration")
    SBA_MEANFOUNDCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MeanFoundConcentration", FieldType.DOUBLE, display_name="Mean Found Concentration")
    SBA_OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_OtherSampleId", FieldType.STRING, display_name="Sample Name")
    SBA_PLATEID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_PlateId", FieldType.STRING, display_name="Plate ID")
    SBA_SAMPLEASSAYSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SampleAssayStatus", FieldType.SELECTION, display_name="Sample Assay Status")
    SBA_SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SampleId", FieldType.STRING, display_name="Sample ID        ")
    SBA_STANDARDDEVIATION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_StandardDeviation", FieldType.DOUBLE, display_name="Standard Deviation")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AnalyteName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyteName' on this record model
        """
        self.set_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name, value)

    def get_SBA_AnalyteName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyteName' from this record model
        """
        return self.get_field_value(self.SBA_ANALYTENAME__FIELD_NAME.field_name)

    def set_SBA_AssayDetectionQuality_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayDetectionQuality' on this record model
        """
        self.set_field_value(self.SBA_ASSAYDETECTIONQUALITY__FIELD_NAME.field_name, value)

    def get_SBA_AssayDetectionQuality_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayDetectionQuality' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYDETECTIONQUALITY__FIELD_NAME.field_name)

    def set_SBA_AssayProcessStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayProcessStatus' on this record model
        """
        self.set_field_value(self.SBA_ASSAYPROCESSSTATUS__FIELD_NAME.field_name, value)

    def get_SBA_AssayProcessStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayProcessStatus' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYPROCESSSTATUS__FIELD_NAME.field_name)

    def set_SBA_ConcentrationCV_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_ConcentrationCV' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONCV__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationCV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_ConcentrationCV' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONCV__FIELD_NAME.field_name)

    def set_SBA_ConcentrationUnit_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConcentrationUnit' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONUNIT__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationUnit_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConcentrationUnit' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONUNIT__FIELD_NAME.field_name)

    def set_SBA_DeactivateReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_DeactivateReason' on this record model
        """
        self.set_field_value(self.SBA_DEACTIVATEREASON__FIELD_NAME.field_name, value)

    def get_SBA_DeactivateReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_DeactivateReason' from this record model
        """
        return self.get_field_value(self.SBA_DEACTIVATEREASON__FIELD_NAME.field_name)

    def set_SBA_MeanConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MeanConcentration' on this record model
        """
        self.set_field_value(self.SBA_MEANCONCENTRATION__FIELD_NAME.field_name, value)

    def get_SBA_MeanConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MeanConcentration' from this record model
        """
        return self.get_field_value(self.SBA_MEANCONCENTRATION__FIELD_NAME.field_name)

    def set_SBA_MeanFoundConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MeanFoundConcentration' on this record model
        """
        self.set_field_value(self.SBA_MEANFOUNDCONCENTRATION__FIELD_NAME.field_name, value)

    def get_SBA_MeanFoundConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MeanFoundConcentration' from this record model
        """
        return self.get_field_value(self.SBA_MEANFOUNDCONCENTRATION__FIELD_NAME.field_name)

    def set_SBA_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_OtherSampleId' on this record model
        """
        self.set_field_value(self.SBA_OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_SBA_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_OtherSampleId' from this record model
        """
        return self.get_field_value(self.SBA_OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SBA_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_PlateId' on this record model
        """
        self.set_field_value(self.SBA_PLATEID__FIELD_NAME.field_name, value)

    def get_SBA_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_PlateId' from this record model
        """
        return self.get_field_value(self.SBA_PLATEID__FIELD_NAME.field_name)

    def set_SBA_SampleAssayStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleAssayStatus' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEASSAYSTATUS__FIELD_NAME.field_name, value)

    def get_SBA_SampleAssayStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleAssayStatus' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEASSAYSTATUS__FIELD_NAME.field_name)

    def set_SBA_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleId' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEID__FIELD_NAME.field_name, value)

    def get_SBA_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleId' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEID__FIELD_NAME.field_name)

    def set_SBA_StandardDeviation_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_StandardDeviation' on this record model
        """
        self.set_field_value(self.SBA_STANDARDDEVIATION__FIELD_NAME.field_name, value)

    def get_SBA_StandardDeviation_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_StandardDeviation' from this record model
        """
        return self.get_field_value(self.SBA_STANDARDDEVIATION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_AssaySampleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_AssaySample
    Data Type Display Name: Assay Sample (Assay Samples)
    Fields: CreatedBy, SBA_ControlType, SBA_SampleId, DateCreated, SBA_RowPosition, SBA_IsControl, SBA_DilutionFactor, SBA_PlateId, DataRecordName, SBA_SampleCondition, VeloxLastModifiedDate, VeloxLastModifiedBy, SBA_IsCarryoverBlank, SBA_ValidationParameter, SBA_CollectionDateTime, SBA_ColPosition, SBA_OtherSampleId, SBA_IsExtracted
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_AssaySample'
    DISPLAY_NAME: Final[str] = "Assay Sample"
    PLURAL_DISPLAY_NAME: Final[str] = "Assay Samples"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ColPosition", FieldType.SELECTION, display_name="Column Position")
    SBA_COLLECTIONDATETIME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CollectionDateTime", FieldType.DATE, display_name="Collection Date/Time")
    SBA_CONTROLTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ControlType", FieldType.STRING, display_name="Control Type")
    SBA_DILUTIONFACTOR__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_DilutionFactor", FieldType.DOUBLE, display_name="Dilution Factor")
    SBA_ISCARRYOVERBLANK__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_IsCarryoverBlank", FieldType.BOOLEAN, display_name="Is Carryover BLANK?")
    SBA_ISCONTROL__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_IsControl", FieldType.BOOLEAN, display_name="Is Control?")
    SBA_ISEXTRACTED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_IsExtracted", FieldType.BOOLEAN, display_name="Is Extracted?")
    SBA_OTHERSAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_OtherSampleId", FieldType.STRING, display_name="Sample Name")
    SBA_PLATEID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_PlateId", FieldType.STRING, display_name="Plate Id")
    SBA_ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RowPosition", FieldType.SELECTION, display_name="Row Position")
    SBA_SAMPLECONDITION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SampleCondition", FieldType.SELECTION, display_name="Sample Condition")
    SBA_SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SampleId", FieldType.STRING, display_name="Sample ID        ")
    SBA_VALIDATIONPARAMETER__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ValidationParameter", FieldType.SELECTION, display_name="Validation Parameter")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ColPosition' on this record model
        """
        self.set_field_value(self.SBA_COLPOSITION__FIELD_NAME.field_name, value)

    def get_SBA_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ColPosition' from this record model
        """
        return self.get_field_value(self.SBA_COLPOSITION__FIELD_NAME.field_name)

    def set_SBA_CollectionDateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CollectionDateTime' on this record model
        """
        self.set_field_value(self.SBA_COLLECTIONDATETIME__FIELD_NAME.field_name, value)

    def get_SBA_CollectionDateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CollectionDateTime' from this record model
        """
        return self.get_field_value(self.SBA_COLLECTIONDATETIME__FIELD_NAME.field_name)

    def set_SBA_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ControlType' on this record model
        """
        self.set_field_value(self.SBA_CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_SBA_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ControlType' from this record model
        """
        return self.get_field_value(self.SBA_CONTROLTYPE__FIELD_NAME.field_name)

    def set_SBA_DilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_DilutionFactor' on this record model
        """
        self.set_field_value(self.SBA_DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_SBA_DilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_DilutionFactor' from this record model
        """
        return self.get_field_value(self.SBA_DILUTIONFACTOR__FIELD_NAME.field_name)

    def set_SBA_IsCarryoverBlank_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsCarryoverBlank' on this record model
        """
        self.set_field_value(self.SBA_ISCARRYOVERBLANK__FIELD_NAME.field_name, value)

    def get_SBA_IsCarryoverBlank_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsCarryoverBlank' from this record model
        """
        return self.get_field_value(self.SBA_ISCARRYOVERBLANK__FIELD_NAME.field_name)

    def set_SBA_IsControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsControl' on this record model
        """
        self.set_field_value(self.SBA_ISCONTROL__FIELD_NAME.field_name, value)

    def get_SBA_IsControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsControl' from this record model
        """
        return self.get_field_value(self.SBA_ISCONTROL__FIELD_NAME.field_name)

    def set_SBA_IsExtracted_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsExtracted' on this record model
        """
        self.set_field_value(self.SBA_ISEXTRACTED__FIELD_NAME.field_name, value)

    def get_SBA_IsExtracted_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsExtracted' from this record model
        """
        return self.get_field_value(self.SBA_ISEXTRACTED__FIELD_NAME.field_name)

    def set_SBA_OtherSampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_OtherSampleId' on this record model
        """
        self.set_field_value(self.SBA_OTHERSAMPLEID__FIELD_NAME.field_name, value)

    def get_SBA_OtherSampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_OtherSampleId' from this record model
        """
        return self.get_field_value(self.SBA_OTHERSAMPLEID__FIELD_NAME.field_name)

    def set_SBA_PlateId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_PlateId' on this record model
        """
        self.set_field_value(self.SBA_PLATEID__FIELD_NAME.field_name, value)

    def get_SBA_PlateId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_PlateId' from this record model
        """
        return self.get_field_value(self.SBA_PLATEID__FIELD_NAME.field_name)

    def set_SBA_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RowPosition' on this record model
        """
        self.set_field_value(self.SBA_ROWPOSITION__FIELD_NAME.field_name, value)

    def get_SBA_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RowPosition' from this record model
        """
        return self.get_field_value(self.SBA_ROWPOSITION__FIELD_NAME.field_name)

    def set_SBA_SampleCondition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleCondition' on this record model
        """
        self.set_field_value(self.SBA_SAMPLECONDITION__FIELD_NAME.field_name, value)

    def get_SBA_SampleCondition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleCondition' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLECONDITION__FIELD_NAME.field_name)

    def set_SBA_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleId' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEID__FIELD_NAME.field_name, value)

    def get_SBA_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleId' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEID__FIELD_NAME.field_name)

    def set_SBA_ValidationParameter_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ValidationParameter' on this record model
        """
        self.set_field_value(self.SBA_VALIDATIONPARAMETER__FIELD_NAME.field_name, value)

    def get_SBA_ValidationParameter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ValidationParameter' from this record model
        """
        return self.get_field_value(self.SBA_VALIDATIONPARAMETER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_CalibrationCurveCriteriaModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_CalibrationCurveCriteria
    Data Type Display Name: Calibration Curve Criteria (Calibration Curve Criteria)
    Fields: CreatedBy, DateCreated, SBA_MinOfSTDLevels, SBA_MinPassRatePerSTDLevel, SBA_MaxMeanBiasForLLOQ, DataRecordName, SBA_MaxMeanBiasForNonLLOQ, VeloxLastModifiedDate, VeloxLastModifiedBy, SBA_MinSTDPassRate
    The CalibrationCurveCriteria Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_CalibrationCurveCriteria'
    DISPLAY_NAME: Final[str] = "Calibration Curve Criteria"
    PLURAL_DISPLAY_NAME: Final[str] = "Calibration Curve Criteria"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_MAXMEANBIASFORLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxMeanBiasForLLOQ", FieldType.DOUBLE, display_name="Max Mean Bias% for LLOQ")
    SBA_MAXMEANBIASFORNONLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxMeanBiasForNonLLOQ", FieldType.DOUBLE, display_name="Max Mean Bias% for non-LLOQ")
    SBA_MINOFSTDLEVELS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MinOfSTDLevels", FieldType.LONG, display_name="Min # of STD Levels")
    SBA_MINPASSRATEPERSTDLEVEL__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MinPassRatePerSTDLevel", FieldType.DOUBLE, display_name="Min Pass Rate per STD Level")
    SBA_MINSTDPASSRATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MinSTDPassRate", FieldType.DOUBLE, display_name="Min STD Pass Rate")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxMeanBiasForLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxMeanBiasForLLOQ' on this record model
        """
        self.set_field_value(self.SBA_MAXMEANBIASFORLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_MaxMeanBiasForLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxMeanBiasForLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_MAXMEANBIASFORLLOQ__FIELD_NAME.field_name)

    def set_SBA_MaxMeanBiasForNonLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxMeanBiasForNonLLOQ' on this record model
        """
        self.set_field_value(self.SBA_MAXMEANBIASFORNONLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_MaxMeanBiasForNonLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxMeanBiasForNonLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_MAXMEANBIASFORNONLLOQ__FIELD_NAME.field_name)

    def set_SBA_MinOfSTDLevels_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_MinOfSTDLevels' on this record model
        """
        self.set_field_value(self.SBA_MINOFSTDLEVELS__FIELD_NAME.field_name, value)

    def get_SBA_MinOfSTDLevels_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_MinOfSTDLevels' from this record model
        """
        return self.get_field_value(self.SBA_MINOFSTDLEVELS__FIELD_NAME.field_name)

    def set_SBA_MinPassRatePerSTDLevel_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MinPassRatePerSTDLevel' on this record model
        """
        self.set_field_value(self.SBA_MINPASSRATEPERSTDLEVEL__FIELD_NAME.field_name, value)

    def get_SBA_MinPassRatePerSTDLevel_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MinPassRatePerSTDLevel' from this record model
        """
        return self.get_field_value(self.SBA_MINPASSRATEPERSTDLEVEL__FIELD_NAME.field_name)

    def set_SBA_MinSTDPassRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MinSTDPassRate' on this record model
        """
        self.set_field_value(self.SBA_MINSTDPASSRATE__FIELD_NAME.field_name, value)

    def get_SBA_MinSTDPassRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MinSTDPassRate' from this record model
        """
        return self.get_field_value(self.SBA_MINSTDPASSRATE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_CalibrationCurveResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_CalibrationCurveResults
    Data Type Display Name: Calibration Curve Results (Calibration Curve Results)
    Fields: SBA_NumSTDLevels, CreatedBy, DataRecordName, VeloxLastModifiedDate, SBA_WithinStdLevelBiasPass, VeloxLastModifiedBy, DateCreated, SBA_NumSTDPassRate
    The SBA_CalibrationCurveResults Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_CalibrationCurveResults'
    DISPLAY_NAME: Final[str] = "Calibration Curve Results"
    PLURAL_DISPLAY_NAME: Final[str] = "Calibration Curve Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_NUMSTDLEVELS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_NumSTDLevels", FieldType.LONG, display_name="# of STD Levels")
    SBA_NUMSTDPASSRATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_NumSTDPassRate", FieldType.DOUBLE, display_name="STD Pass Rate")
    SBA_WITHINSTDLEVELBIASPASS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_WithinStdLevelBiasPass", FieldType.BOOLEAN, display_name="Within STD Level Bias% Check Passed")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_NumSTDLevels_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_NumSTDLevels' on this record model
        """
        self.set_field_value(self.SBA_NUMSTDLEVELS__FIELD_NAME.field_name, value)

    def get_SBA_NumSTDLevels_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_NumSTDLevels' from this record model
        """
        return self.get_field_value(self.SBA_NUMSTDLEVELS__FIELD_NAME.field_name)

    def set_SBA_NumSTDPassRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_NumSTDPassRate' on this record model
        """
        self.set_field_value(self.SBA_NUMSTDPASSRATE__FIELD_NAME.field_name, value)

    def get_SBA_NumSTDPassRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_NumSTDPassRate' from this record model
        """
        return self.get_field_value(self.SBA_NUMSTDPASSRATE__FIELD_NAME.field_name)

    def set_SBA_WithinStdLevelBiasPass_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_WithinStdLevelBiasPass' on this record model
        """
        self.set_field_value(self.SBA_WITHINSTDLEVELBIASPASS__FIELD_NAME.field_name, value)

    def get_SBA_WithinStdLevelBiasPass_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_WithinStdLevelBiasPass' from this record model
        """
        return self.get_field_value(self.SBA_WITHINSTDLEVELBIASPASS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_CarryOverCriteriaModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_CarryOverCriteria
    Data Type Display Name: Carry Over Criteria (Carry Over Criteria)
    Fields: CreatedBy, DataRecordName, SBA_MaxCarryoverAgainstLLOQ, SBA_MaxCarryoverAgainstIS, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    The CarryOverCriteria Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_CarryOverCriteria'
    DISPLAY_NAME: Final[str] = "Carry Over Criteria"
    PLURAL_DISPLAY_NAME: Final[str] = "Carry Over Criteria"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_MAXCARRYOVERAGAINSTIS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxCarryoverAgainstIS", FieldType.DOUBLE, display_name="Max Carry-over against IS")
    SBA_MAXCARRYOVERAGAINSTLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxCarryoverAgainstLLOQ", FieldType.DOUBLE, display_name="Max Carry-over against LLOQ")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxCarryoverAgainstIS_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxCarryoverAgainstIS' on this record model
        """
        self.set_field_value(self.SBA_MAXCARRYOVERAGAINSTIS__FIELD_NAME.field_name, value)

    def get_SBA_MaxCarryoverAgainstIS_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxCarryoverAgainstIS' from this record model
        """
        return self.get_field_value(self.SBA_MAXCARRYOVERAGAINSTIS__FIELD_NAME.field_name)

    def set_SBA_MaxCarryoverAgainstLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxCarryoverAgainstLLOQ' on this record model
        """
        self.set_field_value(self.SBA_MAXCARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_MaxCarryoverAgainstLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxCarryoverAgainstLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_MAXCARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_CarryOverResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_CarryOverResults
    Data Type Display Name: Carry Over Results (Carry Over Results)
    Fields: CreatedBy, SBA_CarryoverAgainstIS, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SBA_CarryoverAgainstLLOQ
    The SBA_CarryOverResults Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_CarryOverResults'
    DISPLAY_NAME: Final[str] = "Carry Over Results"
    PLURAL_DISPLAY_NAME: Final[str] = "Carry Over Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_CARRYOVERAGAINSTIS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryoverAgainstIS", FieldType.DOUBLE, display_name="Carry-over(%) against IS")
    SBA_CARRYOVERAGAINSTLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryoverAgainstLLOQ", FieldType.DOUBLE, display_name="Carry-over(%) against LLOQ")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_CarryoverAgainstIS_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CarryoverAgainstIS' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERAGAINSTIS__FIELD_NAME.field_name, value)

    def get_SBA_CarryoverAgainstIS_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CarryoverAgainstIS' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERAGAINSTIS__FIELD_NAME.field_name)

    def set_SBA_CarryoverAgainstLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CarryoverAgainstLLOQ' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_CarryoverAgainstLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CarryoverAgainstLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_CertificateOfAnalysisModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_CertificateOfAnalysis
    Data Type Display Name: Certificate Of Analysis (Certificate Of Analysis)
    Fields: FilePath, VeloxCurrentVersion, CreatedBy, SBA_ConsumableItemBarcode, DateCreated, SBA_Comments, SBA_AnalyzedbyTechnician, SBA_CertificateExpirationDate, SBA_DateofAnalysis, DataRecordName, SBA_CorrectionFactor, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_CertificateOfAnalysis'
    DISPLAY_NAME: Final[str] = "Certificate Of Analysis"
    PLURAL_DISPLAY_NAME: Final[str] = "Certificate Of Analysis"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    SBA_ANALYZEDBYTECHNICIAN__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AnalyzedbyTechnician", FieldType.STRING, display_name="Analyzed by Technician")
    SBA_CERTIFICATEEXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CertificateExpirationDate", FieldType.DATE, display_name="COA Expiration Date")
    SBA_COMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_Comments", FieldType.STRING, display_name="Comments")
    SBA_CONSUMABLEITEMBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ConsumableItemBarcode", FieldType.STRING, display_name="Consumable Barcode                                  ")
    SBA_CORRECTIONFACTOR__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CorrectionFactor", FieldType.DOUBLE, display_name="Correction Factor")
    SBA_DATEOFANALYSIS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_DateofAnalysis", FieldType.DATE, display_name="Date of Analysis")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_SBA_AnalyzedbyTechnician_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AnalyzedbyTechnician' on this record model
        """
        self.set_field_value(self.SBA_ANALYZEDBYTECHNICIAN__FIELD_NAME.field_name, value)

    def get_SBA_AnalyzedbyTechnician_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AnalyzedbyTechnician' from this record model
        """
        return self.get_field_value(self.SBA_ANALYZEDBYTECHNICIAN__FIELD_NAME.field_name)

    def set_SBA_CertificateExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CertificateExpirationDate' on this record model
        """
        self.set_field_value(self.SBA_CERTIFICATEEXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_SBA_CertificateExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CertificateExpirationDate' from this record model
        """
        return self.get_field_value(self.SBA_CERTIFICATEEXPIRATIONDATE__FIELD_NAME.field_name)

    def set_SBA_Comments_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Comments' on this record model
        """
        self.set_field_value(self.SBA_COMMENTS__FIELD_NAME.field_name, value)

    def get_SBA_Comments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Comments' from this record model
        """
        return self.get_field_value(self.SBA_COMMENTS__FIELD_NAME.field_name)

    def set_SBA_ConsumableItemBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConsumableItemBarcode' on this record model
        """
        self.set_field_value(self.SBA_CONSUMABLEITEMBARCODE__FIELD_NAME.field_name, value)

    def get_SBA_ConsumableItemBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConsumableItemBarcode' from this record model
        """
        return self.get_field_value(self.SBA_CONSUMABLEITEMBARCODE__FIELD_NAME.field_name)

    def set_SBA_CorrectionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CorrectionFactor' on this record model
        """
        self.set_field_value(self.SBA_CORRECTIONFACTOR__FIELD_NAME.field_name, value)

    def get_SBA_CorrectionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CorrectionFactor' from this record model
        """
        return self.get_field_value(self.SBA_CORRECTIONFACTOR__FIELD_NAME.field_name)

    def set_SBA_DateofAnalysis_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_DateofAnalysis' on this record model
        """
        self.set_field_value(self.SBA_DATEOFANALYSIS__FIELD_NAME.field_name, value)

    def get_SBA_DateofAnalysis_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_DateofAnalysis' from this record model
        """
        return self.get_field_value(self.SBA_DATEOFANALYSIS__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_CurveFitterFunctionConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_CurveFitterFunctionConfig
    Data Type Display Name: Curve Fitter Function Config (Curve Fitter Function Configs)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SBA_ConfigData, SBA_IsDefaultFunction, SBA_FunctionName, SBA_ImplClass
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_CurveFitterFunctionConfig'
    DISPLAY_NAME: Final[str] = "Curve Fitter Function Config"
    PLURAL_DISPLAY_NAME: Final[str] = "Curve Fitter Function Configs"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_CONFIGDATA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ConfigData", FieldType.STRING, display_name="Config Data")
    SBA_FUNCTIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_FunctionName", FieldType.STRING, display_name="Function Name")
    SBA_IMPLCLASS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ImplClass", FieldType.STRING, display_name="Implementation Class")
    SBA_ISDEFAULTFUNCTION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_IsDefaultFunction", FieldType.BOOLEAN, display_name="Is Default Function")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_ConfigData_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConfigData' on this record model
        """
        self.set_field_value(self.SBA_CONFIGDATA__FIELD_NAME.field_name, value)

    def get_SBA_ConfigData_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConfigData' from this record model
        """
        return self.get_field_value(self.SBA_CONFIGDATA__FIELD_NAME.field_name)

    def set_SBA_FunctionName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_FunctionName' on this record model
        """
        self.set_field_value(self.SBA_FUNCTIONNAME__FIELD_NAME.field_name, value)

    def get_SBA_FunctionName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_FunctionName' from this record model
        """
        return self.get_field_value(self.SBA_FUNCTIONNAME__FIELD_NAME.field_name)

    def set_SBA_ImplClass_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ImplClass' on this record model
        """
        self.set_field_value(self.SBA_IMPLCLASS__FIELD_NAME.field_name, value)

    def get_SBA_ImplClass_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ImplClass' from this record model
        """
        return self.get_field_value(self.SBA_IMPLCLASS__FIELD_NAME.field_name)

    def set_SBA_IsDefaultFunction_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsDefaultFunction' on this record model
        """
        self.set_field_value(self.SBA_ISDEFAULTFUNCTION__FIELD_NAME.field_name, value)

    def get_SBA_IsDefaultFunction_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsDefaultFunction' from this record model
        """
        return self.get_field_value(self.SBA_ISDEFAULTFUNCTION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_MasterAssayModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_MasterAssay
    Data Type Display Name: Master Assay (Master Assays)
    Fields: SBA_AccAndPrecCriteriaInter.RecordId, SBA_RecoveryCriteria.RelatedRecord752, SBA_CVOfQC, SBA_AccAndPrecCriteriaInter.DateCreated, SBA_ApprovalDate, SBA_RecoveryCriteria.VeloxLastModifiedBy, SBA_AccAndPrecCriteriaInter.RelatedRecord689, SBA_SampleInsertionMethod, SBA_SelectivityCriteria.RelatedRecord689, SBA_CarryOverCriteria.CreatedBy, CreatedBy, SBA_AccAndPrecCriteriaInter.SBA_MinRunInter, SBA_SelectivityCriteria.DataRecordName, SBA_Species, SBA_AccuracyAndPrecCriteria.SBA_MinReplicateNumIntra, SBA_AccAndPrecCriteriaInter.SBA_MaxMeanBiasInter, SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForLLOQ, SBA_SensitivityCriteria.VeloxLastModifiedDate, SBA_RecoveryCriteria.DateCreated, SBA_RunAcceptanceConfig, SBA_CVOfSTD, SBA_CalibrationCurveCriteria.SBA_MinOfSTDLevels, SBA_CalibrationCurveCriteria.SBA_MinPassRatePerSTDLevel, SBA_ImportDataFormat, SBA_AssayDescription, SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstIS, SBA_AccuracyAndPrecCriteria.RecordId, SBA_RecoveryCriteria.DataRecordName, SBA_SensitivityCriteria.RelatedRecord752, SBA_CalibrationCurveCriteria.RelatedRecord689, SBA_CarryOverCriteria.RecordId, SBA_CalibrationCurveCriteria.DataRecordName, SBA_CarryOverCriteria.VeloxLastModifiedBy, SBA_RecoveryCriteria.CreatedBy, SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstLLOQ, SBA_AccuracyAndPrecCriteria.CreatedBy, SBA_AccuracyAndPrecCriteria.RelatedRecord689, SBA_SelectivityCriteria.RecordId, VeloxLastModifiedBy, SBA_AccuracyAndPrecCriteria.DataRecordName, SBA_CalibrationCurveCriteria.DateCreated, SBA_AssayComments, SBA_AccuracyAndPrecCriteria.SBA_MaxMeanBiasIntra, SBA_MasterAssayName, SBA_CalibrationCurveCriteria.SBA_MinSTDPassRate, SBA_SelectivityCriteria.DateCreated, SBA_IsActive, SBA_CarryOverCriteria.VeloxLastModifiedDate, SBA_CVOfUnknownSample, SBA_CalibrationCurveCriteria.VeloxLastModifiedBy, SBA_SensitivityCriteria.RecordId, SBA_CalibrationCurveCriteria.VeloxLastModifiedDate, SBA_AccAndPrecCriteriaInter.CreatedBy, SBA_BiologicalMatrix, SBA_AccuracyAndPrecCriteria.VeloxLastModifiedDate, MultiParentLink230, SBA_SensitivityCriteria.VeloxLastModifiedBy, SBA_AssayMethodStatus, SBA_ConcentrationUnits, SBA_CarryOverCriteria.RelatedRecord689, SBA_SensitivityCriteria.SBA_MaxBias, SBA_SensitivityCriteria.CreatedBy, SBA_AccAndPrecCriteriaInter.SBA_MaxCVInter, SBA_SelectivityCriteria.RelatedRecord752, SBA_RecoveryCriteria.VeloxLastModifiedDate, SBA_SelectivityCriteria.SBA_MinNumOfPassedSamples, SBA_AccAndPrecCriteriaInter.VeloxLastModifiedDate, SBA_AccAndPrecCriteriaInter.SBA_MinRatioLQCOverLLOQ, SBA_CalibrationCurveCriteria.CreatedBy, SBA_CarryOverCriteria.DataRecordName, SBA_SelectivityCriteria.SBA_MaxBlankISRatio, DataRecordName, SBA_AccAndPrecCriteriaInter.VeloxLastModifiedBy, SBA_AccuracyAndPrecCriteria.RelatedRecord752, SBA_ISName, SBA_RequiredValidationParam, SBA_AccuracyAndPrecCriteria.DateCreated, SBA_RecoveryCriteria.SBA_MaxMinRecoveryDiffLimit, DateCreated, SBA_RegressionType, SBA_SelectivityCriteria.VeloxLastModifiedBy, SBA_AssayId, SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForNonLLOQ, SBA_SensitivityCriteria.DateCreated, SBA_CVOfLLOQSTD, SBA_MinIsrPassRate, SBA_AssayType, SBA_CalibrationCurveCriteria.RelatedRecord752, SBA_RecoveryCriteria.RelatedRecord689, SBA_CarryOverCriteria.DateCreated, SBA_SelectivityCriteria.VeloxLastModifiedDate, SBA_AccuracyAndPrecCriteria.SBA_MaxCVIntra, SBA_SensitivityCriteria.RelatedRecord689, SBA_SelectivityCriteria.CreatedBy, SBA_CarryOverCriteria.RelatedRecord752, SBA_RecoveryCriteria.RecordId, SBA_CalibrationCurveCriteria.RecordId, VeloxLastModifiedDate, SBA_AccAndPrecCriteriaInter.DataRecordName, SBA_AccuracyAndPrecCriteria.VeloxLastModifiedBy, SBA_SelectivityCriteria.SBA_MaxBlankLLOQRatio, SBA_AssayInstrumentType, SBA_SensitivityCriteria.DataRecordName
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_MasterAssay'
    DISPLAY_NAME: Final[str] = "Master Assay"
    PLURAL_DISPLAY_NAME: Final[str] = "Master Assays"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MULTIPARENTLINK230__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink230", FieldType.MULTIPARENTLINK, display_name="Linked Study")
    SBA_ACCANDPRECCRITERIAINTER_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecCriteriaInter.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_ACCANDPRECCRITERIAINTER_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecCriteriaInter.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_ACCANDPRECCRITERIAINTER_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecCriteriaInter.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ACCANDPRECCRITERIAINTER_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecCriteriaInter.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_ACCANDPRECCRITERIAINTER_EXT_RELATEDRECORD689__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecCriteriaInter.RelatedRecord689", FieldType.PARENTLINK, display_name="Linked Master Assay")
    SBA_ACCANDPRECCRITERIAINTER_EXT_SBA_MAXCVINTER__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecCriteriaInter.SBA_MaxCVInter", FieldType.DOUBLE, display_name="Max CV% Across Runs")
    SBA_ACCANDPRECCRITERIAINTER_EXT_SBA_MAXMEANBIASINTER__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecCriteriaInter.SBA_MaxMeanBiasInter", FieldType.DOUBLE, display_name="Max Mean Bias% Across Runs")
    SBA_ACCANDPRECCRITERIAINTER_EXT_SBA_MINRATIOLQCOVERLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecCriteriaInter.SBA_MinRatioLQCOverLLOQ", FieldType.DOUBLE, display_name="Min Ratio of LQC/LLOQ Across Runs")
    SBA_ACCANDPRECCRITERIAINTER_EXT_SBA_MINRUNINTER__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecCriteriaInter.SBA_MinRunInter", FieldType.INTEGER, display_name="Min Run #")
    SBA_ACCANDPRECCRITERIAINTER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecCriteriaInter.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_ACCANDPRECCRITERIAINTER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccAndPrecCriteriaInter.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_ACCURACYANDPRECCRITERIA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_ACCURACYANDPRECCRITERIA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_ACCURACYANDPRECCRITERIA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ACCURACYANDPRECCRITERIA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_ACCURACYANDPRECCRITERIA_EXT_RELATEDRECORD689__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.RelatedRecord689", FieldType.PARENTLINK, display_name="Linked Master Assay")
    SBA_ACCURACYANDPRECCRITERIA_EXT_RELATEDRECORD752__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.RelatedRecord752", FieldType.PARENTLINK, display_name="Linked Master Assay Run")
    SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MAXCVINTRA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.SBA_MaxCVIntra", FieldType.DOUBLE, display_name="Max CV%")
    SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MAXMEANBIASINTRA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.SBA_MaxMeanBiasIntra", FieldType.DOUBLE, display_name="Max Mean Bias%")
    SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MINREPLICATENUMINTRA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.SBA_MinReplicateNumIntra", FieldType.INTEGER, display_name="Minimum Replicate # of QCs")
    SBA_ACCURACYANDPRECCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_ACCURACYANDPRECCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_APPROVALDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ApprovalDate", FieldType.DATE, display_name="Approval Date")
    SBA_ASSAYCOMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayComments", FieldType.STRING, display_name="Assay Comments")
    SBA_ASSAYDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayDescription", FieldType.STRING, display_name="Assay Description")
    SBA_ASSAYID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayId", FieldType.AUTO_ACCESSION, display_name="Assay Id")
    SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayInstrumentType", FieldType.SELECTION, display_name="Assay Instrument Type")
    SBA_ASSAYMETHODSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayMethodStatus", FieldType.PICKLIST, display_name="Assay Method Status")
    SBA_ASSAYTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayType", FieldType.SELECTION, display_name="Assay Type")
    SBA_BIOLOGICALMATRIX__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_BiologicalMatrix", FieldType.SELECTION, display_name="Biological Matrix")
    SBA_CVOFLLOQSTD__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CVOfLLOQSTD", FieldType.DOUBLE, display_name="Max LLOQ STD CV%")
    SBA_CVOFQC__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CVOfQC", FieldType.DOUBLE, display_name="Max QC CV%")
    SBA_CVOFSTD__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CVOfSTD", FieldType.DOUBLE, display_name="Max STD CV%")
    SBA_CVOFUNKNOWNSAMPLE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CVOfUnknownSample", FieldType.DOUBLE, display_name="Max CV% of Unk. Sample")
    SBA_CALIBRATIONCURVECRITERIA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_CALIBRATIONCURVECRITERIA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_CALIBRATIONCURVECRITERIA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_CALIBRATIONCURVECRITERIA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_CALIBRATIONCURVECRITERIA_EXT_RELATEDRECORD689__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.RelatedRecord689", FieldType.PARENTLINK, display_name="Linked Master Assay")
    SBA_CALIBRATIONCURVECRITERIA_EXT_RELATEDRECORD752__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.RelatedRecord752", FieldType.PARENTLINK, display_name="Linked Master Assay Run")
    SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MAXMEANBIASFORLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForLLOQ", FieldType.DOUBLE, display_name="Max Mean Bias% for LLOQ")
    SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MAXMEANBIASFORNONLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForNonLLOQ", FieldType.DOUBLE, display_name="Max Mean Bias% for non-LLOQ")
    SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINOFSTDLEVELS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.SBA_MinOfSTDLevels", FieldType.LONG, display_name="Min # of STD Levels")
    SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINPASSRATEPERSTDLEVEL__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.SBA_MinPassRatePerSTDLevel", FieldType.DOUBLE, display_name="Min Pass Rate per STD Level")
    SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINSTDPASSRATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.SBA_MinSTDPassRate", FieldType.DOUBLE, display_name="Min STD Pass Rate")
    SBA_CALIBRATIONCURVECRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_CALIBRATIONCURVECRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_CARRYOVERCRITERIA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_CARRYOVERCRITERIA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_CARRYOVERCRITERIA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_CARRYOVERCRITERIA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_CARRYOVERCRITERIA_EXT_RELATEDRECORD689__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.RelatedRecord689", FieldType.PARENTLINK, display_name="Linked Master Assay")
    SBA_CARRYOVERCRITERIA_EXT_RELATEDRECORD752__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.RelatedRecord752", FieldType.PARENTLINK, display_name="Linked Master Assay Run")
    SBA_CARRYOVERCRITERIA_EXT_SBA_MAXCARRYOVERAGAINSTIS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstIS", FieldType.DOUBLE, display_name="Max Carry-over against IS")
    SBA_CARRYOVERCRITERIA_EXT_SBA_MAXCARRYOVERAGAINSTLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstLLOQ", FieldType.DOUBLE, display_name="Max Carry-over against LLOQ")
    SBA_CARRYOVERCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_CARRYOVERCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_CONCENTRATIONUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ConcentrationUnits", FieldType.SELECTION, display_name="Concentration Unit")
    SBA_ISNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ISName", FieldType.STRING, display_name="IS Name")
    SBA_IMPORTDATAFORMAT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ImportDataFormat", FieldType.PICKLIST, display_name="Import Data Format")
    SBA_ISACTIVE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_IsActive", FieldType.BOOLEAN, display_name="Is Active")
    SBA_MASTERASSAYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MasterAssayName", FieldType.STRING, display_name="Master Assay Name")
    SBA_MINISRPASSRATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MinIsrPassRate", FieldType.DOUBLE, display_name="Minimum ISR Pass Rate")
    SBA_RECOVERYCRITERIA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_RECOVERYCRITERIA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_RECOVERYCRITERIA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_RECOVERYCRITERIA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_RECOVERYCRITERIA_EXT_RELATEDRECORD689__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.RelatedRecord689", FieldType.PARENTLINK, display_name="Linked Master Assay")
    SBA_RECOVERYCRITERIA_EXT_RELATEDRECORD752__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.RelatedRecord752", FieldType.PARENTLINK, display_name="Linked Master Assay Run")
    SBA_RECOVERYCRITERIA_EXT_SBA_MAXMINRECOVERYDIFFLIMIT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.SBA_MaxMinRecoveryDiffLimit", FieldType.DOUBLE, display_name="Max&Min Recovery% Diff Limit")
    SBA_RECOVERYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_RECOVERYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_REGRESSIONTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RegressionType", FieldType.SELECTION, display_name="Regression Type")
    SBA_REQUIREDVALIDATIONPARAM__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RequiredValidationParam", FieldType.SELECTION, display_name="Required Validation Parameters")
    SBA_RUNACCEPTANCECONFIG__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RunAcceptanceConfig", FieldType.SELECTION, display_name="Run Acceptance Configuration")
    SBA_SAMPLEINSERTIONMETHOD__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SampleInsertionMethod", FieldType.PICKLIST, display_name="Sample Insertion Method")
    SBA_SELECTIVITYCRITERIA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_SELECTIVITYCRITERIA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_SELECTIVITYCRITERIA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_SELECTIVITYCRITERIA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_SELECTIVITYCRITERIA_EXT_RELATEDRECORD689__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.RelatedRecord689", FieldType.PARENTLINK, display_name="Linked Master Assay")
    SBA_SELECTIVITYCRITERIA_EXT_RELATEDRECORD752__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.RelatedRecord752", FieldType.PARENTLINK, display_name="Linked Master Assay Run")
    SBA_SELECTIVITYCRITERIA_EXT_SBA_MAXBLANKISRATIO__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.SBA_MaxBlankISRatio", FieldType.DOUBLE, display_name="Max %IS")
    SBA_SELECTIVITYCRITERIA_EXT_SBA_MAXBLANKLLOQRATIO__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.SBA_MaxBlankLLOQRatio", FieldType.DOUBLE, display_name="Max %LLOQ")
    SBA_SELECTIVITYCRITERIA_EXT_SBA_MINNUMOFPASSEDSAMPLES__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.SBA_MinNumOfPassedSamples", FieldType.LONG, display_name="Min # of Passed BLANK Samples")
    SBA_SELECTIVITYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_SELECTIVITYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_SENSITIVITYCRITERIA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_SENSITIVITYCRITERIA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_SENSITIVITYCRITERIA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_SENSITIVITYCRITERIA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_SENSITIVITYCRITERIA_EXT_RELATEDRECORD689__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.RelatedRecord689", FieldType.PARENTLINK, display_name="Linked Master Assay")
    SBA_SENSITIVITYCRITERIA_EXT_RELATEDRECORD752__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.RelatedRecord752", FieldType.PARENTLINK, display_name="Linked Master Assay Run")
    SBA_SENSITIVITYCRITERIA_EXT_SBA_MAXBIAS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.SBA_MaxBias", FieldType.DOUBLE, display_name="Max Bias%")
    SBA_SENSITIVITYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_SENSITIVITYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_SPECIES__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_Species", FieldType.SELECTION, display_name="Species")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecCriteriaInterCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AccAndPrecCriteriaInter.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecCriteriaInterCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AccAndPrecCriteriaInter.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecCriteriaInterDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccAndPrecCriteriaInter.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecCriteriaInterDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccAndPrecCriteriaInter.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecCriteriaInterRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccAndPrecCriteriaInter.RecordId' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecCriteriaInterRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccAndPrecCriteriaInter.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecCriteriaInterSBA_MaxCVInter_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_AccAndPrecCriteriaInter.SBA_MaxCVInter' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_SBA_MAXCVINTER__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecCriteriaInterSBA_MaxCVInter_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_AccAndPrecCriteriaInter.SBA_MaxCVInter' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_SBA_MAXCVINTER__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecCriteriaInterSBA_MaxMeanBiasInter_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_AccAndPrecCriteriaInter.SBA_MaxMeanBiasInter' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_SBA_MAXMEANBIASINTER__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecCriteriaInterSBA_MaxMeanBiasInter_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_AccAndPrecCriteriaInter.SBA_MaxMeanBiasInter' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_SBA_MAXMEANBIASINTER__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecCriteriaInterSBA_MinRatioLQCOverLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_AccAndPrecCriteriaInter.SBA_MinRatioLQCOverLLOQ' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_SBA_MINRATIOLQCOVERLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecCriteriaInterSBA_MinRatioLQCOverLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_AccAndPrecCriteriaInter.SBA_MinRatioLQCOverLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_SBA_MINRATIOLQCOVERLLOQ__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecCriteriaInterSBA_MinRunInter_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccAndPrecCriteriaInter.SBA_MinRunInter' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_SBA_MINRUNINTER__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecCriteriaInterSBA_MinRunInter_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccAndPrecCriteriaInter.SBA_MinRunInter' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_SBA_MINRUNINTER__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecCriteriaInterVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AccAndPrecCriteriaInter.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecCriteriaInterVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AccAndPrecCriteriaInter.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_AccAndPrecCriteriaInterVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccAndPrecCriteriaInter.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_AccAndPrecCriteriaInterVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccAndPrecCriteriaInter.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_ACCANDPRECCRITERIAINTER_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.RecordId' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaSBA_MaxCVIntra_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.SBA_MaxCVIntra' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MAXCVINTRA__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaSBA_MaxCVIntra_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.SBA_MaxCVIntra' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MAXCVINTRA__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaSBA_MaxMeanBiasIntra_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.SBA_MaxMeanBiasIntra' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MAXMEANBIASINTRA__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaSBA_MaxMeanBiasIntra_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.SBA_MaxMeanBiasIntra' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MAXMEANBIASINTRA__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaSBA_MinReplicateNumIntra_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.SBA_MinReplicateNumIntra' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MINREPLICATENUMINTRA__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaSBA_MinReplicateNumIntra_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.SBA_MinReplicateNumIntra' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MINREPLICATENUMINTRA__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_ApprovalDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_ApprovalDate' on this record model
        """
        self.set_field_value(self.SBA_APPROVALDATE__FIELD_NAME.field_name, value)

    def get_SBA_ApprovalDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_ApprovalDate' from this record model
        """
        return self.get_field_value(self.SBA_APPROVALDATE__FIELD_NAME.field_name)

    def set_SBA_AssayComments_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayComments' on this record model
        """
        self.set_field_value(self.SBA_ASSAYCOMMENTS__FIELD_NAME.field_name, value)

    def get_SBA_AssayComments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayComments' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYCOMMENTS__FIELD_NAME.field_name)

    def set_SBA_AssayDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayDescription' on this record model
        """
        self.set_field_value(self.SBA_ASSAYDESCRIPTION__FIELD_NAME.field_name, value)

    def get_SBA_AssayDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayDescription' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYDESCRIPTION__FIELD_NAME.field_name)

    def set_SBA_AssayId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayId' on this record model
        """
        self.set_field_value(self.SBA_ASSAYID__FIELD_NAME.field_name, value)

    def get_SBA_AssayId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayId' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYID__FIELD_NAME.field_name)

    def set_SBA_AssayInstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayInstrumentType' on this record model
        """
        self.set_field_value(self.SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_SBA_AssayInstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayInstrumentType' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_SBA_AssayMethodStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayMethodStatus' on this record model
        """
        self.set_field_value(self.SBA_ASSAYMETHODSTATUS__FIELD_NAME.field_name, value)

    def get_SBA_AssayMethodStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayMethodStatus' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYMETHODSTATUS__FIELD_NAME.field_name)

    def set_SBA_AssayType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayType' on this record model
        """
        self.set_field_value(self.SBA_ASSAYTYPE__FIELD_NAME.field_name, value)

    def get_SBA_AssayType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayType' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYTYPE__FIELD_NAME.field_name)

    def set_SBA_BiologicalMatrix_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_BiologicalMatrix' on this record model
        """
        self.set_field_value(self.SBA_BIOLOGICALMATRIX__FIELD_NAME.field_name, value)

    def get_SBA_BiologicalMatrix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_BiologicalMatrix' from this record model
        """
        return self.get_field_value(self.SBA_BIOLOGICALMATRIX__FIELD_NAME.field_name)

    def set_SBA_CVOfLLOQSTD_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CVOfLLOQSTD' on this record model
        """
        self.set_field_value(self.SBA_CVOFLLOQSTD__FIELD_NAME.field_name, value)

    def get_SBA_CVOfLLOQSTD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CVOfLLOQSTD' from this record model
        """
        return self.get_field_value(self.SBA_CVOFLLOQSTD__FIELD_NAME.field_name)

    def set_SBA_CVOfQC_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CVOfQC' on this record model
        """
        self.set_field_value(self.SBA_CVOFQC__FIELD_NAME.field_name, value)

    def get_SBA_CVOfQC_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CVOfQC' from this record model
        """
        return self.get_field_value(self.SBA_CVOFQC__FIELD_NAME.field_name)

    def set_SBA_CVOfSTD_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CVOfSTD' on this record model
        """
        self.set_field_value(self.SBA_CVOFSTD__FIELD_NAME.field_name, value)

    def get_SBA_CVOfSTD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CVOfSTD' from this record model
        """
        return self.get_field_value(self.SBA_CVOFSTD__FIELD_NAME.field_name)

    def set_SBA_CVOfUnknownSample_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CVOfUnknownSample' on this record model
        """
        self.set_field_value(self.SBA_CVOFUNKNOWNSAMPLE__FIELD_NAME.field_name, value)

    def get_SBA_CVOfUnknownSample_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CVOfUnknownSample' from this record model
        """
        return self.get_field_value(self.SBA_CVOFUNKNOWNSAMPLE__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.RecordId' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaSBA_MaxMeanBiasForLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForLLOQ' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MAXMEANBIASFORLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaSBA_MaxMeanBiasForLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MAXMEANBIASFORLLOQ__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaSBA_MaxMeanBiasForNonLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForNonLLOQ' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MAXMEANBIASFORNONLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaSBA_MaxMeanBiasForNonLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForNonLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MAXMEANBIASFORNONLLOQ__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaSBA_MinOfSTDLevels_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.SBA_MinOfSTDLevels' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINOFSTDLEVELS__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaSBA_MinOfSTDLevels_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.SBA_MinOfSTDLevels' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINOFSTDLEVELS__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaSBA_MinPassRatePerSTDLevel_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.SBA_MinPassRatePerSTDLevel' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINPASSRATEPERSTDLEVEL__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaSBA_MinPassRatePerSTDLevel_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.SBA_MinPassRatePerSTDLevel' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINPASSRATEPERSTDLEVEL__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaSBA_MinSTDPassRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.SBA_MinSTDPassRate' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINSTDPASSRATE__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaSBA_MinSTDPassRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.SBA_MinSTDPassRate' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINSTDPASSRATE__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.RecordId' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaSBA_MaxCarryoverAgainstIS_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstIS' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_SBA_MAXCARRYOVERAGAINSTIS__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaSBA_MaxCarryoverAgainstIS_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstIS' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_SBA_MAXCARRYOVERAGAINSTIS__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaSBA_MaxCarryoverAgainstLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstLLOQ' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_SBA_MAXCARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaSBA_MaxCarryoverAgainstLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_SBA_MAXCARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_ConcentrationUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConcentrationUnits' on this record model
        """
        self.set_field_value(self.SBA_CONCENTRATIONUNITS__FIELD_NAME.field_name, value)

    def get_SBA_ConcentrationUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConcentrationUnits' from this record model
        """
        return self.get_field_value(self.SBA_CONCENTRATIONUNITS__FIELD_NAME.field_name)

    def set_SBA_ISName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ISName' on this record model
        """
        self.set_field_value(self.SBA_ISNAME__FIELD_NAME.field_name, value)

    def get_SBA_ISName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ISName' from this record model
        """
        return self.get_field_value(self.SBA_ISNAME__FIELD_NAME.field_name)

    def set_SBA_ImportDataFormat_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ImportDataFormat' on this record model
        """
        self.set_field_value(self.SBA_IMPORTDATAFORMAT__FIELD_NAME.field_name, value)

    def get_SBA_ImportDataFormat_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ImportDataFormat' from this record model
        """
        return self.get_field_value(self.SBA_IMPORTDATAFORMAT__FIELD_NAME.field_name)

    def set_SBA_IsActive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsActive' on this record model
        """
        self.set_field_value(self.SBA_ISACTIVE__FIELD_NAME.field_name, value)

    def get_SBA_IsActive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsActive' from this record model
        """
        return self.get_field_value(self.SBA_ISACTIVE__FIELD_NAME.field_name)

    def set_SBA_MasterAssayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_MasterAssayName' on this record model
        """
        self.set_field_value(self.SBA_MASTERASSAYNAME__FIELD_NAME.field_name, value)

    def get_SBA_MasterAssayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_MasterAssayName' from this record model
        """
        return self.get_field_value(self.SBA_MASTERASSAYNAME__FIELD_NAME.field_name)

    def set_SBA_MinIsrPassRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MinIsrPassRate' on this record model
        """
        self.set_field_value(self.SBA_MINISRPASSRATE__FIELD_NAME.field_name, value)

    def get_SBA_MinIsrPassRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MinIsrPassRate' from this record model
        """
        return self.get_field_value(self.SBA_MINISRPASSRATE__FIELD_NAME.field_name)

    def set_SBA_RecoveryCriteriaCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RecoveryCriteria.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryCriteriaCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RecoveryCriteria.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_RecoveryCriteriaDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_RecoveryCriteria.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryCriteriaDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_RecoveryCriteria.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_RecoveryCriteriaRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_RecoveryCriteria.RecordId' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYCRITERIA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryCriteriaRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_RecoveryCriteria.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYCRITERIA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_RecoveryCriteriaSBA_MaxMinRecoveryDiffLimit_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_RecoveryCriteria.SBA_MaxMinRecoveryDiffLimit' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYCRITERIA_EXT_SBA_MAXMINRECOVERYDIFFLIMIT__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryCriteriaSBA_MaxMinRecoveryDiffLimit_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_RecoveryCriteria.SBA_MaxMinRecoveryDiffLimit' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYCRITERIA_EXT_SBA_MAXMINRECOVERYDIFFLIMIT__FIELD_NAME.field_name)

    def set_SBA_RecoveryCriteriaVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RecoveryCriteria.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryCriteriaVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RecoveryCriteria.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_RecoveryCriteriaVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_RecoveryCriteria.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryCriteriaVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_RecoveryCriteria.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_RegressionType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RegressionType' on this record model
        """
        self.set_field_value(self.SBA_REGRESSIONTYPE__FIELD_NAME.field_name, value)

    def get_SBA_RegressionType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RegressionType' from this record model
        """
        return self.get_field_value(self.SBA_REGRESSIONTYPE__FIELD_NAME.field_name)

    def set_SBA_RequiredValidationParam_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RequiredValidationParam' on this record model
        """
        self.set_field_value(self.SBA_REQUIREDVALIDATIONPARAM__FIELD_NAME.field_name, value)

    def get_SBA_RequiredValidationParam_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RequiredValidationParam' from this record model
        """
        return self.get_field_value(self.SBA_REQUIREDVALIDATIONPARAM__FIELD_NAME.field_name)

    def set_SBA_RunAcceptanceConfig_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RunAcceptanceConfig' on this record model
        """
        self.set_field_value(self.SBA_RUNACCEPTANCECONFIG__FIELD_NAME.field_name, value)

    def get_SBA_RunAcceptanceConfig_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RunAcceptanceConfig' from this record model
        """
        return self.get_field_value(self.SBA_RUNACCEPTANCECONFIG__FIELD_NAME.field_name)

    def set_SBA_SampleInsertionMethod_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SampleInsertionMethod' on this record model
        """
        self.set_field_value(self.SBA_SAMPLEINSERTIONMETHOD__FIELD_NAME.field_name, value)

    def get_SBA_SampleInsertionMethod_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SampleInsertionMethod' from this record model
        """
        return self.get_field_value(self.SBA_SAMPLEINSERTIONMETHOD__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.RecordId' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaSBA_MaxBlankISRatio_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.SBA_MaxBlankISRatio' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_SBA_MAXBLANKISRATIO__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaSBA_MaxBlankISRatio_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.SBA_MaxBlankISRatio' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_SBA_MAXBLANKISRATIO__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaSBA_MaxBlankLLOQRatio_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.SBA_MaxBlankLLOQRatio' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_SBA_MAXBLANKLLOQRATIO__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaSBA_MaxBlankLLOQRatio_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.SBA_MaxBlankLLOQRatio' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_SBA_MAXBLANKLLOQRATIO__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaSBA_MinNumOfPassedSamples_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.SBA_MinNumOfPassedSamples' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_SBA_MINNUMOFPASSEDSAMPLES__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaSBA_MinNumOfPassedSamples_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.SBA_MinNumOfPassedSamples' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_SBA_MINNUMOFPASSEDSAMPLES__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_SensitivityCriteriaCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SensitivityCriteria.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityCriteriaCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SensitivityCriteria.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_SensitivityCriteriaDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SensitivityCriteria.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityCriteriaDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SensitivityCriteria.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_SensitivityCriteriaRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SensitivityCriteria.RecordId' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityCriteriaRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SensitivityCriteria.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_SensitivityCriteriaSBA_MaxBias_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_SensitivityCriteria.SBA_MaxBias' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_SBA_MAXBIAS__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityCriteriaSBA_MaxBias_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_SensitivityCriteria.SBA_MaxBias' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_SBA_MAXBIAS__FIELD_NAME.field_name)

    def set_SBA_SensitivityCriteriaVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SensitivityCriteria.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityCriteriaVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SensitivityCriteria.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_SensitivityCriteriaVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SensitivityCriteria.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityCriteriaVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SensitivityCriteria.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_Species_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Species' on this record model
        """
        self.set_field_value(self.SBA_SPECIES__FIELD_NAME.field_name, value)

    def get_SBA_Species_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Species' from this record model
        """
        return self.get_field_value(self.SBA_SPECIES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_MasterAssayQCModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_MasterAssayQC
    Data Type Display Name: QC (QCs)
    Fields: SBA_DilutionFactor, CreatedBy, DataRecordName, SBA_WellPositions, SBA_NumberOfReplicates, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SBA_QcName, SBA_FlagPctDiff
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_MasterAssayQC'
    DISPLAY_NAME: Final[str] = "QC"
    PLURAL_DISPLAY_NAME: Final[str] = "QCs"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_DILUTIONFACTOR__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_DilutionFactor", FieldType.DOUBLE, display_name="Dilution Factor")
    SBA_FLAGPCTDIFF__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_FlagPctDiff", FieldType.DOUBLE, display_name="Max Bias %")
    SBA_NUMBEROFREPLICATES__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_NumberOfReplicates", FieldType.INTEGER, display_name="Planned # of Replicates")
    SBA_QCNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_QcName", FieldType.STRING, display_name="QC Name")
    SBA_WELLPOSITIONS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_WellPositions", FieldType.STRING, display_name="Well Positions")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_DilutionFactor_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_DilutionFactor' on this record model
        """
        self.set_field_value(self.SBA_DILUTIONFACTOR__FIELD_NAME.field_name, value)

    def get_SBA_DilutionFactor_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_DilutionFactor' from this record model
        """
        return self.get_field_value(self.SBA_DILUTIONFACTOR__FIELD_NAME.field_name)

    def set_SBA_FlagPctDiff_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_FlagPctDiff' on this record model
        """
        self.set_field_value(self.SBA_FLAGPCTDIFF__FIELD_NAME.field_name, value)

    def get_SBA_FlagPctDiff_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_FlagPctDiff' from this record model
        """
        return self.get_field_value(self.SBA_FLAGPCTDIFF__FIELD_NAME.field_name)

    def set_SBA_NumberOfReplicates_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_NumberOfReplicates' on this record model
        """
        self.set_field_value(self.SBA_NUMBEROFREPLICATES__FIELD_NAME.field_name, value)

    def get_SBA_NumberOfReplicates_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_NumberOfReplicates' from this record model
        """
        return self.get_field_value(self.SBA_NUMBEROFREPLICATES__FIELD_NAME.field_name)

    def set_SBA_QcName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_QcName' on this record model
        """
        self.set_field_value(self.SBA_QCNAME__FIELD_NAME.field_name, value)

    def get_SBA_QcName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_QcName' from this record model
        """
        return self.get_field_value(self.SBA_QCNAME__FIELD_NAME.field_name)

    def set_SBA_WellPositions_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_WellPositions' on this record model
        """
        self.set_field_value(self.SBA_WELLPOSITIONS__FIELD_NAME.field_name, value)

    def get_SBA_WellPositions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_WellPositions' from this record model
        """
        return self.get_field_value(self.SBA_WELLPOSITIONS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_MasterAssayRunModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_MasterAssayRun
    Data Type Display Name: Master Assay Run (Master Assay Runs)
    Fields: SBA_AssayRunType, SBA_CalibrationCurveCriteria.VeloxLastModifiedDate, SBA_RecoveryCriteria.RelatedRecord752, SBA_AccuracyAndPrecCriteria.VeloxLastModifiedDate, SBA_SensitivityCriteria.VeloxLastModifiedBy, SBA_ValidatedBy, SBA_RecoveryCriteria.VeloxLastModifiedBy, SBA_CarryOverCriteria.RelatedRecord689, SBA_SelectivityCriteria.RelatedRecord689, SBA_CompletedBy, SBA_SensitivityCriteria.SBA_MaxBias, SBA_SensitivityCriteria.CreatedBy, SBA_CarryOverCriteria.CreatedBy, CreatedBy, SBA_OverrideComment, SBA_SelectivityCriteria.RelatedRecord752, SBA_RecoveryCriteria.VeloxLastModifiedDate, SBA_SelectivityCriteria.DataRecordName, SBA_SelectivityCriteria.SBA_MinNumOfPassedSamples, SBA_AccuracyAndPrecCriteria.SBA_MinReplicateNumIntra, SBA_IsPlatingComplete, SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForLLOQ, SBA_RunId, SBA_CalibrationCurveCriteria.CreatedBy, SBA_CarryOverCriteria.DataRecordName, SBA_SensitivityCriteria.VeloxLastModifiedDate, SBA_SelectivityCriteria.SBA_MaxBlankISRatio, DataRecordName, SBA_RunResult, SBA_RecoveryCriteria.DateCreated, SBA_ParameterName, SBA_AccuracyAndPrecCriteria.RelatedRecord752, SBA_ValidationParameter, SBA_Instrument, SBA_CalibrationCurveCriteria.SBA_MinOfSTDLevels, SBA_CalibrationCurveCriteria.SBA_MinPassRatePerSTDLevel, SBA_AccuracyAndPrecCriteria.DateCreated, SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstIS, SBA_RecoveryCriteria.SBA_MaxMinRecoveryDiffLimit, SBA_AccuracyAndPrecCriteria.RecordId, SBA_RecoveryCriteria.DataRecordName, SBA_SensitivityCriteria.RelatedRecord752, SBA_CalibrationCurveCriteria.RelatedRecord689, SBA_CarryOverCriteria.RecordId, DateCreated, SBA_CalibrationCurveCriteria.DataRecordName, SBA_CarryOverCriteria.VeloxLastModifiedBy, SBA_RecoveryCriteria.CreatedBy, SBA_DateCompleted, SBA_Description, SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstLLOQ, SBA_ValidationDate, SBA_AccuracyAndPrecCriteria.CreatedBy, SBA_AccuracyAndPrecCriteria.RelatedRecord689, SBA_MaxQCCV, SBA_SelectivityCriteria.RecordId, VeloxLastModifiedBy, SBA_AccuracyAndPrecCriteria.DataRecordName, SBA_CalibrationCurveCriteria.DateCreated, SBA_SelectivityCriteria.VeloxLastModifiedBy, SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForNonLLOQ, SBA_InstrumentOutputDataType, SBA_AccuracyAndPrecCriteria.SBA_MaxMeanBiasIntra, SBA_SensitivityCriteria.DateCreated, SBA_CalibrationCurveCriteria.SBA_MinSTDPassRate, SBA_CalibrationCurveCriteria.RelatedRecord752, SBA_RecoveryCriteria.RelatedRecord689, SBA_SelectivityCriteria.DateCreated, SBA_CarryOverCriteria.DateCreated, SBA_SelectivityCriteria.VeloxLastModifiedDate, SBA_AccuracyAndPrecCriteria.SBA_MaxCVIntra, SBA_CarryOverCriteria.VeloxLastModifiedDate, SBA_SensitivityCriteria.RelatedRecord689, SBA_ValidationResult, SBA_SelectivityCriteria.CreatedBy, SBA_CarryOverCriteria.RelatedRecord752, SBA_RecoveryCriteria.RecordId, SBA_CalibrationCurveCriteria.RecordId, SBA_CalibrationCurveCriteria.VeloxLastModifiedBy, VeloxLastModifiedDate, SBA_AccuracyAndPrecCriteria.VeloxLastModifiedBy, SBA_SelectivityCriteria.SBA_MaxBlankLLOQRatio, SBA_SensitivityCriteria.RecordId, SBA_AssayInstrumentType, SBA_SensitivityCriteria.DataRecordName
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_MasterAssayRun'
    DISPLAY_NAME: Final[str] = "Master Assay Run"
    PLURAL_DISPLAY_NAME: Final[str] = "Master Assay Runs"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ACCURACYANDPRECCRITERIA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_ACCURACYANDPRECCRITERIA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_ACCURACYANDPRECCRITERIA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ACCURACYANDPRECCRITERIA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_ACCURACYANDPRECCRITERIA_EXT_RELATEDRECORD689__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.RelatedRecord689", FieldType.PARENTLINK, display_name="Linked Master Assay")
    SBA_ACCURACYANDPRECCRITERIA_EXT_RELATEDRECORD752__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.RelatedRecord752", FieldType.PARENTLINK, display_name="Linked Master Assay Run")
    SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MAXCVINTRA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.SBA_MaxCVIntra", FieldType.DOUBLE, display_name="Max CV%")
    SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MAXMEANBIASINTRA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.SBA_MaxMeanBiasIntra", FieldType.DOUBLE, display_name="Max Mean Bias%")
    SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MINREPLICATENUMINTRA__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.SBA_MinReplicateNumIntra", FieldType.INTEGER, display_name="Minimum Replicate # of QCs")
    SBA_ACCURACYANDPRECCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_ACCURACYANDPRECCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AccuracyAndPrecCriteria.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayInstrumentType", FieldType.SELECTION, display_name="Assay Instrument Type")
    SBA_ASSAYRUNTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AssayRunType", FieldType.SELECTION, display_name="Assay Run Type")
    SBA_CALIBRATIONCURVECRITERIA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_CALIBRATIONCURVECRITERIA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_CALIBRATIONCURVECRITERIA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_CALIBRATIONCURVECRITERIA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_CALIBRATIONCURVECRITERIA_EXT_RELATEDRECORD689__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.RelatedRecord689", FieldType.PARENTLINK, display_name="Linked Master Assay")
    SBA_CALIBRATIONCURVECRITERIA_EXT_RELATEDRECORD752__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.RelatedRecord752", FieldType.PARENTLINK, display_name="Linked Master Assay Run")
    SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MAXMEANBIASFORLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForLLOQ", FieldType.DOUBLE, display_name="Max Mean Bias% for LLOQ")
    SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MAXMEANBIASFORNONLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForNonLLOQ", FieldType.DOUBLE, display_name="Max Mean Bias% for non-LLOQ")
    SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINOFSTDLEVELS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.SBA_MinOfSTDLevels", FieldType.LONG, display_name="Min # of STD Levels")
    SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINPASSRATEPERSTDLEVEL__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.SBA_MinPassRatePerSTDLevel", FieldType.DOUBLE, display_name="Min Pass Rate per STD Level")
    SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINSTDPASSRATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.SBA_MinSTDPassRate", FieldType.DOUBLE, display_name="Min STD Pass Rate")
    SBA_CALIBRATIONCURVECRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_CALIBRATIONCURVECRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CalibrationCurveCriteria.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_CARRYOVERCRITERIA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_CARRYOVERCRITERIA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_CARRYOVERCRITERIA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_CARRYOVERCRITERIA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_CARRYOVERCRITERIA_EXT_RELATEDRECORD689__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.RelatedRecord689", FieldType.PARENTLINK, display_name="Linked Master Assay")
    SBA_CARRYOVERCRITERIA_EXT_RELATEDRECORD752__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.RelatedRecord752", FieldType.PARENTLINK, display_name="Linked Master Assay Run")
    SBA_CARRYOVERCRITERIA_EXT_SBA_MAXCARRYOVERAGAINSTIS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstIS", FieldType.DOUBLE, display_name="Max Carry-over against IS")
    SBA_CARRYOVERCRITERIA_EXT_SBA_MAXCARRYOVERAGAINSTLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstLLOQ", FieldType.DOUBLE, display_name="Max Carry-over against LLOQ")
    SBA_CARRYOVERCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_CARRYOVERCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CarryOverCriteria.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_COMPLETEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_CompletedBy", FieldType.STRING, display_name="Completed By")
    SBA_DATECOMPLETED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_DateCompleted", FieldType.DATE, display_name="Date Completed")
    SBA_DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_Description", FieldType.STRING, display_name="Description")
    SBA_INSTRUMENT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_Instrument", FieldType.SELECTION, display_name="Instrument")
    SBA_INSTRUMENTOUTPUTDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_InstrumentOutputDataType", FieldType.SELECTION, display_name="Output Mode")
    SBA_ISPLATINGCOMPLETE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_IsPlatingComplete", FieldType.BOOLEAN, display_name="Is Plating Complete")
    SBA_MAXQCCV__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxQCCV", FieldType.DOUBLE, display_name="Max QC CV%")
    SBA_OVERRIDECOMMENT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_OverrideComment", FieldType.STRING, display_name="Override Comment")
    SBA_PARAMETERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ParameterName", FieldType.PICKLIST, display_name="Parameter Name")
    SBA_RECOVERYCRITERIA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_RECOVERYCRITERIA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_RECOVERYCRITERIA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_RECOVERYCRITERIA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_RECOVERYCRITERIA_EXT_RELATEDRECORD689__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.RelatedRecord689", FieldType.PARENTLINK, display_name="Linked Master Assay")
    SBA_RECOVERYCRITERIA_EXT_RELATEDRECORD752__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.RelatedRecord752", FieldType.PARENTLINK, display_name="Linked Master Assay Run")
    SBA_RECOVERYCRITERIA_EXT_SBA_MAXMINRECOVERYDIFFLIMIT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.SBA_MaxMinRecoveryDiffLimit", FieldType.DOUBLE, display_name="Max&Min Recovery% Diff Limit")
    SBA_RECOVERYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_RECOVERYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RecoveryCriteria.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_RUNID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RunId", FieldType.AUTO_ACCESSION, display_name="Run Id")
    SBA_RUNRESULT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_RunResult", FieldType.PICKLIST, display_name="Run Result")
    SBA_SELECTIVITYCRITERIA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_SELECTIVITYCRITERIA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_SELECTIVITYCRITERIA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_SELECTIVITYCRITERIA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_SELECTIVITYCRITERIA_EXT_RELATEDRECORD689__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.RelatedRecord689", FieldType.PARENTLINK, display_name="Linked Master Assay")
    SBA_SELECTIVITYCRITERIA_EXT_RELATEDRECORD752__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.RelatedRecord752", FieldType.PARENTLINK, display_name="Linked Master Assay Run")
    SBA_SELECTIVITYCRITERIA_EXT_SBA_MAXBLANKISRATIO__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.SBA_MaxBlankISRatio", FieldType.DOUBLE, display_name="Max %IS")
    SBA_SELECTIVITYCRITERIA_EXT_SBA_MAXBLANKLLOQRATIO__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.SBA_MaxBlankLLOQRatio", FieldType.DOUBLE, display_name="Max %LLOQ")
    SBA_SELECTIVITYCRITERIA_EXT_SBA_MINNUMOFPASSEDSAMPLES__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.SBA_MinNumOfPassedSamples", FieldType.LONG, display_name="Min # of Passed BLANK Samples")
    SBA_SELECTIVITYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_SELECTIVITYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SelectivityCriteria.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_SENSITIVITYCRITERIA_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.CreatedBy", FieldType.STRING, display_name="Created By")
    SBA_SENSITIVITYCRITERIA_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    SBA_SENSITIVITYCRITERIA_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_SENSITIVITYCRITERIA_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.RecordId", FieldType.LONG, display_name="Record ID")
    SBA_SENSITIVITYCRITERIA_EXT_RELATEDRECORD689__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.RelatedRecord689", FieldType.PARENTLINK, display_name="Linked Master Assay")
    SBA_SENSITIVITYCRITERIA_EXT_RELATEDRECORD752__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.RelatedRecord752", FieldType.PARENTLINK, display_name="Linked Master Assay Run")
    SBA_SENSITIVITYCRITERIA_EXT_SBA_MAXBIAS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.SBA_MaxBias", FieldType.DOUBLE, display_name="Max Bias%")
    SBA_SENSITIVITYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    SBA_SENSITIVITYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_SensitivityCriteria.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    SBA_VALIDATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ValidatedBy", FieldType.STRING, display_name="Validated By")
    SBA_VALIDATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ValidationDate", FieldType.DATE, display_name="Validation Date")
    SBA_VALIDATIONPARAMETER__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ValidationParameter", FieldType.SELECTION, display_name="Validation Parameter")
    SBA_VALIDATIONRESULT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ValidationResult", FieldType.PICKLIST, display_name="Validation Result")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.RecordId' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaSBA_MaxCVIntra_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.SBA_MaxCVIntra' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MAXCVINTRA__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaSBA_MaxCVIntra_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.SBA_MaxCVIntra' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MAXCVINTRA__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaSBA_MaxMeanBiasIntra_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.SBA_MaxMeanBiasIntra' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MAXMEANBIASINTRA__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaSBA_MaxMeanBiasIntra_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.SBA_MaxMeanBiasIntra' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MAXMEANBIASINTRA__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaSBA_MinReplicateNumIntra_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.SBA_MinReplicateNumIntra' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MINREPLICATENUMINTRA__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaSBA_MinReplicateNumIntra_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.SBA_MinReplicateNumIntra' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_SBA_MINREPLICATENUMINTRA__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_AccuracyAndPrecCriteriaVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_AccuracyAndPrecCriteria.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_AccuracyAndPrecCriteriaVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_AccuracyAndPrecCriteria.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_ACCURACYANDPRECCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_AssayInstrumentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayInstrumentType' on this record model
        """
        self.set_field_value(self.SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME.field_name, value)

    def get_SBA_AssayInstrumentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayInstrumentType' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYINSTRUMENTTYPE__FIELD_NAME.field_name)

    def set_SBA_AssayRunType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_AssayRunType' on this record model
        """
        self.set_field_value(self.SBA_ASSAYRUNTYPE__FIELD_NAME.field_name, value)

    def get_SBA_AssayRunType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_AssayRunType' from this record model
        """
        return self.get_field_value(self.SBA_ASSAYRUNTYPE__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.RecordId' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaSBA_MaxMeanBiasForLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForLLOQ' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MAXMEANBIASFORLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaSBA_MaxMeanBiasForLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MAXMEANBIASFORLLOQ__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaSBA_MaxMeanBiasForNonLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForNonLLOQ' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MAXMEANBIASFORNONLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaSBA_MaxMeanBiasForNonLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.SBA_MaxMeanBiasForNonLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MAXMEANBIASFORNONLLOQ__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaSBA_MinOfSTDLevels_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.SBA_MinOfSTDLevels' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINOFSTDLEVELS__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaSBA_MinOfSTDLevels_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.SBA_MinOfSTDLevels' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINOFSTDLEVELS__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaSBA_MinPassRatePerSTDLevel_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.SBA_MinPassRatePerSTDLevel' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINPASSRATEPERSTDLEVEL__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaSBA_MinPassRatePerSTDLevel_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.SBA_MinPassRatePerSTDLevel' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINPASSRATEPERSTDLEVEL__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaSBA_MinSTDPassRate_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.SBA_MinSTDPassRate' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINSTDPASSRATE__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaSBA_MinSTDPassRate_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.SBA_MinSTDPassRate' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_SBA_MINSTDPASSRATE__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_CalibrationCurveCriteriaVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CalibrationCurveCriteria.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_CalibrationCurveCriteriaVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CalibrationCurveCriteria.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_CALIBRATIONCURVECRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.RecordId' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaSBA_MaxCarryoverAgainstIS_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstIS' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_SBA_MAXCARRYOVERAGAINSTIS__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaSBA_MaxCarryoverAgainstIS_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstIS' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_SBA_MAXCARRYOVERAGAINSTIS__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaSBA_MaxCarryoverAgainstLLOQ_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstLLOQ' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_SBA_MAXCARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaSBA_MaxCarryoverAgainstLLOQ_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.SBA_MaxCarryoverAgainstLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_SBA_MAXCARRYOVERAGAINSTLLOQ__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_CarryOverCriteriaVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_CarryOverCriteria.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_CARRYOVERCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_CarryOverCriteriaVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_CarryOverCriteria.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_CARRYOVERCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_CompletedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_CompletedBy' on this record model
        """
        self.set_field_value(self.SBA_COMPLETEDBY__FIELD_NAME.field_name, value)

    def get_SBA_CompletedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_CompletedBy' from this record model
        """
        return self.get_field_value(self.SBA_COMPLETEDBY__FIELD_NAME.field_name)

    def set_SBA_DateCompleted_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_DateCompleted' on this record model
        """
        self.set_field_value(self.SBA_DATECOMPLETED__FIELD_NAME.field_name, value)

    def get_SBA_DateCompleted_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_DateCompleted' from this record model
        """
        return self.get_field_value(self.SBA_DATECOMPLETED__FIELD_NAME.field_name)

    def set_SBA_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Description' on this record model
        """
        self.set_field_value(self.SBA_DESCRIPTION__FIELD_NAME.field_name, value)

    def get_SBA_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Description' from this record model
        """
        return self.get_field_value(self.SBA_DESCRIPTION__FIELD_NAME.field_name)

    def set_SBA_Instrument_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Instrument' on this record model
        """
        self.set_field_value(self.SBA_INSTRUMENT__FIELD_NAME.field_name, value)

    def get_SBA_Instrument_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Instrument' from this record model
        """
        return self.get_field_value(self.SBA_INSTRUMENT__FIELD_NAME.field_name)

    def set_SBA_InstrumentOutputDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_InstrumentOutputDataType' on this record model
        """
        self.set_field_value(self.SBA_INSTRUMENTOUTPUTDATATYPE__FIELD_NAME.field_name, value)

    def get_SBA_InstrumentOutputDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_InstrumentOutputDataType' from this record model
        """
        return self.get_field_value(self.SBA_INSTRUMENTOUTPUTDATATYPE__FIELD_NAME.field_name)

    def set_SBA_IsPlatingComplete_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsPlatingComplete' on this record model
        """
        self.set_field_value(self.SBA_ISPLATINGCOMPLETE__FIELD_NAME.field_name, value)

    def get_SBA_IsPlatingComplete_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsPlatingComplete' from this record model
        """
        return self.get_field_value(self.SBA_ISPLATINGCOMPLETE__FIELD_NAME.field_name)

    def set_SBA_MaxQCCV_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxQCCV' on this record model
        """
        self.set_field_value(self.SBA_MAXQCCV__FIELD_NAME.field_name, value)

    def get_SBA_MaxQCCV_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxQCCV' from this record model
        """
        return self.get_field_value(self.SBA_MAXQCCV__FIELD_NAME.field_name)

    def set_SBA_OverrideComment_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_OverrideComment' on this record model
        """
        self.set_field_value(self.SBA_OVERRIDECOMMENT__FIELD_NAME.field_name, value)

    def get_SBA_OverrideComment_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_OverrideComment' from this record model
        """
        return self.get_field_value(self.SBA_OVERRIDECOMMENT__FIELD_NAME.field_name)

    def set_SBA_ParameterName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ParameterName' on this record model
        """
        self.set_field_value(self.SBA_PARAMETERNAME__FIELD_NAME.field_name, value)

    def get_SBA_ParameterName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ParameterName' from this record model
        """
        return self.get_field_value(self.SBA_PARAMETERNAME__FIELD_NAME.field_name)

    def set_SBA_RecoveryCriteriaCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RecoveryCriteria.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryCriteriaCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RecoveryCriteria.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_RecoveryCriteriaDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_RecoveryCriteria.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryCriteriaDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_RecoveryCriteria.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_RecoveryCriteriaRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_RecoveryCriteria.RecordId' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYCRITERIA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryCriteriaRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_RecoveryCriteria.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYCRITERIA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_RecoveryCriteriaSBA_MaxMinRecoveryDiffLimit_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_RecoveryCriteria.SBA_MaxMinRecoveryDiffLimit' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYCRITERIA_EXT_SBA_MAXMINRECOVERYDIFFLIMIT__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryCriteriaSBA_MaxMinRecoveryDiffLimit_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_RecoveryCriteria.SBA_MaxMinRecoveryDiffLimit' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYCRITERIA_EXT_SBA_MAXMINRECOVERYDIFFLIMIT__FIELD_NAME.field_name)

    def set_SBA_RecoveryCriteriaVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RecoveryCriteria.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryCriteriaVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RecoveryCriteria.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_RecoveryCriteriaVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_RecoveryCriteria.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_RECOVERYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_RecoveryCriteriaVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_RecoveryCriteria.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_RECOVERYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_RunId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RunId' on this record model
        """
        self.set_field_value(self.SBA_RUNID__FIELD_NAME.field_name, value)

    def get_SBA_RunId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RunId' from this record model
        """
        return self.get_field_value(self.SBA_RUNID__FIELD_NAME.field_name)

    def set_SBA_RunResult_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_RunResult' on this record model
        """
        self.set_field_value(self.SBA_RUNRESULT__FIELD_NAME.field_name, value)

    def get_SBA_RunResult_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_RunResult' from this record model
        """
        return self.get_field_value(self.SBA_RUNRESULT__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.RecordId' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaSBA_MaxBlankISRatio_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.SBA_MaxBlankISRatio' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_SBA_MAXBLANKISRATIO__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaSBA_MaxBlankISRatio_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.SBA_MaxBlankISRatio' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_SBA_MAXBLANKISRATIO__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaSBA_MaxBlankLLOQRatio_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.SBA_MaxBlankLLOQRatio' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_SBA_MAXBLANKLLOQRATIO__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaSBA_MaxBlankLLOQRatio_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.SBA_MaxBlankLLOQRatio' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_SBA_MAXBLANKLLOQRATIO__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaSBA_MinNumOfPassedSamples_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.SBA_MinNumOfPassedSamples' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_SBA_MINNUMOFPASSEDSAMPLES__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaSBA_MinNumOfPassedSamples_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.SBA_MinNumOfPassedSamples' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_SBA_MINNUMOFPASSEDSAMPLES__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_SelectivityCriteriaVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SelectivityCriteria.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_SelectivityCriteriaVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SelectivityCriteria.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_SELECTIVITYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_SensitivityCriteriaCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SensitivityCriteria.CreatedBy' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityCriteriaCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SensitivityCriteria.CreatedBy' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_SBA_SensitivityCriteriaDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SensitivityCriteria.DateCreated' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityCriteriaDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SensitivityCriteria.DateCreated' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_SBA_SensitivityCriteriaRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SensitivityCriteria.RecordId' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityCriteriaRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SensitivityCriteria.RecordId' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_RECORDID__FIELD_NAME.field_name)

    def set_SBA_SensitivityCriteriaSBA_MaxBias_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_SensitivityCriteria.SBA_MaxBias' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_SBA_MAXBIAS__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityCriteriaSBA_MaxBias_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_SensitivityCriteria.SBA_MaxBias' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_SBA_MAXBIAS__FIELD_NAME.field_name)

    def set_SBA_SensitivityCriteriaVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_SensitivityCriteria.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityCriteriaVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_SensitivityCriteria.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_SBA_SensitivityCriteriaVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_SensitivityCriteria.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_SBA_SensitivityCriteriaVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_SensitivityCriteria.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.SBA_SENSITIVITYCRITERIA_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_SBA_ValidatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ValidatedBy' on this record model
        """
        self.set_field_value(self.SBA_VALIDATEDBY__FIELD_NAME.field_name, value)

    def get_SBA_ValidatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ValidatedBy' from this record model
        """
        return self.get_field_value(self.SBA_VALIDATEDBY__FIELD_NAME.field_name)

    def set_SBA_ValidationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_ValidationDate' on this record model
        """
        self.set_field_value(self.SBA_VALIDATIONDATE__FIELD_NAME.field_name, value)

    def get_SBA_ValidationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_ValidationDate' from this record model
        """
        return self.get_field_value(self.SBA_VALIDATIONDATE__FIELD_NAME.field_name)

    def set_SBA_ValidationParameter_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ValidationParameter' on this record model
        """
        self.set_field_value(self.SBA_VALIDATIONPARAMETER__FIELD_NAME.field_name, value)

    def get_SBA_ValidationParameter_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ValidationParameter' from this record model
        """
        return self.get_field_value(self.SBA_VALIDATIONPARAMETER__FIELD_NAME.field_name)

    def set_SBA_ValidationResult_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ValidationResult' on this record model
        """
        self.set_field_value(self.SBA_VALIDATIONRESULT__FIELD_NAME.field_name, value)

    def get_SBA_ValidationResult_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ValidationResult' from this record model
        """
        return self.get_field_value(self.SBA_VALIDATIONRESULT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_MasterAssayStandardModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_MasterAssayStandard
    Data Type Display Name: Standard (Standards)
    Fields: CreatedBy, SBA_StandardName, DataRecordName, SBA_WellPositions, VeloxLastModifiedDate, SBA_NumberOfReplicates, VeloxLastModifiedBy, DateCreated, SBA_FlagPctDiff
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_MasterAssayStandard'
    DISPLAY_NAME: Final[str] = "Standard"
    PLURAL_DISPLAY_NAME: Final[str] = "Standards"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_FLAGPCTDIFF__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_FlagPctDiff", FieldType.DOUBLE, display_name="Max Bias %")
    SBA_NUMBEROFREPLICATES__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_NumberOfReplicates", FieldType.INTEGER, display_name="Planned # of Replicates")
    SBA_STANDARDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_StandardName", FieldType.STRING, display_name="Standard Name")
    SBA_WELLPOSITIONS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_WellPositions", FieldType.STRING, display_name="Well Positions")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_FlagPctDiff_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_FlagPctDiff' on this record model
        """
        self.set_field_value(self.SBA_FLAGPCTDIFF__FIELD_NAME.field_name, value)

    def get_SBA_FlagPctDiff_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_FlagPctDiff' from this record model
        """
        return self.get_field_value(self.SBA_FLAGPCTDIFF__FIELD_NAME.field_name)

    def set_SBA_NumberOfReplicates_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_NumberOfReplicates' on this record model
        """
        self.set_field_value(self.SBA_NUMBEROFREPLICATES__FIELD_NAME.field_name, value)

    def get_SBA_NumberOfReplicates_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_NumberOfReplicates' from this record model
        """
        return self.get_field_value(self.SBA_NUMBEROFREPLICATES__FIELD_NAME.field_name)

    def set_SBA_StandardName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_StandardName' on this record model
        """
        self.set_field_value(self.SBA_STANDARDNAME__FIELD_NAME.field_name, value)

    def get_SBA_StandardName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_StandardName' from this record model
        """
        return self.get_field_value(self.SBA_STANDARDNAME__FIELD_NAME.field_name)

    def set_SBA_WellPositions_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_WellPositions' on this record model
        """
        self.set_field_value(self.SBA_WELLPOSITIONS__FIELD_NAME.field_name, value)

    def get_SBA_WellPositions_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_WellPositions' from this record model
        """
        return self.get_field_value(self.SBA_WELLPOSITIONS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_RecoveryCriteriaModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_RecoveryCriteria
    Data Type Display Name: Recovery Criteria (Recovery Criteria)
    Fields: SBA_MaxMinRecoveryDiffLimit, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    The RecoveryCriteria Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_RecoveryCriteria'
    DISPLAY_NAME: Final[str] = "Recovery Criteria"
    PLURAL_DISPLAY_NAME: Final[str] = "Recovery Criteria"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_MAXMINRECOVERYDIFFLIMIT__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxMinRecoveryDiffLimit", FieldType.DOUBLE, display_name="Max&Min Recovery% Diff Limit")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxMinRecoveryDiffLimit_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxMinRecoveryDiffLimit' on this record model
        """
        self.set_field_value(self.SBA_MAXMINRECOVERYDIFFLIMIT__FIELD_NAME.field_name, value)

    def get_SBA_MaxMinRecoveryDiffLimit_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxMinRecoveryDiffLimit' from this record model
        """
        return self.get_field_value(self.SBA_MAXMINRECOVERYDIFFLIMIT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_RecoveryResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_RecoveryResults
    Data Type Display Name: Recovery Results (Recovery Results)
    Fields: SBA_MaxMinRecoveryDiff, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    The SBA_RecoveryResults Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_RecoveryResults'
    DISPLAY_NAME: Final[str] = "Recovery Results"
    PLURAL_DISPLAY_NAME: Final[str] = "Recovery Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_MAXMINRECOVERYDIFF__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxMinRecoveryDiff", FieldType.DOUBLE, display_name="Max&Min Recovery% Diff")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxMinRecoveryDiff_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxMinRecoveryDiff' on this record model
        """
        self.set_field_value(self.SBA_MAXMINRECOVERYDIFF__FIELD_NAME.field_name, value)

    def get_SBA_MaxMinRecoveryDiff_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxMinRecoveryDiff' from this record model
        """
        return self.get_field_value(self.SBA_MAXMINRECOVERYDIFF__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_RunAcceptanceConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_RunAcceptanceConfig
    Data Type Display Name: Run Acceptance Configuration (Run Acceptance Configurations)
    Fields: CreatedBy, DataRecordName, SBA_ConfigurationName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SBA_Description
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_RunAcceptanceConfig'
    DISPLAY_NAME: Final[str] = "Run Acceptance Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Run Acceptance Configurations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_CONFIGURATIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ConfigurationName", FieldType.STRING, display_name="Configuration Name")
    SBA_DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_Description", FieldType.STRING, display_name="Description")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_ConfigurationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ConfigurationName' on this record model
        """
        self.set_field_value(self.SBA_CONFIGURATIONNAME__FIELD_NAME.field_name, value)

    def get_SBA_ConfigurationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ConfigurationName' from this record model
        """
        return self.get_field_value(self.SBA_CONFIGURATIONNAME__FIELD_NAME.field_name)

    def set_SBA_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Description' on this record model
        """
        self.set_field_value(self.SBA_DESCRIPTION__FIELD_NAME.field_name, value)

    def get_SBA_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Description' from this record model
        """
        return self.get_field_value(self.SBA_DESCRIPTION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_RunAcceptanceCriterionModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_RunAcceptanceCriterion
    Data Type Display Name: Run Acceptance Criterion (Run Acceptance Criteria)
    Fields: CreatedBy, DateCreated, SBA_Sequence, SBA_Description, SBA_Operator, SBA_ThresholdValue, DataRecordName, SBA_IsYesNoOperator, SBA_ParameterName, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_RunAcceptanceCriterion'
    DISPLAY_NAME: Final[str] = "Run Acceptance Criterion"
    PLURAL_DISPLAY_NAME: Final[str] = "Run Acceptance Criteria"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_Description", FieldType.STRING, display_name="Description")
    SBA_ISYESNOOPERATOR__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_IsYesNoOperator", FieldType.BOOLEAN, display_name="Is Yes/No Operator?")
    SBA_OPERATOR__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_Operator", FieldType.PICKLIST, display_name="Comparison Operator")
    SBA_PARAMETERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ParameterName", FieldType.PICKLIST, display_name="Parameter Name")
    SBA_SEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_Sequence", FieldType.INTEGER, display_name="Sequence")
    SBA_THRESHOLDVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_ThresholdValue", FieldType.DOUBLE, display_name="Threshold Value")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Description' on this record model
        """
        self.set_field_value(self.SBA_DESCRIPTION__FIELD_NAME.field_name, value)

    def get_SBA_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Description' from this record model
        """
        return self.get_field_value(self.SBA_DESCRIPTION__FIELD_NAME.field_name)

    def set_SBA_IsYesNoOperator_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_IsYesNoOperator' on this record model
        """
        self.set_field_value(self.SBA_ISYESNOOPERATOR__FIELD_NAME.field_name, value)

    def get_SBA_IsYesNoOperator_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_IsYesNoOperator' from this record model
        """
        return self.get_field_value(self.SBA_ISYESNOOPERATOR__FIELD_NAME.field_name)

    def set_SBA_Operator_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_Operator' on this record model
        """
        self.set_field_value(self.SBA_OPERATOR__FIELD_NAME.field_name, value)

    def get_SBA_Operator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_Operator' from this record model
        """
        return self.get_field_value(self.SBA_OPERATOR__FIELD_NAME.field_name)

    def set_SBA_ParameterName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SBA_ParameterName' on this record model
        """
        self.set_field_value(self.SBA_PARAMETERNAME__FIELD_NAME.field_name, value)

    def get_SBA_ParameterName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SBA_ParameterName' from this record model
        """
        return self.get_field_value(self.SBA_PARAMETERNAME__FIELD_NAME.field_name)

    def set_SBA_Sequence_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_Sequence' on this record model
        """
        self.set_field_value(self.SBA_SEQUENCE__FIELD_NAME.field_name, value)

    def get_SBA_Sequence_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_Sequence' from this record model
        """
        return self.get_field_value(self.SBA_SEQUENCE__FIELD_NAME.field_name)

    def set_SBA_ThresholdValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_ThresholdValue' on this record model
        """
        self.set_field_value(self.SBA_THRESHOLDVALUE__FIELD_NAME.field_name, value)

    def get_SBA_ThresholdValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_ThresholdValue' from this record model
        """
        return self.get_field_value(self.SBA_THRESHOLDVALUE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_SelectivityCriteriaModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_SelectivityCriteria
    Data Type Display Name: Selectivity Criteria (Selectivity Criteria)
    Fields: CreatedBy, DataRecordName, SBA_MaxBlankLLOQRatio, SBA_MinNumOfPassedSamples, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SBA_MaxBlankISRatio
    The SelectivityCriteria Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_SelectivityCriteria'
    DISPLAY_NAME: Final[str] = "Selectivity Criteria"
    PLURAL_DISPLAY_NAME: Final[str] = "Selectivity Criteria"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_MAXBLANKISRATIO__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxBlankISRatio", FieldType.DOUBLE, display_name="Max %IS")
    SBA_MAXBLANKLLOQRATIO__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxBlankLLOQRatio", FieldType.DOUBLE, display_name="Max %LLOQ")
    SBA_MINNUMOFPASSEDSAMPLES__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MinNumOfPassedSamples", FieldType.LONG, display_name="Min # of Passed BLANK Samples")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxBlankISRatio_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxBlankISRatio' on this record model
        """
        self.set_field_value(self.SBA_MAXBLANKISRATIO__FIELD_NAME.field_name, value)

    def get_SBA_MaxBlankISRatio_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxBlankISRatio' from this record model
        """
        return self.get_field_value(self.SBA_MAXBLANKISRATIO__FIELD_NAME.field_name)

    def set_SBA_MaxBlankLLOQRatio_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxBlankLLOQRatio' on this record model
        """
        self.set_field_value(self.SBA_MAXBLANKLLOQRATIO__FIELD_NAME.field_name, value)

    def get_SBA_MaxBlankLLOQRatio_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxBlankLLOQRatio' from this record model
        """
        return self.get_field_value(self.SBA_MAXBLANKLLOQRATIO__FIELD_NAME.field_name)

    def set_SBA_MinNumOfPassedSamples_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_MinNumOfPassedSamples' on this record model
        """
        self.set_field_value(self.SBA_MINNUMOFPASSEDSAMPLES__FIELD_NAME.field_name, value)

    def get_SBA_MinNumOfPassedSamples_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_MinNumOfPassedSamples' from this record model
        """
        return self.get_field_value(self.SBA_MINNUMOFPASSEDSAMPLES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_SelectivityResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_SelectivityResults
    Data Type Display Name: Selectivity Results (Selectivity Results)
    Fields: SBA_NumPassedSamplesLLOQ, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SBA_NumPassedSamplesIS
    The SBA_SelectivityResults Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_SelectivityResults'
    DISPLAY_NAME: Final[str] = "Selectivity Results"
    PLURAL_DISPLAY_NAME: Final[str] = "Selectivity Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_NUMPASSEDSAMPLESIS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_NumPassedSamplesIS", FieldType.LONG, display_name="# of Passed Blanks against IS")
    SBA_NUMPASSEDSAMPLESLLOQ__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_NumPassedSamplesLLOQ", FieldType.LONG, display_name="# of Passed Blanks against LLOQ")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_NumPassedSamplesIS_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_NumPassedSamplesIS' on this record model
        """
        self.set_field_value(self.SBA_NUMPASSEDSAMPLESIS__FIELD_NAME.field_name, value)

    def get_SBA_NumPassedSamplesIS_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_NumPassedSamplesIS' from this record model
        """
        return self.get_field_value(self.SBA_NUMPASSEDSAMPLESIS__FIELD_NAME.field_name)

    def set_SBA_NumPassedSamplesLLOQ_field(self, value: Optional[int]):
        """
        Set data field with field name 'SBA_NumPassedSamplesLLOQ' on this record model
        """
        self.set_field_value(self.SBA_NUMPASSEDSAMPLESLLOQ__FIELD_NAME.field_name, value)

    def get_SBA_NumPassedSamplesLLOQ_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SBA_NumPassedSamplesLLOQ' from this record model
        """
        return self.get_field_value(self.SBA_NUMPASSEDSAMPLESLLOQ__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_SensitivityCriteriaModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_SensitivityCriteria
    Data Type Display Name: Sensitivity Criteria (Sensitivity Criteria)
    Fields: CreatedBy, DataRecordName, SBA_MaxBias, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    The SensitivityCriteria Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_SensitivityCriteria'
    DISPLAY_NAME: Final[str] = "Sensitivity Criteria"
    PLURAL_DISPLAY_NAME: Final[str] = "Sensitivity Criteria"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_MAXBIAS__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_MaxBias", FieldType.DOUBLE, display_name="Max Bias%")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_MaxBias_field(self, value: Optional[float]):
        """
        Set data field with field name 'SBA_MaxBias' on this record model
        """
        self.set_field_value(self.SBA_MAXBIAS__FIELD_NAME.field_name, value)

    def get_SBA_MaxBias_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SBA_MaxBias' from this record model
        """
        return self.get_field_value(self.SBA_MAXBIAS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SBA_SensitivityResultsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SBA_SensitivityResults
    Data Type Display Name: Sensitivity Results (Sensitivity Results)
    Fields: SBA_AllPassBiasCheck, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    The SBA_SensitivityResults Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'SBA_SensitivityResults'
    DISPLAY_NAME: Final[str] = "Sensitivity Results"
    PLURAL_DISPLAY_NAME: Final[str] = "Sensitivity Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SBA_ALLPASSBIASCHECK__FIELD_NAME: Final[WrapperField] = WrapperField("SBA_AllPassBiasCheck", FieldType.BOOLEAN, display_name="All Replicates Pass Bias Check")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SBA_AllPassBiasCheck_field(self, value: Optional[bool]):
        """
        Set data field with field name 'SBA_AllPassBiasCheck' on this record model
        """
        self.set_field_value(self.SBA_ALLPASSBIASCHECK__FIELD_NAME.field_name, value)

    def get_SBA_AllPassBiasCheck_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'SBA_AllPassBiasCheck' from this record model
        """
        return self.get_field_value(self.SBA_ALLPASSBIASCHECK__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SCIEXResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SCIEXResult
    Data Type Display Name: SCIEX Result (SCIEX Results)
    Fields: CalculatedConcentration, CreatedBy, DataRecordName, AnalytePeakName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, ISPeakArea, AnalytePeakArea
    """
    DATA_TYPE_NAME: Final[str] = 'SCIEXResult'
    DISPLAY_NAME: Final[str] = "SCIEX Result"
    PLURAL_DISPLAY_NAME: Final[str] = "SCIEX Results"
    ANALYTEPEAKAREA__FIELD_NAME: Final[WrapperField] = WrapperField("AnalytePeakArea", FieldType.DOUBLE, display_name="Analyte Peak Area (counts)")
    ANALYTEPEAKNAME__FIELD_NAME: Final[WrapperField] = WrapperField("AnalytePeakName", FieldType.STRING, display_name="Analyte Peak Name")
    CALCULATEDCONCENTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("CalculatedConcentration", FieldType.DOUBLE, display_name="Calculated Concentration (uM)")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ISPEAKAREA__FIELD_NAME: Final[WrapperField] = WrapperField("ISPeakArea", FieldType.DOUBLE, display_name="IS Peak Area (counts)")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AnalytePeakArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'AnalytePeakArea' on this record model
        """
        self.set_field_value(self.ANALYTEPEAKAREA__FIELD_NAME.field_name, value)

    def get_AnalytePeakArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AnalytePeakArea' from this record model
        """
        return self.get_field_value(self.ANALYTEPEAKAREA__FIELD_NAME.field_name)

    def set_AnalytePeakName_field(self, value: Optional[str]):
        """
        Set data field with field name 'AnalytePeakName' on this record model
        """
        self.set_field_value(self.ANALYTEPEAKNAME__FIELD_NAME.field_name, value)

    def get_AnalytePeakName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AnalytePeakName' from this record model
        """
        return self.get_field_value(self.ANALYTEPEAKNAME__FIELD_NAME.field_name)

    def set_CalculatedConcentration_field(self, value: Optional[float]):
        """
        Set data field with field name 'CalculatedConcentration' on this record model
        """
        self.set_field_value(self.CALCULATEDCONCENTRATION__FIELD_NAME.field_name, value)

    def get_CalculatedConcentration_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CalculatedConcentration' from this record model
        """
        return self.get_field_value(self.CALCULATEDCONCENTRATION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ISPeakArea_field(self, value: Optional[float]):
        """
        Set data field with field name 'ISPeakArea' on this record model
        """
        self.set_field_value(self.ISPEAKAREA__FIELD_NAME.field_name, value)

    def get_ISPeakArea_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ISPeakArea' from this record model
        """
        return self.get_field_value(self.ISPEAKAREA__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SDMSSubfolderModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SDMSSubfolder
    Data Type Display Name: SDMS Subfolder (SDMS Subfolders)
    Fields: FolderExists, Active, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, Folder
    """
    DATA_TYPE_NAME: Final[str] = 'SDMSSubfolder'
    DISPLAY_NAME: Final[str] = "SDMS Subfolder"
    PLURAL_DISPLAY_NAME: Final[str] = "SDMS Subfolders"
    ACTIVE__FIELD_NAME: Final[WrapperField] = WrapperField("Active", FieldType.BOOLEAN, display_name="Active")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FOLDER__FIELD_NAME: Final[WrapperField] = WrapperField("Folder", FieldType.STRING, display_name="Folder")
    FOLDEREXISTS__FIELD_NAME: Final[WrapperField] = WrapperField("FolderExists", FieldType.BOOLEAN, display_name="Folder Exists")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Active_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Active' on this record model
        """
        self.set_field_value(self.ACTIVE__FIELD_NAME.field_name, value)

    def get_Active_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Active' from this record model
        """
        return self.get_field_value(self.ACTIVE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Folder_field(self, value: Optional[str]):
        """
        Set data field with field name 'Folder' on this record model
        """
        self.set_field_value(self.FOLDER__FIELD_NAME.field_name, value)

    def get_Folder_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Folder' from this record model
        """
        return self.get_field_value(self.FOLDER__FIELD_NAME.field_name)

    def set_FolderExists_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FolderExists' on this record model
        """
        self.set_field_value(self.FOLDEREXISTS__FIELD_NAME.field_name, value)

    def get_FolderExists_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FolderExists' from this record model
        """
        return self.get_field_value(self.FOLDEREXISTS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SDMSWatchPointModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SDMSWatchPoint
    Data Type Display Name: SDMS Config (SDMS Configs)
    Fields: FilterFilesByPattern, CreatedBy, DateCreated, ScanFrequencyNumber, DataRecordName, SubFolderPattern, ScanFrequencyUnits, VeloxLastModifiedDate, SubFoldersScan, VeloxLastModifiedBy, FilePattern, UniqueFileEnforcement, WatcherDirectory
    """
    DATA_TYPE_NAME: Final[str] = 'SDMSWatchPoint'
    DISPLAY_NAME: Final[str] = "SDMS Config"
    PLURAL_DISPLAY_NAME: Final[str] = "SDMS Configs"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FILEPATTERN__FIELD_NAME: Final[WrapperField] = WrapperField("FilePattern", FieldType.STRING, display_name="File Pattern")
    FILTERFILESBYPATTERN__FIELD_NAME: Final[WrapperField] = WrapperField("FilterFilesByPattern", FieldType.BOOLEAN, display_name="Filter Files By Pattern")
    SCANFREQUENCYNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ScanFrequencyNumber", FieldType.INTEGER, display_name="Scan Frequency")
    SCANFREQUENCYUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("ScanFrequencyUnits", FieldType.SELECTION, display_name="Scan Frequency Units")
    SUBFOLDERPATTERN__FIELD_NAME: Final[WrapperField] = WrapperField("SubFolderPattern", FieldType.STRING, display_name="Sub-Folder Pattern")
    SUBFOLDERSSCAN__FIELD_NAME: Final[WrapperField] = WrapperField("SubFoldersScan", FieldType.SELECTION, display_name="Sub-Folders Scan")
    UNIQUEFILEENFORCEMENT__FIELD_NAME: Final[WrapperField] = WrapperField("UniqueFileEnforcement", FieldType.SELECTION, display_name="Unique File Enforcement")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WATCHERDIRECTORY__FIELD_NAME: Final[WrapperField] = WrapperField("WatcherDirectory", FieldType.STRING, display_name="Folder Path")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FilePattern_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePattern' on this record model
        """
        self.set_field_value(self.FILEPATTERN__FIELD_NAME.field_name, value)

    def get_FilePattern_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePattern' from this record model
        """
        return self.get_field_value(self.FILEPATTERN__FIELD_NAME.field_name)

    def set_FilterFilesByPattern_field(self, value: Optional[bool]):
        """
        Set data field with field name 'FilterFilesByPattern' on this record model
        """
        self.set_field_value(self.FILTERFILESBYPATTERN__FIELD_NAME.field_name, value)

    def get_FilterFilesByPattern_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'FilterFilesByPattern' from this record model
        """
        return self.get_field_value(self.FILTERFILESBYPATTERN__FIELD_NAME.field_name)

    def set_ScanFrequencyNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'ScanFrequencyNumber' on this record model
        """
        self.set_field_value(self.SCANFREQUENCYNUMBER__FIELD_NAME.field_name, value)

    def get_ScanFrequencyNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ScanFrequencyNumber' from this record model
        """
        return self.get_field_value(self.SCANFREQUENCYNUMBER__FIELD_NAME.field_name)

    def set_ScanFrequencyUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'ScanFrequencyUnits' on this record model
        """
        self.set_field_value(self.SCANFREQUENCYUNITS__FIELD_NAME.field_name, value)

    def get_ScanFrequencyUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ScanFrequencyUnits' from this record model
        """
        return self.get_field_value(self.SCANFREQUENCYUNITS__FIELD_NAME.field_name)

    def set_SubFolderPattern_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubFolderPattern' on this record model
        """
        self.set_field_value(self.SUBFOLDERPATTERN__FIELD_NAME.field_name, value)

    def get_SubFolderPattern_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubFolderPattern' from this record model
        """
        return self.get_field_value(self.SUBFOLDERPATTERN__FIELD_NAME.field_name)

    def set_SubFoldersScan_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubFoldersScan' on this record model
        """
        self.set_field_value(self.SUBFOLDERSSCAN__FIELD_NAME.field_name, value)

    def get_SubFoldersScan_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubFoldersScan' from this record model
        """
        return self.get_field_value(self.SUBFOLDERSSCAN__FIELD_NAME.field_name)

    def set_UniqueFileEnforcement_field(self, value: Optional[str]):
        """
        Set data field with field name 'UniqueFileEnforcement' on this record model
        """
        self.set_field_value(self.UNIQUEFILEENFORCEMENT__FIELD_NAME.field_name, value)

    def get_UniqueFileEnforcement_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UniqueFileEnforcement' from this record model
        """
        return self.get_field_value(self.UNIQUEFILEENFORCEMENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WatcherDirectory_field(self, value: Optional[str]):
        """
        Set data field with field name 'WatcherDirectory' on this record model
        """
        self.set_field_value(self.WATCHERDIRECTORY__FIELD_NAME.field_name, value)

    def get_WatcherDirectory_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WatcherDirectory' from this record model
        """
        return self.get_field_value(self.WATCHERDIRECTORY__FIELD_NAME.field_name)


class SiriusWeigherResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SiriusWeigherResult
    Data Type Display Name: Sirius Weigher Result (Sirius Weigher Results)
    Fields: TareWeight, CreatedBy, GrossWeight, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, NetWeight
    """
    DATA_TYPE_NAME: Final[str] = 'SiriusWeigherResult'
    DISPLAY_NAME: Final[str] = "Sirius Weigher Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Sirius Weigher Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    GROSSWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("GrossWeight", FieldType.DOUBLE, display_name="Gross Weight")
    NETWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("NetWeight", FieldType.DOUBLE, display_name="Net Weight")
    TAREWEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("TareWeight", FieldType.DOUBLE, display_name="Tare Weight")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GrossWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'GrossWeight' on this record model
        """
        self.set_field_value(self.GROSSWEIGHT__FIELD_NAME.field_name, value)

    def get_GrossWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'GrossWeight' from this record model
        """
        return self.get_field_value(self.GROSSWEIGHT__FIELD_NAME.field_name)

    def set_NetWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'NetWeight' on this record model
        """
        self.set_field_value(self.NETWEIGHT__FIELD_NAME.field_name, value)

    def get_NetWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'NetWeight' from this record model
        """
        return self.get_field_value(self.NETWEIGHT__FIELD_NAME.field_name)

    def set_TareWeight_field(self, value: Optional[float]):
        """
        Set data field with field name 'TareWeight' on this record model
        """
        self.set_field_value(self.TAREWEIGHT__FIELD_NAME.field_name, value)

    def get_TareWeight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TareWeight' from this record model
        """
        return self.get_field_value(self.TAREWEIGHT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SpectrophotometerResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SpectrophotometerResult
    Data Type Display Name: Spectrophotometer Result (Spectrophotometer Results)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'SpectrophotometerResult'
    DISPLAY_NAME: Final[str] = "Spectrophotometer Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Spectrophotometer Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SpectrumDetailModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SpectrumDetail
    Data Type Display Name: Spectrum Detail (Spectrum Details)
    Fields: Spectrum4, CreatedBy, DataRecordName, Spectrum5, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SampleId
    """
    DATA_TYPE_NAME: Final[str] = 'SpectrumDetail'
    DISPLAY_NAME: Final[str] = "Spectrum Detail"
    PLURAL_DISPLAY_NAME: Final[str] = "Spectrum Details"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    SAMPLEID__FIELD_NAME: Final[WrapperField] = WrapperField("SampleId", FieldType.PICKLIST, display_name="Polymer ID")
    SPECTRUM4__FIELD_NAME: Final[WrapperField] = WrapperField("Spectrum4", FieldType.DOUBLE, display_name="Spectrum 4")
    SPECTRUM5__FIELD_NAME: Final[WrapperField] = WrapperField("Spectrum5", FieldType.DOUBLE, display_name="Spectrum 5")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_SampleId_field(self, value: Optional[str]):
        """
        Set data field with field name 'SampleId' on this record model
        """
        self.set_field_value(self.SAMPLEID__FIELD_NAME.field_name, value)

    def get_SampleId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SampleId' from this record model
        """
        return self.get_field_value(self.SAMPLEID__FIELD_NAME.field_name)

    def set_Spectrum4_field(self, value: Optional[float]):
        """
        Set data field with field name 'Spectrum4' on this record model
        """
        self.set_field_value(self.SPECTRUM4__FIELD_NAME.field_name, value)

    def get_Spectrum4_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Spectrum4' from this record model
        """
        return self.get_field_value(self.SPECTRUM4__FIELD_NAME.field_name)

    def set_Spectrum5_field(self, value: Optional[float]):
        """
        Set data field with field name 'Spectrum5' on this record model
        """
        self.set_field_value(self.SPECTRUM5__FIELD_NAME.field_name, value)

    def get_Spectrum5_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Spectrum5' from this record model
        """
        return self.get_field_value(self.SPECTRUM5__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StainModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Stain
    Data Type Display Name: Stain (Stains)
    Fields: CreatedBy, PartNumber, ConsumableType, DateCreated, DataRecordName, ExpirationDate, VeloxLastModifiedDate, VeloxLastModifiedBy, ConsumableName, ProtocolNumber, LotNumber
    """
    DATA_TYPE_NAME: Final[str] = 'Stain'
    DISPLAY_NAME: Final[str] = "Stain"
    PLURAL_DISPLAY_NAME: Final[str] = "Stains"
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Stain Id")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Assay Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number")
    PROTOCOLNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ProtocolNumber", FieldType.STRING, display_name="Protocol Number")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_ProtocolNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProtocolNumber' on this record model
        """
        self.set_field_value(self.PROTOCOLNUMBER__FIELD_NAME.field_name, value)

    def get_ProtocolNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProtocolNumber' from this record model
        """
        return self.get_field_value(self.PROTOCOLNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StainingConfigurationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StainingConfiguration
    Data Type Display Name: Staining Configuration (Staining Configurations)
    Fields: UserName, CreatedBy, DateCreated, AvailableStainingProtocols, WebhookEndpoint, HL7MessageTemplate, IntegrationURL, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, IpAddress, PortNumber, Password
    The configurations for connecting and sending data to an auto stainer
    """
    DATA_TYPE_NAME: Final[str] = 'StainingConfiguration'
    DISPLAY_NAME: Final[str] = "Staining Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Staining Configurations"
    AVAILABLESTAININGPROTOCOLS__FIELD_NAME: Final[WrapperField] = WrapperField("AvailableStainingProtocols", FieldType.SELECTION, display_name="Available Staining Protocols")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    HL7MESSAGETEMPLATE__FIELD_NAME: Final[WrapperField] = WrapperField("HL7MessageTemplate", FieldType.STRING, display_name="HL7 Message Template")
    INTEGRATIONURL__FIELD_NAME: Final[WrapperField] = WrapperField("IntegrationURL", FieldType.STRING, display_name="Integration URL")
    IPADDRESS__FIELD_NAME: Final[WrapperField] = WrapperField("IpAddress", FieldType.STRING, display_name="Stainer IP Address")
    PASSWORD__FIELD_NAME: Final[WrapperField] = WrapperField("Password", FieldType.STRING, display_name="Password")
    PORTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PortNumber", FieldType.INTEGER, display_name="Stainer Port Number")
    USERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("UserName", FieldType.STRING, display_name="User Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WEBHOOKENDPOINT__FIELD_NAME: Final[WrapperField] = WrapperField("WebhookEndpoint", FieldType.STRING, display_name="Webhook Endpoint")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AvailableStainingProtocols_field(self, value: Optional[str]):
        """
        Set data field with field name 'AvailableStainingProtocols' on this record model
        """
        self.set_field_value(self.AVAILABLESTAININGPROTOCOLS__FIELD_NAME.field_name, value)

    def get_AvailableStainingProtocols_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AvailableStainingProtocols' from this record model
        """
        return self.get_field_value(self.AVAILABLESTAININGPROTOCOLS__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HL7MessageTemplate_field(self, value: Optional[str]):
        """
        Set data field with field name 'HL7MessageTemplate' on this record model
        """
        self.set_field_value(self.HL7MESSAGETEMPLATE__FIELD_NAME.field_name, value)

    def get_HL7MessageTemplate_field(self) -> Optional[str]:
        """
        Get data field value with field name 'HL7MessageTemplate' from this record model
        """
        return self.get_field_value(self.HL7MESSAGETEMPLATE__FIELD_NAME.field_name)

    def set_IntegrationURL_field(self, value: Optional[str]):
        """
        Set data field with field name 'IntegrationURL' on this record model
        """
        self.set_field_value(self.INTEGRATIONURL__FIELD_NAME.field_name, value)

    def get_IntegrationURL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IntegrationURL' from this record model
        """
        return self.get_field_value(self.INTEGRATIONURL__FIELD_NAME.field_name)

    def set_IpAddress_field(self, value: Optional[str]):
        """
        Set data field with field name 'IpAddress' on this record model
        """
        self.set_field_value(self.IPADDRESS__FIELD_NAME.field_name, value)

    def get_IpAddress_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IpAddress' from this record model
        """
        return self.get_field_value(self.IPADDRESS__FIELD_NAME.field_name)

    def set_Password_field(self, value: Optional[str]):
        """
        Set data field with field name 'Password' on this record model
        """
        self.set_field_value(self.PASSWORD__FIELD_NAME.field_name, value)

    def get_Password_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Password' from this record model
        """
        return self.get_field_value(self.PASSWORD__FIELD_NAME.field_name)

    def set_PortNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'PortNumber' on this record model
        """
        self.set_field_value(self.PORTNUMBER__FIELD_NAME.field_name, value)

    def get_PortNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PortNumber' from this record model
        """
        return self.get_field_value(self.PORTNUMBER__FIELD_NAME.field_name)

    def set_UserName_field(self, value: Optional[str]):
        """
        Set data field with field name 'UserName' on this record model
        """
        self.set_field_value(self.USERNAME__FIELD_NAME.field_name, value)

    def get_UserName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UserName' from this record model
        """
        return self.get_field_value(self.USERNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WebhookEndpoint_field(self, value: Optional[str]):
        """
        Set data field with field name 'WebhookEndpoint' on this record model
        """
        self.set_field_value(self.WEBHOOKENDPOINT__FIELD_NAME.field_name, value)

    def get_WebhookEndpoint_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WebhookEndpoint' from this record model
        """
        return self.get_field_value(self.WEBHOOKENDPOINT__FIELD_NAME.field_name)


class StainPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StainPart
    Data Type Display Name: Stain Part (Stain Parts)
    Fields: CreatedBy, PartNumber, ConsumableType, DateCreated, Vendor, QuantityOnHand, Units, QuantityPerItem, ReorderLevelQuantity, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, ConsumableName, ProtocolNumber
    """
    DATA_TYPE_NAME: Final[str] = 'StainPart'
    DISPLAY_NAME: Final[str] = "Stain Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Stain Parts"
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.AUTO_ACCESSION, display_name="Stain Id")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Assay Name")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number")
    PROTOCOLNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("ProtocolNumber", FieldType.STRING, display_name="Protocol Number")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.SELECTION, display_name="Vendor")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_ProtocolNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProtocolNumber' on this record model
        """
        self.set_field_value(self.PROTOCOLNUMBER__FIELD_NAME.field_name, value)

    def get_ProtocolNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProtocolNumber' from this record model
        """
        return self.get_field_value(self.PROTOCOLNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class StereoisomerModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Stereoisomer
    Data Type Display Name: Stereoisomer (Stereoisomers)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, SMILES, MOL
    Possible stereoisomer of a parent compound.
    """
    DATA_TYPE_NAME: Final[str] = 'Stereoisomer'
    DISPLAY_NAME: Final[str] = "Stereoisomer"
    PLURAL_DISPLAY_NAME: Final[str] = "Stereoisomers"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MOL__FIELD_NAME: Final[WrapperField] = WrapperField("MOL", FieldType.STRING, display_name="MOL")
    SMILES__FIELD_NAME: Final[WrapperField] = WrapperField("SMILES", FieldType.STRING, display_name="Canonical SMILES")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_MOL_field(self, value: Optional[str]):
        """
        Set data field with field name 'MOL' on this record model
        """
        self.set_field_value(self.MOL__FIELD_NAME.field_name, value)

    def get_MOL_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MOL' from this record model
        """
        return self.get_field_value(self.MOL__FIELD_NAME.field_name)

    def set_SMILES_field(self, value: Optional[str]):
        """
        Set data field with field name 'SMILES' on this record model
        """
        self.set_field_value(self.SMILES__FIELD_NAME.field_name, value)

    def get_SMILES_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SMILES' from this record model
        """
        return self.get_field_value(self.SMILES__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StereoManualResolutionDataModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StereoManualResolutionData
    Data Type Display Name: Stereo Manual Resolution Data (Stereo Manual Resolution Datas)
    Fields: PartDataTypeName, CreatedBy, DataRecordName, IncomingPartCXSmilesHash, RegisteredPartCXSSmilesHash, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    This data table stores past manual resolutions of enhanced stereos for the OR group clarifiation.
    """
    DATA_TYPE_NAME: Final[str] = 'StereoManualResolutionData'
    DISPLAY_NAME: Final[str] = "Stereo Manual Resolution Data"
    PLURAL_DISPLAY_NAME: Final[str] = "Stereo Manual Resolution Datas"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    INCOMINGPARTCXSMILESHASH__FIELD_NAME: Final[WrapperField] = WrapperField("IncomingPartCXSmilesHash", FieldType.STRING, display_name="Incoming Part CXSMILES")
    PARTDATATYPENAME__FIELD_NAME: Final[WrapperField] = WrapperField("PartDataTypeName", FieldType.STRING, display_name="Part Data Type Name")
    REGISTEREDPARTCXSSMILESHASH__FIELD_NAME: Final[WrapperField] = WrapperField("RegisteredPartCXSSmilesHash", FieldType.STRING, display_name="Registered PART CXSMILES Hash")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_IncomingPartCXSmilesHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'IncomingPartCXSmilesHash' on this record model
        """
        self.set_field_value(self.INCOMINGPARTCXSMILESHASH__FIELD_NAME.field_name, value)

    def get_IncomingPartCXSmilesHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'IncomingPartCXSmilesHash' from this record model
        """
        return self.get_field_value(self.INCOMINGPARTCXSMILESHASH__FIELD_NAME.field_name)

    def set_PartDataTypeName_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartDataTypeName' on this record model
        """
        self.set_field_value(self.PARTDATATYPENAME__FIELD_NAME.field_name, value)

    def get_PartDataTypeName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartDataTypeName' from this record model
        """
        return self.get_field_value(self.PARTDATATYPENAME__FIELD_NAME.field_name)

    def set_RegisteredPartCXSSmilesHash_field(self, value: Optional[str]):
        """
        Set data field with field name 'RegisteredPartCXSSmilesHash' on this record model
        """
        self.set_field_value(self.REGISTEREDPARTCXSSMILESHASH__FIELD_NAME.field_name, value)

    def get_RegisteredPartCXSSmilesHash_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RegisteredPartCXSSmilesHash' from this record model
        """
        return self.get_field_value(self.REGISTEREDPARTCXSSMILESHASH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StorageConfigurationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StorageConfiguration
    Data Type Display Name: Storage Configuration (Storage Configurations)
    Fields: StorableItemScanMatchField, CreatedBy, DataRecordName, VeloxLastModifiedDate, StorableItemDataType, VeloxLastModifiedBy, DateCreated, StorableItemStorageUnits
    """
    DATA_TYPE_NAME: Final[str] = 'StorageConfiguration'
    DISPLAY_NAME: Final[str] = "Storage Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Storage Configurations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    STORABLEITEMDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("StorableItemDataType", FieldType.SELECTION, display_name="Storable Item Data Type")
    STORABLEITEMSCANMATCHFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("StorableItemScanMatchField", FieldType.SELECTION, display_name="Storable Item Scan Match Field")
    STORABLEITEMSTORAGEUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("StorableItemStorageUnits", FieldType.SELECTION, display_name="Storable Item Storage Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_StorableItemDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorableItemDataType' on this record model
        """
        self.set_field_value(self.STORABLEITEMDATATYPE__FIELD_NAME.field_name, value)

    def get_StorableItemDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorableItemDataType' from this record model
        """
        return self.get_field_value(self.STORABLEITEMDATATYPE__FIELD_NAME.field_name)

    def set_StorableItemScanMatchField_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorableItemScanMatchField' on this record model
        """
        self.set_field_value(self.STORABLEITEMSCANMATCHFIELD__FIELD_NAME.field_name, value)

    def get_StorableItemScanMatchField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorableItemScanMatchField' from this record model
        """
        return self.get_field_value(self.STORABLEITEMSCANMATCHFIELD__FIELD_NAME.field_name)

    def set_StorableItemStorageUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorableItemStorageUnits' on this record model
        """
        self.set_field_value(self.STORABLEITEMSTORAGEUNITS__FIELD_NAME.field_name, value)

    def get_StorableItemStorageUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorableItemStorageUnits' from this record model
        """
        return self.get_field_value(self.STORABLEITEMSTORAGEUNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StorageEventModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StorageEvent
    Data Type Display Name: Storage Event (Storage Events)
    Fields: DurationHours, EventDate, CreatedBy, StorageUnitId, EventType, DurationMinutes, DateCreated, StorageUnitPath, StorageUnitTemperature, DataRecordName, EventTime, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'StorageEvent'
    DISPLAY_NAME: Final[str] = "Storage Event"
    PLURAL_DISPLAY_NAME: Final[str] = "Storage Events"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DURATIONHOURS__FIELD_NAME: Final[WrapperField] = WrapperField("DurationHours", FieldType.LONG, display_name="Duration Hours")
    DURATIONMINUTES__FIELD_NAME: Final[WrapperField] = WrapperField("DurationMinutes", FieldType.SHORT, display_name="Duration Minutes")
    EVENTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("EventDate", FieldType.DATE, display_name="Event Date")
    EVENTTIME__FIELD_NAME: Final[WrapperField] = WrapperField("EventTime", FieldType.STRING, display_name="Event Time")
    EVENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("EventType", FieldType.PICKLIST, display_name="Event Type")
    STORAGEUNITID__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitId", FieldType.STRING, display_name="Storage Unit ID")
    STORAGEUNITPATH__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitPath", FieldType.STRING, display_name="Storage Unit Path")
    STORAGEUNITTEMPERATURE__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitTemperature", FieldType.DOUBLE, display_name="Storage Unit Temperature")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DurationHours_field(self, value: Optional[int]):
        """
        Set data field with field name 'DurationHours' on this record model
        """
        self.set_field_value(self.DURATIONHOURS__FIELD_NAME.field_name, value)

    def get_DurationHours_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DurationHours' from this record model
        """
        return self.get_field_value(self.DURATIONHOURS__FIELD_NAME.field_name)

    def set_DurationMinutes_field(self, value: Optional[int]):
        """
        Set data field with field name 'DurationMinutes' on this record model
        """
        self.set_field_value(self.DURATIONMINUTES__FIELD_NAME.field_name, value)

    def get_DurationMinutes_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DurationMinutes' from this record model
        """
        return self.get_field_value(self.DURATIONMINUTES__FIELD_NAME.field_name)

    def set_EventDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'EventDate' on this record model
        """
        self.set_field_value(self.EVENTDATE__FIELD_NAME.field_name, value)

    def get_EventDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'EventDate' from this record model
        """
        return self.get_field_value(self.EVENTDATE__FIELD_NAME.field_name)

    def set_EventTime_field(self, value: Optional[str]):
        """
        Set data field with field name 'EventTime' on this record model
        """
        self.set_field_value(self.EVENTTIME__FIELD_NAME.field_name, value)

    def get_EventTime_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EventTime' from this record model
        """
        return self.get_field_value(self.EVENTTIME__FIELD_NAME.field_name)

    def set_EventType_field(self, value: Optional[str]):
        """
        Set data field with field name 'EventType' on this record model
        """
        self.set_field_value(self.EVENTTYPE__FIELD_NAME.field_name, value)

    def get_EventType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EventType' from this record model
        """
        return self.get_field_value(self.EVENTTYPE__FIELD_NAME.field_name)

    def set_StorageUnitId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitId' on this record model
        """
        self.set_field_value(self.STORAGEUNITID__FIELD_NAME.field_name, value)

    def get_StorageUnitId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitId' from this record model
        """
        return self.get_field_value(self.STORAGEUNITID__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def set_StorageUnitTemperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'StorageUnitTemperature' on this record model
        """
        self.set_field_value(self.STORAGEUNITTEMPERATURE__FIELD_NAME.field_name, value)

    def get_StorageUnitTemperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'StorageUnitTemperature' from this record model
        """
        return self.get_field_value(self.STORAGEUNITTEMPERATURE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StorageHierarchyConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StorageHierarchyConfig
    Data Type Display Name: Storage Hierarchy Configuration (Storage Hierarchy Configurations)
    Fields: Hierarchy, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'StorageHierarchyConfig'
    DISPLAY_NAME: Final[str] = "Storage Hierarchy Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Storage Hierarchy Configurations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    HIERARCHY__FIELD_NAME: Final[WrapperField] = WrapperField("Hierarchy", FieldType.STRING, display_name="Hierarchy")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Hierarchy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Hierarchy' on this record model
        """
        self.set_field_value(self.HIERARCHY__FIELD_NAME.field_name, value)

    def get_Hierarchy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Hierarchy' from this record model
        """
        return self.get_field_value(self.HIERARCHY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StorageUnitModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StorageUnit
    Data Type Display Name: Storage Unit (Storage Units)
    Fields: Temperature, CreatedBy, StorageUnitId, IsActive, DateCreated, StorageUnitPath, StorageUnitCapacity, StorageUnitType, DataRecordName, UnitColumns, RowPosition, ColPosition, Humidity, VeloxLastModifiedDate, VeloxLastModifiedBy, UnitRows, RecomputeOccupancy, OccupiedCount
    """
    DATA_TYPE_NAME: Final[str] = 'StorageUnit'
    DISPLAY_NAME: Final[str] = "Storage Unit"
    PLURAL_DISPLAY_NAME: Final[str] = "Storage Units"
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.STRING, display_name="Column Position")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    HUMIDITY__FIELD_NAME: Final[WrapperField] = WrapperField("Humidity", FieldType.DOUBLE, display_name="Humidity")
    ISACTIVE__FIELD_NAME: Final[WrapperField] = WrapperField("IsActive", FieldType.BOOLEAN, display_name="Is Active?")
    OCCUPIEDCOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("OccupiedCount", FieldType.LONG, display_name="Occupied Count")
    RECOMPUTEOCCUPANCY__FIELD_NAME: Final[WrapperField] = WrapperField("RecomputeOccupancy", FieldType.ACTION, display_name="Recompute Occupancy")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.STRING, display_name="Row Position")
    STORAGEUNITCAPACITY__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitCapacity", FieldType.LONG, display_name="Storage Unit Capacity")
    STORAGEUNITID__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitId", FieldType.STRING, display_name="Storage Unit ID")
    STORAGEUNITPATH__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitPath", FieldType.STRING, display_name="Storage Unit Path")
    STORAGEUNITTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitType", FieldType.SELECTION, display_name="Storage Unit Type")
    TEMPERATURE__FIELD_NAME: Final[WrapperField] = WrapperField("Temperature", FieldType.DOUBLE, display_name="Temperature (C)")
    UNITCOLUMNS__FIELD_NAME: Final[WrapperField] = WrapperField("UnitColumns", FieldType.LONG, display_name="Unit Columns")
    UNITROWS__FIELD_NAME: Final[WrapperField] = WrapperField("UnitRows", FieldType.LONG, display_name="Unit Rows")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Humidity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Humidity' on this record model
        """
        self.set_field_value(self.HUMIDITY__FIELD_NAME.field_name, value)

    def get_Humidity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Humidity' from this record model
        """
        return self.get_field_value(self.HUMIDITY__FIELD_NAME.field_name)

    def set_IsActive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsActive' on this record model
        """
        self.set_field_value(self.ISACTIVE__FIELD_NAME.field_name, value)

    def get_IsActive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsActive' from this record model
        """
        return self.get_field_value(self.ISACTIVE__FIELD_NAME.field_name)

    def set_OccupiedCount_field(self, value: Optional[int]):
        """
        Set data field with field name 'OccupiedCount' on this record model
        """
        self.set_field_value(self.OCCUPIEDCOUNT__FIELD_NAME.field_name, value)

    def get_OccupiedCount_field(self) -> Optional[int]:
        """
        Get data field value with field name 'OccupiedCount' from this record model
        """
        return self.get_field_value(self.OCCUPIEDCOUNT__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_StorageUnitCapacity_field(self, value: Optional[int]):
        """
        Set data field with field name 'StorageUnitCapacity' on this record model
        """
        self.set_field_value(self.STORAGEUNITCAPACITY__FIELD_NAME.field_name, value)

    def get_StorageUnitCapacity_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StorageUnitCapacity' from this record model
        """
        return self.get_field_value(self.STORAGEUNITCAPACITY__FIELD_NAME.field_name)

    def set_StorageUnitId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitId' on this record model
        """
        self.set_field_value(self.STORAGEUNITID__FIELD_NAME.field_name, value)

    def get_StorageUnitId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitId' from this record model
        """
        return self.get_field_value(self.STORAGEUNITID__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def set_StorageUnitType_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitType' on this record model
        """
        self.set_field_value(self.STORAGEUNITTYPE__FIELD_NAME.field_name, value)

    def get_StorageUnitType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitType' from this record model
        """
        return self.get_field_value(self.STORAGEUNITTYPE__FIELD_NAME.field_name)

    def set_Temperature_field(self, value: Optional[float]):
        """
        Set data field with field name 'Temperature' on this record model
        """
        self.set_field_value(self.TEMPERATURE__FIELD_NAME.field_name, value)

    def get_Temperature_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Temperature' from this record model
        """
        return self.get_field_value(self.TEMPERATURE__FIELD_NAME.field_name)

    def set_UnitColumns_field(self, value: Optional[int]):
        """
        Set data field with field name 'UnitColumns' on this record model
        """
        self.set_field_value(self.UNITCOLUMNS__FIELD_NAME.field_name, value)

    def get_UnitColumns_field(self) -> Optional[int]:
        """
        Get data field value with field name 'UnitColumns' from this record model
        """
        return self.get_field_value(self.UNITCOLUMNS__FIELD_NAME.field_name)

    def set_UnitRows_field(self, value: Optional[int]):
        """
        Set data field with field name 'UnitRows' on this record model
        """
        self.set_field_value(self.UNITROWS__FIELD_NAME.field_name, value)

    def get_UnitRows_field(self) -> Optional[int]:
        """
        Get data field value with field name 'UnitRows' from this record model
        """
        return self.get_field_value(self.UNITROWS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StrainModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Strain
    Data Type Display Name: Strain (Strains)
    Fields: StandardError, CreatedBy, PartNumber, StrainDetails, ConsumableType, DateCreated, SampleStd, SampleNormalizedMean, DataRecordName, ExpirationDate, VeloxLastModifiedDate, VeloxLastModifiedBy, SampleMean, ConsumableName, Ci95Bounds, LotNumber
    """
    DATA_TYPE_NAME: Final[str] = 'Strain'
    DISPLAY_NAME: Final[str] = "Strain"
    PLURAL_DISPLAY_NAME: Final[str] = "Strains"
    CI95BOUNDS__FIELD_NAME: Final[WrapperField] = WrapperField("Ci95Bounds", FieldType.DOUBLE, display_name="CI 95% Bounds")
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Strain Name")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Strain Subtype")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number")
    SAMPLEMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("SampleMean", FieldType.DOUBLE, display_name="Mean")
    SAMPLENORMALIZEDMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("SampleNormalizedMean", FieldType.DOUBLE, display_name="Normalized Mean")
    SAMPLESTD__FIELD_NAME: Final[WrapperField] = WrapperField("SampleStd", FieldType.DOUBLE, display_name="Standard Deviation")
    STANDARDERROR__FIELD_NAME: Final[WrapperField] = WrapperField("StandardError", FieldType.DOUBLE, display_name="Standard Error")
    STRAINDETAILS__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails", FieldType.STRING, display_name="Strain Details")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Ci95Bounds_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ci95Bounds' on this record model
        """
        self.set_field_value(self.CI95BOUNDS__FIELD_NAME.field_name, value)

    def get_Ci95Bounds_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ci95Bounds' from this record model
        """
        return self.get_field_value(self.CI95BOUNDS__FIELD_NAME.field_name)

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_SampleMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleMean' on this record model
        """
        self.set_field_value(self.SAMPLEMEAN__FIELD_NAME.field_name, value)

    def get_SampleMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleMean' from this record model
        """
        return self.get_field_value(self.SAMPLEMEAN__FIELD_NAME.field_name)

    def set_SampleNormalizedMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleNormalizedMean' on this record model
        """
        self.set_field_value(self.SAMPLENORMALIZEDMEAN__FIELD_NAME.field_name, value)

    def get_SampleNormalizedMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleNormalizedMean' from this record model
        """
        return self.get_field_value(self.SAMPLENORMALIZEDMEAN__FIELD_NAME.field_name)

    def set_SampleStd_field(self, value: Optional[float]):
        """
        Set data field with field name 'SampleStd' on this record model
        """
        self.set_field_value(self.SAMPLESTD__FIELD_NAME.field_name, value)

    def get_SampleStd_field(self) -> Optional[float]:
        """
        Get data field value with field name 'SampleStd' from this record model
        """
        return self.get_field_value(self.SAMPLESTD__FIELD_NAME.field_name)

    def set_StandardError_field(self, value: Optional[float]):
        """
        Set data field with field name 'StandardError' on this record model
        """
        self.set_field_value(self.STANDARDERROR__FIELD_NAME.field_name, value)

    def get_StandardError_field(self) -> Optional[float]:
        """
        Get data field value with field name 'StandardError' from this record model
        """
        return self.get_field_value(self.STANDARDERROR__FIELD_NAME.field_name)

    def set_StrainDetails_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainDetails' on this record model
        """
        self.set_field_value(self.STRAINDETAILS__FIELD_NAME.field_name, value)

    def get_StrainDetails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainDetails' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StrainDetailsModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StrainDetails
    Data Type Display Name: Strain Details (Strain Details)
    Fields: MultiParentLink215, PlasmidSequence, CreatedBy, PlasmidName, StrainPartNumber, DateCreated, StrainLotNumber, PlasmidLotNumber, DataRecordName, StrainName, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'StrainDetails'
    DISPLAY_NAME: Final[str] = "Strain Details"
    PLURAL_DISPLAY_NAME: Final[str] = "Strain Details"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    PLASMIDLOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PlasmidLotNumber", FieldType.STRING, display_name="Plasmid Lot Number")
    PLASMIDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("PlasmidName", FieldType.STRING, display_name="Plasmid Name")
    PLASMIDSEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("PlasmidSequence", FieldType.STRING, display_name="Plasmid Sequence")
    STRAINLOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("StrainLotNumber", FieldType.STRING, display_name="Strain Lot Number")
    STRAINNAME__FIELD_NAME: Final[WrapperField] = WrapperField("StrainName", FieldType.STRING, display_name="Strain Name")
    STRAINPARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("StrainPartNumber", FieldType.STRING, display_name="Strain Part Number")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_PlasmidLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlasmidLotNumber' on this record model
        """
        self.set_field_value(self.PLASMIDLOTNUMBER__FIELD_NAME.field_name, value)

    def get_PlasmidLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlasmidLotNumber' from this record model
        """
        return self.get_field_value(self.PLASMIDLOTNUMBER__FIELD_NAME.field_name)

    def set_PlasmidName_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlasmidName' on this record model
        """
        self.set_field_value(self.PLASMIDNAME__FIELD_NAME.field_name, value)

    def get_PlasmidName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlasmidName' from this record model
        """
        return self.get_field_value(self.PLASMIDNAME__FIELD_NAME.field_name)

    def set_PlasmidSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'PlasmidSequence' on this record model
        """
        self.set_field_value(self.PLASMIDSEQUENCE__FIELD_NAME.field_name, value)

    def get_PlasmidSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PlasmidSequence' from this record model
        """
        return self.get_field_value(self.PLASMIDSEQUENCE__FIELD_NAME.field_name)

    def set_StrainLotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainLotNumber' on this record model
        """
        self.set_field_value(self.STRAINLOTNUMBER__FIELD_NAME.field_name, value)

    def get_StrainLotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainLotNumber' from this record model
        """
        return self.get_field_value(self.STRAINLOTNUMBER__FIELD_NAME.field_name)

    def set_StrainName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainName' on this record model
        """
        self.set_field_value(self.STRAINNAME__FIELD_NAME.field_name, value)

    def get_StrainName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainName' from this record model
        """
        return self.get_field_value(self.STRAINNAME__FIELD_NAME.field_name)

    def set_StrainPartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainPartNumber' on this record model
        """
        self.set_field_value(self.STRAINPARTNUMBER__FIELD_NAME.field_name, value)

    def get_StrainPartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainPartNumber' from this record model
        """
        return self.get_field_value(self.STRAINPARTNUMBER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StrainPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StrainPart
    Data Type Display Name: Strain Part (Strain Parts)
    Fields: CreatedBy, PartNumber, StrainDetails, ConsumableType, DateCreated, Vendor, QuantityOnHand, Units, QuantityPerItem, ReorderLevelQuantity, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, ConsumableName
    """
    DATA_TYPE_NAME: Final[str] = 'StrainPart'
    DISPLAY_NAME: Final[str] = "Strain Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Strain Parts"
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Strain Name")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Strain Subtype")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Part Number")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    STRAINDETAILS__FIELD_NAME: Final[WrapperField] = WrapperField("StrainDetails", FieldType.STRING, display_name="Strain Details")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.SELECTION, display_name="Vendor")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_StrainDetails_field(self, value: Optional[str]):
        """
        Set data field with field name 'StrainDetails' on this record model
        """
        self.set_field_value(self.STRAINDETAILS__FIELD_NAME.field_name, value)

    def get_StrainDetails_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StrainDetails' from this record model
        """
        return self.get_field_value(self.STRAINDETAILS__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class StudyModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Study
    Data Type Display Name: Study (Studies)
    Fields: Description, StudyStartDate, ArchivalEmailSent, IsActive, PreviousProject, InheritRolesFromProject, DateCreated, IsStudyTaskTypesCombined, AnalyticalCoordinator, IsApproved, MaxBodyWeightDosingTime, Locked, StudyId, InheritRolesFromParent, StudyStatus, IsClinical, ProgramSummary, StudyDirector, VeloxLastModifiedBy, StudyTitle, SDMSSubdirectory, IsVivariumSubjectTracking, CreatedBy, StudyType, IsSubjectRequestRequired, Purpose, StudyContactEmail, StudySubjectRandomizerConfig, StudyName, StudyCompletionDate, StudyContactName, DataRecordName, VeloxLastModifiedDate, IsGLP
    The Study Data Type
    """
    DATA_TYPE_NAME: Final[str] = 'Study'
    DISPLAY_NAME: Final[str] = "Study"
    PLURAL_DISPLAY_NAME: Final[str] = "Studies"
    ANALYTICALCOORDINATOR__FIELD_NAME: Final[WrapperField] = WrapperField("AnalyticalCoordinator", FieldType.SELECTION, display_name="Analytical Coordinator")
    ARCHIVALEMAILSENT__FIELD_NAME: Final[WrapperField] = WrapperField("ArchivalEmailSent", FieldType.BOOLEAN, display_name="ArchivalEmailSent")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    INHERITROLESFROMPARENT__FIELD_NAME: Final[WrapperField] = WrapperField("InheritRolesFromParent", FieldType.BOOLEAN, display_name="Inherit Roles From Parent")
    INHERITROLESFROMPROJECT__FIELD_NAME: Final[WrapperField] = WrapperField("InheritRolesFromProject", FieldType.BOOLEAN, display_name="Inherit Roles From Project")
    ISACTIVE__FIELD_NAME: Final[WrapperField] = WrapperField("IsActive", FieldType.BOOLEAN, display_name="Is Active")
    ISAPPROVED__FIELD_NAME: Final[WrapperField] = WrapperField("IsApproved", FieldType.BOOLEAN, display_name="Study Design Approved?")
    ISCLINICAL__FIELD_NAME: Final[WrapperField] = WrapperField("IsClinical", FieldType.BOOLEAN, display_name="Is Clinical?")
    ISGLP__FIELD_NAME: Final[WrapperField] = WrapperField("IsGLP", FieldType.BOOLEAN, display_name="Is GLP")
    ISSTUDYTASKTYPESCOMBINED__FIELD_NAME: Final[WrapperField] = WrapperField("IsStudyTaskTypesCombined", FieldType.BOOLEAN, display_name="Combine Task Types into Single Task Groupings?")
    ISSUBJECTREQUESTREQUIRED__FIELD_NAME: Final[WrapperField] = WrapperField("IsSubjectRequestRequired", FieldType.BOOLEAN, display_name="Is Subject Request Required?")
    ISVIVARIUMSUBJECTTRACKING__FIELD_NAME: Final[WrapperField] = WrapperField("IsVivariumSubjectTracking", FieldType.BOOLEAN, display_name="Is Vivarium Subject Tracking")
    LOCKED__FIELD_NAME: Final[WrapperField] = WrapperField("Locked", FieldType.BOOLEAN, display_name="Locked")
    MAXBODYWEIGHTDOSINGTIME__FIELD_NAME: Final[WrapperField] = WrapperField("MaxBodyWeightDosingTime", FieldType.INTEGER, display_name="Maximum Number of Days Between Dosing and Last Body Mass Measurement")
    PREVIOUSPROJECT__FIELD_NAME: Final[WrapperField] = WrapperField("PreviousProject", FieldType.LONG, display_name="Previous Project")
    PROGRAMSUMMARY__FIELD_NAME: Final[WrapperField] = WrapperField("ProgramSummary", FieldType.STRING, display_name="Summary of Program")
    PURPOSE__FIELD_NAME: Final[WrapperField] = WrapperField("Purpose", FieldType.STRING, display_name="Purpose")
    SDMSSUBDIRECTORY__FIELD_NAME: Final[WrapperField] = WrapperField("SDMSSubdirectory", FieldType.STRING, display_name="SDMS Folder")
    STUDYCOMPLETIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("StudyCompletionDate", FieldType.DATE, display_name="Study Completion Date")
    STUDYCONTACTEMAIL__FIELD_NAME: Final[WrapperField] = WrapperField("StudyContactEmail", FieldType.STRING, display_name="Study Contact Email")
    STUDYCONTACTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("StudyContactName", FieldType.STRING, display_name="Study Contact Name")
    STUDYDIRECTOR__FIELD_NAME: Final[WrapperField] = WrapperField("StudyDirector", FieldType.SELECTION, display_name="Study Director")
    STUDYID__FIELD_NAME: Final[WrapperField] = WrapperField("StudyId", FieldType.AUTO_ACCESSION, display_name="Study ID")
    STUDYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("StudyName", FieldType.STRING, display_name="Study Name")
    STUDYSTARTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("StudyStartDate", FieldType.DATE, display_name="Study Start Date")
    STUDYSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("StudyStatus", FieldType.SELECTION, display_name="Study Status")
    STUDYSUBJECTRANDOMIZERCONFIG__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectRandomizerConfig", FieldType.SELECTION, display_name="Study Subject Randomizer Configuration")
    STUDYTITLE__FIELD_NAME: Final[WrapperField] = WrapperField("StudyTitle", FieldType.STRING, display_name="Study Title")
    STUDYTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("StudyType", FieldType.PICKLIST, display_name="Study Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AnalyticalCoordinator_field(self, value: Optional[str]):
        """
        Set data field with field name 'AnalyticalCoordinator' on this record model
        """
        self.set_field_value(self.ANALYTICALCOORDINATOR__FIELD_NAME.field_name, value)

    def get_AnalyticalCoordinator_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AnalyticalCoordinator' from this record model
        """
        return self.get_field_value(self.ANALYTICALCOORDINATOR__FIELD_NAME.field_name)

    def set_ArchivalEmailSent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ArchivalEmailSent' on this record model
        """
        self.set_field_value(self.ARCHIVALEMAILSENT__FIELD_NAME.field_name, value)

    def get_ArchivalEmailSent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ArchivalEmailSent' from this record model
        """
        return self.get_field_value(self.ARCHIVALEMAILSENT__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_InheritRolesFromParent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InheritRolesFromParent' on this record model
        """
        self.set_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name, value)

    def get_InheritRolesFromParent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InheritRolesFromParent' from this record model
        """
        return self.get_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name)

    def set_InheritRolesFromProject_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InheritRolesFromProject' on this record model
        """
        self.set_field_value(self.INHERITROLESFROMPROJECT__FIELD_NAME.field_name, value)

    def get_InheritRolesFromProject_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InheritRolesFromProject' from this record model
        """
        return self.get_field_value(self.INHERITROLESFROMPROJECT__FIELD_NAME.field_name)

    def set_IsActive_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsActive' on this record model
        """
        self.set_field_value(self.ISACTIVE__FIELD_NAME.field_name, value)

    def get_IsActive_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsActive' from this record model
        """
        return self.get_field_value(self.ISACTIVE__FIELD_NAME.field_name)

    def set_IsApproved_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsApproved' on this record model
        """
        self.set_field_value(self.ISAPPROVED__FIELD_NAME.field_name, value)

    def get_IsApproved_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsApproved' from this record model
        """
        return self.get_field_value(self.ISAPPROVED__FIELD_NAME.field_name)

    def set_IsClinical_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsClinical' on this record model
        """
        self.set_field_value(self.ISCLINICAL__FIELD_NAME.field_name, value)

    def get_IsClinical_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsClinical' from this record model
        """
        return self.get_field_value(self.ISCLINICAL__FIELD_NAME.field_name)

    def set_IsGLP_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsGLP' on this record model
        """
        self.set_field_value(self.ISGLP__FIELD_NAME.field_name, value)

    def get_IsGLP_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsGLP' from this record model
        """
        return self.get_field_value(self.ISGLP__FIELD_NAME.field_name)

    def set_IsStudyTaskTypesCombined_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsStudyTaskTypesCombined' on this record model
        """
        self.set_field_value(self.ISSTUDYTASKTYPESCOMBINED__FIELD_NAME.field_name, value)

    def get_IsStudyTaskTypesCombined_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsStudyTaskTypesCombined' from this record model
        """
        return self.get_field_value(self.ISSTUDYTASKTYPESCOMBINED__FIELD_NAME.field_name)

    def set_IsSubjectRequestRequired_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsSubjectRequestRequired' on this record model
        """
        self.set_field_value(self.ISSUBJECTREQUESTREQUIRED__FIELD_NAME.field_name, value)

    def get_IsSubjectRequestRequired_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsSubjectRequestRequired' from this record model
        """
        return self.get_field_value(self.ISSUBJECTREQUESTREQUIRED__FIELD_NAME.field_name)

    def set_IsVivariumSubjectTracking_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsVivariumSubjectTracking' on this record model
        """
        self.set_field_value(self.ISVIVARIUMSUBJECTTRACKING__FIELD_NAME.field_name, value)

    def get_IsVivariumSubjectTracking_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsVivariumSubjectTracking' from this record model
        """
        return self.get_field_value(self.ISVIVARIUMSUBJECTTRACKING__FIELD_NAME.field_name)

    def set_Locked_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Locked' on this record model
        """
        self.set_field_value(self.LOCKED__FIELD_NAME.field_name, value)

    def get_Locked_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Locked' from this record model
        """
        return self.get_field_value(self.LOCKED__FIELD_NAME.field_name)

    def set_MaxBodyWeightDosingTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'MaxBodyWeightDosingTime' on this record model
        """
        self.set_field_value(self.MAXBODYWEIGHTDOSINGTIME__FIELD_NAME.field_name, value)

    def get_MaxBodyWeightDosingTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MaxBodyWeightDosingTime' from this record model
        """
        return self.get_field_value(self.MAXBODYWEIGHTDOSINGTIME__FIELD_NAME.field_name)

    def set_PreviousProject_field(self, value: Optional[int]):
        """
        Set data field with field name 'PreviousProject' on this record model
        """
        self.set_field_value(self.PREVIOUSPROJECT__FIELD_NAME.field_name, value)

    def get_PreviousProject_field(self) -> Optional[int]:
        """
        Get data field value with field name 'PreviousProject' from this record model
        """
        return self.get_field_value(self.PREVIOUSPROJECT__FIELD_NAME.field_name)

    def set_ProgramSummary_field(self, value: Optional[str]):
        """
        Set data field with field name 'ProgramSummary' on this record model
        """
        self.set_field_value(self.PROGRAMSUMMARY__FIELD_NAME.field_name, value)

    def get_ProgramSummary_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ProgramSummary' from this record model
        """
        return self.get_field_value(self.PROGRAMSUMMARY__FIELD_NAME.field_name)

    def set_Purpose_field(self, value: Optional[str]):
        """
        Set data field with field name 'Purpose' on this record model
        """
        self.set_field_value(self.PURPOSE__FIELD_NAME.field_name, value)

    def get_Purpose_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Purpose' from this record model
        """
        return self.get_field_value(self.PURPOSE__FIELD_NAME.field_name)

    def set_SDMSSubdirectory_field(self, value: Optional[str]):
        """
        Set data field with field name 'SDMSSubdirectory' on this record model
        """
        self.set_field_value(self.SDMSSUBDIRECTORY__FIELD_NAME.field_name, value)

    def get_SDMSSubdirectory_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SDMSSubdirectory' from this record model
        """
        return self.get_field_value(self.SDMSSUBDIRECTORY__FIELD_NAME.field_name)

    def set_StudyCompletionDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StudyCompletionDate' on this record model
        """
        self.set_field_value(self.STUDYCOMPLETIONDATE__FIELD_NAME.field_name, value)

    def get_StudyCompletionDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StudyCompletionDate' from this record model
        """
        return self.get_field_value(self.STUDYCOMPLETIONDATE__FIELD_NAME.field_name)

    def set_StudyContactEmail_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyContactEmail' on this record model
        """
        self.set_field_value(self.STUDYCONTACTEMAIL__FIELD_NAME.field_name, value)

    def get_StudyContactEmail_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyContactEmail' from this record model
        """
        return self.get_field_value(self.STUDYCONTACTEMAIL__FIELD_NAME.field_name)

    def set_StudyContactName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyContactName' on this record model
        """
        self.set_field_value(self.STUDYCONTACTNAME__FIELD_NAME.field_name, value)

    def get_StudyContactName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyContactName' from this record model
        """
        return self.get_field_value(self.STUDYCONTACTNAME__FIELD_NAME.field_name)

    def set_StudyDirector_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyDirector' on this record model
        """
        self.set_field_value(self.STUDYDIRECTOR__FIELD_NAME.field_name, value)

    def get_StudyDirector_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyDirector' from this record model
        """
        return self.get_field_value(self.STUDYDIRECTOR__FIELD_NAME.field_name)

    def set_StudyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyId' on this record model
        """
        self.set_field_value(self.STUDYID__FIELD_NAME.field_name, value)

    def get_StudyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyId' from this record model
        """
        return self.get_field_value(self.STUDYID__FIELD_NAME.field_name)

    def set_StudyName_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyName' on this record model
        """
        self.set_field_value(self.STUDYNAME__FIELD_NAME.field_name, value)

    def get_StudyName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyName' from this record model
        """
        return self.get_field_value(self.STUDYNAME__FIELD_NAME.field_name)

    def set_StudyStartDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'StudyStartDate' on this record model
        """
        self.set_field_value(self.STUDYSTARTDATE__FIELD_NAME.field_name, value)

    def get_StudyStartDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StudyStartDate' from this record model
        """
        return self.get_field_value(self.STUDYSTARTDATE__FIELD_NAME.field_name)

    def set_StudyStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyStatus' on this record model
        """
        self.set_field_value(self.STUDYSTATUS__FIELD_NAME.field_name, value)

    def get_StudyStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyStatus' from this record model
        """
        return self.get_field_value(self.STUDYSTATUS__FIELD_NAME.field_name)

    def set_StudySubjectRandomizerConfig_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudySubjectRandomizerConfig' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTRANDOMIZERCONFIG__FIELD_NAME.field_name, value)

    def get_StudySubjectRandomizerConfig_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudySubjectRandomizerConfig' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTRANDOMIZERCONFIG__FIELD_NAME.field_name)

    def set_StudyTitle_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyTitle' on this record model
        """
        self.set_field_value(self.STUDYTITLE__FIELD_NAME.field_name, value)

    def get_StudyTitle_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyTitle' from this record model
        """
        return self.get_field_value(self.STUDYTITLE__FIELD_NAME.field_name)

    def set_StudyType_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyType' on this record model
        """
        self.set_field_value(self.STUDYTYPE__FIELD_NAME.field_name, value)

    def get_StudyType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyType' from this record model
        """
        return self.get_field_value(self.STUDYTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StudySubjectModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StudySubject
    Data Type Display Name: Study Subject (Study Subjects)
    Fields: CreatedBy, SubjectStatus, MultiParentLink658, MultiParentLink704, DateCreated, Gender, GroupId, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, Species, StudySubjectID
    """
    DATA_TYPE_NAME: Final[str] = 'StudySubject'
    DISPLAY_NAME: Final[str] = "Study Subject"
    PLURAL_DISPLAY_NAME: Final[str] = "Study Subjects"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    GENDER__FIELD_NAME: Final[WrapperField] = WrapperField("Gender", FieldType.SELECTION, display_name="Gender")
    GROUPID__FIELD_NAME: Final[WrapperField] = WrapperField("GroupId", FieldType.INTEGER, display_name="Group ID")
    MULTIPARENTLINK658__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink658", FieldType.MULTIPARENTLINK, display_name="Linked Treatment Schedule")
    MULTIPARENTLINK704__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink704", FieldType.MULTIPARENTLINK, display_name="Linked Study Task")
    SPECIES__FIELD_NAME: Final[WrapperField] = WrapperField("Species", FieldType.PICKLIST, display_name="Species")
    STUDYSUBJECTID__FIELD_NAME: Final[WrapperField] = WrapperField("StudySubjectID", FieldType.STRING, display_name="Study Subject ID")
    SUBJECTSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("SubjectStatus", FieldType.PICKLIST, display_name="Status")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Gender_field(self, value: Optional[str]):
        """
        Set data field with field name 'Gender' on this record model
        """
        self.set_field_value(self.GENDER__FIELD_NAME.field_name, value)

    def get_Gender_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Gender' from this record model
        """
        return self.get_field_value(self.GENDER__FIELD_NAME.field_name)

    def set_GroupId_field(self, value: Optional[int]):
        """
        Set data field with field name 'GroupId' on this record model
        """
        self.set_field_value(self.GROUPID__FIELD_NAME.field_name, value)

    def get_GroupId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GroupId' from this record model
        """
        return self.get_field_value(self.GROUPID__FIELD_NAME.field_name)

    def set_Species_field(self, value: Optional[str]):
        """
        Set data field with field name 'Species' on this record model
        """
        self.set_field_value(self.SPECIES__FIELD_NAME.field_name, value)

    def get_Species_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Species' from this record model
        """
        return self.get_field_value(self.SPECIES__FIELD_NAME.field_name)

    def set_StudySubjectID_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudySubjectID' on this record model
        """
        self.set_field_value(self.STUDYSUBJECTID__FIELD_NAME.field_name, value)

    def get_StudySubjectID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudySubjectID' from this record model
        """
        return self.get_field_value(self.STUDYSUBJECTID__FIELD_NAME.field_name)

    def set_SubjectStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectStatus' on this record model
        """
        self.set_field_value(self.SUBJECTSTATUS__FIELD_NAME.field_name, value)

    def get_SubjectStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectStatus' from this record model
        """
        return self.get_field_value(self.SUBJECTSTATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StudySubjectRandomizerConfigModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StudySubjectRandomizerConfig
    Data Type Display Name: Study Subject Randomizer Configuration (Study Subject Randomizer Configurations)
    Fields: CreatedBy, DataRecordName, RandomizerDisplayName, RandomizerPluginPath, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'StudySubjectRandomizerConfig'
    DISPLAY_NAME: Final[str] = "Study Subject Randomizer Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Study Subject Randomizer Configurations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    RANDOMIZERDISPLAYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("RandomizerDisplayName", FieldType.STRING, display_name="Randomizer Display Name")
    RANDOMIZERPLUGINPATH__FIELD_NAME: Final[WrapperField] = WrapperField("RandomizerPluginPath", FieldType.STRING, display_name="Randomizer Plugin Path")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_RandomizerDisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'RandomizerDisplayName' on this record model
        """
        self.set_field_value(self.RANDOMIZERDISPLAYNAME__FIELD_NAME.field_name, value)

    def get_RandomizerDisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RandomizerDisplayName' from this record model
        """
        return self.get_field_value(self.RANDOMIZERDISPLAYNAME__FIELD_NAME.field_name)

    def set_RandomizerPluginPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'RandomizerPluginPath' on this record model
        """
        self.set_field_value(self.RANDOMIZERPLUGINPATH__FIELD_NAME.field_name, value)

    def get_RandomizerPluginPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RandomizerPluginPath' from this record model
        """
        return self.get_field_value(self.RANDOMIZERPLUGINPATH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StudySubjectRequestModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StudySubjectRequest
    Data Type Display Name: Study Subject Request (Study Subject Requests)
    Fields: NumberOfSubjects, LaunchSubjectRegistration, CreatedBy, DateCreated, SubjectCondition, Gender, Strain, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, Species
    """
    DATA_TYPE_NAME: Final[str] = 'StudySubjectRequest'
    DISPLAY_NAME: Final[str] = "Study Subject Request"
    PLURAL_DISPLAY_NAME: Final[str] = "Study Subject Requests"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    GENDER__FIELD_NAME: Final[WrapperField] = WrapperField("Gender", FieldType.SELECTION, display_name="Gender")
    LAUNCHSUBJECTREGISTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("LaunchSubjectRegistration", FieldType.ACTION, display_name="Begin Subject Registration")
    NUMBEROFSUBJECTS__FIELD_NAME: Final[WrapperField] = WrapperField("NumberOfSubjects", FieldType.INTEGER, display_name="Number Of Subjects")
    SPECIES__FIELD_NAME: Final[WrapperField] = WrapperField("Species", FieldType.PICKLIST, display_name="Species")
    STRAIN__FIELD_NAME: Final[WrapperField] = WrapperField("Strain", FieldType.SELECTION, display_name="Strain")
    SUBJECTCONDITION__FIELD_NAME: Final[WrapperField] = WrapperField("SubjectCondition", FieldType.SELECTION, display_name="Subject Condition")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Gender_field(self, value: Optional[str]):
        """
        Set data field with field name 'Gender' on this record model
        """
        self.set_field_value(self.GENDER__FIELD_NAME.field_name, value)

    def get_Gender_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Gender' from this record model
        """
        return self.get_field_value(self.GENDER__FIELD_NAME.field_name)

    def set_NumberOfSubjects_field(self, value: Optional[int]):
        """
        Set data field with field name 'NumberOfSubjects' on this record model
        """
        self.set_field_value(self.NUMBEROFSUBJECTS__FIELD_NAME.field_name, value)

    def get_NumberOfSubjects_field(self) -> Optional[int]:
        """
        Get data field value with field name 'NumberOfSubjects' from this record model
        """
        return self.get_field_value(self.NUMBEROFSUBJECTS__FIELD_NAME.field_name)

    def set_Species_field(self, value: Optional[str]):
        """
        Set data field with field name 'Species' on this record model
        """
        self.set_field_value(self.SPECIES__FIELD_NAME.field_name, value)

    def get_Species_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Species' from this record model
        """
        return self.get_field_value(self.SPECIES__FIELD_NAME.field_name)

    def set_Strain_field(self, value: Optional[str]):
        """
        Set data field with field name 'Strain' on this record model
        """
        self.set_field_value(self.STRAIN__FIELD_NAME.field_name, value)

    def get_Strain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Strain' from this record model
        """
        return self.get_field_value(self.STRAIN__FIELD_NAME.field_name)

    def set_SubjectCondition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectCondition' on this record model
        """
        self.set_field_value(self.SUBJECTCONDITION__FIELD_NAME.field_name, value)

    def get_SubjectCondition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectCondition' from this record model
        """
        return self.get_field_value(self.SUBJECTCONDITION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StudyTaskModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StudyTask
    Data Type Display Name: Study Task (Study Tasks)
    Fields: Assignee, CreatedBy, ObservationType, DateCreated, ScheduleDate, TaskStatus, DosingAgent, SamplingScheduleRecordId, BiologicalMatrix, StudyId, DataRecordName, TreatmentRecordId, SamplingSplitNumber, TreatmentScheduleRecordId, TaskType, MeasurementScheduleRecordId, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'StudyTask'
    DISPLAY_NAME: Final[str] = "Study Task"
    PLURAL_DISPLAY_NAME: Final[str] = "Study Tasks"
    ASSIGNEE__FIELD_NAME: Final[WrapperField] = WrapperField("Assignee", FieldType.SELECTION, display_name="Assignee")
    BIOLOGICALMATRIX__FIELD_NAME: Final[WrapperField] = WrapperField("BiologicalMatrix", FieldType.SELECTION, display_name="Biological Matrix")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DOSINGAGENT__FIELD_NAME: Final[WrapperField] = WrapperField("DosingAgent", FieldType.SELECTION, display_name="Dosing Agent")
    MEASUREMENTSCHEDULERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("MeasurementScheduleRecordId", FieldType.LONG, display_name="Measurement Schedule Record Id")
    OBSERVATIONTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ObservationType", FieldType.SELECTION, display_name="Observation Type")
    SAMPLINGSCHEDULERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SamplingScheduleRecordId", FieldType.LONG, display_name="Sampling Schedule Record Id")
    SAMPLINGSPLITNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("SamplingSplitNumber", FieldType.INTEGER, display_name="Sampling Split Number")
    SCHEDULEDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ScheduleDate", FieldType.DATE, display_name="Schedule Date")
    STUDYID__FIELD_NAME: Final[WrapperField] = WrapperField("StudyId", FieldType.STRING, display_name="Study ID")
    TASKSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("TaskStatus", FieldType.SELECTION, display_name="Task Status")
    TASKTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("TaskType", FieldType.SELECTION, display_name="Task Type")
    TREATMENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("TreatmentRecordId", FieldType.LONG, display_name="Treatment Record Id")
    TREATMENTSCHEDULERECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("TreatmentScheduleRecordId", FieldType.LONG, display_name="Treatment Schedule Record Id")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Assignee_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assignee' on this record model
        """
        self.set_field_value(self.ASSIGNEE__FIELD_NAME.field_name, value)

    def get_Assignee_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assignee' from this record model
        """
        return self.get_field_value(self.ASSIGNEE__FIELD_NAME.field_name)

    def set_BiologicalMatrix_field(self, value: Optional[str]):
        """
        Set data field with field name 'BiologicalMatrix' on this record model
        """
        self.set_field_value(self.BIOLOGICALMATRIX__FIELD_NAME.field_name, value)

    def get_BiologicalMatrix_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BiologicalMatrix' from this record model
        """
        return self.get_field_value(self.BIOLOGICALMATRIX__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DosingAgent_field(self, value: Optional[str]):
        """
        Set data field with field name 'DosingAgent' on this record model
        """
        self.set_field_value(self.DOSINGAGENT__FIELD_NAME.field_name, value)

    def get_DosingAgent_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DosingAgent' from this record model
        """
        return self.get_field_value(self.DOSINGAGENT__FIELD_NAME.field_name)

    def set_MeasurementScheduleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'MeasurementScheduleRecordId' on this record model
        """
        self.set_field_value(self.MEASUREMENTSCHEDULERECORDID__FIELD_NAME.field_name, value)

    def get_MeasurementScheduleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MeasurementScheduleRecordId' from this record model
        """
        return self.get_field_value(self.MEASUREMENTSCHEDULERECORDID__FIELD_NAME.field_name)

    def set_ObservationType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ObservationType' on this record model
        """
        self.set_field_value(self.OBSERVATIONTYPE__FIELD_NAME.field_name, value)

    def get_ObservationType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ObservationType' from this record model
        """
        return self.get_field_value(self.OBSERVATIONTYPE__FIELD_NAME.field_name)

    def set_SamplingScheduleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplingScheduleRecordId' on this record model
        """
        self.set_field_value(self.SAMPLINGSCHEDULERECORDID__FIELD_NAME.field_name, value)

    def get_SamplingScheduleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplingScheduleRecordId' from this record model
        """
        return self.get_field_value(self.SAMPLINGSCHEDULERECORDID__FIELD_NAME.field_name)

    def set_SamplingSplitNumber_field(self, value: Optional[int]):
        """
        Set data field with field name 'SamplingSplitNumber' on this record model
        """
        self.set_field_value(self.SAMPLINGSPLITNUMBER__FIELD_NAME.field_name, value)

    def get_SamplingSplitNumber_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SamplingSplitNumber' from this record model
        """
        return self.get_field_value(self.SAMPLINGSPLITNUMBER__FIELD_NAME.field_name)

    def set_ScheduleDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ScheduleDate' on this record model
        """
        self.set_field_value(self.SCHEDULEDATE__FIELD_NAME.field_name, value)

    def get_ScheduleDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ScheduleDate' from this record model
        """
        return self.get_field_value(self.SCHEDULEDATE__FIELD_NAME.field_name)

    def set_StudyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyId' on this record model
        """
        self.set_field_value(self.STUDYID__FIELD_NAME.field_name, value)

    def get_StudyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyId' from this record model
        """
        return self.get_field_value(self.STUDYID__FIELD_NAME.field_name)

    def set_TaskStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'TaskStatus' on this record model
        """
        self.set_field_value(self.TASKSTATUS__FIELD_NAME.field_name, value)

    def get_TaskStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TaskStatus' from this record model
        """
        return self.get_field_value(self.TASKSTATUS__FIELD_NAME.field_name)

    def set_TaskType_field(self, value: Optional[str]):
        """
        Set data field with field name 'TaskType' on this record model
        """
        self.set_field_value(self.TASKTYPE__FIELD_NAME.field_name, value)

    def get_TaskType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TaskType' from this record model
        """
        return self.get_field_value(self.TASKTYPE__FIELD_NAME.field_name)

    def set_TreatmentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'TreatmentRecordId' on this record model
        """
        self.set_field_value(self.TREATMENTRECORDID__FIELD_NAME.field_name, value)

    def get_TreatmentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TreatmentRecordId' from this record model
        """
        return self.get_field_value(self.TREATMENTRECORDID__FIELD_NAME.field_name)

    def set_TreatmentScheduleRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'TreatmentScheduleRecordId' on this record model
        """
        self.set_field_value(self.TREATMENTSCHEDULERECORDID__FIELD_NAME.field_name, value)

    def get_TreatmentScheduleRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TreatmentScheduleRecordId' from this record model
        """
        return self.get_field_value(self.TREATMENTSCHEDULERECORDID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StudyTaskGroupModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StudyTaskGroup
    Data Type Display Name: Study Task Group (Study Task Groups)
    Fields: Assignee, Description, CreatedBy, DateCreated, ScheduleDate, TaskStatus, StudyId, DataRecordName, TaskType, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'StudyTaskGroup'
    DISPLAY_NAME: Final[str] = "Study Task Group"
    PLURAL_DISPLAY_NAME: Final[str] = "Study Task Groups"
    ASSIGNEE__FIELD_NAME: Final[WrapperField] = WrapperField("Assignee", FieldType.SELECTION, display_name="Assignee")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    SCHEDULEDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ScheduleDate", FieldType.DATE, display_name="Schedule Date")
    STUDYID__FIELD_NAME: Final[WrapperField] = WrapperField("StudyId", FieldType.STRING, display_name="Study ID")
    TASKSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("TaskStatus", FieldType.SELECTION, display_name="Task Status")
    TASKTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("TaskType", FieldType.SELECTION, display_name="Task Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Assignee_field(self, value: Optional[str]):
        """
        Set data field with field name 'Assignee' on this record model
        """
        self.set_field_value(self.ASSIGNEE__FIELD_NAME.field_name, value)

    def get_Assignee_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Assignee' from this record model
        """
        return self.get_field_value(self.ASSIGNEE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_ScheduleDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ScheduleDate' on this record model
        """
        self.set_field_value(self.SCHEDULEDATE__FIELD_NAME.field_name, value)

    def get_ScheduleDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ScheduleDate' from this record model
        """
        return self.get_field_value(self.SCHEDULEDATE__FIELD_NAME.field_name)

    def set_StudyId_field(self, value: Optional[str]):
        """
        Set data field with field name 'StudyId' on this record model
        """
        self.set_field_value(self.STUDYID__FIELD_NAME.field_name, value)

    def get_StudyId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StudyId' from this record model
        """
        return self.get_field_value(self.STUDYID__FIELD_NAME.field_name)

    def set_TaskStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'TaskStatus' on this record model
        """
        self.set_field_value(self.TASKSTATUS__FIELD_NAME.field_name, value)

    def get_TaskStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TaskStatus' from this record model
        """
        return self.get_field_value(self.TASKSTATUS__FIELD_NAME.field_name)

    def set_TaskType_field(self, value: Optional[str]):
        """
        Set data field with field name 'TaskType' on this record model
        """
        self.set_field_value(self.TASKTYPE__FIELD_NAME.field_name, value)

    def get_TaskType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TaskType' from this record model
        """
        return self.get_field_value(self.TASKTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class StudyTaskObservationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type StudyTaskObservation
    Data Type Display Name: Study Task Observation (Study Task Observations)
    Fields: BodyMass.CreatedBy, TumorVolume.VeloxLastModifiedBy, BodyMass.VeloxLastModifiedDate, BodyMass.RelatedRecord730, TumorVolume.CreatedBy, TumorVolume.Volumemm, DateCreated, TumorVolume.RelatedParentRecordId, BodyMass.RecordId, DateCompleted, TumorVolume.RecordId, VeloxLastModifiedBy, TumorVolume.VeloxLastModifiedDate, BodyMass.DateCreated, BodyMass.MassUnits, TumorVolume.DateCreated, BodyMass.DataRecordName, BodyMass.ObservationInstrument, CreatedBy, TumorVolume.Measure1mm, TumorVolume.Measure2mm, StudyRecordId, BodyMass.VeloxLastModifiedBy, BodyMass.RelatedParentRecordId, DataRecordName, BodyMass.Mass, VeloxLastModifiedDate, TumorVolume.ObservationInstrument, TumorVolume.RelatedRecord730, TumorVolume.DataRecordName
    """
    DATA_TYPE_NAME: Final[str] = 'StudyTaskObservation'
    DISPLAY_NAME: Final[str] = "Study Task Observation"
    PLURAL_DISPLAY_NAME: Final[str] = "Study Task Observations"
    BODYMASS_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("BodyMass.CreatedBy", FieldType.STRING, display_name="Created By")
    BODYMASS_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("BodyMass.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    BODYMASS_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("BodyMass.DateCreated", FieldType.DATE, display_name="Date Created")
    BODYMASS_EXT_MASS__FIELD_NAME: Final[WrapperField] = WrapperField("BodyMass.Mass", FieldType.DOUBLE, display_name="Mass")
    BODYMASS_EXT_MASSUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("BodyMass.MassUnits", FieldType.PICKLIST, display_name="Mass Units")
    BODYMASS_EXT_OBSERVATIONINSTRUMENT__FIELD_NAME: Final[WrapperField] = WrapperField("BodyMass.ObservationInstrument", FieldType.SELECTION, display_name="Body Mass Scale")
    BODYMASS_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("BodyMass.RecordId", FieldType.LONG, display_name="Record ID")
    BODYMASS_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("BodyMass.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    BODYMASS_EXT_RELATEDRECORD730__FIELD_NAME: Final[WrapperField] = WrapperField("BodyMass.RelatedRecord730", FieldType.PARENTLINK, display_name="Linked Study Task Observation")
    BODYMASS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("BodyMass.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    BODYMASS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("BodyMass.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECOMPLETED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCompleted", FieldType.DATE, display_name="Date Completed")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    STUDYRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("StudyRecordId", FieldType.LONG, display_name="Study Record ID")
    TUMORVOLUME_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("TumorVolume.CreatedBy", FieldType.STRING, display_name="Created By")
    TUMORVOLUME_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("TumorVolume.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    TUMORVOLUME_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("TumorVolume.DateCreated", FieldType.DATE, display_name="Date Created")
    TUMORVOLUME_EXT_MEASURE1MM__FIELD_NAME: Final[WrapperField] = WrapperField("TumorVolume.Measure1mm", FieldType.DOUBLE, display_name="Measure 1 (mm)")
    TUMORVOLUME_EXT_MEASURE2MM__FIELD_NAME: Final[WrapperField] = WrapperField("TumorVolume.Measure2mm", FieldType.DOUBLE, display_name="Measure 2 (mm)")
    TUMORVOLUME_EXT_OBSERVATIONINSTRUMENT__FIELD_NAME: Final[WrapperField] = WrapperField("TumorVolume.ObservationInstrument", FieldType.SELECTION, display_name="Caliper")
    TUMORVOLUME_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("TumorVolume.RecordId", FieldType.LONG, display_name="Record ID")
    TUMORVOLUME_EXT_RELATEDPARENTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("TumorVolume.RelatedParentRecordId", FieldType.LONG, display_name="Linked Parent Record ID")
    TUMORVOLUME_EXT_RELATEDRECORD730__FIELD_NAME: Final[WrapperField] = WrapperField("TumorVolume.RelatedRecord730", FieldType.PARENTLINK, display_name="Linked Study Task Observation")
    TUMORVOLUME_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("TumorVolume.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    TUMORVOLUME_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("TumorVolume.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    TUMORVOLUME_EXT_VOLUMEMM__FIELD_NAME: Final[WrapperField] = WrapperField("TumorVolume.Volumemm", FieldType.DOUBLE, display_name="Volume (mm\u00B3)")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_BodyMassCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'BodyMass.CreatedBy' on this record model
        """
        self.set_field_value(self.BODYMASS_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_BodyMassCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BodyMass.CreatedBy' from this record model
        """
        return self.get_field_value(self.BODYMASS_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_BodyMassDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'BodyMass.DateCreated' on this record model
        """
        self.set_field_value(self.BODYMASS_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_BodyMassDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BodyMass.DateCreated' from this record model
        """
        return self.get_field_value(self.BODYMASS_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_BodyMassMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'BodyMass.Mass' on this record model
        """
        self.set_field_value(self.BODYMASS_EXT_MASS__FIELD_NAME.field_name, value)

    def get_BodyMassMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BodyMass.Mass' from this record model
        """
        return self.get_field_value(self.BODYMASS_EXT_MASS__FIELD_NAME.field_name)

    def set_BodyMassMassUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'BodyMass.MassUnits' on this record model
        """
        self.set_field_value(self.BODYMASS_EXT_MASSUNITS__FIELD_NAME.field_name, value)

    def get_BodyMassMassUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BodyMass.MassUnits' from this record model
        """
        return self.get_field_value(self.BODYMASS_EXT_MASSUNITS__FIELD_NAME.field_name)

    def set_BodyMassObservationInstrument_field(self, value: Optional[str]):
        """
        Set data field with field name 'BodyMass.ObservationInstrument' on this record model
        """
        self.set_field_value(self.BODYMASS_EXT_OBSERVATIONINSTRUMENT__FIELD_NAME.field_name, value)

    def get_BodyMassObservationInstrument_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BodyMass.ObservationInstrument' from this record model
        """
        return self.get_field_value(self.BODYMASS_EXT_OBSERVATIONINSTRUMENT__FIELD_NAME.field_name)

    def set_BodyMassRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BodyMass.RecordId' on this record model
        """
        self.set_field_value(self.BODYMASS_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_BodyMassRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BodyMass.RecordId' from this record model
        """
        return self.get_field_value(self.BODYMASS_EXT_RECORDID__FIELD_NAME.field_name)

    def set_BodyMassRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'BodyMass.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.BODYMASS_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_BodyMassRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BodyMass.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.BODYMASS_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_BodyMassVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'BodyMass.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.BODYMASS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_BodyMassVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BodyMass.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.BODYMASS_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_BodyMassVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'BodyMass.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.BODYMASS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_BodyMassVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'BodyMass.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.BODYMASS_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DateCompleted_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateCompleted' on this record model
        """
        self.set_field_value(self.DATECOMPLETED__FIELD_NAME.field_name, value)

    def get_DateCompleted_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCompleted' from this record model
        """
        return self.get_field_value(self.DATECOMPLETED__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_StudyRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'StudyRecordId' on this record model
        """
        self.set_field_value(self.STUDYRECORDID__FIELD_NAME.field_name, value)

    def get_StudyRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'StudyRecordId' from this record model
        """
        return self.get_field_value(self.STUDYRECORDID__FIELD_NAME.field_name)

    def set_TumorVolumeCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'TumorVolume.CreatedBy' on this record model
        """
        self.set_field_value(self.TUMORVOLUME_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_TumorVolumeCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TumorVolume.CreatedBy' from this record model
        """
        return self.get_field_value(self.TUMORVOLUME_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_TumorVolumeDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'TumorVolume.DateCreated' on this record model
        """
        self.set_field_value(self.TUMORVOLUME_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_TumorVolumeDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TumorVolume.DateCreated' from this record model
        """
        return self.get_field_value(self.TUMORVOLUME_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_TumorVolumeMeasure1mm_field(self, value: Optional[float]):
        """
        Set data field with field name 'TumorVolume.Measure1mm' on this record model
        """
        self.set_field_value(self.TUMORVOLUME_EXT_MEASURE1MM__FIELD_NAME.field_name, value)

    def get_TumorVolumeMeasure1mm_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TumorVolume.Measure1mm' from this record model
        """
        return self.get_field_value(self.TUMORVOLUME_EXT_MEASURE1MM__FIELD_NAME.field_name)

    def set_TumorVolumeMeasure2mm_field(self, value: Optional[float]):
        """
        Set data field with field name 'TumorVolume.Measure2mm' on this record model
        """
        self.set_field_value(self.TUMORVOLUME_EXT_MEASURE2MM__FIELD_NAME.field_name, value)

    def get_TumorVolumeMeasure2mm_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TumorVolume.Measure2mm' from this record model
        """
        return self.get_field_value(self.TUMORVOLUME_EXT_MEASURE2MM__FIELD_NAME.field_name)

    def set_TumorVolumeObservationInstrument_field(self, value: Optional[str]):
        """
        Set data field with field name 'TumorVolume.ObservationInstrument' on this record model
        """
        self.set_field_value(self.TUMORVOLUME_EXT_OBSERVATIONINSTRUMENT__FIELD_NAME.field_name, value)

    def get_TumorVolumeObservationInstrument_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TumorVolume.ObservationInstrument' from this record model
        """
        return self.get_field_value(self.TUMORVOLUME_EXT_OBSERVATIONINSTRUMENT__FIELD_NAME.field_name)

    def set_TumorVolumeRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'TumorVolume.RecordId' on this record model
        """
        self.set_field_value(self.TUMORVOLUME_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_TumorVolumeRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TumorVolume.RecordId' from this record model
        """
        return self.get_field_value(self.TUMORVOLUME_EXT_RECORDID__FIELD_NAME.field_name)

    def set_TumorVolumeRelatedParentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'TumorVolume.RelatedParentRecordId' on this record model
        """
        self.set_field_value(self.TUMORVOLUME_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name, value)

    def get_TumorVolumeRelatedParentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TumorVolume.RelatedParentRecordId' from this record model
        """
        return self.get_field_value(self.TUMORVOLUME_EXT_RELATEDPARENTRECORDID__FIELD_NAME.field_name)

    def set_TumorVolumeVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'TumorVolume.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.TUMORVOLUME_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_TumorVolumeVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TumorVolume.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.TUMORVOLUME_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_TumorVolumeVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'TumorVolume.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.TUMORVOLUME_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_TumorVolumeVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TumorVolume.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.TUMORVOLUME_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_TumorVolumeVolumemm_field(self, value: Optional[float]):
        """
        Set data field with field name 'TumorVolume.Volumemm' on this record model
        """
        self.set_field_value(self.TUMORVOLUME_EXT_VOLUMEMM__FIELD_NAME.field_name, value)

    def get_TumorVolumeVolumemm_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TumorVolume.Volumemm' from this record model
        """
        return self.get_field_value(self.TUMORVOLUME_EXT_VOLUMEMM__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SubjectModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Subject
    Data Type Display Name: Subject (Subjects)
    Fields: Site, BodyMass, SubjectName, DateCreated, Gender, SubjectCondition, RowPosition, ColPosition, VeloxLastModifiedBy, Height, Species, Age, StorageLocationBarcode, DateOfBirth, CreatedBy, SubjectStatus, MultiParentLink704, Genotype, Vendor, StorageUnitPath, Weight, Strain, BodyMassUnits, DataRecordName, VeloxLastModifiedDate, SubjectID
    """
    DATA_TYPE_NAME: Final[str] = 'Subject'
    DISPLAY_NAME: Final[str] = "Subject"
    PLURAL_DISPLAY_NAME: Final[str] = "Subjects"
    AGE__FIELD_NAME: Final[WrapperField] = WrapperField("Age", FieldType.DOUBLE, display_name="Age (year)")
    BODYMASS__FIELD_NAME: Final[WrapperField] = WrapperField("BodyMass", FieldType.DOUBLE, display_name="Body Mass")
    BODYMASSUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("BodyMassUnits", FieldType.PICKLIST, display_name="Body Mass Units")
    COLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("ColPosition", FieldType.SELECTION, display_name="Column Position")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DATEOFBIRTH__FIELD_NAME: Final[WrapperField] = WrapperField("DateOfBirth", FieldType.DATE, display_name="Date of Birth")
    GENDER__FIELD_NAME: Final[WrapperField] = WrapperField("Gender", FieldType.SELECTION, display_name="Gender")
    GENOTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("Genotype", FieldType.STRING, display_name="Genotype")
    HEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("Height", FieldType.DOUBLE, display_name="Height (cm)")
    MULTIPARENTLINK704__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink704", FieldType.MULTIPARENTLINK, display_name="Linked Study Task")
    ROWPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("RowPosition", FieldType.SELECTION, display_name="Row Position")
    SITE__FIELD_NAME: Final[WrapperField] = WrapperField("Site", FieldType.PICKLIST, display_name="Site")
    SPECIES__FIELD_NAME: Final[WrapperField] = WrapperField("Species", FieldType.PICKLIST, display_name="Species")
    STORAGELOCATIONBARCODE__FIELD_NAME: Final[WrapperField] = WrapperField("StorageLocationBarcode", FieldType.SELECTION, display_name="Storage Location Barcode")
    STORAGEUNITPATH__FIELD_NAME: Final[WrapperField] = WrapperField("StorageUnitPath", FieldType.STRING, display_name="Storage Location Path")
    STRAIN__FIELD_NAME: Final[WrapperField] = WrapperField("Strain", FieldType.SELECTION, display_name="Strain")
    SUBJECTCONDITION__FIELD_NAME: Final[WrapperField] = WrapperField("SubjectCondition", FieldType.SELECTION, display_name="Subject Condition")
    SUBJECTID__FIELD_NAME: Final[WrapperField] = WrapperField("SubjectID", FieldType.AUTO_ACCESSION, display_name="Subject ID")
    SUBJECTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("SubjectName", FieldType.STRING, display_name="Ear Tag")
    SUBJECTSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("SubjectStatus", FieldType.PICKLIST, display_name="Status")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.STRING, display_name="Vendor")
    WEIGHT__FIELD_NAME: Final[WrapperField] = WrapperField("Weight", FieldType.DOUBLE, display_name="Weight (kg)")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Age_field(self, value: Optional[float]):
        """
        Set data field with field name 'Age' on this record model
        """
        self.set_field_value(self.AGE__FIELD_NAME.field_name, value)

    def get_Age_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Age' from this record model
        """
        return self.get_field_value(self.AGE__FIELD_NAME.field_name)

    def set_BodyMass_field(self, value: Optional[float]):
        """
        Set data field with field name 'BodyMass' on this record model
        """
        self.set_field_value(self.BODYMASS__FIELD_NAME.field_name, value)

    def get_BodyMass_field(self) -> Optional[float]:
        """
        Get data field value with field name 'BodyMass' from this record model
        """
        return self.get_field_value(self.BODYMASS__FIELD_NAME.field_name)

    def set_BodyMassUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'BodyMassUnits' on this record model
        """
        self.set_field_value(self.BODYMASSUNITS__FIELD_NAME.field_name, value)

    def get_BodyMassUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'BodyMassUnits' from this record model
        """
        return self.get_field_value(self.BODYMASSUNITS__FIELD_NAME.field_name)

    def set_ColPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'ColPosition' on this record model
        """
        self.set_field_value(self.COLPOSITION__FIELD_NAME.field_name, value)

    def get_ColPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ColPosition' from this record model
        """
        return self.get_field_value(self.COLPOSITION__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateOfBirth_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateOfBirth' on this record model
        """
        self.set_field_value(self.DATEOFBIRTH__FIELD_NAME.field_name, value)

    def get_DateOfBirth_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateOfBirth' from this record model
        """
        return self.get_field_value(self.DATEOFBIRTH__FIELD_NAME.field_name)

    def set_Gender_field(self, value: Optional[str]):
        """
        Set data field with field name 'Gender' on this record model
        """
        self.set_field_value(self.GENDER__FIELD_NAME.field_name, value)

    def get_Gender_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Gender' from this record model
        """
        return self.get_field_value(self.GENDER__FIELD_NAME.field_name)

    def set_Genotype_field(self, value: Optional[str]):
        """
        Set data field with field name 'Genotype' on this record model
        """
        self.set_field_value(self.GENOTYPE__FIELD_NAME.field_name, value)

    def get_Genotype_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Genotype' from this record model
        """
        return self.get_field_value(self.GENOTYPE__FIELD_NAME.field_name)

    def set_Height_field(self, value: Optional[float]):
        """
        Set data field with field name 'Height' on this record model
        """
        self.set_field_value(self.HEIGHT__FIELD_NAME.field_name, value)

    def get_Height_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Height' from this record model
        """
        return self.get_field_value(self.HEIGHT__FIELD_NAME.field_name)

    def set_RowPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'RowPosition' on this record model
        """
        self.set_field_value(self.ROWPOSITION__FIELD_NAME.field_name, value)

    def get_RowPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RowPosition' from this record model
        """
        return self.get_field_value(self.ROWPOSITION__FIELD_NAME.field_name)

    def set_Site_field(self, value: Optional[str]):
        """
        Set data field with field name 'Site' on this record model
        """
        self.set_field_value(self.SITE__FIELD_NAME.field_name, value)

    def get_Site_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Site' from this record model
        """
        return self.get_field_value(self.SITE__FIELD_NAME.field_name)

    def set_Species_field(self, value: Optional[str]):
        """
        Set data field with field name 'Species' on this record model
        """
        self.set_field_value(self.SPECIES__FIELD_NAME.field_name, value)

    def get_Species_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Species' from this record model
        """
        return self.get_field_value(self.SPECIES__FIELD_NAME.field_name)

    def set_StorageLocationBarcode_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageLocationBarcode' on this record model
        """
        self.set_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name, value)

    def get_StorageLocationBarcode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageLocationBarcode' from this record model
        """
        return self.get_field_value(self.STORAGELOCATIONBARCODE__FIELD_NAME.field_name)

    def set_StorageUnitPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'StorageUnitPath' on this record model
        """
        self.set_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name, value)

    def get_StorageUnitPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'StorageUnitPath' from this record model
        """
        return self.get_field_value(self.STORAGEUNITPATH__FIELD_NAME.field_name)

    def set_Strain_field(self, value: Optional[str]):
        """
        Set data field with field name 'Strain' on this record model
        """
        self.set_field_value(self.STRAIN__FIELD_NAME.field_name, value)

    def get_Strain_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Strain' from this record model
        """
        return self.get_field_value(self.STRAIN__FIELD_NAME.field_name)

    def set_SubjectCondition_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectCondition' on this record model
        """
        self.set_field_value(self.SUBJECTCONDITION__FIELD_NAME.field_name, value)

    def get_SubjectCondition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectCondition' from this record model
        """
        return self.get_field_value(self.SUBJECTCONDITION__FIELD_NAME.field_name)

    def set_SubjectID_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectID' on this record model
        """
        self.set_field_value(self.SUBJECTID__FIELD_NAME.field_name, value)

    def get_SubjectID_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectID' from this record model
        """
        return self.get_field_value(self.SUBJECTID__FIELD_NAME.field_name)

    def set_SubjectName_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectName' on this record model
        """
        self.set_field_value(self.SUBJECTNAME__FIELD_NAME.field_name, value)

    def get_SubjectName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectName' from this record model
        """
        return self.get_field_value(self.SUBJECTNAME__FIELD_NAME.field_name)

    def set_SubjectStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'SubjectStatus' on this record model
        """
        self.set_field_value(self.SUBJECTSTATUS__FIELD_NAME.field_name, value)

    def get_SubjectStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'SubjectStatus' from this record model
        """
        return self.get_field_value(self.SUBJECTSTATUS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)

    def set_Weight_field(self, value: Optional[float]):
        """
        Set data field with field name 'Weight' on this record model
        """
        self.set_field_value(self.WEIGHT__FIELD_NAME.field_name, value)

    def get_Weight_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Weight' from this record model
        """
        return self.get_field_value(self.WEIGHT__FIELD_NAME.field_name)


class SubjectMeasurementScheduleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SubjectMeasurementSchedule
    Data Type Display Name: Subject Observation Schedule (Subject Observation Schedules)
    Fields: MeasuringMilliseconds, TimepointDuration, CreatedBy, DateCreated, GroupId, UnitsOfMeasure, IsPredose, DataRecordName, MeasurementType, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'SubjectMeasurementSchedule'
    DISPLAY_NAME: Final[str] = "Subject Observation Schedule"
    PLURAL_DISPLAY_NAME: Final[str] = "Subject Observation Schedules"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    GROUPID__FIELD_NAME: Final[WrapperField] = WrapperField("GroupId", FieldType.INTEGER, display_name="Group ID")
    ISPREDOSE__FIELD_NAME: Final[WrapperField] = WrapperField("IsPredose", FieldType.BOOLEAN, display_name="Is Predose")
    MEASUREMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("MeasurementType", FieldType.SELECTION, display_name="Observation Type")
    MEASURINGMILLISECONDS__FIELD_NAME: Final[WrapperField] = WrapperField("MeasuringMilliseconds", FieldType.LONG, display_name="Observation Milliseconds")
    TIMEPOINTDURATION__FIELD_NAME: Final[WrapperField] = WrapperField("TimepointDuration", FieldType.DATE, display_name="Duration (HH:mm)")
    UNITSOFMEASURE__FIELD_NAME: Final[WrapperField] = WrapperField("UnitsOfMeasure", FieldType.PICKLIST, display_name="U/M")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_GroupId_field(self, value: Optional[int]):
        """
        Set data field with field name 'GroupId' on this record model
        """
        self.set_field_value(self.GROUPID__FIELD_NAME.field_name, value)

    def get_GroupId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'GroupId' from this record model
        """
        return self.get_field_value(self.GROUPID__FIELD_NAME.field_name)

    def set_IsPredose_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsPredose' on this record model
        """
        self.set_field_value(self.ISPREDOSE__FIELD_NAME.field_name, value)

    def get_IsPredose_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsPredose' from this record model
        """
        return self.get_field_value(self.ISPREDOSE__FIELD_NAME.field_name)

    def set_MeasurementType_field(self, value: Optional[str]):
        """
        Set data field with field name 'MeasurementType' on this record model
        """
        self.set_field_value(self.MEASUREMENTTYPE__FIELD_NAME.field_name, value)

    def get_MeasurementType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MeasurementType' from this record model
        """
        return self.get_field_value(self.MEASUREMENTTYPE__FIELD_NAME.field_name)

    def set_MeasuringMilliseconds_field(self, value: Optional[int]):
        """
        Set data field with field name 'MeasuringMilliseconds' on this record model
        """
        self.set_field_value(self.MEASURINGMILLISECONDS__FIELD_NAME.field_name, value)

    def get_MeasuringMilliseconds_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MeasuringMilliseconds' from this record model
        """
        return self.get_field_value(self.MEASURINGMILLISECONDS__FIELD_NAME.field_name)

    def set_TimepointDuration_field(self, value: Optional[int]):
        """
        Set data field with field name 'TimepointDuration' on this record model
        """
        self.set_field_value(self.TIMEPOINTDURATION__FIELD_NAME.field_name, value)

    def get_TimepointDuration_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TimepointDuration' from this record model
        """
        return self.get_field_value(self.TIMEPOINTDURATION__FIELD_NAME.field_name)

    def set_UnitsOfMeasure_field(self, value: Optional[str]):
        """
        Set data field with field name 'UnitsOfMeasure' on this record model
        """
        self.set_field_value(self.UNITSOFMEASURE__FIELD_NAME.field_name, value)

    def get_UnitsOfMeasure_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UnitsOfMeasure' from this record model
        """
        return self.get_field_value(self.UNITSOFMEASURE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SubjectObservationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SubjectObservation
    Data Type Display Name: Subject Observation (Subject Observations)
    Fields: CreatedBy, DateCreated, SubjectRecordId, MeasurementValue, MeasuredBy, UnitsOfMeasure, MeasurementDate, DataRecordName, MeasurementType, VeloxLastModifiedDate, VeloxLastModifiedBy
    """
    DATA_TYPE_NAME: Final[str] = 'SubjectObservation'
    DISPLAY_NAME: Final[str] = "Subject Observation"
    PLURAL_DISPLAY_NAME: Final[str] = "Subject Observations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MEASUREDBY__FIELD_NAME: Final[WrapperField] = WrapperField("MeasuredBy", FieldType.SELECTION, display_name="Measured By")
    MEASUREMENTDATE__FIELD_NAME: Final[WrapperField] = WrapperField("MeasurementDate", FieldType.DATE, display_name="Measurement Date")
    MEASUREMENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("MeasurementType", FieldType.SELECTION, display_name="Measurement Type")
    MEASUREMENTVALUE__FIELD_NAME: Final[WrapperField] = WrapperField("MeasurementValue", FieldType.DOUBLE, display_name="Measurement Value")
    SUBJECTRECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("SubjectRecordId", FieldType.LONG, display_name="Subject Record ID")
    UNITSOFMEASURE__FIELD_NAME: Final[WrapperField] = WrapperField("UnitsOfMeasure", FieldType.PICKLIST, display_name="U/M")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_MeasuredBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'MeasuredBy' on this record model
        """
        self.set_field_value(self.MEASUREDBY__FIELD_NAME.field_name, value)

    def get_MeasuredBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MeasuredBy' from this record model
        """
        return self.get_field_value(self.MEASUREDBY__FIELD_NAME.field_name)

    def set_MeasurementDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'MeasurementDate' on this record model
        """
        self.set_field_value(self.MEASUREMENTDATE__FIELD_NAME.field_name, value)

    def get_MeasurementDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'MeasurementDate' from this record model
        """
        return self.get_field_value(self.MEASUREMENTDATE__FIELD_NAME.field_name)

    def set_MeasurementType_field(self, value: Optional[str]):
        """
        Set data field with field name 'MeasurementType' on this record model
        """
        self.set_field_value(self.MEASUREMENTTYPE__FIELD_NAME.field_name, value)

    def get_MeasurementType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MeasurementType' from this record model
        """
        return self.get_field_value(self.MEASUREMENTTYPE__FIELD_NAME.field_name)

    def set_MeasurementValue_field(self, value: Optional[float]):
        """
        Set data field with field name 'MeasurementValue' on this record model
        """
        self.set_field_value(self.MEASUREMENTVALUE__FIELD_NAME.field_name, value)

    def get_MeasurementValue_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MeasurementValue' from this record model
        """
        return self.get_field_value(self.MEASUREMENTVALUE__FIELD_NAME.field_name)

    def set_SubjectRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'SubjectRecordId' on this record model
        """
        self.set_field_value(self.SUBJECTRECORDID__FIELD_NAME.field_name, value)

    def get_SubjectRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'SubjectRecordId' from this record model
        """
        return self.get_field_value(self.SUBJECTRECORDID__FIELD_NAME.field_name)

    def set_UnitsOfMeasure_field(self, value: Optional[str]):
        """
        Set data field with field name 'UnitsOfMeasure' on this record model
        """
        self.set_field_value(self.UNITSOFMEASURE__FIELD_NAME.field_name, value)

    def get_UnitsOfMeasure_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UnitsOfMeasure' from this record model
        """
        return self.get_field_value(self.UNITSOFMEASURE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class SubjectRemovalModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type SubjectRemoval
    Data Type Display Name: Subject Removal (Subject Removals)
    Fields: CreatedBy, DataRecordName, RemovalComments, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, RemovalReason
    """
    DATA_TYPE_NAME: Final[str] = 'SubjectRemoval'
    DISPLAY_NAME: Final[str] = "Subject Removal"
    PLURAL_DISPLAY_NAME: Final[str] = "Subject Removals"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    REMOVALCOMMENTS__FIELD_NAME: Final[WrapperField] = WrapperField("RemovalComments", FieldType.STRING, display_name="Removal Comments")
    REMOVALREASON__FIELD_NAME: Final[WrapperField] = WrapperField("RemovalReason", FieldType.PICKLIST, display_name="Removal Reason")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_RemovalComments_field(self, value: Optional[str]):
        """
        Set data field with field name 'RemovalComments' on this record model
        """
        self.set_field_value(self.REMOVALCOMMENTS__FIELD_NAME.field_name, value)

    def get_RemovalComments_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RemovalComments' from this record model
        """
        return self.get_field_value(self.REMOVALCOMMENTS__FIELD_NAME.field_name)

    def set_RemovalReason_field(self, value: Optional[str]):
        """
        Set data field with field name 'RemovalReason' on this record model
        """
        self.set_field_value(self.REMOVALREASON__FIELD_NAME.field_name, value)

    def get_RemovalReason_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RemovalReason' from this record model
        """
        return self.get_field_value(self.REMOVALREASON__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class TapeStationResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type TapeStationResult
    Data Type Display Name: TapeStation Result (TapeStation Results)
    Fields: CreatedBy, PeakRegionIdentifier, DateCreated, Area, DataRecordName, Molarity, VeloxLastModifiedDate, VeloxLastModifiedBy, AvgBPSize, MolarityUnits
    """
    DATA_TYPE_NAME: Final[str] = 'TapeStationResult'
    DISPLAY_NAME: Final[str] = "TapeStation Result"
    PLURAL_DISPLAY_NAME: Final[str] = "TapeStation Results"
    AREA__FIELD_NAME: Final[WrapperField] = WrapperField("Area", FieldType.DOUBLE, display_name="Area")
    AVGBPSIZE__FIELD_NAME: Final[WrapperField] = WrapperField("AvgBPSize", FieldType.DOUBLE, display_name="Avg BP Size")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MOLARITY__FIELD_NAME: Final[WrapperField] = WrapperField("Molarity", FieldType.DOUBLE, display_name="Molarity")
    MOLARITYUNITS__FIELD_NAME: Final[WrapperField] = WrapperField("MolarityUnits", FieldType.STRING, display_name="Molarity Units")
    PEAKREGIONIDENTIFIER__FIELD_NAME: Final[WrapperField] = WrapperField("PeakRegionIdentifier", FieldType.STRING, display_name="Peak/Region Identifier")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Area_field(self, value: Optional[float]):
        """
        Set data field with field name 'Area' on this record model
        """
        self.set_field_value(self.AREA__FIELD_NAME.field_name, value)

    def get_Area_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Area' from this record model
        """
        return self.get_field_value(self.AREA__FIELD_NAME.field_name)

    def set_AvgBPSize_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgBPSize' on this record model
        """
        self.set_field_value(self.AVGBPSIZE__FIELD_NAME.field_name, value)

    def get_AvgBPSize_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgBPSize' from this record model
        """
        return self.get_field_value(self.AVGBPSIZE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Molarity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Molarity' on this record model
        """
        self.set_field_value(self.MOLARITY__FIELD_NAME.field_name, value)

    def get_Molarity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Molarity' from this record model
        """
        return self.get_field_value(self.MOLARITY__FIELD_NAME.field_name)

    def set_MolarityUnits_field(self, value: Optional[str]):
        """
        Set data field with field name 'MolarityUnits' on this record model
        """
        self.set_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name, value)

    def get_MolarityUnits_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MolarityUnits' from this record model
        """
        return self.get_field_value(self.MOLARITYUNITS__FIELD_NAME.field_name)

    def set_PeakRegionIdentifier_field(self, value: Optional[str]):
        """
        Set data field with field name 'PeakRegionIdentifier' on this record model
        """
        self.set_field_value(self.PEAKREGIONIDENTIFIER__FIELD_NAME.field_name, value)

    def get_PeakRegionIdentifier_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PeakRegionIdentifier' from this record model
        """
        return self.get_field_value(self.PEAKREGIONIDENTIFIER__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class TemplateWellModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type TemplateWell
    Data Type Display Name: Template Plate Well (Template Plate Wells)
    Fields: CreatedBy, DataRecordName, WellPosition, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'TemplateWell'
    DISPLAY_NAME: Final[str] = "Template Plate Well"
    PLURAL_DISPLAY_NAME: Final[str] = "Template Plate Wells"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WELLPOSITION__FIELD_NAME: Final[WrapperField] = WrapperField("WellPosition", FieldType.STRING, display_name="Well Position")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WellPosition_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellPosition' on this record model
        """
        self.set_field_value(self.WELLPOSITION__FIELD_NAME.field_name, value)

    def get_WellPosition_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellPosition' from this record model
        """
        return self.get_field_value(self.WELLPOSITION__FIELD_NAME.field_name)


class TolinoTechAssignedModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type TolinoTechAssigned
    Data Type Display Name: Tolino Tech Assigned (Tolino Tech Assigneds)
    Fields: TechAssigned, CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'TolinoTechAssigned'
    DISPLAY_NAME: Final[str] = "Tolino Tech Assigned"
    PLURAL_DISPLAY_NAME: Final[str] = "Tolino Tech Assigneds"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    TECHASSIGNED__FIELD_NAME: Final[WrapperField] = WrapperField("TechAssigned", FieldType.SELECTION, display_name="Tech Assigned")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_TechAssigned_field(self, value: Optional[str]):
        """
        Set data field with field name 'TechAssigned' on this record model
        """
        self.set_field_value(self.TECHASSIGNED__FIELD_NAME.field_name, value)

    def get_TechAssigned_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TechAssigned' from this record model
        """
        return self.get_field_value(self.TECHASSIGNED__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class TreatmentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type Treatment
    Data Type Display Name: Treatment (Treatments)
    Fields: Agent.VeloxLastModifiedDate, CreatedBy, Agent.MultiParentLink649, Agent.VeloxLastModifiedBy, Agent.DataRecordName, RouteOfAdministration, DateCreated, DoseAmounts, Agent.AgentType, DoseType, Agent.AgentName, DataRecordName, TreatmentId, Formulation, Placebo, VeloxLastModifiedDate, Agent.RecordId, VeloxLastModifiedBy, DoseUnit, Agent.DateCreated, Agent.CreatedBy
    """
    DATA_TYPE_NAME: Final[str] = 'Treatment'
    DISPLAY_NAME: Final[str] = "Treatment"
    PLURAL_DISPLAY_NAME: Final[str] = "Treatments"
    AGENT_EXT_AGENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Agent.AgentName", FieldType.SELECTION, display_name="Agent Name")
    AGENT_EXT_AGENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("Agent.AgentType", FieldType.SELECTION, display_name="Agent Type")
    AGENT_EXT_CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Agent.CreatedBy", FieldType.STRING, display_name="Created By")
    AGENT_EXT_DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Agent.DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    AGENT_EXT_DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("Agent.DateCreated", FieldType.DATE, display_name="Date Created")
    AGENT_EXT_MULTIPARENTLINK649__FIELD_NAME: Final[WrapperField] = WrapperField("Agent.MultiParentLink649", FieldType.MULTIPARENTLINK, display_name="Linked Treatment")
    AGENT_EXT_RECORDID__FIELD_NAME: Final[WrapperField] = WrapperField("Agent.RecordId", FieldType.LONG, display_name="Record ID")
    AGENT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("Agent.VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    AGENT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("Agent.VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DOSEAMOUNTS__FIELD_NAME: Final[WrapperField] = WrapperField("DoseAmounts", FieldType.DOUBLE, display_name="Dose Amounts")
    DOSETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DoseType", FieldType.PICKLIST, display_name="Dose Type")
    DOSEUNIT__FIELD_NAME: Final[WrapperField] = WrapperField("DoseUnit", FieldType.SELECTION, display_name="Dose Unit")
    FORMULATION__FIELD_NAME: Final[WrapperField] = WrapperField("Formulation", FieldType.SELECTION, display_name="Formulation")
    PLACEBO__FIELD_NAME: Final[WrapperField] = WrapperField("Placebo", FieldType.BOOLEAN, display_name="Placebo")
    ROUTEOFADMINISTRATION__FIELD_NAME: Final[WrapperField] = WrapperField("RouteOfAdministration", FieldType.SELECTION, display_name="Administration Route")
    TREATMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("TreatmentId", FieldType.STRING, display_name="Treatment Id")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AgentAgentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'Agent.AgentName' on this record model
        """
        self.set_field_value(self.AGENT_EXT_AGENTNAME__FIELD_NAME.field_name, value)

    def get_AgentAgentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Agent.AgentName' from this record model
        """
        return self.get_field_value(self.AGENT_EXT_AGENTNAME__FIELD_NAME.field_name)

    def set_AgentAgentType_field(self, value: Optional[str]):
        """
        Set data field with field name 'Agent.AgentType' on this record model
        """
        self.set_field_value(self.AGENT_EXT_AGENTTYPE__FIELD_NAME.field_name, value)

    def get_AgentAgentType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Agent.AgentType' from this record model
        """
        return self.get_field_value(self.AGENT_EXT_AGENTTYPE__FIELD_NAME.field_name)

    def set_AgentCreatedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Agent.CreatedBy' on this record model
        """
        self.set_field_value(self.AGENT_EXT_CREATEDBY__FIELD_NAME.field_name, value)

    def get_AgentCreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Agent.CreatedBy' from this record model
        """
        return self.get_field_value(self.AGENT_EXT_CREATEDBY__FIELD_NAME.field_name)

    def set_AgentDateCreated_field(self, value: Optional[int]):
        """
        Set data field with field name 'Agent.DateCreated' on this record model
        """
        self.set_field_value(self.AGENT_EXT_DATECREATED__FIELD_NAME.field_name, value)

    def get_AgentDateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Agent.DateCreated' from this record model
        """
        return self.get_field_value(self.AGENT_EXT_DATECREATED__FIELD_NAME.field_name)

    def set_AgentRecordId_field(self, value: Optional[int]):
        """
        Set data field with field name 'Agent.RecordId' on this record model
        """
        self.set_field_value(self.AGENT_EXT_RECORDID__FIELD_NAME.field_name, value)

    def get_AgentRecordId_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Agent.RecordId' from this record model
        """
        return self.get_field_value(self.AGENT_EXT_RECORDID__FIELD_NAME.field_name)

    def set_AgentVeloxLastModifiedBy_field(self, value: Optional[str]):
        """
        Set data field with field name 'Agent.VeloxLastModifiedBy' on this record model
        """
        self.set_field_value(self.AGENT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name, value)

    def get_AgentVeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Agent.VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.AGENT_EXT_VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def set_AgentVeloxLastModifiedDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'Agent.VeloxLastModifiedDate' on this record model
        """
        self.set_field_value(self.AGENT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name, value)

    def get_AgentVeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Agent.VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.AGENT_EXT_VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DoseAmounts_field(self, value: Optional[float]):
        """
        Set data field with field name 'DoseAmounts' on this record model
        """
        self.set_field_value(self.DOSEAMOUNTS__FIELD_NAME.field_name, value)

    def get_DoseAmounts_field(self) -> Optional[float]:
        """
        Get data field value with field name 'DoseAmounts' from this record model
        """
        return self.get_field_value(self.DOSEAMOUNTS__FIELD_NAME.field_name)

    def set_DoseType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoseType' on this record model
        """
        self.set_field_value(self.DOSETYPE__FIELD_NAME.field_name, value)

    def get_DoseType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoseType' from this record model
        """
        return self.get_field_value(self.DOSETYPE__FIELD_NAME.field_name)

    def set_DoseUnit_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoseUnit' on this record model
        """
        self.set_field_value(self.DOSEUNIT__FIELD_NAME.field_name, value)

    def get_DoseUnit_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoseUnit' from this record model
        """
        return self.get_field_value(self.DOSEUNIT__FIELD_NAME.field_name)

    def set_Formulation_field(self, value: Optional[str]):
        """
        Set data field with field name 'Formulation' on this record model
        """
        self.set_field_value(self.FORMULATION__FIELD_NAME.field_name, value)

    def get_Formulation_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Formulation' from this record model
        """
        return self.get_field_value(self.FORMULATION__FIELD_NAME.field_name)

    def set_Placebo_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Placebo' on this record model
        """
        self.set_field_value(self.PLACEBO__FIELD_NAME.field_name, value)

    def get_Placebo_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Placebo' from this record model
        """
        return self.get_field_value(self.PLACEBO__FIELD_NAME.field_name)

    def set_RouteOfAdministration_field(self, value: Optional[str]):
        """
        Set data field with field name 'RouteOfAdministration' on this record model
        """
        self.set_field_value(self.ROUTEOFADMINISTRATION__FIELD_NAME.field_name, value)

    def get_RouteOfAdministration_field(self) -> Optional[str]:
        """
        Get data field value with field name 'RouteOfAdministration' from this record model
        """
        return self.get_field_value(self.ROUTEOFADMINISTRATION__FIELD_NAME.field_name)

    def set_TreatmentId_field(self, value: Optional[str]):
        """
        Set data field with field name 'TreatmentId' on this record model
        """
        self.set_field_value(self.TREATMENTID__FIELD_NAME.field_name, value)

    def get_TreatmentId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TreatmentId' from this record model
        """
        return self.get_field_value(self.TREATMENTID__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class TreatmentScheduleModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type TreatmentSchedule
    Data Type Display Name: Treatment Schedule (Treatment Schedules)
    Fields: CreatedBy, DataRecordName, MultiParentLink649, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, TreatmentMilliseconds
    """
    DATA_TYPE_NAME: Final[str] = 'TreatmentSchedule'
    DISPLAY_NAME: Final[str] = "Treatment Schedule"
    PLURAL_DISPLAY_NAME: Final[str] = "Treatment Schedules"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MULTIPARENTLINK649__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink649", FieldType.MULTIPARENTLINK, display_name="Linked Treatment")
    TREATMENTMILLISECONDS__FIELD_NAME: Final[WrapperField] = WrapperField("TreatmentMilliseconds", FieldType.LONG, display_name="Treatment Milliseconds")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_TreatmentMilliseconds_field(self, value: Optional[int]):
        """
        Set data field with field name 'TreatmentMilliseconds' on this record model
        """
        self.set_field_value(self.TREATMENTMILLISECONDS__FIELD_NAME.field_name, value)

    def get_TreatmentMilliseconds_field(self) -> Optional[int]:
        """
        Get data field value with field name 'TreatmentMilliseconds' from this record model
        """
        return self.get_field_value(self.TREATMENTMILLISECONDS__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class TumorVolumeModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type TumorVolume
    Data Type Display Name: Tumor Volume (Tumor Volumes)
    Fields: Measure1mm, CreatedBy, DataRecordName, Measure2mm, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, Volumemm, ObservationInstrument
    """
    DATA_TYPE_NAME: Final[str] = 'TumorVolume'
    DISPLAY_NAME: Final[str] = "Tumor Volume"
    PLURAL_DISPLAY_NAME: Final[str] = "Tumor Volumes"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    MEASURE1MM__FIELD_NAME: Final[WrapperField] = WrapperField("Measure1mm", FieldType.DOUBLE, display_name="Measure 1 (mm)")
    MEASURE2MM__FIELD_NAME: Final[WrapperField] = WrapperField("Measure2mm", FieldType.DOUBLE, display_name="Measure 2 (mm)")
    OBSERVATIONINSTRUMENT__FIELD_NAME: Final[WrapperField] = WrapperField("ObservationInstrument", FieldType.SELECTION, display_name="Caliper")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VOLUMEMM__FIELD_NAME: Final[WrapperField] = WrapperField("Volumemm", FieldType.DOUBLE, display_name="Volume (mm\u00B3)")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Measure1mm_field(self, value: Optional[float]):
        """
        Set data field with field name 'Measure1mm' on this record model
        """
        self.set_field_value(self.MEASURE1MM__FIELD_NAME.field_name, value)

    def get_Measure1mm_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Measure1mm' from this record model
        """
        return self.get_field_value(self.MEASURE1MM__FIELD_NAME.field_name)

    def set_Measure2mm_field(self, value: Optional[float]):
        """
        Set data field with field name 'Measure2mm' on this record model
        """
        self.set_field_value(self.MEASURE2MM__FIELD_NAME.field_name, value)

    def get_Measure2mm_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Measure2mm' from this record model
        """
        return self.get_field_value(self.MEASURE2MM__FIELD_NAME.field_name)

    def set_ObservationInstrument_field(self, value: Optional[str]):
        """
        Set data field with field name 'ObservationInstrument' on this record model
        """
        self.set_field_value(self.OBSERVATIONINSTRUMENT__FIELD_NAME.field_name, value)

    def get_ObservationInstrument_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ObservationInstrument' from this record model
        """
        return self.get_field_value(self.OBSERVATIONINSTRUMENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Volumemm_field(self, value: Optional[float]):
        """
        Set data field with field name 'Volumemm' on this record model
        """
        self.set_field_value(self.VOLUMEMM__FIELD_NAME.field_name, value)

    def get_Volumemm_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Volumemm' from this record model
        """
        return self.get_field_value(self.VOLUMEMM__FIELD_NAME.field_name)


class VeloxAppRecordModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type VeloxAppRecord
    Data Type Display Name: Organization Details (Organization Details)
    Fields: CreatedBy, CompanyDescription, Address2, PostalCode, DateCreated, City, VeloxPublicUrl, Address1, CompanyName, DataRecordName, State, CompanyWebsite, VeloxLastModifiedDate, VeloxLastModifiedBy, Region, Country
    This data type includes exactly one data record about the application's info.This data type is protected. Only system admins and portal admins can modify. This datatype cannot have any parents.
    """
    DATA_TYPE_NAME: Final[str] = 'VeloxAppRecord'
    DISPLAY_NAME: Final[str] = "Organization Details"
    PLURAL_DISPLAY_NAME: Final[str] = "Organization Details"
    ADDRESS1__FIELD_NAME: Final[WrapperField] = WrapperField("Address1", FieldType.STRING, display_name="Address 1")
    ADDRESS2__FIELD_NAME: Final[WrapperField] = WrapperField("Address2", FieldType.STRING, display_name="Address 2")
    CITY__FIELD_NAME: Final[WrapperField] = WrapperField("City", FieldType.STRING, display_name="City")
    COMPANYDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("CompanyDescription", FieldType.STRING, display_name="Organization Description")
    COMPANYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("CompanyName", FieldType.STRING, display_name="Organization Name")
    COMPANYWEBSITE__FIELD_NAME: Final[WrapperField] = WrapperField("CompanyWebsite", FieldType.STRING, display_name="Organization Website")
    COUNTRY__FIELD_NAME: Final[WrapperField] = WrapperField("Country", FieldType.STRING, display_name="Country")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    POSTALCODE__FIELD_NAME: Final[WrapperField] = WrapperField("PostalCode", FieldType.STRING, display_name="Postal")
    REGION__FIELD_NAME: Final[WrapperField] = WrapperField("Region", FieldType.STRING, display_name="Region")
    STATE__FIELD_NAME: Final[WrapperField] = WrapperField("State", FieldType.STRING, display_name="State")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VELOXPUBLICURL__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxPublicUrl", FieldType.STRING, display_name="Public URL")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Address1_field(self, value: Optional[str]):
        """
        Set data field with field name 'Address1' on this record model
        """
        self.set_field_value(self.ADDRESS1__FIELD_NAME.field_name, value)

    def get_Address1_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Address1' from this record model
        """
        return self.get_field_value(self.ADDRESS1__FIELD_NAME.field_name)

    def set_Address2_field(self, value: Optional[str]):
        """
        Set data field with field name 'Address2' on this record model
        """
        self.set_field_value(self.ADDRESS2__FIELD_NAME.field_name, value)

    def get_Address2_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Address2' from this record model
        """
        return self.get_field_value(self.ADDRESS2__FIELD_NAME.field_name)

    def set_City_field(self, value: Optional[str]):
        """
        Set data field with field name 'City' on this record model
        """
        self.set_field_value(self.CITY__FIELD_NAME.field_name, value)

    def get_City_field(self) -> Optional[str]:
        """
        Get data field value with field name 'City' from this record model
        """
        return self.get_field_value(self.CITY__FIELD_NAME.field_name)

    def set_CompanyDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'CompanyDescription' on this record model
        """
        self.set_field_value(self.COMPANYDESCRIPTION__FIELD_NAME.field_name, value)

    def get_CompanyDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CompanyDescription' from this record model
        """
        return self.get_field_value(self.COMPANYDESCRIPTION__FIELD_NAME.field_name)

    def set_CompanyName_field(self, value: Optional[str]):
        """
        Set data field with field name 'CompanyName' on this record model
        """
        self.set_field_value(self.COMPANYNAME__FIELD_NAME.field_name, value)

    def get_CompanyName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CompanyName' from this record model
        """
        return self.get_field_value(self.COMPANYNAME__FIELD_NAME.field_name)

    def set_CompanyWebsite_field(self, value: Optional[str]):
        """
        Set data field with field name 'CompanyWebsite' on this record model
        """
        self.set_field_value(self.COMPANYWEBSITE__FIELD_NAME.field_name, value)

    def get_CompanyWebsite_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CompanyWebsite' from this record model
        """
        return self.get_field_value(self.COMPANYWEBSITE__FIELD_NAME.field_name)

    def set_Country_field(self, value: Optional[str]):
        """
        Set data field with field name 'Country' on this record model
        """
        self.set_field_value(self.COUNTRY__FIELD_NAME.field_name, value)

    def get_Country_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Country' from this record model
        """
        return self.get_field_value(self.COUNTRY__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_PostalCode_field(self, value: Optional[str]):
        """
        Set data field with field name 'PostalCode' on this record model
        """
        self.set_field_value(self.POSTALCODE__FIELD_NAME.field_name, value)

    def get_PostalCode_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PostalCode' from this record model
        """
        return self.get_field_value(self.POSTALCODE__FIELD_NAME.field_name)

    def set_Region_field(self, value: Optional[str]):
        """
        Set data field with field name 'Region' on this record model
        """
        self.set_field_value(self.REGION__FIELD_NAME.field_name, value)

    def get_Region_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Region' from this record model
        """
        return self.get_field_value(self.REGION__FIELD_NAME.field_name)

    def set_State_field(self, value: Optional[str]):
        """
        Set data field with field name 'State' on this record model
        """
        self.set_field_value(self.STATE__FIELD_NAME.field_name, value)

    def get_State_field(self) -> Optional[str]:
        """
        Get data field value with field name 'State' from this record model
        """
        return self.get_field_value(self.STATE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_VeloxPublicUrl_field(self, value: Optional[str]):
        """
        Set data field with field name 'VeloxPublicUrl' on this record model
        """
        self.set_field_value(self.VELOXPUBLICURL__FIELD_NAME.field_name, value)

    def get_VeloxPublicUrl_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxPublicUrl' from this record model
        """
        return self.get_field_value(self.VELOXPUBLICURL__FIELD_NAME.field_name)


class VeloxCsvExportModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type VeloxCsvExport
    Data Type Display Name: CSV Export (CSV Exports)
    Fields: FilePath, VeloxCurrentVersion, Description, CreatedBy, CsvExportReportExecutionId, ExportStatus, DateCreated, CsvExportSourceTempTypePojo, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy
    This data type is used to store the file created when exporting a table to a CSV from anywhere in the system.
    """
    DATA_TYPE_NAME: Final[str] = 'VeloxCsvExport'
    DISPLAY_NAME: Final[str] = "CSV Export"
    PLURAL_DISPLAY_NAME: Final[str] = "CSV Exports"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CSVEXPORTREPORTEXECUTIONID__FIELD_NAME: Final[WrapperField] = WrapperField("CsvExportReportExecutionId", FieldType.STRING, display_name="CSV Export Execution ID")
    CSVEXPORTSOURCETEMPTYPEPOJO__FIELD_NAME: Final[WrapperField] = WrapperField("CsvExportSourceTempTypePojo", FieldType.STRING, display_name="Data Export Source Type Type Pojo")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("Description", FieldType.STRING, display_name="Description")
    EXPORTSTATUS__FIELD_NAME: Final[WrapperField] = WrapperField("ExportStatus", FieldType.STRING, display_name="Export Status")
    FILEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("FilePath", FieldType.STRING, display_name="File Name")
    VELOXCURRENTVERSION__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxCurrentVersion", FieldType.INTEGER, display_name="Current Version")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_CsvExportReportExecutionId_field(self, value: Optional[str]):
        """
        Set data field with field name 'CsvExportReportExecutionId' on this record model
        """
        self.set_field_value(self.CSVEXPORTREPORTEXECUTIONID__FIELD_NAME.field_name, value)

    def get_CsvExportReportExecutionId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CsvExportReportExecutionId' from this record model
        """
        return self.get_field_value(self.CSVEXPORTREPORTEXECUTIONID__FIELD_NAME.field_name)

    def set_CsvExportSourceTempTypePojo_field(self, value: Optional[str]):
        """
        Set data field with field name 'CsvExportSourceTempTypePojo' on this record model
        """
        self.set_field_value(self.CSVEXPORTSOURCETEMPTYPEPOJO__FIELD_NAME.field_name, value)

    def get_CsvExportSourceTempTypePojo_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CsvExportSourceTempTypePojo' from this record model
        """
        return self.get_field_value(self.CSVEXPORTSOURCETEMPTYPEPOJO__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Description_field(self, value: Optional[str]):
        """
        Set data field with field name 'Description' on this record model
        """
        self.set_field_value(self.DESCRIPTION__FIELD_NAME.field_name, value)

    def get_Description_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Description' from this record model
        """
        return self.get_field_value(self.DESCRIPTION__FIELD_NAME.field_name)

    def set_ExportStatus_field(self, value: Optional[str]):
        """
        Set data field with field name 'ExportStatus' on this record model
        """
        self.set_field_value(self.EXPORTSTATUS__FIELD_NAME.field_name, value)

    def get_ExportStatus_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ExportStatus' from this record model
        """
        return self.get_field_value(self.EXPORTSTATUS__FIELD_NAME.field_name)

    def set_FilePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'FilePath' on this record model
        """
        self.set_field_value(self.FILEPATH__FIELD_NAME.field_name, value)

    def get_FilePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FilePath' from this record model
        """
        return self.get_field_value(self.FILEPATH__FIELD_NAME.field_name)

    def set_VeloxCurrentVersion_field(self, value: Optional[int]):
        """
        Set data field with field name 'VeloxCurrentVersion' on this record model
        """
        self.set_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name, value)

    def get_VeloxCurrentVersion_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxCurrentVersion' from this record model
        """
        return self.get_field_value(self.VELOXCURRENTVERSION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class VeloxDepartmentModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type VeloxDepartment
    Data Type Display Name: Department (Departments)
    Fields: CreatedBy, InheritRolesFromParent, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DepartmentName, DateCreated
    """
    DATA_TYPE_NAME: Final[str] = 'VeloxDepartment'
    DISPLAY_NAME: Final[str] = "Department"
    PLURAL_DISPLAY_NAME: Final[str] = "Departments"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DEPARTMENTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DepartmentName", FieldType.STRING, display_name="Department Name")
    INHERITROLESFROMPARENT__FIELD_NAME: Final[WrapperField] = WrapperField("InheritRolesFromParent", FieldType.BOOLEAN, display_name="Inherit Roles From Parent")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DepartmentName_field(self, value: Optional[str]):
        """
        Set data field with field name 'DepartmentName' on this record model
        """
        self.set_field_value(self.DEPARTMENTNAME__FIELD_NAME.field_name, value)

    def get_DepartmentName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DepartmentName' from this record model
        """
        return self.get_field_value(self.DEPARTMENTNAME__FIELD_NAME.field_name)

    def set_InheritRolesFromParent_field(self, value: Optional[bool]):
        """
        Set data field with field name 'InheritRolesFromParent' on this record model
        """
        self.set_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name, value)

    def get_InheritRolesFromParent_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'InheritRolesFromParent' from this record model
        """
        return self.get_field_value(self.INHERITROLESFROMPARENT__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class VeloxFailureEventModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type VeloxFailureEvent
    Data Type Display Name: Failure Event (Failure Events)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, FailureEventDescription, FailureEventId, FailureEventType
    A general failure event that has occurred within the system.  This report has a type describing what feature within the system has failed and a message describing the failure.
    """
    DATA_TYPE_NAME: Final[str] = 'VeloxFailureEvent'
    DISPLAY_NAME: Final[str] = "Failure Event"
    PLURAL_DISPLAY_NAME: Final[str] = "Failure Events"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    FAILUREEVENTDESCRIPTION__FIELD_NAME: Final[WrapperField] = WrapperField("FailureEventDescription", FieldType.STRING, display_name="Event Description")
    FAILUREEVENTID__FIELD_NAME: Final[WrapperField] = WrapperField("FailureEventId", FieldType.AUTO_ACCESSION, display_name="Failure Event ID")
    FAILUREEVENTTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("FailureEventType", FieldType.STRING, display_name="Failure Event Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_FailureEventDescription_field(self, value: Optional[str]):
        """
        Set data field with field name 'FailureEventDescription' on this record model
        """
        self.set_field_value(self.FAILUREEVENTDESCRIPTION__FIELD_NAME.field_name, value)

    def get_FailureEventDescription_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FailureEventDescription' from this record model
        """
        return self.get_field_value(self.FAILUREEVENTDESCRIPTION__FIELD_NAME.field_name)

    def set_FailureEventId_field(self, value: Optional[str]):
        """
        Set data field with field name 'FailureEventId' on this record model
        """
        self.set_field_value(self.FAILUREEVENTID__FIELD_NAME.field_name, value)

    def get_FailureEventId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FailureEventId' from this record model
        """
        return self.get_field_value(self.FAILUREEVENTID__FIELD_NAME.field_name)

    def set_FailureEventType_field(self, value: Optional[str]):
        """
        Set data field with field name 'FailureEventType' on this record model
        """
        self.set_field_value(self.FAILUREEVENTTYPE__FIELD_NAME.field_name, value)

    def get_FailureEventType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FailureEventType' from this record model
        """
        return self.get_field_value(self.FAILUREEVENTTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class VeloxLocationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type VeloxLocation
    Data Type Display Name: Location (Locations)
    Fields: CreatedBy, DataRecordName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, LocationName
    """
    DATA_TYPE_NAME: Final[str] = 'VeloxLocation'
    DISPLAY_NAME: Final[str] = "Location"
    PLURAL_DISPLAY_NAME: Final[str] = "Locations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    LOCATIONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("LocationName", FieldType.STRING, display_name="Location Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_LocationName_field(self, value: Optional[str]):
        """
        Set data field with field name 'LocationName' on this record model
        """
        self.set_field_value(self.LOCATIONNAME__FIELD_NAME.field_name, value)

    def get_LocationName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LocationName' from this record model
        """
        return self.get_field_value(self.LOCATIONNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class VeloxUserModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type VeloxUser
    Data Type Display Name: User (Users)
    Fields: CreatedBy, DataRecordName, Username, FirstName, VeloxLastModifiedDate, VeloxLastModifiedBy, DateCreated, LastName, MiddleName, JobTitle, EmailAddress
    Data type to represent each user in the system.  These records can be searched using api methods and CustomReports but cannot be edited like typical records.
    """
    DATA_TYPE_NAME: Final[str] = 'VeloxUser'
    DISPLAY_NAME: Final[str] = "User"
    PLURAL_DISPLAY_NAME: Final[str] = "Users"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EMAILADDRESS__FIELD_NAME: Final[WrapperField] = WrapperField("EmailAddress", FieldType.STRING, display_name="Email Address")
    FIRSTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("FirstName", FieldType.STRING, display_name="First Name")
    JOBTITLE__FIELD_NAME: Final[WrapperField] = WrapperField("JobTitle", FieldType.STRING, display_name="Job Title")
    LASTNAME__FIELD_NAME: Final[WrapperField] = WrapperField("LastName", FieldType.STRING, display_name="Last Name")
    MIDDLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("MiddleName", FieldType.STRING, display_name="Middle Name")
    USERNAME__FIELD_NAME: Final[WrapperField] = WrapperField("Username", FieldType.STRING, display_name="Username")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_EmailAddress_field(self, value: Optional[str]):
        """
        Set data field with field name 'EmailAddress' on this record model
        """
        self.set_field_value(self.EMAILADDRESS__FIELD_NAME.field_name, value)

    def get_EmailAddress_field(self) -> Optional[str]:
        """
        Get data field value with field name 'EmailAddress' from this record model
        """
        return self.get_field_value(self.EMAILADDRESS__FIELD_NAME.field_name)

    def set_FirstName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FirstName' on this record model
        """
        self.set_field_value(self.FIRSTNAME__FIELD_NAME.field_name, value)

    def get_FirstName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FirstName' from this record model
        """
        return self.get_field_value(self.FIRSTNAME__FIELD_NAME.field_name)

    def set_JobTitle_field(self, value: Optional[str]):
        """
        Set data field with field name 'JobTitle' on this record model
        """
        self.set_field_value(self.JOBTITLE__FIELD_NAME.field_name, value)

    def get_JobTitle_field(self) -> Optional[str]:
        """
        Get data field value with field name 'JobTitle' from this record model
        """
        return self.get_field_value(self.JOBTITLE__FIELD_NAME.field_name)

    def set_LastName_field(self, value: Optional[str]):
        """
        Set data field with field name 'LastName' on this record model
        """
        self.set_field_value(self.LASTNAME__FIELD_NAME.field_name, value)

    def get_LastName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LastName' from this record model
        """
        return self.get_field_value(self.LASTNAME__FIELD_NAME.field_name)

    def set_MiddleName_field(self, value: Optional[str]):
        """
        Set data field with field name 'MiddleName' on this record model
        """
        self.set_field_value(self.MIDDLENAME__FIELD_NAME.field_name, value)

    def get_MiddleName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'MiddleName' from this record model
        """
        return self.get_field_value(self.MIDDLENAME__FIELD_NAME.field_name)

    def set_Username_field(self, value: Optional[str]):
        """
        Set data field with field name 'Username' on this record model
        """
        self.set_field_value(self.USERNAME__FIELD_NAME.field_name, value)

    def get_Username_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Username' from this record model
        """
        return self.get_field_value(self.USERNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ViCellResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ViCellResult
    Data Type Display Name: Vi-Cell Result (Vi-Cell Results)
    Fields: AspirateCycles, FileName, DateCreated, ViableCells, DateTime, Imgs, MaxDiam, MinDiam, VeloxLastModifiedBy, AvgBg, AvgDiam, CreatedBy, MinCir, TotalCellsMl, AvgCellsImg, DataRecordName, CellType, AvgCirc, TotalCells, ViableCellsMl, VeloxLastModifiedDate, Viability
    """
    DATA_TYPE_NAME: Final[str] = 'ViCellResult'
    DISPLAY_NAME: Final[str] = "Vi-Cell Result"
    PLURAL_DISPLAY_NAME: Final[str] = "Vi-Cell Results"
    ASPIRATECYCLES__FIELD_NAME: Final[WrapperField] = WrapperField("AspirateCycles", FieldType.DOUBLE, display_name="Aspirate Cycles")
    AVGBG__FIELD_NAME: Final[WrapperField] = WrapperField("AvgBg", FieldType.DOUBLE, display_name="Average BG Intensity")
    AVGCELLSIMG__FIELD_NAME: Final[WrapperField] = WrapperField("AvgCellsImg", FieldType.DOUBLE, display_name="Average Cells/Image")
    AVGCIRC__FIELD_NAME: Final[WrapperField] = WrapperField("AvgCirc", FieldType.DOUBLE, display_name="Average Circularity")
    AVGDIAM__FIELD_NAME: Final[WrapperField] = WrapperField("AvgDiam", FieldType.DOUBLE, display_name="Average Diameter")
    CELLTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("CellType", FieldType.STRING, display_name="Cell Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DATETIME__FIELD_NAME: Final[WrapperField] = WrapperField("DateTime", FieldType.DATE, display_name="Sample Date/Time")
    FILENAME__FIELD_NAME: Final[WrapperField] = WrapperField("FileName", FieldType.STRING, display_name="File Name")
    IMGS__FIELD_NAME: Final[WrapperField] = WrapperField("Imgs", FieldType.DOUBLE, display_name="Images")
    MAXDIAM__FIELD_NAME: Final[WrapperField] = WrapperField("MaxDiam", FieldType.DOUBLE, display_name="Maxium Diameter")
    MINCIR__FIELD_NAME: Final[WrapperField] = WrapperField("MinCir", FieldType.DOUBLE, display_name="Minimum Circularity")
    MINDIAM__FIELD_NAME: Final[WrapperField] = WrapperField("MinDiam", FieldType.DOUBLE, display_name="Minimum Diameter")
    TOTALCELLS__FIELD_NAME: Final[WrapperField] = WrapperField("TotalCells", FieldType.DOUBLE, display_name="Total Cells")
    TOTALCELLSML__FIELD_NAME: Final[WrapperField] = WrapperField("TotalCellsMl", FieldType.DOUBLE, display_name="Total Cells/mL")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VIABILITY__FIELD_NAME: Final[WrapperField] = WrapperField("Viability", FieldType.DOUBLE, display_name="% Viability")
    VIABLECELLS__FIELD_NAME: Final[WrapperField] = WrapperField("ViableCells", FieldType.DOUBLE, display_name="Viable Cells")
    VIABLECELLSML__FIELD_NAME: Final[WrapperField] = WrapperField("ViableCellsMl", FieldType.DOUBLE, display_name="Viable Cells/mL")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AspirateCycles_field(self, value: Optional[float]):
        """
        Set data field with field name 'AspirateCycles' on this record model
        """
        self.set_field_value(self.ASPIRATECYCLES__FIELD_NAME.field_name, value)

    def get_AspirateCycles_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AspirateCycles' from this record model
        """
        return self.get_field_value(self.ASPIRATECYCLES__FIELD_NAME.field_name)

    def set_AvgBg_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgBg' on this record model
        """
        self.set_field_value(self.AVGBG__FIELD_NAME.field_name, value)

    def get_AvgBg_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgBg' from this record model
        """
        return self.get_field_value(self.AVGBG__FIELD_NAME.field_name)

    def set_AvgCellsImg_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgCellsImg' on this record model
        """
        self.set_field_value(self.AVGCELLSIMG__FIELD_NAME.field_name, value)

    def get_AvgCellsImg_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgCellsImg' from this record model
        """
        return self.get_field_value(self.AVGCELLSIMG__FIELD_NAME.field_name)

    def set_AvgCirc_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgCirc' on this record model
        """
        self.set_field_value(self.AVGCIRC__FIELD_NAME.field_name, value)

    def get_AvgCirc_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgCirc' from this record model
        """
        return self.get_field_value(self.AVGCIRC__FIELD_NAME.field_name)

    def set_AvgDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'AvgDiam' on this record model
        """
        self.set_field_value(self.AVGDIAM__FIELD_NAME.field_name, value)

    def get_AvgDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'AvgDiam' from this record model
        """
        return self.get_field_value(self.AVGDIAM__FIELD_NAME.field_name)

    def set_CellType_field(self, value: Optional[str]):
        """
        Set data field with field name 'CellType' on this record model
        """
        self.set_field_value(self.CELLTYPE__FIELD_NAME.field_name, value)

    def get_CellType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CellType' from this record model
        """
        return self.get_field_value(self.CELLTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DateTime_field(self, value: Optional[int]):
        """
        Set data field with field name 'DateTime' on this record model
        """
        self.set_field_value(self.DATETIME__FIELD_NAME.field_name, value)

    def get_DateTime_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateTime' from this record model
        """
        return self.get_field_value(self.DATETIME__FIELD_NAME.field_name)

    def set_FileName_field(self, value: Optional[str]):
        """
        Set data field with field name 'FileName' on this record model
        """
        self.set_field_value(self.FILENAME__FIELD_NAME.field_name, value)

    def get_FileName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'FileName' from this record model
        """
        return self.get_field_value(self.FILENAME__FIELD_NAME.field_name)

    def set_Imgs_field(self, value: Optional[float]):
        """
        Set data field with field name 'Imgs' on this record model
        """
        self.set_field_value(self.IMGS__FIELD_NAME.field_name, value)

    def get_Imgs_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Imgs' from this record model
        """
        return self.get_field_value(self.IMGS__FIELD_NAME.field_name)

    def set_MaxDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'MaxDiam' on this record model
        """
        self.set_field_value(self.MAXDIAM__FIELD_NAME.field_name, value)

    def get_MaxDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MaxDiam' from this record model
        """
        return self.get_field_value(self.MAXDIAM__FIELD_NAME.field_name)

    def set_MinCir_field(self, value: Optional[float]):
        """
        Set data field with field name 'MinCir' on this record model
        """
        self.set_field_value(self.MINCIR__FIELD_NAME.field_name, value)

    def get_MinCir_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MinCir' from this record model
        """
        return self.get_field_value(self.MINCIR__FIELD_NAME.field_name)

    def set_MinDiam_field(self, value: Optional[float]):
        """
        Set data field with field name 'MinDiam' on this record model
        """
        self.set_field_value(self.MINDIAM__FIELD_NAME.field_name, value)

    def get_MinDiam_field(self) -> Optional[float]:
        """
        Get data field value with field name 'MinDiam' from this record model
        """
        return self.get_field_value(self.MINDIAM__FIELD_NAME.field_name)

    def set_TotalCells_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalCells' on this record model
        """
        self.set_field_value(self.TOTALCELLS__FIELD_NAME.field_name, value)

    def get_TotalCells_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalCells' from this record model
        """
        return self.get_field_value(self.TOTALCELLS__FIELD_NAME.field_name)

    def set_TotalCellsMl_field(self, value: Optional[float]):
        """
        Set data field with field name 'TotalCellsMl' on this record model
        """
        self.set_field_value(self.TOTALCELLSML__FIELD_NAME.field_name, value)

    def get_TotalCellsMl_field(self) -> Optional[float]:
        """
        Get data field value with field name 'TotalCellsMl' from this record model
        """
        return self.get_field_value(self.TOTALCELLSML__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Viability_field(self, value: Optional[float]):
        """
        Set data field with field name 'Viability' on this record model
        """
        self.set_field_value(self.VIABILITY__FIELD_NAME.field_name, value)

    def get_Viability_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Viability' from this record model
        """
        return self.get_field_value(self.VIABILITY__FIELD_NAME.field_name)

    def set_ViableCells_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViableCells' on this record model
        """
        self.set_field_value(self.VIABLECELLS__FIELD_NAME.field_name, value)

    def get_ViableCells_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViableCells' from this record model
        """
        return self.get_field_value(self.VIABLECELLS__FIELD_NAME.field_name)

    def set_ViableCellsMl_field(self, value: Optional[float]):
        """
        Set data field with field name 'ViableCellsMl' on this record model
        """
        self.set_field_value(self.VIABLECELLSML__FIELD_NAME.field_name, value)

    def get_ViableCellsMl_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ViableCellsMl' from this record model
        """
        return self.get_field_value(self.VIABLECELLSML__FIELD_NAME.field_name)


class ViiA7ResultModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ViiA7Result
    Data Type Display Name: ViiA7 Result (ViiA7 Results)
    Fields: Ct, CtSD, CreatedBy, DataRecordName, VeloxLastModifiedDate, Quantity, VeloxLastModifiedBy, DateCreated, CtMean
    """
    DATA_TYPE_NAME: Final[str] = 'ViiA7Result'
    DISPLAY_NAME: Final[str] = "ViiA7 Result"
    PLURAL_DISPLAY_NAME: Final[str] = "ViiA7 Results"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    CT__FIELD_NAME: Final[WrapperField] = WrapperField("Ct", FieldType.DOUBLE, display_name="Ct")
    CTMEAN__FIELD_NAME: Final[WrapperField] = WrapperField("CtMean", FieldType.DOUBLE, display_name="Ct Mean")
    CTSD__FIELD_NAME: Final[WrapperField] = WrapperField("CtSD", FieldType.DOUBLE, display_name="Ct SD")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    QUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("Quantity", FieldType.DOUBLE, display_name="Quantity")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_Ct_field(self, value: Optional[float]):
        """
        Set data field with field name 'Ct' on this record model
        """
        self.set_field_value(self.CT__FIELD_NAME.field_name, value)

    def get_Ct_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Ct' from this record model
        """
        return self.get_field_value(self.CT__FIELD_NAME.field_name)

    def set_CtMean_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtMean' on this record model
        """
        self.set_field_value(self.CTMEAN__FIELD_NAME.field_name, value)

    def get_CtMean_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtMean' from this record model
        """
        return self.get_field_value(self.CTMEAN__FIELD_NAME.field_name)

    def set_CtSD_field(self, value: Optional[float]):
        """
        Set data field with field name 'CtSD' on this record model
        """
        self.set_field_value(self.CTSD__FIELD_NAME.field_name, value)

    def get_CtSD_field(self) -> Optional[float]:
        """
        Get data field value with field name 'CtSD' from this record model
        """
        return self.get_field_value(self.CTSD__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Quantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'Quantity' on this record model
        """
        self.set_field_value(self.QUANTITY__FIELD_NAME.field_name, value)

    def get_Quantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Quantity' from this record model
        """
        return self.get_field_value(self.QUANTITY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ViralVectorModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ViralVector
    Data Type Display Name: Viral Vector (Viral Vectors)
    Fields: ORF, CreatedBy, PartNumber, ConsumableType, VectorSequence, DateCreated, DataRecordName, ExpirationDate, VectorType, VeloxLastModifiedDate, VeloxLastModifiedBy, ConsumableName, LotNumber
    """
    DATA_TYPE_NAME: Final[str] = 'ViralVector'
    DISPLAY_NAME: Final[str] = "Viral Vector"
    PLURAL_DISPLAY_NAME: Final[str] = "Viral Vectors"
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.STRING, display_name="Sapio Vector Accession Number")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Viral Vector Subtype")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    EXPIRATIONDATE__FIELD_NAME: Final[WrapperField] = WrapperField("ExpirationDate", FieldType.DATE, display_name="Expiration Date")
    LOTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("LotNumber", FieldType.STRING, display_name="Lot Number")
    ORF__FIELD_NAME: Final[WrapperField] = WrapperField("ORF", FieldType.STRING, display_name="ORF")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Vector ID")
    VECTORSEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("VectorSequence", FieldType.STRING, display_name="Vector Sequence")
    VECTORTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("VectorType", FieldType.STRING, display_name="Vector Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ExpirationDate_field(self, value: Optional[int]):
        """
        Set data field with field name 'ExpirationDate' on this record model
        """
        self.set_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name, value)

    def get_ExpirationDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ExpirationDate' from this record model
        """
        return self.get_field_value(self.EXPIRATIONDATE__FIELD_NAME.field_name)

    def set_LotNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'LotNumber' on this record model
        """
        self.set_field_value(self.LOTNUMBER__FIELD_NAME.field_name, value)

    def get_LotNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'LotNumber' from this record model
        """
        return self.get_field_value(self.LOTNUMBER__FIELD_NAME.field_name)

    def set_ORF_field(self, value: Optional[str]):
        """
        Set data field with field name 'ORF' on this record model
        """
        self.set_field_value(self.ORF__FIELD_NAME.field_name, value)

    def get_ORF_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ORF' from this record model
        """
        return self.get_field_value(self.ORF__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_VectorSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'VectorSequence' on this record model
        """
        self.set_field_value(self.VECTORSEQUENCE__FIELD_NAME.field_name, value)

    def get_VectorSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VectorSequence' from this record model
        """
        return self.get_field_value(self.VECTORSEQUENCE__FIELD_NAME.field_name)

    def set_VectorType_field(self, value: Optional[str]):
        """
        Set data field with field name 'VectorType' on this record model
        """
        self.set_field_value(self.VECTORTYPE__FIELD_NAME.field_name, value)

    def get_VectorType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VectorType' from this record model
        """
        return self.get_field_value(self.VECTORTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class ViralVectorPartModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type ViralVectorPart
    Data Type Display Name: Viral Vector Part (Viral Vector Parts)
    Fields: ORF, CreatedBy, PartNumber, ConsumableType, VectorSequence, DateCreated, Vendor, QuantityOnHand, Units, QuantityPerItem, ReorderLevelQuantity, DataRecordName, VectorType, VeloxLastModifiedDate, VeloxLastModifiedBy, ConsumableName
    """
    DATA_TYPE_NAME: Final[str] = 'ViralVectorPart'
    DISPLAY_NAME: Final[str] = "Viral Vector Part"
    PLURAL_DISPLAY_NAME: Final[str] = "Viral Vector Parts"
    CONSUMABLENAME__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableName", FieldType.AUTO_ACCESSION, display_name="Sapio Vector Accession Number")
    CONSUMABLETYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ConsumableType", FieldType.SELECTION, display_name="Viral Vector Subtype")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ORF__FIELD_NAME: Final[WrapperField] = WrapperField("ORF", FieldType.STRING, display_name="ORF")
    PARTNUMBER__FIELD_NAME: Final[WrapperField] = WrapperField("PartNumber", FieldType.STRING, display_name="Vector ID")
    QUANTITYONHAND__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityOnHand", FieldType.DOUBLE, display_name="Quantity / Volume On Hand")
    QUANTITYPERITEM__FIELD_NAME: Final[WrapperField] = WrapperField("QuantityPerItem", FieldType.DOUBLE, display_name="Quantity / Volume Per Item")
    REORDERLEVELQUANTITY__FIELD_NAME: Final[WrapperField] = WrapperField("ReorderLevelQuantity", FieldType.DOUBLE, display_name="Reorder Level Quantity")
    UNITS__FIELD_NAME: Final[WrapperField] = WrapperField("Units", FieldType.PICKLIST, display_name="Units")
    VECTORSEQUENCE__FIELD_NAME: Final[WrapperField] = WrapperField("VectorSequence", FieldType.STRING, display_name="Vector Sequence")
    VECTORTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("VectorType", FieldType.STRING, display_name="Vector Type")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VENDOR__FIELD_NAME: Final[WrapperField] = WrapperField("Vendor", FieldType.SELECTION, display_name="Vendor")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ConsumableName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableName' on this record model
        """
        self.set_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name, value)

    def get_ConsumableName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableName' from this record model
        """
        return self.get_field_value(self.CONSUMABLENAME__FIELD_NAME.field_name)

    def set_ConsumableType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ConsumableType' on this record model
        """
        self.set_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name, value)

    def get_ConsumableType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ConsumableType' from this record model
        """
        return self.get_field_value(self.CONSUMABLETYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ORF_field(self, value: Optional[str]):
        """
        Set data field with field name 'ORF' on this record model
        """
        self.set_field_value(self.ORF__FIELD_NAME.field_name, value)

    def get_ORF_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ORF' from this record model
        """
        return self.get_field_value(self.ORF__FIELD_NAME.field_name)

    def set_PartNumber_field(self, value: Optional[str]):
        """
        Set data field with field name 'PartNumber' on this record model
        """
        self.set_field_value(self.PARTNUMBER__FIELD_NAME.field_name, value)

    def get_PartNumber_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PartNumber' from this record model
        """
        return self.get_field_value(self.PARTNUMBER__FIELD_NAME.field_name)

    def set_QuantityOnHand_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityOnHand' on this record model
        """
        self.set_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name, value)

    def get_QuantityOnHand_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityOnHand' from this record model
        """
        return self.get_field_value(self.QUANTITYONHAND__FIELD_NAME.field_name)

    def set_QuantityPerItem_field(self, value: Optional[float]):
        """
        Set data field with field name 'QuantityPerItem' on this record model
        """
        self.set_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name, value)

    def get_QuantityPerItem_field(self) -> Optional[float]:
        """
        Get data field value with field name 'QuantityPerItem' from this record model
        """
        return self.get_field_value(self.QUANTITYPERITEM__FIELD_NAME.field_name)

    def set_ReorderLevelQuantity_field(self, value: Optional[float]):
        """
        Set data field with field name 'ReorderLevelQuantity' on this record model
        """
        self.set_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name, value)

    def get_ReorderLevelQuantity_field(self) -> Optional[float]:
        """
        Get data field value with field name 'ReorderLevelQuantity' from this record model
        """
        return self.get_field_value(self.REORDERLEVELQUANTITY__FIELD_NAME.field_name)

    def set_Units_field(self, value: Optional[str]):
        """
        Set data field with field name 'Units' on this record model
        """
        self.set_field_value(self.UNITS__FIELD_NAME.field_name, value)

    def get_Units_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Units' from this record model
        """
        return self.get_field_value(self.UNITS__FIELD_NAME.field_name)

    def set_VectorSequence_field(self, value: Optional[str]):
        """
        Set data field with field name 'VectorSequence' on this record model
        """
        self.set_field_value(self.VECTORSEQUENCE__FIELD_NAME.field_name, value)

    def get_VectorSequence_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VectorSequence' from this record model
        """
        return self.get_field_value(self.VECTORSEQUENCE__FIELD_NAME.field_name)

    def set_VectorType_field(self, value: Optional[str]):
        """
        Set data field with field name 'VectorType' on this record model
        """
        self.set_field_value(self.VECTORTYPE__FIELD_NAME.field_name, value)

    def get_VectorType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VectorType' from this record model
        """
        return self.get_field_value(self.VECTORTYPE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_Vendor_field(self, value: Optional[str]):
        """
        Set data field with field name 'Vendor' on this record model
        """
        self.set_field_value(self.VENDOR__FIELD_NAME.field_name, value)

    def get_Vendor_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Vendor' from this record model
        """
        return self.get_field_value(self.VENDOR__FIELD_NAME.field_name)


class WellElementModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type WellElement
    Data Type Display Name: Well Element (Well Elements)
    Fields: MultiParentLink138, MultiParentLink215, CreatedBy, UnitOfMeasure, Amount, TimePoint, WellElementDataType, DateCreated, Layer, Required, DataRecordName, WellElementSubType, VeloxLastModifiedDate, WellElementFilterField, VeloxLastModifiedBy, ControlType, isControl, Notes, ElementId
    """
    DATA_TYPE_NAME: Final[str] = 'WellElement'
    DISPLAY_NAME: Final[str] = "Well Element"
    PLURAL_DISPLAY_NAME: Final[str] = "Well Elements"
    AMOUNT__FIELD_NAME: Final[WrapperField] = WrapperField("Amount", FieldType.DOUBLE, display_name="Amount")
    CONTROLTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("ControlType", FieldType.STRING, display_name="Control Type")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    ELEMENTID__FIELD_NAME: Final[WrapperField] = WrapperField("ElementId", FieldType.STRING, display_name="Well Element Id")
    LAYER__FIELD_NAME: Final[WrapperField] = WrapperField("Layer", FieldType.INTEGER, display_name="Layer")
    MULTIPARENTLINK138__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink138", FieldType.MULTIPARENTLINK, display_name="Related TemplateWells")
    MULTIPARENTLINK215__FIELD_NAME: Final[WrapperField] = WrapperField("MultiParentLink215", FieldType.MULTIPARENTLINK, display_name="Linked Sample")
    NOTES__FIELD_NAME: Final[WrapperField] = WrapperField("Notes", FieldType.STRING, display_name="Notes")
    REQUIRED__FIELD_NAME: Final[WrapperField] = WrapperField("Required", FieldType.BOOLEAN, display_name="Required")
    TIMEPOINT__FIELD_NAME: Final[WrapperField] = WrapperField("TimePoint", FieldType.STRING, display_name="Time Point")
    UNITOFMEASURE__FIELD_NAME: Final[WrapperField] = WrapperField("UnitOfMeasure", FieldType.PICKLIST, display_name="Unit Of Measure")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    WELLELEMENTDATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("WellElementDataType", FieldType.STRING, display_name="Data Type")
    WELLELEMENTFILTERFIELD__FIELD_NAME: Final[WrapperField] = WrapperField("WellElementFilterField", FieldType.STRING, display_name="Filter Field")
    WELLELEMENTSUBTYPE__FIELD_NAME: Final[WrapperField] = WrapperField("WellElementSubType", FieldType.STRING, display_name="Sub Type")
    ISCONTROL__FIELD_NAME: Final[WrapperField] = WrapperField("isControl", FieldType.BOOLEAN, display_name="Is Control")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_Amount_field(self, value: Optional[float]):
        """
        Set data field with field name 'Amount' on this record model
        """
        self.set_field_value(self.AMOUNT__FIELD_NAME.field_name, value)

    def get_Amount_field(self) -> Optional[float]:
        """
        Get data field value with field name 'Amount' from this record model
        """
        return self.get_field_value(self.AMOUNT__FIELD_NAME.field_name)

    def set_ControlType_field(self, value: Optional[str]):
        """
        Set data field with field name 'ControlType' on this record model
        """
        self.set_field_value(self.CONTROLTYPE__FIELD_NAME.field_name, value)

    def get_ControlType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ControlType' from this record model
        """
        return self.get_field_value(self.CONTROLTYPE__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_ElementId_field(self, value: Optional[str]):
        """
        Set data field with field name 'ElementId' on this record model
        """
        self.set_field_value(self.ELEMENTID__FIELD_NAME.field_name, value)

    def get_ElementId_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ElementId' from this record model
        """
        return self.get_field_value(self.ELEMENTID__FIELD_NAME.field_name)

    def set_Layer_field(self, value: Optional[int]):
        """
        Set data field with field name 'Layer' on this record model
        """
        self.set_field_value(self.LAYER__FIELD_NAME.field_name, value)

    def get_Layer_field(self) -> Optional[int]:
        """
        Get data field value with field name 'Layer' from this record model
        """
        return self.get_field_value(self.LAYER__FIELD_NAME.field_name)

    def set_Notes_field(self, value: Optional[str]):
        """
        Set data field with field name 'Notes' on this record model
        """
        self.set_field_value(self.NOTES__FIELD_NAME.field_name, value)

    def get_Notes_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Notes' from this record model
        """
        return self.get_field_value(self.NOTES__FIELD_NAME.field_name)

    def set_Required_field(self, value: Optional[bool]):
        """
        Set data field with field name 'Required' on this record model
        """
        self.set_field_value(self.REQUIRED__FIELD_NAME.field_name, value)

    def get_Required_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'Required' from this record model
        """
        return self.get_field_value(self.REQUIRED__FIELD_NAME.field_name)

    def set_TimePoint_field(self, value: Optional[str]):
        """
        Set data field with field name 'TimePoint' on this record model
        """
        self.set_field_value(self.TIMEPOINT__FIELD_NAME.field_name, value)

    def get_TimePoint_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TimePoint' from this record model
        """
        return self.get_field_value(self.TIMEPOINT__FIELD_NAME.field_name)

    def set_UnitOfMeasure_field(self, value: Optional[str]):
        """
        Set data field with field name 'UnitOfMeasure' on this record model
        """
        self.set_field_value(self.UNITOFMEASURE__FIELD_NAME.field_name, value)

    def get_UnitOfMeasure_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UnitOfMeasure' from this record model
        """
        return self.get_field_value(self.UNITOFMEASURE__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WellElementDataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellElementDataType' on this record model
        """
        self.set_field_value(self.WELLELEMENTDATATYPE__FIELD_NAME.field_name, value)

    def get_WellElementDataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellElementDataType' from this record model
        """
        return self.get_field_value(self.WELLELEMENTDATATYPE__FIELD_NAME.field_name)

    def set_WellElementFilterField_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellElementFilterField' on this record model
        """
        self.set_field_value(self.WELLELEMENTFILTERFIELD__FIELD_NAME.field_name, value)

    def get_WellElementFilterField_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellElementFilterField' from this record model
        """
        return self.get_field_value(self.WELLELEMENTFILTERFIELD__FIELD_NAME.field_name)

    def set_WellElementSubType_field(self, value: Optional[str]):
        """
        Set data field with field name 'WellElementSubType' on this record model
        """
        self.set_field_value(self.WELLELEMENTSUBTYPE__FIELD_NAME.field_name, value)

    def get_WellElementSubType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WellElementSubType' from this record model
        """
        return self.get_field_value(self.WELLELEMENTSUBTYPE__FIELD_NAME.field_name)

    def set_isControl_field(self, value: Optional[bool]):
        """
        Set data field with field name 'isControl' on this record model
        """
        self.set_field_value(self.ISCONTROL__FIELD_NAME.field_name, value)

    def get_isControl_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'isControl' from this record model
        """
        return self.get_field_value(self.ISCONTROL__FIELD_NAME.field_name)


class WorkQueueButtonConfigurationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type WorkQueueButtonConfiguration
    Data Type Display Name: Work Queue Button Configuration (Work Queue Button Configurations)
    Fields: CreatedBy, DateCreated, ViewUploadImageButton, Line2Text, ButtonName, ButtonOrder, DataRecordName, NoSelectionRequired, VeloxLastModifiedDate, VeloxLastModifiedBy, DataType, PackagePath
    """
    DATA_TYPE_NAME: Final[str] = 'WorkQueueButtonConfiguration'
    DISPLAY_NAME: Final[str] = "Work Queue Button Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Work Queue Button Configurations"
    BUTTONNAME__FIELD_NAME: Final[WrapperField] = WrapperField("ButtonName", FieldType.STRING, display_name="Button Line 1 Text         ")
    BUTTONORDER__FIELD_NAME: Final[WrapperField] = WrapperField("ButtonOrder", FieldType.LONG, display_name="Button Order")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DataType", FieldType.SELECTION, display_name="Data Type           ")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    LINE2TEXT__FIELD_NAME: Final[WrapperField] = WrapperField("Line2Text", FieldType.STRING, display_name="Button Line 2 Text")
    NOSELECTIONREQUIRED__FIELD_NAME: Final[WrapperField] = WrapperField("NoSelectionRequired", FieldType.BOOLEAN, display_name="No Selection Required")
    PACKAGEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("PackagePath", FieldType.STRING, display_name="Package Path")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VIEWUPLOADIMAGEBUTTON__FIELD_NAME: Final[WrapperField] = WrapperField("ViewUploadImageButton", FieldType.ACTION, display_name="View/Upload Image")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_ButtonName_field(self, value: Optional[str]):
        """
        Set data field with field name 'ButtonName' on this record model
        """
        self.set_field_value(self.BUTTONNAME__FIELD_NAME.field_name, value)

    def get_ButtonName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ButtonName' from this record model
        """
        return self.get_field_value(self.BUTTONNAME__FIELD_NAME.field_name)

    def set_ButtonOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'ButtonOrder' on this record model
        """
        self.set_field_value(self.BUTTONORDER__FIELD_NAME.field_name, value)

    def get_ButtonOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'ButtonOrder' from this record model
        """
        return self.get_field_value(self.BUTTONORDER__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_Line2Text_field(self, value: Optional[str]):
        """
        Set data field with field name 'Line2Text' on this record model
        """
        self.set_field_value(self.LINE2TEXT__FIELD_NAME.field_name, value)

    def get_Line2Text_field(self) -> Optional[str]:
        """
        Get data field value with field name 'Line2Text' from this record model
        """
        return self.get_field_value(self.LINE2TEXT__FIELD_NAME.field_name)

    def set_NoSelectionRequired_field(self, value: Optional[bool]):
        """
        Set data field with field name 'NoSelectionRequired' on this record model
        """
        self.set_field_value(self.NOSELECTIONREQUIRED__FIELD_NAME.field_name, value)

    def get_NoSelectionRequired_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'NoSelectionRequired' from this record model
        """
        return self.get_field_value(self.NOSELECTIONREQUIRED__FIELD_NAME.field_name)

    def set_PackagePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'PackagePath' on this record model
        """
        self.set_field_value(self.PACKAGEPATH__FIELD_NAME.field_name, value)

    def get_PackagePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'PackagePath' from this record model
        """
        return self.get_field_value(self.PACKAGEPATH__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class WorkQueueDataTypeConfigurationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type WorkQueueDataTypeConfiguration
    Data Type Display Name: Work Queue Data Type Configuration (Work Queue Data Type Configurations)
    Fields: IsReportBacked, CreatedBy, DoubleClickActionPluginPath, DateCreated, DisableDragAndDrop, AlwaysShow, ViewUploadImageButton, UseSingleSelection, BatchRetrieval, DataRecordName, ItemQueuePackagePath, ShowDefaultButtons, VeloxLastModifiedDate, VeloxLastModifiedBy, DataType, IsReadOnly
    """
    DATA_TYPE_NAME: Final[str] = 'WorkQueueDataTypeConfiguration'
    DISPLAY_NAME: Final[str] = "Work Queue Data Type Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Work Queue Data Type Configurations"
    ALWAYSSHOW__FIELD_NAME: Final[WrapperField] = WrapperField("AlwaysShow", FieldType.BOOLEAN, display_name="Always Show")
    BATCHRETRIEVAL__FIELD_NAME: Final[WrapperField] = WrapperField("BatchRetrieval", FieldType.BOOLEAN, display_name="Batch Retrieval")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATATYPE__FIELD_NAME: Final[WrapperField] = WrapperField("DataType", FieldType.SELECTION, display_name="Data Type")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DISABLEDRAGANDDROP__FIELD_NAME: Final[WrapperField] = WrapperField("DisableDragAndDrop", FieldType.BOOLEAN, display_name="Disable Drag And Drop")
    DOUBLECLICKACTIONPLUGINPATH__FIELD_NAME: Final[WrapperField] = WrapperField("DoubleClickActionPluginPath", FieldType.STRING, display_name="DoubleClickActionPluginPath")
    ISREADONLY__FIELD_NAME: Final[WrapperField] = WrapperField("IsReadOnly", FieldType.BOOLEAN, display_name="Read Only")
    ISREPORTBACKED__FIELD_NAME: Final[WrapperField] = WrapperField("IsReportBacked", FieldType.BOOLEAN, display_name="Report Backed")
    ITEMQUEUEPACKAGEPATH__FIELD_NAME: Final[WrapperField] = WrapperField("ItemQueuePackagePath", FieldType.STRING, display_name="Data Retrieval Plugin Path")
    SHOWDEFAULTBUTTONS__FIELD_NAME: Final[WrapperField] = WrapperField("ShowDefaultButtons", FieldType.BOOLEAN, display_name="Show Default Buttons")
    USESINGLESELECTION__FIELD_NAME: Final[WrapperField] = WrapperField("UseSingleSelection", FieldType.BOOLEAN, display_name="Enforce Single Selection")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VIEWUPLOADIMAGEBUTTON__FIELD_NAME: Final[WrapperField] = WrapperField("ViewUploadImageButton", FieldType.ACTION, display_name="View/Upload Image")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AlwaysShow_field(self, value: Optional[bool]):
        """
        Set data field with field name 'AlwaysShow' on this record model
        """
        self.set_field_value(self.ALWAYSSHOW__FIELD_NAME.field_name, value)

    def get_AlwaysShow_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'AlwaysShow' from this record model
        """
        return self.get_field_value(self.ALWAYSSHOW__FIELD_NAME.field_name)

    def set_BatchRetrieval_field(self, value: Optional[bool]):
        """
        Set data field with field name 'BatchRetrieval' on this record model
        """
        self.set_field_value(self.BATCHRETRIEVAL__FIELD_NAME.field_name, value)

    def get_BatchRetrieval_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'BatchRetrieval' from this record model
        """
        return self.get_field_value(self.BATCHRETRIEVAL__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def set_DataType_field(self, value: Optional[str]):
        """
        Set data field with field name 'DataType' on this record model
        """
        self.set_field_value(self.DATATYPE__FIELD_NAME.field_name, value)

    def get_DataType_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DataType' from this record model
        """
        return self.get_field_value(self.DATATYPE__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DisableDragAndDrop_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DisableDragAndDrop' on this record model
        """
        self.set_field_value(self.DISABLEDRAGANDDROP__FIELD_NAME.field_name, value)

    def get_DisableDragAndDrop_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DisableDragAndDrop' from this record model
        """
        return self.get_field_value(self.DISABLEDRAGANDDROP__FIELD_NAME.field_name)

    def set_DoubleClickActionPluginPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'DoubleClickActionPluginPath' on this record model
        """
        self.set_field_value(self.DOUBLECLICKACTIONPLUGINPATH__FIELD_NAME.field_name, value)

    def get_DoubleClickActionPluginPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DoubleClickActionPluginPath' from this record model
        """
        return self.get_field_value(self.DOUBLECLICKACTIONPLUGINPATH__FIELD_NAME.field_name)

    def set_IsReadOnly_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsReadOnly' on this record model
        """
        self.set_field_value(self.ISREADONLY__FIELD_NAME.field_name, value)

    def get_IsReadOnly_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsReadOnly' from this record model
        """
        return self.get_field_value(self.ISREADONLY__FIELD_NAME.field_name)

    def set_IsReportBacked_field(self, value: Optional[bool]):
        """
        Set data field with field name 'IsReportBacked' on this record model
        """
        self.set_field_value(self.ISREPORTBACKED__FIELD_NAME.field_name, value)

    def get_IsReportBacked_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'IsReportBacked' from this record model
        """
        return self.get_field_value(self.ISREPORTBACKED__FIELD_NAME.field_name)

    def set_ItemQueuePackagePath_field(self, value: Optional[str]):
        """
        Set data field with field name 'ItemQueuePackagePath' on this record model
        """
        self.set_field_value(self.ITEMQUEUEPACKAGEPATH__FIELD_NAME.field_name, value)

    def get_ItemQueuePackagePath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'ItemQueuePackagePath' from this record model
        """
        return self.get_field_value(self.ITEMQUEUEPACKAGEPATH__FIELD_NAME.field_name)

    def set_ShowDefaultButtons_field(self, value: Optional[bool]):
        """
        Set data field with field name 'ShowDefaultButtons' on this record model
        """
        self.set_field_value(self.SHOWDEFAULTBUTTONS__FIELD_NAME.field_name, value)

    def get_ShowDefaultButtons_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'ShowDefaultButtons' from this record model
        """
        return self.get_field_value(self.SHOWDEFAULTBUTTONS__FIELD_NAME.field_name)

    def set_UseSingleSelection_field(self, value: Optional[bool]):
        """
        Set data field with field name 'UseSingleSelection' on this record model
        """
        self.set_field_value(self.USESINGLESELECTION__FIELD_NAME.field_name, value)

    def get_UseSingleSelection_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'UseSingleSelection' from this record model
        """
        return self.get_field_value(self.USESINGLESELECTION__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class WorkQueueTabConfigurationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type WorkQueueTabConfiguration
    Data Type Display Name: Work Queue Tab Configuration (Work Queue Tab Configurations)
    Fields: CreatedBy, DateCreated, TabPluralDisplayName, HideTab, ViewUploadImageButton, DataRecordName, HideStorageView, HidePlateView, VeloxLastModifiedDate, VeloxLastModifiedBy, TabDisplayName, TabName
    """
    DATA_TYPE_NAME: Final[str] = 'WorkQueueTabConfiguration'
    DISPLAY_NAME: Final[str] = "Work Queue Tab Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Work Queue Tab Configurations"
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    HIDEPLATEVIEW__FIELD_NAME: Final[WrapperField] = WrapperField("HidePlateView", FieldType.BOOLEAN, display_name="Hide Plate View")
    HIDESTORAGEVIEW__FIELD_NAME: Final[WrapperField] = WrapperField("HideStorageView", FieldType.BOOLEAN, display_name="Hide Storage Unit View")
    HIDETAB__FIELD_NAME: Final[WrapperField] = WrapperField("HideTab", FieldType.BOOLEAN, display_name="Hide Tab")
    TABDISPLAYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("TabDisplayName", FieldType.STRING, display_name="Tab Display Name")
    TABNAME__FIELD_NAME: Final[WrapperField] = WrapperField("TabName", FieldType.STRING, display_name="Tab Name")
    TABPLURALDISPLAYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("TabPluralDisplayName", FieldType.STRING, display_name="Tab Plural Display Name")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VIEWUPLOADIMAGEBUTTON__FIELD_NAME: Final[WrapperField] = WrapperField("ViewUploadImageButton", FieldType.ACTION, display_name="View/Upload Image")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_HidePlateView_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HidePlateView' on this record model
        """
        self.set_field_value(self.HIDEPLATEVIEW__FIELD_NAME.field_name, value)

    def get_HidePlateView_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HidePlateView' from this record model
        """
        return self.get_field_value(self.HIDEPLATEVIEW__FIELD_NAME.field_name)

    def set_HideStorageView_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HideStorageView' on this record model
        """
        self.set_field_value(self.HIDESTORAGEVIEW__FIELD_NAME.field_name, value)

    def get_HideStorageView_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HideStorageView' from this record model
        """
        return self.get_field_value(self.HIDESTORAGEVIEW__FIELD_NAME.field_name)

    def set_HideTab_field(self, value: Optional[bool]):
        """
        Set data field with field name 'HideTab' on this record model
        """
        self.set_field_value(self.HIDETAB__FIELD_NAME.field_name, value)

    def get_HideTab_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'HideTab' from this record model
        """
        return self.get_field_value(self.HIDETAB__FIELD_NAME.field_name)

    def set_TabDisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TabDisplayName' on this record model
        """
        self.set_field_value(self.TABDISPLAYNAME__FIELD_NAME.field_name, value)

    def get_TabDisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TabDisplayName' from this record model
        """
        return self.get_field_value(self.TABDISPLAYNAME__FIELD_NAME.field_name)

    def set_TabName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TabName' on this record model
        """
        self.set_field_value(self.TABNAME__FIELD_NAME.field_name, value)

    def get_TabName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TabName' from this record model
        """
        return self.get_field_value(self.TABNAME__FIELD_NAME.field_name)

    def set_TabPluralDisplayName_field(self, value: Optional[str]):
        """
        Set data field with field name 'TabPluralDisplayName' on this record model
        """
        self.set_field_value(self.TABPLURALDISPLAYNAME__FIELD_NAME.field_name, value)

    def get_TabPluralDisplayName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'TabPluralDisplayName' from this record model
        """
        return self.get_field_value(self.TABPLURALDISPLAYNAME__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)


class WorkQueueTaskConfigurationModel(WrappedRecordModel):
    """
    Auto-Generated Record Model Wrapper for data type WorkQueueTaskConfiguration
    Data Type Display Name: Work Queue Category Configuration (Work Queue Category Configurations)
    Fields: CreatedBy, WorkflowOrCategoryName, EditConfigButton, AddManageBatchPluginPath, DefaultBatchButtonsToExclude, DateCreated, DisableDeleteBatchPrompt, ViewUploadImageButton, DataRecordName, UserGroupList, VeloxLastModifiedDate, VeloxLastModifiedBy, CategoryOrder
    """
    DATA_TYPE_NAME: Final[str] = 'WorkQueueTaskConfiguration'
    DISPLAY_NAME: Final[str] = "Work Queue Category Configuration"
    PLURAL_DISPLAY_NAME: Final[str] = "Work Queue Category Configurations"
    ADDMANAGEBATCHPLUGINPATH__FIELD_NAME: Final[WrapperField] = WrapperField("AddManageBatchPluginPath", FieldType.STRING, display_name="Additional Manage Batch Plugin Path")
    CATEGORYORDER__FIELD_NAME: Final[WrapperField] = WrapperField("CategoryOrder", FieldType.LONG, display_name="Order/Weight")
    CREATEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("CreatedBy", FieldType.STRING, display_name="Created By")
    DATARECORDNAME__FIELD_NAME: Final[WrapperField] = WrapperField("DataRecordName", FieldType.IDENTIFIER, display_name="ID")
    DATECREATED__FIELD_NAME: Final[WrapperField] = WrapperField("DateCreated", FieldType.DATE, display_name="Date Created")
    DEFAULTBATCHBUTTONSTOEXCLUDE__FIELD_NAME: Final[WrapperField] = WrapperField("DefaultBatchButtonsToExclude", FieldType.SELECTION, display_name="Default Batch Buttons to Exclude")
    DISABLEDELETEBATCHPROMPT__FIELD_NAME: Final[WrapperField] = WrapperField("DisableDeleteBatchPrompt", FieldType.BOOLEAN, display_name="Disable Delete Batch Prompt")
    EDITCONFIGBUTTON__FIELD_NAME: Final[WrapperField] = WrapperField("EditConfigButton", FieldType.ACTION, display_name="Edit")
    USERGROUPLIST__FIELD_NAME: Final[WrapperField] = WrapperField("UserGroupList", FieldType.SELECTION, display_name="User Group List")
    VELOXLASTMODIFIEDBY__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedBy", FieldType.STRING, display_name="Last Modified By")
    VELOXLASTMODIFIEDDATE__FIELD_NAME: Final[WrapperField] = WrapperField("VeloxLastModifiedDate", FieldType.DATE, display_name="Last Modified Date")
    VIEWUPLOADIMAGEBUTTON__FIELD_NAME: Final[WrapperField] = WrapperField("ViewUploadImageButton", FieldType.ACTION, display_name="View/Upload Image")
    WORKFLOWORCATEGORYNAME__FIELD_NAME: Final[WrapperField] = WrapperField("WorkflowOrCategoryName", FieldType.SELECTION, display_name="Workflow/Category")

    @classmethod
    def get_wrapper_data_type_name(cls):
        return cls.DATA_TYPE_NAME

    def set_AddManageBatchPluginPath_field(self, value: Optional[str]):
        """
        Set data field with field name 'AddManageBatchPluginPath' on this record model
        """
        self.set_field_value(self.ADDMANAGEBATCHPLUGINPATH__FIELD_NAME.field_name, value)

    def get_AddManageBatchPluginPath_field(self) -> Optional[str]:
        """
        Get data field value with field name 'AddManageBatchPluginPath' from this record model
        """
        return self.get_field_value(self.ADDMANAGEBATCHPLUGINPATH__FIELD_NAME.field_name)

    def set_CategoryOrder_field(self, value: Optional[int]):
        """
        Set data field with field name 'CategoryOrder' on this record model
        """
        self.set_field_value(self.CATEGORYORDER__FIELD_NAME.field_name, value)

    def get_CategoryOrder_field(self) -> Optional[int]:
        """
        Get data field value with field name 'CategoryOrder' from this record model
        """
        return self.get_field_value(self.CATEGORYORDER__FIELD_NAME.field_name)

    def get_CreatedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'CreatedBy' from this record model
        """
        return self.get_field_value(self.CREATEDBY__FIELD_NAME.field_name)

    def get_DateCreated_field(self) -> Optional[int]:
        """
        Get data field value with field name 'DateCreated' from this record model
        """
        return self.get_field_value(self.DATECREATED__FIELD_NAME.field_name)

    def set_DefaultBatchButtonsToExclude_field(self, value: Optional[str]):
        """
        Set data field with field name 'DefaultBatchButtonsToExclude' on this record model
        """
        self.set_field_value(self.DEFAULTBATCHBUTTONSTOEXCLUDE__FIELD_NAME.field_name, value)

    def get_DefaultBatchButtonsToExclude_field(self) -> Optional[str]:
        """
        Get data field value with field name 'DefaultBatchButtonsToExclude' from this record model
        """
        return self.get_field_value(self.DEFAULTBATCHBUTTONSTOEXCLUDE__FIELD_NAME.field_name)

    def set_DisableDeleteBatchPrompt_field(self, value: Optional[bool]):
        """
        Set data field with field name 'DisableDeleteBatchPrompt' on this record model
        """
        self.set_field_value(self.DISABLEDELETEBATCHPROMPT__FIELD_NAME.field_name, value)

    def get_DisableDeleteBatchPrompt_field(self) -> Optional[bool]:
        """
        Get data field value with field name 'DisableDeleteBatchPrompt' from this record model
        """
        return self.get_field_value(self.DISABLEDELETEBATCHPROMPT__FIELD_NAME.field_name)

    def set_UserGroupList_field(self, value: Optional[str]):
        """
        Set data field with field name 'UserGroupList' on this record model
        """
        self.set_field_value(self.USERGROUPLIST__FIELD_NAME.field_name, value)

    def get_UserGroupList_field(self) -> Optional[str]:
        """
        Get data field value with field name 'UserGroupList' from this record model
        """
        return self.get_field_value(self.USERGROUPLIST__FIELD_NAME.field_name)

    def get_VeloxLastModifiedBy_field(self) -> Optional[str]:
        """
        Get data field value with field name 'VeloxLastModifiedBy' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDBY__FIELD_NAME.field_name)

    def get_VeloxLastModifiedDate_field(self) -> Optional[int]:
        """
        Get data field value with field name 'VeloxLastModifiedDate' from this record model
        """
        return self.get_field_value(self.VELOXLASTMODIFIEDDATE__FIELD_NAME.field_name)

    def set_WorkflowOrCategoryName_field(self, value: Optional[str]):
        """
        Set data field with field name 'WorkflowOrCategoryName' on this record model
        """
        self.set_field_value(self.WORKFLOWORCATEGORYNAME__FIELD_NAME.field_name, value)

    def get_WorkflowOrCategoryName_field(self) -> Optional[str]:
        """
        Get data field value with field name 'WorkflowOrCategoryName' from this record model
        """
        return self.get_field_value(self.WORKFLOWORCATEGORYNAME__FIELD_NAME.field_name)


