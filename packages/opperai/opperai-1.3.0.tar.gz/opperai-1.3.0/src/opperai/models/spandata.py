"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from opperai.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
from pydantic import model_serializer
from typing import List
from typing_extensions import NotRequired, TypedDict


class SpanDataTypedDict(TypedDict):
    input: NotRequired[Nullable[str]]
    r"""The input of the span"""
    output: NotRequired[Nullable[str]]
    r"""The output of the span"""
    total_tokens: NotRequired[Nullable[int]]
    r"""The total tokens of the span"""
    model: NotRequired[Nullable[str]]
    r"""The model of the span"""
    instructions: NotRequired[Nullable[str]]
    r"""The instructions of the span in case of a generation span"""
    function: NotRequired[Nullable[str]]
    r"""The function of the span"""
    tags: NotRequired[Nullable[List[str]]]
    r"""The tags of the span"""
    score: NotRequired[Nullable[int]]
    r"""The score of the span, by default set to the evaluation score of the generation of the span"""
    generation_id: NotRequired[Nullable[str]]
    r"""The id of the generation of the span"""
    observations: NotRequired[Nullable[str]]
    r"""The observations of the span in case of a generation span"""


class SpanData(BaseModel):
    input: OptionalNullable[str] = UNSET
    r"""The input of the span"""

    output: OptionalNullable[str] = UNSET
    r"""The output of the span"""

    total_tokens: OptionalNullable[int] = UNSET
    r"""The total tokens of the span"""

    model: OptionalNullable[str] = UNSET
    r"""The model of the span"""

    instructions: OptionalNullable[str] = UNSET
    r"""The instructions of the span in case of a generation span"""

    function: OptionalNullable[str] = UNSET
    r"""The function of the span"""

    tags: OptionalNullable[List[str]] = UNSET
    r"""The tags of the span"""

    score: OptionalNullable[int] = UNSET
    r"""The score of the span, by default set to the evaluation score of the generation of the span"""

    generation_id: OptionalNullable[str] = UNSET
    r"""The id of the generation of the span"""

    observations: OptionalNullable[str] = UNSET
    r"""The observations of the span in case of a generation span"""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "input",
            "output",
            "total_tokens",
            "model",
            "instructions",
            "function",
            "tags",
            "score",
            "generation_id",
            "observations",
        ]
        nullable_fields = [
            "input",
            "output",
            "total_tokens",
            "model",
            "instructions",
            "function",
            "tags",
            "score",
            "generation_id",
            "observations",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
