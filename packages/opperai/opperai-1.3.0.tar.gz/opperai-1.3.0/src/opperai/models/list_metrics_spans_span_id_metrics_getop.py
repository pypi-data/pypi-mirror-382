"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from opperai.types import BaseModel
from opperai.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ListMetricsSpansSpanIDMetricsGetRequestTypedDict(TypedDict):
    span_id: str
    r"""The id of the span to list metrics for"""
    offset: NotRequired[int]
    r"""The offset to start the list from"""
    limit: NotRequired[int]
    r"""The number of metrics to return"""


class ListMetricsSpansSpanIDMetricsGetRequest(BaseModel):
    span_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The id of the span to list metrics for"""

    offset: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 0
    r"""The offset to start the list from"""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 100
    r"""The number of metrics to return"""
