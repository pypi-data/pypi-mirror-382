"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from opperai.types import BaseModel
import pydantic
from pydantic import ConfigDict
from typing import Any, Dict
from typing_extensions import TypedDict


class GetUsageResultItemTypedDict(TypedDict):
    time_bucket: datetime
    r"""The start time of the time bucket"""
    cost: str
    r"""The cost in USD for the time bucket"""


class GetUsageResultItem(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True, arbitrary_types_allowed=True, extra="allow"
    )
    __pydantic_extra__: Dict[str, Any] = pydantic.Field(init=False)

    time_bucket: datetime
    r"""The start time of the time bucket"""

    cost: str
    r"""The cost in USD for the time bucket"""

    @property
    def additional_properties(self):
        return self.__pydantic_extra__

    @additional_properties.setter
    def additional_properties(self, value):
        self.__pydantic_extra__ = value  # pyright: ignore[reportIncompatibleVariableOverride]
