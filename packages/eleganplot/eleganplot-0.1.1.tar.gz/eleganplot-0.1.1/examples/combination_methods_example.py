"""
–ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ EleganPlot.

–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å glow_line, gradient_plot 
–∏ –¥—Ä—É–≥–∏–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –∏ –∫—Ä–∞—Å–∏–≤—ã—Ö –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π.
"""

import numpy as np
import matplotlib.pyplot as plt
import eleganplot as eplt

def basic_combination():
    """–ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è glow_line –∏ gradient_plot."""
    print("üé® –ë–∞–∑–æ–≤–æ–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤...")
    
    # –°–æ–∑–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ
    x = np.linspace(0, 4*np.pi, 200)
    y1 = np.sin(x) * np.exp(-x/10)
    y2 = np.cos(x) * np.exp(-x/10) + 0.5
    
    fig, ax = eplt.subplots(figsize=(12, 8))
    ax.set_facecolor('black')
    ax.set_title('–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Glow Line + Gradient Plot', 
                fontsize=16, fontweight='bold', color='white')
    
    # –°–Ω–∞—á–∞–ª–∞ gradient_plot –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ª–∏–≤–∫–∏
    line1, gradient1 = ax.gradient_plot(
        x, y1, 
        fill_color='cyan', 
        alpha_coef=0.3,
        gradient_steps=150,
        linewidth=0  # –°–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ª–∏–Ω–∏—é gradient_plot
    )
    
    # –ó–∞—Ç–µ–º glow_line –ø–æ–≤–µ—Ä—Ö –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ —Å–≤–µ—á–µ–Ω–∏—è
    main_line1, glow_lines1 = ax.glow_line(
        x, y1,
        glow_color='cyan',
        glow_width=3.0,
        glow_alpha=0.8,
        glow_layers=12,
        alpha_mode='gradient',
        linewidth=2
    )
    
    # –í—Ç–æ—Ä–∞—è –ª–∏–Ω–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    line2, gradient2 = ax.gradient_plot(
        x, y2,
        fill_color='orange',
        alpha_coef=0.4,
        gradient_steps=150,
        linewidth=0
    )
    
    main_line2, glow_lines2 = ax.glow_line(
        x, y2,
        glow_color='orange',
        colormap='plasma',
        glow_width=4.0,
        glow_alpha=0.7,
        glow_layers=15,
        alpha_mode='pulse',
        linewidth=2
    )
    
    ax.set_xlabel('X', color='white')
    ax.set_ylabel('Y', color='white')
    ax.grid(True, alpha=0.2)
    
    plt.tight_layout()
    plt.show()


def advanced_combination():
    """–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø—Ä–∏–º–µ—Ä —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏."""
    print("üöÄ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...")
    
    # –°–æ–∑–¥–∞—ë–º –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    x = np.linspace(0, 6*np.pi, 300)
    
    # –û—Å–Ω–æ–≤–Ω–∞—è —Å–∏–Ω—É—Å–æ–∏–¥–∞
    y_main = np.sin(x)
    
    # –í—ã—Å–æ–∫–æ—á–∞—Å—Ç–æ—Ç–Ω—ã–µ –∫–æ–ª–µ–±–∞–Ω–∏—è
    y_high = y_main + 0.2 * np.sin(10*x)
    
    # –û–≥–∏–±–∞—é—â–∞—è
    y_envelope_upper = y_main + 0.5
    y_envelope_lower = y_main - 0.5
    
    fig, ax = eplt.subplots(figsize=(14, 10))
    ax.set_facecolor('#0a0a0a')
    ax.set_title('–°–ª–æ–∂–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤', 
                fontsize=18, fontweight='bold', color='white')
    
    # 1. –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω–∞—è –∑–∞–ª–∏–≤–∫–∞ –¥–ª—è –æ–±–ª–∞—Å—Ç–∏ –º–µ–∂–¥—É –æ–≥–∏–±–∞—é—â–∏–º–∏
    ax.fill_between(x, y_envelope_lower, y_envelope_upper, 
                   alpha=0.1, color='purple')
    
    # 2. Gradient plot –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    line_main, gradient_main = ax.gradient_plot(
        x, y_main,
        fill_color='blue',
        alpha_coef=0.4,
        gradient_steps=200,
        linewidth=0
    )
    
    # 3. Glow line –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å –º—è–≥–∫–∏–º —Å–≤–µ—á–µ–Ω–∏–µ–º
    main_line, glow_lines = ax.glow_line(
        x, y_main,
        glow_color='blue',
        glow_width=2.5,
        glow_alpha=0.6,
        glow_layers=10,
        alpha_mode='uniform',
        linewidth=1.5
    )
    
    # 4. Glow line –¥–ª—è –≤—ã—Å–æ–∫–æ—á–∞—Å—Ç–æ—Ç–Ω–æ–π —Å–æ—Å—Ç–∞–≤–ª—è—é—â–µ–π
    high_main, high_glow = ax.glow_line(
        x, y_high,
        glow_color='cyan',
        colormap='plasma',
        glow_width=1.5,
        glow_alpha=0.8,
        glow_layers=8,
        alpha_mode='gradient',
        linewidth=1
    )
    
    # 5. –¢–æ–Ω–∫–∏–µ —Å–≤–µ—Ç—è—â–∏–µ—Å—è –ª–∏–Ω–∏–∏ –¥–ª—è –æ–≥–∏–±–∞—é—â–∏—Ö
    upper_line, upper_glow = ax.glow_line(
        x, y_envelope_upper,
        glow_color='yellow',
        glow_width=1.0,
        glow_alpha=0.4,
        glow_layers=6,
        linewidth=0.8,
        linestyle='--'
    )
    
    lower_line, lower_glow = ax.glow_line(
        x, y_envelope_lower,
        glow_color='yellow',
        glow_width=1.0,
        glow_alpha=0.4,
        glow_layers=6,
        linewidth=0.8,
        linestyle='--'
    )
    
    ax.set_xlabel('X', color='white', fontsize=14)
    ax.set_ylabel('Y', color='white', fontsize=14)
    ax.grid(True, alpha=0.2, color='gray')
    
    plt.tight_layout()
    plt.show()


def interactive_combination():
    """–ü—Ä–∏–º–µ—Ä —Å —Ä–∞–∑–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤."""
    print("üéõÔ∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–∏–º–µ—Ä...")
    
    x = np.linspace(0, 3*np.pi, 150)
    
    # –°–æ–∑–¥–∞—ë–º —Å–µ—Ç–∫—É —Å—É–±–ø–ª–æ—Ç–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    fig, axes = eplt.subplots(2, 2, figsize=(15, 10))
    fig.suptitle('–†–∞–∑–ª–∏—á–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤', fontsize=16, fontweight='bold')
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—É–±–ø–ª–æ—Ç–∞
    configs = [
        {
            'title': 'Glow + Gradient (–º—è–≥–∫–∏–π)',
            'y_func': lambda x: np.sin(x),
            'gradient_alpha': 0.3,
            'glow_alpha': 0.5,
            'glow_width': 2.0,
            'color': 'cyan'
        },
        {
            'title': 'Glow + Gradient (—è—Ä–∫–∏–π)',
            'y_func': lambda x: np.cos(x) + 0.5,
            'gradient_alpha': 0.6,
            'glow_alpha': 0.9,
            'glow_width': 4.0,
            'color': 'orange'
        },
        {
            'title': '–ú–Ω–æ–≥–æ—Å–ª–æ–π–Ω–æ–µ —Å–≤–µ—á–µ–Ω–∏–µ',
            'y_func': lambda x: np.sin(2*x) * 0.8,
            'gradient_alpha': 0.2,
            'glow_alpha': 0.7,
            'glow_width': 3.5,
            'color': 'magenta'
        },
        {
            'title': '–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞',
            'y_func': lambda x: np.cos(3*x) * 0.6 - 0.5,
            'gradient_alpha': 0.4,
            'glow_alpha': 0.8,
            'glow_width': 3.0,
            'color': 'green'
        }
    ]
    
    for i, config in enumerate(configs):
        ax = axes[i // 2, i % 2]
        ax.set_facecolor('#1a1a1a')
        
        y = config['y_func'](x)
        
        # Gradient plot
        line, gradient = ax.gradient_plot(
            x, y,
            fill_color=config['color'],
            alpha_coef=config['gradient_alpha'],
            gradient_steps=100,
            linewidth=0
        )
        
        # Glow line
        main_line, glow_lines = ax.glow_line(
            x, y,
            glow_color=config['color'],
            glow_width=config['glow_width'],
            glow_alpha=config['glow_alpha'],
            glow_layers=12,
            alpha_mode='gradient' if i % 2 == 0 else 'pulse',
            colormap='viridis' if i == 3 else None,
            linewidth=2
        )
        
        ax.set_title(config['title'], fontsize=12, fontweight='bold')
        ax.grid(True, alpha=0.2)
    
    plt.tight_layout()
    plt.show()


def create_custom_combined_method():
    """–°–æ–∑–¥–∞—ë–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥, –∫–æ–º–±–∏–Ω–∏—Ä—É—é—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç—ã."""
    print("üõ†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞...")
    
    @eplt.custom_axes_method("glow_gradient_plot")
    def glow_gradient_plot(ax, x, y, 
                          color='cyan',
                          gradient_alpha=0.4,
                          glow_alpha=0.7,
                          glow_width=3.0,
                          glow_layers=12,
                          **kwargs):
        """
        –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥: gradient_plot + glow_line –≤ –æ–¥–Ω–æ–º –≤—ã–∑–æ–≤–µ.
        
        Parameters
        ----------
        ax : EleganAxes
            –û—Å–∏ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è
        x, y : array-like
            –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö
        color : str
            –û—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
        gradient_alpha : float
            –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ–π –∑–∞–ª–∏–≤–∫–∏
        glow_alpha : float
            –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å —Å–≤–µ—á–µ–Ω–∏—è
        glow_width : float
            –®–∏—Ä–∏–Ω–∞ —Å–≤–µ—á–µ–Ω–∏—è
        glow_layers : int
            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–µ–≤ —Å–≤–µ—á–µ–Ω–∏—è
        **kwargs
            –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π –ª–∏–Ω–∏–∏
        """
        # –°–Ω–∞—á–∞–ª–∞ gradient_plot
        line, gradient = ax.gradient_plot(
            x, y,
            fill_color=color,
            alpha_coef=gradient_alpha,
            gradient_steps=150,
            linewidth=0
        )
        
        # –ó–∞—Ç–µ–º glow_line
        main_line, glow_lines = ax.glow_line(
            x, y,
            glow_color=color,
            glow_width=glow_width,
            glow_alpha=glow_alpha,
            glow_layers=glow_layers,
            alpha_mode='gradient',
            **kwargs
        )
        
        return {
            'gradient_line': line,
            'gradient_fill': gradient,
            'main_line': main_line,
            'glow_lines': glow_lines
        }
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–µ—Ç–æ–¥ –∫ –∫–ª–∞—Å—Å—É
    from eleganplot.utils.decorators import apply_custom_methods
    apply_custom_methods(eplt.axes().__class__)
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥
    fig, ax = eplt.subplots(figsize=(12, 8))
    ax.set_facecolor('black')
    ax.set_title('–ö–∞—Å—Ç–æ–º–Ω—ã–π –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥', 
                fontsize=16, fontweight='bold', color='white')
    
    x = np.linspace(0, 4*np.pi, 200)
    y1 = np.sin(x) * np.exp(-x/8)
    y2 = np.cos(x) * np.exp(-x/8) + 1
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥!
    result1 = ax.glow_gradient_plot(
        x, y1, 
        color='cyan',
        gradient_alpha=0.3,
        glow_alpha=0.8,
        glow_width=3.5,
        linewidth=2
    )
    
    result2 = ax.glow_gradient_plot(
        x, y2,
        color='orange', 
        gradient_alpha=0.4,
        glow_alpha=0.6,
        glow_width=2.5,
        linewidth=1.5
    )
    
    ax.set_xlabel('X', color='white')
    ax.set_ylabel('Y', color='white')
    ax.grid(True, alpha=0.2)
    
    plt.tight_layout()
    plt.show()
    
    print("‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–π –º–µ—Ç–æ–¥ 'glow_gradient_plot' —Å–æ–∑–¥–∞–Ω –∏ –ø—Ä–∏–º–µ–Ω—ë–Ω!")


def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤."""
    print("üé® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ EleganPlot\n")
    
    try:
        basic_combination()
        print()
        
        advanced_combination()
        print()
        
        interactive_combination()
        print()
        
        create_custom_combined_method()
        print()
        
        print("üéâ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìù –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("  1. gradient_plot —Å–æ–∑–¥–∞—ë—Ç –∑–∞–ª–∏–≤–∫—É (linewidth=0 —á—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å –ª–∏–Ω–∏—é)")
        print("  2. glow_line –¥–æ–±–∞–≤–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç —Å–≤–µ—á–µ–Ω–∏—è –ø–æ–≤–µ—Ä—Ö")
        print("  3. –ú–æ–∂–Ω–æ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –ª—é–±—ã–µ –º–µ—Ç–æ–¥—ã –Ω–∞ –æ–¥–Ω–∏—Ö –æ—Å—è—Ö")
        print("  4. –ü–æ—Ä—è–¥–æ–∫ –≤—ã–∑–æ–≤–æ–≤ –≤–ª–∏—è–µ—Ç –Ω–∞ z-order (—á—Ç–æ –ø–æ–≤–µ—Ä—Ö —á–µ–≥–æ)")
        print("  5. –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    main()
