"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import insightproto.proto.common.v1.common_pb2
import insightproto.proto.jobs.v1.job_service_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class JobMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    ORG_FIELD_NUMBER: builtins.int
    AETHER_JOB_FIELD_NUMBER: builtins.int
    INSIGHT_JOB_FIELD_NUMBER: builtins.int
    SIMULATOR_JOB_FIELD_NUMBER: builtins.int
    KNOWLEDGE_JOB_FIELD_NUMBER: builtins.int
    id: builtins.str
    """the id of the job"""
    @property
    def org(self) -> insightproto.proto.common.v1.common_pb2.Organisation:
        """the organisation the job is for"""

    @property
    def aether_job(self) -> global___AetherJob: ...
    @property
    def insight_job(self) -> global___InsightJob: ...
    @property
    def simulator_job(self) -> global___SimulatorJob: ...
    @property
    def knowledge_job(self) -> global___KnowledgeJob: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        org: insightproto.proto.common.v1.common_pb2.Organisation | None = ...,
        aether_job: global___AetherJob | None = ...,
        insight_job: global___InsightJob | None = ...,
        simulator_job: global___SimulatorJob | None = ...,
        knowledge_job: global___KnowledgeJob | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["aether_job", b"aether_job", "insight_job", b"insight_job", "job", b"job", "knowledge_job", b"knowledge_job", "org", b"org", "simulator_job", b"simulator_job"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["aether_job", b"aether_job", "id", b"id", "insight_job", b"insight_job", "job", b"job", "knowledge_job", b"knowledge_job", "org", b"org", "simulator_job", b"simulator_job"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["job", b"job"]) -> typing.Literal["aether_job", "insight_job", "simulator_job", "knowledge_job"] | None: ...

global___JobMessage = JobMessage

@typing.final
class SimulatorJob(google.protobuf.message.Message):
    """SimulatorJob describes a job for the simulator"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    AGENT_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    INSIGHT_AGENT_FIELD_NUMBER: builtins.int
    TEST_SUITE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    id: builtins.str
    """the id of the job"""
    agent: builtins.str
    """the name of the agent to simulate (e.g. "insight-agent")"""
    test_suite: builtins.str
    """test suite file path for the --inputs flag (e.g. "test_cases/insight-agent/log-agent/opensearch_inputs.yaml")"""
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """DEPRECATED: the inputs to pass (use structured fields below instead)"""

    @property
    def insight_agent(self) -> global___InsightAgentConfig:
        """Agent-specific configuration"""

    @property
    def error(self) -> insightproto.proto.jobs.v1.job_service_pb2.Error:
        """error that happened from this config"""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        agent: builtins.str = ...,
        inputs: collections.abc.Iterable[builtins.str] | None = ...,
        insight_agent: global___InsightAgentConfig | None = ...,
        test_suite: builtins.str | None = ...,
        error: insightproto.proto.jobs.v1.job_service_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_error", b"_error", "_insight_agent", b"_insight_agent", "_test_suite", b"_test_suite", "error", b"error", "insight_agent", b"insight_agent", "test_suite", b"test_suite"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_error", b"_error", "_insight_agent", b"_insight_agent", "_test_suite", b"_test_suite", "agent", b"agent", "error", b"error", "id", b"id", "inputs", b"inputs", "insight_agent", b"insight_agent", "test_suite", b"test_suite"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_error", b"_error"]) -> typing.Literal["error"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_insight_agent", b"_insight_agent"]) -> typing.Literal["insight_agent"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_test_suite", b"_test_suite"]) -> typing.Literal["test_suite"] | None: ...

global___SimulatorJob = SimulatorJob

@typing.final
class InsightAgentConfig(google.protobuf.message.Message):
    """Configuration for insight-agent commands"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INVESTIGATE_FIELD_NUMBER: builtins.int
    RUN_AGENT_FIELD_NUMBER: builtins.int
    @property
    def investigate(self) -> global___InvestigateCommand:
        """Command-specific configuration"""

    @property
    def run_agent(self) -> global___RunAgentCommand: ...
    def __init__(
        self,
        *,
        investigate: global___InvestigateCommand | None = ...,
        run_agent: global___RunAgentCommand | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_investigate", b"_investigate", "_run_agent", b"_run_agent", "investigate", b"investigate", "run_agent", b"run_agent"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_investigate", b"_investigate", "_run_agent", b"_run_agent", "investigate", b"investigate", "run_agent", b"run_agent"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_investigate", b"_investigate"]) -> typing.Literal["investigate"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_run_agent", b"_run_agent"]) -> typing.Literal["run_agent"] | None: ...

global___InsightAgentConfig = InsightAgentConfig

@typing.final
class InvestigateCommand(google.protobuf.message.Message):
    """Configuration for "investigate" command"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUERY_FIELD_NUMBER: builtins.int
    query: builtins.str
    def __init__(
        self,
        *,
        query: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["query", b"query"]) -> None: ...

global___InvestigateCommand = InvestigateCommand

@typing.final
class RunAgentCommand(google.protobuf.message.Message):
    """Configuration for "run-agent" command"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AGENT_CLASS_FIELD_NUMBER: builtins.int
    SERVER_NAME_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    agent_class: builtins.str
    server_name: builtins.str
    category: builtins.str
    query: builtins.str
    def __init__(
        self,
        *,
        agent_class: builtins.str = ...,
        server_name: builtins.str = ...,
        category: builtins.str = ...,
        query: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["agent_class", b"agent_class", "category", b"category", "query", b"query", "server_name", b"server_name"]) -> None: ...

global___RunAgentCommand = RunAgentCommand

@typing.final
class KnowledgeJob(google.protobuf.message.Message):
    """This represents the input to the knowledge job"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    AUTHOR_FIELD_NUMBER: builtins.int
    id: builtins.str
    """the id for tracking"""
    @property
    def source(self) -> insightproto.proto.common.v1.common_pb2.Source:
        """the integration source this is from (e.g. grafana)"""

    @property
    def project(self) -> global___ProviderProject:
        """if we are a git job then we will contain the project info here"""

    @property
    def author(self) -> global___Author:
        """user who performed the activity - a null or missing user indicates 'system'"""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        source: insightproto.proto.common.v1.common_pb2.Source | None = ...,
        project: global___ProviderProject | None = ...,
        author: global___Author | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_author", b"_author", "_project", b"_project", "author", b"author", "project", b"project", "source", b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_author", b"_author", "_project", b"_project", "author", b"author", "id", b"id", "project", b"project", "source", b"source"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_author", b"_author"]) -> typing.Literal["author"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_project", b"_project"]) -> typing.Literal["project"] | None: ...

global___KnowledgeJob = KnowledgeJob

@typing.final
class AetherJob(google.protobuf.message.Message):
    """AetherJob describes a job for aether to run e.g. a mr review"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    OPERATIONTYPE_FIELD_NUMBER: builtins.int
    ISSUEID_FIELD_NUMBER: builtins.int
    DISCUSSIONID_FIELD_NUMBER: builtins.int
    MERGEREQUESTID_FIELD_NUMBER: builtins.int
    JOBID_FIELD_NUMBER: builtins.int
    NOTEID_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    id: builtins.str
    """the id of the job"""
    OperationType: builtins.str
    """the type of job (e.g. mr review)"""
    IssueId: builtins.str
    """the issue id if available for this job"""
    DiscussionId: builtins.str
    """the discussion id if available for this job"""
    MergeRequestId: builtins.str
    """the mr id  if available for this job"""
    JobId: builtins.str
    """the job id  if available for this job"""
    NoteId: builtins.str
    """the note id  if available for this job"""
    @property
    def project(self) -> global___ProviderProject:
        """the provider (git) project info for the job"""

    @property
    def source(self) -> insightproto.proto.common.v1.common_pb2.Source:
        """the integration source this is from (e.g. grafana)"""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        project: global___ProviderProject | None = ...,
        OperationType: builtins.str = ...,
        IssueId: builtins.str | None = ...,
        DiscussionId: builtins.str | None = ...,
        MergeRequestId: builtins.str | None = ...,
        JobId: builtins.str | None = ...,
        NoteId: builtins.str | None = ...,
        source: insightproto.proto.common.v1.common_pb2.Source | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["DiscussionId", b"DiscussionId", "IssueId", b"IssueId", "JobId", b"JobId", "MergeRequestId", b"MergeRequestId", "NoteId", b"NoteId", "_DiscussionId", b"_DiscussionId", "_IssueId", b"_IssueId", "_JobId", b"_JobId", "_MergeRequestId", b"_MergeRequestId", "_NoteId", b"_NoteId", "project", b"project", "source", b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["DiscussionId", b"DiscussionId", "IssueId", b"IssueId", "JobId", b"JobId", "MergeRequestId", b"MergeRequestId", "NoteId", b"NoteId", "OperationType", b"OperationType", "_DiscussionId", b"_DiscussionId", "_IssueId", b"_IssueId", "_JobId", b"_JobId", "_MergeRequestId", b"_MergeRequestId", "_NoteId", b"_NoteId", "id", b"id", "project", b"project", "source", b"source"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_DiscussionId", b"_DiscussionId"]) -> typing.Literal["DiscussionId"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_IssueId", b"_IssueId"]) -> typing.Literal["IssueId"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_JobId", b"_JobId"]) -> typing.Literal["JobId"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_MergeRequestId", b"_MergeRequestId"]) -> typing.Literal["MergeRequestId"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_NoteId", b"_NoteId"]) -> typing.Literal["NoteId"] | None: ...

global___AetherJob = AetherJob

@typing.final
class ProviderProject(google.protobuf.message.Message):
    """ProviderProject describes the remote project source info, e.g. the gitlab project to use"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROVIDER_FIELD_NUMBER: builtins.int
    DEFAULT_BRANCH_NAME_FIELD_NUMBER: builtins.int
    GIT_URL_FIELD_NUMBER: builtins.int
    id: builtins.str
    """the provider project id to use in the api calls e.g. the gitlab id"""
    name: builtins.str
    """the name of the project"""
    default_branch_name: builtins.str
    """the project default branch name"""
    git_url: builtins.str
    """the https git url for the project"""
    @property
    def provider(self) -> global___Provider:
        """DEPRECATED: use the inline git_url, or source on parent job"""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        provider: global___Provider | None = ...,
        default_branch_name: builtins.str = ...,
        git_url: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["provider", b"provider"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["default_branch_name", b"default_branch_name", "git_url", b"git_url", "id", b"id", "name", b"name", "provider", b"provider"]) -> None: ...

global___ProviderProject = ProviderProject

@typing.final
class Provider(google.protobuf.message.Message):
    """DEPRECATED: Type is deprecated should use Source or inlined properties on ProviderProject"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    GITURL_FIELD_NUMBER: builtins.int
    id: builtins.str
    """DEPRECATED: use source.id on job"""
    source: builtins.str
    """DEPRECATED: use source.name on job"""
    gitUrl: builtins.str
    """DEPRECATED: use git_url on ProviderProject"""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        source: builtins.str = ...,
        gitUrl: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["gitUrl", b"gitUrl", "id", b"id", "source", b"source"]) -> None: ...

global___Provider = Provider

@typing.final
class InsightJob(google.protobuf.message.Message):
    """InsightJob describes a job for insight to investigate"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TRIGGER_FIELD_NUMBER: builtins.int
    id: builtins.str
    """the job id"""
    @property
    def trigger(self) -> global___Trigger:
        """the job trigger"""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        trigger: global___Trigger | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["trigger", b"trigger"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["id", b"id", "trigger", b"trigger"]) -> None: ...

global___InsightJob = InsightJob

@typing.final
class Trigger(google.protobuf.message.Message):
    """Trigger describes where the job has come from (e.g. slack message)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOURCE_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    REFERENCE_ID_FIELD_NUMBER: builtins.int
    AUTHOR_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    CHANNEL_ID_FIELD_NUMBER: builtins.int
    text: builtins.str
    """the text to feed as the initial input to the agent"""
    reference_id: builtins.str
    """the reference id (eg slack/teams/etc message id)"""
    channel_id: builtins.str
    """the channel id (or similar) - e.g. the id of the slack channel that sourced the message"""
    @property
    def source(self) -> insightproto.proto.common.v1.common_pb2.Source:
        """the source type e.g. slack"""

    @property
    def author(self) -> global___Author:
        """the author information (name, id, avatar)"""

    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """the timestamp of the trigger (e.g. the time of the slack message)"""

    def __init__(
        self,
        *,
        source: insightproto.proto.common.v1.common_pb2.Source | None = ...,
        text: builtins.str = ...,
        reference_id: builtins.str | None = ...,
        author: global___Author | None = ...,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        channel_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_channel_id", b"_channel_id", "_reference_id", b"_reference_id", "author", b"author", "channel_id", b"channel_id", "reference_id", b"reference_id", "source", b"source", "timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_channel_id", b"_channel_id", "_reference_id", b"_reference_id", "author", b"author", "channel_id", b"channel_id", "reference_id", b"reference_id", "source", b"source", "text", b"text", "timestamp", b"timestamp"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_channel_id", b"_channel_id"]) -> typing.Literal["channel_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_reference_id", b"_reference_id"]) -> typing.Literal["reference_id"] | None: ...

global___Trigger = Trigger

@typing.final
class Author(google.protobuf.message.Message):
    """Author is the person that authored the trigger"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    AVATAR_FIELD_NUMBER: builtins.int
    name: builtins.str
    """display name of the author"""
    id: builtins.str
    """unique identifier for the author"""
    avatar: builtins.str
    """URL to the author's avatar/profile image"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        id: builtins.str = ...,
        avatar: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["avatar", b"avatar", "id", b"id", "name", b"name"]) -> None: ...

global___Author = Author
