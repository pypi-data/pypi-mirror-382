(()=>{"use strict";var t={d:(e,a)=>{for(var r in a)t.o(a,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:a[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{TextcompConfiguration:()=>h});const a=("undefined"!=typeof window?window:global).MathJax._.components.global,r=(a.GLOBAL,a.isObject,a.combineConfig,a.combineDefaults,a.combineWithMathJax),x=(a.MathJax,MathJax._.input.tex.HandlerTypes),o=x.ConfigurationType,n=x.HandlerType,i=MathJax._.input.tex.Configuration,s=i.Configuration,l=(i.ConfigurationHandler,i.ParserConfiguration,MathJax._.input.tex.TokenMap),c=(l.parseResult,l.AbstractTokenMap,l.RegExpMap,l.AbstractParseMap,l.CharacterMap,l.DelimiterMap,l.MacroMap,l.CommandMap),d=(l.EnvironmentMap,MathJax._.input.tex.TexConstants.TexConstant),p=MathJax._.input.tex.textmacros.TextMacrosMethods.TextMacrosMethods,u=MathJax._.input.tex.ParseUtil,m=(u.KeyValueDef,u.KeyValueTypes,u.ParseUtil),b=MathJax._.input.tex.textmacros.TextParser.TextParser;function g(t,e,a,r){if(t instanceof b){if(!r)return void p.Insert(t,e,a);t.saveText()}t.Push(m.internalText(t,a,r?{mathvariant:r}:{}))}new c("textcomp-macros",{textasciicircum:[g,"^"],textasciitilde:[g,"~"],textasteriskcentered:[g,"*"],textbackslash:[g,"\\"],textbar:[g,"|"],textbraceleft:[g,"{"],textbraceright:[g,"}"],textbullet:[g,"•"],textdagger:[g,"†"],textdaggerdbl:[g,"‡"],textellipsis:[g,"…"],textemdash:[g,"—"],textendash:[g,"–"],textexclamdown:[g,"¡"],textgreater:[g,">"],textless:[g,"<"],textordfeminine:[g,"ª"],textordmasculine:[g,"º"],textparagraph:[g,"¶"],textperiodcentered:[g,"·"],textquestiondown:[g,"¿"],textquotedblleft:[g,"“"],textquotedblright:[g,"”"],textquoteleft:[g,"‘"],textquoteright:[g,"’"],textsection:[g,"§"],textunderscore:[g,"_"],textvisiblespace:[g,"␣"],textacutedbl:[g,"˝"],textasciiacute:[g,"´"],textasciibreve:[g,"˘"],textasciicaron:[g,"ˇ"],textasciidieresis:[g,"¨"],textasciimacron:[g,"¯"],textgravedbl:[g,"˵"],texttildelow:[g,"˷"],textbaht:[g,"฿"],textcent:[g,"¢"],textcolonmonetary:[g,"₡"],textcurrency:[g,"¤"],textdollar:[g,"$"],textdong:[g,"₫"],texteuro:[g,"€"],textflorin:[g,"ƒ"],textguarani:[g,"₲"],textlira:[g,"₤"],textnaira:[g,"₦"],textpeso:[g,"₱"],textsterling:[g,"£"],textwon:[g,"₩"],textyen:[g,"¥"],textcircledP:[g,"℗"],textcompwordmark:[g,"‌"],textcopyleft:[g,"🄯"],textcopyright:[g,"©"],textregistered:[g,"®"],textservicemark:[g,"℠"],texttrademark:[g,"™"],textbardbl:[g,"‖"],textbigcircle:[g,"◯"],textblank:[g,"␢"],textbrokenbar:[g,"¦"],textdiscount:[g,"⁒"],textestimated:[g,"℮"],textinterrobang:[g,"‽"],textinterrobangdown:[g,"⸘"],textmusicalnote:[g,"♪"],textnumero:[g,"№"],textopenbullet:[g,"◦"],textpertenthousand:[g,"‱"],textperthousand:[g,"‰"],textrecipe:[g,"℞"],textreferencemark:[g,"※"],textlangle:[g,"〈"],textrangle:[g,"〉"],textlbrackdbl:[g,"⟦"],textrbrackdbl:[g,"⟧"],textlquill:[g,"⁅"],textrquill:[g,"⁆"],textcelsius:[g,"℃"],textdegree:[g,"°"],textdiv:[g,"÷"],textdownarrow:[g,"↓"],textfractionsolidus:[g,"⁄"],textleftarrow:[g,"←"],textlnot:[g,"¬"],textmho:[g,"℧"],textminus:[g,"−"],textmu:[g,"µ"],textohm:[g,"Ω"],textonehalf:[g,"½"],textonequarter:[g,"¼"],textonesuperior:[g,"¹"],textpm:[g,"±"],textrightarrow:[g,"→"],textsurd:[g,"√"],textthreequarters:[g,"¾"],textthreesuperior:[g,"³"],texttimes:[g,"×"],texttwosuperior:[g,"²"],textuparrow:[g,"↑"],textborn:[g,"*"],textdied:[g,"†"],textdivorced:[g,"⚮"],textmarried:[g,"⚭"],textcentoldstyle:[g,"¢",d.Variant.OLDSTYLE],textdollaroldstyle:[g,"$",d.Variant.OLDSTYLE],textzerooldstyle:[g,"0",d.Variant.OLDSTYLE],textoneoldstyle:[g,"1",d.Variant.OLDSTYLE],texttwooldstyle:[g,"2",d.Variant.OLDSTYLE],textthreeoldstyle:[g,"3",d.Variant.OLDSTYLE],textfouroldstyle:[g,"4",d.Variant.OLDSTYLE],textfiveoldstyle:[g,"5",d.Variant.OLDSTYLE],textsixoldstyle:[g,"6",d.Variant.OLDSTYLE],textsevenoldstyle:[g,"7",d.Variant.OLDSTYLE],texteightoldstyle:[g,"8",d.Variant.OLDSTYLE],textnineoldstyle:[g,"9",d.Variant.OLDSTYLE]}),s.create("text-textcomp",{[o.PARSER]:"text",[o.HANDLER]:{[n.MACRO]:["textcomp-macros"]}});const h=s.create("textcomp",{[o.HANDLER]:{macro:["textcomp-macros"]},config(t,e){const a=e.parseOptions.packageData.get("textmacros");a&&(a.parseOptions.options.textmacros.packages.push("text-textcomp"),a.textConf.add("text-textcomp",e,{}))}});MathJax.loader&&MathJax.loader.checkVersion("[tex]/textcomp","4.0.0","tex-extension"),r({_:{input:{tex:{textcomp:{TextcompConfiguration:e}}}}})})();