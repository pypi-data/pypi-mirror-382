# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  pull_request:
  push:
    branches:
    - main
    - init-repo
    tags:
    - "v*"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] #, windows-latest, macos-latest]
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"

    name: ${{ matrix.os }} - ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-tags: true
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.5.22"
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: pip install tox tox-uv
    - name: Run tox
      # Run tox using the version of Python in `PATH`
      run: tox -e py

  dist:
    if: (github.ref_name == 'main')
    runs-on: ubuntu-latest
    needs: [test]
    name: Build Python packages
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-tags: true
    - uses: actions/setup-python@v6
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade wheel setuptools build
    - name: Build package
      run: python -m build -s -w -o dist/
    - uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist

  dist_check:
    runs-on: ubuntu-latest
    needs: [dist]
    name: Twine check
    steps:
    - uses: actions/setup-python@v6
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: pip install twine
    - uses: actions/download-artifact@v5
      with:
        name: dist
        path: dist
    - run: twine check dist/*

  dist_upload:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [dist_check]
    name: PyPI upload
    permissions:
      id-token: write
    steps:
    - uses: actions/download-artifact@v5
      with:
        name: dist
        path: dist
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
