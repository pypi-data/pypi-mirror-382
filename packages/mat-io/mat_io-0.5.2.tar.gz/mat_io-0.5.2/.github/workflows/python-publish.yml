# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [created]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel build twine

      - name: Build wheels
        run: cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp311-* cp312-* cp313-*"

      - name: Build sdist
        if: matrix.os == 'ubuntu-latest'
        run: python -m build --sdist --outdir dist

      - name: Check distributions
        run: twine check dist/*

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists-${{ matrix.os }}
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      url: https://pypi.org/project/mat-io

    steps:
      - name: Retrieve release distributions (Linux)
        uses: actions/download-artifact@v4
        with:
          name: release-dists-ubuntu-latest
          path: dist/

      - name: Retrieve release distributions (Windows)
        uses: actions/download-artifact@v4
        with:
          name: release-dists-windows-latest
          path: dist/

      - name: Retrieve release distributions (macOS)
        uses: actions/download-artifact@v4
        with:
          name: release-dists-macos-latest
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
