# Template Forge Configuration for YAML Example
# This example demonstrates comprehensive YAML parsing capabilities

template_dir: "."

inputs:
  - path: "app-config.yaml"
    namespace: "cfg"  # Configuration data under 'cfg' namespace
    tokens:
      # Basic values
      - name: "app_name"
        key: "application.name"
      - name: "app_version"
        key: "application.version"
      - name: "app_description"
        key: "application.description"
        
      # Array extraction - features list
      - name: "features"
        key: "application.features"
        
      # Nested object extraction - entire database config
      - name: "database_config"
        key: "application.database"
        
      # Specific nested values
      - name: "primary_db_host"
        key: "application.database.primary.host"
      - name: "api_port"
        key: "application.services.api.port"
      - name: "worker_concurrency"
        key: "application.services.worker.concurrency"
        
      # Environment-specific arrays
      - name: "dev_external_apis"
        key: "environments.development.external_apis"
      - name: "prod_external_apis"
        key: "environments.production.external_apis"
        
      # Entire environments object
      - name: "all_environments"
        key: "environments"
        
      # Infrastructure settings
      - name: "provider"
        key: "deployment.infrastructure.provider"
      - name: "region"
        key: "deployment.infrastructure.region"
      - name: "scaling_config"
        key: "deployment.scaling"
        
      # Monitoring metrics array
      - name: "monitoring_metrics"
        key: "deployment.monitoring.metrics"

static_tokens:
  company: "ACME Corporation"
  generated_date: "2025-09-15"
  generator: "Template Forge"

templates:
  - template: "app-summary.md.j2"
    output: "../../output/app-summary.md"
  - template: "config-validation.py.j2"
    output: "../../output/config_validator.py"