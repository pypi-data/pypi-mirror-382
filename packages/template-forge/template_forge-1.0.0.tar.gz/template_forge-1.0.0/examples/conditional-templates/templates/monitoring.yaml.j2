# Monitoring Configuration for {{ app.name }}
# This file is conditionally generated when monitoring is enabled
# Generated by: {{ generator }} on {{ generated_date }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ app.name }}-monitoring-config
  labels:
    app: {{ app.name }}
    component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    scrape_configs:
      - job_name: '{{ app.name }}'
        static_configs:
          - targets: ['localhost:8001']
        metrics_path: '/metrics'
    
    # @PRESERVE_START custom_prometheus_jobs
    # Add custom Prometheus scrape jobs here
    # @PRESERVE_END custom_prometheus_jobs
  
  metrics.yaml: |
    # Application metrics configuration
    metrics:
      {% for metric in app.monitoring.metrics %}
      - name: {{ metric }}
        type: {{ 'counter' if 'count' in metric else ('histogram' if 'time' in metric else 'gauge') }}
        description: "{{ metric | replace('_', ' ') | title }}"
      {% endfor %}
    
    # @PRESERVE_START custom_metrics
    # Add custom metrics configuration here
    # @PRESERVE_END custom_metrics
  
  alerts.yaml: |
    # Alerting rules
    groups:
      - name: {{ app.name }}_alerts
        rules:
          - alert: HighErrorRate
            expr: rate(error_rate[5m]) > 0.05
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High error rate detected"
              description: "Error rate is above 5% for 5 minutes"
          
          - alert: SlowResponseTime
            expr: response_time > 1.0
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Slow response time"
              description: "Average response time is above 1 second"
          
          # @PRESERVE_START custom_alerts
          # Add custom alerting rules here
          # @PRESERVE_END custom_alerts

---
apiVersion: v1
kind: Service
metadata:
  name: {{ app.name }}-metrics
  labels:
    app: {{ app.name }}
    component: monitoring
spec:
  type: ClusterIP
  ports:
    - port: 8001
      targetPort: 8001
      name: metrics
  selector:
    app: {{ app.name }}
