# Docker Compose Configuration for {{ app.name }}
# This file is conditionally generated when deployment_type == 'docker'
# Generated by: {{ generator }} on {{ generated_date }}

version: '3.8'

services:
  app:
    image: {{ deployment.docker.base_image }}
    container_name: {{ app.name }}-app
    ports:
      {% for port in deployment.docker.ports %}
      - "{{ port }}"
      {% endfor %}
    
    environment:
      - APP_NAME={{ app.name }}
      - APP_VERSION={{ app.version }}
      - ENVIRONMENT={{ app.environment }}
      - DEBUG_MODE={{ app.debug_mode | string | lower }}
      {% if app.database %}
      - DB_HOST={{ app.database.host }}
      - DB_PORT={{ app.database.port }}
      - DB_NAME={{ app.database.name }}
      {% endif %}
      {% if app.caching.enabled and app.caching.backend == "redis" %}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      {% endif %}
    
    volumes:
      - ./app:/app
      - ./data:/app/data
      - ./logs:/app/logs
    
    depends_on:
      {% if app.database.type == "postgresql" %}
      - db
      {% endif %}
      {% if app.caching.enabled and app.caching.backend == "redis" %}
      - redis
      {% endif %}
    
    networks:
      - app-network
    
    restart: unless-stopped
  
  {% if app.database.type == "postgresql" %}
  db:
    image: postgres:15-alpine
    container_name: {{ app.name }}-db
    environment:
      - POSTGRES_DB={{ app.database.name }}
      - POSTGRES_USER=app_user
      - POSTGRES_PASSWORD=change_me_in_production
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped
  {% endif %}
  
  {% if app.caching.enabled and app.caching.backend == "redis" %}
  redis:
    image: redis:7-alpine
    container_name: {{ app.name }}-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped
  {% endif %}
  
  {% if app.monitoring.metrics_enabled %}
  prometheus:
    image: prom/prometheus:latest
    container_name: {{ app.name }}-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - app-network
    restart: unless-stopped
  
  grafana:
    image: grafana/grafana:latest
    container_name: {{ app.name }}-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - app-network
    restart: unless-stopped
  {% endif %}

networks:
  app-network:
    driver: bridge

volumes:
  {% if app.database.type == "postgresql" %}
  postgres-data:
  {% endif %}
  {% if app.caching.enabled and app.caching.backend == "redis" %}
  redis-data:
  {% endif %}
  {% if app.monitoring.metrics_enabled %}
  prometheus-data:
  grafana-data:
  {% endif %}

# @PRESERVE_START custom_services
# Add custom Docker services here
# @PRESERVE_END custom_services
