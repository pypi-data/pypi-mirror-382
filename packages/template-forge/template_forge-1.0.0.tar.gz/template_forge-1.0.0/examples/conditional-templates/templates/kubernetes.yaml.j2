# Kubernetes Deployment Configuration for {{ app.name }}
# This file is conditionally generated when deployment_type == 'kubernetes'
# Generated by: {{ generator }} on {{ generated_date }}

apiVersion: v1
kind: Namespace
metadata:
  name: {{ deployment.kubernetes.namespace }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ app.name }}-deployment
  namespace: {{ deployment.kubernetes.namespace }}
  labels:
    app: {{ app.name }}
    version: "{{ app.version }}"
    environment: {{ app.environment }}
spec:
  replicas: {{ deployment.kubernetes.replicas }}
  selector:
    matchLabels:
      app: {{ app.name }}
  template:
    metadata:
      labels:
        app: {{ app.name }}
        version: "{{ app.version }}"
    spec:
      containers:
      - name: {{ app.name }}
        image: {{ app.name }}:{{ app.version }}
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 8001
          name: metrics
        
        env:
        - name: APP_NAME
          value: "{{ app.name }}"
        - name: APP_VERSION
          value: "{{ app.version }}"
        - name: ENVIRONMENT
          value: "{{ app.environment }}"
        - name: DEBUG_MODE
          value: "{{ app.debug_mode | string | lower }}"
        {% if app.database %}
        - name: DB_HOST
          value: "{{ app.database.host }}"
        - name: DB_PORT
          value: "{{ app.database.port }}"
        - name: DB_NAME
          value: "{{ app.database.name }}"
        {% endif %}
        
        resources:
          requests:
            memory: "{{ deployment.kubernetes.resources.requests.memory }}"
            cpu: "{{ deployment.kubernetes.resources.requests.cpu }}"
          limits:
            memory: "{{ deployment.kubernetes.resources.limits.memory }}"
            cpu: "{{ deployment.kubernetes.resources.limits.cpu }}"
        
        livenessProbe:
          httpGet:
            path: {{ deployment.kubernetes.health_check.path }}
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: {{ deployment.kubernetes.health_check.interval }}
          timeoutSeconds: {{ deployment.kubernetes.health_check.timeout }}
        
        readinessProbe:
          httpGet:
            path: {{ deployment.kubernetes.health_check.path }}
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: {{ deployment.kubernetes.health_check.interval }}
          timeoutSeconds: {{ deployment.kubernetes.health_check.timeout }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ app.name }}-service
  namespace: {{ deployment.kubernetes.namespace }}
spec:
  type: LoadBalancer
  selector:
    app: {{ app.name }}
  ports:
  - name: http
    port: 80
    targetPort: 8000
  - name: metrics
    port: 8001
    targetPort: 8001

---
{% if app.monitoring.metrics_enabled %}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ app.name }}-monitoring
  namespace: {{ deployment.kubernetes.namespace }}
data:
  metrics.yaml: |
    metrics:
      {% for metric in app.monitoring.metrics %}
      - {{ metric }}
      {% endfor %}
{% endif %}

# @PRESERVE_START custom_k8s_resources
# Add custom Kubernetes resources here (ConfigMaps, Secrets, etc.)
# @PRESERVE_END custom_k8s_resources
