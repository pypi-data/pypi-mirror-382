# changes: in_standstill â†’ velocity_below_five

# Traffic rules formalized in metric temporal logic (MTL)
###
# .. code-block:: yaml
#
#   - R_G1: safe distance preceding, considering cut-in vehicles
#   - R_G2: unnecessary braking only if safe distance is violated
#   - R_G3: speed limit
meta_predicates:
  $slow_leading_vehicle(a0)_x: "E a99: (slow_as_leading_vehicle(a99)_x and in_same_lane(a0, a99)_x and in_front_of(a0, a99)_x)"
  $exist_standing_leading_vehicle(a0)_x: "E a99: (in_same_lane(a0, a99)_x and in_front_of(a0, a99)_x and velocity_below_five(a99)_x)"
  $in_congestion(a0)_x: "exists_multiple[3] a99: (in_same_lane(a0, a99)_x and in_front_of(a0, a99)_x and has_congestion_velocity(a99)_x)"
  $in_slow_moving_traffic(a0)_x: "exists_multiple[3] a99: (in_front_of(a0, a99)_x and in_same_lane(a0, a99)_x and has_slow_moving_velocity(a99)_x)"
  $in_queue_of_vehicles(a0)_x: "exists_multiple[3] a99: (in_front_of(a0, a99)_x and in_same_lane(a0, a99)_x and has_queue_velocity(a99)_x)"
  $precedes(a0, a1)_x: "in_same_lane(a0, a1)_x and in_front_of(a0, a1)_x and (not(E a99: (in_same_lane(a0, a99)_x and in_front_of(a0, a99)_x and in_front_of(a99, a1)_x)))"
  $drives_leftmost(a0)_x: "close_to_left_bound(a0)_x or (E a99: ($close_to_vehicle_left(a0, a99)_x))"
  $drives_rightmost(a0)_x: "close_to_right_bound(a0)_x or (E a99: ($close_to_vehicle_right(a0, a99)_x))"
  $cut_in(a0, a1)_x: "not single_lane(a0)_x and ($approach_from_left(a0, a1)_x or $approach_from_right(a0, a1)_x) and in_same_lane(a0, a1)_x"  # a0 is the cutting, a1 the cutted vehicle
  $approach_from_left(a0, a1)_x: "lat_left_of(a0, a1)_x and heading_right(a0)_x"  # a0 approaches a1
  $approach_from_right(a0, a1)_x: "not lat_left_of(a0, a1)_x and not heading_right(a0)_x"  # a0 approaches a1
  $left_of(a0, a1)_x: "lat_left_of_vehicle(a0, a1)_x and $lon_intersecting_vehicles(a0, a1)_x"  # a0 is left of a1
  $lon_intersecting_vehicles(a0, a1)_x: "rear_behind_front(a0, a1)_x and rear_behind_front(a1, a0)_x"
  $close_to_vehicle_left(a0, a1)_x: "lat_close_to_vehicle_left(a0, a1)_x and $lon_intersecting_vehicles(a0, a1)_x"  # a0 is the right, a1 the left vehicle
  $close_to_vehicle_right(a0, a1)_x: "lat_close_to_vehicle_right(a0, a1)_x and $lon_intersecting_vehicles(a0, a1)_x"  # a0 is the left, a1 the right vehicle


traffic_rules:
  R_G1: 'A a1: ((in_front_of(a0,a1) and in_same_lane(a0,a1) and !once[0, 3s]($cut_in(a1,a0) and prev(not $cut_in(a1,a0)_i)) ) implies keeps_safe_distance_prec(a0,a1))'
  R_G2: 'brakes_abruptly(a0) implies E a1: ($precedes(a0, a1) and (not keeps_safe_distance_prec(a0, a1) or not brakes_abruptly_relative(a0, a1)))'
  R_G3: keeps_lane_speed_limit(a0) and keeps_type_speed_limit(a0) and keeps_fov_speed_limit(a0) and keeps_brake_speed_limit(a0)
  R_G4: not $slow_leading_vehicle(a0) implies preserves_traffic_flow(a0)

  R_I1: not($in_congestion(a0) or $exist_standing_leading_vehicle(a0)_i) implies not velocity_below_five(a0)
  R_I2: 'A a1: ($left_of(a1,a0) and drives_faster(a0, a1) implies (($in_congestion(a1) or $in_slow_moving_traffic(a1) or $in_queue_of_vehicles(a1)) and drives_with_slightly_higher_speed(a0, a1)))'
  R_I3: not makes_u_turn(a0) and not reverses(a0)
  R_I4: $in_congestion(a0) or $in_slow_moving_traffic(a0) implies (interstate_broad_enough(a0) implies not on_shoulder(a0) and (in_leftmost_lane(a0) implies $drives_leftmost(a0) and single_lane(a0)) and (not in_leftmost_lane(a0) implies $drives_rightmost(a0))) and (not interstate_broad_enough(a0) implies $drives_rightmost(a0) and in_rightmost_lane(a0) and single_lane(a0))
  R_I5: 'A a1: ((on_main_carriage_way(a0) and in_front_of(a0, a1) and on_access_ramp(a1) and eventually[0, 5s](on_main_carriage_way(a1)_i)) implies (not(not(main_carriageway_right_lane(a0)) and eventually[0, 5s](main_carriageway_right_lane(a0)))))'
    # Wait at traffic light with turn on red exception
  R_IN2_TOR: (once (not (prev not sl_in_front(a0)_i)) and (not sl_in_front(a0)_i) and on_intersection(a0)_i and tl_red(a0)_i) implies (on_right_turn(a0) or (not on_intersection(a0)))
    # RTAMT implements the weak previous operator, which has value inf at time step 0.
    # Using "not (weak) prev not A <=> (strong) prev A" we can rewrite the formula using only the weak prev operator.
    # Stop sign rule translated to past-time
  R_IN1_past: ((not prev not sl_in_front(a0)_i) and (not sl_in_front(a0)_i)) implies once(historically[0, 3s](sl_in_front(a0) and velocity_below_five(a0)))
  R_IN1: "(
              (not prev (not (stop_line_in_front(a0)_i))) and
              (not stop_line_in_front(a0)_i) and
              at_traffic_sign_stop(a0)_i and
              (not relevant_traffic_light(a0)_i)) implies
              once(historically[0, 3s](stop_line_in_front(a0)_i and velocity_below_five(a0)_i))"


  R_IN3: "A a1: (
                  (
                    on_incoming_left_of(a0, a1) and
                    not(relevant_traffic_light(a0)) and
                    (
                      turning_right_ego_turning_right_target_same_priority(a0, a1) or
                      turning_right_ego_turning_left_target_same_priority(a0, a1) or
                      turning_right_ego_going_straight_target_same_priority(a0, a1) or
                      turning_left_ego_turning_right_target_same_priority(a0, a1) or
                      turning_left_ego_turning_left_target_same_priority(a0, a1) or
                      turning_left_ego_going_straight_target_same_priority(a0, a1) or
                      going_straight_ego_turning_right_target_same_priority(a0, a1) or
                      going_straight_ego_turning_left_target_same_priority(a0, a1) or
                      going_straight_ego_going_straight_target_same_priority(a0, a1)
                    )
                  ) implies
                  (
                      (
                        (
                        (in_intersection_conflict_area(a0, a1)) implies
                          (
                            not(causes_braking_intersection(a0, a1)) and
                            not(eventually[0,1s](in_intersection_conflict_area(a0, a1)))
                          )
                        ) and
                        (
                          (in_intersection_conflict_area(a0, a1)) implies
                          not (eventually[0,0.52s](in_intersection_conflict_area(a0, a1)))
                        )
                      )or
                    not(on_lanelet_with_type_intersection(a0))
                  )
                 )"

# Since inD dataset has no RIN3 violation. We create a scenario using Crdesigner. The time step size is 0.1s not 0.04s
  R_IN3_hand_draft: "A a1: (
                    (
                      on_incoming_left_of(a0, a1) and
                      not(relevant_traffic_light(a0)) and
                      (
                        turning_right_ego_turning_right_target_same_priority(a0, a1) or
                        turning_right_ego_turning_left_target_same_priority(a0, a1) or
                        turning_right_ego_going_straight_target_same_priority(a0, a1) or
                        turning_left_ego_turning_right_target_same_priority(a0, a1) or
                        turning_left_ego_turning_left_target_same_priority(a0, a1) or
                        turning_left_ego_going_straight_target_same_priority(a0, a1) or
                        going_straight_ego_turning_right_target_same_priority(a0, a1) or
                        going_straight_ego_turning_left_target_same_priority(a0, a1) or
                        going_straight_ego_going_straight_target_same_priority(a0, a1)
                      )
                    ) implies
                    (
                        (
                          (
                          (in_intersection_conflict_area(a0, a1)) implies
                            (
                              not(causes_braking_intersection(a0, a1)) and
                              not(eventually[0,1s](in_intersection_conflict_area(a0, a1)))
                            )
                          ) and
                          (
                            (in_intersection_conflict_area(a0, a1)) implies
                            not (eventually[0,1s](in_intersection_conflict_area(a0, a1)))
                          )
                        )or
                      not(on_lanelet_with_type_intersection(a0))
                    )
                   )"

  R_IN4: "A a1: (
                  (
                    turning_right_target_turning_right_ego_target_has_priority(a0, a1) or
                    turning_right_target_turning_left_ego_target_has_priority_not_oncoming(a0, a1) or
                    turning_right_target_going_straight_ego_target_has_priority(a0, a1) or
                    going_straight_target_turning_right_ego_target_has_priority(a0, a1) or
                    going_straight_target_turning_left_ego_target_has_priority_not_oncoming(a0, a1) or
                    going_straight_target_going_straight_ego_target_has_priority(a0, a1) or
                    turning_left_target_turning_left_ego_target_has_priority(a0, a1) or
                    turning_left_target_turning_right_ego_target_has_priority(a0, a1) or
                    turning_left_target_going_straight_ego_target_has_priority(a0, a1)
                  ) implies
                  (
                    (
                      (
                        (in_intersection_conflict_area(a0, a1)) implies
                        (
                          not(causes_braking_intersection(a0, a1))
                          and not(eventually[0,1s](in_intersection_conflict_area(a1, a0)))
                        )
                      ) and
                      (
                        (in_intersection_conflict_area(a1, a0)) implies
                        not(eventually[0,0.6s](in_intersection_conflict_area(a0, a1)))
                      )
                    )or not(on_lanelet_with_type_intersection(a0))
                  )
                )"

  R_IN5: "A a1: (
                  (
                    turning_right_target_turning_left_ego_target_has_priority_oncoming(a0, a1) or
                    going_straight_target_turning_left_ego_target_has_priority_oncoming(a0, a1)
                  ) implies
                  (
                    (
                      (
                        (in_intersection_conflict_area(a0, a1)) implies
                        (
                          not(causes_braking_intersection(a0, a1))
                          and not(eventually[0,1s](in_intersection_conflict_area(a1, a0)))
                        )
                      ) and
                      (
                        (in_intersection_conflict_area(a1, a0)) implies
                        not(eventually[0,0.52s](in_intersection_conflict_area(a0, a1)))
                      )
                    )or not(on_lanelet_with_type_intersection(a0))
                  )
                )"
# Parameters for traffic rules
###
# .. code-block:: yaml
#
#   - a_abrupt: acceleration difference which indicates abrupt braking
#   - min_velocity_dif: minimum velocity difference
#   - standstill_error: velocity deviation from zero which is still classified to be standstill
#   - num_veh_congestion: minimum number of slow-moving leading vehicles so that a vehicle can be assumed to be part of a congestion
#   - max_congestion_velocity: maximum velocity of a vehicle withing a congestion
#   - max_velocity_limit_free_driving:
#   - desired_interstate_velocity: desired velocity on interstates
#   - min_interstate_width: minimum interstate width so that emergency lane can be created
#   - close_to_lane_border:  indicator if vehicle is close to lane border
#   - slightly_higher_speed_difference:  indicator for slightly higher speed
#   - u_turn: angle [rad] indicating u-turn
#   - country: countries where traffic rules are applied
traffic_rules_param:
  j_abrupt: -2 # for ego vehicle emergency profile calculation
  a_abrupt: -2
  standstill_error: 0.01
  min_velocity_dif: 15
  num_veh_congestion: 3
  max_congestion_velocity: 2.78
  num_veh_slow_moving_traffic: 3
  max_slow_moving_traffic_velocity: 8.33
  num_veh_queue_of_vehicles: 3
  max_queue_of_vehicles_velocity: 16.67
  max_velocity_limit_free_driving: 16.67  # not defined in Maierhofer paper
  desired_interstate_velocity: 36.11  # slightly different from Maierhofer paper
  min_interstate_width: 7.0
  close_to_lane_border: 0.2  # Maierhofer paper: 0.1
  close_to_other_vehicle: 0.5  # Maierhofer paper: 0.75
  slightly_higher_speed_difference: 5.55
  u_turn: 1.57
  country: DEU
  above_centerline_th: 0.1  # not defined in Maierhofer paper
  max_interstate_speed_truck: 22.22

  #parameters from intersection paper
  t_iB: 1.0
  d_sl: 1.0
  a_br: -1.0
  z_ia: 0.5
  d_br: 15.0
  a_pos: -4.0
  t_slw: 3.0
  v_err: 0.1

  #mpr
  use_mpr: false
  mpr_scenario: interstate # interstate or intersection
