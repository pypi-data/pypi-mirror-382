[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "apigatewaybuilder"
version = "1.4.1"
description = "Framework-agnostic API Gateway with validation, auth, and rate limiting"
readme = "README.md"
authors = [{ name = "PrabhBirJ" }]
license = { text = "MIT" }
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django",
    "Framework :: Flask",
    "Framework :: FastAPI",
]
keywords = ["api", "gateway", "validation", "authorization", "rate-limiting"]


dependencies = [
    "pydantic>=2.11.0",
    "pyjwt>=2.8.0",
]

[project.optional-dependencies]

flask = [
    "flask>=3.0.0",
    "flask-cors>=4.0.0",
]

django = [
    "django>=4.2.0",
]

fastapi = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.25.0",
]

# Backend extras
redis = [
    "redis>=5.0.0",
]

# Combined convenience extras
all = [
    "apigateway[flask,django,fastapi,redis]",
]


dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-django>=4.8.0",
    "httpx>=0.25.0",  # For testing HTTP clients
    "black>=24.0.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
]


test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-django>=4.8.0",
    "httpx>=0.25.0",
]

[project.urls]
Homepage = "https://github.com/PrabhBirJ/apigateway"
Documentation = "https://github.com/PrabhBirJ/apigateway#readme"
Repository = "https://github.com/PrabhBirJ/apigateway"
Issues = "https://github.com/PrabhBirJ/apigateway/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
apigateway = ["py.typed"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-v --tb=short --strict-markers"
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"
markers = [
    "integration: Integration tests",
    "unit: Unit tests",
    "flask: Flask-specific tests",
    "django: Django-specific tests", 
    "fastapi: FastAPI-specific tests",
]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true