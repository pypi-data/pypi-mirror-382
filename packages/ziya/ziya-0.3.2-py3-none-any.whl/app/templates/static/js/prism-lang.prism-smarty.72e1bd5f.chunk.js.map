{"version":3,"file":"static/js/prism-lang.prism-smarty.72e1bd5f.chunk.js","mappings":"qFAAC,SAAUA,GAEVA,EAAMC,UAAUC,OAAS,CACxB,QAAW,CACVC,QAAS,oBACTC,QAAQ,GAET,eAAgB,CACfD,QAAS,4BACTC,QAAQ,EACRC,OAAQ,CACP,OAAU,CACTF,QAAS,sBACTE,OAAQ,MAET,IAAO,CACNF,QAAS,UACTG,MAAO,eACPD,OAAQL,EAAMC,UAAUM,OAI3B,OAAU,CACT,CACCJ,QAAS,wBACTC,QAAQ,EACRC,OAAQ,CACP,cAAiB,CAChBF,QAAS,qBACTE,OAAQ,CACP,4BAA6B,CAC5BF,QAAS,cACTG,MAAO,eAER,WAAc,CACbH,QAAS,UACTE,OAAQ,QAIX,SAAY,UAGd,CACCF,QAAS,wBACTC,QAAQ,IAGV,QAAW,CACVD,QAAS,6BACTK,YAAY,EACZJ,QAAQ,GAET,UAAa,CACZD,QAAS,aACTC,QAAQ,EACRE,MAAO,eAER,OAAU,+DACV,SAAY,CACX,cACA,cACA,CACCH,QAAS,kCACTK,YAAY,GAEb,CACCL,QAAS,sBACTK,YAAY,IAGd,SAAY,CACXL,QAAS,wCACTK,YAAY,GAEb,YAAa,uBACb,QAAW,mCACX,YAAe,oBACf,SAAY,CACX,mCACA,iDACA,mDAIFR,EAAMC,UAAUC,OAAO,gBAAgBG,OAAOH,OAAOG,OAASL,EAAMC,UAAUC,OAC9EF,EAAMC,UAAUC,OAAOO,OAAO,GAAGJ,OAAOK,cAAcL,OAAOM,WAAWN,OAASL,EAAMC,UAAUC,OAEjG,IAAIO,EAAS,8CACTG,EAAgBC,OAEnB,mBAAmBC,OACnB,IAEA,2BAA2BA,OAC3B,IAEA,uEAAuEA,OACrEC,QAAQ,UAAU,WAAc,OAAON,EAAOK,MAAQ,IACxD,KAIDd,EAAMgB,MAAMC,IAAI,mBAAmB,SAAUC,GAC5C,IAEIC,GAAoB,EAExBnB,EAAMC,UAAU,qBAAqBmB,kBAAkBF,EAAK,SAAUN,GAAe,SAAUS,GAM9F,MATsB,eAKlBA,IACHF,GAAoB,IAGhBA,IAVmB,cAWnBE,IACHF,GAAoB,IAGd,EAGT,GACD,IAGAnB,EAAMgB,MAAMC,IAAI,kBAAkB,SAAUC,GAC3ClB,EAAMC,UAAU,qBAAqBqB,qBAAqBJ,EAAK,SAChE,GAEA,CAlIA,CAkIClB,M","sources":["../node_modules/prismjs/components/prism-smarty.js"],"sourcesContent":["(function (Prism) {\n\n\tPrism.languages.smarty = {\n\t\t'comment': {\n\t\t\tpattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'embedded-php': {\n\t\t\tpattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'smarty': {\n\t\t\t\t\tpattern: /^\\{php\\}|\\{\\/php\\}$/,\n\t\t\t\t\tinside: null // see below\n\t\t\t\t},\n\t\t\t\t'php': {\n\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\talias: 'language-php',\n\t\t\t\t\tinside: Prism.languages.php\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'string': [\n\t\t\t{\n\t\t\t\tpattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': {\n\t\t\t\t\t\tpattern: /\\{[^{}]*\\}|`[^`]*`/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\t\t\tpattern: /^[{`]|[`}]$/,\n\t\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'expression': {\n\t\t\t\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\t\t\t\tinside: null // see below\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'variable': /\\$\\w+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t],\n\t\t'keyword': {\n\t\t\tpattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'delimiter': {\n\t\t\tpattern: /^\\{\\/?|\\}$/,\n\t\t\tgreedy: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'number': /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n\t\t'variable': [\n\t\t\t/\\$(?!\\d)\\w+/,\n\t\t\t/#(?!\\d)\\w+#/,\n\t\t\t{\n\t\t\t\tpattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'function': {\n\t\t\tpattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'attr-name': /\\b[a-z_]\\w*(?=\\s*=)/i,\n\t\t'boolean': /\\b(?:false|no|off|on|true|yes)\\b/,\n\t\t'punctuation': /[\\[\\](){}.,:`]|->/,\n\t\t'operator': [\n\t\t\t/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n\t\t\t/\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n\t\t\t/\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/\n\t\t]\n\t};\n\n\tPrism.languages.smarty['embedded-php'].inside.smarty.inside = Prism.languages.smarty;\n\tPrism.languages.smarty.string[0].inside.interpolation.inside.expression.inside = Prism.languages.smarty;\n\n\tvar string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/;\n\tvar smartyPattern = RegExp(\n\t\t// comments\n\t\t/\\{\\*[\\s\\S]*?\\*\\}/.source +\n\t\t'|' +\n\t\t// php tags\n\t\t/\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source +\n\t\t'|' +\n\t\t// smarty blocks\n\t\t/\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source\n\t\t\t.replace(/<str>/g, function () { return string.source; }),\n\t\t'g'\n\t);\n\n\t// Tokenize all inline Smarty expressions\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tvar smartyLiteralStart = '{literal}';\n\t\tvar smartyLiteralEnd = '{/literal}';\n\t\tvar smartyLiteralMode = false;\n\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'smarty', smartyPattern, function (match) {\n\t\t\t// Smarty tags inside {literal} block are ignored\n\t\t\tif (match === smartyLiteralEnd) {\n\t\t\t\tsmartyLiteralMode = false;\n\t\t\t}\n\n\t\t\tif (!smartyLiteralMode) {\n\t\t\t\tif (match === smartyLiteralStart) {\n\t\t\t\t\tsmartyLiteralMode = true;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t});\n\n\t// Re-insert the tokens after tokenizing\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty');\n\t});\n\n}(Prism));\n"],"names":["Prism","languages","smarty","pattern","greedy","inside","alias","php","lookbehind","string","interpolation","expression","smartyPattern","RegExp","source","replace","hooks","add","env","smartyLiteralMode","buildPlaceholders","match","tokenizePlaceholders"],"sourceRoot":""}