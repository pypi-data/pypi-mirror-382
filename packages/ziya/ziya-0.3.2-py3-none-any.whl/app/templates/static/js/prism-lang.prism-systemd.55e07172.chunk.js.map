{"version":3,"file":"static/js/prism-lang.prism-systemd.55e07172.chunk.js","mappings":"qFAEC,SAAUA,GAEV,IAAIC,EAAU,CACbC,QAAS,WACTC,QAAQ,GAGLC,EAAe,4CAA4CC,OAE/DL,EAAMM,UAAUC,QAAU,CACzB,QAAWN,EAEX,QAAW,CACVC,QAAS,gCACTC,QAAQ,EACRK,OAAQ,CACP,YAAe,UACf,eAAgB,CACfN,QAAS,UACTO,MAAO,cAKV,IAAO,CACNP,QAAS,uBACTC,QAAQ,EACRM,MAAO,aAER,MAAS,CAMRP,QAASQ,OACR,kBAAkBL,OAElB,MAAQD,EAFR,oBAKC,UAAUC,OAAV,wBAE+BD,EAF/B,KAIM,sCAAsCC,OAE7C,MAEDM,YAAY,EACZR,QAAQ,EACRM,MAAO,aACPD,OAAQ,CACP,QAAWP,EACX,OAAU,CACTC,QAASQ,OAAO,SAASL,OAASD,GAClCO,YAAY,EACZR,QAAQ,GAET,YAAe,OAEf,QAAW,CACVD,QAAS,iCACTC,QAAQ,KAKX,YAAe,IAGhB,CAvEA,CAuECH,M","sources":["../node_modules/prismjs/components/prism-systemd.js"],"sourcesContent":["// https://www.freedesktop.org/software/systemd/man/systemd.syntax.html\n\n(function (Prism) {\n\n\tvar comment = {\n\t\tpattern: /^[;#].*/m,\n\t\tgreedy: true\n\t};\n\n\tvar quotesSource = /\"(?:[^\\r\\n\"\\\\]|\\\\(?:[^\\r]|\\r\\n?))*\"(?!\\S)/.source;\n\n\tPrism.languages.systemd = {\n\t\t'comment': comment,\n\n\t\t'section': {\n\t\t\tpattern: /^\\[[^\\n\\r\\[\\]]*\\](?=[ \\t]*$)/m,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\[|\\]$/,\n\t\t\t\t'section-name': {\n\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\n\t\t'key': {\n\t\t\tpattern: /^[^\\s=]+(?=[ \\t]*=)/m,\n\t\t\tgreedy: true,\n\t\t\talias: 'attr-name'\n\t\t},\n\t\t'value': {\n\t\t\t// This pattern is quite complex because of two properties:\n\t\t\t//  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to \"resolve\"\n\t\t\t//     the lookbehind. You will see this in the main loop where spaces are handled separately.\n\t\t\t//  2) Line continuations.\n\t\t\t//     After line continuations, empty lines and comments are ignored so we have to consume them.\n\t\t\tpattern: RegExp(\n\t\t\t\t/(=[ \\t]*(?!\\s))/.source +\n\t\t\t\t// the value either starts with quotes or not\n\t\t\t\t'(?:' + quotesSource + '|(?=[^\"\\r\\n]))' +\n\t\t\t\t// main loop\n\t\t\t\t'(?:' + (\n\t\t\t\t\t/[^\\s\\\\]/.source +\n\t\t\t\t\t// handle spaces separately because of quotes\n\t\t\t\t\t'|' + '[ \\t]+(?:(?![ \\t\"])|' + quotesSource + ')' +\n\t\t\t\t\t// line continuation\n\t\t\t\t\t'|' + /\\\\[\\r\\n]+(?:[#;].*[\\r\\n]+)*(?![#;])/.source\n\t\t\t\t) +\n\t\t\t\t')*'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'attr-value',\n\t\t\tinside: {\n\t\t\t\t'comment': comment,\n\t\t\t\t'quoted': {\n\t\t\t\t\tpattern: RegExp(/(^|\\s)/.source + quotesSource),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\\\$/m,\n\n\t\t\t\t'boolean': {\n\t\t\t\t\tpattern: /^(?:false|no|off|on|true|yes)$/,\n\t\t\t\t\tgreedy: true\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t'punctuation': /=/\n\t};\n\n}(Prism));\n"],"names":["Prism","comment","pattern","greedy","quotesSource","source","languages","systemd","inside","alias","RegExp","lookbehind"],"sourceRoot":""}