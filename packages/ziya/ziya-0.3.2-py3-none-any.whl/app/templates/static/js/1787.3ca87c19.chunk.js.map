{"version":3,"file":"static/js/1787.3ca87c19.chunk.js","mappings":"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","sources":["../node_modules/mermaid/dist/classDiagram-v2-f2320105.js"],"sourcesContent":["import { p as parser, d as db, s as styles } from \"./styles-9a916d00.js\";\nimport { select, curveLinear } from \"d3\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { l as log, c as getConfig, u as utils, o as setupGraphViewbox, k as getStylesFromArray, n as interpolateToCurve, e as common } from \"./mermaid-b5860b54.js\";\nimport { r as render } from \"./index-3862675e.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-e0da2a9e.js\";\nimport \"./createText-2e5e7dd3.js\";\nimport \"mdast-util-from-markdown\";\nconst sanitizeText = (txt) => common.sanitizeText(txt, getConfig());\nlet conf = {\n  dividerMargin: 10,\n  padding: 5,\n  textHeight: 10,\n  curve: void 0\n};\nconst addNamespaces = function(namespaces, g, _id, diagObj) {\n  const keys = Object.keys(namespaces);\n  log.info(\"keys:\", keys);\n  log.info(namespaces);\n  keys.forEach(function(id) {\n    var _a, _b;\n    const vertex = namespaces[id];\n    const shape = \"rect\";\n    const node = {\n      shape,\n      id: vertex.id,\n      domId: vertex.domId,\n      labelText: sanitizeText(vertex.id),\n      labelStyle: \"\",\n      style: \"fill: none; stroke: black\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    addClasses(vertex.classes, g, _id, diagObj, vertex.id);\n    log.info(\"setNode\", node);\n  });\n};\nconst addClasses = function(classes, g, _id, diagObj, parent) {\n  const keys = Object.keys(classes);\n  log.info(\"keys:\", keys);\n  log.info(classes);\n  keys.filter((id) => classes[id].parent == parent).forEach(function(id) {\n    var _a, _b;\n    const vertex = classes[id];\n    const cssClassStr = vertex.cssClasses.join(\" \");\n    const styles2 = getStylesFromArray(vertex.styles);\n    const vertexText = vertex.label ?? vertex.id;\n    const radius = 0;\n    const shape = \"class_box\";\n    const node = {\n      labelStyle: styles2.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      classData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssClassStr,\n      style: styles2.style,\n      id: vertex.id,\n      domId: vertex.domId,\n      tooltip: diagObj.db.getTooltip(vertex.id, parent) || \"\",\n      haveCallback: vertex.haveCallback,\n      link: vertex.link,\n      width: vertex.type === \"group\" ? 500 : void 0,\n      type: vertex.type,\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    if (parent) {\n      g.setParent(vertex.id, parent);\n    }\n    log.info(\"setNode\", node);\n  });\n};\nconst addNotes = function(notes, g, startEdgeId, classes) {\n  log.info(notes);\n  notes.forEach(function(note, i) {\n    var _a, _b;\n    const vertex = note;\n    const cssNoteStr = \"\";\n    const styles2 = { labelStyle: \"\", style: \"\" };\n    const vertexText = vertex.text;\n    const radius = 0;\n    const shape = \"note\";\n    const node = {\n      labelStyle: styles2.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      noteData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssNoteStr,\n      style: styles2.style,\n      id: vertex.id,\n      domId: vertex.id,\n      tooltip: \"\",\n      type: \"note\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    log.info(\"setNode\", node);\n    if (!vertex.class || !(vertex.class in classes)) {\n      return;\n    }\n    const edgeId = startEdgeId + i;\n    const edgeData = {\n      id: `edgeNote${edgeId}`,\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: \"dotted\",\n      // Set link type for rendering\n      arrowhead: \"none\",\n      //Set edge extra labels\n      startLabelRight: \"\",\n      endLabelLeft: \"\",\n      //Set relation arrow types\n      arrowTypeStart: \"none\",\n      arrowTypeEnd: \"none\",\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf.curve, curveLinear)\n    };\n    g.setEdge(vertex.id, vertex.class, edgeData, edgeId);\n  });\n};\nconst addRelations = function(relations, g) {\n  const conf2 = getConfig().flowchart;\n  let cnt = 0;\n  relations.forEach(function(edge) {\n    var _a;\n    cnt++;\n    const edgeData = {\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: edge.relation.lineType == 1 ? \"dashed\" : \"solid\",\n      id: `id_${edge.id1}_${edge.id2}_${cnt}`,\n      // Set link type for rendering\n      arrowhead: edge.type === \"arrow_open\" ? \"none\" : \"normal\",\n      //Set edge extra labels\n      startLabelRight: edge.relationTitle1 === \"none\" ? \"\" : edge.relationTitle1,\n      endLabelLeft: edge.relationTitle2 === \"none\" ? \"\" : edge.relationTitle2,\n      //Set relation arrow types\n      arrowTypeStart: getArrowMarker(edge.relation.type1),\n      arrowTypeEnd: getArrowMarker(edge.relation.type2),\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf2 == null ? void 0 : conf2.curve, curveLinear)\n    };\n    log.info(edgeData, edge);\n    if (edge.style !== void 0) {\n      const styles2 = getStylesFromArray(edge.style);\n      edgeData.style = styles2.style;\n      edgeData.labelStyle = styles2.labelStyle;\n    }\n    edge.text = edge.title;\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n      if (((_a = getConfig().flowchart) == null ? void 0 : _a.htmlLabels) ?? getConfig().htmlLabels) {\n        edgeData.labelType = \"html\";\n        edgeData.label = '<span class=\"edgeLabel\">' + edge.text + \"</span>\";\n      } else {\n        edgeData.labelType = \"text\";\n        edgeData.label = edge.text.replace(common.lineBreakRegex, \"\\n\");\n        if (edge.style === void 0) {\n          edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n        }\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n      }\n    }\n    g.setEdge(edge.id1, edge.id2, edgeData, cnt);\n  });\n};\nconst setConf = function(cnf) {\n  conf = {\n    ...conf,\n    ...cnf\n  };\n};\nconst draw = async function(text, id, _version, diagObj) {\n  log.info(\"Drawing class - \", id);\n  const conf2 = getConfig().flowchart ?? getConfig().class;\n  const securityLevel = getConfig().securityLevel;\n  log.info(\"config:\", conf2);\n  const nodeSpacing = (conf2 == null ? void 0 : conf2.nodeSpacing) ?? 50;\n  const rankSpacing = (conf2 == null ? void 0 : conf2.rankSpacing) ?? 50;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: diagObj.db.getDirection(),\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const namespaces = diagObj.db.getNamespaces();\n  const classes = diagObj.db.getClasses();\n  const relations = diagObj.db.getRelations();\n  const notes = diagObj.db.getNotes();\n  log.info(relations);\n  addNamespaces(namespaces, g, id, diagObj);\n  addClasses(classes, g, id, diagObj);\n  addRelations(relations, g);\n  addNotes(notes, g, relations.length + 1, classes);\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(\n    element,\n    g,\n    [\"aggregation\", \"extension\", \"composition\", \"dependency\", \"lollipop\"],\n    \"classDiagram\",\n    id\n  );\n  utils.insertTitle(svg, \"classTitleText\", (conf2 == null ? void 0 : conf2.titleTopMargin) ?? 5, diagObj.db.getDiagramTitle());\n  setupGraphViewbox(g, svg, conf2 == null ? void 0 : conf2.diagramPadding, conf2 == null ? void 0 : conf2.useMaxWidth);\n  if (!(conf2 == null ? void 0 : conf2.htmlLabels)) {\n    const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n};\nfunction getArrowMarker(type) {\n  let marker;\n  switch (type) {\n    case 0:\n      marker = \"aggregation\";\n      break;\n    case 1:\n      marker = \"extension\";\n      break;\n    case 2:\n      marker = \"composition\";\n      break;\n    case 3:\n      marker = \"dependency\";\n      break;\n    case 4:\n      marker = \"lollipop\";\n      break;\n    default:\n      marker = \"none\";\n  }\n  return marker;\n}\nconst renderer = {\n  setConf,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.class) {\n      cnf.class = {};\n    }\n    cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"names":["sanitizeText","txt","common","getConfig","conf","dividerMargin","padding","textHeight","curve","addClasses","classes","g","_id","diagObj","parent","keys","Object","log","info","filter","id","forEach","_vertex$label","_ref2","_a","_b","vertex","cssClassStr","cssClasses","join","styles2","getStylesFromArray","styles","vertexText","label","node","labelStyle","shape","labelText","classData","rx","ry","class","style","domId","tooltip","db","getTooltip","haveCallback","link","width","type","flowchart","setNode","setParent","getArrowMarker","marker","renderer","setConf","cnf","_objectSpread","draw","async","text","_version","_getConfig$flowchart","_ref5","_ref6","_ref7","conf2","securityLevel","nodeSpacing","rankSpacing","graphlib","multigraph","compound","setGraph","rankdir","getDirection","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","namespaces","getNamespaces","getClasses","relations","getRelations","notes","getNotes","sandboxElement","_ref","addNamespaces","cnt","edge","edgeData","pattern","relation","lineType","concat","id1","id2","arrowhead","startLabelRight","relationTitle1","endLabelLeft","relationTitle2","arrowTypeStart","type1","arrowTypeEnd","type2","interpolateToCurve","curveLinear","_ref4","title","arrowheadStyle","labelpos","htmlLabels","labelType","replace","lineBreakRegex","setEdge","addRelations","startEdgeId","note","i","_ref3","noteData","edgeId","addNotes","length","select","root","nodes","contentDocument","body","svg","element","render","utils","insertTitle","titleTopMargin","getDiagramTitle","setupGraphViewbox","diagramPadding","useMaxWidth","doc","document","labels","querySelectorAll","dim","getBBox","rect","createElementNS","setAttribute","height","insertBefore","firstChild","diagram","parser","init","arrowMarkerAbsolute","clear"],"sourceRoot":""}