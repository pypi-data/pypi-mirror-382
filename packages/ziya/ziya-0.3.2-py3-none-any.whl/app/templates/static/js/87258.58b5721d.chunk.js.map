{"version":3,"file":"static/js/87258.58b5721d.chunk.js","mappings":"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","sources":["components/VegaLiteTest.tsx"],"sourcesContent":["import React, { Suspense, useState } from 'react';\nimport { Card, Typography, Space, Collapse, Alert, Spin } from 'antd';\nimport { D3Renderer } from './D3Renderer';\nimport './debug.css';\n\nconst { Title, Text } = Typography;\n\nconst LoadingFallback = () => (\n    <div style={{\n        padding: '20px',\n        textAlign: 'center',\n        minHeight: '200px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }}>\n        <Spin\n            size=\"large\"\n            tip=\"Loading visualization gallery...\"\n        />\n    </div>\n);\n\ninterface VegaExample {\n    name: string;\n    description: string;\n    spec: any;\n}\n\n// Enhanced test cases demonstrating various Vega-Lite capabilities\nconst examples: VegaExample[] = [\n    {\n        name: \"Interactive Multi-Line Chart\",\n        description: \"Time series with interactive legend and zoom\",\n        spec: {\n            \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n            \"width\": 600,\n            \"height\": 300,\n            \"data\": {\n                \"name\": \"timeseries\",  // Add unique name for dataset\n                \"values\": Array.from({ length: 50 }, (_, i) => ({\n                    \"date\": new Date(2023, 0, i + 1).toISOString().slice(0, 10),\n                    \"series1\": Math.sin(i / 10) * 10 + Math.random() * 5 + 20,\n                    \"series2\": Math.cos(i / 10) * 8 + Math.random() * 3 + 15,\n                    \"series3\": Math.sin(i / 15) * 15 + Math.random() * 4 + 25\n                }))\n            },\n            \"transform\": [\n                { \"fold\": [\"series1\", \"series2\", \"series3\"] }\n            ],\n            \"selection\": {\n                \"series\": { \"type\": \"multi\", \"fields\": [\"key\"], \"bind\": \"legend\" }\n            },\n            \"mark\": {\n                \"type\": \"line\",\n                \"point\": true\n            },\n            \"encoding\": {\n                \"x\": {\n                    \"field\": \"date\",\n                    \"type\": \"temporal\",\n                    \"scale\": { \"type\": \"time\" }\n                },\n                \"y\": {\n                    \"field\": \"value\",\n                    \"type\": \"quantitative\",\n                    \"scale\": { \"zero\": false }\n                },\n                \"color\": { \"field\": \"key\", \"type\": \"nominal\" },\n                \"opacity\": {\n                    \"condition\": { \"selection\": \"series\", \"value\": 1 },\n                    \"value\": 0.2\n                }\n            }\n        }\n    },\n    {\n        name: \"Brushing & Linking Example\",\n        description: \"Interactive scatter plot with linked histogram\",\n        spec: {\n            \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n            \"vconcat\": [\n                {\n                    \"width\": 600,\n                    \"height\": 300,\n                    \"data\": {\n                        \"name\": \"scatter\",\n                        \"values\": Array.from({ length: 100 }, () => ({\n                            \"x\": Math.random() * 100,\n                            \"y\": Math.random() * 100,\n                            \"category\": [\"A\", \"B\", \"C\"][Math.floor(Math.random() * 3)]\n                        }))\n                    },\n                    \"selection\": {\n                        \"brush\": { \"type\": \"interval\" }\n                    },\n                    \"mark\": \"circle\",\n                    \"encoding\": {\n                        \"x\": { \"field\": \"x\", \"type\": \"quantitative\" },\n                        \"y\": { \"field\": \"y\", \"type\": \"quantitative\" },\n                        \"color\": {\n                            \"condition\": { \"selection\": \"brush\", \"field\": \"category\", \"type\": \"nominal\" },\n                            \"value\": \"grey\"\n                        }\n                    }\n                },\n                {\n                    \"width\": 600,\n                    \"height\": 100,\n                    \"transform\": [{ \"filter\": { \"selection\": \"brush\" } }],\n                    \"mark\": \"bar\",\n                    \"encoding\": {\n                        \"x\": { \"field\": \"category\", \"type\": \"nominal\" },\n                        \"y\": { \"aggregate\": \"count\" },\n                        \"color\": { \"field\": \"category\", \"type\": \"nominal\" }\n                    }\n                }\n            ]\n        }\n    },\n    {\n        name: \"Advanced Heatmap with Tooltip\",\n        description: \"Interactive heatmap with custom color scheme and tooltips\",\n        spec: {\n            \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n            \"width\": 600,\n            \"height\": 400,\n            \"data\": {\n                \"name\": \"heatmap\",\n                \"values\": Array.from({ length: 100 }, (_, i) => ({\n                    \"x\": Math.floor(i / 10),\n                    \"y\": i % 10,\n                    \"value\": Math.sin(i / 15) * Math.cos(i / 10) * 50 + 50\n                }))\n            },\n            \"mark\": \"rect\",\n            \"encoding\": {\n                \"x\": { \"field\": \"x\", \"type\": \"ordinal\", \"title\": \"X Axis\" },\n                \"y\": { \"field\": \"y\", \"type\": \"ordinal\", \"title\": \"Y Axis\" },\n                \"color\": {\n                    \"field\": \"value\",\n                    \"type\": \"quantitative\",\n                    \"scale\": {\n                        \"scheme\": \"viridis\",\n                        \"domain\": [0, 100]\n                    }\n                },\n                \"tooltip\": [\n                    { \"field\": \"x\", \"type\": \"ordinal\" },\n                    { \"field\": \"y\", \"type\": \"ordinal\" },\n                    { \"field\": \"value\", \"type\": \"quantitative\", \"format\": \".2f\" }\n                ]\n            },\n            \"config\": {\n                \"axis\": { \"grid\": true },\n                \"view\": { \"strokeWidth\": 0 }\n            }\n        }\n    },\n    {\n        name: \"Stacked Area Chart with Streamgraph\",\n        description: \"Animated transition between stacked and streamgraph layouts\",\n        spec: {\n            \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n            \"width\": 600,\n            \"height\": 300,\n            \"data\": {\n                \"values\": Array.from({ length: 150 }, (_, i) => ({\n                    \"time\": new Date(2023, 0, Math.floor(i / 5) + 1).toISOString().slice(0, 10),\n                    \"category\": `Category ${i % 5 + 1}`,\n                    \"value\": Math.sin(i / 10) * Math.cos(i / 20) * 20 + Math.random() * 10 + 30\n                }))\n            },\n            \"selection\": {\n                \"layout\": {\n                    \"type\": \"single\",\n                    \"fields\": [\"layout\"],\n                    \"bind\": {\n                        \"input\": \"radio\",\n                        \"options\": [\"stacked\", \"streamgraph\"],\n                        \"name\": \"Layout: \"\n                    },\n                    \"init\": { \"layout\": \"stacked\" }\n                }\n            },\n            \"mark\": \"area\",\n            \"encoding\": {\n                \"x\": {\n                    \"field\": \"time\",\n                    \"type\": \"temporal\",\n                    \"title\": \"Time\"\n                },\n                \"y\": {\n                    \"field\": \"value\",\n                    \"type\": \"quantitative\",\n                    \"title\": \"Value\",\n                    \"stack\": {\n                        \"offset\": {\n                            \"condition\": { \"selection\": \"layout\", \"value\": \"normalize\" },\n                            \"value\": \"zero\"\n                        }\n                    }\n                },\n                \"color\": {\n                    \"field\": \"category\",\n                    \"type\": \"nominal\",\n                    \"scale\": { \"scheme\": \"category10\" }\n                },\n                \"tooltip\": [\n                    { \"field\": \"time\", \"type\": \"temporal\" },\n                    { \"field\": \"category\", \"type\": \"nominal\" },\n                    { \"field\": \"value\", \"type\": \"quantitative\" }\n                ]\n            }\n        }\n    },\n    {\n        name: \"Radial Chart with Interaction\",\n        description: \"Interactive radial visualization with hover effects\",\n        spec: {\n            \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n            \"width\": 400,\n            \"height\": 400,\n            \"data\": {\n                \"values\": Array.from({ length: 24 }, (_, i) => ({\n                    \"hour\": i,\n                    \"value\": Math.sin(i / 4) * 10 + Math.random() * 5 + 15\n                }))\n            },\n            \"mark\": { \"type\": \"arc\", \"innerRadius\": 80 },\n            \"encoding\": {\n                \"theta\": { \"field\": \"hour\", \"type\": \"quantitative\", \"scale\": { \"domain\": [0, 24] } },\n                \"radius\": { \"field\": \"value\", \"type\": \"quantitative\", \"scale\": { \"type\": \"sqrt\" } },\n                \"color\": {\n                    \"field\": \"value\",\n                    \"type\": \"quantitative\",\n                    \"scale\": { \"scheme\": \"viridis\" }\n                },\n                \"tooltip\": [\n                    { \"field\": \"hour\", \"type\": \"quantitative\", \"title\": \"Hour\" },\n                    { \"field\": \"value\", \"type\": \"quantitative\", \"title\": \"Value\" }\n                ]\n            },\n            \"view\": { \"stroke\": null }\n        }\n    }\n];\n\nconst VegaLiteTest: React.FC = () => {\n    const [activeKey, setActiveKey] = useState<string[]>([]);\n    const [error, setError] = useState<string | null>(null);\n\n    const content = (\n        <Card\n            title=\"Vega-Lite Visualization Gallery\"\n            extra={\n                <Alert\n                    message=\"Click examples to load them one at a time\"\n                    type=\"info\"\n                    showIcon\n                    style={{ marginBottom: 0 }}\n                />\n            }\n        >\n            <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\n                <Title level={4}>Advanced Vega-Lite Visualization Examples</Title>\n\n                <Collapse\n                    accordion\n                    activeKey={activeKey}\n                    onChange={(keys) => setActiveKey(typeof keys === 'string' ? [keys] : keys)}\n                >\n                    {examples.map((example, index) => (\n                        <Collapse.Panel\n                            key={String(index)}\n                            header={\n                                <Space>\n                                    <Text strong>{example.name}</Text>\n                                    <Text type=\"secondary\">{example.description}</Text>\n                                </Space>\n                            }\n                        >\n                            <ErrorBoundary\n                                onError={(error) => {\n                                    console.error('Visualization error:', error);\n                                    setError(error.message);\n                                }}\n                            >\n                                {error ? (\n                                    <Alert\n                                        message=\"Error Loading Visualization\"\n                                        description={error}\n                                        type=\"error\"\n                                        closable\n                                        onClose={() => setError(null)}\n                                    />\n                                ) : (\n                                    <div style={{ padding: '20px 0' }}>\n                                        <D3Renderer\n                                            spec={JSON.stringify(example.spec)}\n                                            width={800}\n                                            containerId={`viz-${example.name.toLowerCase().replace(/\\s+/g, '-')}-${index}`}\n                                            key={`viz-${example.name.toLowerCase().replace(/\\s+/g, '-')}-${index}`}\n                                            height={400}\n                                        />\n                                    </div>\n                                )}\n                            </ErrorBoundary>\n                            <details style={{ marginTop: 16 }}>\n                                <summary>View Specification</summary>\n                                <pre style={{\n                                    backgroundColor: '#f6f8fa',\n                                    padding: 16,\n                                    borderRadius: 4,\n                                    marginTop: 8\n                                }}>\n                                    <code>{JSON.stringify(example.spec, null, 2)}</code>\n                                </pre>\n                            </details>\n                        </Collapse.Panel>\n                    ))}\n                </Collapse>\n            </Space>\n        </Card>\n    );\n\n    return (\n        <Suspense fallback={<LoadingFallback />}>\n            {content}\n        </Suspense>\n    );\n};\n\n// Error Boundary Component\nclass ErrorBoundary extends React.Component<\n    { children: React.ReactNode; onError: (error: Error) => void },\n    { hasError: boolean }\n> {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError() {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error: Error) {\n        this.props.onError(error);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return null;\n        }\n        return this.props.children;\n    }\n}\n\nexport default VegaLiteTest;\n"],"names":["Title","Text","Typography","LoadingFallback","_jsx","style","padding","textAlign","minHeight","display","alignItems","justifyContent","children","Spin","size","tip","examples","name","description","spec","Array","from","length","_","i","Date","toISOString","slice","Math","sin","random","cos","floor","concat","ErrorBoundary","React","constructor","props","super","this","state","hasError","getDerivedStateFromError","componentDidCatch","error","onError","render","VegaLiteTest","activeKey","setActiveKey","useState","setError","content","Card","title","extra","Alert","message","type","showIcon","marginBottom","_jsxs","Space","direction","width","level","Collapse","accordion","onChange","keys","map","example","index","Panel","header","strong","console","closable","onClose","D3Renderer","JSON","stringify","containerId","toLowerCase","replace","height","marginTop","backgroundColor","borderRadius","String","Suspense","fallback"],"sourceRoot":""}