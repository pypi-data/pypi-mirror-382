{"version":3,"file":"static/js/prism-lang.prism-wgsl.aec58ed4.chunk.js","mappings":"oFAAAA,MAAMC,UAAUC,KAAO,CACtB,QAAW,CACVC,QAAS,gCACTC,QAAQ,GAET,oBAAqB,CACpBD,QAAS,oBACTE,YAAY,EACZC,OAAQ,CACP,UAAa,CACZH,QAAS,WACTI,MAAO,aAER,YAAe,QACf,kBAAmB,CAClBJ,QAAS,4LACTI,MAAO,gBAIV,WAAc,CACbJ,QAAS,kHACTE,YAAY,EACZE,MAAO,aAER,UAAa,CACZJ,QAAS,gCACTE,YAAY,EACZE,MAAO,YAER,QAAW,iMACX,QAAW,g/CACX,iBAAkB,CACjBJ,QAAS,qBACTI,MAAO,YAER,aAAc,4BACd,eAAgB,CACfJ,QAAS,qBACTI,MAAO,WAER,kBAAmB,CAClBJ,QAAS,sCACTI,MAAO,UAER,oBAAqB,CACpBJ,QAAS,+DAAgEI,MAAO,UAEjF,wBAAyB,CACxB,CAAEJ,QAAS,qCAAsCI,MAAO,UACxD,CAAEJ,QAAS,qCAAsCI,MAAO,UACxD,CAAEJ,QAAS,2BAA4BI,MAAO,UAC9C,CAAEJ,QAAS,cAAeI,MAAO,WAElC,cAAe,CACdJ,QAAS,eACTI,MAAO,UAER,SAAY,CACX,CAAEJ,QAAS,0CACX,CAAEA,QAAS,aACX,CAAEA,QAAS,4CACX,CAAEA,QAAS,uBAAwBE,YAAY,GAC/C,CAAEF,QAAS,kCAAmCE,YAAY,GAC1D,CAAEF,QAAS,0DACX,CAAEA,QAAS,OAEZ,YAAe,mB","sources":["../node_modules/prismjs/components/prism-wgsl.js"],"sourcesContent":["Prism.languages.wgsl = {\n\t'comment': {\n\t\tpattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\tgreedy: true,\n\t},\n\t'builtin-attribute': {\n\t\tpattern: /(@)builtin\\(.*?\\)/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'attribute': {\n\t\t\t\tpattern: /^builtin/,\n\t\t\t\talias: 'attr-name',\n\t\t\t},\n\t\t\t'punctuation': /[(),]/,\n\t\t\t'built-in-values': {\n\t\t\t\tpattern: /\\b(?:frag_depth|front_facing|global_invocation_id|instance_index|local_invocation_id|local_invocation_index|num_workgroups|position|sample_index|sample_mask|vertex_index|workgroup_id)\\b/,\n\t\t\t\talias: 'attr-value',\n\t\t\t},\n\t\t},\n\t},\n\t'attributes': {\n\t\tpattern: /(@)(?:align|binding|compute|const|fragment|group|id|interpolate|invariant|location|size|vertex|workgroup_size)/i,\n\t\tlookbehind: true,\n\t\talias: 'attr-name',\n\t},\n\t'functions': {\n\t\tpattern: /\\b(fn\\s+)[_a-zA-Z]\\w*(?=[(<])/,\n\t\tlookbehind: true,\n\t\talias: 'function',\n\t},\n\t'keyword': /\\b(?:bitcast|break|case|const|continue|continuing|default|discard|else|enable|fallthrough|fn|for|function|if|let|loop|private|return|storage|struct|switch|type|uniform|var|while|workgroup)\\b/,\n\t'builtin': /\\b(?:abs|acos|acosh|all|any|array|asin|asinh|atan|atan2|atanh|atomic|atomicAdd|atomicAnd|atomicCompareExchangeWeak|atomicExchange|atomicLoad|atomicMax|atomicMin|atomicOr|atomicStore|atomicSub|atomicXor|bool|ceil|clamp|cos|cosh|countLeadingZeros|countOneBits|countTrailingZeros|cross|degrees|determinant|distance|dot|dpdx|dpdxCoarse|dpdxFine|dpdy|dpdyCoarse|dpdyFine|exp|exp2|extractBits|f32|f64|faceForward|firstLeadingBit|floor|fma|fract|frexp|fwidth|fwidthCoarse|fwidthFine|i32|i64|insertBits|inverseSqrt|ldexp|length|log|log2|mat[2-4]x[2-4]|max|min|mix|modf|normalize|override|pack2x16float|pack2x16snorm|pack2x16unorm|pack4x8snorm|pack4x8unorm|pow|ptr|quantizeToF16|radians|reflect|refract|reverseBits|round|sampler|sampler_comparison|select|shiftLeft|shiftRight|sign|sin|sinh|smoothstep|sqrt|staticAssert|step|storageBarrier|tan|tanh|textureDimensions|textureGather|textureGatherCompare|textureLoad|textureNumLayers|textureNumLevels|textureNumSamples|textureSample|textureSampleBias|textureSampleCompare|textureSampleCompareLevel|textureSampleGrad|textureSampleLevel|textureStore|texture_1d|texture_2d|texture_2d_array|texture_3d|texture_cube|texture_cube_array|texture_depth_2d|texture_depth_2d_array|texture_depth_cube|texture_depth_cube_array|texture_depth_multisampled_2d|texture_multisampled_2d|texture_storage_1d|texture_storage_2d|texture_storage_2d_array|texture_storage_3d|transpose|trunc|u32|u64|unpack2x16float|unpack2x16snorm|unpack2x16unorm|unpack4x8snorm|unpack4x8unorm|vec[2-4]|workgroupBarrier)\\b/,\n\t'function-calls': {\n\t\tpattern: /\\b[_a-z]\\w*(?=\\()/i,\n\t\talias: 'function',\n\t},\n\t'class-name': /\\b(?:[A-Z][A-Za-z0-9]*)\\b/,\n\t'bool-literal': {\n\t\tpattern: /\\b(?:false|true)\\b/,\n\t\talias: 'boolean',\n\t},\n\t'hex-int-literal': {\n\t\tpattern: /\\b0[xX][0-9a-fA-F]+[iu]?\\b(?![.pP])/,\n\t\talias: 'number',\n\t},\n\t'hex-float-literal': {\n\t\tpattern: /\\b0[xX][0-9a-fA-F]*(?:\\.[0-9a-fA-F]*)?(?:[pP][+-]?\\d+[fh]?)?/, alias: 'number'\n\t},\n\t'decimal-float-literal': [\n\t\t{ pattern: /\\d*\\.\\d+(?:[eE](?:\\+|-)?\\d+)?[fh]?/, alias: 'number' },\n\t\t{ pattern: /\\d+\\.\\d*(?:[eE](?:\\+|-)?\\d+)?[fh]?/, alias: 'number' },\n\t\t{ pattern: /\\d+[eE](?:\\+|-)?\\d+[fh]?/, alias: 'number' },\n\t\t{ pattern: /\\b\\d+[fh]\\b/, alias: 'number' },\n\t],\n\t'int-literal': {\n\t\tpattern: /\\b\\d+[iu]?\\b/,\n\t\talias: 'number',\n\t},\n\t'operator': [\n\t\t{ pattern: /(?:\\^|~|\\|(?!\\|)|\\|\\||&&|<<|>>|!)(?!=)/ },\n\t\t{ pattern: /&(?![&=])/ },\n\t\t{ pattern: /(?:\\+=|-=|\\*=|\\/=|%=|\\^=|&=|\\|=|<<=|>>=)/ },\n\t\t{ pattern: /(^|[^<>=!])=(?![=>])/, lookbehind: true },\n\t\t{ pattern: /(?:==|!=|<=|\\+\\+|--|(^|[^=])>=)/, lookbehind: true },\n\t\t{ pattern: /(?:(?:[+%]|(?:\\*(?!\\w)))(?!=))|(?:-(?!>))|(?:\\/(?!\\/))/ },\n\t\t{ pattern: /->/ },\n\t],\n\t'punctuation': /[@(){}[\\],;<>:.]/,\n};\n"],"names":["Prism","languages","wgsl","pattern","greedy","lookbehind","inside","alias"],"sourceRoot":""}