# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Geometry/geometry.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from Utils import utils_pb2 as Utils_dot_utils__pb2

from Utils.utils_pb2 import *

DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x17Geometry/geometry.proto\x12\x0bng.geometry\x1a\x11Utils/utils.proto\"$\n\x08Vector2D\x12\x0b\n\x03one\x18\x01 \x01(\x01\x12\x0b\n\x03two\x18\x02 \x01(\x01\" \n\x08VectorYZ\x12\t\n\x01y\x18\x01 \x01(\x01\x12\t\n\x01z\x18\x02 \x01(\x01\"/\n\nVectorYZLT\x12\t\n\x01y\x18\x01 \x01(\x01\x12\t\n\x01z\x18\x02 \x01(\x01\x12\x0b\n\x03l_t\x18\x03 \x01(\x01\"\x1f\n\x07Point2D\x12\t\n\x01x\x18\x01 \x01(\x01\x12\t\n\x01y\x18\x02 \x01(\x01\"j\n\x06Line2D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12#\n\x05start\x18\x02 \x01(\x0b\x32\x14.ng.geometry.Point2D\x12!\n\x03\x65nd\x18\x03 \x01(\x0b\x32\x14.ng.geometry.Point2D\"\x7f\n\x05\x41rc2D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12$\n\x06\x63\x65nter\x18\x02 \x01(\x0b\x32\x14.ng.geometry.Point2D\x12\x0e\n\x06radius\x18\x03 \x01(\x01\x12\x13\n\x0bstart_angle\x18\x04 \x01(\x01\x12\x11\n\tend_angle\x18\x05 \x01(\x01\"Z\n\x08\x43ircle2D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12$\n\x06\x63\x65nter\x18\x02 \x01(\x0b\x32\x14.ng.geometry.Point2D\x12\x0e\n\x06radius\x18\x03 \x01(\x01\"\xb7\x01\n\x07\x43urve2D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12)\n\x0b\x61rc_segment\x18\x65 \x01(\x0b\x32\x12.ng.geometry.Arc2DH\x00\x12/\n\x0e\x63ircle_segment\x18\x66 \x01(\x0b\x32\x15.ng.geometry.Circle2DH\x00\x12+\n\x0cline_segment\x18g \x01(\x0b\x32\x13.ng.geometry.Line2DH\x00\x42\t\n\x07segment\"L\n\nPolyLine2D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12$\n\x06points\x18\x02 \x03(\x0b\x32\x14.ng.geometry.Point2D\"M\n\x0bPolyCurve2D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12$\n\x06\x63urves\x18\x02 \x03(\x0b\x32\x14.ng.geometry.Curve2D\"\xb2\x01\n\nLineFace2D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12*\n\tperimeter\x18\x02 \x01(\x0b\x32\x17.ng.geometry.PolyLine2D\x12&\n\x05holes\x18\x03 \x03(\x0b\x32\x17.ng.geometry.PolyLine2D\x12\x36\n\x15\x61\x64\x64itional_perimeters\x18\x04 \x03(\x0b\x32\x17.ng.geometry.PolyLine2D\"\xb6\x01\n\x0b\x43urveFace2D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12+\n\tperimeter\x18\x02 \x01(\x0b\x32\x18.ng.geometry.PolyCurve2D\x12\'\n\x05holes\x18\x03 \x03(\x0b\x32\x18.ng.geometry.PolyCurve2D\x12\x37\n\x15\x61\x64\x64itional_perimeters\x18\x04 \x03(\x0b\x32\x18.ng.geometry.PolyCurve2D\"+\n\x08Vector3D\x12\t\n\x01x\x18\x01 \x01(\x01\x12\t\n\x01y\x18\x02 \x01(\x01\x12\t\n\x01z\x18\x03 \x01(\x01\"*\n\x07Point3D\x12\t\n\x01x\x18\x01 \x01(\x01\x12\t\n\x01y\x18\x02 \x01(\x01\x12\t\n\x01z\x18\x03 \x01(\x01\"\x7f\n\x0bOrientation\x12$\n\x05x_dir\x18\x01 \x01(\x0b\x32\x15.ng.geometry.Vector3D\x12$\n\x05y_dir\x18\x02 \x01(\x0b\x32\x15.ng.geometry.Vector3D\x12$\n\x05z_dir\x18\x03 \x01(\x0b\x32\x15.ng.geometry.Vector3D\"j\n\x06Line3D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12#\n\x05start\x18\x02 \x01(\x0b\x32\x14.ng.geometry.Point3D\x12!\n\x03\x65nd\x18\x03 \x01(\x0b\x32\x14.ng.geometry.Point3D\"\xa6\x01\n\x05\x41rc3D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12$\n\x06\x63\x65nter\x18\x02 \x01(\x0b\x32\x14.ng.geometry.Point3D\x12%\n\x06normal\x18\x03 \x01(\x0b\x32\x15.ng.geometry.Vector3D\x12\x0e\n\x06radius\x18\x04 \x01(\x01\x12\x13\n\x0bstart_angle\x18\x05 \x01(\x01\x12\x11\n\tend_angle\x18\x06 \x01(\x01\"\x81\x01\n\x08\x43ircle3D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12$\n\x06\x63\x65nter\x18\x02 \x01(\x0b\x32\x14.ng.geometry.Point3D\x12%\n\x06normal\x18\x03 \x01(\x0b\x32\x15.ng.geometry.Vector3D\x12\x0e\n\x06radius\x18\x04 \x01(\x01\"\xb8\x01\n\x07\x43urve3D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12)\n\x0b\x61rc_segment\x18\x65 \x01(\x0b\x32\x12.ng.geometry.Arc3DH\x00\x12\x30\n\x0f\x63ircle_segments\x18\x66 \x01(\x0b\x32\x15.ng.geometry.Circle3DH\x00\x12+\n\x0cline_segment\x18g \x01(\x0b\x32\x13.ng.geometry.Line3DH\x00\x42\t\n\x07segment\"L\n\nPolyLine3D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12$\n\x06points\x18\x02 \x03(\x0b\x32\x14.ng.geometry.Point3D\"M\n\x0bPolyCurve3D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12$\n\x06\x63urves\x18\x02 \x03(\x0b\x32\x14.ng.geometry.Curve3D\"z\n\nLineFace3D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12*\n\tperimeter\x18\x02 \x01(\x0b\x32\x17.ng.geometry.PolyLine3D\x12&\n\x05holes\x18\x03 \x03(\x0b\x32\x17.ng.geometry.PolyLine3D\"}\n\x0b\x43urveFace3D\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12+\n\tperimeter\x18\x02 \x01(\x0b\x32\x18.ng.geometry.PolyCurve3D\x12\'\n\x05holes\x18\x03 \x03(\x0b\x32\x18.ng.geometry.PolyCurve3D\"L\n\x05\x42lock\x12\x18\n\x02id\x18\x01 \x01(\x0b\x32\x0c.ng.utils.ID\x12)\n\x08surfaces\x18\x02 \x03(\x0b\x32\x17.ng.geometry.LineFace3DP\x00\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'Geometry.geometry_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _VECTOR2D._serialized_start=59
  _VECTOR2D._serialized_end=95
  _VECTORYZ._serialized_start=97
  _VECTORYZ._serialized_end=129
  _VECTORYZLT._serialized_start=131
  _VECTORYZLT._serialized_end=178
  _POINT2D._serialized_start=180
  _POINT2D._serialized_end=211
  _LINE2D._serialized_start=213
  _LINE2D._serialized_end=319
  _ARC2D._serialized_start=321
  _ARC2D._serialized_end=448
  _CIRCLE2D._serialized_start=450
  _CIRCLE2D._serialized_end=540
  _CURVE2D._serialized_start=543
  _CURVE2D._serialized_end=726
  _POLYLINE2D._serialized_start=728
  _POLYLINE2D._serialized_end=804
  _POLYCURVE2D._serialized_start=806
  _POLYCURVE2D._serialized_end=883
  _LINEFACE2D._serialized_start=886
  _LINEFACE2D._serialized_end=1064
  _CURVEFACE2D._serialized_start=1067
  _CURVEFACE2D._serialized_end=1249
  _VECTOR3D._serialized_start=1251
  _VECTOR3D._serialized_end=1294
  _POINT3D._serialized_start=1296
  _POINT3D._serialized_end=1338
  _ORIENTATION._serialized_start=1340
  _ORIENTATION._serialized_end=1467
  _LINE3D._serialized_start=1469
  _LINE3D._serialized_end=1575
  _ARC3D._serialized_start=1578
  _ARC3D._serialized_end=1744
  _CIRCLE3D._serialized_start=1747
  _CIRCLE3D._serialized_end=1876
  _CURVE3D._serialized_start=1879
  _CURVE3D._serialized_end=2063
  _POLYLINE3D._serialized_start=2065
  _POLYLINE3D._serialized_end=2141
  _POLYCURVE3D._serialized_start=2143
  _POLYCURVE3D._serialized_end=2220
  _LINEFACE3D._serialized_start=2222
  _LINEFACE3D._serialized_end=2344
  _CURVEFACE3D._serialized_start=2346
  _CURVEFACE3D._serialized_end=2471
  _BLOCK._serialized_start=2473
  _BLOCK._serialized_end=2549
# @@protoc_insertion_point(module_scope)
