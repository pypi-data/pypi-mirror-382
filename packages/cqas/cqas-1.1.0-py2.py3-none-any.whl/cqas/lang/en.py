#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""English language"""

# pylint: disable=C0301

from typing import Dict, Final, Tuple

__all__: Tuple[str] = ("STRINGS",)

STRINGS: Final[Dict[str, str]] = {
    "cqas_welcome": "PYTHON CODE QUALITY & SECURITY ANALYSIS REPORT",
    "analysis_complete": "Analysis completed in %s",
    "report_generated": "Report generated by the CQaS analyser v%s",
    "sec_analysis_header": "DETAILED SECURITY ANALYSIS",
    "sec_issues_by_sev": "Security Issues by Severity",
    "critical": "critical",
    "high": "high",
    "medium": "medium",
    "low": "low",
    "top_n_sec_issues": "Top %s Security Issues (by severity & CVSS score)",
    "cvss_score": "CVSS Score",
    "confidence": "Confidence",
    "remediation": "Remediation",
    "no_specific_remediation": "No specific remediation provided",
    "code": "Code",
    "and_n_more_sec_issues": "and %s more security issues",
    "complexity_hotspots_analysis_header": "COMPLEXITY HOTSPOTS ANALYSIS",
    "top_n_complexity_hotspots": "Top %s Complexity Hotspots",
    "complexity": "Complexity",
    "methods": "methods",
    "files_requiring_attention_header": "FILES REQUIRING IMMEDIATE ATTENTION",
    "file": "File",
    "files": "files",
    "quality": "Quality",
    "security": "Security",
    "maintainability": "Maintainability",
    "lines_of_code": "Lines of Code",
    "technical_debt": "Technical Debt",
    "issue_score": "Issue Score",
    "dead_code": "Dead Code",
    "style": "Style",
    "duplication": "Duplication",
    "issues": "Issues",
    "tech_debt_analysis_header": "TECHNICAL DEBT ANALYSIS",
    "total_est_debt": "Total Estimated Debt",
    "avg_est_debt": "Average Estimated Debt",
    "files_with_highest_tech_debt": "Files with Highest Technical Debt",
    "ratio": "Ratio",
    "project_stats_header": "COMPREHENSIVE PROJECT STATISTICS",
    "file_analysis": "File Analysis",
    "files_found": "Files found",
    "files_analysed": "Files analysed",
    "files_with_errors": "Files with errors",
    "analysis_duration": "Analysis Duration",
    "code_structure": "Core Structure",
    "logical_lines_of_code": "Logical Lines of Code",
    "functions": "Functions",
    "classes": "Classes",
    "issues_lower": "issues",
    "average_quality_metrics": "Average Quality Metrics",
    "cyclomatic_complexity": "Cyclomatic Complexity",
    "maintainability_index": "Maintainability Index",
    "readability_score": "Readability Score",
    "code_duplication": "Code Duplication",
    "issue_summary": "Issue Summary",
    "security_issues_label": "Security Issues",
    "style_issues_label": "Style Issues",
    "dead_code_items_label": "Dead Code Items",
    "project_duplication_analysis": "Project Duplication Analysis",
    "duplicate_blocks": "Duplicate Blocks",
    "duplicated_lines_est": "Duplicated Lines (est.)",
    "total_code_lines": "Total Code Lines",
    "duplication_percentage_label": "Duplication Percentage",
    "quality_distribution_analysis": "QUALITY DISTRIBUTION ANALYSIS",
    "quality_score_distribution": "Quality Score Distribution",
    "excellent": "Excellent",
    "good": "Good",
    "fair": "Fair",
    "poor": "Poor",
    "dist_critical": "Critical",
    "complexity_distribution": "Complexity Distribution",
    "simple": "Simple",
    "moderate": "Moderate",
    "complex_label": "Complex",
    "very_complex": "Very Complex",
    "maintainability_distribution_label": "Maintainability Distribution",
    "legacy": "Legacy",
    "actionable_recommendations": "ACTIONABLE RECOMMENDATIONS",
    "action_label": "Action",
    "rec_critical_title": "Critical Security Vulnerabilities",
    "rec_critical_description": "%s critical security issues require immediate attention.",
    "rec_critical_action": "Review and fix all critical security issues before deployment. Consider security audit.",
    "rec_high_title": "High Severity Security Issues",
    "rec_high_description": "%s high-severity security vulnerabilities detected.",
    "rec_high_action": "Implement security code review process and address high-severity issues systematically.",
    "rec_complex_title": "High Complexity Code",
    "rec_complex_description": "%s files have very high complexity (>50).",
    "rec_complex_action": "Refactor complex functions into smaller, focused methods. Consider applying SOLID principles.",
    "rec_debt_title": "Significant Technical Debt",
    "rec_debt_description": "Estimated %s of technical debt.",
    "rec_debt_action": "Allocate dedicated sprint time for technical debt reduction. Prioritise by impact and effort.",
    "rec_dup_title": "Code Duplication",
    "rec_dup_description": "%s code duplication detected.",
    "rec_dup_action": "Extract common functionality into reusable functions or classes. Consider design patterns.",
    "rec_doc_title": "Documentation Coverage",
    "rec_doc_description": "Low docstring coverage (%s) detected.",
    "rec_doc_action": "Add comprehensive docstrings to public functions and classes. Consider documentation standards.",
    "average_metrics": "AVERAGE METRICS",
    "technical_debt_ratio_label": "Technical Debt Ratio",
    "code_quality_index": "Code Quality Index",
    "verdicts_header": "VERDICTS",
    "overall_label": "Overall",
    "quality_label": "Quality",
    "security_label": "Security",
    "maintainability_label": "Maintainability",
    "complexity_label": "Complexity",
    "executive_summary_header": "EXECUTIVE SUMMARY",
    "files_analysed_label": "Files Analysed",
    "total_lines_of_code": "Total Lines of Code",
    "overall_quality_index": "Overall Quality Index",
    "overall_security_score_label": "Overall Security Score",
    "security_issues_found": "Security Issues Found",
    "high_critical": "high/critical",
    "overall_critical_vuln": "Critical: Security vulnerabilities require immediate attention",
    "excellent_outstanding_codebase": "Excellent: Outstanding codebase ready for production",
    "very_good_ready_production": "Very Good: High-quality, secure codebase ready for production",
    "good_solid_codebase": "Good: Solid codebase with minor improvements needed",
    "acceptable_moderate_quality": "Acceptable: Moderate quality, requires attention before production",
    "poor_significant_issues": "Poor: Significant issues present, major improvements needed",
    "critical_severe_quality": "Critical: Severe quality and security issues, immediate action required",
    "exceptional_exemplary": "Exceptional: Exemplary code structure and maintainability",
    "excellent_well_structured": "Excellent: Well-structured, highly maintainable code",
    "good_generally_well_written": "Good: Generally well-written with room for improvement",
    "acceptable_adequate_quality": "Acceptable: Adequate quality, some refactoring recommended",
    "poor_quality_issues_present": "Poor: Quality issues present, refactoring needed",
    "critical_severe_quality_refactor": "Critical: Severe quality issues, major refactoring required",
    "security_verdict_critical": "Critical: %s critical vulnerabilities require immediate attention",
    "security_verdict_poor_high": "Poor: %s high-severity vulnerabilities found",
    "security_verdict_concerning_high": "Concerning: %s high-severity security issues present",
    "security_verdict_attention_needed": "Attention Needed: %s high-severity issues require review",
    "excellent_security_posture": "Excellent: Outstanding security posture",
    "very_good_security_practices": "Very Good: Strong security practices implemented",
    "good_security_minor_issues": "Good: Generally secure with minor issues to address",
    "acceptable_security_some_concerns": "Acceptable: Some security concerns to address",
    "poor_multiple_vulnerabilities": "Poor: Multiple security vulnerabilities present",
    "unknown_no_files": "Unknown: No files analysed",
    "excellent_maintainable": "Excellent: Highly maintainable codebase",
    "good_maintainable": "Good: Well-maintainable with minor improvements possible",
    "acceptable_moderately_maintainable": "Acceptable: Moderately maintainable",
    "poor_maintenance_challenges": "Poor: Maintenance challenges present",
    "critical_severely_difficult": "Critical: Severely difficult to maintain",
    "excellent_low_complexity": "Excellent: Low complexity, easy to understand",
    "good_moderate_complexity": "Good: Moderate complexity, generally manageable",
    "acceptable_higher_complexity": "Acceptable: Higher complexity, consider refactoring",
    "poor_high_complexity": "Poor: High complexity, refactoring recommended",
    "critical_excessive_complexity": "Critical: Excessive complexity, immediate refactoring needed",
    "analysing": "Analysing",
    "completed_analysis_of_file": "Completed analysis of %s in %s",
    "generating_report_for_n_files": "Generating report for %s files",
    "starting_analysis_of": "Starting analysis of %s",
    "skipping_empty_file": "Skipping empty file: %s",
    "completed_analyser_of_file": "Completed %s analysis for %s",
    "limiting_analysis_to_n": "Limiting analysis to %d files (found %d)",
    "performing_project_level_dedup": "Performing project-level duplication analysis",
    "found_n_files_to_analyse": "Found %d Python files to analyse",
}
