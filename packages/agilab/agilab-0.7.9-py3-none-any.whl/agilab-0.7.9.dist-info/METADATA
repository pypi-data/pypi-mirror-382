Metadata-Version: 2.4
Name: agilab
Version: 0.7.9
Summary: AGILAB a datascience IDE for engineering to explore AI
Author-email: Jean-Pierre Morard <focus@thalesgroup.com>
Project-URL: Documentation, https://thalesgroup.github.io/agilab
Project-URL: Source, https://github.com/ThalesGroup/agilab
Project-URL: Issues, https://github.com/ThalesGroup/agilab/issues
Keywords: jupyter,mlflow,asyncio,dask,rapids,streamlit,distributed,cython,cluster,dataframe,dataset,load balancing,gen ai,copilot,agi,pycharm,datascience
Classifier: Intended Audience :: Developers
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: astor
Requires-Dist: asyncssh
Requires-Dist: build
Requires-Dist: cmake>=3.29
Requires-Dist: fastparquet
Requires-Dist: geojson
Requires-Dist: humanize
Requires-Dist: jupyter-ai[all]
Requires-Dist: keras
Requires-Dist: matplotlib
Requires-Dist: mlflow
Requires-Dist: networkx
Requires-Dist: numba
Requires-Dist: numpy>=1.14.1
Requires-Dist: openai
Requires-Dist: pathspec
Requires-Dist: pip
Requires-Dist: plotly
Requires-Dist: polars
Requires-Dist: py7zr
Requires-Dist: seaborn
Requires-Dist: setuptools
Requires-Dist: scipy==1.15.2
Requires-Dist: streamlit
Requires-Dist: streamlit-modal
Requires-Dist: streamlit_code_editor
Requires-Dist: streamlit_extras
Requires-Dist: tomli
Requires-Dist: tomli_w
Requires-Dist: twine
Requires-Dist: watchdog
Requires-Dist: wheel
Requires-Dist: agi-core==0.7.9
Requires-Dist: legacy-cgi; python_version >= "3.13"
Requires-Dist: standard-imghdr; python_version >= "3.13"
Dynamic: license-file

[![PyPI version](https://img.shields.io/pypi/v/agilab.svg?color=informational)](https://pypi.org/project/agilab)
[![Supported Python Versions](https://img.shields.io/pypi/pyversions/agilab.svg)](https://pypi.org/project/agilab/)
[![License: BSD 3-Clause](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)
[![pypi_dl](https://img.shields.io/pypi/dm/agilab)]()
[![tests](https://thalesgroup.github.io/agilab/tests.svg)](https://thalesgroup.github.io/agilab/tests.svg)
[![coverage](https://thalesgroup.github.io/agilab/coverage.svg)](https://thalesgroup.github.io/agilab/coverage.svg)
[![GitHub stars](https://img.shields.io/github/stars/ThalesGroup/agilab.svg)](https://github.com/ThalesGroup/agilab)
[![black](https://img.shields.io/badge/code%20style-black-000000.svg)]()
[![docs](https://img.shields.io/badge/docs-online-brightgreen.svg)](https://thalesgroup.github.io/agilab)
[![ORCID](https://img.shields.io/badge/ORCID-0009--0003--5375--368X-A6CE39?logo=orcid)](https://orcid.org/0009-0003-5375-368X)


# AGILAB Open Source Project

AGILAB [BSD license](https://github.com/ThalesGroup/agilab/blob/main/LICENSE) project purpose is to explore AI for engineering. It is designed to help engineers quickly experiment with AI-driven methods.
See [documentation](https://thalesgroup.github.io/agilab).

## Install and Execution for enduser

```bash
mkdir agi-space && cd agi-space
uv init --bare --no-workspace
uv add -p 3.13 --upgrade --force-reinstall agilab agi-core
uv run agilab --openai-api-key "your-api-key"
```

## Install for developers

<details open> 
<summary>
    <strong> Linux and MacOs </strong>
</summary>

```bash
git clone https://github.com/ThalesGroup/agilab
cd agilab
./install.sh --openai-api-key "your-api-key" --cluster-ssh-credentials "username:[password]"
```
</details>

<details> 
<summary>
    <strong>Windows</strong>
</summary>

```powershell
git clone https://github.com/ThalesGroup/agilab
cd agilab
powershell.exe -ExecutionPolicy Bypass -File .\install.ps1 --openai-api-key "your-api-key"
```
</details>

## AGILab Execution

### Linux and MacOS and Windows:

```bash
cd agilab/src/agilab
uv run agilab
```

## Notes for developers

- AgiEnv is a singleton. Use instance attributes (`env.apps_dir`, `env.logger`, etc.).
  Class attribute reads (e.g., `AgiEnv.apps_dir`) proxy to the singleton when initialised;
  methods/properties are not shadowed. A few helpers are pre‑init safe
  (`AgiEnv.set_env_var`, `AgiEnv.read_agilab_path`, `AgiEnv._build_env`, `AgiEnv.log_info`).

- Environment flags (replaces legacy `install_type`):
  - `env.is_source_env`: true when running from a source checkout.
  - `env.is_worker_env`: true in worker-only contexts (e.g., `wenv/*_worker`).
  - `env.is_local_worker`: helper flag for home‑scoped worker layouts.

- App constructors (templates + flight_project) ignore unknown kwargs when constructing
  their Pydantic `Args` models. This preserves strict validation while making constructors
  resilient to incidental extras. Configure verbosity via `AgiEnv(verbose=…)` or logging,
  not via app `Args`.
