[tool.ruff]
select = ["ALL"]
ignore = ["D101", "D107", "ANN204", "N803", "D102", "ERA001"]
line-length = 80
indent-width = 4

[tool.ruff.format]
indent-style = "space"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tahdig"
version = "0.0.3"
description = "Configuration with a crispy layer - A delightful Python configuration management system"
readme = "README.md"
authors = [
    { name = "Fardin", email = "fardin.ayar@aut.ac.ir" },
    { name = "Ali", email = "ali.sheykh@aut.ac.ir" },
]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
keywords = ["configuration", "config", "settings", "registry", "yaml", "json"]
requires-python = ">=3.7"
dependencies = ["pyyaml>=5.1"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "flake8>=5.0",
    "mypy>=0.990",
]
profiling = ["psutil>=5.8"]
watch = ["watchdog>=2.0"]

[project.urls]
Homepage = "https://github.com/fardin/tahdig"
Documentation = "https://tahdig.readthedocs.io"
Repository = "https://github.com/fardin/tahdig"
"Bug Tracker" = "https://github.com/fardin/tahdig/issues"

[tool.bumpver]
current_version = "0.0.3"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version to {new_version}"
tag_message = "v{new_version}"
commit = false
tag = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['^version = "{version}"', '^current_version = "{version}"']

[tool.setuptools.packages.find]
where = ["."]
include = ["tahdig*"]
exclude = ["tests*", "docs*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.black]
line-length = 100
target-version = ["py37", "py38", "py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = false
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true

[[tool.mypy.overrides]]
module = "watchdog.*"
ignore_missing_imports = true

[dependency-groups]
dev = [
    "build>=0.10.0",
    "bumpver>=2025.1131",
    "pytest>=7.4.4",
    "ruff>=0.14.0",
    "twine>=4.0.2",
]
