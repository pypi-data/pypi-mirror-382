[project]
name = "arm-test-data"
description = """Provides utility functions for accessing data repository for ARM data examples/notebooks"""
requires-python = ">=3.8"
license = {file = "LICENSE"}
keywords = ["arm-test-data", "atmosphere", "meteorology"]
authors = [
    {name = "Atmospheric Data Community Toolkit Dev Team"},
]
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Scientific/Engineering',
    'Operating System :: OS Independent',
    'Intended Audience :: Science/Research',
]
dynamic = ["version", "dependencies", "readme"]

[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "setuptools_scm[toml]>=7.0",
]
build-backend = "setuptools.build_meta"

[project.urls]
homepage = "https://github.com/ARM-DOE/arm-test-data"
documentation = "https://github.com/ARM-DOE/arm-test-data"
repository = "https://github.com/ARM-DOE/arm-test-data"
tracker = "https://github.com/ARM-DOE/arm-test-data/issues"

[tool.setuptools]
packages = ["arm_test_data"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
readme = {file = ["README.md"], content-type = "text/markdown"}

[tool.setuptools_scm]
write_to = "arm_test_data/version.py"
version_scheme = "post-release"
local_scheme= "dirty-tag"
fallback_version = "999"


[tool.black]
line-length = 100
target-version = ['py39']
skip-string-normalization = true

[tool.ruff]
target-version = "py39"
builtins = ["ellipsis"]
exclude = [
    ".eggs",
    "doc",
]

# E402: module level import not at top of file
# E501: line too long - let black worry about that
# E731: do not assign a lambda expression, use a def
ignore = [
    "E402",
    "E501",
    "E731",
]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # Pyupgrade
    "UP",
]

[tool.ruff.isort]
known-first-party = ["arm-test-data"]

[tool.check-manifest]
ignore = ["docs/*", "tests/*", "ci/*"]
