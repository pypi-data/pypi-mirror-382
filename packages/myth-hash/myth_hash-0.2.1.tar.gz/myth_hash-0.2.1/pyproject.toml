[tool.poetry]
name = "myth-hash"
version = "0.2.1"
description = "A tool for generating human-readable, multilingual fantasy character names based on input string hashes."
authors = ["Claas Flint <claas.flint@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/cl445/myth-hash"
repository = "https://github.com/cl445/myth-hash"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Typing :: Typed"
]
include = ["data/*.json", "py.typed"]
packages = [{include = "myth_hash"}]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"

[tool.poetry.scripts]
myth-hash = "myth_hash.cli:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
bandit = "*"
black = "*"
isort = "*"
mypy = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
pyupgrade = "*"
nox = "*"

[tool.bandit]
exclude = ["tests/*.py", "venv/*.py"]

[tool.mypy]
python_version = "3.14"
disable_error_code = ["attr-defined"]
strict = true
ignore_missing_imports = true
warn_unused_configs = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_redundant_casts = true
exclude = ["tests/", "noxfile.py"]

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "line-too-long"
]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.black]
line-length = 88
target-version = ['py311', 'py312', 'py313', 'py314']

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true