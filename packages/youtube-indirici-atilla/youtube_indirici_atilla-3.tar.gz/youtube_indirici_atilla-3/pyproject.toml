[build-system]
# Paket oluşturmak için kullanılan araçları (build backend) tanımlar.
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
# Paket adı: PyPI'da benzersiz olmalıdır.
name = "youtube-indirici-atilla" # Genellikle küçük harf ve tire/alt çizgi
version = "3" # Başlangıç sürümü
authors = [
  {name = "Atilla"}, # Kendi e-postanızla değiştirin
  {name = "Python Kod Asistanı (Gemini)"},
]
description = "Komut satırından YouTube videolarını MP4 olarak indirmek için basit ama güçlü bir Python paketi."
readme = "README.md"
requires-python = ">=3.13" # Desteklenen minimum Python versiyonu
keywords = ["youtube", "indirici", "yt-dlp", "gui"]
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

# Bağımlılıklar: pip, bu paketleri otomatik olarak kuracaktır.
dependencies = [
   "yt-dlp",
   "Pillow", # Tkinter ile beraber Pillow (PIL) kullanılabilir, ancak yt-dlp için şart değil.
    # Eğer bu kod parçacığında Tkinter kullanıyorsak ve 
    # Tkinter'in kendisi bir Python modülü değilse, bu listeye
    # özel bir Tkinter bağımlılığı eklemek zor olabilir. 
    # Ancak, filedialog için gereklidir, bu yüzden Python'un standart
    # kütüphanesine güveniriz. yt-dlp'nin ffmpeg gereksinimini
    # burada belirtmeye gerek yok, ancak kullanıcı bilgilendirilmelidir.
]


[tool.setuptools.packages.find]
# setuptools'a kaynak kodun nerede olduğunu söyler.
where = ["."]

[project.scripts]
# Konsol komutu oluşturma: 'komut_adi = paket_adi.modul:fonksiyon'
# Bu, kullanıcının terminalde 'youtube-indir' yazıp paketi çalıştırmasını sağlar.
"ytvi" = "youtube_indirici.indir:indir_video_cli"