{"version":3,"file":"linear-BMJe3EzA.js","sources":["../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/descending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/number.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/round.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-format/src/precisionRound.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-scale/src/linear.js"],"sourcesContent":["export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n"],"names":["ascending","a","b","descending","bisector","f","compare1","compare2","delta","d","x","zero","left","lo","hi","mid","right","center","i","number","ascendingBisect","bisectRight","e10","e5","e2","tickSpec","start","stop","count","step","power","error","factor","i1","i2","inc","ticks","reverse","n","tickIncrement","tickStep","numberArray","c","t","isNumberArray","genericArray","nb","na","value","date","object","k","interpolate","constant","color","rgb","string","interpolateRound","formatDecimal","formatDecimalParts","p","coefficient","exponent","formatGroup","grouping","thousands","width","j","g","length","formatNumerals","numerals","re","formatSpecifier","specifier","match","FormatSpecifier","formatTrim","s","out","i0","prefixExponent","formatPrefixAuto","formatRounded","formatTypes","identity$1","map","prefixes","formatLocale","locale","group","identity","currencyPrefix","currencySuffix","decimal","percent","minus","nan","newFormat","fill","align","sign","symbol","comma","precision","trim","type","prefix","suffix","formatType","maybeSuffix","format","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","e","defaultLocale","definition","precisionFixed","precisionPrefix","precisionRound","max","constants","unit","normalize","clamper","bimap","domain","range","d0","d1","r0","r1","polymap","r","bisect","copy","source","target","transformer","interpolateValue","transform","untransform","unknown","clamp","piecewise","output","input","rescale","scale","y","interpolateNumber","_","u","continuous","tickFormat","linearish","prestep","maxIter","linear","initRange"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]}