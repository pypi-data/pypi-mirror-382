{"version":3,"file":"svgDrawCommon-3ba9043b-D-hdEU07.js","sources":["../node_modules/mermaid/dist/svgDrawCommon-3ba9043b.js"],"sourcesContent":["import { sanitizeUrl } from \"@braintree/sanitize-url\";\nimport { J as lineBreakRegex } from \"./mermaid-ad1dc92f.js\";\nconst drawRect = (element, rectData) => {\n  const rectElement = element.append(\"rect\");\n  rectElement.attr(\"x\", rectData.x);\n  rectElement.attr(\"y\", rectData.y);\n  rectElement.attr(\"fill\", rectData.fill);\n  rectElement.attr(\"stroke\", rectData.stroke);\n  rectElement.attr(\"width\", rectData.width);\n  rectElement.attr(\"height\", rectData.height);\n  if (rectData.name) {\n    rectElement.attr(\"name\", rectData.name);\n  }\n  rectData.rx !== void 0 && rectElement.attr(\"rx\", rectData.rx);\n  rectData.ry !== void 0 && rectElement.attr(\"ry\", rectData.ry);\n  if (rectData.attrs !== void 0) {\n    for (const attrKey in rectData.attrs) {\n      rectElement.attr(attrKey, rectData.attrs[attrKey]);\n    }\n  }\n  rectData.class !== void 0 && rectElement.attr(\"class\", rectData.class);\n  return rectElement;\n};\nconst drawBackgroundRect = (element, bounds) => {\n  const rectData = {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    stroke: bounds.stroke,\n    class: \"rect\"\n  };\n  const rectElement = drawRect(element, rectData);\n  rectElement.lower();\n};\nconst drawText = (element, textData) => {\n  const nText = textData.text.replace(lineBreakRegex, \" \");\n  const textElem = element.append(\"text\");\n  textElem.attr(\"x\", textData.x);\n  textElem.attr(\"y\", textData.y);\n  textElem.attr(\"class\", \"legend\");\n  textElem.style(\"text-anchor\", textData.anchor);\n  textData.class !== void 0 && textElem.attr(\"class\", textData.class);\n  const tspan = textElem.append(\"tspan\");\n  tspan.attr(\"x\", textData.x + textData.textMargin * 2);\n  tspan.text(nText);\n  return textElem;\n};\nconst drawImage = (elem, x, y, link) => {\n  const imageElement = elem.append(\"image\");\n  imageElement.attr(\"x\", x);\n  imageElement.attr(\"y\", y);\n  const sanitizedLink = sanitizeUrl(link);\n  imageElement.attr(\"xlink:href\", sanitizedLink);\n};\nconst drawEmbeddedImage = (element, x, y, link) => {\n  const imageElement = element.append(\"use\");\n  imageElement.attr(\"x\", x);\n  imageElement.attr(\"y\", y);\n  const sanitizedLink = sanitizeUrl(link);\n  imageElement.attr(\"xlink:href\", `#${sanitizedLink}`);\n};\nconst getNoteRect = () => {\n  const noteRectData = {\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100,\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    anchor: \"start\",\n    rx: 0,\n    ry: 0\n  };\n  return noteRectData;\n};\nconst getTextObj = () => {\n  const testObject = {\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100,\n    \"text-anchor\": \"start\",\n    style: \"#666\",\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n    tspan: true\n  };\n  return testObject;\n};\nexport {\n  drawBackgroundRect as a,\n  drawEmbeddedImage as b,\n  drawImage as c,\n  drawRect as d,\n  getTextObj as e,\n  drawText as f,\n  getNoteRect as g\n};\n"],"names":["drawRect","element","rectData","rectElement","attrKey","drawBackgroundRect","bounds","drawText","textData","nText","lineBreakRegex","textElem","tspan","drawImage","elem","x","y","link","imageElement","sanitizedLink","sanitizeUrl","drawEmbeddedImage","getNoteRect","getTextObj"],"mappings":";AAEK,MAACA,IAAW,CAACC,GAASC,MAAa;AACtC,QAAMC,IAAcF,EAAQ,OAAO,MAAM;AAYzC,MAXAE,EAAY,KAAK,KAAKD,EAAS,CAAC,GAChCC,EAAY,KAAK,KAAKD,EAAS,CAAC,GAChCC,EAAY,KAAK,QAAQD,EAAS,IAAI,GACtCC,EAAY,KAAK,UAAUD,EAAS,MAAM,GAC1CC,EAAY,KAAK,SAASD,EAAS,KAAK,GACxCC,EAAY,KAAK,UAAUD,EAAS,MAAM,GACtCA,EAAS,QACXC,EAAY,KAAK,QAAQD,EAAS,IAAI,GAExCA,EAAS,OAAO,UAAUC,EAAY,KAAK,MAAMD,EAAS,EAAE,GAC5DA,EAAS,OAAO,UAAUC,EAAY,KAAK,MAAMD,EAAS,EAAE,GACxDA,EAAS,UAAU;AACrB,eAAWE,KAAWF,EAAS;AAC7B,MAAAC,EAAY,KAAKC,GAASF,EAAS,MAAME,CAAO,CAAC;AAGrD,SAAAF,EAAS,UAAU,UAAUC,EAAY,KAAK,SAASD,EAAS,KAAK,GAC9DC;AACT,GACME,IAAqB,CAACJ,GAASK,MAAW;AAC9C,QAAMJ,IAAW;AAAA,IACf,GAAGI,EAAO;AAAA,IACV,GAAGA,EAAO;AAAA,IACV,OAAOA,EAAO,QAAQA,EAAO;AAAA,IAC7B,QAAQA,EAAO,QAAQA,EAAO;AAAA,IAC9B,MAAMA,EAAO;AAAA,IACb,QAAQA,EAAO;AAAA,IACf,OAAO;AAAA,EACX;AAEE,EADoBN,EAASC,GAASC,CAAQ,EAClC,MAAK;AACnB,GACMK,IAAW,CAACN,GAASO,MAAa;AACtC,QAAMC,IAAQD,EAAS,KAAK,QAAQE,GAAgB,GAAG,GACjDC,IAAWV,EAAQ,OAAO,MAAM;AACtC,EAAAU,EAAS,KAAK,KAAKH,EAAS,CAAC,GAC7BG,EAAS,KAAK,KAAKH,EAAS,CAAC,GAC7BG,EAAS,KAAK,SAAS,QAAQ,GAC/BA,EAAS,MAAM,eAAeH,EAAS,MAAM,GAC7CA,EAAS,UAAU,UAAUG,EAAS,KAAK,SAASH,EAAS,KAAK;AAClE,QAAMI,IAAQD,EAAS,OAAO,OAAO;AACrC,SAAAC,EAAM,KAAK,KAAKJ,EAAS,IAAIA,EAAS,aAAa,CAAC,GACpDI,EAAM,KAAKH,CAAK,GACTE;AACT,GACME,IAAY,CAACC,GAAMC,GAAGC,GAAGC,MAAS;AACtC,QAAMC,IAAeJ,EAAK,OAAO,OAAO;AACxC,EAAAI,EAAa,KAAK,KAAKH,CAAC,GACxBG,EAAa,KAAK,KAAKF,CAAC;AACxB,QAAMG,IAAgBC,EAAAA,YAAYH,CAAI;AACtC,EAAAC,EAAa,KAAK,cAAcC,CAAa;AAC/C,GACME,IAAoB,CAACpB,GAASc,GAAGC,GAAGC,MAAS;AACjD,QAAMC,IAAejB,EAAQ,OAAO,KAAK;AACzC,EAAAiB,EAAa,KAAK,KAAKH,CAAC,GACxBG,EAAa,KAAK,KAAKF,CAAC;AACxB,QAAMG,IAAgBC,EAAAA,YAAYH,CAAI;AACtC,EAAAC,EAAa,KAAK,cAAc,IAAIC,CAAa,EAAE;AACrD,GACMG,IAAc,OACG;AAAA,EACnB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,IAAI;AAAA,EACJ,IAAI;AACR,IAGMC,IAAa,OACE;AAAA,EACjB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,eAAe;AAAA,EACf,OAAO;AAAA,EACP,YAAY;AAAA,EACZ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,OAAO;AACX;","x_google_ignoreList":[0]}