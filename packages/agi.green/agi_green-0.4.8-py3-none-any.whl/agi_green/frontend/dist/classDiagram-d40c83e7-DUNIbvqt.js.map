{"version":3,"file":"classDiagram-d40c83e7-DUNIbvqt.js","sources":["../node_modules/mermaid/dist/classDiagram-d40c83e7.js"],"sourcesContent":["import { p as parser, d as db, s as styles } from \"./styles-5f03d8d2.js\";\nimport { line, curveBasis, select } from \"d3\";\nimport { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { u as utils, l as log, x as parseGenericTypes, c as getConfig, i as configureSvgSize } from \"./mermaid-ad1dc92f.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nlet edgeCount = 0;\nconst drawEdge = function(elem, path, relation, conf, diagObj) {\n  const getRelationType = function(type) {\n    switch (type) {\n      case diagObj.db.relationType.AGGREGATION:\n        return \"aggregation\";\n      case diagObj.db.relationType.EXTENSION:\n        return \"extension\";\n      case diagObj.db.relationType.COMPOSITION:\n        return \"composition\";\n      case diagObj.db.relationType.DEPENDENCY:\n        return \"dependency\";\n      case diagObj.db.relationType.LOLLIPOP:\n        return \"lollipop\";\n    }\n  };\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"relation\");\n  let url = \"\";\n  if (conf.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  if (relation.relation.lineType == 1) {\n    svgPath.attr(\"class\", \"relation dashed-line\");\n  }\n  if (relation.relation.lineType == 10) {\n    svgPath.attr(\"class\", \"relation dotted-line\");\n  }\n  if (relation.relation.type1 !== \"none\") {\n    svgPath.attr(\n      \"marker-start\",\n      \"url(\" + url + \"#\" + getRelationType(relation.relation.type1) + \"Start)\"\n    );\n  }\n  if (relation.relation.type2 !== \"none\") {\n    svgPath.attr(\n      \"marker-end\",\n      \"url(\" + url + \"#\" + getRelationType(relation.relation.type2) + \"End)\"\n    );\n  }\n  let x, y;\n  const l = path.points.length;\n  let labelPosition = utils.calcLabelPosition(path.points);\n  x = labelPosition.x;\n  y = labelPosition.y;\n  let p1_card_x, p1_card_y;\n  let p2_card_x, p2_card_y;\n  if (l % 2 !== 0 && l > 1) {\n    let cardinality_1_point = utils.calcCardinalityPosition(\n      relation.relation.type1 !== \"none\",\n      path.points,\n      path.points[0]\n    );\n    let cardinality_2_point = utils.calcCardinalityPosition(\n      relation.relation.type2 !== \"none\",\n      path.points,\n      path.points[l - 1]\n    );\n    log.debug(\"cardinality_1_point \" + JSON.stringify(cardinality_1_point));\n    log.debug(\"cardinality_2_point \" + JSON.stringify(cardinality_2_point));\n    p1_card_x = cardinality_1_point.x;\n    p1_card_y = cardinality_1_point.y;\n    p2_card_x = cardinality_2_point.x;\n    p2_card_y = cardinality_2_point.y;\n  }\n  if (relation.title !== void 0) {\n    const g = elem.append(\"g\").attr(\"class\", \"classLabel\");\n    const label = g.append(\"text\").attr(\"class\", \"label\").attr(\"x\", x).attr(\"y\", y).attr(\"fill\", \"red\").attr(\"text-anchor\", \"middle\").text(relation.title);\n    window.label = label;\n    const bounds = label.node().getBBox();\n    g.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", bounds.x - conf.padding / 2).attr(\"y\", bounds.y - conf.padding / 2).attr(\"width\", bounds.width + conf.padding).attr(\"height\", bounds.height + conf.padding);\n  }\n  log.info(\"Rendering relation \" + JSON.stringify(relation));\n  if (relation.relationTitle1 !== void 0 && relation.relationTitle1 !== \"none\") {\n    const g = elem.append(\"g\").attr(\"class\", \"cardinality\");\n    g.append(\"text\").attr(\"class\", \"type1\").attr(\"x\", p1_card_x).attr(\"y\", p1_card_y).attr(\"fill\", \"black\").attr(\"font-size\", \"6\").text(relation.relationTitle1);\n  }\n  if (relation.relationTitle2 !== void 0 && relation.relationTitle2 !== \"none\") {\n    const g = elem.append(\"g\").attr(\"class\", \"cardinality\");\n    g.append(\"text\").attr(\"class\", \"type2\").attr(\"x\", p2_card_x).attr(\"y\", p2_card_y).attr(\"fill\", \"black\").attr(\"font-size\", \"6\").text(relation.relationTitle2);\n  }\n  edgeCount++;\n};\nconst drawClass = function(elem, classDef, conf, diagObj) {\n  log.debug(\"Rendering class \", classDef, conf);\n  const id = classDef.id;\n  const classInfo = {\n    id,\n    label: classDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", diagObj.db.lookUpDomId(id)).attr(\"class\", \"classGroup\");\n  let title;\n  if (classDef.link) {\n    title = g.append(\"svg:a\").attr(\"xlink:href\", classDef.link).attr(\"target\", classDef.linkTarget).append(\"text\").attr(\"y\", conf.textHeight + conf.padding).attr(\"x\", 0);\n  } else {\n    title = g.append(\"text\").attr(\"y\", conf.textHeight + conf.padding).attr(\"x\", 0);\n  }\n  let isFirst = true;\n  classDef.annotations.forEach(function(member) {\n    const titleText2 = title.append(\"tspan\").text(\"«\" + member + \"»\");\n    if (!isFirst) {\n      titleText2.attr(\"dy\", conf.textHeight);\n    }\n    isFirst = false;\n  });\n  let classTitleString = getClassTitleString(classDef);\n  const classTitle = title.append(\"tspan\").text(classTitleString).attr(\"class\", \"title\");\n  if (!isFirst) {\n    classTitle.attr(\"dy\", conf.textHeight);\n  }\n  const titleHeight = title.node().getBBox().height;\n  let membersLine;\n  let membersBox;\n  let methodsLine;\n  if (classDef.members.length > 0) {\n    membersLine = g.append(\"line\").attr(\"x1\", 0).attr(\"y1\", conf.padding + titleHeight + conf.dividerMargin / 2).attr(\"y2\", conf.padding + titleHeight + conf.dividerMargin / 2);\n    const members = g.append(\"text\").attr(\"x\", conf.padding).attr(\"y\", titleHeight + conf.dividerMargin + conf.textHeight).attr(\"fill\", \"white\").attr(\"class\", \"classText\");\n    isFirst = true;\n    classDef.members.forEach(function(member) {\n      addTspan(members, member, isFirst, conf);\n      isFirst = false;\n    });\n    membersBox = members.node().getBBox();\n  }\n  if (classDef.methods.length > 0) {\n    methodsLine = g.append(\"line\").attr(\"x1\", 0).attr(\"y1\", conf.padding + titleHeight + conf.dividerMargin + membersBox.height).attr(\"y2\", conf.padding + titleHeight + conf.dividerMargin + membersBox.height);\n    const methods = g.append(\"text\").attr(\"x\", conf.padding).attr(\"y\", titleHeight + 2 * conf.dividerMargin + membersBox.height + conf.textHeight).attr(\"fill\", \"white\").attr(\"class\", \"classText\");\n    isFirst = true;\n    classDef.methods.forEach(function(method) {\n      addTspan(methods, method, isFirst, conf);\n      isFirst = false;\n    });\n  }\n  const classBox = g.node().getBBox();\n  var cssClassStr = \" \";\n  if (classDef.cssClasses.length > 0) {\n    cssClassStr = cssClassStr + classDef.cssClasses.join(\" \");\n  }\n  const rect = g.insert(\"rect\", \":first-child\").attr(\"x\", 0).attr(\"y\", 0).attr(\"width\", classBox.width + 2 * conf.padding).attr(\"height\", classBox.height + conf.padding + 0.5 * conf.dividerMargin).attr(\"class\", cssClassStr);\n  const rectWidth = rect.node().getBBox().width;\n  title.node().childNodes.forEach(function(x) {\n    x.setAttribute(\"x\", (rectWidth - x.getBBox().width) / 2);\n  });\n  if (classDef.tooltip) {\n    title.insert(\"title\").text(classDef.tooltip);\n  }\n  if (membersLine) {\n    membersLine.attr(\"x2\", rectWidth);\n  }\n  if (methodsLine) {\n    methodsLine.attr(\"x2\", rectWidth);\n  }\n  classInfo.width = rectWidth;\n  classInfo.height = classBox.height + conf.padding + 0.5 * conf.dividerMargin;\n  return classInfo;\n};\nconst getClassTitleString = function(classDef) {\n  let classTitleString = classDef.id;\n  if (classDef.type) {\n    classTitleString += \"<\" + parseGenericTypes(classDef.type) + \">\";\n  }\n  return classTitleString;\n};\nconst drawNote = function(elem, note, conf, diagObj) {\n  log.debug(\"Rendering note \", note, conf);\n  const id = note.id;\n  const noteInfo = {\n    id,\n    text: note.text,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"classGroup\");\n  let text = g.append(\"text\").attr(\"y\", conf.textHeight + conf.padding).attr(\"x\", 0);\n  const lines = JSON.parse(`\"${note.text}\"`).split(\"\\n\");\n  lines.forEach(function(line2) {\n    log.debug(`Adding line: ${line2}`);\n    text.append(\"tspan\").text(line2).attr(\"class\", \"title\").attr(\"dy\", conf.textHeight);\n  });\n  const noteBox = g.node().getBBox();\n  const rect = g.insert(\"rect\", \":first-child\").attr(\"x\", 0).attr(\"y\", 0).attr(\"width\", noteBox.width + 2 * conf.padding).attr(\n    \"height\",\n    noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin\n  );\n  const rectWidth = rect.node().getBBox().width;\n  text.node().childNodes.forEach(function(x) {\n    x.setAttribute(\"x\", (rectWidth - x.getBBox().width) / 2);\n  });\n  noteInfo.width = rectWidth;\n  noteInfo.height = noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin;\n  return noteInfo;\n};\nconst addTspan = function(textEl, member, isFirst, conf) {\n  const { displayText, cssStyle } = member.getDisplayDetails();\n  const tSpan = textEl.append(\"tspan\").attr(\"x\", conf.padding).text(displayText);\n  if (cssStyle !== \"\") {\n    tSpan.attr(\"style\", member.cssStyle);\n  }\n  if (!isFirst) {\n    tSpan.attr(\"dy\", conf.textHeight);\n  }\n};\nconst svgDraw = {\n  getClassTitleString,\n  drawClass,\n  drawEdge,\n  drawNote\n};\nlet idCache = {};\nconst padding = 20;\nconst getGraphId = function(label) {\n  const foundEntry = Object.entries(idCache).find((entry) => entry[1].label === label);\n  if (foundEntry) {\n    return foundEntry[0];\n  }\n};\nconst insertMarkers = function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"extensionStart\").attr(\"class\", \"extension\").attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,7 L18,13 V 1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"extensionEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,1 V 13 L18,7 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"compositionStart\").attr(\"class\", \"extension\").attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"compositionEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"aggregationStart\").attr(\"class\", \"extension\").attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"aggregationEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyStart\").attr(\"class\", \"extension\").attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 5,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L14,7 L9,1 Z\");\n};\nconst draw = function(text, id, _version, diagObj) {\n  const conf = getConfig().class;\n  idCache = {};\n  log.info(\"Rendering diagram \" + text);\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const g = new graphlib.Graph({\n    multigraph: true\n  });\n  g.setGraph({\n    isMultiGraph: true\n  });\n  g.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const classes = diagObj.db.getClasses();\n  const keys = Object.keys(classes);\n  for (const key of keys) {\n    const classDef = classes[key];\n    const node = svgDraw.drawClass(diagram2, classDef, conf, diagObj);\n    idCache[node.id] = node;\n    g.setNode(node.id, node);\n    log.info(\"Org height: \" + node.height);\n  }\n  const relations = diagObj.db.getRelations();\n  relations.forEach(function(relation) {\n    log.info(\n      // cspell:ignore tjoho\n      \"tjoho\" + getGraphId(relation.id1) + getGraphId(relation.id2) + JSON.stringify(relation)\n    );\n    g.setEdge(\n      getGraphId(relation.id1),\n      getGraphId(relation.id2),\n      {\n        relation\n      },\n      relation.title || \"DEFAULT\"\n    );\n  });\n  const notes = diagObj.db.getNotes();\n  notes.forEach(function(note) {\n    log.debug(`Adding note: ${JSON.stringify(note)}`);\n    const node = svgDraw.drawNote(diagram2, note, conf, diagObj);\n    idCache[node.id] = node;\n    g.setNode(node.id, node);\n    if (note.class && note.class in classes) {\n      g.setEdge(\n        note.id,\n        getGraphId(note.class),\n        {\n          relation: {\n            id1: note.id,\n            id2: note.class,\n            relation: {\n              type1: \"none\",\n              type2: \"none\",\n              lineType: 10\n            }\n          }\n        },\n        \"DEFAULT\"\n      );\n    }\n  });\n  layout(g);\n  g.nodes().forEach(function(v) {\n    if (v !== void 0 && g.node(v) !== void 0) {\n      log.debug(\"Node \" + v + \": \" + JSON.stringify(g.node(v)));\n      root.select(\"#\" + (diagObj.db.lookUpDomId(v) || v)).attr(\n        \"transform\",\n        \"translate(\" + (g.node(v).x - g.node(v).width / 2) + \",\" + (g.node(v).y - g.node(v).height / 2) + \" )\"\n      );\n    }\n  });\n  g.edges().forEach(function(e) {\n    if (e !== void 0 && g.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(g.edge(e)));\n      svgDraw.drawEdge(diagram2, g.edge(e), g.edge(e).relation, conf, diagObj);\n    }\n  });\n  const svgBounds = diagram2.node().getBBox();\n  const width = svgBounds.width + padding * 2;\n  const height = svgBounds.height + padding * 2;\n  configureSvgSize(diagram2, height, width, conf.useMaxWidth);\n  const vBox = `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`;\n  log.debug(`viewBox ${vBox}`);\n  diagram2.attr(\"viewBox\", vBox);\n};\nconst renderer = {\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.class) {\n      cnf.class = {};\n    }\n    cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"names":["edgeCount","drawEdge","elem","path","relation","conf","diagObj","getRelationType","type","p","lineData","lineFunction","line","d","curveBasis","svgPath","url","x","y","l","labelPosition","utils","p1_card_x","p1_card_y","p2_card_x","p2_card_y","cardinality_1_point","cardinality_2_point","log","g","label","bounds","drawClass","classDef","id","classInfo","title","isFirst","member","titleText2","classTitleString","getClassTitleString","classTitle","titleHeight","membersLine","membersBox","methodsLine","members","addTspan","methods","method","classBox","cssClassStr","rectWidth","parseGenericTypes","drawNote","note","noteInfo","text","lines","line2","noteBox","textEl","displayText","cssStyle","tSpan","svgDraw","idCache","padding","getGraphId","foundEntry","entry","insertMarkers","draw","_version","getConfig","securityLevel","sandboxElement","select","root","diagram2","graphlib.Graph","classes","keys","key","node","layout","v","svgBounds","width","height","configureSvgSize","vBox","renderer","diagram","parser","db","styles","cnf"],"mappings":"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","x_google_ignoreList":[0]}