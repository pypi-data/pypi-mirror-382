[project]
name = "isd-tui"
requires-python = ">=3.11"
license = "GPL-3.0-or-later"
license-files = ["LICENSE"]
readme = "README.md"
description = "Interactive systemd TUI"
keywords = ["systemd", "tui", "service-manager"]
classifiers = [
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Systems Administration",
    "Topic :: Terminals",
    "Topic :: Utilities",
]

dependencies = [
    "xdg-base-dirs>=6.0.0",
    "pfzy>=0.3.4",
    "textual>=3.0.0",
    "pydantic-settings[yaml]>=2.7.0",
    "pydantic>=2.10.4",
    "types-pyyaml>=6.0.12.20241221",
]
version = "0.6.1"

# # versioningit was great in theory
# # but it comes with too many issues for packaging
# # in other distros. :/
# # https://github.com/jwodder/versioningit
# dynamic = ["version"]
# [tool.hatch.version]
# source = "versioningit"
# [tool.versioningit]

[dependency-groups]
dev = [
    "bump-my-version>=0.30.1",
    "memray>=1.15.0",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.3",
    "pytest-textual-snapshot>=1.1.0",
    "pytest-xdist[psutil]>=3.6.1",
    # Remove LSP deps
    # "pylsp-mypy>=0.6.9",
    # "pylsp-rope>=0.1.17",
    # "python-lsp-isort>=0.2.0",
    # "python-lsp-ruff>=2.2.2",
    # "python-lsp-server>=1.12.0",
    "textual-dev>=1.7.0",
]
docs = [
  "mkdocs",
  "mkdocs-material[imaging]",
  "mkdocs-macros-plugin",
  "markdown-callouts",
]

[build-system]
# requires = ["hatchling", "editables"]
requires = ["hatchling", "editables", "setuptools"]
build-backend = "hatchling.build"
# build-backend = "hatchling.ouroboros"

[project.scripts]
isd = "isd_tui.isd:main"
# only for compatibility when running
# `uvx isd-tui`
isd-tui = "isd_tui.isd:main"

[project.urls]
Hompage = "https://github.com/kainctl/isd"
Documentation = "https://kainctl.github.io/isd/"
Repository = "https://github.com/kainctl/isd"
"Bug Tracker" = "https://github.com/kainctl/isd/issues"

# build.hooks.<HOOK_NAME> is global
# and applied to _all_ build targets
# [tool.hatch.build.hooks.custom]

[tool.hatch.build]
exclude = [
    "docs/",
    "docs_glossary/",
    "flake.nix",
    "flake.lock",
    "mkdocs.yml",
    "macros.py",
    "*.tape",
    "src/isd/*.md"
]

[tool.hatch.build.targets.wheel.shared-data]
"share/" = "share/"

[tool.bumpversion]
current_version = "0.6.1"
parse = """
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        -                             # dash separator for pre-release section
        (?P<pre_l>[a-zA-Z-]+)         # pre-release label
        (?:0|[1-9]\\d*)               # pre-release version number
    )?                                # pre-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}-{pre_l}{distance_to_latest_tag}",
    "{major}.{minor}.{patch}",
]
search = """version = "{current_version}""""
replace = """version = "{new_version}""""
regex = false
ignore_missing_version = false
ignore_missing_files = false
# do not tag with bump, as I want to tag a merged PR on main
# and not the PR commit that will probably be squashed.
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = true
commit = false
message = "Bump version: {current_version} → {new_version}"
moveable_tags = []
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[[tool.bumpversion.files]]
filename = "pyproject.toml"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

