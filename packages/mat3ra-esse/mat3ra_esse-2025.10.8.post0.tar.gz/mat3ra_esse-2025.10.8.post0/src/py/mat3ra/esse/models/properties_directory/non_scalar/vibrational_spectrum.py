# generated by datamodel-codegen:
#   filename:  properties_directory/non_scalar/vibrational_spectrum.json
#   version:   0.28.5

from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union

from pydantic import BaseModel, Field


class Label(Enum):
    frequency = "frequency"
    wavenumber = "wavenumber"


class Units(Enum):
    cm_1 = "cm-1"
    THz = "THz"
    meV = "meV"


class AxisSchema(BaseModel):
    label: Label
    """
    label of an axis object
    """
    units: Optional[Units] = None
    """
    units for an axis
    """


class Label33(Enum):
    Intensity = "Intensity"
    Absorbance = "Absorbance"
    Absorption_coefficient = "Absorption coefficient"


class Units336(Enum):
    field_debye_angstrom__2 = "(debye/angstrom)^2"
    km_mol = "km/mol"
    m_mol = "m/mol"
    a_u_ = "a.u."


class AxisSchema36(BaseModel):
    label: Label33
    """
    label of an axis object
    """
    units: Optional[Units336] = None
    """
    units for an axis
    """


class Name(Enum):
    vibrational_spectrum = "vibrational_spectrum"


class VibrationalSpectrumPropertySchema(BaseModel):
    xAxis: AxisSchema = Field(..., title="axis schema")
    yAxis: AxisSchema36 = Field(..., title="axis schema")
    name: Name
    xDataArray: List[Union[float, List[float]]]
    """
    array containing values of x Axis
    """
    yDataSeries: List[List[float]] = Field(..., title="1 dimension data series schema")
