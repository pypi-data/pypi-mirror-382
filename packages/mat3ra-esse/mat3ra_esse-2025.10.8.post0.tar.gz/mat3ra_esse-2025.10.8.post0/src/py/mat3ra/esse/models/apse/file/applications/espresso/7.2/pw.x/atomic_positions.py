# generated by datamodel-codegen:
#   filename:  apse/file/applications/espresso/7.2/pw.x/atomic_positions.json
#   version:   0.28.5

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, ConfigDict, Field, conint


class CardOption(Enum):
    alat = "alat"
    bohr = "bohr"
    angstrom = "angstrom"
    crystal = "crystal"
    crystal_sg = "crystal_sg"


class Value(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    X: Optional[str] = None
    """
    label of the atom as specified in ATOMIC_SPECIES
    """
    x: float
    """
    atomic positions
    """
    y: float
    """
    atomic positions
    """
    z: float
    """
    atomic positions
    """
    if_pos_1_: Optional[conint(ge=0, le=1)] = Field(None, alias="if_pos(1)", title="integer one or zero")
    if_pos_2_: Optional[conint(ge=0, le=1)] = Field(None, alias="if_pos(2)", title="integer one or zero")
    if_pos_3_: Optional[conint(ge=0, le=1)] = Field(None, alias="if_pos(3)", title="integer one or zero")


class AtomicPositionsSchema(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    card_option: Optional[CardOption] = "alat"
    values: Optional[List[Value]] = None
