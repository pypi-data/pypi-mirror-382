# generated by datamodel-codegen:
#   filename:  properties_directory/structural/basis/boundary_conditions.json
#   version:   0.28.5

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel


class Name(Enum):
    boundary_conditions = "boundary_conditions"


class Type(Enum):
    pbc = "pbc"
    bc1 = "bc1"
    bc2 = "bc2"
    bc3 = "bc3"


class BoundaryConditionsPropertySchema(BaseModel):
    name: Name
    type: Optional[Type] = "pbc"
    """
    If assume_isolated = 'esm', determines the boundary conditions used for either side of the slab.
    """
    offset: float
