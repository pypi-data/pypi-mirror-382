# generated by datamodel-codegen:
#   filename:  methods_directory/legacy/unknown.json
#   version:   0.28.5

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, Optional

from pydantic import BaseModel


class Type(Enum):
    unknown = "unknown"


class Subtype(Enum):
    unknown = "unknown"


class LegacyMethodUnknown(BaseModel):
    type: Type
    """
    general type of this method, eg. `pseudopotential`
    """
    subtype: Subtype
    """
    general subtype of this method, eg. `ultra-soft`
    """
    precision: Optional[Dict[str, Any]] = None
    """
    Object showing the actual possible precision based on theory and implementation
    """
    data: Optional[Dict[str, Any]] = None
    """
    additional data specific to method, eg. array of pseudopotentials
    """
