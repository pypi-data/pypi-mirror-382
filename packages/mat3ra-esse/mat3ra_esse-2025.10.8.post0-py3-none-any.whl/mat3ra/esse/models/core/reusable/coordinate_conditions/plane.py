# generated by datamodel-codegen:
#   filename:  core/reusable/coordinate_conditions/plane.json
#   version:   0.28.5

from __future__ import annotations

from enum import Enum
from typing import List, Literal

from pydantic import BaseModel, Field


class CoordinateShapeEnum(Enum):
    cylinder = "cylinder"
    sphere = "sphere"
    box = "box"
    triangular_prism = "triangular_prism"
    plane = "plane"


class PlaneCoordinateConditionSchema(BaseModel):
    shape: Literal["plane"] = Field("plane", title="Coordinate Shape Enum")
    plane_normal: List[float] = Field(..., max_length=3, min_length=3, title="coordinate 3d schema")
    plane_point_coordinate: List[float] = Field(..., max_length=3, min_length=3, title="coordinate 3d schema")
