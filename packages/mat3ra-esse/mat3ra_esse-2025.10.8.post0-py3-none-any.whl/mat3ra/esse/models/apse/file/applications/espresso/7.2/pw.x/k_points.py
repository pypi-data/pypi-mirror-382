# generated by datamodel-codegen:
#   filename:  apse/file/applications/espresso/7.2/pw.x/k_points.json
#   version:   0.28.5

from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union

from pydantic import BaseModel, ConfigDict


class CardOption(Enum):
    tpiba = "tpiba"
    automatic = "automatic"
    crystal = "crystal"
    gamma = "gamma"
    tpiba_b = "tpiba_b"
    crystal_b = "crystal_b"
    tpiba_c = "tpiba_c"
    crystal_c = "crystal_c"


class Value(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    nks: Optional[int] = None
    """
    Number of supplied special k-points.
    """
    xk_x: Optional[float] = None
    xk_y: Optional[float] = None
    xk_z: Optional[float] = None
    wk: Optional[float] = None


class Values(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    nk1: Optional[int] = None
    """
    Number of supplied special k-points.
    """
    nk2: Optional[int] = None
    """
    Number of supplied special k-points.
    """
    nk3: Optional[int] = None
    """
    Number of supplied special k-points.
    """
    sk1: Optional[int] = None
    """
    Number of supplied special k-points.
    """
    sk2: Optional[int] = None
    """
    Number of supplied special k-points.
    """
    sk3: Optional[int] = None
    """
    Number of supplied special k-points.
    """


class KPointsSchema(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    card_option: Optional[CardOption] = None
    values: Optional[Union[List[Value], Values]] = None
