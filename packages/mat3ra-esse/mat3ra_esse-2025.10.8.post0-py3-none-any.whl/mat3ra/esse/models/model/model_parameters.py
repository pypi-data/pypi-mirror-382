# generated by datamodel-codegen:
#   filename:  model/model_parameters.json
#   version:   0.28.5

from __future__ import annotations

from enum import Enum
from typing import Optional, Union

from pydantic import BaseModel, ConfigDict, Field, RootModel


class HubbardType(Enum):
    u = "u"


class SpinPolarization(Enum):
    collinear = "collinear"
    non_collinear = "non-collinear"


class DispersionCorrection(Enum):
    dft_d2 = "dft-d2"
    dft_d3 = "dft-d3"
    xdm = "xdm"
    ts = "ts"


class Functional(Enum):
    pz = "pz"


class LDAFunctionalMixin(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    hubbardType: Optional[HubbardType] = None
    spinPolarization: Optional[SpinPolarization] = None
    spinOrbitCoupling: Optional[bool] = None
    dispersionCorrection: Optional[DispersionCorrection] = None
    functional: Optional[Functional] = None


class Functional37(Enum):
    pbe = "pbe"
    pbesol = "pbesol"


class GGAFunctionalMixin(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    hubbardType: Optional[HubbardType] = None
    spinPolarization: Optional[SpinPolarization] = None
    spinOrbitCoupling: Optional[bool] = None
    dispersionCorrection: Optional[DispersionCorrection] = None
    functional: Optional[Functional37] = None


class Functional38(Enum):
    scan = "scan"


class MetaGGAFunctionalMixin(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    hubbardType: Optional[HubbardType] = None
    spinPolarization: Optional[SpinPolarization] = None
    spinOrbitCoupling: Optional[bool] = None
    dispersionCorrection: Optional[DispersionCorrection] = None
    functional: Optional[Functional38] = None


class Functional39(Enum):
    hse06 = "hse06"
    b3lyp = "b3lyp"


class HybridFunctionalMixin(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    hubbardType: Optional[HubbardType] = None
    spinPolarization: Optional[SpinPolarization] = None
    spinOrbitCoupling: Optional[bool] = None
    dispersionCorrection: Optional[DispersionCorrection] = None
    functional: Optional[Functional39] = None


class Functional40(Enum):
    b2plyp = "b2plyp"


class DoubleHybridFunctionalMixin(BaseModel):
    model_config = ConfigDict(
        extra="allow",
    )
    hubbardType: Optional[HubbardType] = None
    spinPolarization: Optional[SpinPolarization] = None
    spinOrbitCoupling: Optional[bool] = None
    dispersionCorrection: Optional[DispersionCorrection] = None
    functional: Optional[Functional40] = None


class ESSE(
    RootModel[
        Union[
            LDAFunctionalMixin,
            GGAFunctionalMixin,
            MetaGGAFunctionalMixin,
            HybridFunctionalMixin,
            DoubleHybridFunctionalMixin,
        ]
    ]
):
    root: Union[
        LDAFunctionalMixin,
        GGAFunctionalMixin,
        MetaGGAFunctionalMixin,
        HybridFunctionalMixin,
        DoubleHybridFunctionalMixin,
    ] = Field(..., title="ModelParameters")
