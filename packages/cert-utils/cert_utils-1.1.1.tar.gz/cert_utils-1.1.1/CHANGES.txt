1.1.1
    - fix "display_name" and "alternates" of letsencrypt staging cross-sign

1.1.0
    - Minor typing updates

    Backwards Incompatible Changes::

    - expired letsencrypt certs are now in a /deprecated subdirectory; payloads reflect this
    - CERT_CA_PAYLOAD, used by CERT_CAS_DATA["compatability"]
        was: Dict[str, str] (name: version)
        now: Dict[str, Tuple[str, Optional[str], Optional[str]]] (name: min, max, note)
    
    - CERT_CAS_DATA: Expired certs have been moved to: CERT_CAS_DEPRECATED
    - _CERT_CAS_ORDER: Expired cert names have been moved to: _CERT_CAS_DEPRECATED_ORDER
    
    Why?
    
    * the compatability matrix needed to split out versions for notes for future comparison. more standardization is needed.
    * the compatability matrix does not account for a max_version, which can happen if a cert is removed from a trust store
    * deprecated certs are maintained for research and historical purposes
    
1.0.6
    * the following functions now accept kwarg `ipv6_require_compressed`, a bool.
      if True (default False), ipv6 values must be compressed.
            - domains_from_list
            - domains_from_string
            - validate_domains
     The initial behavior of LetsEncrypt will be to require compressed ipv6
     addresses, though this may change in the future. The LetsEncrypt API will
     write ipv6 address strings in the compressed format; and the data in
     certificates will be raw bytes.
    * new function `validate_ipv6_address`

1.0.5
    * fixed bug in domain regex that excluded single letter subdomains    
    * added empty __init__.py files for setuptools to be happy
1.0.4
    The following functions now accept new kwargs:
        * kwargs:
            allow_hostname: bool = True
            allow_ipv4: bool = False
            allow_ipv6: bool = False
        * functions
            - domains_from_list
            - domains_from_string
            - validate_domains
    * new functions
        utils.identify_san_type
    * updated repo to not allow admins to bypass rules
    
1.0.3
    * exception did not properly interpolate variable

1.0.2
    * adjustemnts to josepy
      added "CERT_UTILS_FORCE_JOSEPY" env var

1.0.1
    * logging cleanup
    * pinned "josepy<2" in advance of breaking changes;
      no planned changes should affect this library
    * updated pre-commit configuration
        - upgraged black to psf distribution
        - added flake8

1.0.0
    * new_account_key supports LetsEncrypt updates to EC
    * ALLOWED_CURVES_ECDSA is now a list of strings
    * new_ec_key named argument is now curve(str)
    * functions now require KeyTechnologyEnum, not KeyTechnology for key_technology_id
    * added account_key__verify
    * extended account_key__sign to accept `standardize_signature`; default True
      for converting the EC signature to the encoding ACME requires
    * corrected use of `secp256k1` to `secp256r1`
    * `key_technology` concept of "RSA" and "EC" has been renamed to `key_technology_basic`
    * `key_technology` concept is now a tuple of `(key_technology_basic, (data, ))`
      For a RSA, the payload is:
            ("rsa", (rsa_bits,))
      For an EC, the payload is:
            ("ec", (nist_curve_name,))
    * validate_domains now accepts a wildcard

0.2.0
    * replaced pyopenssl with cryptography.
      pyopenssl was originally used because certbot required it and this package
      was originally developed to troubleshoot certbot installations;
      however certbot uses cryptography, so we can consider that to be available
      and it is the officially preferred interface by both projects and the psf.
    * split the package into multiple files
      this is for internal use and organization is subject to change.
      please access the main namespace.
    * dropped Python3.6
      this package requires cryptography>=42.0.0, specifically for chain verification
      cryptography dropped Python3.6 in v41.0.0

0.1.9
    pulled ari serial_no decoder into a separate unction
    parsing akid defensively against edge case variants:
        in web pki it is almost always "keyid:"
        however the rfc allows for "uri:"+"serial:", 
        either in addition to keyid or replacing it
    this should be the final release in the 0.1.x branch;
    work has been started for 0.2.0, which will migrate away from openssl

0.1.8
    added cert_info cli tool

0.1.7
    ARI support
        * ari_construct_identifier()
    added `serial` to parse_cert dicts
    testing on py13

0.1.6
    updated LetsEncrypt data

0.1.5 [deleted from PyPi]
    updated typing and tests
    updated LetsEncrypt data
    
0.1.4
    updated typing for dependencies

0.1.3
    new mypy version caught an issue

0.1.2
    docs improvements
    raise a new `FallbackError_FilepathRequired` exception when missing a
        required fallback filepath

0.1.1
    minor formatting
    Conditional Imports
        imports are tried "one at a time"; not "all or nothing".
        functions that use imports should test for all necessary options
    new extended tests for lacking specific libraries
    tests now monitor logs to ensure fallback behavior is triggered correctly

0.1.0
    initial release
    forked from peter_sslers
