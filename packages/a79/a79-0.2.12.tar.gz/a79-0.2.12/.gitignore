.DS_Store

# Ignore virtual environment directory
venv/

# Ignore Python compiled files
*.pyc
__pycache__/

# Ignore IDE-specific files
.idea/
.vscode/

# Ignore build and distribution directories
build/
dist/

# Ignore pytest cache directory
.pytest_cache/

# Ignore coverage reports
.coverage
htmlcov/

# Ignore Sphinx documentation build directory
docs/_build/

# Ignore pip cache
.cache/

bin/
lib/

# Ignore env
.env
.env.secrets

# Ignore SQLite database
test.db

# Ignore node modules
node_modules

# Only use pnpm
package-lock.json

*.pkl
*.jar

logs/

a79agentapp/

results/

bazel-agentapp/

.terraform

.testmondata*

# Ignore the xml file
llm_xml_out.xml

out/

.prompt_include

.prompt_instructions

debug_node*
services/api_service/src/router/workflows/debug_node*

common_py/workflow/library/notebooks/.ipynb_checkpoints/*

# ignored this file to prevent conflicts, final will be auto-generated on build
services/ui_service/src/output.css

.composio.lock

gha-creds-*.json

### Terraform ###
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

.ci_cache/
