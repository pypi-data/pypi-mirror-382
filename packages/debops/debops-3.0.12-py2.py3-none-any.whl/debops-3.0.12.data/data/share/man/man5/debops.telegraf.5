.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "DEBOPS.TELEGRAF" "5" "Oct 09, 2025" "v3.0.12" "DebOps"
.SH NAME
debops.telegraf \- Manage Telegraf instance using Ansible
.SH SYNOPSIS
.sp
\fBdebops run service/telegraf\fP [\fB\-\-limit\fP \fIgroup,host,\fP\&...] [\fB\-\-diff\fP] [\fB\-\-check\fP] [\fB\-\-tags\fP \fItag1,tag2,\fP\&...] [\fB\-\-skip\-tags\fP \fItag1,tag2,\fP\&...] [<\fBansible\-playbook\fP options>] ...
.SH DESCRIPTION
.sp
Use \fI\%Telegraf\fP <\fBhttps://www.influxdata.com/time-series-platform/telegraf/\fP> to collect and write metrics into InfluxDB and other supported outputs.
Telegraf is the open source server agent to help you collect metrics from your stacks, sensors and systems.
.sp
The \fBdebops.telegraf\fP role installs and configures Telegraf.
.SH GETTING STARTED
.SH REAL WORLD USE
.sp
Telegraf requires at least one input and output defined. Default
\fBdebops.telegraf\fP configuration will include a few basic input plugins (cpu,
mem, disk, etc.) but output will be discarded by default using the
\fBoutputs.discard\fP plugin.
.sp
You can check the \fB/etc/telegraf/telegraf.conf.sample\fP file on a host
with installed Telegraf for many examples of input and output plugins available
as well as documentation of the supported configuration options. The
configuration is written using TOML format, however it\(aqs very easy to convert
it to a format usable in DebOps, either directly including it as YAML text
blocks, or converting it into a YAML format.
.SS Example inventory
.sp
To install a Telegraf agent on a host, you need to add it to
\fB[debops_service_telegraf]\fP Ansible group:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[debops_service_telegraf]
agent\-host
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This will install \fBtelegraf\fP package and create basic configuration required
by the service.
.sp
You can also configure Telegraf to be installed on all DebOps hosts in the inventory:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[debops_all_hosts]
hostname1
hostname2
hostname3

[debops_service_telegraf:children]
debops_all_hosts
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Example playbook
.sp
Here\(aqs an example Ansible playbook that uses the \fBdebops.telegraf\fP
role:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-\-\-
  collections: [ \(aqdebops.debops\(aq, \(aqdebops.roles01\(aq,
                 \(aqdebops.roles02\(aq, \(aqdebops.roles03\(aq ]
  hosts: [ \(aqdebops_service_telegraf\(aq ]
  become: True

  environment: \(aq{{ inventory__environment | d({})
                   | combine(inventory__group_environment | d({}))
                   | combine(inventory__host_environment  | d({})) }}\(aq

  roles:

    \- role: keyring
      tags: [ \(aqrole::keyring\(aq, \(aqskip::keyring\(aq, \(aqrole::influxdata\(aq ]
      keyring__dependent_apt_keys:
        \- \(aq{{ influxdata__keyring__dependent_apt_keys }}\(aq

    \- role: influxdata
      tags: [ \(aqrole::influxdata\(aq, \(aqskip::influxdata\(aq ]
      influxdata__dependent_packages:
        \- \(aq{{ telegraf__influxdata__dependent_packages }}\(aq

    \- role: telegraf
      tags: [ \(aqrole::telegraf\(aq, \(aqskip::telegraf\(aq ]

.ft P
.fi
.UNINDENT
.UNINDENT
.SS Ansible tags
.sp
You can use Ansible \fB\-\-tags\fP or \fB\-\-skip\-tags\fP parameters to limit what
tasks are performed during Ansible run. This can be used after a host was first
configured to speed up playbook execution, when you are sure that most of the
configuration is already in the desired state.
.sp
Available role tags:
.INDENT 0.0
.TP
.B \fBrole::telegraf\fP
Main role tag, should be used in the playbook to execute all of the role
tasks as well as role dependencies.
.UNINDENT
.SS Other resources
.sp
List of other useful resources related to the \fBdebops.telegraf\fP Ansible role:
.INDENT 0.0
.IP \(bu 2
Official \fI\%Telegraf documentation page\fP <\fBhttps://docs.influxdata.com/telegraf/\fP>
.UNINDENT
.SH DEFAULT VARIABLE DETAILS
.sp
Some of \fBdebops.telegraf\fP default variables have more extensive
configuration than simple strings or lists, here you can find documentation and
examples for them.
.SS telegraf__configuration
.sp
The \fBtelegraf__configuration\fP variables define the contents of the
\fB/etc/telegraf/telegraf.conf\fP configuration file. The entire file is
based on a YAML configuration converted to TOML using a custom Jinja filter,
therefore the contents are limited \- there\(aqs no way to add comments or comment
out sections of the file. For a more advanced configuration, you should use the
\fI\%telegraf__plugins\fP variables instead.
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
Keep in mind that the main configuration file is world\-readable.
Use plugin files for sensitive configuration like passwords for external
services \- plugin configuration is readable only by the Telegraf UNIX
account.
.UNINDENT
.UNINDENT
.SS Examples
.sp
The default configuration includes settings for the agent itself. To remove
them from the file and rely only on separate plugins directory, add in the
inventory:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
telegraf__configuration:

  \- name: \(aqagent\(aq
    state: \(aqabsent\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Change the agent\(aqs collection interval without modifying other parameters (note
a different \fBname\fP parameter which permits recursive merging of the
configuration):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
telegraf__configuration:

  \- name: \(aqagent_interval\(aq
    config:
      agent:
        interval: \(aq30s\(aq
        round_interval: False
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Add a set of global tags to all Telegraf instances:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
telegraf__configuration:

  \- name: \(aqglobal_tags\(aq
    config:
      global_tags:
        rack: \(aq1a\(aq
        user: \(aq$USER\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You can see the default list of configuration options in the
\fI\%telegraf__default_configuration\fP variable.
.SS Syntax
.INDENT 0.0
.TP
.B \fBname\fP
Required. Name of a particular configuration entry, not used otherwise.
Configuration entries with the same \fBname\fP parameter are merged together an
can affect each other.
.TP
.B \fBstate\fP
Optional. If not specified or \fBpresent\fP, a given configuration entry will
be included in the generated config file. If \fBabsent\fP, a given
configuration entry will not be included in the configuration file.
.TP
.B \fBconfig\fP
YAML dictionary with Telegraf configuration options, which will be converted
to TOML on generation. The \fBconfig\fP parameters from multiple entries with
the same \fBname\fP parameter override each other in order of appearance.
.sp
The \fBconfig\fP parameters from different entries are combined together
recursively, this allows modification of specific parameters in a larger
section of the configuration file.
.UNINDENT
.SS telegraf__plugins
.sp
The \fBtelegraf__plugins\fP variables define the contents of the
\fB/etc/telegraf/telegraf.d/\fP configuration directory. Each configuration
entry is a separate file which can be created or removed as needed.
.SS Examples
.sp
The default configuration includes a \fBoutput.discard\fP output sink since the
service will not start correctly without any output configured. To comment it
out on in the generated configuration file, you can add in the inventory:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
telegraf__plugins:

  \- name: \(aqoutput_discard\(aq
    state: \(aqcomment\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Add an Elasticsearch output which uses DebOps secrets for access (you might
want to use a different account than \fBelastic\fP though):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\- name: \(aqoutput_elasticsearch\(aq
  config:
    outputs:
      elasticsearch:
        urls: [ \(aqhttps://es1.example.org:9200\(aq ]
        timeout: \(aq5s\(aq
        enable_sniffer: False
        enable_gzip: False
        health_check_interval: \(aq10s\(aq
        username: \(aqelastic\(aq
        password: \(aq{{ lookup(\(dqpassword\(dq, secret + \(dq/elasticsearch/\(dq
                      + \(dqcredentials/built\-in/elastic/password\(dq) }}\(aq
        index_name: \(aqtelegraf\-%Y.%m.%d\(aq
        manage_template: True
        template_name: \(aqtelegraf\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This example shows real world case of defining an input plugin which receives
stream of UDP data from Collectd and forwards it into InfluxDB 2.0 instance:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
telegraf__plugins:

  \- name: \(aqtelegraf2influxdb\(aq
    raw: |
      [[outputs.influxdb_v2]]
        urls = [\(dqhttp://127.0.0.1:8086\(dq]
        token = \(dq4bwv8cXllnYz7KXakKMz173YPSaSOH5_E70FE01PkXf3a7IC\-IrzP\-zCqjOtU1NGJiZycLguRhuDl8cUpz9QFw==\(dq
        organization = \(dqDebOps\(dq
        bucket_tag = \(dqbucket4debops\(dq
        exclude_bucket_tag = true
    state: \(aqpresent\(aq

  \- name: \(aqudp4collectd\(aq
    raw: |
      [[inputs.socket_listener]]
        service_address = \(dqudp4://:25826\(dq
        data_format = \(dqcollectd\(dq
        content_encoding = \(dqidentity\(dq
        ## Authentication file for cryptographic security levels
        collectd_auth_file = \(dq/etc/collectd/passwd\(dq
        ## One of none (default), sign, or encrypt
        collectd_security_level = \(dqencrypt\(dq
        ## Path of to TypesDB specifications
        collectd_typesdb = [\(dq/usr/share/collectd/types.db\(dq]
        collectd_parse_multivalue = \(dqjoin\(dq
        [inputs.socket_listener.tags]
          bucket4debops = \(dqcollectd\(dq
    state: \(aqpresent\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This example defines several system monitoring input plugins which are assigned
to a particular host only:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
telegraf__host_plugins:

    # Override the default configuration
  \- name: \(aqinput_system\(aq
    raw: |
      [[inputs.system]]
    state: \(aqpresent\(aq

  \- name: \(aqinput_diskio\(aq
    raw: |
      [[inputs.diskio]]
        devices = [\(dqnvme0n1\(dq, \(dqnvme1n1\(dq, \(dqmd10\(dq]
    state: \(aqpresent\(aq

  \- name: \(aqinput_net\(aq
    raw: |
      [[inputs.net]]
        interfaces = [\(dqeth0\(dq, \(dqbridge0\(dq]
    state: \(aqpresent\(aq

  \- name: \(aqinput_zfs\(aq
    raw: |
      [[inputs.zfs]]
        poolMetrics = true
        datasetMetrics = true
    state: \(aqpresent\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You can see the default list of configured plugins in the
\fI\%telegraf__default_plugins\fP variable.
.SS Syntax
.sp
The role uses \fI\%Universal Configuration\fP system to manage Telegraf plugin
configuration files. The \fI\%telegraf__combined_plugins\fP variable defines
the merge order of the plugin lists. Each variable is a list of YAML
dictionaries with specific parameters:
.INDENT 0.0
.TP
.B \fBname\fP
Required. Name of the configuration file (the \fB\&.conf\fP extension will be
added automatically). Multiple entries with the same \fBname\fP parameter will
be merged together and can affect each other.
.TP
.B \fBstate\fP
Optional. If not specified or \fBpresent\fP, the configuration file will be
generated on the host. If \fBabsent\fP, the configuration file will be removed
from the host. If \fBcomment\fP, the file will be generated but the
configuration itself will be commented out. If \fBignore\fP, a given
configuration entry will not be processed during role execution.
.TP
.B \fBcomment\fP
Optional. String or YAML text block with comments about a given configuration
file.
.TP
.B \fBconfig\fP
YAML dictionary with Telegraf configuration options, which will be converted
to TOML on generation. The \fBconfig\fP parameters from multiple entries with
the same \fBname\fP parameter override each other in order of appearance.
.TP
.B \fBraw\fP
YAML text block with Telegraf configuration in the TOML format. The \fBraw\fP
parameters from multiple entries with the same \fBname\fP parameter override
each other in order of appearance. If both \fBconfig\fP and \fBraw\fP parameters
are present, the latter takes precedence.
.UNINDENT
.SH COPYRIGHT
2014-2024, Maciej Delmanowski, Nick Janetakis, Robin Schneider and others
.\" Generated by docutils manpage writer.
.
