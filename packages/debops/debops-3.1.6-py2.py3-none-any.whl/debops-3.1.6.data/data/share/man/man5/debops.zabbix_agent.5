.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "DEBOPS.ZABBIX_AGENT" "5" "Oct 09, 2025" "v3.1.6" "DebOps"
.SH NAME
debops.zabbix_agent \- Manage Zabbix agent with Ansible
.SH SYNOPSIS
.sp
\fBdebops run service/zabbix_agent\fP [\fB\-\-limit\fP \fIgroup,host,\fP\&...] [\fB\-\-diff\fP] [\fB\-\-check\fP] [\fB\-\-tags\fP \fItag1,tag2,\fP\&...] [\fB\-\-skip\-tags\fP \fItag1,tag2,\fP\&...] [<\fBansible\-playbook\fP options>] ...
.SH DESCRIPTION
.sp
The \fBdebops.zabbix_agent\fP Ansible role can be used to configure a Zabbix agent
on Debian/Ubuntu hosts.
.SH GETTING STARTED
.SS Default configuration
.sp
The role supports \fI\%multiple flavors of Zabbix Agent\fP <\fBhttps://www.zabbix.com/documentation/current/en/manual/appendix/agent_comparison\fP> included in Debian, one
if which needs to be specified using \fI\%zabbix_agent__flavor\fP variable
(the default is \fBC\fP flavor). To change the installed flavor, the current
installation needs to be removed \- to do that, you can execute the role with
and extra variable on the command line:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
debops run service/zabbix_agent \-e \(aqzabbix_agent__deploy_state=absent\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This will tell the role to remove the current installation. After that, by
changing the \fI\%zabbix_agent__flavor\fP in the Ansible inventory, you can
install a different flavor of the Zabbix Agent.
.SS Example inventory
.sp
To enable the Zabbix agent service on a host it needs to be included in the specific Ansible
inventory group:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[debops_service_zabbix_agent]
hostname
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Example playbook
.sp
If you are using this role without DebOps, here\(aqs an example Ansible playbook
that uses the \fBdebops.zabbix_agent\fP role:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\-\-\-

\- name: Install and manage Zabbix agent
  collections: [ \(aqdebops.debops\(aq, \(aqdebops.roles01\(aq,
                 \(aqdebops.roles02\(aq, \(aqdebops.roles03\(aq ]
  hosts: [ \(aqdebops_service_zabbix_agent\(aq ]
  become: True

  environment: \(aq{{ inventory__environment | d({})
                   | combine(inventory__group_environment | d({}))
                   | combine(inventory__host_environment  | d({})) }}\(aq

  roles:

    \- role: ferm
      tags: [ \(aqrole::ferm\(aq, \(aqskip::ferm\(aq ]
      ferm__dependent_rules:
        \- \(aq{{ zabbix_agent__ferm__dependent_rules }}\(aq

    \- role: zabbix_agent
      tags: [ \(aqrole::zabbix_agent\(aq, \(aqskip::zabbix_agent\(aq ]

.ft P
.fi
.UNINDENT
.UNINDENT
.SH DEFAULT VARIABLE DETAILS
.sp
Some of \fBdebops.zabbix_agent\fP default variables have more extensive configuration
than simple strings or lists, here you can find documentation and examples for
them.
.SS zabbix_agent__configuration
.sp
The \fBzabbix_agent__*_configuration\fP variables define the contents of the
\fB/etc/zabbix_agent.conf\fP configuration file. The variables are combined in
order defined in the \fI\%zabbix_agent__combined_configuration\fP variable and
can affect each other.
.SS Examples
.sp
Enable the Zabbix agent to allow all Zabbix servers on the 192.168.1.0/24 network:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
zabbix_agent__configuration:
 \- name: \(aqServer\(aq
   value: \(aq127.0.0.1,192.168.1.0/24\(aq
   state: \(aqpresent\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You can see more examples in the \fI\%default set of configuration options
defined by the role\fP\&.
.SS Syntax
.sp
The configuration is defined as a list of YAML dictionaries, using
the \fI\%Universal Configuration\fP format. The configuration entries can be
specified as simple \(dqkey: value\(dq dictionaries, or if the \fBname\fP parameter is
used, can be defined using specific parameters:
.INDENT 0.0
.TP
.B \fBname\fP
Required. The name of the configuration option.
Multiple entries with the same \fBname\fP parameter are merged together in
order of appearance and can affect each other.
.TP
.B \fBoption\fP
Optional. Name of the configuration option, which will be used instead of the
\fBname\fP parameter. This is useful when a Zabbix Agent option can be present
multiple times in the configuration file.
.TP
.B \fBvalue\fP
The value of a given configuration option. It can be a string, a number,
or a boolean value \- this is used to specify selected
configuration options more than once. Empty strings are allowed.
.TP
.B \fBstate\fP
Optional. If not specified or \fBpresent\fP, a given configuration option will
be included in the generated config file. If \fBabsent\fP, a given
configuration option will not be included in the file. If \fBcomment\fP, the
option will be included, but commented out. If \fBignore\fP, a given
configuration entry will not be processed during role execution.
.TP
.B \fBcomment\fP
Optional. A comment about a given configuration option.
.UNINDENT
.SH AUTHOR
Julien Lecomte
.SH COPYRIGHT
2014-2024, Maciej Delmanowski, Nick Janetakis, Robin Schneider and others
.\" Generated by docutils manpage writer.
.
