name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run linting with ruff
      run: |
        uv run ruff check .

    - name: Run type checking with mypy
      run: |
        uv run mypy src/pltr

    - name: Run tests with coverage
      run: |
        # Run all tests including integration tests (import issues fixed)
        uv run pytest tests/ --cov=pltr --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'

  lint-and-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Check code formatting with ruff
      run: |
        uv run ruff format --check .

    - name: Run security checks (if configured)
      run: |
        # Add security scanning tools here if needed
        echo "Security checks placeholder - add tools like bandit, safety, etc."
