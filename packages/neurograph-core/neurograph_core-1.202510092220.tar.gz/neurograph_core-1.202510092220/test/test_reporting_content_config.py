# coding: utf-8

"""
    Neurograph Core

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neurograph.v1.models.reporting_content_config import ReportingContentConfig

class TestReportingContentConfig(unittest.TestCase):
    """ReportingContentConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReportingContentConfig:
        """Test ReportingContentConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReportingContentConfig`
        """
        model = ReportingContentConfig()
        if include_optional:
            return ReportingContentConfig(
                chart_defaults = neurograph.v1.models.reporting/chart_defaults.reporting.ChartDefaults(
                    options = neurograph.v1.models.reporting/chart_options.reporting.ChartOptions(
                        maintain_aspect_ratio = True, 
                        plugins = {
                            'key' : None
                            }, 
                        responsive = True, 
                        scales = {
                            'key' : None
                            }, ), ),
                header = neurograph.v1.models.reporting/header_config.reporting.HeaderConfig(
                    subtitle = '', 
                    title = '', ),
                primary_analysis = neurograph.v1.models.reporting/primary_analysis.reporting.PrimaryAnalysis(
                    exploration_topics = [
                        neurograph.v1.models.reporting/exploration_topic.reporting.ExplorationTopic(
                            context = {
                                'key' : None
                                }, 
                            query = '', 
                            title = '', )
                        ], 
                    key_findings = [
                        ''
                        ], 
                    summary = '', ),
                visualizations = [
                    neurograph.v1.models.reporting/visualization.reporting.Visualization(
                        data = neurograph.v1.models.reporting/chart_data.reporting.ChartData(
                            datasets = [
                                neurograph.v1.models.reporting/chart_dataset.reporting.ChartDataset(
                                    background_color = '', 
                                    bar_percentage = 1.337, 
                                    label = '', )
                                ], 
                            labels = [
                                ''
                                ], ), 
                        id = '', 
                        insights = neurograph.v1.models.reporting/visualization_insights.reporting.VisualizationInsights(
                            bullets = [
                                ''
                                ], 
                            summary = '', 
                            title = '', ), 
                        title = '', 
                        type = '', )
                    ]
            )
        else:
            return ReportingContentConfig(
        )
        """

    def testReportingContentConfig(self):
        """Test ReportingContentConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
