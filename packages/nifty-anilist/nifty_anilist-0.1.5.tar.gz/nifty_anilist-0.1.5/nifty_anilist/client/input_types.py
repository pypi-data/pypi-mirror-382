# Generated by ariadne-codegen
# Source: https://graphql.anilist.co

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import MediaListStatus, NotificationType


class NotificationOptionInput(BaseModel):
    type: Optional[NotificationType] = None
    enabled: Optional[bool] = None


class MediaListOptionsInput(BaseModel):
    section_order: Optional[List[Optional[str]]] = Field(
        alias="sectionOrder", default=None
    )
    split_completed_section_by_format: Optional[bool] = Field(
        alias="splitCompletedSectionByFormat", default=None
    )
    custom_lists: Optional[List[Optional[str]]] = Field(
        alias="customLists", default=None
    )
    advanced_scoring: Optional[List[Optional[str]]] = Field(
        alias="advancedScoring", default=None
    )
    advanced_scoring_enabled: Optional[bool] = Field(
        alias="advancedScoringEnabled", default=None
    )
    theme: Optional[str] = None


class ListActivityOptionInput(BaseModel):
    disabled: Optional[bool] = None
    type: Optional[MediaListStatus] = None


class FuzzyDateInput(BaseModel):
    year: Optional[int] = None
    month: Optional[int] = None
    day: Optional[int] = None


class AniChartHighlightInput(BaseModel):
    media_id: Optional[int] = Field(alias="mediaId", default=None)
    highlight: Optional[str] = None


class MediaTitleInput(BaseModel):
    romaji: Optional[str] = None
    english: Optional[str] = None
    native: Optional[str] = None


class AiringScheduleInput(BaseModel):
    airing_at: Optional[int] = Field(alias="airingAt", default=None)
    episode: Optional[int] = None
    time_until_airing: Optional[int] = Field(alias="timeUntilAiring", default=None)


class MediaExternalLinkInput(BaseModel):
    id: int
    url: str
    site: str


class CharacterNameInput(BaseModel):
    first: Optional[str] = None
    middle: Optional[str] = None
    last: Optional[str] = None
    native: Optional[str] = None
    alternative: Optional[List[Optional[str]]] = None
    alternative_spoiler: Optional[List[Optional[str]]] = Field(
        alias="alternativeSpoiler", default=None
    )


class StaffNameInput(BaseModel):
    first: Optional[str] = None
    middle: Optional[str] = None
    last: Optional[str] = None
    native: Optional[str] = None
    alternative: Optional[List[Optional[str]]] = None
