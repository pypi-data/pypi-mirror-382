[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "django-htmx-tools"
dynamic = ["version"]
description = "An assortment of Django mixins and middleware for working with HTMX"
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
authors = [
    {name = "Howie Weiner", email = "hello@builtbyhowie.co.uk"},
]
keywords = ["django", "htmx"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
    "Framework :: Django :: 6.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Natural Language :: English",
]
dependencies = [
    "django>=4.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-django>=4.5",
    "pytest-cov>=4.0",
    "mypy>=1.0",
    "django-stubs>=4.2",
    "ruff>=0.1.0",
    "pre-commit>=3.0",
    "commitizen>=3.0",
]
test = [
    "pytest>=7.0",
    "pytest-django>=4.5",
    "pytest-cov>=4.0",
]
docs = [
    "sphinx>=7.0",
    "sphinx-rtd-theme>=2.0",
    "sphinx-autodoc-typehints>=1.24",
]

[project.urls]
Homepage = "https://github.com/howieweiner/django-htmx-tools"
Repository = "https://github.com/howieweiner/django-htmx-tools.git"
Issues = "https://github.com/howieweiner/django-htmx-tools/issues"
Documentation = "https://django-htmx-tools.readthedocs.io/"

[tool.hatch.version]
path = "src/django_htmx_tools/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]
exclude = [
    "/example",
]

[tool.hatch.build.targets.wheel]
packages = ["src/django_htmx_tools"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["django_htmx_tools"]
known_django = ["django"]
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]
exclude = [
    "^example/",
    "^docs/",
    "^build/",
    "^dist/",
]

[tool.django-stubs]
django_settings_module = "tests.settings"

[tool.pytest.ini_options]
pythonpath = "."
testpaths = ["tests"]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["test_*.py", "*_test.py"]
addopts = "--cov=django_htmx_tools --cov-report=term-missing --cov-report=html --strict-markers"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.1"
tag_format = "v$version"
version_files = [
    "src/django_htmx_tools/__init__.py:__version__",
]
update_changelog_on_bump = true
