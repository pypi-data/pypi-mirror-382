Metadata-Version: 2.4
Name: django-request-signer
Version: 5.1.3
Summary: A python library for signing http requests.
Home-page: https://github.com/imtapps/django-request-signer
Author: imtapps
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: BSD License
Classifier: Topic :: Internet
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3.14
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.11
Classifier: Framework :: Django :: 2.2
Classifier: Framework :: Django :: 3.2
Classifier: Framework :: Django :: 4.2
Classifier: Framework :: Django :: 5.2
License-File: LICENSE
Requires-Dist: six<2,>=1.10.0; python_version < "3.0"
Requires-Dist: django<6,>=1.11
Requires-Dist: generic-request-signer<2.1,>=2.0
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: summary

.. _django_request_signer:

Version 5 is compatible with Python 3 and Django 1.8+

*********************
Django Request Signer
*********************

Version 5 removes the AuthorizedClients model and does not look there for client ids or private keys.

Client ids and private keys must be in API_KEYS in settings.

```
API_KEYS = {'client_id_X': 'private_key_X'}
```

No data are removed or tables dropped. You can make the migrations that will do such.
