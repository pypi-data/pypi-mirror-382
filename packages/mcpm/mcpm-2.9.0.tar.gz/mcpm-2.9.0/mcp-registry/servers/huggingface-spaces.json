{
  "name": "huggingface-spaces",
  "display_name": "HuggingFace Spaces \ud83e\udd17",
  "description": "Server for using HuggingFace Spaces, supporting Open Source Image, Audio, Text Models and more. Claude Desktop mode for easy integration.",
  "repository": {
    "type": "git",
    "url": "https://github.com/evalstate/mcp-hfspace"
  },
  "author": {
    "name": "evalstate"
  },
  "license": "MIT",
  "categories": [
    "AI Systems"
  ],
  "tags": [
    "Hugging Face",
    "Claude Desktop"
  ],
  "installations": {
    "npm": {
      "type": "npm",
      "command": "npx",
      "args": [
        "-y",
        "@llmindset/mcp-hfspace"
      ]
    }
  },
  "examples": [
    {
      "title": "Image Generation Example",
      "description": "Using mcp-hfspace to generate images.",
      "prompt": "Use shuttleai/shuttle-3.1-aesthetic to create an image."
    },
    {
      "title": "Text-to-Speech Example",
      "description": "Using mcp-hfspace to convert text to speech.",
      "prompt": "Create an audio file from the text 'Hello, world!'."
    },
    {
      "title": "Speech-to-Text Example",
      "description": "Using mcp-hfspace to transcribe audio to text.",
      "prompt": "Transcribe the audio file 'sample_audio.wav'."
    },
    {
      "title": "Vision Model Example",
      "description": "Using mcp-hfspace to analyze images.",
      "prompt": "Analyze the image file 'test_image.jpg'."
    }
  ],
  "homepage": "https://github.com/evalstate/mcp-hfspace",
  "arguments": {
    "CLAUDE_DESKTOP_MODE": {
      "description": "Enables or disables the Claude Desktop Mode for the server.",
      "required": false,
      "example": "false"
    }
  },
  "tools": [
    {
      "name": "available-files",
      "description": "A list of available file and resources. If the User requests things like 'most recent image' or 'the audio' use this tool to identify the intended resource.This tool returns 'resource uri', 'name', 'size', 'last modified'  and 'mime type' in a markdown table",
      "inputSchema": {
        "type": "object",
        "properties": {}
      }
    },
    {
      "name": "FLUX_1-schnell-infer",
      "description": "Call the FLUX.1-schnell endpoint /infer",
      "inputSchema": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "description": "Prompt",
            "examples": [
              "Hello!!"
            ]
          },
          "seed": {
            "type": "number",
            "description": "Seed",
            "default": 0
          },
          "randomize_seed": {
            "type": "boolean",
            "description": "Randomize seed",
            "default": true,
            "examples": [
              true
            ]
          },
          "width": {
            "type": "number",
            "description": "Width",
            "default": 1024,
            "examples": [
              256
            ]
          },
          "height": {
            "type": "number",
            "description": "Height",
            "default": 1024,
            "examples": [
              256
            ]
          },
          "num_inference_steps": {
            "type": "number",
            "description": "Number of inference steps",
            "default": 4,
            "examples": [
              1
            ]
          }
        },
        "required": [
          "prompt"
        ]
      }
    }
  ]
}