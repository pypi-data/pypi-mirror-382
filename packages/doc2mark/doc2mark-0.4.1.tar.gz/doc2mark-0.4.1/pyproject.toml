[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "doc2mark"
dynamic = ["version"]
description = "Unified document processing with AI-powered OCR"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "doc2mark Team", email = "luisleo52655@gmail.com"},
]
maintainers = [
    {name = "doc2mark Team", email = "luisleo52655@gmail.com"},
]
keywords = [
    "document-processing",
    "ocr",
    "pdf",
    "docx",
    "xlsx",
    "pptx",
    "ai",
    "gpt-4",
    "openai",
    "langchain",
    "document-extraction",
    "text-extraction",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "pymupdf>=1.23.0",
    "python-docx>=0.8.11",
    "openpyxl>=3.0.10",
    "python-pptx>=0.6.21",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "markdown>=3.4.0",
    "chardet>=5.0.0",
    "Pillow>=9.0.0",
    "pandas>=1.3.0",
]

[project.optional-dependencies]
ocr = [
    "openai>=1.0.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.0.2",
    "pytesseract>=0.3.10",
]
mime = [
    "python-magic>=0.4.27",
    "python-magic-bin>=0.4.14; sys_platform == 'win32'",
]
all = [
    "doc2mark[ocr,mime]",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "twine>=4.0.0",
    "build>=0.10.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.23.0",
    "myst-parser>=2.0.0",
]

[project.scripts]
doc2mark = "doc2mark.cli:main"

[project.urls]
Homepage = "https://github.com/luisleo526/doc2mark"
Documentation = "https://doc2mark.readthedocs.io"
Repository = "https://github.com/luisleo526/doc2mark"
Issues = "https://github.com/luisleo526/doc2mark/issues"
Changelog = "https://github.com/luisleo526/doc2mark/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["doc2mark", "doc2mark.core", "doc2mark.formats", "doc2mark.ocr", "doc2mark.pipelines", "doc2mark.utils"]
include-package-data = true

[tool.setuptools.dynamic]
version = {attr = "doc2mark.__version__"}

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_any_generics = false
disallow_untyped_calls = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
no_implicit_optional = true
strict_optional = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra --strict-markers -v --tb=short"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests that don't require external resources",
    "integration: Integration tests that may require API keys or external services",
    "slow: Tests that take a long time to run",
    "ocr: Tests specifically for OCR functionality",
    "requires_api_key: Tests that require OPENAI_API_KEY to be set",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore:.*MKL.*:UserWarning",
]

[tool.coverage.run]
branch = true
source = ["doc2mark"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
]

[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B101", "B601"]

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0622",  # redefined-builtin
]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
version_files = [
    "doc2mark/__init__.py:__version__",
    "setup.py:version",
]