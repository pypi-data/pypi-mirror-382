# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: flow/entities/account.proto, flow/entities/block.proto, flow/entities/block_header.proto, flow/entities/block_seal.proto, flow/entities/collection.proto, flow/entities/event.proto, flow/entities/transaction.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "Account",
    "AccountKey",
    "Block",
    "BlockHeader",
    "BlockSeal",
    "Collection",
    "CollectionGuarantee",
    "Event",
    "Transaction",
    "TransactionProposalKey",
    "TransactionSignature",
    "TransactionStatus",
)

import datetime
from dataclasses import dataclass

import betterproto2

from ...message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


class TransactionStatus(betterproto2.Enum):
    UNKNOWN = 0

    PENDING = 1

    FINALIZED = 2

    EXECUTED = 3

    SEALED = 4

    EXPIRED = 5


@dataclass(eq=False, repr=False)
class Account(betterproto2.Message):
    address: "bytes" = betterproto2.field(1, betterproto2.TYPE_BYTES)

    balance: "int" = betterproto2.field(2, betterproto2.TYPE_UINT64)

    code: "bytes" = betterproto2.field(3, betterproto2.TYPE_BYTES)

    keys: "list[AccountKey]" = betterproto2.field(4, betterproto2.TYPE_MESSAGE, repeated=True)

    contracts: "dict[str, bytes]" = betterproto2.field(
        5,
        betterproto2.TYPE_MAP,
        map_meta=betterproto2.map_meta(betterproto2.TYPE_STRING, betterproto2.TYPE_BYTES),
    )


default_message_pool.register_message("flow.entities", "Account", Account)


@dataclass(eq=False, repr=False)
class AccountKey(betterproto2.Message):
    index: "int" = betterproto2.field(1, betterproto2.TYPE_UINT32)

    public_key: "bytes" = betterproto2.field(2, betterproto2.TYPE_BYTES)

    sign_algo: "int" = betterproto2.field(3, betterproto2.TYPE_UINT32)

    hash_algo: "int" = betterproto2.field(4, betterproto2.TYPE_UINT32)

    weight: "int" = betterproto2.field(5, betterproto2.TYPE_UINT32)

    sequence_number: "int" = betterproto2.field(6, betterproto2.TYPE_UINT32)

    revoked: "bool" = betterproto2.field(7, betterproto2.TYPE_BOOL)


default_message_pool.register_message("flow.entities", "AccountKey", AccountKey)


@dataclass(eq=False, repr=False)
class Block(betterproto2.Message):
    id: "bytes" = betterproto2.field(1, betterproto2.TYPE_BYTES)

    parent_id: "bytes" = betterproto2.field(2, betterproto2.TYPE_BYTES)

    height: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    timestamp: "datetime.datetime | None" = betterproto2.field(
        4,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: __google__protobuf__.Timestamp,
        optional=True,
    )

    collection_guarantees: "list[CollectionGuarantee]" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, repeated=True
    )

    block_seals: "list[BlockSeal]" = betterproto2.field(6, betterproto2.TYPE_MESSAGE, repeated=True)

    signatures: "list[bytes]" = betterproto2.field(7, betterproto2.TYPE_BYTES, repeated=True)


default_message_pool.register_message("flow.entities", "Block", Block)


@dataclass(eq=False, repr=False)
class BlockHeader(betterproto2.Message):
    id: "bytes" = betterproto2.field(1, betterproto2.TYPE_BYTES)

    parent_id: "bytes" = betterproto2.field(2, betterproto2.TYPE_BYTES)

    height: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    timestamp: "datetime.datetime | None" = betterproto2.field(
        4,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: __google__protobuf__.Timestamp,
        optional=True,
    )


default_message_pool.register_message("flow.entities", "BlockHeader", BlockHeader)


@dataclass(eq=False, repr=False)
class BlockSeal(betterproto2.Message):
    block_id: "bytes" = betterproto2.field(1, betterproto2.TYPE_BYTES)

    execution_receipt_id: "bytes" = betterproto2.field(2, betterproto2.TYPE_BYTES)

    execution_receipt_signatures: "list[bytes]" = betterproto2.field(
        3, betterproto2.TYPE_BYTES, repeated=True
    )

    result_approval_signatures: "list[bytes]" = betterproto2.field(
        4, betterproto2.TYPE_BYTES, repeated=True
    )


default_message_pool.register_message("flow.entities", "BlockSeal", BlockSeal)


@dataclass(eq=False, repr=False)
class Collection(betterproto2.Message):
    id: "bytes" = betterproto2.field(1, betterproto2.TYPE_BYTES)

    transaction_ids: "list[bytes]" = betterproto2.field(2, betterproto2.TYPE_BYTES, repeated=True)


default_message_pool.register_message("flow.entities", "Collection", Collection)


@dataclass(eq=False, repr=False)
class CollectionGuarantee(betterproto2.Message):
    collection_id: "bytes" = betterproto2.field(1, betterproto2.TYPE_BYTES)

    signatures: "list[bytes]" = betterproto2.field(2, betterproto2.TYPE_BYTES, repeated=True)


default_message_pool.register_message("flow.entities", "CollectionGuarantee", CollectionGuarantee)


@dataclass(eq=False, repr=False)
class Event(betterproto2.Message):
    type: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    transaction_id: "bytes" = betterproto2.field(2, betterproto2.TYPE_BYTES)

    transaction_index: "int" = betterproto2.field(3, betterproto2.TYPE_UINT32)

    event_index: "int" = betterproto2.field(4, betterproto2.TYPE_UINT32)

    payload: "bytes" = betterproto2.field(5, betterproto2.TYPE_BYTES)


default_message_pool.register_message("flow.entities", "Event", Event)


@dataclass(eq=False, repr=False)
class Transaction(betterproto2.Message):
    script: "bytes" = betterproto2.field(1, betterproto2.TYPE_BYTES)

    arguments: "list[bytes]" = betterproto2.field(2, betterproto2.TYPE_BYTES, repeated=True)

    reference_block_id: "bytes" = betterproto2.field(3, betterproto2.TYPE_BYTES)

    gas_limit: "int" = betterproto2.field(4, betterproto2.TYPE_UINT64)

    proposal_key: "TransactionProposalKey | None" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, optional=True
    )

    payer: "bytes" = betterproto2.field(6, betterproto2.TYPE_BYTES)

    authorizers: "list[bytes]" = betterproto2.field(7, betterproto2.TYPE_BYTES, repeated=True)

    payload_signatures: "list[TransactionSignature]" = betterproto2.field(
        8, betterproto2.TYPE_MESSAGE, repeated=True
    )

    envelope_signatures: "list[TransactionSignature]" = betterproto2.field(
        9, betterproto2.TYPE_MESSAGE, repeated=True
    )


default_message_pool.register_message("flow.entities", "Transaction", Transaction)


@dataclass(eq=False, repr=False)
class TransactionProposalKey(betterproto2.Message):
    address: "bytes" = betterproto2.field(1, betterproto2.TYPE_BYTES)

    key_id: "int" = betterproto2.field(2, betterproto2.TYPE_UINT32)

    sequence_number: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)


default_message_pool.register_message(
    "flow.entities", "Transaction.ProposalKey", TransactionProposalKey
)


@dataclass(eq=False, repr=False)
class TransactionSignature(betterproto2.Message):
    address: "bytes" = betterproto2.field(1, betterproto2.TYPE_BYTES)

    key_id: "int" = betterproto2.field(2, betterproto2.TYPE_UINT32)

    signature: "bytes" = betterproto2.field(3, betterproto2.TYPE_BYTES)


default_message_pool.register_message(
    "flow.entities", "Transaction.Signature", TransactionSignature
)


from ...google import protobuf as __google__protobuf__
