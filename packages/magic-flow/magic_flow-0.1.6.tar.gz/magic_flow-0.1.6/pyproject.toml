[tool.poetry]
name = "magic-flow"
version = "0.1.6"
description = "Python SDK for the Flow blockchain with updated dependencies and Python 3.13 support"
authors = ["Janez Podhostnik <janez.podhostnik@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/magiclabs/magic-flow-python"
packages = [{include = "magic_flow", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
betterproto2 = "^0.9.0"
grpcio-tools = "^1.65"
ecdsa = "^v0.19"
rlp = "^4.0"
grpcio = "^1.75"
backrefs = "^6.0.1"
pydantic-core = ">=2.18.0"

[tool.poetry.group.dev.dependencies]
coloredlogs = "^15.0"
toml = "^0.10"
black = "^25.9"
pytest = "^8.4"
mkdocs = "^1.6"
mkdocs-material = "^9.6"
mkdocstrings = "^0.30"
coverage = "^7.10"
betterproto2-compiler = "^0.9.0"
ruff = "^0.9.3"
pre-commit = "^4.0.0"
codespell = "^2.4.1"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
examples = 'examples.main:run'

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    ".venv",
    "src/magic_flow/proto/",
]

# Same as Black.
line-length = 100
indent-width = 4

target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
ignore = ["E712", "F841"]
select = ["E4", "E7", "E9", "F", "I"]


# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
force-single-line = true
