{"version":3,"file":"InstallView-BahSnGoK.js","sources":["../../src/components/install/DesktopSettingsConfiguration.vue","../../src/components/install/GpuPicker.vue","../../src/components/install/InstallFooter.vue","../../src/components/install/MigrationPicker.vue","../../src/components/install/mirror/MirrorItem.vue","../../src/components/install/InstallLocationPicker.vue","../../src/views/InstallView.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col gap-6 w-[600px]\">\n    <div class=\"flex flex-col gap-4\">\n      <h2 class=\"text-2xl font-semibold text-neutral-100\">\n        {{ $t('install.desktopAppSettings') }}\n      </h2>\n\n      <p class=\"text-neutral-400 my-0\">\n        {{ $t('install.desktopAppSettingsDescription') }}\n      </p>\n    </div>\n\n    <div class=\"flex flex-col bg-neutral-800 p-4 rounded-lg text-sm\">\n      <!-- Auto Update Setting -->\n      <div class=\"flex items-center gap-4\">\n        <div class=\"flex-1\">\n          <h3 class=\"text-lg font-medium text-neutral-100\">\n            {{ $t('install.settings.autoUpdate') }}\n          </h3>\n          <p class=\"text-neutral-400 mt-1\">\n            {{ $t('install.settings.autoUpdateDescription') }}\n          </p>\n        </div>\n        <ToggleSwitch v-model=\"autoUpdate\" />\n      </div>\n\n      <Divider />\n\n      <!-- Metrics Collection Setting -->\n      <div class=\"flex items-center gap-4\">\n        <div class=\"flex-1\">\n          <h3 class=\"text-lg font-medium text-neutral-100\">\n            {{ $t('install.settings.allowMetrics') }}\n          </h3>\n          <p class=\"text-neutral-400\">\n            {{ $t('install.settings.allowMetricsDescription') }}\n          </p>\n          <a href=\"#\" @click.prevent=\"showMetricsInfo\">\n            {{ $t('install.settings.learnMoreAboutData') }}\n          </a>\n        </div>\n        <ToggleSwitch v-model=\"allowMetrics\" />\n      </div>\n    </div>\n\n    <!-- Info Dialog -->\n    <Dialog\n      v-model:visible=\"showDialog\"\n      modal\n      dismissable-mask\n      :header=\"$t('install.settings.dataCollectionDialog.title')\"\n      class=\"select-none\"\n    >\n      <div class=\"text-neutral-300\">\n        <h4 class=\"font-medium mb-2\">\n          {{ $t('install.settings.dataCollectionDialog.whatWeCollect') }}\n        </h4>\n        <ul class=\"list-disc pl-6 space-y-1\">\n          <li>\n            {{\n              $t('install.settings.dataCollectionDialog.collect.errorReports')\n            }}\n          </li>\n          <li>\n            {{ $t('install.settings.dataCollectionDialog.collect.systemInfo') }}\n          </li>\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.collect.userJourneyEvents'\n              )\n            }}\n          </li>\n        </ul>\n\n        <h4 class=\"font-medium mt-4 mb-2\">\n          {{ $t('install.settings.dataCollectionDialog.whatWeDoNotCollect') }}\n        </h4>\n        <ul class=\"list-disc pl-6 space-y-1\">\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.doNotCollect.personalInformation'\n              )\n            }}\n          </li>\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.doNotCollect.workflowContents'\n              )\n            }}\n          </li>\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.doNotCollect.fileSystemInformation'\n              )\n            }}\n          </li>\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.doNotCollect.customNodeConfigurations'\n              )\n            }}\n          </li>\n        </ul>\n\n        <div class=\"mt-4\">\n          <a href=\"https://comfy.org/privacy\" target=\"_blank\">\n            {{ $t('install.settings.dataCollectionDialog.viewFullPolicy') }}\n          </a>\n        </div>\n      </div>\n    </Dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Dialog from 'primevue/dialog'\nimport Divider from 'primevue/divider'\nimport ToggleSwitch from 'primevue/toggleswitch'\nimport { ref } from 'vue'\n\nconst showDialog = ref(false)\nconst autoUpdate = defineModel<boolean>('autoUpdate', { required: true })\nconst allowMetrics = defineModel<boolean>('allowMetrics', { required: true })\n\nconst showMetricsInfo = () => {\n  showDialog.value = true\n}\n</script>\n","<template>\n  <div\n    class=\"grid grid-rows-[1fr_auto_auto_1fr] w-full max-w-3xl mx-auto h-[40rem] select-none\"\n  >\n    <h2 class=\"font-inter font-bold text-3xl text-neutral-100 text-center\">\n      {{ $t('install.gpuPicker.title') }}\n    </h2>\n\n    <!-- GPU Selection buttons - takes up remaining space and centers content -->\n    <div class=\"flex-1 flex gap-8 justify-center items-center\">\n      <!-- Apple Metal / NVIDIA -->\n      <HardwareOption\n        v-if=\"platform === 'darwin'\"\n        :image-path=\"'assets/images/apple-mps-logo.png'\"\n        placeholder-text=\"Apple Metal\"\n        subtitle=\"Apple Metal\"\n        :value=\"'mps'\"\n        :selected=\"selected === 'mps'\"\n        :recommended=\"true\"\n        @click=\"pickGpu('mps')\"\n      />\n      <HardwareOption\n        v-else\n        :image-path=\"'assets/images/nvidia-logo-square.jpg'\"\n        placeholder-text=\"NVIDIA\"\n        :subtitle=\"$t('install.gpuPicker.nvidiaSubtitle')\"\n        :value=\"'nvidia'\"\n        :selected=\"selected === 'nvidia'\"\n        :recommended=\"true\"\n        @click=\"pickGpu('nvidia')\"\n      />\n      <!-- CPU -->\n      <HardwareOption\n        placeholder-text=\"CPU\"\n        :subtitle=\"$t('install.gpuPicker.cpuSubtitle')\"\n        :value=\"'cpu'\"\n        :selected=\"selected === 'cpu'\"\n        @click=\"pickGpu('cpu')\"\n      />\n      <!-- Manual Install -->\n      <HardwareOption\n        placeholder-text=\"Manual Install\"\n        :subtitle=\"$t('install.gpuPicker.manualSubtitle')\"\n        :value=\"'unsupported'\"\n        :selected=\"selected === 'unsupported'\"\n        @click=\"pickGpu('unsupported')\"\n      />\n    </div>\n\n    <div class=\"pt-12 px-24 h-16\">\n      <div v-show=\"showRecommendedBadge\" class=\"flex items-center gap-2\">\n        <Tag\n          :value=\"$t('install.gpuPicker.recommended')\"\n          class=\"bg-neutral-300 text-neutral-900 rounded-full text-sm font-bold px-2 py-[1px]\"\n        />\n        <i-lucide:badge-check class=\"text-neutral-300 text-lg\" />\n      </div>\n    </div>\n\n    <div class=\"text-neutral-300 px-24\">\n      <p v-show=\"descriptionText\" class=\"leading-relaxed\">\n        {{ descriptionText }}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { TorchDeviceType } from '@comfyorg/comfyui-electron-types'\nimport Tag from 'primevue/tag'\nimport { computed } from 'vue'\n\nimport HardwareOption from '@/components/install/HardwareOption.vue'\nimport { st } from '@/i18n'\nimport { electronAPI } from '@/utils/envUtil'\n\nconst selected = defineModel<TorchDeviceType | null>('device', {\n  required: true\n})\n\nconst electron = electronAPI()\nconst platform = electron.getPlatform()\n\nconst showRecommendedBadge = computed(\n  () => selected.value === 'mps' || selected.value === 'nvidia'\n)\n\nconst descriptionKeys = {\n  mps: 'appleMetal',\n  nvidia: 'nvidia',\n  cpu: 'cpu',\n  unsupported: 'manual'\n} as const\n\nconst descriptionText = computed(() => {\n  const key = selected.value ? descriptionKeys[selected.value] : undefined\n  return st(`install.gpuPicker.${key}Description`, '')\n})\n\nconst pickGpu = (value: TorchDeviceType) => {\n  selected.value = value\n}\n</script>\n","<template>\n  <div class=\"grid grid-cols-[1fr_auto_1fr] items-center gap-4\">\n    <!-- Back button -->\n    <Button\n      v-if=\"currentStep !== '1'\"\n      :label=\"$t('g.back')\"\n      severity=\"secondary\"\n      icon=\"pi pi-arrow-left\"\n      class=\"font-inter rounded-lg border-0 px-6 py-2 justify-self-start\"\n      @click=\"$emit('previous')\"\n    />\n    <div v-else></div>\n\n    <!-- Step indicators in center -->\n    <StepList class=\"flex justify-center items-center gap-3 select-none\">\n      <Step value=\"1\" :pt=\"stepPassthrough\">\n        {{ $t('install.gpu') }}\n      </Step>\n      <Step value=\"2\" :disabled=\"disableLocationStep\" :pt=\"stepPassthrough\">\n        {{ $t('install.installLocation') }}\n      </Step>\n      <Step value=\"3\" :disabled=\"disableSettingsStep\" :pt=\"stepPassthrough\">\n        {{ $t('install.desktopSettings') }}\n      </Step>\n    </StepList>\n\n    <!-- Next/Install button -->\n    <Button\n      :label=\"currentStep !== '3' ? $t('g.next') : $t('g.install')\"\n      class=\"px-8 py-2 bg-brand-yellow hover:bg-brand-yellow/90 font-inter rounded-lg border-0 transition-colors justify-self-end\"\n      :pt=\"{\n        label: { class: 'text-neutral-900 font-inter font-black' }\n      }\"\n      :disabled=\"!canProceed\"\n      @click=\"currentStep !== '3' ? $emit('next') : $emit('install')\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PassThrough } from '@primevue/core'\nimport Button from 'primevue/button'\nimport Step, { type StepPassThroughOptions } from 'primevue/step'\nimport StepList from 'primevue/steplist'\n\ndefineProps<{\n  /** Current step index as string ('1', '2', '3', '4') */\n  currentStep: string\n  /** Whether the user can proceed to the next step */\n  canProceed: boolean\n  /** Whether the location step should be disabled */\n  disableLocationStep: boolean\n  /** Whether the migration step should be disabled */\n  disableMigrationStep: boolean\n  /** Whether the settings step should be disabled */\n  disableSettingsStep: boolean\n}>()\n\ndefineEmits<{\n  previous: []\n  next: []\n  install: []\n}>()\n\nconst stepPassthrough: PassThrough<StepPassThroughOptions> = {\n  root: { class: 'flex-none p-0 m-0' },\n  header: ({ context }) => ({\n    class: [\n      'h-2.5 p-0 m-0 border-0 rounded-full transition-all duration-300',\n      context.active\n        ? 'bg-brand-yellow w-8 rounded-sm'\n        : 'bg-neutral-700 w-2.5',\n      context.disabled ? 'opacity-60 cursor-not-allowed' : ''\n    ].join(' ')\n  }),\n  number: { class: 'hidden' },\n  title: { class: 'hidden' }\n}\n</script>\n","<template>\n  <div class=\"flex flex-col gap-6 w-[600px]\">\n    <!-- Source Location Section -->\n    <div class=\"flex flex-col gap-4\">\n      <p class=\"text-neutral-400 my-0\">\n        {{ $t('install.migrationSourcePathDescription') }}\n      </p>\n\n      <div class=\"flex gap-2\">\n        <InputText\n          v-model=\"sourcePath\"\n          :placeholder=\"$t('install.locationPicker.migrationPathPlaceholder')\"\n          class=\"flex-1\"\n          :class=\"{ 'p-invalid': pathError }\"\n          @update:model-value=\"validateSource\"\n        />\n        <Button icon=\"pi pi-folder\" class=\"w-12\" @click=\"browsePath\" />\n      </div>\n\n      <Message v-if=\"pathError\" severity=\"error\">\n        {{ pathError }}\n      </Message>\n    </div>\n\n    <!-- Migration Options -->\n    <div v-if=\"isValidSource\" class=\"flex flex-col gap-4 p-4 rounded-lg\">\n      <h3 class=\"text-lg mt-0 font-medium text-neutral-100\">\n        {{ $t('install.selectItemsToMigrate') }}\n      </h3>\n\n      <div class=\"flex flex-col gap-3\">\n        <div\n          v-for=\"item in migrationItems\"\n          :key=\"item.id\"\n          class=\"flex items-center gap-3 p-2 hover:bg-neutral-700 rounded\"\n          @click=\"item.selected = !item.selected\"\n        >\n          <Checkbox\n            v-model=\"item.selected\"\n            :input-id=\"item.id\"\n            :binary=\"true\"\n            @click.stop\n          />\n          <div>\n            <label :for=\"item.id\" class=\"text-neutral-200 font-medium\">\n              {{ item.label }}\n            </label>\n            <p class=\"text-sm text-neutral-400 my-1\">\n              {{ item.description }}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Skip Migration -->\n    <div v-else class=\"text-neutral-400 italic\">\n      {{ $t('install.migrationOptional') }}\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { MigrationItems } from '@comfyorg/comfyui-electron-types'\nimport Button from 'primevue/button'\nimport Checkbox from 'primevue/checkbox'\nimport InputText from 'primevue/inputtext'\nimport Message from 'primevue/message'\nimport { computed, ref, watchEffect } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { electronAPI } from '@/utils/envUtil'\n\nconst { t } = useI18n()\n\nconst electron = electronAPI()\n\nconst sourcePath = defineModel<string>('sourcePath', { required: false })\nconst migrationItemIds = defineModel<string[]>('migrationItemIds', {\n  required: false\n})\n\nconst migrationItems = ref(\n  MigrationItems.map((item) => ({\n    ...item,\n    selected: true\n  }))\n)\n\nconst pathError = ref('')\nconst isValidSource = computed(\n  () => sourcePath.value !== '' && pathError.value === ''\n)\n\nconst validateSource = async (sourcePath: string | undefined) => {\n  if (!sourcePath) {\n    pathError.value = ''\n    return\n  }\n\n  try {\n    pathError.value = ''\n    const validation = await electron.validateComfyUISource(sourcePath)\n\n    if (!validation.isValid) pathError.value = validation.error ?? 'ERROR'\n  } catch (error) {\n    console.error(error)\n    pathError.value = t('install.pathValidationFailed')\n  }\n}\n\nconst browsePath = async () => {\n  try {\n    const result = await electron.showDirectoryPicker()\n    if (result) {\n      sourcePath.value = result\n      await validateSource(result)\n    }\n  } catch (error) {\n    console.error(error)\n    pathError.value = t('install.failedToSelectDirectory')\n  }\n}\n\nwatchEffect(() => {\n  migrationItemIds.value = migrationItems.value\n    .filter((item) => item.selected)\n    .map((item) => item.id)\n})\n</script>\n","<template>\n  <div class=\"flex flex-col gap-4 text-neutral-400 text-sm\">\n    <div>\n      <h3 class=\"text-lg font-medium text-neutral-100 mb-3 mt-0\">\n        {{ $t(`settings.${normalizedSettingId}.name`) }}\n      </h3>\n      <p class=\"my-1\">\n        {{ $t(`settings.${normalizedSettingId}.tooltip`) }}\n      </p>\n    </div>\n    <UrlInput\n      v-model=\"modelValue\"\n      :validate-url-fn=\"\n        (mirror: string) =>\n          checkMirrorReachable(mirror + (item.validationPathSuffix ?? ''))\n      \"\n      @state-change=\"validationState = $event\"\n    />\n    <div v-if=\"secondParagraph\" class=\"mt-2\">\n      <a href=\"#\" @click.prevent=\"showDialog = true\">\n        {{ $t('g.learnMore') }}\n      </a>\n\n      <Dialog\n        v-model:visible=\"showDialog\"\n        modal\n        dismissable-mask\n        :header=\"$t(`settings.${normalizedSettingId}.urlFormatTitle`)\"\n        class=\"select-none max-w-3xl\"\n      >\n        <div class=\"text-neutral-300\">\n          <p class=\"mt-1 whitespace-pre-wrap\">{{ secondParagraph }}</p>\n          <div class=\"mt-2 break-all\">\n            <span class=\"text-neutral-300 font-semibold\">\n              {{ EXAMPLE_URL_FIRST_PART }}\n            </span>\n            <span>{{ EXAMPLE_URL_SECOND_PART }}</span>\n          </div>\n          <Divider />\n          <p>\n            {{ $t(`settings.${normalizedSettingId}.fileUrlDescription`) }}\n          </p>\n          <span class=\"text-neutral-300 font-semibold\">\n            {{ FILE_URL_SCHEME }}\n          </span>\n          <span>\n            {{ EXAMPLE_FILE_URL }}\n          </span>\n        </div>\n      </Dialog>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Dialog from 'primevue/dialog'\nimport Divider from 'primevue/divider'\nimport { computed, onMounted, ref, watch } from 'vue'\n\nimport UrlInput from '@/components/common/UrlInput.vue'\nimport { UVMirror } from '@/constants/uvMirrors'\nimport { st } from '@/i18n'\nimport { normalizeI18nKey } from '@/utils/formatUtil'\nimport { checkMirrorReachable } from '@/utils/networkUtil'\nimport { ValidationState } from '@/utils/validationUtil'\n\nconst FILE_URL_SCHEME = 'file://'\nconst EXAMPLE_FILE_URL = '/C:/MyPythonInstallers/'\nconst EXAMPLE_URL_FIRST_PART =\n  'https://github.com/astral-sh/python-build-standalone/releases/download'\nconst EXAMPLE_URL_SECOND_PART =\n  '/20250902/cpython-3.12.11+20250902-x86_64-pc-windows-msvc-install_only.tar.gz'\n\nconst { item } = defineProps<{\n  item: UVMirror\n}>()\n\nconst emit = defineEmits<{\n  'state-change': [state: ValidationState]\n}>()\n\nconst modelValue = defineModel<string>('modelValue', { required: true })\nconst validationState = ref<ValidationState>(ValidationState.IDLE)\nconst showDialog = ref(false)\n\nconst normalizedSettingId = computed(() => {\n  return normalizeI18nKey(item.settingId)\n})\n\nconst secondParagraph = computed(() =>\n  st(`settings.${normalizedSettingId.value}.urlDescription`, '')\n)\n\nonMounted(() => {\n  modelValue.value = item.mirror\n})\n\nwatch(validationState, (newState) => {\n  emit('state-change', newState)\n\n  // Set fallback mirror if default mirror is invalid\n  if (\n    newState === ValidationState.INVALID &&\n    modelValue.value === item.mirror\n  ) {\n    modelValue.value = item.fallbackMirror\n  }\n})\n</script>\n","<template>\n  <div class=\"flex flex-col gap-8 w-full max-w-3xl mx-auto select-none\">\n    <!-- Installation Path Section -->\n    <div class=\"grow flex flex-col gap-6 text-neutral-300\">\n      <h2 class=\"font-inter font-bold text-3xl text-neutral-100 text-center\">\n        {{ $t('install.locationPicker.title') }}\n      </h2>\n\n      <p class=\"text-center text-neutral-400 px-12\">\n        {{ $t('install.locationPicker.subtitle') }}\n      </p>\n\n      <!-- Path Input -->\n      <div class=\"flex gap-2 px-12\">\n        <InputText\n          v-model=\"installPath\"\n          :placeholder=\"$t('install.locationPicker.pathPlaceholder')\"\n          class=\"flex-1 bg-neutral-800/50 border-neutral-700 text-neutral-200 placeholder:text-neutral-500\"\n          :class=\"{ 'p-invalid': pathError }\"\n          @update:model-value=\"validatePath\"\n          @focus=\"onFocus\"\n        />\n        <Button\n          icon=\"pi pi-folder-open\"\n          severity=\"secondary\"\n          class=\"bg-neutral-700 hover:bg-neutral-600 border-0\"\n          @click=\"browsePath\"\n        />\n      </div>\n\n      <!-- Error Messages -->\n      <div v-if=\"pathError || pathExists || nonDefaultDrive\" class=\"px-12\">\n        <Message\n          v-if=\"pathError\"\n          severity=\"error\"\n          class=\"whitespace-pre-line w-full\"\n        >\n          {{ pathError }}\n        </Message>\n        <Message v-if=\"pathExists\" severity=\"warn\" class=\"w-full\">\n          {{ $t('install.pathExists') }}\n        </Message>\n        <Message v-if=\"nonDefaultDrive\" severity=\"warn\" class=\"w-full\">\n          {{ $t('install.nonDefaultDrive') }}\n        </Message>\n      </div>\n\n      <!-- Collapsible Sections using PrimeVue Accordion -->\n      <Accordion\n        v-model:value=\"activeAccordionIndex\"\n        :multiple=\"true\"\n        class=\"location-picker-accordion\"\n        :pt=\"{\n          root: 'bg-transparent border-0',\n          panel: {\n            root: 'border-0 mb-0'\n          },\n          header: {\n            root: 'border-0',\n            content:\n              'text-neutral-400 hover:text-neutral-300 px-4 py-2 flex items-center gap-3',\n            toggleicon: 'text-xs order-first mr-0'\n          },\n          content: {\n            root: 'bg-transparent border-0',\n            content: 'text-neutral-500 text-sm pl-11 pb-3 pt-0'\n          }\n        }\"\n      >\n        <AccordionPanel value=\"0\">\n          <AccordionHeader>\n            {{ $t('install.locationPicker.migrateFromExisting') }}\n          </AccordionHeader>\n          <AccordionContent>\n            <MigrationPicker\n              v-model:source-path=\"migrationSourcePath\"\n              v-model:migration-item-ids=\"migrationItemIds\"\n            />\n          </AccordionContent>\n        </AccordionPanel>\n\n        <AccordionPanel value=\"1\">\n          <AccordionHeader>\n            {{ $t('install.locationPicker.chooseDownloadServers') }}\n          </AccordionHeader>\n          <AccordionContent>\n            <template\n              v-for=\"([item, modelValue], index) in mirrors\"\n              :key=\"item.settingId + item.mirror\"\n            >\n              <Divider v-if=\"index > 0\" class=\"my-8\" />\n\n              <MirrorItem\n                v-model=\"modelValue.value\"\n                :item=\"item\"\n                @state-change=\"validationStates[index] = $event\"\n              />\n            </template>\n          </AccordionContent>\n        </AccordionPanel>\n      </Accordion>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { TorchDeviceType } from '@comfyorg/comfyui-electron-types'\nimport { TorchMirrorUrl } from '@comfyorg/comfyui-electron-types'\nimport Accordion from 'primevue/accordion'\nimport AccordionContent from 'primevue/accordioncontent'\nimport AccordionHeader from 'primevue/accordionheader'\nimport AccordionPanel from 'primevue/accordionpanel'\nimport Button from 'primevue/button'\nimport Divider from 'primevue/divider'\nimport InputText from 'primevue/inputtext'\nimport Message from 'primevue/message'\nimport { type ModelRef, computed, onMounted, ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport MigrationPicker from '@/components/install/MigrationPicker.vue'\nimport MirrorItem from '@/components/install/mirror/MirrorItem.vue'\nimport {\n  PYPI_MIRROR,\n  PYTHON_MIRROR,\n  type UVMirror\n} from '@/constants/uvMirrors'\nimport { electronAPI } from '@/utils/envUtil'\nimport { isInChina } from '@/utils/networkUtil'\nimport { ValidationState } from '@/utils/validationUtil'\n\nconst { t } = useI18n()\n\nconst installPath = defineModel<string>('installPath', { required: true })\nconst pathError = defineModel<string>('pathError', { required: true })\nconst migrationSourcePath = defineModel<string>('migrationSourcePath')\nconst migrationItemIds = defineModel<string[]>('migrationItemIds')\nconst pythonMirror = defineModel<string>('pythonMirror', {\n  default: ''\n})\nconst pypiMirror = defineModel<string>('pypiMirror', {\n  default: ''\n})\nconst torchMirror = defineModel<string>('torchMirror', {\n  default: ''\n})\n\nconst { device } = defineProps<{ device: TorchDeviceType | null }>()\n\nconst pathExists = ref(false)\nconst nonDefaultDrive = ref(false)\nconst inputTouched = ref(false)\n\n// Accordion state - array of active panel values\nconst activeAccordionIndex = ref<string[] | undefined>(undefined)\n\nconst electron = electronAPI()\n\n// Mirror configuration logic\nconst getTorchMirrorItem = (device: TorchDeviceType): UVMirror => {\n  const settingId = 'Comfy-Desktop.UV.TorchInstallMirror'\n  switch (device) {\n    case 'mps':\n      return {\n        settingId,\n        mirror: TorchMirrorUrl.NightlyCpu,\n        fallbackMirror: TorchMirrorUrl.NightlyCpu\n      }\n    case 'nvidia':\n      return {\n        settingId,\n        mirror: TorchMirrorUrl.Cuda,\n        fallbackMirror: TorchMirrorUrl.Cuda\n      }\n    case 'cpu':\n    default:\n      return {\n        settingId,\n        mirror: PYPI_MIRROR.mirror,\n        fallbackMirror: PYPI_MIRROR.fallbackMirror\n      }\n  }\n}\n\nconst userIsInChina = ref(false)\nconst useFallbackMirror = (mirror: UVMirror) => ({\n  ...mirror,\n  mirror: mirror.fallbackMirror\n})\n\nconst mirrors = computed<[UVMirror, ModelRef<string>][]>(() =>\n  (\n    [\n      [PYTHON_MIRROR, pythonMirror],\n      [PYPI_MIRROR, pypiMirror],\n      [getTorchMirrorItem(device ?? 'cpu'), torchMirror]\n    ] as [UVMirror, ModelRef<string>][]\n  ).map(([item, modelValue]) => [\n    userIsInChina.value ? useFallbackMirror(item) : item,\n    modelValue\n  ])\n)\n\nconst validationStates = ref<ValidationState[]>(\n  mirrors.value.map(() => ValidationState.IDLE)\n)\n\n// Get default install path on component mount\nonMounted(async () => {\n  const paths = await electron.getSystemPaths()\n  installPath.value = paths.defaultInstallPath\n  await validatePath(paths.defaultInstallPath)\n  userIsInChina.value = await isInChina()\n})\n\nconst validatePath = async (path: string | undefined) => {\n  try {\n    pathError.value = ''\n    pathExists.value = false\n    nonDefaultDrive.value = false\n    const validation = await electron.validateInstallPath(path ?? '')\n\n    // Create a pre-formatted list of errors\n    if (!validation.isValid) {\n      const errors: string[] = []\n      if (validation.cannotWrite) errors.push(t('install.cannotWrite'))\n      if (validation.freeSpace < validation.requiredSpace) {\n        const requiredGB = validation.requiredSpace / 1024 / 1024 / 1024\n        errors.push(`${t('install.insufficientFreeSpace')}: ${requiredGB} GB`)\n      }\n      if (validation.parentMissing) errors.push(t('install.parentMissing'))\n      if (validation.isOneDrive) errors.push(t('install.isOneDrive'))\n\n      if (validation.error)\n        errors.push(`${t('install.unhandledError')}: ${validation.error}`)\n      pathError.value = errors.join('\\n')\n    }\n\n    if (validation.isNonDefaultDrive) nonDefaultDrive.value = true\n    if (validation.exists) pathExists.value = true\n  } catch (error) {\n    pathError.value = t('install.pathValidationFailed')\n  }\n}\n\nconst browsePath = async () => {\n  try {\n    const result = await electron.showDirectoryPicker()\n    if (result) {\n      installPath.value = result\n      await validatePath(result)\n    }\n  } catch (error) {\n    pathError.value = t('install.failedToSelectDirectory')\n  }\n}\n\nconst onFocus = async () => {\n  if (!inputTouched.value) {\n    inputTouched.value = true\n    return\n  }\n  // Refresh validation on re-focus\n  await validatePath(installPath.value)\n}\n</script>\n\n<style scoped>\n@reference '../../assets/css/style.css';\n\n:deep(.location-picker-accordion) {\n  @apply px-12;\n\n  .p-accordionpanel {\n    @apply border-0 bg-transparent;\n  }\n\n  .p-accordionheader {\n    @apply bg-neutral-800/50 border-0 rounded-xl mt-2 hover:bg-neutral-700/50;\n    transition:\n      background-color 0.2s ease,\n      border-radius 0.5s ease;\n  }\n\n  /* When panel is expanded, adjust header border radius */\n  .p-accordionpanel-active {\n    .p-accordionheader {\n      @apply rounded-t-xl rounded-b-none;\n    }\n  }\n\n  .p-accordioncontent {\n    @apply bg-neutral-800/50 border-0 rounded-b-xl rounded-t-none;\n  }\n\n  .p-accordioncontent-content {\n    @apply bg-transparent pt-3 pr-5 pb-5 pl-5;\n  }\n\n  /* Override default chevron icons to use up/down */\n  .p-accordionheader-toggle-icon {\n    &::before {\n      content: '\\e933';\n    }\n  }\n\n  .p-accordionpanel-active {\n    .p-accordionheader-toggle-icon {\n      &::before {\n        content: '\\e902';\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <BaseViewTemplate dark>\n    <!-- Fixed height container with flexbox layout for proper content management -->\n    <div class=\"w-full h-full flex flex-col\">\n      <Stepper\n        v-model:value=\"currentStep\"\n        class=\"flex flex-col h-full\"\n        @update:value=\"handleStepChange\"\n      >\n        <!-- Main content area that grows to fill available space -->\n        <StepPanels\n          class=\"flex-1 overflow-auto\"\n          :style=\"{ scrollbarGutter: 'stable' }\"\n        >\n          <StepPanel value=\"1\" class=\"flex\">\n            <GpuPicker v-model:device=\"device\" />\n          </StepPanel>\n          <StepPanel value=\"2\">\n            <InstallLocationPicker\n              v-model:install-path=\"installPath\"\n              v-model:path-error=\"pathError\"\n              v-model:migration-source-path=\"migrationSourcePath\"\n              v-model:migration-item-ids=\"migrationItemIds\"\n              v-model:python-mirror=\"pythonMirror\"\n              v-model:pypi-mirror=\"pypiMirror\"\n              v-model:torch-mirror=\"torchMirror\"\n              :device=\"device\"\n            />\n          </StepPanel>\n          <StepPanel value=\"3\">\n            <DesktopSettingsConfiguration\n              v-model:auto-update=\"autoUpdate\"\n              v-model:allow-metrics=\"allowMetrics\"\n            />\n          </StepPanel>\n        </StepPanels>\n\n        <!-- Install footer with navigation -->\n        <InstallFooter\n          class=\"w-full max-w-2xl my-6 mx-auto\"\n          :current-step\n          :can-proceed\n          :disable-location-step=\"noGpu\"\n          :disable-migration-step=\"noGpu || hasError || highestStep < 2\"\n          :disable-settings-step=\"noGpu || hasError || highestStep < 3\"\n          @previous=\"goToPreviousStep\"\n          @next=\"goToNextStep\"\n          @install=\"install\"\n        />\n      </Stepper>\n    </div>\n  </BaseViewTemplate>\n</template>\n\n<script setup lang=\"ts\">\nimport type {\n  InstallOptions,\n  TorchDeviceType\n} from '@comfyorg/comfyui-electron-types'\nimport StepPanel from 'primevue/steppanel'\nimport StepPanels from 'primevue/steppanels'\nimport Stepper from 'primevue/stepper'\nimport { computed, onMounted, ref, toRaw } from 'vue'\nimport { useRouter } from 'vue-router'\n\nimport DesktopSettingsConfiguration from '@/components/install/DesktopSettingsConfiguration.vue'\nimport GpuPicker from '@/components/install/GpuPicker.vue'\nimport InstallFooter from '@/components/install/InstallFooter.vue'\nimport InstallLocationPicker from '@/components/install/InstallLocationPicker.vue'\nimport { electronAPI } from '@/utils/envUtil'\nimport BaseViewTemplate from '@/views/templates/BaseViewTemplate.vue'\n\nconst device = ref<TorchDeviceType | null>(null)\n\nconst installPath = ref('')\nconst pathError = ref('')\n\nconst migrationSourcePath = ref('')\nconst migrationItemIds = ref<string[]>([])\n\nconst autoUpdate = ref(true)\nconst allowMetrics = ref(true)\nconst pythonMirror = ref('')\nconst pypiMirror = ref('')\nconst torchMirror = ref('')\n\n/** Current step in the stepper */\nconst currentStep = ref('1')\n\n/** Forces each install step to be visited at least once. */\nconst highestStep = ref(0)\n\nconst handleStepChange = (value: string | number) => {\n  setHighestStep(value)\n\n  electronAPI().Events.trackEvent('install_stepper_change', {\n    step: value\n  })\n}\n\nconst setHighestStep = (value: string | number) => {\n  const int = typeof value === 'number' ? value : parseInt(value, 10)\n  if (!isNaN(int) && int > highestStep.value) highestStep.value = int\n}\n\nconst hasError = computed(() => pathError.value !== '')\nconst noGpu = computed(() => typeof device.value !== 'string')\n\n// Computed property to determine if user can proceed to next step\nconst regex = /^Insufficient space - minimum free space: \\d+ GB$/\n\nconst canProceed = computed(() => {\n  switch (currentStep.value) {\n    case '1':\n      return typeof device.value === 'string'\n    case '2':\n      return pathError.value === '' || regex.test(pathError.value)\n    case '3':\n      return !hasError.value\n    default:\n      return false\n  }\n})\n\n// Navigation methods\nconst goToNextStep = () => {\n  const nextStep = (parseInt(currentStep.value) + 1).toString()\n  currentStep.value = nextStep\n  setHighestStep(nextStep)\n  electronAPI().Events.trackEvent('install_stepper_change', {\n    step: nextStep\n  })\n}\n\nconst goToPreviousStep = () => {\n  const prevStep = (parseInt(currentStep.value) - 1).toString()\n  currentStep.value = prevStep\n  electronAPI().Events.trackEvent('install_stepper_change', {\n    step: prevStep\n  })\n}\n\nconst electron = electronAPI()\nconst router = useRouter()\nconst install = async () => {\n  const options: InstallOptions = {\n    installPath: installPath.value,\n    autoUpdate: autoUpdate.value,\n    allowMetrics: allowMetrics.value,\n    migrationSourcePath: migrationSourcePath.value,\n    migrationItemIds: toRaw(migrationItemIds.value),\n    pythonMirror: pythonMirror.value,\n    pypiMirror: pypiMirror.value,\n    torchMirror: torchMirror.value,\n    // @ts-expect-error fixme ts strict error\n    device: device.value\n  }\n  electron.installComfyUI(options)\n\n  const nextPage =\n    options.device === 'unsupported' ? '/manual-configuration' : '/server-start'\n  await router.push(nextPage)\n}\n\nonMounted(async () => {\n  if (!electron) return\n\n  const detectedGpu = await electron.Config.getDetectedGpu()\n  if (detectedGpu === 'mps' || detectedGpu === 'nvidia') {\n    device.value = detectedGpu\n  }\n\n  electronAPI().Events.trackEvent('install_stepper_change', {\n    step: currentStep.value,\n    gpu: detectedGpu\n  })\n})\n</script>\n\n<style scoped>\n@reference '../assets/css/style.css';\n\n:deep(.p-steppanel) {\n  @apply mt-8 flex justify-center bg-transparent;\n}\n\n/* Remove default padding/margin from StepPanels to make scrollbar flush */\n:deep(.p-steppanels) {\n  @apply p-0 m-0;\n}\n\n/* Ensure StepPanel content container has no top/bottom padding */\n:deep(.p-steppanel-content) {\n  @apply p-0;\n}\n\n/* Custom overlay scrollbar for WebKit browsers (Electron, Chrome) */\n:deep(.p-steppanels::-webkit-scrollbar) {\n  @apply w-4;\n}\n\n:deep(.p-steppanels::-webkit-scrollbar-track) {\n  @apply bg-transparent;\n}\n\n:deep(.p-steppanels::-webkit-scrollbar-thumb) {\n  @apply bg-white/20 rounded-lg border-[4px] border-transparent;\n  background-clip: content-box;\n}\n</style>\n"],"names":["_useModel","sourcePath"],"mappings":"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"}