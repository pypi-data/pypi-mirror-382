============================
Подсистема статусов объектов
============================

Пакет ``m3-object-statuses`` предоставляет средства для работы со статусами
объектов.

Возможности
-----------

* Ведение справочника статусов.
* Определение статусов, допустимых для каждого типа объектов.
* Определение допустимых для каждого типа объектов переходов между статусами.
* Ведение истории изменения статусов.

Системные требования
--------------------

* `Python <http://www.python.org/>`_ 3.6
* `Django <http://djangoproject.com/>`_ 1.11
* `m3-core <https://pypi.python.org/pypi/m3-core>`_ 2.2
* `m3-ui <https://pypi.python.org/pypi/m3-ui>`_ 2.2

Установка
---------

Процесс установки и подключения пакета описан в документации.

Работа с репозиторием
---------------------

Репозиторий размещается по адресу
https://stash.bars-open.ru/projects/M3/repos/m3-object-statuses.

Для работы с репозиторием (внесения изменений, просмотра документации и т.д.)
нужно:

1. скачать репозиторий

   ::

     git clone ssh://git@stash.bars-open.ru:7999/m3/m3-object-statuses.git

или

   ::

     git clone https://andrey.chagochkin@stash.bars-open.ru/scm/m3/m3-object-statuses.git

2. создать виртуальное окружение с Python 3.6 для пакета, например так:

   ::

     mkvirtualenv m3-object-statuses

3. установить в окружение Fabric3:

   ::

     pip install Fabric3

В репозитории рутинные операции автоматизированы с помощью `Fabric
<http://www.fabfile.org/>`_, список доступных заданий можно посмотреть после
установки Fabric3 с помощью команды (выполняется в папке репозитория)

   ::

     fab -l

Документация
------------

Документация размещена в папке ``docs`` репозитория пакета. Для сборки и
последующего просмотра документации нужно выполнить следующие шаги:

1. сформировать документацию по API:

   ::

     fab doc.api

2. сформировать документацию в формате HTML:

   ::

     fab doc.build

3. открыть главную страницу в браузере

   ::

     fab doc.browser

Требования к разработке
-----------------------

1. После внесения изменений в python-код нужно выполнить команду ``fab src``,
   она должна выполняться без ошибок.

2. Помимо проверки кода анализаторами, нужно убедиться, что все тесты
   выполняются: ``fab tests.run``.

3. Изменения в репозитории не должны снижать степень покрытия тестами
   (отображается после выполнения тестов через ``fab tests.run``).
