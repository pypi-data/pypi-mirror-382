# -*- coding: utf-8 -*-
# Generated by https://github.com/connectrpc/connect-python.  DO NOT EDIT!
# source: proto/agentlab/testdatasets/v1/testdataset_service.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connectrpc.client import ConnectClient, ConnectClientSync
from connectrpc.code import Code
from connectrpc.errors import ConnectError
from connectrpc.interceptor import Interceptor, InterceptorSync
from connectrpc.method import IdempotencyLevel, MethodInfo
from connectrpc.request import Headers, RequestContext
from connectrpc.server import ConnectASGIApplication, ConnectWSGIApplication, Endpoint, EndpointSync
import google.protobuf.empty_pb2 as google_dot_protobuf_dot_empty__pb2
import agentlab.proto.agentlab.testdatasets.v1.test_pb2 as proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2
import agentlab.proto.agentlab.testdatasets.v1.testdataset_pb2 as proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2
import agentlab.proto.agentlab.testdatasets.v1.testdataset_service_pb2 as proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2


class TestDatasetService(Protocol):
    async def create_test_dataset(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestDatasetRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_test_dataset(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestDatasetRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def list_test_datasets(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update_test_dataset(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestDatasetRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete_test_dataset(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestDatasetRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def create_test(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_test(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def list_tests(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update_test(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete_test(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class TestDatasetServiceASGIApplication(ConnectASGIApplication):
    def __init__(self, service: TestDatasetService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/agentlab.testdatasets.v1.TestDatasetService/CreateTestDataset": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateTestDataset",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestDatasetRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_test_dataset,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/GetTestDataset": Endpoint.unary(
                    method=MethodInfo(
                        name="GetTestDataset",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestDatasetRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_test_dataset,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/ListTestDatasets": Endpoint.unary(
                    method=MethodInfo(
                        name="ListTestDatasets",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_test_datasets,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/UpdateTestDataset": Endpoint.unary(
                    method=MethodInfo(
                        name="UpdateTestDataset",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestDatasetRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_test_dataset,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/DeleteTestDataset": Endpoint.unary(
                    method=MethodInfo(
                        name="DeleteTestDataset",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestDatasetRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_test_dataset,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/CreateTest": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateTest",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_test,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/GetTest": Endpoint.unary(
                    method=MethodInfo(
                        name="GetTest",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_test,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/ListTests": Endpoint.unary(
                    method=MethodInfo(
                        name="ListTests",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_tests,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/UpdateTest": Endpoint.unary(
                    method=MethodInfo(
                        name="UpdateTest",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_test,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/DeleteTest": Endpoint.unary(
                    method=MethodInfo(
                        name="DeleteTest",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_test,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/agentlab.testdatasets.v1.TestDatasetService"


class TestDatasetServiceClient(ConnectClient):
    async def create_test_dataset(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestDatasetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateTestDataset",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestDatasetRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_test_dataset(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestDatasetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetTestDataset",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestDatasetRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def list_test_datasets(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListTestDatasets",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update_test_dataset(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestDatasetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateTestDataset",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestDatasetRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete_test_dataset(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestDatasetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteTestDataset",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestDatasetRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def create_test(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateTest",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_test(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetTest",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def list_tests(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListTests",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update_test(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateTest",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete_test(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteTest",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class TestDatasetServiceSync(Protocol):
    def create_test_dataset(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestDatasetRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_test_dataset(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestDatasetRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def list_test_datasets(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update_test_dataset(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestDatasetRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete_test_dataset(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestDatasetRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def create_test(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_test(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def list_tests(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update_test(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete_test(self, request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class TestDatasetServiceWSGIApplication(ConnectWSGIApplication):
    def __init__(self, service: TestDatasetServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/agentlab.testdatasets.v1.TestDatasetService/CreateTestDataset": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateTestDataset",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestDatasetRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_test_dataset,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/GetTestDataset": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetTestDataset",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestDatasetRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_test_dataset,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/ListTestDatasets": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListTestDatasets",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_test_datasets,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/UpdateTestDataset": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpdateTestDataset",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestDatasetRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_test_dataset,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/DeleteTestDataset": EndpointSync.unary(
                    method=MethodInfo(
                        name="DeleteTestDataset",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestDatasetRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_test_dataset,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/CreateTest": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateTest",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_test,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/GetTest": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetTest",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_test,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/ListTests": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListTests",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_tests,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/UpdateTest": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpdateTest",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestRequest,
                        output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_test,
                ),
                "/agentlab.testdatasets.v1.TestDatasetService/DeleteTest": EndpointSync.unary(
                    method=MethodInfo(
                        name="DeleteTest",
                        service_name="agentlab.testdatasets.v1.TestDatasetService",
                        input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_test,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/agentlab.testdatasets.v1.TestDatasetService"


class TestDatasetServiceClientSync(ConnectClientSync):
    def create_test_dataset(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestDatasetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateTestDataset",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestDatasetRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_test_dataset(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestDatasetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetTestDataset",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestDatasetRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def list_test_datasets(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListTestDatasets",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestDatasetsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update_test_dataset(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestDatasetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateTestDataset",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestDatasetRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__pb2.TestDataset,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete_test_dataset(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestDatasetRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteTestDataset",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestDatasetRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def create_test(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateTest",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.CreateTestRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_test(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetTest",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.GetTestRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def list_tests(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListTests",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.ListTestsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update_test(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateTest",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.UpdateTestRequest,
                output=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_test__pb2.Test,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete_test(
        self,
        request: proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteTest",
                service_name="agentlab.testdatasets.v1.TestDatasetService",
                input=proto_dot_agentlab_dot_testdatasets_dot_v1_dot_testdataset__service__pb2.DeleteTestRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )
