# -*- coding: utf-8 -*-
# Generated by https://github.com/connectrpc/connect-python.  DO NOT EDIT!
# source: proto/agentlab/organizations/v1/organization_service.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connectrpc.client import ConnectClient, ConnectClientSync
from connectrpc.code import Code
from connectrpc.errors import ConnectError
from connectrpc.interceptor import Interceptor, InterceptorSync
from connectrpc.method import IdempotencyLevel, MethodInfo
from connectrpc.request import Headers, RequestContext
from connectrpc.server import ConnectASGIApplication, ConnectWSGIApplication, Endpoint, EndpointSync
import google.protobuf.empty_pb2 as google_dot_protobuf_dot_empty__pb2
import proto.agentlab.organizations.v1.organization_pb2 as proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2
import proto.agentlab.organizations.v1.organization_service_pb2 as proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2


class OrganizationService(Protocol):
    async def create_organization(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.CreateOrganizationRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_organization(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.GetOrganizationRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def list_organizations(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update_organization(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.UpdateOrganizationRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def delete_organization(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.DeleteOrganizationRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def add_domain_to_allowlist(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.AddDomainToAllowlistRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.DomainAllowlistEntry:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def remove_domain_from_allowlist(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.RemoveDomainFromAllowlistRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def list_domain_allowlist(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class OrganizationServiceASGIApplication(ConnectASGIApplication):
    def __init__(self, service: OrganizationService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/agentlab.organizations.v1.OrganizationService/CreateOrganization": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateOrganization",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.CreateOrganizationRequest,
                        output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_organization,
                ),
                "/agentlab.organizations.v1.OrganizationService/GetOrganization": Endpoint.unary(
                    method=MethodInfo(
                        name="GetOrganization",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.GetOrganizationRequest,
                        output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_organization,
                ),
                "/agentlab.organizations.v1.OrganizationService/ListOrganizations": Endpoint.unary(
                    method=MethodInfo(
                        name="ListOrganizations",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsRequest,
                        output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_organizations,
                ),
                "/agentlab.organizations.v1.OrganizationService/UpdateOrganization": Endpoint.unary(
                    method=MethodInfo(
                        name="UpdateOrganization",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.UpdateOrganizationRequest,
                        output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_organization,
                ),
                "/agentlab.organizations.v1.OrganizationService/DeleteOrganization": Endpoint.unary(
                    method=MethodInfo(
                        name="DeleteOrganization",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.DeleteOrganizationRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_organization,
                ),
                "/agentlab.organizations.v1.OrganizationService/AddDomainToAllowlist": Endpoint.unary(
                    method=MethodInfo(
                        name="AddDomainToAllowlist",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.AddDomainToAllowlistRequest,
                        output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.DomainAllowlistEntry,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.add_domain_to_allowlist,
                ),
                "/agentlab.organizations.v1.OrganizationService/RemoveDomainFromAllowlist": Endpoint.unary(
                    method=MethodInfo(
                        name="RemoveDomainFromAllowlist",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.RemoveDomainFromAllowlistRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.remove_domain_from_allowlist,
                ),
                "/agentlab.organizations.v1.OrganizationService/ListDomainAllowlist": Endpoint.unary(
                    method=MethodInfo(
                        name="ListDomainAllowlist",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistRequest,
                        output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_domain_allowlist,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/agentlab.organizations.v1.OrganizationService"


class OrganizationServiceClient(ConnectClient):
    async def create_organization(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.CreateOrganizationRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateOrganization",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.CreateOrganizationRequest,
                output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_organization(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.GetOrganizationRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetOrganization",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.GetOrganizationRequest,
                output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def list_organizations(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListOrganizations",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsRequest,
                output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update_organization(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.UpdateOrganizationRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateOrganization",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.UpdateOrganizationRequest,
                output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def delete_organization(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.DeleteOrganizationRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteOrganization",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.DeleteOrganizationRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def add_domain_to_allowlist(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.AddDomainToAllowlistRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.DomainAllowlistEntry:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="AddDomainToAllowlist",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.AddDomainToAllowlistRequest,
                output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.DomainAllowlistEntry,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def remove_domain_from_allowlist(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.RemoveDomainFromAllowlistRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="RemoveDomainFromAllowlist",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.RemoveDomainFromAllowlistRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def list_domain_allowlist(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListDomainAllowlist",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistRequest,
                output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class OrganizationServiceSync(Protocol):
    def create_organization(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.CreateOrganizationRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_organization(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.GetOrganizationRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def list_organizations(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update_organization(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.UpdateOrganizationRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def delete_organization(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.DeleteOrganizationRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def add_domain_to_allowlist(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.AddDomainToAllowlistRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.DomainAllowlistEntry:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def remove_domain_from_allowlist(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.RemoveDomainFromAllowlistRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def list_domain_allowlist(self, request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class OrganizationServiceWSGIApplication(ConnectWSGIApplication):
    def __init__(self, service: OrganizationServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/agentlab.organizations.v1.OrganizationService/CreateOrganization": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateOrganization",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.CreateOrganizationRequest,
                        output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_organization,
                ),
                "/agentlab.organizations.v1.OrganizationService/GetOrganization": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetOrganization",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.GetOrganizationRequest,
                        output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_organization,
                ),
                "/agentlab.organizations.v1.OrganizationService/ListOrganizations": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListOrganizations",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsRequest,
                        output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_organizations,
                ),
                "/agentlab.organizations.v1.OrganizationService/UpdateOrganization": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpdateOrganization",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.UpdateOrganizationRequest,
                        output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_organization,
                ),
                "/agentlab.organizations.v1.OrganizationService/DeleteOrganization": EndpointSync.unary(
                    method=MethodInfo(
                        name="DeleteOrganization",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.DeleteOrganizationRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.delete_organization,
                ),
                "/agentlab.organizations.v1.OrganizationService/AddDomainToAllowlist": EndpointSync.unary(
                    method=MethodInfo(
                        name="AddDomainToAllowlist",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.AddDomainToAllowlistRequest,
                        output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.DomainAllowlistEntry,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.add_domain_to_allowlist,
                ),
                "/agentlab.organizations.v1.OrganizationService/RemoveDomainFromAllowlist": EndpointSync.unary(
                    method=MethodInfo(
                        name="RemoveDomainFromAllowlist",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.RemoveDomainFromAllowlistRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.remove_domain_from_allowlist,
                ),
                "/agentlab.organizations.v1.OrganizationService/ListDomainAllowlist": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListDomainAllowlist",
                        service_name="agentlab.organizations.v1.OrganizationService",
                        input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistRequest,
                        output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_domain_allowlist,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/agentlab.organizations.v1.OrganizationService"


class OrganizationServiceClientSync(ConnectClientSync):
    def create_organization(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.CreateOrganizationRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateOrganization",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.CreateOrganizationRequest,
                output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_organization(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.GetOrganizationRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetOrganization",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.GetOrganizationRequest,
                output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def list_organizations(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListOrganizations",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsRequest,
                output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListOrganizationsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update_organization(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.UpdateOrganizationRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateOrganization",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.UpdateOrganizationRequest,
                output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.Organization,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def delete_organization(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.DeleteOrganizationRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="DeleteOrganization",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.DeleteOrganizationRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def add_domain_to_allowlist(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.AddDomainToAllowlistRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.DomainAllowlistEntry:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="AddDomainToAllowlist",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.AddDomainToAllowlistRequest,
                output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__pb2.DomainAllowlistEntry,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def remove_domain_from_allowlist(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.RemoveDomainFromAllowlistRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="RemoveDomainFromAllowlist",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.RemoveDomainFromAllowlistRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def list_domain_allowlist(
        self,
        request: proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListDomainAllowlist",
                service_name="agentlab.organizations.v1.OrganizationService",
                input=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistRequest,
                output=proto_dot_agentlab_dot_organizations_dot_v1_dot_organization__service__pb2.ListDomainAllowlistResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )
