# -*- coding: utf-8 -*-
# Generated by https://github.com/connectrpc/connect-python.  DO NOT EDIT!
# source: proto/agentlab/iam/v1/iam_service.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connectrpc.client import ConnectClient, ConnectClientSync
from connectrpc.code import Code
from connectrpc.errors import ConnectError
from connectrpc.interceptor import Interceptor, InterceptorSync
from connectrpc.method import IdempotencyLevel, MethodInfo
from connectrpc.request import Headers, RequestContext
from connectrpc.server import ConnectASGIApplication, ConnectWSGIApplication, Endpoint, EndpointSync
import google.protobuf.empty_pb2 as google_dot_protobuf_dot_empty__pb2
import proto.agentlab.iam.v1.iam_service_pb2 as proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2
import proto.agentlab.iam.v1.membership_pb2 as proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2


class IAMService(Protocol):
    async def validate_token(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def get_auth_context(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def invite_user(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.InviteUserRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Invitation:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def accept_invitation(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.AcceptInvitationRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def list_members(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def update_membership(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.UpdateMembershipRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def remove_member(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RemoveMemberRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def list_invitations(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def cancel_invitation(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CancelInvitationRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def create_a_p_i_token(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def list_a_p_i_tokens(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")

    async def revoke_a_p_i_token(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RevokeAPITokenRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class IAMServiceASGIApplication(ConnectASGIApplication):
    def __init__(self, service: IAMService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/agentlab.iam.v1.IAMService/ValidateToken": Endpoint.unary(
                    method=MethodInfo(
                        name="ValidateToken",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.validate_token,
                ),
                "/agentlab.iam.v1.IAMService/GetAuthContext": Endpoint.unary(
                    method=MethodInfo(
                        name="GetAuthContext",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_auth_context,
                ),
                "/agentlab.iam.v1.IAMService/InviteUser": Endpoint.unary(
                    method=MethodInfo(
                        name="InviteUser",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.InviteUserRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Invitation,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.invite_user,
                ),
                "/agentlab.iam.v1.IAMService/AcceptInvitation": Endpoint.unary(
                    method=MethodInfo(
                        name="AcceptInvitation",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.AcceptInvitationRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.accept_invitation,
                ),
                "/agentlab.iam.v1.IAMService/ListMembers": Endpoint.unary(
                    method=MethodInfo(
                        name="ListMembers",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_members,
                ),
                "/agentlab.iam.v1.IAMService/UpdateMembership": Endpoint.unary(
                    method=MethodInfo(
                        name="UpdateMembership",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.UpdateMembershipRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_membership,
                ),
                "/agentlab.iam.v1.IAMService/RemoveMember": Endpoint.unary(
                    method=MethodInfo(
                        name="RemoveMember",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RemoveMemberRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.remove_member,
                ),
                "/agentlab.iam.v1.IAMService/ListInvitations": Endpoint.unary(
                    method=MethodInfo(
                        name="ListInvitations",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_invitations,
                ),
                "/agentlab.iam.v1.IAMService/CancelInvitation": Endpoint.unary(
                    method=MethodInfo(
                        name="CancelInvitation",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CancelInvitationRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.cancel_invitation,
                ),
                "/agentlab.iam.v1.IAMService/CreateAPIToken": Endpoint.unary(
                    method=MethodInfo(
                        name="CreateAPIToken",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_a_p_i_token,
                ),
                "/agentlab.iam.v1.IAMService/ListAPITokens": Endpoint.unary(
                    method=MethodInfo(
                        name="ListAPITokens",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_a_p_i_tokens,
                ),
                "/agentlab.iam.v1.IAMService/RevokeAPIToken": Endpoint.unary(
                    method=MethodInfo(
                        name="RevokeAPIToken",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RevokeAPITokenRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.revoke_a_p_i_token,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/agentlab.iam.v1.IAMService"


class IAMServiceClient(ConnectClient):
    async def validate_token(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ValidateToken",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def get_auth_context(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAuthContext",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def invite_user(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.InviteUserRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Invitation:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="InviteUser",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.InviteUserRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Invitation,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def accept_invitation(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.AcceptInvitationRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="AcceptInvitation",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.AcceptInvitationRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def list_members(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListMembers",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def update_membership(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.UpdateMembershipRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateMembership",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.UpdateMembershipRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def remove_member(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RemoveMemberRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="RemoveMember",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RemoveMemberRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def list_invitations(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListInvitations",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def cancel_invitation(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CancelInvitationRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CancelInvitation",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CancelInvitationRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def create_a_p_i_token(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateAPIToken",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def list_a_p_i_tokens(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListAPITokens",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def revoke_a_p_i_token(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RevokeAPITokenRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="RevokeAPIToken",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RevokeAPITokenRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class IAMServiceSync(Protocol):
    def validate_token(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def get_auth_context(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def invite_user(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.InviteUserRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Invitation:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def accept_invitation(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.AcceptInvitationRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def list_members(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def update_membership(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.UpdateMembershipRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def remove_member(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RemoveMemberRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def list_invitations(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def cancel_invitation(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CancelInvitationRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def create_a_p_i_token(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def list_a_p_i_tokens(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensRequest, ctx: RequestContext) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensResponse:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")
    def revoke_a_p_i_token(self, request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RevokeAPITokenRequest, ctx: RequestContext) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnectError(Code.UNIMPLEMENTED, "Not implemented")


class IAMServiceWSGIApplication(ConnectWSGIApplication):
    def __init__(self, service: IAMServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None) -> None:
        super().__init__(
            endpoints={
                "/agentlab.iam.v1.IAMService/ValidateToken": EndpointSync.unary(
                    method=MethodInfo(
                        name="ValidateToken",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.validate_token,
                ),
                "/agentlab.iam.v1.IAMService/GetAuthContext": EndpointSync.unary(
                    method=MethodInfo(
                        name="GetAuthContext",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.get_auth_context,
                ),
                "/agentlab.iam.v1.IAMService/InviteUser": EndpointSync.unary(
                    method=MethodInfo(
                        name="InviteUser",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.InviteUserRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Invitation,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.invite_user,
                ),
                "/agentlab.iam.v1.IAMService/AcceptInvitation": EndpointSync.unary(
                    method=MethodInfo(
                        name="AcceptInvitation",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.AcceptInvitationRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.accept_invitation,
                ),
                "/agentlab.iam.v1.IAMService/ListMembers": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListMembers",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_members,
                ),
                "/agentlab.iam.v1.IAMService/UpdateMembership": EndpointSync.unary(
                    method=MethodInfo(
                        name="UpdateMembership",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.UpdateMembershipRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.update_membership,
                ),
                "/agentlab.iam.v1.IAMService/RemoveMember": EndpointSync.unary(
                    method=MethodInfo(
                        name="RemoveMember",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RemoveMemberRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.remove_member,
                ),
                "/agentlab.iam.v1.IAMService/ListInvitations": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListInvitations",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_invitations,
                ),
                "/agentlab.iam.v1.IAMService/CancelInvitation": EndpointSync.unary(
                    method=MethodInfo(
                        name="CancelInvitation",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CancelInvitationRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.cancel_invitation,
                ),
                "/agentlab.iam.v1.IAMService/CreateAPIToken": EndpointSync.unary(
                    method=MethodInfo(
                        name="CreateAPIToken",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.create_a_p_i_token,
                ),
                "/agentlab.iam.v1.IAMService/ListAPITokens": EndpointSync.unary(
                    method=MethodInfo(
                        name="ListAPITokens",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensRequest,
                        output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.list_a_p_i_tokens,
                ),
                "/agentlab.iam.v1.IAMService/RevokeAPIToken": EndpointSync.unary(
                    method=MethodInfo(
                        name="RevokeAPIToken",
                        service_name="agentlab.iam.v1.IAMService",
                        input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RevokeAPITokenRequest,
                        output=google_dot_protobuf_dot_empty__pb2.Empty,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.revoke_a_p_i_token,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self) -> str:
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/agentlab.iam.v1.IAMService"


class IAMServiceClientSync(ConnectClientSync):
    def validate_token(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ValidateToken",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ValidateTokenResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def get_auth_context(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="GetAuthContext",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.GetAuthContextResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def invite_user(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.InviteUserRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Invitation:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="InviteUser",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.InviteUserRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Invitation,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def accept_invitation(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.AcceptInvitationRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="AcceptInvitation",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.AcceptInvitationRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def list_members(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListMembers",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListMembersResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def update_membership(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.UpdateMembershipRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="UpdateMembership",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.UpdateMembershipRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_membership__pb2.Membership,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def remove_member(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RemoveMemberRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="RemoveMember",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RemoveMemberRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def list_invitations(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListInvitations",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListInvitationsResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def cancel_invitation(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CancelInvitationRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CancelInvitation",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CancelInvitationRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def create_a_p_i_token(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="CreateAPIToken",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.CreateAPITokenResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def list_a_p_i_tokens(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="ListAPITokens",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensRequest,
                output=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.ListAPITokensResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def revoke_a_p_i_token(
        self,
        request: proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RevokeAPITokenRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="RevokeAPIToken",
                service_name="agentlab.iam.v1.IAMService",
                input=proto_dot_agentlab_dot_iam_dot_v1_dot_iam__service__pb2.RevokeAPITokenRequest,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )
