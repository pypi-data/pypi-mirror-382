"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Frequenz Assets API

Frequenz gRPC API to retrieval platform assets information.

Copyright:
Copyright 2025 Frequenz Energy-as-a-Service GmbH

License:
MIT
"""

import builtins
import collections.abc
import frequenz.api.common.v1alpha8.microgrid.electrical_components.electrical_components_pb2
import frequenz.api.common.v1alpha8.microgrid.microgrid_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GetMicrogridRequest(google.protobuf.message.Message):
    """GetMicrogridRequest is the input parameter for fetching details
    given a specific microgrid.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MICROGRID_ID_FIELD_NUMBER: builtins.int
    microgrid_id: builtins.int
    """The unique identifier of the microgrid for which to fetch details."""
    def __init__(
        self,
        *,
        microgrid_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["microgrid_id", b"microgrid_id"]) -> None: ...

global___GetMicrogridRequest = GetMicrogridRequest

@typing.final
class GetMicrogridResponse(google.protobuf.message.Message):
    """GetMicrogridResponse is the response for fetching details
    given a specific microgrid.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MICROGRID_FIELD_NUMBER: builtins.int
    @property
    def microgrid(self) -> frequenz.api.common.v1alpha8.microgrid.microgrid_pb2.Microgrid:
        """Details of the requested microgrid."""

    def __init__(
        self,
        *,
        microgrid: frequenz.api.common.v1alpha8.microgrid.microgrid_pb2.Microgrid | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["microgrid", b"microgrid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["microgrid", b"microgrid"]) -> None: ...

global___GetMicrogridResponse = GetMicrogridResponse

@typing.final
class ListMicrogridElectricalComponentsRequest(google.protobuf.message.Message):
    """Request parameters for the RPC `ListMicrogridElectricalComponents`."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MICROGRID_ID_FIELD_NUMBER: builtins.int
    COMPONENT_IDS_FIELD_NUMBER: builtins.int
    CATEGORIES_FIELD_NUMBER: builtins.int
    microgrid_id: builtins.int
    """Mandatory field. The ID of the microgrid for which components
    are to be listed.
    """
    @property
    def component_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Return components that have the specified IDs only."""

    @property
    def categories(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[frequenz.api.common.v1alpha8.microgrid.electrical_components.electrical_components_pb2.ElectricalComponentCategory.ValueType]:
        """Return components that have the specified categories only."""

    def __init__(
        self,
        *,
        microgrid_id: builtins.int = ...,
        component_ids: collections.abc.Iterable[builtins.int] | None = ...,
        categories: collections.abc.Iterable[frequenz.api.common.v1alpha8.microgrid.electrical_components.electrical_components_pb2.ElectricalComponentCategory.ValueType] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["categories", b"categories", "component_ids", b"component_ids", "microgrid_id", b"microgrid_id"]) -> None: ...

global___ListMicrogridElectricalComponentsRequest = ListMicrogridElectricalComponentsRequest

@typing.final
class ListMicrogridElectricalComponentsResponse(google.protobuf.message.Message):
    """A message containing a list of electrical components."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MICROGRID_ID_FIELD_NUMBER: builtins.int
    COMPONENTS_FIELD_NUMBER: builtins.int
    microgrid_id: builtins.int
    """Unique microgrid identifier used in the request."""
    @property
    def components(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[frequenz.api.common.v1alpha8.microgrid.electrical_components.electrical_components_pb2.ElectricalComponent]:
        """List of electrical components matching the filter criteria."""

    def __init__(
        self,
        *,
        microgrid_id: builtins.int = ...,
        components: collections.abc.Iterable[frequenz.api.common.v1alpha8.microgrid.electrical_components.electrical_components_pb2.ElectricalComponent] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["components", b"components", "microgrid_id", b"microgrid_id"]) -> None: ...

global___ListMicrogridElectricalComponentsResponse = ListMicrogridElectricalComponentsResponse

@typing.final
class ListMicrogridElectricalComponentConnectionsRequest(google.protobuf.message.Message):
    """ListMicrogridElectricalComponentConnectionsRequest is used for filtering and listing
    the electrical connections between components in a specific microgrid. 
    These connections can be used to construct a component graph of the
    microgrid.


    !!! note "Component Graph"
        A component graph in the context of a microgrid refers to a directed graph
        where the nodes represent electrical components (like generators, batteries,
        or loads) and the edges represent electrical connections between them.
        The edges are directional, pointing away from the grid-connection point
        (or the root point for island microgrids).
        This means that for each edge, the source component is towards the grid
        connection point, and the destination component is pointing towards
        an underlying component.
        This graph provides a structured view of how electrical energy flows within
        the microgrid.

    !!! note "Filtering"
        Filtering can be done based on the source_component_id or
        destination_component_id. If these fields are left empty, connections with
        any source or destination will be returned.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MICROGRID_ID_FIELD_NUMBER: builtins.int
    SOURCE_COMPONENT_IDS_FIELD_NUMBER: builtins.int
    DESTINATION_COMPONENT_IDS_FIELD_NUMBER: builtins.int
    microgrid_id: builtins.int
    """Mandatory field. The ID of the microgrid
    for which connections are to be listed.
    """
    @property
    def source_component_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Only return connections that originate from these component IDs.
        If empty, no filtering is applied.
        """

    @property
    def destination_component_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Only return connections that terminate at these component IDs.
        If empty, no filtering is applied.
        """

    def __init__(
        self,
        *,
        microgrid_id: builtins.int = ...,
        source_component_ids: collections.abc.Iterable[builtins.int] | None = ...,
        destination_component_ids: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["destination_component_ids", b"destination_component_ids", "microgrid_id", b"microgrid_id", "source_component_ids", b"source_component_ids"]) -> None: ...

global___ListMicrogridElectricalComponentConnectionsRequest = ListMicrogridElectricalComponentConnectionsRequest

@typing.final
class ListMicrogridElectricalComponentConnectionsResponse(google.protobuf.message.Message):
    """ListMicrogridElectricalComponentConnectionsResponse holds the list of electrical
    connections that match the filter criteria specified in the
    ListMicrogridElectricalComponentConnectionsRequest.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MICROGRID_ID_FIELD_NUMBER: builtins.int
    CONNECTIONS_FIELD_NUMBER: builtins.int
    microgrid_id: builtins.int
    """The ID of the microgrid for which connections are returned."""
    @property
    def connections(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[frequenz.api.common.v1alpha8.microgrid.electrical_components.electrical_components_pb2.ElectricalComponentConnection]:
        """Contains the list of connections that match the filtering criteria."""

    def __init__(
        self,
        *,
        microgrid_id: builtins.int = ...,
        connections: collections.abc.Iterable[frequenz.api.common.v1alpha8.microgrid.electrical_components.electrical_components_pb2.ElectricalComponentConnection] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["connections", b"connections", "microgrid_id", b"microgrid_id"]) -> None: ...

global___ListMicrogridElectricalComponentConnectionsResponse = ListMicrogridElectricalComponentConnectionsResponse
