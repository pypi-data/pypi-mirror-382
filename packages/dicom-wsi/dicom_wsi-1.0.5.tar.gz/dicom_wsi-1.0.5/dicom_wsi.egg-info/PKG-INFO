Metadata-Version: 2.4
Name: dicom_wsi
Version: 1.0.5
Summary: Package for converting whole slide image files to dicom.
Home-page: https://github.com/Steven-N-Hart/dicom_wsi
Author: Steven N. Hart
Author-email: hart.steven@mayo.edu
License: MIT license
Keywords: dicom_wsi
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Requires-Python: >=3
License-File: LICENSE
License-File: AUTHORS.rst
Requires-Dist: pyvips
Requires-Dist: pydicom
Requires-Dist: PyYAML
Requires-Dist: numpy
Requires-Dist: Pillow
Requires-Dist: tifffile
Requires-Dist: tiffile
Requires-Dist: datetime
Requires-Dist: openslide-python
Requires-Dist: cython
Requires-Dist: pylibjpeg
Requires-Dist: pylibjpeg-libjpeg
Requires-Dist: pylibjpeg-openjpeg
Requires-Dist: pytest
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

=========
dicom_wsi
=========


.. image:: https://img.shields.io/pypi/v/dicom_wsi.svg
        :target: https://pypi.python.org/pypi/dicom_wsi

.. image:: https://img.shields.io/travis/Steven-N-Hart/dicom_wsi.svg
        :target: https://travis-ci.com/Steven-N-Hart/dicom_wsi

.. image:: https://readthedocs.org/projects/dicom-wsi/badge/?version=latest
        :target: https://dicom-wsi.readthedocs.io/en/latest/?badge=latest
        :alt: Documentation Status

----------

Package for converting whole slide image files to DICOM.

* Free software: MIT license
* Documentation: https://dicom-wsi.readthedocs.io.

=====
Usage
=====

First, you need to install dicom_wsi and its dependencies. See this link_ for details.

.. _link: https://dicom-wsi.readthedocs.io/en/latest/installation.html

To use dicom-wsi:
.. code-block:: console

    python dicom_wsi.cli -w <WSI File path> -o <OutputDirectory> -p <output file prefix> -y yaml/base.yaml

or

.. code-block:: python

    import dicom_wsi
    dicom_wsi.dicom_wsi.create_dicom(cfg, pools=n_pools)


That's it! Most of the time you wan't need to change anything. But if you do, please see the example yaml_ file.

.. _yaml: https://github.com/Steven-N-Hart/dicom_wsi/blob/master/dicom_wsi/yaml/base.yaml

Features
--------
* Validate DICOM elements using pydicom_
* Output format DICOM formatted files (vetted with dciodvfy_)

TODO
--------
* Find out how to determine what `FileMetaInformationGroupLength` should be


Credits
-------

This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.

.. _Cookiecutter: https://github.com/audreyr/cookiecutter
.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage
.. _dciodvfy: https://www.dclunie.com/dicom3tools/dciodvfy.html
.. _`file type`: https://openslide.org/
.. _pydicom: https://pydicom.github.io/


=======
History
=======

1.0.5 (2025-10-09)
------------------

* Fixed AttributeError in cli.py by updating __init__.py.

1.0.4 (2023-10-27)
------------------

* Decreased dependencies for install
* Added tryCatch for Aperio data without expected metadata



0.1.0 (2021-1-22)
------------------

* First release on PyPI.
