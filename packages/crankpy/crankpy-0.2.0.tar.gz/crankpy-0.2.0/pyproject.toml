[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "crankpy"
version = "0.2.0"
description = "Python Frontend Framework with Async/Generators, Powered by Crank.js"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Brian Kim", email = "briankimpossible@gmail.com"},
]
maintainers = [
    {name = "Brian Kim", email = "briankimpossible@gmail.com"},
]
keywords = ["crank", "components", "pyscript", "pyodide", "micropython", "generators", "ui", "hyperscript", "jsx", "browser"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "pyscript>=0.2.5",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "playwright>=1.40.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "pytest-playwright>=0.5.2",
]

[project.urls]
Homepage = "https://github.com/bikeshaving/crankpy"
Repository = "https://github.com/bikeshaving/crankpy"
Documentation = "https://github.com/bikeshaving/crankpy#readme"
"Bug Tracker" = "https://github.com/bikeshaving/crankpy/issues"
"JavaScript Core" = "https://crank.js.org"

[tool.setuptools.packages.find]
where = ["."]
include = ["crank*"]

[tool.setuptools.package-data]
crank = ["py.typed"]

[dependency-groups]
dev = [
    "pyright>=1.1.406",
    "ruff>=0.13.3",
]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by formatter
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*.py" = ["E402"]  # Allow imports after mocking setup
"examples/*.py" = ["E402", "B023"]  # Allow imports after setup and loop var binding issues

[tool.pyright]
pythonVersion = "3.8"
typeCheckingMode = "basic"  # Start with basic, not strict
reportUnknownMemberType = false  # For JS interop
reportUnknownVariableType = false  # For PyScript/Pyodide  
reportMissingImports = false  # Ignore JS module imports
include = ["crank", "tests/test_types.py"]  # Include type-only tests
exclude = ["tests/test_*.py", "examples"]  # Exclude runtime tests, include type tests
extraPaths = ["."]
