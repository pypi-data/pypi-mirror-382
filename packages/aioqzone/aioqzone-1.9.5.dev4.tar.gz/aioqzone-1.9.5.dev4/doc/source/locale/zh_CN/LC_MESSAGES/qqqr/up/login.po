# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aioqzone
# This file is distributed under the same license as the aioqzone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aioqzone \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-26 21:18+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/qqqr/up/login.rst:3
msgid "UpLogin and UpSession"
msgstr ""

#: of qqqr.up.web.UpWebLogin:3
msgid ""
":class:`~qqqr.up.encrypt.TeaEncoder` is the unique :class:`~qqqr.up.encrypt.PasswdEncoder`. "
"``NodeEncoder`` is removed."
msgstr ""

#: of qqqr.up.web.UpWebLogin.new:1
msgid "Create a :class:`UpWebSession`. This will trigger a GET to ``xlogin`` url."
msgstr ""

#: of qqqr.up.web.UpWebLogin.new
msgid "抛出"
msgstr ""

#: of qqqr.up.web.UpWebLogin.new:3
msgid "if response status != 200"
msgstr ""

#: of qqqr.up.web.UpWebLogin.new qqqr.up.web.UpWebLogin.try_login
msgid "返回类型"
msgstr ""

#: of qqqr.up.web.UpWebLogin.new:5
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~qqqr.up.web.UpWebSession\\``"
msgstr ""

#: of qqqr.up.web.UpWebLogin.new qqqr.up.web.UpWebLogin.try_login
msgid "返回"
msgstr ""

#: of qqqr.up.web.UpWebLogin.new:6
msgid "a up login session"
msgstr ""

#: of qqqr.up.h5.UpH5Login.check:1 qqqr.up.web.UpWebLogin.check:1
msgid ""
"This will call ``check`` api of Qzone, and receive result about whether this login needs a "
"captcha, sms verification, etc."
msgstr ""

#: of qqqr.up.h5.UpH5Login.check qqqr.up.web.UpWebLogin.check qqqr.up.web.UpWebLogin.send_sms_code
#: qqqr.up.web.UpWebLogin.try_login
msgid "参数"
msgstr ""

#: of qqqr.up.h5.UpH5Login.check:5 qqqr.up.web.UpWebLogin.check:5
msgid "Session got from :meth:`~UpWebLogin.new`."
msgstr ""

#: of qqqr.up.web.UpWebLogin.send_sms_code:1
msgid "Send verify sms (to get dynamic code)"
msgstr ""

#: of qqqr.up.web.UpWebLogin.send_sms_code:4
msgid "The up login session to send sms code"
msgstr ""

#: of qqqr.up.web.UpWebLogin.try_login:1
msgid ""
"Check if current session meets the login condition. It takes a session object and returns "
"response of this try."
msgstr ""

#: of qqqr.up.web.UpWebLogin.try_login:5
msgid "Store the session information"
msgstr ""

#: of qqqr.up.web.UpWebLogin.try_login:6
msgid ":sphinx_autodoc_typehints_type:`\\:py\\:class\\:\\`\\~qqqr.up.\\_model.LoginResp\\``"
msgstr ""

#: of qqqr.up.web.UpWebLogin.try_login:7
msgid "A login response"
msgstr ""

#: of qqqr.up.web.UpWebLogin.login:1
msgid "Block until cookie is received."
msgstr ""
