# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aioqzone
# This file is distributed under the same license as the aioqzone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aioqzone \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-04 16:34+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../source/qqqr/up/type.rst:2
msgid "UpLogin Types"
msgstr ""

#: of qqqr.up._model:1
msgid "Response validation in `qqqr.up.captcha`"
msgstr ""

#: of qqqr.up._model.CheckResp qqqr.up._model.LoginResp qqqr.up._model.VerifyResp
msgid "Fields"
msgstr ""

#: of qqqr.up._model.CheckResp:1
msgid ":py:obj:`code (int) <qqqr.up._model.CheckResp.code>`"
msgstr ""

#: of qqqr.up._model.CheckResp:1
msgid ":py:obj:`isRandSalt (int) <qqqr.up._model.CheckResp.isRandSalt>`"
msgstr ""

#: of qqqr.up._model.CheckResp:1
msgid ":py:obj:`ptdrvs (str) <qqqr.up._model.CheckResp.ptdrvs>`"
msgstr ""

#: of qqqr.up._model.CheckResp:1
msgid ":py:obj:`salt_repr (str) <qqqr.up._model.CheckResp.salt_repr>`"
msgstr ""

#: of qqqr.up._model.CheckResp:1
msgid ":py:obj:`session (str) <qqqr.up._model.CheckResp.session>`"
msgstr ""

#: of qqqr.up._model.CheckResp:1
msgid ":py:obj:`verifycode (str) <qqqr.up._model.CheckResp.verifycode>`"
msgstr ""

#: of qqqr.up._model.CheckResp:1
msgid ":py:obj:`verifysession (str) <qqqr.up._model.CheckResp.verifysession>`"
msgstr ""

#: ../../../docstring of qqqr.up._model.CheckResp.code:1
msgid "code = 0/2/3 hideVC; code = 1 showVC"
msgstr ""

#: of qqqr.up._model.LoginResp:1
msgid ":py:obj:`code (int) <qqqr.up._model.LoginResp.code>`"
msgstr ""

#: of qqqr.up._model.LoginResp:1
msgid ":py:obj:`cookies (qqqr.type.RedirectCookies | None) <qqqr.up._model.LoginResp.cookies>`"
msgstr ""

#: of qqqr.up._model.LoginResp:1
msgid ":py:obj:`msg (str) <qqqr.up._model.LoginResp.msg>`"
msgstr ""

#: of qqqr.up._model.LoginResp:1
msgid ":py:obj:`nickname (str) <qqqr.up._model.LoginResp.nickname>`"
msgstr ""

#: of qqqr.up._model.LoginResp:1
msgid ":py:obj:`pt_ev_token (str) <qqqr.up._model.LoginResp.pt_ev_token>`"
msgstr ""

#: of qqqr.up._model.LoginResp:1
msgid ""
":py:obj:`url (pydantic_core._pydantic_core.Url[pydantic_core._pydantic_core.Url] | str) "
"<qqqr.up._model.LoginResp.url>`"
msgstr ""

#: of qqqr.up._model.VerifyResp:1
msgid ":py:obj:`code (int) <qqqr.up._model.VerifyResp.code>`"
msgstr ""

#: of qqqr.up._model.VerifyResp:1
msgid ":py:obj:`errMessage (str) <qqqr.up._model.VerifyResp.errMessage>`"
msgstr ""

#: of qqqr.up._model.VerifyResp:1
msgid ":py:obj:`sess (str) <qqqr.up._model.VerifyResp.sess>`"
msgstr ""

#: of qqqr.up._model.VerifyResp:1
msgid ":py:obj:`ticket (str) <qqqr.up._model.VerifyResp.ticket>`"
msgstr ""

#: of qqqr.up._model.VerifyResp:1
msgid ":py:obj:`verifycode (str) <qqqr.up._model.VerifyResp.verifycode>`"
msgstr ""

#~ msgid "Response validation in `qqqr.up.captcha`"
#~ msgstr ""

#~ msgid "Fields"
#~ msgstr ""

#~ msgid ":py:obj:`img_url (str) <qqqr.up.type.BgElemCfg.img_url>`"
#~ msgstr ""

#~ msgid ":py:obj:`init_pos (List[int]) <qqqr.up.type.BgElemCfg.init_pos>`"
#~ msgstr ""

#~ msgid "relative url to get jigsaw puzzle image (background with dimmed piece shape)."
#~ msgstr ""

#~ msgid "sprite init position on captcha (x, y)"
#~ msgstr ""

#~ msgid ":py:obj:`common (qqqr.up.type.CommonCaptchaConf) <qqqr.up.type.CaptchaData.common>`"
#~ msgstr ""

#~ msgid ":py:obj:`render (qqqr.up.type.CaptchaDisplay) <qqqr.up.type.CaptchaData.render>`"
#~ msgstr ""

#~ msgid ":py:obj:`bg (qqqr.up.type.BgElemCfg) <qqqr.up.type.CaptchaDisplay.bg>`"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`fg_binding_list (List[qqqr.up.type.FgBindingCfg]) "
#~ "<qqqr.up.type.CaptchaDisplay.fg_binding_list>`"
#~ msgstr ""

#~ msgid ":py:obj:`sprite_url (str) <qqqr.up.type.CaptchaDisplay.sprite_url>`"
#~ msgstr ""

#~ msgid ":py:obj:`sprites (List[qqqr.up.type.FgElemCfg]) <qqqr.up.type.CaptchaDisplay.sprites>`"
#~ msgstr ""

#~ msgid "Background (puzzle)"
#~ msgstr ""

#~ msgid "relative url to get jigsaw piece (and handle) image."
#~ msgstr ""

#~ msgid "Foreground sprites"
#~ msgstr ""

#~ msgid ":py:obj:`code (int) <qqqr.up.type.CheckResp.code>`"
#~ msgstr ""

#~ msgid ":py:obj:`isRandSalt (int) <qqqr.up.type.CheckResp.isRandSalt>`"
#~ msgstr ""

#~ msgid ":py:obj:`ptdrvs (str) <qqqr.up.type.CheckResp.ptdrvs>`"
#~ msgstr ""

#~ msgid ":py:obj:`salt_repr (str) <qqqr.up.type.CheckResp.salt_repr>`"
#~ msgstr ""

#~ msgid ":py:obj:`session (str) <qqqr.up.type.CheckResp.session>`"
#~ msgstr ""

#~ msgid ":py:obj:`verifycode (str) <qqqr.up.type.CheckResp.verifycode>`"
#~ msgstr ""

#~ msgid ":py:obj:`verifysession (str) <qqqr.up.type.CheckResp.verifysession>`"
#~ msgstr ""

#~ msgid "code = 0/2/3 hideVC; code = 1 showVC"
#~ msgstr ""

#~ msgid ":py:obj:`pow_cfg (qqqr.up.type.PowCfg) <qqqr.up.type.CommonCaptchaConf.pow_cfg>`"
#~ msgstr ""

#~ msgid ":py:obj:`tdc_path (str) <qqqr.up.type.CommonCaptchaConf.tdc_path>`"
#~ msgstr ""

#~ msgid "Ians, duration = match_md5(pow_cfg)"
#~ msgstr ""

#~ msgid "relative path to get tdc.js"
#~ msgstr ""

#~ msgid ":py:obj:`bind_factor (int) <qqqr.up.type.FgBindingCfg.bind_factor>`"
#~ msgstr ""

#~ msgid ":py:obj:`bind_type (str) <qqqr.up.type.FgBindingCfg.bind_type>`"
#~ msgstr ""

#~ msgid ":py:obj:`master (int) <qqqr.up.type.FgBindingCfg.master>`"
#~ msgstr ""

#~ msgid ":py:obj:`slave (int) <qqqr.up.type.FgBindingCfg.slave>`"
#~ msgstr ""

#~ msgid ":py:obj:`id (int) <qqqr.up.type.FgElemCfg.id>`"
#~ msgstr ""

#~ msgid ":py:obj:`move_cfg (Optional[qqqr.up.type.MoveCfg]) <qqqr.up.type.FgElemCfg.move_cfg>`"
#~ msgstr ""

#~ msgid ":py:obj:`code (int) <qqqr.up.type.LoginResp.code>`"
#~ msgstr ""

#~ msgid ":py:obj:`msg (str) <qqqr.up.type.LoginResp.msg>`"
#~ msgstr ""

#~ msgid ":py:obj:`nickname (str) <qqqr.up.type.LoginResp.nickname>`"
#~ msgstr ""

#~ msgid ":py:obj:`url (Union[pydantic.networks.HttpUrl, str]) <qqqr.up.type.LoginResp.url>`"
#~ msgstr ""

#~ msgid ":py:obj:`data_type (Optional[List[str]]) <qqqr.up.type.MoveCfg.data_type>`"
#~ msgstr ""

#~ msgid ":py:obj:`move_factor (List[int]) <qqqr.up.type.MoveCfg.move_factor>`"
#~ msgstr ""

#~ msgid ":py:obj:`track_limit (str) <qqqr.up.type.MoveCfg.track_limit>`"
#~ msgstr ""

#~ msgid ":py:obj:`md5 (str) <qqqr.up.type.PowCfg.md5>`"
#~ msgstr ""

#~ msgid ":py:obj:`prefix (str) <qqqr.up.type.PowCfg.prefix>`"
#~ msgstr ""

#~ msgid ":py:obj:`capclass (int) <qqqr.up.type.PrehandleResp.capclass>`"
#~ msgstr ""

#~ msgid ":py:obj:`captcha (qqqr.up.type.CaptchaData) <qqqr.up.type.PrehandleResp.captcha>`"
#~ msgstr ""

#~ msgid ":py:obj:`log_js (str) <qqqr.up.type.PrehandleResp.log_js>`"
#~ msgstr ""

#~ msgid ":py:obj:`randstr (str) <qqqr.up.type.PrehandleResp.randstr>`"
#~ msgstr ""

#~ msgid ":py:obj:`sess (str) <qqqr.up.type.PrehandleResp.sess>`"
#~ msgstr ""

#~ msgid ":py:obj:`sid (str) <qqqr.up.type.PrehandleResp.sid>`"
#~ msgstr ""

#~ msgid ":py:obj:`src_1 (str) <qqqr.up.type.PrehandleResp.src_1>`"
#~ msgstr ""

#~ msgid ":py:obj:`src_2 (str) <qqqr.up.type.PrehandleResp.src_2>`"
#~ msgstr ""

#~ msgid ":py:obj:`src_3 (str) <qqqr.up.type.PrehandleResp.src_3>`"
#~ msgstr ""

#~ msgid ":py:obj:`state (int) <qqqr.up.type.PrehandleResp.state>`"
#~ msgstr ""

#~ msgid ":py:obj:`subcapclass (int) <qqqr.up.type.PrehandleResp.subcapclass>`"
#~ msgstr ""

#~ msgid ":py:obj:`ticket (str) <qqqr.up.type.PrehandleResp.ticket>`"
#~ msgstr ""

#~ msgid ":py:obj:`uip (str) <qqqr.up.type.PrehandleResp.uip>`"
#~ msgstr ""

#~ msgid "ipv6"
#~ msgstr ""

#~ msgid "Represents a sprite from a source material."
#~ msgstr ""

#~ msgid ":py:obj:`init_pos (List[int]) <qqqr.up.type.Sprite.init_pos>`"
#~ msgstr ""

#~ msgid ":py:obj:`size_2d (List[int]) <qqqr.up.type.Sprite.size_2d>`"
#~ msgstr ""

#~ msgid ":py:obj:`sprite_pos (List[int]) <qqqr.up.type.Sprite.sprite_pos>`"
#~ msgstr ""

#~ msgid "sprite size (w, h)"
#~ msgstr ""

#~ msgid "sprite position on material (x, y)"
#~ msgstr ""

#~ msgid ":py:obj:`code (int) <qqqr.up.type.VerifyResp.code>`"
#~ msgstr ""

#~ msgid ":py:obj:`errMessage (str) <qqqr.up.type.VerifyResp.errMessage>`"
#~ msgstr ""

#~ msgid ":py:obj:`sess (str) <qqqr.up.type.VerifyResp.sess>`"
#~ msgstr ""

#~ msgid ":py:obj:`ticket (str) <qqqr.up.type.VerifyResp.ticket>`"
#~ msgstr ""

#~ msgid ":py:obj:`verifycode (str) <qqqr.up.type.VerifyResp.verifycode>`"
#~ msgstr ""

#~ msgid ":py:obj:`move_cfg (qqqr.up.type.MoveCfg | None) <qqqr.up.type.FgElemCfg.move_cfg>`"
#~ msgstr ""

#~ msgid ":py:obj:`url (pydantic.networks.HttpUrl | str) <qqqr.up.type.LoginResp.url>`"
#~ msgstr ""

#~ msgid ":py:obj:`data_type (List[str] | None) <qqqr.up.type.MoveCfg.data_type>`"
#~ msgstr ""

#~ msgid ":py:obj:`img_url (str) <qqqr.up._model.BgElemCfg.img_url>`"
#~ msgstr ""

#~ msgid ":py:obj:`init_pos (List[int]) <qqqr.up._model.BgElemCfg.init_pos>`"
#~ msgstr ""

#~ msgid ":py:obj:`common (qqqr.up._model.CommonCaptchaConf) <qqqr.up._model.CaptchaData.common>`"
#~ msgstr ""

#~ msgid ":py:obj:`render (qqqr.up._model.CaptchaDisplay) <qqqr.up._model.CaptchaData.render>`"
#~ msgstr ""

#~ msgid ":py:obj:`bg (qqqr.up._model.BgElemCfg) <qqqr.up._model.CaptchaDisplay.bg>`"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`fg_binding_list (List[qqqr.up._model.FgBindingCfg]) "
#~ "<qqqr.up._model.CaptchaDisplay.fg_binding_list>`"
#~ msgstr ""

#~ msgid ":py:obj:`sprite_url (str) <qqqr.up._model.CaptchaDisplay.sprite_url>`"
#~ msgstr ""

#~ msgid ":py:obj:`sprites (List[qqqr.up._model.FgElemCfg]) <qqqr.up._model.CaptchaDisplay.sprites>`"
#~ msgstr ""

#~ msgid ":py:obj:`pow_cfg (qqqr.up._model.PowCfg) <qqqr.up._model.CommonCaptchaConf.pow_cfg>`"
#~ msgstr ""

#~ msgid ":py:obj:`tdc_path (str) <qqqr.up._model.CommonCaptchaConf.tdc_path>`"
#~ msgstr ""

#~ msgid ":py:obj:`bind_factor (int) <qqqr.up._model.FgBindingCfg.bind_factor>`"
#~ msgstr ""

#~ msgid ":py:obj:`bind_type (str) <qqqr.up._model.FgBindingCfg.bind_type>`"
#~ msgstr ""

#~ msgid ":py:obj:`master (int) <qqqr.up._model.FgBindingCfg.master>`"
#~ msgstr ""

#~ msgid ":py:obj:`slave (int) <qqqr.up._model.FgBindingCfg.slave>`"
#~ msgstr ""

#~ msgid ":py:obj:`id (int) <qqqr.up._model.FgElemCfg.id>`"
#~ msgstr ""

#~ msgid ":py:obj:`move_cfg (qqqr.up._model.MoveCfg | None) <qqqr.up._model.FgElemCfg.move_cfg>`"
#~ msgstr ""

#~ msgid ":py:obj:`data_type (List[str] | None) <qqqr.up._model.MoveCfg.data_type>`"
#~ msgstr ""

#~ msgid ":py:obj:`move_factor (List[int]) <qqqr.up._model.MoveCfg.move_factor>`"
#~ msgstr ""

#~ msgid ":py:obj:`track_limit (str) <qqqr.up._model.MoveCfg.track_limit>`"
#~ msgstr ""

#~ msgid ":py:obj:`md5 (str) <qqqr.up._model.PowCfg.md5>`"
#~ msgstr ""

#~ msgid ":py:obj:`prefix (str) <qqqr.up._model.PowCfg.prefix>`"
#~ msgstr ""

#~ msgid ":py:obj:`capclass (int) <qqqr.up._model.PrehandleResp.capclass>`"
#~ msgstr ""

#~ msgid ":py:obj:`captcha (qqqr.up._model.CaptchaData) <qqqr.up._model.PrehandleResp.captcha>`"
#~ msgstr ""

#~ msgid ":py:obj:`log_js (str) <qqqr.up._model.PrehandleResp.log_js>`"
#~ msgstr ""

#~ msgid ":py:obj:`randstr (str) <qqqr.up._model.PrehandleResp.randstr>`"
#~ msgstr ""

#~ msgid ":py:obj:`sess (str) <qqqr.up._model.PrehandleResp.sess>`"
#~ msgstr ""

#~ msgid ":py:obj:`sid (str) <qqqr.up._model.PrehandleResp.sid>`"
#~ msgstr ""

#~ msgid ":py:obj:`src_1 (str) <qqqr.up._model.PrehandleResp.src_1>`"
#~ msgstr ""

#~ msgid ":py:obj:`src_2 (str) <qqqr.up._model.PrehandleResp.src_2>`"
#~ msgstr ""

#~ msgid ":py:obj:`src_3 (str) <qqqr.up._model.PrehandleResp.src_3>`"
#~ msgstr ""

#~ msgid ":py:obj:`state (int) <qqqr.up._model.PrehandleResp.state>`"
#~ msgstr ""

#~ msgid ":py:obj:`subcapclass (int) <qqqr.up._model.PrehandleResp.subcapclass>`"
#~ msgstr ""

#~ msgid ":py:obj:`ticket (str) <qqqr.up._model.PrehandleResp.ticket>`"
#~ msgstr ""

#~ msgid ":py:obj:`uip (str) <qqqr.up._model.PrehandleResp.uip>`"
#~ msgstr ""

#~ msgid ":py:obj:`init_pos (List[int]) <qqqr.up._model.Sprite.init_pos>`"
#~ msgstr ""

#~ msgid ":py:obj:`size_2d (List[int]) <qqqr.up._model.Sprite.size_2d>`"
#~ msgstr ""

#~ msgid ":py:obj:`sprite_pos (List[int]) <qqqr.up._model.Sprite.sprite_pos>`"
#~ msgstr ""
