"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright (c) 2022 Arista Networks, Inc.  All rights reserved.
Use of this source code is governed by the Apache License 2.0
that can be found in the COPYING file.
"""

import builtins
import collections.abc
import fmp.wrappers_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class AssignmentKey(google.protobuf.message.Message):
    """AssignmentKey allows to uniquely identify an assignment."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYSTEM_ID_FIELD_NUMBER: builtins.int
    @property
    def system_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """system_id is the unique identifier of a device."""

    def __init__(
        self,
        *,
        system_id: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["system_id", b"system_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["system_id", b"system_id"]) -> None: ...

global___AssignmentKey = AssignmentKey

@typing.final
class Assignment(google.protobuf.message.Message):
    """Assignment returns the information about the regional clusters that the
    system is assigned to. Each cluster consists of a series of hosts, each of
    which the client can use to connect.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    CLUSTERS_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___AssignmentKey:
        """key uniquely identifies the assignment of system_id to the cluster."""

    @property
    def clusters(self) -> global___Clusters:
        """clusters that the system is assigned to."""

    def __init__(
        self,
        *,
        key: global___AssignmentKey | None = ...,
        clusters: global___Clusters | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["clusters", b"clusters", "key", b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["clusters", b"clusters", "key", b"key"]) -> None: ...

global___Assignment = Assignment

@typing.final
class Clusters(google.protobuf.message.Message):
    """Clusters wraps a cluster list which contain the information about the hosts."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Cluster]:
        """values contains the list of clusters associated with the region"""

    def __init__(
        self,
        *,
        values: collections.abc.Iterable[global___Cluster] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___Clusters = Clusters

@typing.final
class Cluster(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    HOSTS_FIELD_NUMBER: builtins.int
    @property
    def name(self) -> google.protobuf.wrappers_pb2.StringValue:
        """name of the cluster. The name can change over time as new clusters
        are added or removed.
        """

    @property
    def hosts(self) -> fmp.wrappers_pb2.RepeatedString:
        """hosts in the cluster that the devices can connect to."""

    def __init__(
        self,
        *,
        name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        hosts: fmp.wrappers_pb2.RepeatedString | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["hosts", b"hosts", "name", b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["hosts", b"hosts", "name", b"name"]) -> None: ...

global___Cluster = Cluster
