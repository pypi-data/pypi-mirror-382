"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

Code generated by boomtown. DO NOT EDIT.
"""

import arista.alert.v1.alert_pb2
import arista.subscriptions.subscriptions_pb2
import arista.time.time_pb2
import builtins
import collections.abc
import fmp.deletes_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class MetaResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of the last item included in the metadata calculation."""

    @property
    def count(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """Count is the number of items present under the conditions of the request."""

    def __init__(
        self,
        *,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
        count: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["count", b"count", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["count", b"count", "time", b"time", "type", b"type"]) -> None: ...

global___MetaResponse = MetaResponse

@typing.final
class AlertRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIME_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """

    def __init__(
        self,
        *,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time"]) -> None: ...

global___AlertRequest = AlertRequest

@typing.final
class AlertResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.Alert:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        Alert instance in this response.
        """

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.Alert | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> None: ...

global___AlertResponse = AlertResponse

@typing.final
class AlertStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIME_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each Alert at end.
            * Each Alert response is fully-specified (all fields set).
          * start: Returns the state of each Alert at start, followed by updates until now.
            * Each Alert response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each Alert at start, followed by updates
            until end.
            * Each Alert response at start is fully-specified, but updates until end may
              be partial.
        """

    def __init__(
        self,
        *,
        time: arista.time.time_pb2.TimeBounds | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time"]) -> None: ...

global___AlertStreamRequest = AlertStreamRequest

@typing.final
class AlertStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the Alert value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """
    @property
    def value(self) -> arista.alert.v1.alert_pb2.Alert:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this Alert's last modification."""

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.Alert | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time", "type", b"type", "value", b"value"]) -> None: ...

global___AlertStreamResponse = AlertStreamResponse

@typing.final
class AlertConfigRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIME_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """

    def __init__(
        self,
        *,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time"]) -> None: ...

global___AlertConfigRequest = AlertConfigRequest

@typing.final
class AlertConfigResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.AlertConfig:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        AlertConfig instance in this response.
        """

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.AlertConfig | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> None: ...

global___AlertConfigResponse = AlertConfigResponse

@typing.final
class AlertConfigStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIME_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each AlertConfig at end.
            * Each AlertConfig response is fully-specified (all fields set).
          * start: Returns the state of each AlertConfig at start, followed by updates until now.
            * Each AlertConfig response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each AlertConfig at start, followed by updates
            until end.
            * Each AlertConfig response at start is fully-specified, but updates until end may
              be partial.
        """

    def __init__(
        self,
        *,
        time: arista.time.time_pb2.TimeBounds | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time"]) -> None: ...

global___AlertConfigStreamRequest = AlertConfigStreamRequest

@typing.final
class AlertConfigStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the AlertConfig value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """
    @property
    def value(self) -> arista.alert.v1.alert_pb2.AlertConfig:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this AlertConfig's last modification."""

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.AlertConfig | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time", "type", b"type", "value", b"value"]) -> None: ...

global___AlertConfigStreamResponse = AlertConfigStreamResponse

@typing.final
class AlertConfigSetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.AlertConfig:
        """AlertConfig carries the value to set into the datastore.
        See the documentation on the AlertConfig struct for which fields are required.
        """

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.AlertConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["value", b"value"]) -> None: ...

global___AlertConfigSetRequest = AlertConfigSetRequest

@typing.final
class AlertConfigSetResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.AlertConfig:
        """Value carries all the values given in the AlertConfigSetRequest as well
        as any server-generated values.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp at which the system recognizes the
        creation. The only guarantees made about this timestamp are:

           - it is after the time the request was received
           - a time-ranged query with StartTime==CreatedAt will include this instance.
        """

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.AlertConfig | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> None: ...

global___AlertConfigSetResponse = AlertConfigSetResponse

@typing.final
class DefaultTemplateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey:
        """Key uniquely identifies a DefaultTemplate instance to retrieve.
        This value must be populated.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """

    def __init__(
        self,
        *,
        key: arista.alert.v1.alert_pb2.TemplateKey | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["key", b"key", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["key", b"key", "time", b"time"]) -> None: ...

global___DefaultTemplateRequest = DefaultTemplateRequest

@typing.final
class DefaultTemplateResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.DefaultTemplate:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        DefaultTemplate instance in this response.
        """

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.DefaultTemplate | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> None: ...

global___DefaultTemplateResponse = DefaultTemplateResponse

@typing.final
class DefaultTemplateSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEYS_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.alert.v1.alert_pb2.TemplateKey]: ...
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """

    def __init__(
        self,
        *,
        keys: collections.abc.Iterable[arista.alert.v1.alert_pb2.TemplateKey] | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["keys", b"keys", "time", b"time"]) -> None: ...

global___DefaultTemplateSomeRequest = DefaultTemplateSomeRequest

@typing.final
class DefaultTemplateSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.DefaultTemplate:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """

    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Error is an optional field.
        It should be filled when there is an error in the GetSome process.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        DefaultTemplate instance in this response.
        """

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.DefaultTemplate | None = ...,
        error: google.protobuf.wrappers_pb2.StringValue | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["error", b"error", "time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error", b"error", "time", b"time", "value", b"value"]) -> None: ...

global___DefaultTemplateSomeResponse = DefaultTemplateSomeResponse

@typing.final
class DefaultTemplateStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIME_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each DefaultTemplate at end.
            * Each DefaultTemplate response is fully-specified (all fields set).
          * start: Returns the state of each DefaultTemplate at start, followed by updates until now.
            * Each DefaultTemplate response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each DefaultTemplate at start, followed by updates
            until end.
            * Each DefaultTemplate response at start is fully-specified, but updates until end may
              be partial.
        """

    def __init__(
        self,
        *,
        time: arista.time.time_pb2.TimeBounds | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time"]) -> None: ...

global___DefaultTemplateStreamRequest = DefaultTemplateStreamRequest

@typing.final
class DefaultTemplateStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the DefaultTemplate value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """
    @property
    def value(self) -> arista.alert.v1.alert_pb2.DefaultTemplate:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this DefaultTemplate's last modification."""

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.DefaultTemplate | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time", "type", b"type", "value", b"value"]) -> None: ...

global___DefaultTemplateStreamResponse = DefaultTemplateStreamResponse

@typing.final
class DefaultTemplateBatchedStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIME_FIELD_NUMBER: builtins.int
    MAX_MESSAGES_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each DefaultTemplate at end.
            * Each DefaultTemplate response is fully-specified (all fields set).
          * start: Returns the state of each DefaultTemplate at start, followed by updates until now.
            * Each DefaultTemplate response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each DefaultTemplate at start, followed by updates
            until end.
            * Each DefaultTemplate response at start is fully-specified, but updates until end may
              be partial.
        """

    @property
    def max_messages(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """MaxMessages limits the maximum number of messages that can be contained in one batch.
        MaxMessages is required to be at least 1.
        The maximum number of messages in a batch is min(max_messages, INTERNAL_BATCH_LIMIT)
        INTERNAL_BATCH_LIMIT is set based on the maximum message size.
        """

    def __init__(
        self,
        *,
        time: arista.time.time_pb2.TimeBounds | None = ...,
        max_messages: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["max_messages", b"max_messages", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["max_messages", b"max_messages", "time", b"time"]) -> None: ...

global___DefaultTemplateBatchedStreamRequest = DefaultTemplateBatchedStreamRequest

@typing.final
class DefaultTemplateBatchedStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESPONSES_FIELD_NUMBER: builtins.int
    @property
    def responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DefaultTemplateStreamResponse]:
        """Values are the values deemed relevant to the initiating request.
        The length of this structure is guaranteed to be between (inclusive) 1 and
        min(req.max_messages, INTERNAL_BATCH_LIMIT).
        """

    def __init__(
        self,
        *,
        responses: collections.abc.Iterable[global___DefaultTemplateStreamResponse] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["responses", b"responses"]) -> None: ...

global___DefaultTemplateBatchedStreamResponse = DefaultTemplateBatchedStreamResponse

@typing.final
class SenderStatusRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.alert.v1.alert_pb2.SenderStatusKey:
        """Key uniquely identifies a SenderStatus instance to retrieve.
        This value must be populated.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """

    def __init__(
        self,
        *,
        key: arista.alert.v1.alert_pb2.SenderStatusKey | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["key", b"key", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["key", b"key", "time", b"time"]) -> None: ...

global___SenderStatusRequest = SenderStatusRequest

@typing.final
class SenderStatusResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.SenderStatus:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        SenderStatus instance in this response.
        """

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.SenderStatus | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> None: ...

global___SenderStatusResponse = SenderStatusResponse

@typing.final
class SenderStatusSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEYS_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.alert.v1.alert_pb2.SenderStatusKey]: ...
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """

    def __init__(
        self,
        *,
        keys: collections.abc.Iterable[arista.alert.v1.alert_pb2.SenderStatusKey] | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["keys", b"keys", "time", b"time"]) -> None: ...

global___SenderStatusSomeRequest = SenderStatusSomeRequest

@typing.final
class SenderStatusSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.SenderStatus:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """

    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Error is an optional field.
        It should be filled when there is an error in the GetSome process.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        SenderStatus instance in this response.
        """

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.SenderStatus | None = ...,
        error: google.protobuf.wrappers_pb2.StringValue | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["error", b"error", "time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error", b"error", "time", b"time", "value", b"value"]) -> None: ...

global___SenderStatusSomeResponse = SenderStatusSomeResponse

@typing.final
class SenderStatusStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARTIAL_EQ_FILTER_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def partial_eq_filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.alert.v1.alert_pb2.SenderStatus]:
        """PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
        This requires all provided fields to be equal to the response.

        While transparent to users, this field also allows services to optimize internal
        subscriptions if filter(s) are sufficiently specific.
        """

    @property
    def filter(self) -> arista.alert.v1.alert_pb2.EventFilter:
        """For each SenderStatus in the list, all populated fields are considered ANDed together
        as a filtering operation. Similarly, the list itself is ORed such that any individual
        filter that matches a given SenderStatus is streamed to the user.
        """

    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each SenderStatus at end.
            * Each SenderStatus response is fully-specified (all fields set).
          * start: Returns the state of each SenderStatus at start, followed by updates until now.
            * Each SenderStatus response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each SenderStatus at start, followed by updates
            until end.
            * Each SenderStatus response at start is fully-specified, but updates until end may
              be partial.
        """

    def __init__(
        self,
        *,
        partial_eq_filter: collections.abc.Iterable[arista.alert.v1.alert_pb2.SenderStatus] | None = ...,
        filter: arista.alert.v1.alert_pb2.EventFilter | None = ...,
        time: arista.time.time_pb2.TimeBounds | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["filter", b"filter", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["filter", b"filter", "partial_eq_filter", b"partial_eq_filter", "time", b"time"]) -> None: ...

global___SenderStatusStreamRequest = SenderStatusStreamRequest

@typing.final
class SenderStatusStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the SenderStatus value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """
    @property
    def value(self) -> arista.alert.v1.alert_pb2.SenderStatus:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this SenderStatus's last modification."""

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.SenderStatus | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time", "type", b"type", "value", b"value"]) -> None: ...

global___SenderStatusStreamResponse = SenderStatusStreamResponse

@typing.final
class SenderStatusBatchedStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARTIAL_EQ_FILTER_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    MAX_MESSAGES_FIELD_NUMBER: builtins.int
    @property
    def partial_eq_filter(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.alert.v1.alert_pb2.SenderStatus]:
        """PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
        This requires all provided fields to be equal to the response.

        While transparent to users, this field also allows services to optimize internal
        subscriptions if filter(s) are sufficiently specific.
        """

    @property
    def filter(self) -> arista.alert.v1.alert_pb2.EventFilter:
        """For each SenderStatus in the list, all populated fields are considered ANDed together
        as a filtering operation. Similarly, the list itself is ORed such that any individual
        filter that matches a given SenderStatus is streamed to the user.
        """

    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each SenderStatus at end.
            * Each SenderStatus response is fully-specified (all fields set).
          * start: Returns the state of each SenderStatus at start, followed by updates until now.
            * Each SenderStatus response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each SenderStatus at start, followed by updates
            until end.
            * Each SenderStatus response at start is fully-specified, but updates until end may
              be partial.
        """

    @property
    def max_messages(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """MaxMessages limits the maximum number of messages that can be contained in one batch.
        MaxMessages is required to be at least 1.
        The maximum number of messages in a batch is min(max_messages, INTERNAL_BATCH_LIMIT)
        INTERNAL_BATCH_LIMIT is set based on the maximum message size.
        """

    def __init__(
        self,
        *,
        partial_eq_filter: collections.abc.Iterable[arista.alert.v1.alert_pb2.SenderStatus] | None = ...,
        filter: arista.alert.v1.alert_pb2.EventFilter | None = ...,
        time: arista.time.time_pb2.TimeBounds | None = ...,
        max_messages: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["filter", b"filter", "max_messages", b"max_messages", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["filter", b"filter", "max_messages", b"max_messages", "partial_eq_filter", b"partial_eq_filter", "time", b"time"]) -> None: ...

global___SenderStatusBatchedStreamRequest = SenderStatusBatchedStreamRequest

@typing.final
class SenderStatusBatchedStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESPONSES_FIELD_NUMBER: builtins.int
    @property
    def responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SenderStatusStreamResponse]:
        """Values are the values deemed relevant to the initiating request.
        The length of this structure is guaranteed to be between (inclusive) 1 and
        min(req.max_messages, INTERNAL_BATCH_LIMIT).
        """

    def __init__(
        self,
        *,
        responses: collections.abc.Iterable[global___SenderStatusStreamResponse] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["responses", b"responses"]) -> None: ...

global___SenderStatusBatchedStreamResponse = SenderStatusBatchedStreamResponse

@typing.final
class TemplateConfigRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey:
        """Key uniquely identifies a TemplateConfig instance to retrieve.
        This value must be populated.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """

    def __init__(
        self,
        *,
        key: arista.alert.v1.alert_pb2.TemplateKey | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["key", b"key", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["key", b"key", "time", b"time"]) -> None: ...

global___TemplateConfigRequest = TemplateConfigRequest

@typing.final
class TemplateConfigResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.TemplateConfig:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        TemplateConfig instance in this response.
        """

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.TemplateConfig | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> None: ...

global___TemplateConfigResponse = TemplateConfigResponse

@typing.final
class TemplateConfigSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEYS_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.alert.v1.alert_pb2.TemplateKey]: ...
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the time for which you are interested in the data.
        If no time is given, the server will use the time at which it makes the request.
        """

    def __init__(
        self,
        *,
        keys: collections.abc.Iterable[arista.alert.v1.alert_pb2.TemplateKey] | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["keys", b"keys", "time", b"time"]) -> None: ...

global___TemplateConfigSomeRequest = TemplateConfigSomeRequest

@typing.final
class TemplateConfigSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.TemplateConfig:
        """Value is the value requested.
        This structure will be fully-populated as it exists in the datastore. If
        optional fields were not given at creation, these fields will be empty or
        set to default values.
        """

    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """Error is an optional field.
        It should be filled when there is an error in the GetSome process.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time carries the (UTC) timestamp of the last-modification of the
        TemplateConfig instance in this response.
        """

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.TemplateConfig | None = ...,
        error: google.protobuf.wrappers_pb2.StringValue | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["error", b"error", "time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error", b"error", "time", b"time", "value", b"value"]) -> None: ...

global___TemplateConfigSomeResponse = TemplateConfigSomeResponse

@typing.final
class TemplateConfigStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIME_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each TemplateConfig at end.
            * Each TemplateConfig response is fully-specified (all fields set).
          * start: Returns the state of each TemplateConfig at start, followed by updates until now.
            * Each TemplateConfig response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each TemplateConfig at start, followed by updates
            until end.
            * Each TemplateConfig response at start is fully-specified, but updates until end may
              be partial.
        """

    def __init__(
        self,
        *,
        time: arista.time.time_pb2.TimeBounds | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time"]) -> None: ...

global___TemplateConfigStreamRequest = TemplateConfigStreamRequest

@typing.final
class TemplateConfigStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    type: arista.subscriptions.subscriptions_pb2.Operation.ValueType
    """Operation indicates how the TemplateConfig value in this response should be considered.
    Under non-subscribe requests, this value should always be INITIAL. In a subscription,
    once all initial data is streamed and the client begins to receive modification updates,
    you should not see INITIAL again.
    """
    @property
    def value(self) -> arista.alert.v1.alert_pb2.TemplateConfig:
        """Value is a value deemed relevant to the initiating request.
        This structure will always have its key-field populated. Which other fields are
        populated, and why, depends on the value of Operation and what triggered this notification.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time holds the timestamp of this TemplateConfig's last modification."""

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.TemplateConfig | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        type: arista.subscriptions.subscriptions_pb2.Operation.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time", "type", b"type", "value", b"value"]) -> None: ...

global___TemplateConfigStreamResponse = TemplateConfigStreamResponse

@typing.final
class TemplateConfigBatchedStreamRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIME_FIELD_NUMBER: builtins.int
    MAX_MESSAGES_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> arista.time.time_pb2.TimeBounds:
        """TimeRange allows limiting response data to within a specified time window.
        If this field is populated, at least one of the two time fields are required.

        For GetAll, the fields start and end can be used as follows:

          * end: Returns the state of each TemplateConfig at end.
            * Each TemplateConfig response is fully-specified (all fields set).
          * start: Returns the state of each TemplateConfig at start, followed by updates until now.
            * Each TemplateConfig response at start is fully-specified, but updates may be partial.
          * start and end: Returns the state of each TemplateConfig at start, followed by updates
            until end.
            * Each TemplateConfig response at start is fully-specified, but updates until end may
              be partial.
        """

    @property
    def max_messages(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """MaxMessages limits the maximum number of messages that can be contained in one batch.
        MaxMessages is required to be at least 1.
        The maximum number of messages in a batch is min(max_messages, INTERNAL_BATCH_LIMIT)
        INTERNAL_BATCH_LIMIT is set based on the maximum message size.
        """

    def __init__(
        self,
        *,
        time: arista.time.time_pb2.TimeBounds | None = ...,
        max_messages: google.protobuf.wrappers_pb2.UInt32Value | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["max_messages", b"max_messages", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["max_messages", b"max_messages", "time", b"time"]) -> None: ...

global___TemplateConfigBatchedStreamRequest = TemplateConfigBatchedStreamRequest

@typing.final
class TemplateConfigBatchedStreamResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESPONSES_FIELD_NUMBER: builtins.int
    @property
    def responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TemplateConfigStreamResponse]:
        """Values are the values deemed relevant to the initiating request.
        The length of this structure is guaranteed to be between (inclusive) 1 and
        min(req.max_messages, INTERNAL_BATCH_LIMIT).
        """

    def __init__(
        self,
        *,
        responses: collections.abc.Iterable[global___TemplateConfigStreamResponse] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["responses", b"responses"]) -> None: ...

global___TemplateConfigBatchedStreamResponse = TemplateConfigBatchedStreamResponse

@typing.final
class TemplateConfigSetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.TemplateConfig:
        """TemplateConfig carries the value to set into the datastore.
        See the documentation on the TemplateConfig struct for which fields are required.
        """

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.TemplateConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["value", b"value"]) -> None: ...

global___TemplateConfigSetRequest = TemplateConfigSetRequest

@typing.final
class TemplateConfigSetResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> arista.alert.v1.alert_pb2.TemplateConfig:
        """Value carries all the values given in the TemplateConfigSetRequest as well
        as any server-generated values.
        """

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp at which the system recognizes the
        creation. The only guarantees made about this timestamp are:

           - it is after the time the request was received
           - a time-ranged query with StartTime==CreatedAt will include this instance.
        """

    def __init__(
        self,
        *,
        value: arista.alert.v1.alert_pb2.TemplateConfig | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["time", b"time", "value", b"value"]) -> None: ...

global___TemplateConfigSetResponse = TemplateConfigSetResponse

@typing.final
class TemplateConfigSetSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.alert.v1.alert_pb2.TemplateConfig]:
        """value contains a list of TemplateConfig values to write.
        It is possible to provide more values than can fit within either:
            - the maxiumum send size of the client
            - the maximum receive size of the server
        If this error occurs you must reduce the number of values sent.
        See gRPC "maximum message size" documentation for more information.
        """

    def __init__(
        self,
        *,
        values: collections.abc.Iterable[arista.alert.v1.alert_pb2.TemplateConfig] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___TemplateConfigSetSomeRequest = TemplateConfigSetSomeRequest

@typing.final
class TemplateConfigSetSomeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    error: builtins.str
    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey: ...
    def __init__(
        self,
        *,
        key: arista.alert.v1.alert_pb2.TemplateKey | None = ...,
        error: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["key", b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error", b"error", "key", b"key"]) -> None: ...

global___TemplateConfigSetSomeResponse = TemplateConfigSetSomeResponse

@typing.final
class TemplateConfigDeleteRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey:
        """Key indicates which TemplateConfig instance to remove.
        This field must always be set.
        """

    def __init__(
        self,
        *,
        key: arista.alert.v1.alert_pb2.TemplateKey | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["key", b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["key", b"key"]) -> None: ...

global___TemplateConfigDeleteRequest = TemplateConfigDeleteRequest

@typing.final
class TemplateConfigDeleteResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey:
        """Key echoes back the key of the deleted TemplateConfig instance."""

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp at which the system recognizes the
        deletion. The only guarantees made about this timestamp are:

           - it is after the time the request was received
           - a time-ranged query with StartTime==DeletedAt will not include this instance.
        """

    def __init__(
        self,
        *,
        key: arista.alert.v1.alert_pb2.TemplateKey | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["key", b"key", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["key", b"key", "time", b"time"]) -> None: ...

global___TemplateConfigDeleteResponse = TemplateConfigDeleteResponse

@typing.final
class TemplateConfigDeleteSomeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEYS_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[arista.alert.v1.alert_pb2.TemplateKey]:
        """key contains a list of TemplateConfig keys to delete"""

    def __init__(
        self,
        *,
        keys: collections.abc.Iterable[arista.alert.v1.alert_pb2.TemplateKey] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["keys", b"keys"]) -> None: ...

global___TemplateConfigDeleteSomeRequest = TemplateConfigDeleteSomeRequest

@typing.final
class TemplateConfigDeleteSomeResponse(google.protobuf.message.Message):
    """TemplateConfigDeleteSomeResponse is only sent when there is an error."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    error: builtins.str
    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey: ...
    def __init__(
        self,
        *,
        key: arista.alert.v1.alert_pb2.TemplateKey | None = ...,
        error: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["key", b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error", b"error", "key", b"key"]) -> None: ...

global___TemplateConfigDeleteSomeResponse = TemplateConfigDeleteSomeResponse

@typing.final
class TemplateConfigDeleteAllRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___TemplateConfigDeleteAllRequest = TemplateConfigDeleteAllRequest

@typing.final
class TemplateConfigDeleteAllResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    type: fmp.deletes_pb2.DeleteError.ValueType
    """This describes the class of delete error.
    A DeleteAllResponse is only sent when there is an error.
    """
    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """This indicates the error message from the delete failure."""

    @property
    def key(self) -> arista.alert.v1.alert_pb2.TemplateKey:
        """This is the key of the TemplateConfig instance that failed to be deleted."""

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time indicates the (UTC) timestamp when the key was being deleted."""

    def __init__(
        self,
        *,
        type: fmp.deletes_pb2.DeleteError.ValueType = ...,
        error: google.protobuf.wrappers_pb2.StringValue | None = ...,
        key: arista.alert.v1.alert_pb2.TemplateKey | None = ...,
        time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["error", b"error", "key", b"key", "time", b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error", b"error", "key", b"key", "time", b"time", "type", b"type"]) -> None: ...

global___TemplateConfigDeleteAllResponse = TemplateConfigDeleteAllResponse
