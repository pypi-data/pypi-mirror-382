# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from arista.redirector.v1.services import gen_pb2 as arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2

GRPC_GENERATED_VERSION = '1.67.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in arista/redirector.v1/services.gen_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AssignmentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOne = channel.unary_unary(
                '/arista.redirector.v1.AssignmentService/GetOne',
                request_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentRequest.SerializeToString,
                response_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentResponse.FromString,
                _registered_method=True)
        self.GetSome = channel.unary_stream(
                '/arista.redirector.v1.AssignmentService/GetSome',
                request_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentSomeRequest.SerializeToString,
                response_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentSomeResponse.FromString,
                _registered_method=True)
        self.GetAll = channel.unary_stream(
                '/arista.redirector.v1.AssignmentService/GetAll',
                request_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamRequest.SerializeToString,
                response_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamResponse.FromString,
                _registered_method=True)
        self.Subscribe = channel.unary_stream(
                '/arista.redirector.v1.AssignmentService/Subscribe',
                request_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamRequest.SerializeToString,
                response_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamResponse.FromString,
                _registered_method=True)
        self.GetMeta = channel.unary_unary(
                '/arista.redirector.v1.AssignmentService/GetMeta',
                request_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamRequest.SerializeToString,
                response_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.MetaResponse.FromString,
                _registered_method=True)
        self.SubscribeMeta = channel.unary_stream(
                '/arista.redirector.v1.AssignmentService/SubscribeMeta',
                request_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamRequest.SerializeToString,
                response_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.MetaResponse.FromString,
                _registered_method=True)
        self.GetAllBatched = channel.unary_stream(
                '/arista.redirector.v1.AssignmentService/GetAllBatched',
                request_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentBatchedStreamRequest.SerializeToString,
                response_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentBatchedStreamResponse.FromString,
                _registered_method=True)
        self.SubscribeBatched = channel.unary_stream(
                '/arista.redirector.v1.AssignmentService/SubscribeBatched',
                request_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentBatchedStreamRequest.SerializeToString,
                response_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentBatchedStreamResponse.FromString,
                _registered_method=True)


class AssignmentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSome(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllBatched(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeBatched(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AssignmentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOne': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOne,
                    request_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentRequest.FromString,
                    response_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentResponse.SerializeToString,
            ),
            'GetSome': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSome,
                    request_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentSomeRequest.FromString,
                    response_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentSomeResponse.SerializeToString,
            ),
            'GetAll': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamRequest.FromString,
                    response_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamResponse.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamRequest.FromString,
                    response_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamResponse.SerializeToString,
            ),
            'GetMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMeta,
                    request_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamRequest.FromString,
                    response_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.MetaResponse.SerializeToString,
            ),
            'SubscribeMeta': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeMeta,
                    request_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamRequest.FromString,
                    response_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.MetaResponse.SerializeToString,
            ),
            'GetAllBatched': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllBatched,
                    request_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentBatchedStreamRequest.FromString,
                    response_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentBatchedStreamResponse.SerializeToString,
            ),
            'SubscribeBatched': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeBatched,
                    request_deserializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentBatchedStreamRequest.FromString,
                    response_serializer=arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentBatchedStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arista.redirector.v1.AssignmentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('arista.redirector.v1.AssignmentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AssignmentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.redirector.v1.AssignmentService/GetOne',
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentRequest.SerializeToString,
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.redirector.v1.AssignmentService/GetSome',
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentSomeRequest.SerializeToString,
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentSomeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.redirector.v1.AssignmentService/GetAll',
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamRequest.SerializeToString,
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.redirector.v1.AssignmentService/Subscribe',
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamRequest.SerializeToString,
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.redirector.v1.AssignmentService/GetMeta',
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamRequest.SerializeToString,
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.MetaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.redirector.v1.AssignmentService/SubscribeMeta',
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentStreamRequest.SerializeToString,
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.MetaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllBatched(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.redirector.v1.AssignmentService/GetAllBatched',
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentBatchedStreamRequest.SerializeToString,
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentBatchedStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeBatched(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.redirector.v1.AssignmentService/SubscribeBatched',
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentBatchedStreamRequest.SerializeToString,
            arista_dot_redirector_dot_v1_dot_services_dot_gen__pb2.AssignmentBatchedStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
