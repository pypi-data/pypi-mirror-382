"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright (c) 2023 Arista Networks, Inc.  All rights reserved.
Use of this source code is governed by the Apache License 2.0
that can be found in the COPYING file.
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ExtensionInstallStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ExtensionInstallStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ExtensionInstallStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    EXTENSION_INSTALL_STATUS_UNSPECIFIED: _ExtensionInstallStatus.ValueType  # 0
    """EXTENSION_INSTALL_STATUS_UNSPECIFIED indicates extensions install status is unspecified."""
    EXTENSION_INSTALL_STATUS_NOT_INSTALLED: _ExtensionInstallStatus.ValueType  # 1
    """EXTENSION_INSTALL_STATUS_NOT_INSTALLED indicates extension is not installed on the device."""
    EXTENSION_INSTALL_STATUS_INSTALLED: _ExtensionInstallStatus.ValueType  # 2
    """EXTENSION_INSTALL_STATUS_INSTALLED indicates extension is installed on the device."""
    EXTENSION_INSTALL_STATUS_FORCE_INSTALLED: _ExtensionInstallStatus.ValueType  # 3
    """EXTENSION_INSTALL_STATUS_FORCE_INSTALLED indicates extension is force installed on
    device.
    """

class ExtensionInstallStatus(_ExtensionInstallStatus, metaclass=_ExtensionInstallStatusEnumTypeWrapper):
    """ExtensionInstallStatus indicates whether an extension is installed, not installed
    or force installed.
    """

EXTENSION_INSTALL_STATUS_UNSPECIFIED: ExtensionInstallStatus.ValueType  # 0
"""EXTENSION_INSTALL_STATUS_UNSPECIFIED indicates extensions install status is unspecified."""
EXTENSION_INSTALL_STATUS_NOT_INSTALLED: ExtensionInstallStatus.ValueType  # 1
"""EXTENSION_INSTALL_STATUS_NOT_INSTALLED indicates extension is not installed on the device."""
EXTENSION_INSTALL_STATUS_INSTALLED: ExtensionInstallStatus.ValueType  # 2
"""EXTENSION_INSTALL_STATUS_INSTALLED indicates extension is installed on the device."""
EXTENSION_INSTALL_STATUS_FORCE_INSTALLED: ExtensionInstallStatus.ValueType  # 3
"""EXTENSION_INSTALL_STATUS_FORCE_INSTALLED indicates extension is force installed on
device.
"""
global___ExtensionInstallStatus = ExtensionInstallStatus

class _SoftwareComplianceCode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _SoftwareComplianceCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SoftwareComplianceCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SOFTWARE_COMPLIANCE_CODE_UNSPECIFIED: _SoftwareComplianceCode.ValueType  # 0
    """SOFTWARE_COMPLIANCE_CODE_UNSPECIFIED indicates compliance code is unspecified."""
    SOFTWARE_COMPLIANCE_CODE_IN_SYNC: _SoftwareComplianceCode.ValueType  # 1
    """SOFTWARE_COMPLIANCE_CODE_IN_SYNC indicates designed and running images/extensions
    are identical.
    """
    SOFTWARE_COMPLIANCE_CODE_OUT_OF_SYNC: _SoftwareComplianceCode.ValueType  # 2
    """SOFTWARE_COMPLIANCE_CODE_OUT_OF_SYNC indicates designed and running images/extensions
    are not identical.
    """

class SoftwareComplianceCode(_SoftwareComplianceCode, metaclass=_SoftwareComplianceCodeEnumTypeWrapper):
    """SoftwareComplianceCode indicates possible compliance status."""

SOFTWARE_COMPLIANCE_CODE_UNSPECIFIED: SoftwareComplianceCode.ValueType  # 0
"""SOFTWARE_COMPLIANCE_CODE_UNSPECIFIED indicates compliance code is unspecified."""
SOFTWARE_COMPLIANCE_CODE_IN_SYNC: SoftwareComplianceCode.ValueType  # 1
"""SOFTWARE_COMPLIANCE_CODE_IN_SYNC indicates designed and running images/extensions
are identical.
"""
SOFTWARE_COMPLIANCE_CODE_OUT_OF_SYNC: SoftwareComplianceCode.ValueType  # 2
"""SOFTWARE_COMPLIANCE_CODE_OUT_OF_SYNC indicates designed and running images/extensions
are not identical.
"""
global___SoftwareComplianceCode = SoftwareComplianceCode

class _DiffOp:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DiffOpEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DiffOp.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    DIFF_OP_UNSPECIFIED: _DiffOp.ValueType  # 0
    """DIFF_OP_UNSPECIFIED indicates op code is unspecified."""
    DIFF_OP_NOP: _DiffOp.ValueType  # 1
    """DIFF_OP_NOP indicates no change."""
    DIFF_OP_ADD: _DiffOp.ValueType  # 2
    """DIFF_OP_ADD is an addition of a software."""
    DIFF_OP_DELETE: _DiffOp.ValueType  # 3
    """DIFF_OP_DELETE is deletion of a software."""
    DIFF_OP_CHANGE: _DiffOp.ValueType  # 4
    """DIFF_OP_CHANGE is an update to the software."""

class DiffOp(_DiffOp, metaclass=_DiffOpEnumTypeWrapper):
    """DiffOp represents the operation performed to get from one side of the diff
    to the other.
    """

DIFF_OP_UNSPECIFIED: DiffOp.ValueType  # 0
"""DIFF_OP_UNSPECIFIED indicates op code is unspecified."""
DIFF_OP_NOP: DiffOp.ValueType  # 1
"""DIFF_OP_NOP indicates no change."""
DIFF_OP_ADD: DiffOp.ValueType  # 2
"""DIFF_OP_ADD is an addition of a software."""
DIFF_OP_DELETE: DiffOp.ValueType  # 3
"""DIFF_OP_DELETE is deletion of a software."""
DIFF_OP_CHANGE: DiffOp.ValueType  # 4
"""DIFF_OP_CHANGE is an update to the software."""
global___DiffOp = DiffOp

class _ErrorCode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ErrorCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ErrorCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ERROR_CODE_UNSPECIFIED: _ErrorCode.ValueType  # 0
    """ERROR_CODE_UNSPECIFIED indicates error code is unspecified."""
    ERROR_CODE_SUPPORT_NOT_INTRODUCED: _ErrorCode.ValueType  # 1
    """ERROR_CODE_SUPPORT_NOT_INTRODUCED represents case where the given EOS version does
    not support the SKU.
    Deprecated - use ERROR_CODE_EOS_SUPPORT_NOT_INTRODUCED
    """
    ERROR_CODE_SUPPORT_REMOVED: _ErrorCode.ValueType  # 2
    """ERROR_CODE_SUPPORT_REMOVED represents case where the given EOS version no longer
    supports the SKU.
    Deprecated - use ERROR_CODE_EOS_SUPPORT_REMOVED
    """
    ERROR_CODE_DEVICE_UNREACHABLE: _ErrorCode.ValueType  # 3
    """ERROR_CODE_DEVICE_UNREACHABLE represents the case where the device
    is unreachable during a compliance computation.
    """
    ERROR_CODE_VALIDATION_FAILED: _ErrorCode.ValueType  # 4
    """ERROR_CODE_VALIDATION_FAILED represents case where the validations checks
    failed.
    """
    ERROR_CODE_GET_PROPOSED_IMAGE_INFO_FAILED: _ErrorCode.ValueType  # 5
    """ERROR_CODE_GET_PROPOSED_IMAGE_INFO_FAILED represents case where we are
    unable to get proposed image information for a device.
    """
    ERROR_CODE_GET_RUNNING_IMAGE_INFO_FROM_ACTIVE_SUPERVISOR_FAILED: _ErrorCode.ValueType  # 6
    """ERROR_CODE_GET_RUNNING_IMAGE_INFO_FROM_ACTIVE_SUPERVISOR_FAILED represents case where we
    fail to get running image information from an active supervisor.
    """
    ERROR_CODE_GET_RUNNING_IMAGE_INFO_FROM_PEER_SUPERVISOR_FAILED: _ErrorCode.ValueType  # 7
    """ERROR_CODE_GET_RUNNING_IMAGE_INFO_FROM_PEER_SUPERVISOR_FAILED represents case when we
    fail to get information from peer supervisor.
    """
    ERROR_CODE_EOS_TA_ARCHITECTURE_INCOMPATIBLE: _ErrorCode.ValueType  # 8
    """ERROR_CODE_EOS_TA_ARCHITECTURE_INCOMPATIBLE represents the case where EOS architecture and
    TerminAttr architecture are incompatible.
    """
    ERROR_CODE_TA_CV_INCOMPATIBLE: _ErrorCode.ValueType  # 9
    """ERROR_CODE_TA_CV_INCOMPATIBLE represents the case where TerminAttr is incompatible with
    CloudVision; i.e., the TerminAttr version is below CloudVision's minimum supported version.
    """
    ERROR_CODE_EOS_CV_INCOMPATIBLE: _ErrorCode.ValueType  # 10
    """ERROR_CODE_EOS_CV_INCOMPATIBLE represents the case where EOS is not supported by CV.
    The given EOS is below CV's minimum supported EOS version.
    """
    ERROR_CODE_EOS_SUPPORT_NOT_INTRODUCED: _ErrorCode.ValueType  # 11
    """ERROR_CODE_EOS_SUPPORT_NOT_INTRODUCED represents the case where the given EOS version does
    not support the SKU.
    """
    ERROR_CODE_EOS_SUPPORT_REMOVED: _ErrorCode.ValueType  # 12
    """ERROR_CODE_EOS_SUPPORT_REMOVED represents the case where the given EOS version no longer
    supports the SKU.
    """
    ERROR_CODE_PHYSICAL_DEVICE_EOS_INCOMPATIBLE: _ErrorCode.ValueType  # 13
    """ERROR_CODE_PHYSICAL_DEVICE_EOS_INCOMPATIBLE represents the case where the physical device
    does not support the given EOS type.
    """
    ERROR_CODE_TA_EMBEDDEDEXT_INCOMPATIBLE: _ErrorCode.ValueType  # 14
    """ERROR_CODE_TA_EMBEDDEDEXT_INCOMPATIBLE represents the case where the extension TerminAttr
    version is lower than the embedded TerminAttr version in SWI.
    """
    ERROR_CODE_DEVICE_EOS_2GB_INCOMPATIBLE: _ErrorCode.ValueType  # 15
    """ERROR_CODE_DEVICE_EOS_2GB_INCOMPATIBLE represents the case where a 2GB-device is incompatible
    with a non-2GB EOS or a non-2GB device is incompatible with a 2GB-EOS.
    """
    ERROR_CODE_EOS_EXTENSION_VERSION_INCOMPATIBLE: _ErrorCode.ValueType  # 16
    """ERROR_CODE_EOS_EXTENSION_VERSION_INCOMPATIBLE represents the case where the given extension
    version doesn't support the given EOS version.
    """
    ERROR_CODE_ARCH_UNSUPPORTED: _ErrorCode.ValueType  # 17
    """ERROR_CODE_ARCH_UNSUPPORTED represents the case where the given image architecture is not
    supported by CloudVision.
    """

class ErrorCode(_ErrorCode, metaclass=_ErrorCodeEnumTypeWrapper):
    """ErrorCode indicates errors produced during image validations."""

ERROR_CODE_UNSPECIFIED: ErrorCode.ValueType  # 0
"""ERROR_CODE_UNSPECIFIED indicates error code is unspecified."""
ERROR_CODE_SUPPORT_NOT_INTRODUCED: ErrorCode.ValueType  # 1
"""ERROR_CODE_SUPPORT_NOT_INTRODUCED represents case where the given EOS version does
not support the SKU.
Deprecated - use ERROR_CODE_EOS_SUPPORT_NOT_INTRODUCED
"""
ERROR_CODE_SUPPORT_REMOVED: ErrorCode.ValueType  # 2
"""ERROR_CODE_SUPPORT_REMOVED represents case where the given EOS version no longer
supports the SKU.
Deprecated - use ERROR_CODE_EOS_SUPPORT_REMOVED
"""
ERROR_CODE_DEVICE_UNREACHABLE: ErrorCode.ValueType  # 3
"""ERROR_CODE_DEVICE_UNREACHABLE represents the case where the device
is unreachable during a compliance computation.
"""
ERROR_CODE_VALIDATION_FAILED: ErrorCode.ValueType  # 4
"""ERROR_CODE_VALIDATION_FAILED represents case where the validations checks
failed.
"""
ERROR_CODE_GET_PROPOSED_IMAGE_INFO_FAILED: ErrorCode.ValueType  # 5
"""ERROR_CODE_GET_PROPOSED_IMAGE_INFO_FAILED represents case where we are
unable to get proposed image information for a device.
"""
ERROR_CODE_GET_RUNNING_IMAGE_INFO_FROM_ACTIVE_SUPERVISOR_FAILED: ErrorCode.ValueType  # 6
"""ERROR_CODE_GET_RUNNING_IMAGE_INFO_FROM_ACTIVE_SUPERVISOR_FAILED represents case where we
fail to get running image information from an active supervisor.
"""
ERROR_CODE_GET_RUNNING_IMAGE_INFO_FROM_PEER_SUPERVISOR_FAILED: ErrorCode.ValueType  # 7
"""ERROR_CODE_GET_RUNNING_IMAGE_INFO_FROM_PEER_SUPERVISOR_FAILED represents case when we
fail to get information from peer supervisor.
"""
ERROR_CODE_EOS_TA_ARCHITECTURE_INCOMPATIBLE: ErrorCode.ValueType  # 8
"""ERROR_CODE_EOS_TA_ARCHITECTURE_INCOMPATIBLE represents the case where EOS architecture and
TerminAttr architecture are incompatible.
"""
ERROR_CODE_TA_CV_INCOMPATIBLE: ErrorCode.ValueType  # 9
"""ERROR_CODE_TA_CV_INCOMPATIBLE represents the case where TerminAttr is incompatible with
CloudVision; i.e., the TerminAttr version is below CloudVision's minimum supported version.
"""
ERROR_CODE_EOS_CV_INCOMPATIBLE: ErrorCode.ValueType  # 10
"""ERROR_CODE_EOS_CV_INCOMPATIBLE represents the case where EOS is not supported by CV.
The given EOS is below CV's minimum supported EOS version.
"""
ERROR_CODE_EOS_SUPPORT_NOT_INTRODUCED: ErrorCode.ValueType  # 11
"""ERROR_CODE_EOS_SUPPORT_NOT_INTRODUCED represents the case where the given EOS version does
not support the SKU.
"""
ERROR_CODE_EOS_SUPPORT_REMOVED: ErrorCode.ValueType  # 12
"""ERROR_CODE_EOS_SUPPORT_REMOVED represents the case where the given EOS version no longer
supports the SKU.
"""
ERROR_CODE_PHYSICAL_DEVICE_EOS_INCOMPATIBLE: ErrorCode.ValueType  # 13
"""ERROR_CODE_PHYSICAL_DEVICE_EOS_INCOMPATIBLE represents the case where the physical device
does not support the given EOS type.
"""
ERROR_CODE_TA_EMBEDDEDEXT_INCOMPATIBLE: ErrorCode.ValueType  # 14
"""ERROR_CODE_TA_EMBEDDEDEXT_INCOMPATIBLE represents the case where the extension TerminAttr
version is lower than the embedded TerminAttr version in SWI.
"""
ERROR_CODE_DEVICE_EOS_2GB_INCOMPATIBLE: ErrorCode.ValueType  # 15
"""ERROR_CODE_DEVICE_EOS_2GB_INCOMPATIBLE represents the case where a 2GB-device is incompatible
with a non-2GB EOS or a non-2GB device is incompatible with a 2GB-EOS.
"""
ERROR_CODE_EOS_EXTENSION_VERSION_INCOMPATIBLE: ErrorCode.ValueType  # 16
"""ERROR_CODE_EOS_EXTENSION_VERSION_INCOMPATIBLE represents the case where the given extension
version doesn't support the given EOS version.
"""
ERROR_CODE_ARCH_UNSUPPORTED: ErrorCode.ValueType  # 17
"""ERROR_CODE_ARCH_UNSUPPORTED represents the case where the given image architecture is not
supported by CloudVision.
"""
global___ErrorCode = ErrorCode

class _WarningCode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _WarningCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_WarningCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    WARNING_CODE_UNSPECIFIED: _WarningCode.ValueType  # 0
    """WARNING_CODE_UNSPECIFIED indicates warning code is unspecified."""
    WARNING_CODE_NOT_APPLICABLE: _WarningCode.ValueType  # 1
    """WARNING_CODE_NOT_APPLICABLE represents cases where EOS < - > SKU/TA compatibility
    is not applicable for non physical switches like vEos.
    """
    WARNING_CODE_SKUINFO_UNAVAILABLE: _WarningCode.ValueType  # 2
    """WARNING_CODE_SKUINFO_UNAVAILABLE represents case where
    information about certain skus is missing.
    """
    WARNING_CODE_DEVICE_SKU_UNAVAILABLE: _WarningCode.ValueType  # 3
    """WARNING_CODE_DEVICE_SKU_UNAVAILABLE represents unavailability of skus for an EOS Device."""
    WARNING_CODE_SWI_UNKNOWN: _WarningCode.ValueType  # 4
    """WARNING_CODE_SWI_UNKNOWN represents cases where EOS version is not found in release database."""
    WARNING_CODE_TA_EOS_INCOMPATIBLE: _WarningCode.ValueType  # 5
    """WARNING_CODE_TA_EOS_INCOMPATIBLE represents cases where TA and EOS are not compatible.
    TA is lower than embedded TA in swi or given TA is unsupported by the EOS.
    """
    WARNING_CODE_TA_CV_INCOMPATIBLE: _WarningCode.ValueType  # 6
    """WARNING_CODE_TA_CV_INCOMPATIBLE represents cases where TA is incompatible with CV.
    TA is lower than minimum supported TA on CV.
    Deprecated - use ERROR_CODE_TA_CV_INCOMPATIBLE.
    """
    WARNING_CODE_EOS_CV_INCOMPATIBLE: _WarningCode.ValueType  # 7
    """WARNING_CODE_EOS_CV_INCOMPATIBLE represents the case where EOS is not yet supported by CV.
    The given EOS exceeds CV's maximum supported EOS version.
    """
    WARNING_CODE_EOS_ARCH_UNKNOWN: _WarningCode.ValueType  # 8
    """WARNING_CODE_EOS_ARCH_UNKNOWN represents cases where the specified architecture is
    not valid for EOS.
    """
    WARNING_CODE_TA_EMBEDDEDEXT_INCOMPATIBLE: _WarningCode.ValueType  # 9
    """WARNING_CODE_TA_EMBEDDEDEXT_INCOMPATIBLE represents cases where TA extension is lower
    in version than embedded TA in SWI.
    """
    WARNING_CODE_ARCH_INCOMPATIBLE: _WarningCode.ValueType  # 10
    """WARNING_CODE_ARCH_INCOMPATIBLE represents cases where EOS arch and TA arch are
    different. Deprecated.
    """
    WARNING_CODE_EOS_END_OF_LIFE_DATE_PASSED: _WarningCode.ValueType  # 11
    """WARNING_CODE_EOS_END_OF_LIFE_DATE_PASSED represents cases where the given EOS has passed
    its end of life date.
    """
    WARNING_CODE_SUPPORT_NOT_INTRODUCED: _WarningCode.ValueType  # 12
    """WARNING_CODE_SUPPORT_NOT_INTRODUCED represents cases where the given EOS version does
    not support the SKUs.
    """
    WARNING_CODE_SUPPORT_REMOVED: _WarningCode.ValueType  # 13
    """WARNING_CODE_SUPPORT_REMOVED represents cases where the given EOS version no longer
    supports the SKUs.
    """
    WARNING_CODE_RUNNING_TA_BELOW_MIN_SUPPORTED_VERSION: _WarningCode.ValueType  # 14
    """WARNING_CODE_RUNNING_TA_BELOW_MIN_SUPPORTED_VERSION represents cases where the running
    TerminAttr version is below CloudVision's minimum supported version.
    """
    WARNING_CODE_TA_STUDIO_INCOMPATIBLE: _WarningCode.ValueType  # 15
    """WARNING_CODE_TA_STUDIO_INCOMPATIBLE represents cases where the TerminAttr is incompatible
    with Software Management Studio.
    """
    WARNING_CODE_BUGALERTS_DATA_MISSING: _WarningCode.ValueType  # 16
    """WARNING_CODE_BUGALERTS_DATA_MISSING represents cases where some of the BugAlerts data
    under Aeris analytics dataset is missing.
    """

class WarningCode(_WarningCode, metaclass=_WarningCodeEnumTypeWrapper):
    """WarningCode indicates warnings produced during image validations."""

WARNING_CODE_UNSPECIFIED: WarningCode.ValueType  # 0
"""WARNING_CODE_UNSPECIFIED indicates warning code is unspecified."""
WARNING_CODE_NOT_APPLICABLE: WarningCode.ValueType  # 1
"""WARNING_CODE_NOT_APPLICABLE represents cases where EOS < - > SKU/TA compatibility
is not applicable for non physical switches like vEos.
"""
WARNING_CODE_SKUINFO_UNAVAILABLE: WarningCode.ValueType  # 2
"""WARNING_CODE_SKUINFO_UNAVAILABLE represents case where
information about certain skus is missing.
"""
WARNING_CODE_DEVICE_SKU_UNAVAILABLE: WarningCode.ValueType  # 3
"""WARNING_CODE_DEVICE_SKU_UNAVAILABLE represents unavailability of skus for an EOS Device."""
WARNING_CODE_SWI_UNKNOWN: WarningCode.ValueType  # 4
"""WARNING_CODE_SWI_UNKNOWN represents cases where EOS version is not found in release database."""
WARNING_CODE_TA_EOS_INCOMPATIBLE: WarningCode.ValueType  # 5
"""WARNING_CODE_TA_EOS_INCOMPATIBLE represents cases where TA and EOS are not compatible.
TA is lower than embedded TA in swi or given TA is unsupported by the EOS.
"""
WARNING_CODE_TA_CV_INCOMPATIBLE: WarningCode.ValueType  # 6
"""WARNING_CODE_TA_CV_INCOMPATIBLE represents cases where TA is incompatible with CV.
TA is lower than minimum supported TA on CV.
Deprecated - use ERROR_CODE_TA_CV_INCOMPATIBLE.
"""
WARNING_CODE_EOS_CV_INCOMPATIBLE: WarningCode.ValueType  # 7
"""WARNING_CODE_EOS_CV_INCOMPATIBLE represents the case where EOS is not yet supported by CV.
The given EOS exceeds CV's maximum supported EOS version.
"""
WARNING_CODE_EOS_ARCH_UNKNOWN: WarningCode.ValueType  # 8
"""WARNING_CODE_EOS_ARCH_UNKNOWN represents cases where the specified architecture is
not valid for EOS.
"""
WARNING_CODE_TA_EMBEDDEDEXT_INCOMPATIBLE: WarningCode.ValueType  # 9
"""WARNING_CODE_TA_EMBEDDEDEXT_INCOMPATIBLE represents cases where TA extension is lower
in version than embedded TA in SWI.
"""
WARNING_CODE_ARCH_INCOMPATIBLE: WarningCode.ValueType  # 10
"""WARNING_CODE_ARCH_INCOMPATIBLE represents cases where EOS arch and TA arch are
different. Deprecated.
"""
WARNING_CODE_EOS_END_OF_LIFE_DATE_PASSED: WarningCode.ValueType  # 11
"""WARNING_CODE_EOS_END_OF_LIFE_DATE_PASSED represents cases where the given EOS has passed
its end of life date.
"""
WARNING_CODE_SUPPORT_NOT_INTRODUCED: WarningCode.ValueType  # 12
"""WARNING_CODE_SUPPORT_NOT_INTRODUCED represents cases where the given EOS version does
not support the SKUs.
"""
WARNING_CODE_SUPPORT_REMOVED: WarningCode.ValueType  # 13
"""WARNING_CODE_SUPPORT_REMOVED represents cases where the given EOS version no longer
supports the SKUs.
"""
WARNING_CODE_RUNNING_TA_BELOW_MIN_SUPPORTED_VERSION: WarningCode.ValueType  # 14
"""WARNING_CODE_RUNNING_TA_BELOW_MIN_SUPPORTED_VERSION represents cases where the running
TerminAttr version is below CloudVision's minimum supported version.
"""
WARNING_CODE_TA_STUDIO_INCOMPATIBLE: WarningCode.ValueType  # 15
"""WARNING_CODE_TA_STUDIO_INCOMPATIBLE represents cases where the TerminAttr is incompatible
with Software Management Studio.
"""
WARNING_CODE_BUGALERTS_DATA_MISSING: WarningCode.ValueType  # 16
"""WARNING_CODE_BUGALERTS_DATA_MISSING represents cases where some of the BugAlerts data
under Aeris analytics dataset is missing.
"""
global___WarningCode = WarningCode

class _InfoCode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _InfoCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_InfoCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    INFO_CODE_UNSPECIFIED: _InfoCode.ValueType  # 0
    """INFO_CODE_UNSPECIFIED indicates info code is unspecified."""
    INFO_CODE_NEWER_VERSION_AVAILABLE: _InfoCode.ValueType  # 1
    """INFO_CODE_NEWER_VERSION_AVAILABLE represents cases where a newer EOS maintainance
    release is available for download.
    """

class InfoCode(_InfoCode, metaclass=_InfoCodeEnumTypeWrapper):
    """InfoCode indicates info messages produced during image validations."""

INFO_CODE_UNSPECIFIED: InfoCode.ValueType  # 0
"""INFO_CODE_UNSPECIFIED indicates info code is unspecified."""
INFO_CODE_NEWER_VERSION_AVAILABLE: InfoCode.ValueType  # 1
"""INFO_CODE_NEWER_VERSION_AVAILABLE represents cases where a newer EOS maintainance
release is available for download.
"""
global___InfoCode = InfoCode

@typing.final
class SoftwareImage(google.protobuf.message.Message):
    """SoftwareImage provides information of the running/designed EOS image."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    @property
    def name(self) -> google.protobuf.wrappers_pb2.StringValue:
        """name is the name of the EOS image."""

    @property
    def version(self) -> google.protobuf.wrappers_pb2.StringValue:
        """version is the version of the EOS image."""

    @property
    def metadata(self) -> global___ImageMetadata:
        """metadata  is the metadata of EOS image."""

    def __init__(
        self,
        *,
        name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        version: google.protobuf.wrappers_pb2.StringValue | None = ...,
        metadata: global___ImageMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata", "name", b"name", "version", b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["metadata", b"metadata", "name", b"name", "version", b"version"]) -> None: ...

global___SoftwareImage = SoftwareImage

@typing.final
class ImageMetadata(google.protobuf.message.Message):
    """ImageMetadata provides information regarding the software image."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERSION_FIELD_NUMBER: builtins.int
    RELEASE_FIELD_NUMBER: builtins.int
    FLAVOR_FIELD_NUMBER: builtins.int
    VARIANT_FIELD_NUMBER: builtins.int
    ARCH_FIELD_NUMBER: builtins.int
    @property
    def version(self) -> google.protobuf.wrappers_pb2.StringValue:
        """version is the version of the EOS image."""

    @property
    def release(self) -> google.protobuf.wrappers_pb2.StringValue:
        """release is the release name of the EOS image."""

    @property
    def flavor(self) -> google.protobuf.wrappers_pb2.StringValue:
        """flavor is the flavor information of the EOS image.
        default flavor is DEFAULT. Other flavors can be DPE, 2GB, etc.
        """

    @property
    def variant(self) -> google.protobuf.wrappers_pb2.StringValue:
        """variant is the variant information of the EOS image.
        possible values: INT or US.
        """

    @property
    def arch(self) -> google.protobuf.wrappers_pb2.StringValue:
        """arch is the architecture of the EOS image."""

    def __init__(
        self,
        *,
        version: google.protobuf.wrappers_pb2.StringValue | None = ...,
        release: google.protobuf.wrappers_pb2.StringValue | None = ...,
        flavor: google.protobuf.wrappers_pb2.StringValue | None = ...,
        variant: google.protobuf.wrappers_pb2.StringValue | None = ...,
        arch: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["arch", b"arch", "flavor", b"flavor", "release", b"release", "variant", b"variant", "version", b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["arch", b"arch", "flavor", b"flavor", "release", b"release", "variant", b"variant", "version", b"version"]) -> None: ...

global___ImageMetadata = ImageMetadata

@typing.final
class Extension(google.protobuf.message.Message):
    """Extension provides information of the running/designed extensions."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    REBOOT_REQUIRED_FIELD_NUMBER: builtins.int
    PRESENT_FIELD_NUMBER: builtins.int
    INSTALLED_FIELD_NUMBER: builtins.int
    STATUS_DETAIL_FIELD_NUMBER: builtins.int
    IS_EMBEDDED_FIELD_NUMBER: builtins.int
    ARCH_FIELD_NUMBER: builtins.int
    installed: global___ExtensionInstallStatus.ValueType
    """installed indicates whether the extension is installed, not
    installed or force installed.
    """
    @property
    def name(self) -> google.protobuf.wrappers_pb2.StringValue:
        """name is the name of the extension."""

    @property
    def version(self) -> google.protobuf.wrappers_pb2.StringValue:
        """version is the version of the extension."""

    @property
    def reboot_required(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """reboot_required indicates whether applying/deleting this extension
        would result in a reboot.
        """

    @property
    def present(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """present indicates whether the extension is present in the device
        or not.
        """

    @property
    def status_detail(self) -> google.protobuf.wrappers_pb2.StringValue:
        """status_detail gives the details behind installation of the extension."""

    @property
    def is_embedded(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """is_embedded indicates whether the extension is embedded in the EOS swi
        or not.
        """

    @property
    def arch(self) -> google.protobuf.wrappers_pb2.StringValue:
        """arch is architecture type of the extension."""

    def __init__(
        self,
        *,
        name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        version: google.protobuf.wrappers_pb2.StringValue | None = ...,
        reboot_required: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        present: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        installed: global___ExtensionInstallStatus.ValueType = ...,
        status_detail: google.protobuf.wrappers_pb2.StringValue | None = ...,
        is_embedded: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        arch: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["arch", b"arch", "is_embedded", b"is_embedded", "name", b"name", "present", b"present", "reboot_required", b"reboot_required", "status_detail", b"status_detail", "version", b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["arch", b"arch", "installed", b"installed", "is_embedded", b"is_embedded", "name", b"name", "present", b"present", "reboot_required", b"reboot_required", "status_detail", b"status_detail", "version", b"version"]) -> None: ...

global___Extension = Extension

@typing.final
class Extensions(google.protobuf.message.Message):
    """Extensions provides an ordered list of running/designed extensions."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Extension]:
        """values represents extension information."""

    def __init__(
        self,
        *,
        values: collections.abc.Iterable[global___Extension] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___Extensions = Extensions

@typing.final
class ComplianceStatus(google.protobuf.message.Message):
    """ComplianceStatus indicates compliance status for software image, terminattr
    and extensions.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOFTWARE_IMAGE_COMPLIANCE_CODE_FIELD_NUMBER: builtins.int
    TERMINATTR_COMPLIANCE_CODE_FIELD_NUMBER: builtins.int
    EXTENSIONS_COMPLIANCE_CODE_FIELD_NUMBER: builtins.int
    software_image_compliance_code: global___SoftwareComplianceCode.ValueType
    """software_image_compliance_code is the compliance code for images."""
    terminattr_compliance_code: global___SoftwareComplianceCode.ValueType
    """terminattr_compliance_code is the compliance code for TerminAttr."""
    extensions_compliance_code: global___SoftwareComplianceCode.ValueType
    """extensions_compliance_code is the compliance code for extensions."""
    def __init__(
        self,
        *,
        software_image_compliance_code: global___SoftwareComplianceCode.ValueType = ...,
        terminattr_compliance_code: global___SoftwareComplianceCode.ValueType = ...,
        extensions_compliance_code: global___SoftwareComplianceCode.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["extensions_compliance_code", b"extensions_compliance_code", "software_image_compliance_code", b"software_image_compliance_code", "terminattr_compliance_code", b"terminattr_compliance_code"]) -> None: ...

global___ComplianceStatus = ComplianceStatus

@typing.final
class ComplianceStatusBySup(google.protobuf.message.Message):
    """ComplianceStatusBySup is a map that indicates the compliance code for each
    supervisor.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ValuesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___ComplianceStatus: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___ComplianceStatus | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___ComplianceStatus]:
        """values is the mapping of supervisor type to compliance code."""

    def __init__(
        self,
        *,
        values: collections.abc.Mapping[builtins.str, global___ComplianceStatus] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___ComplianceStatusBySup = ComplianceStatusBySup

@typing.final
class RebootRequired(google.protobuf.message.Message):
    """RebootRequired indicates the reboot information per software image,
    terminattr and extension for the switch as a whole.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOFTWARE_IMAGE_REBOOT_REQUIRED_FIELD_NUMBER: builtins.int
    TERMINATTR_REBOOT_REQUIRED_FIELD_NUMBER: builtins.int
    EXTENSION_REBOOT_REQUIRED_FIELD_NUMBER: builtins.int
    @property
    def software_image_reboot_required(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """software_image_reboot_required indicates whether reboot is required
        for the software image being applied.
        """

    @property
    def terminattr_reboot_required(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """terminattr_reboot_required indicates whether reboot is required
        for the terminattr being applied/deleted.
        """

    @property
    def extension_reboot_required(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """extension_reboot_required indicates whether reboot is required
        for the extensions being applied/deleted.
        """

    def __init__(
        self,
        *,
        software_image_reboot_required: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        terminattr_reboot_required: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        extension_reboot_required: google.protobuf.wrappers_pb2.BoolValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["extension_reboot_required", b"extension_reboot_required", "software_image_reboot_required", b"software_image_reboot_required", "terminattr_reboot_required", b"terminattr_reboot_required"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["extension_reboot_required", b"extension_reboot_required", "software_image_reboot_required", b"software_image_reboot_required", "terminattr_reboot_required", b"terminattr_reboot_required"]) -> None: ...

global___RebootRequired = RebootRequired

@typing.final
class SoftwareImageDiff(google.protobuf.message.Message):
    """SoftwareImageDiff is the diff for the running/designed images."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    A_FIELD_NUMBER: builtins.int
    B_FIELD_NUMBER: builtins.int
    TEXT_CODE_FIELD_NUMBER: builtins.int
    code: global___DiffOp.ValueType
    """code indicates the operation performed to get from one side of the diff
    to the other.
    """
    text_code: global___DiffOp.ValueType
    """text_code is the color in the diff view page."""
    @property
    def a(self) -> global___SoftwareImage:
        """a is the software image on the a side (left hand side)."""

    @property
    def b(self) -> global___SoftwareImage:
        """b is the software image on the b side (right hand side)."""

    def __init__(
        self,
        *,
        code: global___DiffOp.ValueType = ...,
        a: global___SoftwareImage | None = ...,
        b: global___SoftwareImage | None = ...,
        text_code: global___DiffOp.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["a", b"a", "b", b"b"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["a", b"a", "b", b"b", "code", b"code", "text_code", b"text_code"]) -> None: ...

global___SoftwareImageDiff = SoftwareImageDiff

@typing.final
class SoftwareImageDiffsBySup(google.protobuf.message.Message):
    """SoftwareImageDiffsBySup is software image diff information for each
    supervisor.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ValuesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___SoftwareImageDiff: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___SoftwareImageDiff | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___SoftwareImageDiff]:
        """values is the mapping of supervisor type to image diff."""

    def __init__(
        self,
        *,
        values: collections.abc.Mapping[builtins.str, global___SoftwareImageDiff] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___SoftwareImageDiffsBySup = SoftwareImageDiffsBySup

@typing.final
class ExtensionDiff(google.protobuf.message.Message):
    """ExtensionDiff is the diff for the running/designed extensions."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    A_FIELD_NUMBER: builtins.int
    B_FIELD_NUMBER: builtins.int
    TEXT_CODE_FIELD_NUMBER: builtins.int
    code: global___DiffOp.ValueType
    """code indicates the operation performed to get from one side of the diff
    to the other.
    """
    text_code: global___DiffOp.ValueType
    """text_code is the color in the diff view page."""
    @property
    def a(self) -> global___Extension:
        """a is the extension on the a side (left hand side)."""

    @property
    def b(self) -> global___Extension:
        """b is the extension on the b side (right hand side)."""

    def __init__(
        self,
        *,
        code: global___DiffOp.ValueType = ...,
        a: global___Extension | None = ...,
        b: global___Extension | None = ...,
        text_code: global___DiffOp.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["a", b"a", "b", b"b"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["a", b"a", "b", b"b", "code", b"code", "text_code", b"text_code"]) -> None: ...

global___ExtensionDiff = ExtensionDiff

@typing.final
class TerminAttrDiffsBySup(google.protobuf.message.Message):
    """TerminAttrDiffsBySup is the terminattr diff information for each supervisor."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ValuesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___ExtensionDiff: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___ExtensionDiff | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___ExtensionDiff]:
        """values is the mapping of supervisor type to terminattr diff."""

    def __init__(
        self,
        *,
        values: collections.abc.Mapping[builtins.str, global___ExtensionDiff] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___TerminAttrDiffsBySup = TerminAttrDiffsBySup

@typing.final
class ExtensionDiffs(google.protobuf.message.Message):
    """ExtensionDiffs is a list of extension diff information in the order they
    will be applied.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ExtensionDiff]:
        """values is an ordered list of extension diffs applied to the device."""

    def __init__(
        self,
        *,
        values: collections.abc.Iterable[global___ExtensionDiff] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___ExtensionDiffs = ExtensionDiffs

@typing.final
class ExtensionDiffsBySup(google.protobuf.message.Message):
    """ExtensionDiffsBySup is the extension diff information for each supervisor."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ValuesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___ExtensionDiffs: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___ExtensionDiffs | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___ExtensionDiffs]:
        """values is the mapping of supervisor type to extension diff."""

    def __init__(
        self,
        *,
        values: collections.abc.Mapping[builtins.str, global___ExtensionDiffs] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___ExtensionDiffsBySup = ExtensionDiffsBySup

@typing.final
class ImageSummary(google.protobuf.message.Message):
    """ImageSummary represents device image summary."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SKU_FIELD_NUMBER: builtins.int
    RUNNING_IMAGE_UPDATE_TIME_FIELD_NUMBER: builtins.int
    DESIGNED_IMAGE_UPDATE_TIME_FIELD_NUMBER: builtins.int
    DUAL_SUP_FIELD_NUMBER: builtins.int
    ACTIVE_SLOT_FIELD_NUMBER: builtins.int
    STANDBY_SLOT_FIELD_NUMBER: builtins.int
    SOFTWARE_IMAGE_DIFF_FIELD_NUMBER: builtins.int
    TERMINATTR_DIFF_FIELD_NUMBER: builtins.int
    EXTENSIONS_DIFF_FIELD_NUMBER: builtins.int
    COMPLIANCE_STATUS_FIELD_NUMBER: builtins.int
    COMPLIANCE_FIELD_NUMBER: builtins.int
    REBOOT_REQUIRED_FIELD_NUMBER: builtins.int
    DIGEST_FIELD_NUMBER: builtins.int
    compliance_status: global___SoftwareComplianceCode.ValueType
    """compliance_status is the aggregated compliance status (including both
    active/standby and image/TA/extension compliance).
    """
    @property
    def sku(self) -> google.protobuf.wrappers_pb2.StringValue:
        """sku indicates the top-level sku or model number."""

    @property
    def running_image_update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """running_image_update_time is the most recent timestamp at which one of
        running image side properties is updated.
        """

    @property
    def designed_image_update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """designed_image_update_time is the most recent timestamp at which one of
        designed image side properties is updated.
        """

    @property
    def dual_sup(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """dual_sup indicates if a device is a dual supervisor."""

    @property
    def active_slot(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """active_slot indicates the physical slot number for the the active
        supervisor.
        """

    @property
    def standby_slot(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """standby_slot indicates the physical slot number for the standby
        supervisor.
        """

    @property
    def software_image_diff(self) -> global___SoftwareImageDiffsBySup:
        """software_image_diff indicates the image diff for each supervisor."""

    @property
    def terminattr_diff(self) -> global___TerminAttrDiffsBySup:
        """terminattr_diff indicates the terminattr diff for each supervisor."""

    @property
    def extensions_diff(self) -> global___ExtensionDiffsBySup:
        """extensions_diff indicates the extension diff for each supervisor."""

    @property
    def compliance(self) -> global___ComplianceStatusBySup:
        """compliance provides compliance information for each supervisor."""

    @property
    def reboot_required(self) -> global___RebootRequired:
        """reboot_required indicates whether a reboot is required if the designed
        image is pushed to the device.
        """

    @property
    def digest(self) -> google.protobuf.wrappers_pb2.StringValue:
        """digest is the digest of the image summary. It can use SHA-256 hash
        algorithm for example. It is computed by stringifying the
        software_image_diff, terminattr_diff and extensions_diff and computing the
        hash.
        """

    def __init__(
        self,
        *,
        sku: google.protobuf.wrappers_pb2.StringValue | None = ...,
        running_image_update_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        designed_image_update_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        dual_sup: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        active_slot: google.protobuf.wrappers_pb2.Int32Value | None = ...,
        standby_slot: google.protobuf.wrappers_pb2.Int32Value | None = ...,
        software_image_diff: global___SoftwareImageDiffsBySup | None = ...,
        terminattr_diff: global___TerminAttrDiffsBySup | None = ...,
        extensions_diff: global___ExtensionDiffsBySup | None = ...,
        compliance_status: global___SoftwareComplianceCode.ValueType = ...,
        compliance: global___ComplianceStatusBySup | None = ...,
        reboot_required: global___RebootRequired | None = ...,
        digest: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["active_slot", b"active_slot", "compliance", b"compliance", "designed_image_update_time", b"designed_image_update_time", "digest", b"digest", "dual_sup", b"dual_sup", "extensions_diff", b"extensions_diff", "reboot_required", b"reboot_required", "running_image_update_time", b"running_image_update_time", "sku", b"sku", "software_image_diff", b"software_image_diff", "standby_slot", b"standby_slot", "terminattr_diff", b"terminattr_diff"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["active_slot", b"active_slot", "compliance", b"compliance", "compliance_status", b"compliance_status", "designed_image_update_time", b"designed_image_update_time", "digest", b"digest", "dual_sup", b"dual_sup", "extensions_diff", b"extensions_diff", "reboot_required", b"reboot_required", "running_image_update_time", b"running_image_update_time", "sku", b"sku", "software_image_diff", b"software_image_diff", "standby_slot", b"standby_slot", "terminattr_diff", b"terminattr_diff"]) -> None: ...

global___ImageSummary = ImageSummary

@typing.final
class SummaryKey(google.protobuf.message.Message):
    """SummaryKey uniquely identifies a device summary request."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DEVICE_ID_FIELD_NUMBER: builtins.int
    @property
    def device_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """device_id is the serial number of the device"""

    def __init__(
        self,
        *,
        device_id: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["device_id", b"device_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["device_id", b"device_id"]) -> None: ...

global___SummaryKey = SummaryKey

@typing.final
class Summary(google.protobuf.message.Message):
    """Summary represents the device image summary."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    SUMMARY_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    WARNINGS_FIELD_NUMBER: builtins.int
    INFOS_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___SummaryKey:
        """key represents the image summary key."""

    @property
    def summary(self) -> global___ImageSummary:
        """summary is the image diff summary."""

    @property
    def errors(self) -> global___ImageErrors:
        """errors are the image errors encountered while validating the image. These are
        displayed on the workspace build results page.
        """

    @property
    def warnings(self) -> global___ImageWarnings:
        """warnings are the image warnings encountered while validating the image. These are
        displayed on the workspace build results page.
        """

    @property
    def infos(self) -> global___ImageInfos:
        """infos are the image infos encountered while validating the image. These are
        displayed on the workspace build results page.
        """

    def __init__(
        self,
        *,
        key: global___SummaryKey | None = ...,
        summary: global___ImageSummary | None = ...,
        errors: global___ImageErrors | None = ...,
        warnings: global___ImageWarnings | None = ...,
        infos: global___ImageInfos | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["errors", b"errors", "infos", b"infos", "key", b"key", "summary", b"summary", "warnings", b"warnings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["errors", b"errors", "infos", b"infos", "key", b"key", "summary", b"summary", "warnings", b"warnings"]) -> None: ...

global___Summary = Summary

@typing.final
class ImageError(google.protobuf.message.Message):
    """ImageError wraps `ErrorCode` enum with a reason string."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SKU_FIELD_NUMBER: builtins.int
    ERROR_CODE_FIELD_NUMBER: builtins.int
    ERROR_MSG_FIELD_NUMBER: builtins.int
    error_code: global___ErrorCode.ValueType
    """error_code is the error code."""
    @property
    def sku(self) -> google.protobuf.wrappers_pb2.StringValue:
        """sku represents the name of the sku."""

    @property
    def error_msg(self) -> google.protobuf.wrappers_pb2.StringValue:
        """error_msg provides a description of the error."""

    def __init__(
        self,
        *,
        sku: google.protobuf.wrappers_pb2.StringValue | None = ...,
        error_code: global___ErrorCode.ValueType = ...,
        error_msg: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["error_msg", b"error_msg", "sku", b"sku"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error_code", b"error_code", "error_msg", b"error_msg", "sku", b"sku"]) -> None: ...

global___ImageError = ImageError

@typing.final
class ImageErrors(google.protobuf.message.Message):
    """ImageErrors is the list of errors reported by CVP when handling image
    validations.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ImageError]:
        """values is a list of image errors."""

    def __init__(
        self,
        *,
        values: collections.abc.Iterable[global___ImageError] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___ImageErrors = ImageErrors

@typing.final
class ImageWarning(google.protobuf.message.Message):
    """ImageWarning wraps `WarningCode` enum with a reason string."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SKU_FIELD_NUMBER: builtins.int
    WARNING_CODE_FIELD_NUMBER: builtins.int
    WARNING_MSG_FIELD_NUMBER: builtins.int
    warning_code: global___WarningCode.ValueType
    """warning_code is the warning code."""
    @property
    def sku(self) -> google.protobuf.wrappers_pb2.StringValue:
        """sku represents the name of the sku."""

    @property
    def warning_msg(self) -> google.protobuf.wrappers_pb2.StringValue:
        """warning_msg provides a description of the warning."""

    def __init__(
        self,
        *,
        sku: google.protobuf.wrappers_pb2.StringValue | None = ...,
        warning_code: global___WarningCode.ValueType = ...,
        warning_msg: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["sku", b"sku", "warning_msg", b"warning_msg"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["sku", b"sku", "warning_code", b"warning_code", "warning_msg", b"warning_msg"]) -> None: ...

global___ImageWarning = ImageWarning

@typing.final
class ImageWarnings(google.protobuf.message.Message):
    """ImageWarnings is the list of warnings reported by CVP when handling image
    validations.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ImageWarning]:
        """values is a list of image warnings."""

    def __init__(
        self,
        *,
        values: collections.abc.Iterable[global___ImageWarning] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___ImageWarnings = ImageWarnings

@typing.final
class ImageInfo(google.protobuf.message.Message):
    """ImageInfo wraps `InfoCode` enum with a reason string."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SKU_FIELD_NUMBER: builtins.int
    INFO_CODE_FIELD_NUMBER: builtins.int
    INFO_MSG_FIELD_NUMBER: builtins.int
    info_code: global___InfoCode.ValueType
    """info_code is the info code."""
    @property
    def sku(self) -> google.protobuf.wrappers_pb2.StringValue:
        """sku represents the name of the sku."""

    @property
    def info_msg(self) -> google.protobuf.wrappers_pb2.StringValue:
        """info_msg provides a description of the info."""

    def __init__(
        self,
        *,
        sku: google.protobuf.wrappers_pb2.StringValue | None = ...,
        info_code: global___InfoCode.ValueType = ...,
        info_msg: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["info_msg", b"info_msg", "sku", b"sku"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["info_code", b"info_code", "info_msg", b"info_msg", "sku", b"sku"]) -> None: ...

global___ImageInfo = ImageInfo

@typing.final
class ImageInfos(google.protobuf.message.Message):
    """ImageInfos is the list of info messages reported by CVP when handling image validations."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ImageInfo]:
        """values is a list of image infos."""

    def __init__(
        self,
        *,
        values: collections.abc.Iterable[global___ImageInfo] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___ImageInfos = ImageInfos
