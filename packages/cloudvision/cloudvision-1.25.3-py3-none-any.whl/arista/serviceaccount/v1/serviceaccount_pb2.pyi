"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright (c) 2020 Arista Networks, Inc.  All rights reserved.
Use of this source code is governed by the Apache License 2.0
that can be found in the COPYING file.
"""

import builtins
import fmp.wrappers_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _AccountStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AccountStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AccountStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ACCOUNT_STATUS_UNSPECIFIED: _AccountStatus.ValueType  # 0
    """ACCOUNT_STATUS_UNSPECIFIED indicates the service account status is unspecified."""
    ACCOUNT_STATUS_ENABLED: _AccountStatus.ValueType  # 1
    """ACCOUNT_STATUS_ENABLED indicates the service account is enabled."""
    ACCOUNT_STATUS_DISABLED: _AccountStatus.ValueType  # 2
    """ACCOUNT_STATUS_DISABLED indicates the service account is disabled."""

class AccountStatus(_AccountStatus, metaclass=_AccountStatusEnumTypeWrapper):
    """AccountStatus determines whether an service account is enabled or disabled."""

ACCOUNT_STATUS_UNSPECIFIED: AccountStatus.ValueType  # 0
"""ACCOUNT_STATUS_UNSPECIFIED indicates the service account status is unspecified."""
ACCOUNT_STATUS_ENABLED: AccountStatus.ValueType  # 1
"""ACCOUNT_STATUS_ENABLED indicates the service account is enabled."""
ACCOUNT_STATUS_DISABLED: AccountStatus.ValueType  # 2
"""ACCOUNT_STATUS_DISABLED indicates the service account is disabled."""
global___AccountStatus = AccountStatus

@typing.final
class AccountKey(google.protobuf.message.Message):
    """AccountKey contains the name of the service account."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    @property
    def name(self) -> google.protobuf.wrappers_pb2.StringValue:
        """name is the unique identifier of the service account."""

    def __init__(
        self,
        *,
        name: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["name", b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___AccountKey = AccountKey

@typing.final
class AccountConfig(google.protobuf.message.Message):
    """AccountConfig holds the configuration for a service account."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    GROUPS_FIELD_NUMBER: builtins.int
    ALLOW_TOKEN_REFRESH_FIELD_NUMBER: builtins.int
    status: global___AccountStatus.ValueType
    """status determines if the service account is enabled or disabled. New service accounts are
    enabled by default.
    """
    @property
    def key(self) -> global___AccountKey:
        """key contains the name of the service account."""

    @property
    def description(self) -> google.protobuf.wrappers_pb2.StringValue:
        """description is a comment describing the service account."""

    @property
    def groups(self) -> fmp.wrappers_pb2.RepeatedString:
        """groups is a list of roles that the service account inherits permissions from."""

    @property
    def allow_token_refresh(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """allow_token_refresh determines whether or not the service account can refresh
        any of its own active tokens, including preexisting ones.
        """

    def __init__(
        self,
        *,
        key: global___AccountKey | None = ...,
        status: global___AccountStatus.ValueType = ...,
        description: google.protobuf.wrappers_pb2.StringValue | None = ...,
        groups: fmp.wrappers_pb2.RepeatedString | None = ...,
        allow_token_refresh: google.protobuf.wrappers_pb2.BoolValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["allow_token_refresh", b"allow_token_refresh", "description", b"description", "groups", b"groups", "key", b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["allow_token_refresh", b"allow_token_refresh", "description", b"description", "groups", b"groups", "key", b"key", "status", b"status"]) -> None: ...

global___AccountConfig = AccountConfig

@typing.final
class Account(google.protobuf.message.Message):
    """Account describes a service account."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    GROUPS_FIELD_NUMBER: builtins.int
    CREATED_BY_FIELD_NUMBER: builtins.int
    LAST_ACCESS_FIELD_NUMBER: builtins.int
    ALLOW_TOKEN_REFRESH_FIELD_NUMBER: builtins.int
    status: global___AccountStatus.ValueType
    """status determines whether the service account is enabled or disabled."""
    @property
    def key(self) -> global___AccountKey:
        """key uniquely identifies the service account."""

    @property
    def description(self) -> google.protobuf.wrappers_pb2.StringValue:
        """description is a comment describing the service account."""

    @property
    def groups(self) -> fmp.wrappers_pb2.RepeatedString:
        """groups is a list of roles that the service account inherits permissions from."""

    @property
    def created_by(self) -> google.protobuf.wrappers_pb2.StringValue:
        """created_by is the name of the entity that created the service account."""

    @property
    def last_access(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """last_access is the time when the service account was last fetched."""

    @property
    def allow_token_refresh(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """allow_token_refresh determines whether or not the service account can refresh
        any of its own active tokens, including preexisting ones.
        """

    def __init__(
        self,
        *,
        key: global___AccountKey | None = ...,
        status: global___AccountStatus.ValueType = ...,
        description: google.protobuf.wrappers_pb2.StringValue | None = ...,
        groups: fmp.wrappers_pb2.RepeatedString | None = ...,
        created_by: google.protobuf.wrappers_pb2.StringValue | None = ...,
        last_access: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        allow_token_refresh: google.protobuf.wrappers_pb2.BoolValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["allow_token_refresh", b"allow_token_refresh", "created_by", b"created_by", "description", b"description", "groups", b"groups", "key", b"key", "last_access", b"last_access"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["allow_token_refresh", b"allow_token_refresh", "created_by", b"created_by", "description", b"description", "groups", b"groups", "key", b"key", "last_access", b"last_access", "status", b"status"]) -> None: ...

global___Account = Account

@typing.final
class TokenKey(google.protobuf.message.Message):
    """TokenKey contains service account token ID."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """id is the unique identifier of the service account token."""

    def __init__(
        self,
        *,
        id: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["id", b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___TokenKey = TokenKey

@typing.final
class TokenConfig(google.protobuf.message.Message):
    """TokenConfig holds the configuration for a service account token. The token is a signed JWT which
    can be used as a credential for REST and WRPC endpoints.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    VALID_FOR_FIELD_NUMBER: builtins.int
    TOKEN_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___TokenKey:
        """key uniquely identifies the service account token."""

    @property
    def user(self) -> google.protobuf.wrappers_pb2.StringValue:
        """user is the name of the service account that the token is generated for."""

    @property
    def description(self) -> google.protobuf.wrappers_pb2.StringValue:
        """description is a short name or comment used to identify the service account token."""

    @property
    def valid_for(self) -> google.protobuf.duration_pb2.Duration:
        """valid_for determines the duration that the service account token will be valid for."""

    @property
    def token(self) -> google.protobuf.wrappers_pb2.StringValue:
        """token is the JWT generated for a service account token.
        It is only populated in Set response.
        """

    def __init__(
        self,
        *,
        key: global___TokenKey | None = ...,
        user: google.protobuf.wrappers_pb2.StringValue | None = ...,
        description: google.protobuf.wrappers_pb2.StringValue | None = ...,
        valid_for: google.protobuf.duration_pb2.Duration | None = ...,
        token: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["description", b"description", "key", b"key", "token", b"token", "user", b"user", "valid_for", b"valid_for"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["description", b"description", "key", b"key", "token", b"token", "user", b"user", "valid_for", b"valid_for"]) -> None: ...

global___TokenConfig = TokenConfig

@typing.final
class Token(google.protobuf.message.Message):
    """Token describes a service account token."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    VALID_UNTIL_FIELD_NUMBER: builtins.int
    CREATED_BY_FIELD_NUMBER: builtins.int
    LAST_USED_FIELD_NUMBER: builtins.int
    REPLACED_AT_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___TokenKey:
        """key uniquely identifies the service account token."""

    @property
    def user(self) -> google.protobuf.wrappers_pb2.StringValue:
        """user is the name of the service account that the token is generated for."""

    @property
    def description(self) -> google.protobuf.wrappers_pb2.StringValue:
        """description is a short name or comment used to identify the service account token."""

    @property
    def valid_until(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """valid_until is the time that the service account token will be valid until."""

    @property
    def created_by(self) -> google.protobuf.wrappers_pb2.StringValue:
        """created_by is the name of the entity that created the service account token."""

    @property
    def last_used(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """last_used is the time when the service account token was last used to authenticate."""

    @property
    def replaced_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """replaced_at is the time which the token has been replaced.
        It is only populated when the token is refreshed.
        """

    def __init__(
        self,
        *,
        key: global___TokenKey | None = ...,
        user: google.protobuf.wrappers_pb2.StringValue | None = ...,
        description: google.protobuf.wrappers_pb2.StringValue | None = ...,
        valid_until: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        created_by: google.protobuf.wrappers_pb2.StringValue | None = ...,
        last_used: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        replaced_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_by", b"created_by", "description", b"description", "key", b"key", "last_used", b"last_used", "replaced_at", b"replaced_at", "user", b"user", "valid_until", b"valid_until"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["created_by", b"created_by", "description", b"description", "key", b"key", "last_used", b"last_used", "replaced_at", b"replaced_at", "user", b"user", "valid_until", b"valid_until"]) -> None: ...

global___Token = Token

@typing.final
class TokenSelfRefreshConfig(google.protobuf.message.Message):
    """TokenSelfRefreshConfig describes the response a service account gets when they refresh their token"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALID_FOR_FIELD_NUMBER: builtins.int
    NEW_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def valid_for(self) -> google.protobuf.duration_pb2.Duration:
        """valid_for is the duration that the service account token will be valid for.
        Default value will be the original token duration.
        """

    @property
    def new_token(self) -> google.protobuf.wrappers_pb2.StringValue:
        """new_token is the JWT token generated for a service account token.
        This is populated in the response of a Set() request.
        """

    def __init__(
        self,
        *,
        valid_for: google.protobuf.duration_pb2.Duration | None = ...,
        new_token: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["new_token", b"new_token", "valid_for", b"valid_for"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["new_token", b"new_token", "valid_for", b"valid_for"]) -> None: ...

global___TokenSelfRefreshConfig = TokenSelfRefreshConfig
