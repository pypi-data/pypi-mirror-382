"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright (c) 2023 Arista Networks, Inc.  All rights reserved.
Use of this source code is governed by the Apache License 2.0
that can be found in the COPYING file.
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ActionLanguage:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ActionLanguageEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ActionLanguage.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ACTION_LANGUAGE_UNSPECIFIED: _ActionLanguage.ValueType  # 0
    """ACTION_LANGUAGE_UNSPECIFIED is the default value for this type."""
    ACTION_LANGUAGE_PYTHON_2: _ActionLanguage.ValueType  # 1
    """ACTION_LANGUAGE_PYTHON_2 indicates that the action body follows Python 2.x syntax."""
    ACTION_LANGUAGE_PYTHON_3: _ActionLanguage.ValueType  # 2
    """ACTION_LANGUAGE_PYTHON_3 indicates that the action body follows Python 3.x syntax."""
    ACTION_LANGUAGE_GO_TEMPLATE: _ActionLanguage.ValueType  # 3
    """ACTION_LANGUAGE_GO_TEMPLATE indicates that the action body is a Go language template
    (e.g. as used in ZTP).
    """

class ActionLanguage(_ActionLanguage, metaclass=_ActionLanguageEnumTypeWrapper):
    """ActionLanguage is the language of an action."""

ACTION_LANGUAGE_UNSPECIFIED: ActionLanguage.ValueType  # 0
"""ACTION_LANGUAGE_UNSPECIFIED is the default value for this type."""
ACTION_LANGUAGE_PYTHON_2: ActionLanguage.ValueType  # 1
"""ACTION_LANGUAGE_PYTHON_2 indicates that the action body follows Python 2.x syntax."""
ACTION_LANGUAGE_PYTHON_3: ActionLanguage.ValueType  # 2
"""ACTION_LANGUAGE_PYTHON_3 indicates that the action body follows Python 3.x syntax."""
ACTION_LANGUAGE_GO_TEMPLATE: ActionLanguage.ValueType  # 3
"""ACTION_LANGUAGE_GO_TEMPLATE indicates that the action body is a Go language template
(e.g. as used in ZTP).
"""
global___ActionLanguage = ActionLanguage

class _ActionType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ActionTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ActionType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ACTION_TYPE_UNSPECIFIED: _ActionType.ValueType  # 0
    """ACTION_TYPE_UNSPECIFIED is the default value for this type."""
    ACTION_TYPE_CHANGECONTROL_CUSTOM: _ActionType.ValueType  # 1
    """ACTION_TYPE_CHANGECONTROL_CUSTOM indicates a scripted action that can be used as part of
    a change control.
    """
    ACTION_TYPE_CHANGECONTROL_BUILT_IN: _ActionType.ValueType  # 2
    """ACTION_TYPE_CHANGECONTROL_BUILT_IN indicates a built-in action with no scripted component
    which can be used as part of a change control.
    """
    ACTION_TYPE_STUDIO_AUTOFILL: _ActionType.ValueType  # 3
    """ACTION_TYPE_STUDIO_AUTOFILL is an action which can be bound to an input in a studio."""
    ACTION_TYPE_PACKAGING_INSTALL_HOOK: _ActionType.ValueType  # 4
    """ACTION_TYPE_PACKAGING_INSTALL_HOOK is a type of Action which can run during package lifecycle
    events (e.g. pre-install or post-uninstall) to handle any migration or configuration changes
    that need to happen for a Package to be (un)installed successfully.
    """
    ACTION_TYPE_ZTP_BOOTSTRAP: _ActionType.ValueType  # 5
    """ACTION_TYPE_ZTP_BOOTSTRAP is a type of Action which can be used to bootstrap a device."""
    ACTION_TYPE_STUDIO_BUILD_HOOK: _ActionType.ValueType  # 6
    """ACTION_TYPE_STUDIO_BUILD_HOOK is a type of Action which can run at various points in a
    workspace build pipeline (e.g. workspace pre-build, studio pre-render), facilitating
    customization of the workspace build beyond the standard process. Build hooks in a given
    stage can express dependencies on each other which allows ordering of the actions' execution.

    For ACTION_TYPE_STUDIO_BUILD_HOOK each hook invocation will provide the following
    arguments:

    * WorkspaceID (mandatory): the ID of the Workspace
    * StudioID (optional, if running in the context of a Studio): the ID of the Studio
    """

class ActionType(_ActionType, metaclass=_ActionTypeEnumTypeWrapper):
    """ActionType is the type of an action."""

ACTION_TYPE_UNSPECIFIED: ActionType.ValueType  # 0
"""ACTION_TYPE_UNSPECIFIED is the default value for this type."""
ACTION_TYPE_CHANGECONTROL_CUSTOM: ActionType.ValueType  # 1
"""ACTION_TYPE_CHANGECONTROL_CUSTOM indicates a scripted action that can be used as part of
a change control.
"""
ACTION_TYPE_CHANGECONTROL_BUILT_IN: ActionType.ValueType  # 2
"""ACTION_TYPE_CHANGECONTROL_BUILT_IN indicates a built-in action with no scripted component
which can be used as part of a change control.
"""
ACTION_TYPE_STUDIO_AUTOFILL: ActionType.ValueType  # 3
"""ACTION_TYPE_STUDIO_AUTOFILL is an action which can be bound to an input in a studio."""
ACTION_TYPE_PACKAGING_INSTALL_HOOK: ActionType.ValueType  # 4
"""ACTION_TYPE_PACKAGING_INSTALL_HOOK is a type of Action which can run during package lifecycle
events (e.g. pre-install or post-uninstall) to handle any migration or configuration changes
that need to happen for a Package to be (un)installed successfully.
"""
ACTION_TYPE_ZTP_BOOTSTRAP: ActionType.ValueType  # 5
"""ACTION_TYPE_ZTP_BOOTSTRAP is a type of Action which can be used to bootstrap a device."""
ACTION_TYPE_STUDIO_BUILD_HOOK: ActionType.ValueType  # 6
"""ACTION_TYPE_STUDIO_BUILD_HOOK is a type of Action which can run at various points in a
workspace build pipeline (e.g. workspace pre-build, studio pre-render), facilitating
customization of the workspace build beyond the standard process. Build hooks in a given
stage can express dependencies on each other which allows ordering of the actions' execution.

For ACTION_TYPE_STUDIO_BUILD_HOOK each hook invocation will provide the following
arguments:

* WorkspaceID (mandatory): the ID of the Workspace
* StudioID (optional, if running in the context of a Studio): the ID of the Studio
"""
global___ActionType = ActionType

@typing.final
class ActionAudit(google.protobuf.message.Message):
    """ActionAudit contains additional information for the Action state model."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREATED_AT_FIELD_NUMBER: builtins.int
    CREATED_BY_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_AT_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_BY_FIELD_NUMBER: builtins.int
    FROM_PACKAGE_FIELD_NUMBER: builtins.int
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """created_at records the time when the action was originally created."""

    @property
    def created_by(self) -> google.protobuf.wrappers_pb2.StringValue:
        """created_by records the user who created the action."""

    @property
    def last_modified_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """last_modified_at records the time when the action was most recently modified."""

    @property
    def last_modified_by(self) -> google.protobuf.wrappers_pb2.StringValue:
        """last_modified_by records the user who most recently modified the action."""

    @property
    def from_package(self) -> google.protobuf.wrappers_pb2.StringValue:
        """from_package indicates that this action was created by a package, and can only be modified
        by the packaging service.
        """

    def __init__(
        self,
        *,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        created_by: google.protobuf.wrappers_pb2.StringValue | None = ...,
        last_modified_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        last_modified_by: google.protobuf.wrappers_pb2.StringValue | None = ...,
        from_package: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_at", b"created_at", "created_by", b"created_by", "from_package", b"from_package", "last_modified_at", b"last_modified_at", "last_modified_by", b"last_modified_by"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["created_at", b"created_at", "created_by", b"created_by", "from_package", b"from_package", "last_modified_at", b"last_modified_at", "last_modified_by", b"last_modified_by"]) -> None: ...

global___ActionAudit = ActionAudit

@typing.final
class ActionKey(google.protobuf.message.Message):
    """ActionKey is the model key of an action."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """id uniquely identifies the action. Although chosen by the caller, it is recommended
        to be a random UUID.
        """

    def __init__(
        self,
        *,
        id: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["id", b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___ActionKey = ActionKey

@typing.final
class ActionArgDefinition(google.protobuf.message.Message):
    """ActionArgDefinition is the definition of an argument (static or dynamic)."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUIRED_FIELD_NUMBER: builtins.int
    DEFAULT_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    HIDDEN_FIELD_NUMBER: builtins.int
    @property
    def required(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """required indicates that this argument must always be set when calling the action."""

    @property
    def default(self) -> global___ActionArgValue:
        """default is the default value for this argument. If set to null, there is no default
        value.
        """

    @property
    def description(self) -> google.protobuf.wrappers_pb2.StringValue:
        """description is a user-friendly description of the argument."""

    @property
    def hidden(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """hidden can be set to true to indicate that the value of this argument can be set, but not
        retrieved from this API.
        """

    def __init__(
        self,
        *,
        required: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        default: global___ActionArgValue | None = ...,
        description: google.protobuf.wrappers_pb2.StringValue | None = ...,
        hidden: google.protobuf.wrappers_pb2.BoolValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["default", b"default", "description", b"description", "hidden", b"hidden", "required", b"required"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["default", b"default", "description", b"description", "hidden", b"hidden", "required", b"required"]) -> None: ...

global___ActionArgDefinition = ActionArgDefinition

@typing.final
class ActionSchema(google.protobuf.message.Message):
    """ActionSchema is the schema of an action. Corresponds to the definition of multiple
    arguments.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ValuesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___ActionArgDefinition: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___ActionArgDefinition | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___ActionArgDefinition]:
        """values is a map of argument name to its defintion."""

    def __init__(
        self,
        *,
        values: collections.abc.Mapping[builtins.str, global___ActionArgDefinition] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___ActionSchema = ActionSchema

@typing.final
class ActionCore(google.protobuf.message.Message):
    """ActionCore contains the core fields of an action."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    STATIC_ARGS_FIELD_NUMBER: builtins.int
    DYNAMIC_ARGS_FIELD_NUMBER: builtins.int
    type: global___ActionType.ValueType
    """type is the specific type of the action."""
    @property
    def name(self) -> google.protobuf.wrappers_pb2.StringValue:
        """name is the user-friendly name of the action."""

    @property
    def description(self) -> google.protobuf.wrappers_pb2.StringValue:
        """description is a user-friendly description of the action."""

    @property
    def static_args(self) -> global___ActionSchema:
        """static_args defines arguments which can be permanently changed for subsequent runs
        of this action (set ActionArgConfig to accomplish that). The names of arguments in
        static_args cannot also appear in dynamic_args.
        """

    @property
    def dynamic_args(self) -> global___ActionSchema:
        """dynamic_args defines arguments which are scoped to a specific run of the action.
        The names of arguments in dynamic_args cannot also appear in static_args.
        """

    def __init__(
        self,
        *,
        name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        type: global___ActionType.ValueType = ...,
        description: google.protobuf.wrappers_pb2.StringValue | None = ...,
        static_args: global___ActionSchema | None = ...,
        dynamic_args: global___ActionSchema | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["description", b"description", "dynamic_args", b"dynamic_args", "name", b"name", "static_args", b"static_args"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["description", b"description", "dynamic_args", b"dynamic_args", "name", b"name", "static_args", b"static_args", "type", b"type"]) -> None: ...

global___ActionCore = ActionCore

@typing.final
class Action(google.protobuf.message.Message):
    """Action is the state model of an action."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    CORE_FIELD_NUMBER: builtins.int
    AUDIT_FIELD_NUMBER: builtins.int
    LANGUAGE_FIELD_NUMBER: builtins.int
    BODY_FIELD_NUMBER: builtins.int
    language: global___ActionLanguage.ValueType
    """language specifies the language of the action body, if applicable."""
    @property
    def key(self) -> global___ActionKey:
        """key uniquely identifies the action."""

    @property
    def core(self) -> global___ActionCore:
        """core contains some common attributes (state/config) of the action."""

    @property
    def audit(self) -> global___ActionAudit:
        """audit contains meta information about the action."""

    @property
    def body(self) -> google.protobuf.wrappers_pb2.StringValue:
        """body contains the action code (script), if applicable."""

    def __init__(
        self,
        *,
        key: global___ActionKey | None = ...,
        core: global___ActionCore | None = ...,
        audit: global___ActionAudit | None = ...,
        language: global___ActionLanguage.ValueType = ...,
        body: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["audit", b"audit", "body", b"body", "core", b"core", "key", b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["audit", b"audit", "body", b"body", "core", b"core", "key", b"key", "language", b"language"]) -> None: ...

global___Action = Action

@typing.final
class ActionConfig(google.protobuf.message.Message):
    """ActionConfig is the config of an action. Unimplemented for builtin actions"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    CORE_FIELD_NUMBER: builtins.int
    LANGUAGE_FIELD_NUMBER: builtins.int
    BODY_FIELD_NUMBER: builtins.int
    language: global___ActionLanguage.ValueType
    """language specifies the language of the action body, if applicable."""
    @property
    def key(self) -> global___ActionKey:
        """key uniquely identifies the action."""

    @property
    def core(self) -> global___ActionCore:
        """core contains some common attributes (state/config) of the action."""

    @property
    def body(self) -> google.protobuf.wrappers_pb2.StringValue:
        """body contains the action code (script), if applicable."""

    def __init__(
        self,
        *,
        key: global___ActionKey | None = ...,
        core: global___ActionCore | None = ...,
        language: global___ActionLanguage.ValueType = ...,
        body: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["body", b"body", "core", b"core", "key", b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["body", b"body", "core", b"core", "key", b"key", "language", b"language"]) -> None: ...

global___ActionConfig = ActionConfig

@typing.final
class ActionArgValue(google.protobuf.message.Message):
    """ActionArgValue contains the value of one argument of an action."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    @property
    def value(self) -> google.protobuf.wrappers_pb2.StringValue:
        """value is the string value to set the argument for runtime."""

    def __init__(
        self,
        *,
        value: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["value", b"value"]) -> None: ...

global___ActionArgValue = ActionArgValue

@typing.final
class ActionArgValues(google.protobuf.message.Message):
    """ActionArgValues contains the values of the arguments of an action."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ValuesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___ActionArgValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___ActionArgValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___ActionArgValue]:
        """values is a map of arg name to value."""

    def __init__(
        self,
        *,
        values: collections.abc.Mapping[builtins.str, global___ActionArgValue] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___ActionArgValues = ActionArgValues

@typing.final
class ActionArgConfig(google.protobuf.message.Message):
    """ActionArgConfig is the model for the definition of static arguments"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    STATIC_ARGS_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___ActionKey:
        """key uniquely identifies the action to which the arguments apply."""

    @property
    def static_args(self) -> global___ActionArgValues:
        """static_args contains the arguments that are to be applied to all subsequent runs
        of the action. Argument names and values must adhere to the ActionSchema static_args.

        When retrieving values of the arguments that had been set, but which are defined as
        `hidden` in ActionSchema static_args, fake hardcoded values are returned instead
        of the real values.
        """

    def __init__(
        self,
        *,
        key: global___ActionKey | None = ...,
        static_args: global___ActionArgValues | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["key", b"key", "static_args", b"static_args"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["key", b"key", "static_args", b"static_args"]) -> None: ...

global___ActionArgConfig = ActionArgConfig

@typing.final
class ActionRunKey(google.protobuf.message.Message):
    """ActionRunKey is the model key that can uniquely identify an action run."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RUN_ID_FIELD_NUMBER: builtins.int
    @property
    def run_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """run_id uniquely identifies an action run"""

    def __init__(
        self,
        *,
        run_id: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["run_id", b"run_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["run_id", b"run_id"]) -> None: ...

global___ActionRunKey = ActionRunKey

@typing.final
class ActionRunConfig(google.protobuf.message.Message):
    """ActionRunConfig is the configuration of a single execution of an action. Creating a record under
    a new key triggers a run. Attempting to set again an existing entry is an error.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    ACTION_ID_FIELD_NUMBER: builtins.int
    DYNAMIC_ARGS_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___ActionRunKey:
        """key uniquely identifies the ActionRunConfig and the corresponding ActionRun."""

    @property
    def action_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """action_id uniquely identifies the Action being run."""

    @property
    def dynamic_args(self) -> global___ActionArgValues:
        """dynamic_args contains the values of dynamic arguments defined for the action."""

    def __init__(
        self,
        *,
        key: global___ActionRunKey | None = ...,
        action_id: google.protobuf.wrappers_pb2.StringValue | None = ...,
        dynamic_args: global___ActionArgValues | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["action_id", b"action_id", "dynamic_args", b"dynamic_args", "key", b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["action_id", b"action_id", "dynamic_args", b"dynamic_args", "key", b"key"]) -> None: ...

global___ActionRunConfig = ActionRunConfig

@typing.final
class ActionRun(google.protobuf.message.Message):
    """ActionRun is the state of a single run (single execution) of an action."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    ACTION_ID_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    CREATED_BY_FIELD_NUMBER: builtins.int
    FINISHED_AT_FIELD_NUMBER: builtins.int
    IS_FINISHED_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___ActionRunKey:
        """key uniquely identifies the ActionRun and the corresponding ActionRunConfig."""

    @property
    def action_id(self) -> google.protobuf.wrappers_pb2.StringValue:
        """action_id uniquely identifies the Action being run."""

    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """created_at records the time when the action run has been requested."""

    @property
    def created_by(self) -> google.protobuf.wrappers_pb2.StringValue:
        """created_by records the user who requested the action execution."""

    @property
    def finished_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """finished_at records the time when the action finished running."""

    @property
    def is_finished(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """is_finished is true only when the action has finished running and the fields `code`,
        `output`, `error`, and `finished_at` are assigned their final values.
        """

    @property
    def code(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """code contains the exit code of the action.

        The `code` may be ignored if `error` is empty or nil.
        """

    @property
    def output(self) -> google.protobuf.wrappers_pb2.StringValue:
        """output contains the output produced by the action, truncated to the first 100,000 bytes."""

    @property
    def error(self) -> google.protobuf.wrappers_pb2.StringValue:
        """error contains a failure description for unsuccessful runs, either caused by the body
        or by the execution environment.

        Often it is a python traceback which contains multiple newline characters.
        Maximum size is 100,000 bytes.
        """

    def __init__(
        self,
        *,
        key: global___ActionRunKey | None = ...,
        action_id: google.protobuf.wrappers_pb2.StringValue | None = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        created_by: google.protobuf.wrappers_pb2.StringValue | None = ...,
        finished_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        is_finished: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        code: google.protobuf.wrappers_pb2.Int32Value | None = ...,
        output: google.protobuf.wrappers_pb2.StringValue | None = ...,
        error: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["action_id", b"action_id", "code", b"code", "created_at", b"created_at", "created_by", b"created_by", "error", b"error", "finished_at", b"finished_at", "is_finished", b"is_finished", "key", b"key", "output", b"output"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["action_id", b"action_id", "code", b"code", "created_at", b"created_at", "created_by", b"created_by", "error", b"error", "finished_at", b"finished_at", "is_finished", b"is_finished", "key", b"key", "output", b"output"]) -> None: ...

global___ActionRun = ActionRun
