# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from arista.tag.v2.services import gen_pb2 as arista_dot_tag_dot_v2_dot_services_dot_gen__pb2

GRPC_GENERATED_VERSION = '1.67.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in arista/tag.v2/services.gen_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ElementServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOne = channel.unary_unary(
                '/arista.tag.v2.ElementService/GetOne',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementResponse.FromString,
                _registered_method=True)
        self.GetSome = channel.unary_stream(
                '/arista.tag.v2.ElementService/GetSome',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementSomeRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementSomeResponse.FromString,
                _registered_method=True)
        self.GetAll = channel.unary_stream(
                '/arista.tag.v2.ElementService/GetAll',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamResponse.FromString,
                _registered_method=True)
        self.Subscribe = channel.unary_stream(
                '/arista.tag.v2.ElementService/Subscribe',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamResponse.FromString,
                _registered_method=True)
        self.GetMeta = channel.unary_unary(
                '/arista.tag.v2.ElementService/GetMeta',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
                _registered_method=True)
        self.SubscribeMeta = channel.unary_stream(
                '/arista.tag.v2.ElementService/SubscribeMeta',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
                _registered_method=True)
        self.GetAllBatched = channel.unary_stream(
                '/arista.tag.v2.ElementService/GetAllBatched',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementBatchedStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementBatchedStreamResponse.FromString,
                _registered_method=True)
        self.SubscribeBatched = channel.unary_stream(
                '/arista.tag.v2.ElementService/SubscribeBatched',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementBatchedStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementBatchedStreamResponse.FromString,
                _registered_method=True)


class ElementServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSome(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllBatched(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeBatched(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ElementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOne': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOne,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementResponse.SerializeToString,
            ),
            'GetSome': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSome,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementSomeRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementSomeResponse.SerializeToString,
            ),
            'GetAll': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamResponse.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamResponse.SerializeToString,
            ),
            'GetMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMeta,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.SerializeToString,
            ),
            'SubscribeMeta': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeMeta,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.SerializeToString,
            ),
            'GetAllBatched': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllBatched,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementBatchedStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementBatchedStreamResponse.SerializeToString,
            ),
            'SubscribeBatched': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeBatched,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementBatchedStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementBatchedStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arista.tag.v2.ElementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('arista.tag.v2.ElementService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ElementService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.ElementService/GetOne',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.ElementService/GetSome',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementSomeRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementSomeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.ElementService/GetAll',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.ElementService/Subscribe',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.ElementService/GetMeta',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.ElementService/SubscribeMeta',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllBatched(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.ElementService/GetAllBatched',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementBatchedStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementBatchedStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeBatched(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.ElementService/SubscribeBatched',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementBatchedStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.ElementBatchedStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class TagServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOne = channel.unary_unary(
                '/arista.tag.v2.TagService/GetOne',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagResponse.FromString,
                _registered_method=True)
        self.GetSome = channel.unary_stream(
                '/arista.tag.v2.TagService/GetSome',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagSomeRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagSomeResponse.FromString,
                _registered_method=True)
        self.GetAll = channel.unary_stream(
                '/arista.tag.v2.TagService/GetAll',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamResponse.FromString,
                _registered_method=True)
        self.Subscribe = channel.unary_stream(
                '/arista.tag.v2.TagService/Subscribe',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamResponse.FromString,
                _registered_method=True)
        self.GetMeta = channel.unary_unary(
                '/arista.tag.v2.TagService/GetMeta',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
                _registered_method=True)
        self.SubscribeMeta = channel.unary_stream(
                '/arista.tag.v2.TagService/SubscribeMeta',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
                _registered_method=True)
        self.GetAllBatched = channel.unary_stream(
                '/arista.tag.v2.TagService/GetAllBatched',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagBatchedStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagBatchedStreamResponse.FromString,
                _registered_method=True)
        self.SubscribeBatched = channel.unary_stream(
                '/arista.tag.v2.TagService/SubscribeBatched',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagBatchedStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagBatchedStreamResponse.FromString,
                _registered_method=True)


class TagServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSome(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllBatched(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeBatched(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TagServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOne': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOne,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagResponse.SerializeToString,
            ),
            'GetSome': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSome,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagSomeRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagSomeResponse.SerializeToString,
            ),
            'GetAll': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamResponse.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamResponse.SerializeToString,
            ),
            'GetMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMeta,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.SerializeToString,
            ),
            'SubscribeMeta': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeMeta,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.SerializeToString,
            ),
            'GetAllBatched': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllBatched,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagBatchedStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagBatchedStreamResponse.SerializeToString,
            ),
            'SubscribeBatched': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeBatched,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagBatchedStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagBatchedStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arista.tag.v2.TagService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('arista.tag.v2.TagService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TagService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.TagService/GetOne',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagService/GetSome',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagSomeRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagSomeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagService/GetAll',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagService/Subscribe',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.TagService/GetMeta',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagService/SubscribeMeta',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllBatched(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagService/GetAllBatched',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagBatchedStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagBatchedStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeBatched(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagService/SubscribeBatched',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagBatchedStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagBatchedStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class TagAssignmentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOne = channel.unary_unary(
                '/arista.tag.v2.TagAssignmentService/GetOne',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentResponse.FromString,
                _registered_method=True)
        self.GetSome = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentService/GetSome',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentSomeRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentSomeResponse.FromString,
                _registered_method=True)
        self.GetAll = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentService/GetAll',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamResponse.FromString,
                _registered_method=True)
        self.Subscribe = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentService/Subscribe',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamResponse.FromString,
                _registered_method=True)
        self.GetMeta = channel.unary_unary(
                '/arista.tag.v2.TagAssignmentService/GetMeta',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
                _registered_method=True)
        self.SubscribeMeta = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentService/SubscribeMeta',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
                _registered_method=True)
        self.GetAllBatched = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentService/GetAllBatched',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentBatchedStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentBatchedStreamResponse.FromString,
                _registered_method=True)
        self.SubscribeBatched = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentService/SubscribeBatched',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentBatchedStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentBatchedStreamResponse.FromString,
                _registered_method=True)


class TagAssignmentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSome(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllBatched(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeBatched(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TagAssignmentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOne': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOne,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentResponse.SerializeToString,
            ),
            'GetSome': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSome,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentSomeRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentSomeResponse.SerializeToString,
            ),
            'GetAll': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamResponse.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamResponse.SerializeToString,
            ),
            'GetMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMeta,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.SerializeToString,
            ),
            'SubscribeMeta': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeMeta,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.SerializeToString,
            ),
            'GetAllBatched': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllBatched,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentBatchedStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentBatchedStreamResponse.SerializeToString,
            ),
            'SubscribeBatched': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeBatched,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentBatchedStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentBatchedStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arista.tag.v2.TagAssignmentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('arista.tag.v2.TagAssignmentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TagAssignmentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.TagAssignmentService/GetOne',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentService/GetSome',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentSomeRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentSomeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentService/GetAll',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentService/Subscribe',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.TagAssignmentService/GetMeta',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentService/SubscribeMeta',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllBatched(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentService/GetAllBatched',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentBatchedStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentBatchedStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeBatched(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentService/SubscribeBatched',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentBatchedStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentBatchedStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class TagAssignmentConfigServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOne = channel.unary_unary(
                '/arista.tag.v2.TagAssignmentConfigService/GetOne',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigResponse.FromString,
                _registered_method=True)
        self.GetSome = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentConfigService/GetSome',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSomeRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSomeResponse.FromString,
                _registered_method=True)
        self.GetAll = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentConfigService/GetAll',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamResponse.FromString,
                _registered_method=True)
        self.Subscribe = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentConfigService/Subscribe',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamResponse.FromString,
                _registered_method=True)
        self.GetMeta = channel.unary_unary(
                '/arista.tag.v2.TagAssignmentConfigService/GetMeta',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
                _registered_method=True)
        self.SubscribeMeta = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentConfigService/SubscribeMeta',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
                _registered_method=True)
        self.Set = channel.unary_unary(
                '/arista.tag.v2.TagAssignmentConfigService/Set',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetResponse.FromString,
                _registered_method=True)
        self.SetSome = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentConfigService/SetSome',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetSomeRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetSomeResponse.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/arista.tag.v2.TagAssignmentConfigService/Delete',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteResponse.FromString,
                _registered_method=True)
        self.DeleteSome = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentConfigService/DeleteSome',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteSomeRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteSomeResponse.FromString,
                _registered_method=True)
        self.DeleteAll = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentConfigService/DeleteAll',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteAllRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteAllResponse.FromString,
                _registered_method=True)
        self.GetAllBatched = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentConfigService/GetAllBatched',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigBatchedStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigBatchedStreamResponse.FromString,
                _registered_method=True)
        self.SubscribeBatched = channel.unary_stream(
                '/arista.tag.v2.TagAssignmentConfigService/SubscribeBatched',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigBatchedStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigBatchedStreamResponse.FromString,
                _registered_method=True)


class TagAssignmentConfigServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSome(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSome(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSome(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllBatched(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeBatched(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TagAssignmentConfigServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOne': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOne,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigResponse.SerializeToString,
            ),
            'GetSome': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSome,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSomeRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSomeResponse.SerializeToString,
            ),
            'GetAll': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamResponse.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamResponse.SerializeToString,
            ),
            'GetMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMeta,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.SerializeToString,
            ),
            'SubscribeMeta': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeMeta,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.SerializeToString,
            ),
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetResponse.SerializeToString,
            ),
            'SetSome': grpc.unary_stream_rpc_method_handler(
                    servicer.SetSome,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetSomeRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetSomeResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteResponse.SerializeToString,
            ),
            'DeleteSome': grpc.unary_stream_rpc_method_handler(
                    servicer.DeleteSome,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteSomeRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteSomeResponse.SerializeToString,
            ),
            'DeleteAll': grpc.unary_stream_rpc_method_handler(
                    servicer.DeleteAll,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteAllRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteAllResponse.SerializeToString,
            ),
            'GetAllBatched': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllBatched,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigBatchedStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigBatchedStreamResponse.SerializeToString,
            ),
            'SubscribeBatched': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeBatched,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigBatchedStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigBatchedStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arista.tag.v2.TagAssignmentConfigService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('arista.tag.v2.TagAssignmentConfigService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TagAssignmentConfigService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.TagAssignmentConfigService/GetOne',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentConfigService/GetSome',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSomeRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSomeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentConfigService/GetAll',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentConfigService/Subscribe',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.TagAssignmentConfigService/GetMeta',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentConfigService/SubscribeMeta',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.TagAssignmentConfigService/Set',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetSome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentConfigService/SetSome',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetSomeRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigSetSomeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.TagAssignmentConfigService/Delete',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteSome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentConfigService/DeleteSome',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteSomeRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteSomeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentConfigService/DeleteAll',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteAllRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigDeleteAllResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllBatched(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentConfigService/GetAllBatched',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigBatchedStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigBatchedStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeBatched(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagAssignmentConfigService/SubscribeBatched',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigBatchedStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagAssignmentConfigBatchedStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class TagConfigServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOne = channel.unary_unary(
                '/arista.tag.v2.TagConfigService/GetOne',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigResponse.FromString,
                _registered_method=True)
        self.GetSome = channel.unary_stream(
                '/arista.tag.v2.TagConfigService/GetSome',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSomeRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSomeResponse.FromString,
                _registered_method=True)
        self.GetAll = channel.unary_stream(
                '/arista.tag.v2.TagConfigService/GetAll',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamResponse.FromString,
                _registered_method=True)
        self.Subscribe = channel.unary_stream(
                '/arista.tag.v2.TagConfigService/Subscribe',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamResponse.FromString,
                _registered_method=True)
        self.GetMeta = channel.unary_unary(
                '/arista.tag.v2.TagConfigService/GetMeta',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
                _registered_method=True)
        self.SubscribeMeta = channel.unary_stream(
                '/arista.tag.v2.TagConfigService/SubscribeMeta',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
                _registered_method=True)
        self.Set = channel.unary_unary(
                '/arista.tag.v2.TagConfigService/Set',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetResponse.FromString,
                _registered_method=True)
        self.SetSome = channel.unary_stream(
                '/arista.tag.v2.TagConfigService/SetSome',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetSomeRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetSomeResponse.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/arista.tag.v2.TagConfigService/Delete',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteResponse.FromString,
                _registered_method=True)
        self.DeleteSome = channel.unary_stream(
                '/arista.tag.v2.TagConfigService/DeleteSome',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteSomeRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteSomeResponse.FromString,
                _registered_method=True)
        self.DeleteAll = channel.unary_stream(
                '/arista.tag.v2.TagConfigService/DeleteAll',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteAllRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteAllResponse.FromString,
                _registered_method=True)
        self.GetAllBatched = channel.unary_stream(
                '/arista.tag.v2.TagConfigService/GetAllBatched',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigBatchedStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigBatchedStreamResponse.FromString,
                _registered_method=True)
        self.SubscribeBatched = channel.unary_stream(
                '/arista.tag.v2.TagConfigService/SubscribeBatched',
                request_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigBatchedStreamRequest.SerializeToString,
                response_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigBatchedStreamResponse.FromString,
                _registered_method=True)


class TagConfigServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSome(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSome(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSome(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllBatched(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeBatched(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TagConfigServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOne': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOne,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigResponse.SerializeToString,
            ),
            'GetSome': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSome,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSomeRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSomeResponse.SerializeToString,
            ),
            'GetAll': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamResponse.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamResponse.SerializeToString,
            ),
            'GetMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMeta,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.SerializeToString,
            ),
            'SubscribeMeta': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeMeta,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.SerializeToString,
            ),
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetResponse.SerializeToString,
            ),
            'SetSome': grpc.unary_stream_rpc_method_handler(
                    servicer.SetSome,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetSomeRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetSomeResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteResponse.SerializeToString,
            ),
            'DeleteSome': grpc.unary_stream_rpc_method_handler(
                    servicer.DeleteSome,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteSomeRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteSomeResponse.SerializeToString,
            ),
            'DeleteAll': grpc.unary_stream_rpc_method_handler(
                    servicer.DeleteAll,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteAllRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteAllResponse.SerializeToString,
            ),
            'GetAllBatched': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllBatched,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigBatchedStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigBatchedStreamResponse.SerializeToString,
            ),
            'SubscribeBatched': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeBatched,
                    request_deserializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigBatchedStreamRequest.FromString,
                    response_serializer=arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigBatchedStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arista.tag.v2.TagConfigService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('arista.tag.v2.TagConfigService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TagConfigService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.TagConfigService/GetOne',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagConfigService/GetSome',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSomeRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSomeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagConfigService/GetAll',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagConfigService/Subscribe',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.TagConfigService/GetMeta',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagConfigService/SubscribeMeta',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.MetaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.TagConfigService/Set',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetSome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagConfigService/SetSome',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetSomeRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigSetSomeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/arista.tag.v2.TagConfigService/Delete',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteSome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagConfigService/DeleteSome',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteSomeRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteSomeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagConfigService/DeleteAll',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteAllRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigDeleteAllResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllBatched(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagConfigService/GetAllBatched',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigBatchedStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigBatchedStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeBatched(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/arista.tag.v2.TagConfigService/SubscribeBatched',
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigBatchedStreamRequest.SerializeToString,
            arista_dot_tag_dot_v2_dot_services_dot_gen__pb2.TagConfigBatchedStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
