apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: {{ .Values.gpuNodepoolVersion }}-ec2nodeclass
spec:
  amiFamily: AL2023
  amiSelectorTerms:
    - name: amazon-eks-node-al2023-x86_64-nvidia-1.30-v20241205
  role: "KarpenterNodeRole-{{ .Values.clusterName }}" 
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: {{ .Values.clusterName}} 
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: {{ .Values.clusterName }}
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        deleteOnTermination: true
        iops: 4000
        volumeType: gp3
        volumeSize: 2000Gi
        throughput: 1000
  userData: |
    apiVersion: node.eks.aws/v1alpha1
    kind: NodeConfig
    spec:
      containerd:
        config: |
          [plugins."io.containerd.grpc.v1.cri".containerd]
            discard_unpacked_layers = false
            disable_snapshot_annotations = false
---
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: {{ .Values.gpuNodepoolVersion }}-nodepool
spec:
  disruption:
    consolidateAfter: 30s
    consolidationPolicy: WhenEmpty
    expireAfter: Never
  limits:
    cpu: "1000"
  template:
    metadata:
      labels:
        nodepool: {{ .Values.gpuNodepoolVersion }}-nodepool
    spec:
      terminationGracePeriod: 5m
      requirements:
        - key: karpenter.k8s.aws/instance-family
          operator: In
          values: ['g4dn', 'g5', 'g5g', 'g6', 'g6e', 'p2', 'p3', 'p3dn', 'p4d', 'p5']
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: topology.kubernetes.io/zone
          operator: In
          values:
          {{- range .Values.karpenterTopologyZoneValues }}
              - {{ . }}
          {{- end }}
      nodeClassRef:
        name: {{ .Values.gpuNodepoolVersion }}-ec2nodeclass
        kind: EC2NodeClass
        group: karpenter.k8s.aws
