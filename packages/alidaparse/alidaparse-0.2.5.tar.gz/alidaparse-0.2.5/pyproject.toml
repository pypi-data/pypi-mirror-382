[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "alidaparse"
version = "0.2.5"
description = "A parsing module for ALIDA's services"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "gdown>=5.2.0",
    "kafka-python>=2.2.15",
    "minio>=7.2.16",
    "pytest>=8.4.2",
]

[tool.bumpversion]
current_version = "0.1.1"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]

# Global defaults (safe to keep)
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false

# VCS behavior — set these to true if you want auto-commit & tag
commit = false
message = "Bump version: {current_version} → {new_version}"
tag = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
sign_tags = false
allow_dirty = false

# === Tell bump-my-version to edit pyproject.toml ===
# Safer: match the exact `version = "<x.y.z>"` line
[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'


[tool.pytest.ini_options]
testpaths  = ["tests"]
pythonpath = ["src"]
