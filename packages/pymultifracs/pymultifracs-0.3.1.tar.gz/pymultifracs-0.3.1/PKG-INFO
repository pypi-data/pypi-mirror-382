Metadata-Version: 2.4
Name: pymultifracs
Version: 0.3.1
Summary: Implements wavelet based multifractal analysis of 1d signals.
Author: Merlin Dumeur, Omar Darwiche Domingues, Roberto Fabio Leonarduzzi
License-Expression: MIT
Project-URL: Documentation, https://www.neurospin.fr/pymultifracs/
Project-URL: Source, https://github.com/neurospin/pymultifracs
Project-URL: Tracker, https://github.com/neurospin/pymultifracs/issues/
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development
Classifier: Topic :: Scientific/Engineering
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: scipy
Requires-Dist: pywavelets
Requires-Dist: seaborn
Requires-Dist: xarray
Provides-Extra: bootstrap
Requires-Dist: recombinator; extra == "bootstrap"
Provides-Extra: robust
Requires-Dist: statsmodels; extra == "robust"
Requires-Dist: ruptures; extra == "robust"
Requires-Dist: numba; extra == "robust"
Requires-Dist: tqdm; extra == "robust"
Provides-Extra: full
Requires-Dist: pymultifracs[bootstrap,robust]; extra == "full"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-xdist; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Requires-Dist: statsmodels; extra == "test"
Requires-Dist: recombinator; extra == "test"
Requires-Dist: joblib; extra == "test"
Provides-Extra: doc
Requires-Dist: sphinx; extra == "doc"
Requires-Dist: numpydoc; extra == "doc"
Requires-Dist: pydata-sphinx-theme; extra == "doc"
Requires-Dist: sphinx-gallery; extra == "doc"
Requires-Dist: joblib; extra == "doc"
Requires-Dist: pooch; extra == "doc"
Requires-Dist: myst-parser; extra == "doc"
Provides-Extra: dev
Requires-Dist: pymultifracs[bootstrap,doc,robust,test]; extra == "dev"
Dynamic: license-file

.. -*- mode: rst -*-

|Python|_ |Doc|_ |Codecov|_ |Binder|_

.. |Python| image:: https://img.shields.io/badge/python-3.10%20%7C%203.11%20%7C%203.12%20%7C%203.13-brightgreen
.. _Python: https://img.shields.io/badge/python-3.10%20%7C%203.11%20%7C%203.12%20%7C%203.13-brightgreen

.. |Codecov| image:: https://codecov.io/gh/neurospin/pymultifracs/branch/master/graph/badge.svg
.. _Codecov: https://codecov.io/gh/neurospin/pymultifracs

.. |Binder| image:: https://mybinder.org/badge_logo.svg
.. _Binder: https://mybinder.org/v2/gh/neurospin/pymultifracs/master

.. |Doc| image:: https://img.shields.io/badge/docs-online-brightgreen
.. _Doc:  https://neurospin.github.io/pymultifracs/


Introduction
============

The PyMultiFracs package implements wavelet-based multifractal analysis of 1D signals.

Implemented features:

* Computation of (1D) multiresolution quantities: wavelet coefficients, wavelet-leaders and p-leaders.
* Computation of structure functions, cumulants and log-cumulants.
* Estimation of the multifractal spectrum.
* Bivariate multifractal analysis.
* Bootstrap-derived confidence intervals and automated scaling range selection.
* Outlier detection.

The initial implementation of the code in this package was based on the Wavelet p-Leader and Bootstrap based MultiFractal analysis (PLBMF) `Matlab toolbox <http://www.ens-lyon.fr/PHYSIQUE/Equipe3/MultiFracs/software.html>`_ written by Patrice Abry, Herwig Wendt and colleagues. For a thorough introduction to multifractal analysis, you may access H. Wendt's PhD thesis available in `his website <https://www.irit.fr/~Herwig.Wendt/data/ThesisWendt.pdf>`_.

To get started, please look at our `documentation <user_guide/index>`.

Installation
------------

PyMultiFracs may be installed using pip:

.. code:: shell

    pip install pymultifracs

For a complete installation guide, please check `documentation <user_guide/installation>`.
