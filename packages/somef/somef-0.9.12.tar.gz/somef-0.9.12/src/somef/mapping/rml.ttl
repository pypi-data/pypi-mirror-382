
@prefix sd: <https://w3id.org/okn/o/sd#>.
@prefix schema: <https://schema.org/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix schema: <http://schema.org/>.
@prefix formats: <http://www.w3.org/ns/formats/>.
@prefix comp: <http://semweb.mmlab.be/ns/rml-compression#>.
@prefix void: <http://rdfs.org/ns/void#>.
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#>.
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#>.
@prefix kg4di: <https://w3id.org/kg4di/definedBy>.
@base <http://example.com/ns#>.

<Software_0> a rr:TriplesMap;
	rml:logicalSource [
  		a rml:LogicalSource;
  		rml:source [
			a sd:DatasetSpecification;
			sd:name "data_complete";
			sd:hasDataTransformation [
				sd:hasSourceCode [
					sd:programmingLanguage "Python3.9";
				];
			];
		];;
  		rml:referenceFormulation rml:Dictionary;
  		rml:iterator "$";
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "https://w3id.org/okn/i/Software/{name}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant sd:Software;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:description;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "description";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:name;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "full_name";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:citation;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "citation";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:issueTracker;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "issue_tracker";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasAcknowledgments;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "acknowledgement";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasInstallationInstructions;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "installation";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasExecutionCommand;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "invocation";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasUsageNotes;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "usage";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasDownloadUrl;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "download_url";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:softwareRequirements;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "requirements";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:contactDetails;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "contact";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:contributionInstructions;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "contributing_guidelines";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:supportDetails;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "support";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:keywords;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "keywords";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasFAQ;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "faq";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasExecutableNotebook;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "executable_example";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasCodeOfConduct;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "code_of_conduct";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:dateCreated;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "date_created";
			rr:datatype xsd:dateTime
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:dateModified;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "date_updated";
			rr:datatype xsd:dateTime
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasDocumentation;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "documentation";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasBuildFile;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "has_build_file";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:identifier;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "identifier";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:issueTracker;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "issue_tracker";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasLongName;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "full_title";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:readme;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "readme_url";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:contributingGuidelines;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "contributing_guidelines";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasExample;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "executable_example";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasSupportScriptLocation;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "has_script_file";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasExecutableInstructions;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "invocation";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasExecutableInstructions;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "run";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:referencePublication;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "citation";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant schema:license;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "https://w3id.org/okn/i/License/{name}";
			rr:termType rr:IRI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasSourceCode;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "https://w3id.org/okn/i/SoftwareSource/{name}";
			rr:termType rr:IRI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:author;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "https://w3id.org/okn/i/Agent/{owner.name}";
			rr:termType rr:IRI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:hasVersion;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "https://w3id.org/okn/i/Release/{releases_ids}";
			rr:termType rr:IRI
		];
	].

<License_0> a rr:TriplesMap;
	rml:logicalSource [
  		a rml:LogicalSource;
  		rml:source [
			a sd:DatasetSpecification;
			sd:name "data_complete";
			sd:hasDataTransformation [
				sd:hasSourceCode [
					sd:programmingLanguage "Python3.9";
				];
			];
		];
  		rml:referenceFormulation rml:Dictionary;
  		rml:iterator "$.license";
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "https://w3id.org/okn/i/License/{name}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant schema:CreativeWork;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:name;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "name";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:url;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "url";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant owl:sameAs;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "https://spdx.org/licenses/{license.spdx_id}";
			rr:termType rr:IRI
		];
	].

<Agent_0> a rr:TriplesMap;
	rml:logicalSource [
  		rml:source [
			a sd:DatasetSpecification;
			sd:name "data_complete";
			sd:hasDataTransformation [
				sd:hasSourceCode [
					sd:programmingLanguage "Python3.9";
				];
			];
		];
		rml:referenceFormulation rml:Dictionary;
  		rml:iterator "$.owner";
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "https://w3id.org/okn/i/Agent/{owner.value}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "https://schema.org/{owner.type}";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant schema:name;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "value";
		];
	].

<Agent_release_0> a rr:TriplesMap;
	rml:logicalSource [
  		a rml:LogicalSource;
  		rml:source [
			a sd:DatasetSpecification;
			sd:name "data_complete";
			sd:hasDataTransformation [
				sd:hasSourceCode [
					sd:programmingLanguage "Python3.9";
				];
			];
		];
  		rml:referenceFormulation rml:Dictionary;
  		rml:iterator "$.releases[*]";
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "https://w3id.org/okn/i/Agent/{author.name}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant schema:Person;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant schema:name;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "author.name";
		];
	].

<SourceCode_0> a rr:TriplesMap;
	rml:logicalSource [
  		a rml:LogicalSource;
  		rml:source [
			a sd:DatasetSpecification;
			sd:name "data_complete";
			sd:hasDataTransformation [
				sd:hasSourceCode [
					sd:programmingLanguage "Python3.9";
				];
			];
		];
  		rml:referenceFormulation rml:Dictionary;
  		rml:iterator "$";
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "https://w3id.org/okn/i/SoftwareSource/{name}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant schema:SoftwareSourceCode;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:name;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "full_name";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:codeRepository;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "code_repository";
			rr:datatype xsd:anyURI
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant sd:programmingLanguage;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "programming_languages";
		];
	].

rml:Dictionary a rml:ReferenceFormulation;
	kg4di:definedBy "Python".