Metadata-Version: 2.4
Name: enaml-extensions
Version: 0.4.4
Summary: Extra widgets and extensions for building UIs with Enaml
Home-page: http://github.com/gabrielcnr/enaml-extensions
Author: Gabriel Reis
Author-email: gabrielcnr@gmail.com
License: LGPL
Keywords: enaml qt widgets extras extensions table qt-table ui gui
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Desktop Environment :: Window Managers
Classifier: Topic :: Software Development :: User Interfaces
Classifier: Topic :: Software Development :: Widget Sets
Requires: enaml
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: AUTHORS
Requires-Dist: enaml
Requires-Dist: QScintilla
Requires-Dist: pip
Requires-Dist: qtpy
Requires-Dist: numpy
Provides-Extra: testing
Requires-Dist: pytest; extra == "testing"
Requires-Dist: pytest-mock; extra == "testing"
Requires-Dist: pytest-qt; extra == "testing"
Requires-Dist: pandas; extra == "testing"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: provides-extra
Dynamic: requires
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# enaml-extensions
Extra widgets for Enaml

The flagship widget here is the `Table` widget which aims for providing
an easy way to display tabular data in a grid in the UI. It was designed
to support working with list of dicts, list of namedtuples, list of tuples,
or even pandas DataFrame.

An example:

```python
from enaml.widgets.api import *
from enamlext.widgets import Table, Column

enamldef Main(Window):
    Container:
        Table:
            items = [{'name': 'Joe', 'age': 30},
                     {'name': 'Jane', 'age': 31}]
            columns = [
                Column('name'),
                Column('age'),
            ]
```
