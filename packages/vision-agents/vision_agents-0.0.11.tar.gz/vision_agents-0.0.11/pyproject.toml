[build-system]
requires = ["hatchling", "hatch-vcs", "setuptools-scm"]
build-backend = "hatchling.build"

[project]
name = "vision-agents"
description = "Open video agents. Build low latency video and voice agents on any realtime edge network."
readme = "README.md"
keywords = ["video AI", "AI", "voice AI", "video agents", "voice agents", "agents", "AI"]
dynamic = ["version"]

requires-python = ">=3.10"
dependencies = [
    "getstream[webrtc,telemetry]>=2.5.0",
    "python-dotenv>=1.1.1",
    "pillow>=11.3.0",
    "aiortc>=1.13.0",
    "websockets>=12.0",
    "numpy>=1.24.0",
    "ultralytics>=8.3.0",
    "opencv-python>=4.8.0",
    "click>=8.0.0",
    "stratz>=1.0.0",
    "daily-python>=0.19.8",
    "mcp>=1.14.0",
    "vision-agents-plugins-anthropic",
    "vision-agents-plugins-cartesia",
    "vision-agents-plugins-deepgram",
    "vision-agents-plugins-elevenlabs",
    "vision-agents-plugins-fal",
    "vision-agents-plugins-gemini",
    "vision-agents-plugins-kokoro",
    "vision-agents-plugins-moonshine",
    "vision-agents-plugins-openai",
    "vision-agents-plugins-silero",
    "vision-agents-plugins-xai"
]

[project.urls]
Documentation = "https://getstream.io/video/docs/python-ai/"
Website = "https://getstream.io/video/voice-agents/"
Source = "https://github.com/getstream/agents"

[project.optional-dependencies]
dev = ["pytest", "mypy", "ruff"]
openai = ["getstream-plugins-openai>=0.1.0", "openai==1.108.1"]
deepgram = ["getstream-plugins-deepgram>=0.1.0"]
elevenlabs = ["getstream-plugins-elevenlabs>=0.1.0"]
fal = ["fal-client>=0.6.1"]
gemini = ["google-genai>=0.3.0"]
all-plugins = [
  "vision-agents-plugins-openai>=0.1.0",
  "vision-agents-plugins-deepgram>=0.1.0",
  "vision-agents-plugins-elevenlabs>=0.1.0",
  "fal-client>=0.6.1",
  "google-genai>=0.3.0",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "vcs"
raw-options = { root = "..", search_parent_directories = true, fallback_version = "0.0.0" }

[tool.hatch.build.targets.wheel]
packages = ["vision_agents"]

[tool.hatch.build.targets.sdist]
include = ["vision_agents"]

#[tool.uv.sources]
#krisp-audio = [
#    { path = "./vision_agents/core/turn_detection/krisp/krisp_audio-1.4.0-cp313-cp313-macosx_12_0_arm64.whl", marker = "sys_platform == 'darwin' and platform_machine == 'aarch64'" },
#    { path = "./vision_agents/core/turn_detection/krisp/krisp_audio-1.4.0-cp313-cp313-linux_aarch64.whl", marker = "sys_platform == 'linux' and platform_machine == 'aarch64'" },
#    { path = "./vision_agents/core/turn_detection/krisp/krisp_audio-1.4.0-cp313-cp313-linux_x86_64.whl", marker = "sys_platform == 'linux' and platform_machine == 'x86_64'" },
#    { path = "./vision_agents/core/turn_detection/krisp/krisp_audio-1.4.0-cp313-cp313-win_amd64.whl", marker = "sys_platform == 'win32'" }
#]
# for local development
# getstream = { path = "../../stream-py/", editable = true }
