"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ErrorCode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ErrorCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ErrorCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ERROR_CODE_UNSPECIFIED: _ErrorCode.ValueType  # 0
    """Unknown or unspecified error"""
    ERROR_CODE_IMAGE_TOO_LARGE: _ErrorCode.ValueType  # 2
    """Image is too large to process"""
    ERROR_CODE_MODEL_ERROR: _ErrorCode.ValueType  # 3
    """Opaque error from the classifier"""
    ERROR_CODE_AFFILIATE_NOT_PERMITTED: _ErrorCode.ValueType  # 4
    """Attempt to send data for an affiliate which is not granted to the current
    client.
    """
    ERROR_CODE_DEPLOYMENT_ID_INVALID: _ErrorCode.ValueType  # 5
    """The format of the deployment ID is not valid. Deployment IDs must be
    non-empty strings of up to 64 characters.
    """
    ERROR_CODE_CORRELATION_ID_INVALID: _ErrorCode.ValueType  # 6
    """The format of the correlation ID is not valid. Correlation IDs must be
    non-empty strings of up to 64 characters.
    """

class ErrorCode(_ErrorCode, metaclass=_ErrorCodeEnumTypeWrapper):
    """Enumeration of possible classification error codes."""

ERROR_CODE_UNSPECIFIED: ErrorCode.ValueType  # 0
"""Unknown or unspecified error"""
ERROR_CODE_IMAGE_TOO_LARGE: ErrorCode.ValueType  # 2
"""Image is too large to process"""
ERROR_CODE_MODEL_ERROR: ErrorCode.ValueType  # 3
"""Opaque error from the classifier"""
ERROR_CODE_AFFILIATE_NOT_PERMITTED: ErrorCode.ValueType  # 4
"""Attempt to send data for an affiliate which is not granted to the current
client.
"""
ERROR_CODE_DEPLOYMENT_ID_INVALID: ErrorCode.ValueType  # 5
"""The format of the deployment ID is not valid. Deployment IDs must be
non-empty strings of up to 64 characters.
"""
ERROR_CODE_CORRELATION_ID_INVALID: ErrorCode.ValueType  # 6
"""The format of the correlation ID is not valid. Correlation IDs must be
non-empty strings of up to 64 characters.
"""
global___ErrorCode = ErrorCode

class _RequestEncoding:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _RequestEncodingEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RequestEncoding.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    REQUEST_ENCODING_UNSPECIFIED: _RequestEncoding.ValueType  # 0
    """Unspecified encoding. Assumed to be uncompressed."""
    REQUEST_ENCODING_UNCOMPRESSED: _RequestEncoding.ValueType  # 1
    """Uncompressed raw image data (e.g., raw RGB pixels, BMP, etc.)"""
    REQUEST_ENCODING_BROTLI: _RequestEncoding.ValueType  # 2
    """Brotli-compressed image data for reduced bandwidth usage
    Server will decompress using Brotli algorithm before processing
    """

class RequestEncoding(_RequestEncoding, metaclass=_RequestEncodingEnumTypeWrapper):
    """Enumeration of supported image data encoding formats.
    Determines how the server should interpret the image data bytes.
    """

REQUEST_ENCODING_UNSPECIFIED: RequestEncoding.ValueType  # 0
"""Unspecified encoding. Assumed to be uncompressed."""
REQUEST_ENCODING_UNCOMPRESSED: RequestEncoding.ValueType  # 1
"""Uncompressed raw image data (e.g., raw RGB pixels, BMP, etc.)"""
REQUEST_ENCODING_BROTLI: RequestEncoding.ValueType  # 2
"""Brotli-compressed image data for reduced bandwidth usage
Server will decompress using Brotli algorithm before processing
"""
global___RequestEncoding = RequestEncoding

class _ImageFormat:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ImageFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ImageFormat.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    IMAGE_FORMAT_UNSPECIFIED: _ImageFormat.ValueType  # 0
    IMAGE_FORMAT_GIF: _ImageFormat.ValueType  # 1
    IMAGE_FORMAT_JPEG: _ImageFormat.ValueType  # 2
    """Covers .jpeg, .jpg, .jpe extensions"""
    IMAGE_FORMAT_BMP: _ImageFormat.ValueType  # 3
    IMAGE_FORMAT_DIB: _ImageFormat.ValueType  # 4
    IMAGE_FORMAT_PNG: _ImageFormat.ValueType  # 5
    IMAGE_FORMAT_WEBP: _ImageFormat.ValueType  # 6
    IMAGE_FORMAT_PBM: _ImageFormat.ValueType  # 7
    IMAGE_FORMAT_PGM: _ImageFormat.ValueType  # 8
    IMAGE_FORMAT_PPM: _ImageFormat.ValueType  # 9
    IMAGE_FORMAT_PXM: _ImageFormat.ValueType  # 10
    IMAGE_FORMAT_PNM: _ImageFormat.ValueType  # 11
    IMAGE_FORMAT_PFM: _ImageFormat.ValueType  # 12
    IMAGE_FORMAT_SR: _ImageFormat.ValueType  # 13
    IMAGE_FORMAT_RAS: _ImageFormat.ValueType  # 14
    IMAGE_FORMAT_TIFF: _ImageFormat.ValueType  # 15
    """Covers .tiff, .tif extensions"""
    IMAGE_FORMAT_HDR: _ImageFormat.ValueType  # 16
    IMAGE_FORMAT_PIC: _ImageFormat.ValueType  # 17
    IMAGE_FORMAT_RAW_UINT8: _ImageFormat.ValueType  # 18
    """Raw unsigned 8-bit image data (RGB, C order array)"""

class ImageFormat(_ImageFormat, metaclass=_ImageFormatEnumTypeWrapper):
    """Enumeration of supported image file formats.
    Specifies the image file format structure for proper parsing.
    """

IMAGE_FORMAT_UNSPECIFIED: ImageFormat.ValueType  # 0
IMAGE_FORMAT_GIF: ImageFormat.ValueType  # 1
IMAGE_FORMAT_JPEG: ImageFormat.ValueType  # 2
"""Covers .jpeg, .jpg, .jpe extensions"""
IMAGE_FORMAT_BMP: ImageFormat.ValueType  # 3
IMAGE_FORMAT_DIB: ImageFormat.ValueType  # 4
IMAGE_FORMAT_PNG: ImageFormat.ValueType  # 5
IMAGE_FORMAT_WEBP: ImageFormat.ValueType  # 6
IMAGE_FORMAT_PBM: ImageFormat.ValueType  # 7
IMAGE_FORMAT_PGM: ImageFormat.ValueType  # 8
IMAGE_FORMAT_PPM: ImageFormat.ValueType  # 9
IMAGE_FORMAT_PXM: ImageFormat.ValueType  # 10
IMAGE_FORMAT_PNM: ImageFormat.ValueType  # 11
IMAGE_FORMAT_PFM: ImageFormat.ValueType  # 12
IMAGE_FORMAT_SR: ImageFormat.ValueType  # 13
IMAGE_FORMAT_RAS: ImageFormat.ValueType  # 14
IMAGE_FORMAT_TIFF: ImageFormat.ValueType  # 15
"""Covers .tiff, .tif extensions"""
IMAGE_FORMAT_HDR: ImageFormat.ValueType  # 16
IMAGE_FORMAT_PIC: ImageFormat.ValueType  # 17
IMAGE_FORMAT_RAW_UINT8: ImageFormat.ValueType  # 18
"""Raw unsigned 8-bit image data (RGB, C order array)"""
global___ImageFormat = ImageFormat

class _HashType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _HashTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_HashType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    HASH_TYPE_UNKNOWN: _HashType.ValueType  # 0
    HASH_TYPE_MD5: _HashType.ValueType  # 1
    HASH_TYPE_SHA1: _HashType.ValueType  # 2

class HashType(_HashType, metaclass=_HashTypeEnumTypeWrapper):
    """Enumeration of hash types supported for image hashing."""

HASH_TYPE_UNKNOWN: HashType.ValueType  # 0
HASH_TYPE_MD5: HashType.ValueType  # 1
HASH_TYPE_SHA1: HashType.ValueType  # 2
global___HashType = HashType

@typing.final
class ListDeploymentsResponse(google.protobuf.message.Message):
    """Response message for ListDeployments RPC
    Contains the list of active deployments and their details.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DEPLOYMENTS_FIELD_NUMBER: builtins.int
    @property
    def deployments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Deployment]:
        """List of active deployments with their backlog information."""

    def __init__(
        self,
        *,
        deployments: collections.abc.Iterable[global___Deployment] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["deployments", b"deployments"]) -> None: ...

global___ListDeploymentsResponse = ListDeploymentsResponse

@typing.final
class Deployment(google.protobuf.message.Message):
    """A single active deployment part of a `ListDeployments` response"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DEPLOYMENT_ID_FIELD_NUMBER: builtins.int
    BACKLOG_FIELD_NUMBER: builtins.int
    deployment_id: builtins.str
    """active deployment identifier"""
    backlog: builtins.int
    """Backlog of classification responses in this deployment"""
    def __init__(
        self,
        *,
        deployment_id: builtins.str = ...,
        backlog: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["backlog", b"backlog", "deployment_id", b"deployment_id"]) -> None: ...

global___Deployment = Deployment

@typing.final
class ClassifyRequest(google.protobuf.message.Message):
    """The request message containing the image data to classify.
    Each request represents a batch of images that should be processed within
    the same deployment context.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DEPLOYMENT_ID_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    deployment_id: builtins.str
    """Client's unique identifier for this deployment. Responses returned will be
    sent to a client with a matching deployment_id.
    """
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ClassificationInput]:
        """Array of images to be classified in this request batch
        Allows sending multiple images in a single request for efficiency.
        """

    def __init__(
        self,
        *,
        deployment_id: builtins.str = ...,
        inputs: collections.abc.Iterable[global___ClassificationInput] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["deployment_id", b"deployment_id", "inputs", b"inputs"]) -> None: ...

global___ClassifyRequest = ClassifyRequest

@typing.final
class ClassificationInput(google.protobuf.message.Message):
    """A single image within a classification request batch.
    Contains all necessary metadata and data for classifying one image.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AFFILIATE_FIELD_NUMBER: builtins.int
    CORRELATION_ID_FIELD_NUMBER: builtins.int
    ENCODING_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    FORMAT_FIELD_NUMBER: builtins.int
    HASHES_FIELD_NUMBER: builtins.int
    affiliate: builtins.str
    """The affiliate or source system that provided this image
    Used for tracking, analytics, and routing purposes.
    """
    correlation_id: builtins.str
    """Unique identifier for correlating this input with its response
    Must be unique within the deployment to properly match responses
    """
    encoding: global___RequestEncoding.ValueType
    """Specifies the encoding/compression format of the image data
    Allows the server to properly decode the image before classification
    """
    data: builtins.bytes
    """The raw image data bytes in the format specified by encoding
    Can be compressed or uncompressed based on the encoding field
    """
    format: global___ImageFormat.ValueType
    """The image file format of the data bytes"""
    @property
    def hashes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ImageHash]:
        """Hashes of the image data, can be multiple depending on image processing
        (e.g. of raw bytes, jpeg image, etc.) but must be for a single image.
        """

    def __init__(
        self,
        *,
        affiliate: builtins.str = ...,
        correlation_id: builtins.str = ...,
        encoding: global___RequestEncoding.ValueType = ...,
        data: builtins.bytes = ...,
        format: global___ImageFormat.ValueType = ...,
        hashes: collections.abc.Iterable[global___ImageHash] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["affiliate", b"affiliate", "correlation_id", b"correlation_id", "data", b"data", "encoding", b"encoding", "format", b"format", "hashes", b"hashes"]) -> None: ...

global___ClassificationInput = ClassificationInput

@typing.final
class ClassifyResponse(google.protobuf.message.Message):
    """The response message containing the classification results.
    Sent back to clients for each processed batch, containing either
    a global error or individual results for each image in the batch.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GLOBAL_ERROR_FIELD_NUMBER: builtins.int
    OUTPUTS_FIELD_NUMBER: builtins.int
    @property
    def global_error(self) -> global___ClassificationError:
        """Global error affecting the entire batch/request
        If present, indicates that the entire request failed and no individual
        image results will be provided
        """

    @property
    def outputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ClassificationOutput]:
        """Array of classification results, one for each input image
        Will be empty if global_error is present
        """

    def __init__(
        self,
        *,
        global_error: global___ClassificationError | None = ...,
        outputs: collections.abc.Iterable[global___ClassificationOutput] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["global_error", b"global_error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["global_error", b"global_error", "outputs", b"outputs"]) -> None: ...

global___ClassifyResponse = ClassifyResponse

@typing.final
class ClassificationOutput(google.protobuf.message.Message):
    """Individual classification result for a single image.
    Contains the correlation ID and classification results for one image.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CORRELATION_ID_FIELD_NUMBER: builtins.int
    CLASSIFICATIONS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    correlation_id: builtins.str
    """Matches the correlationId from the corresponding ClassificationInput
    Allows clients to match responses with their original requests
    """
    @property
    def classifications(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Classification]:
        """Array of all classifications detected for this image
        Multiple classifications may be returned with different confidence levels
        """

    @property
    def error(self) -> global___ClassificationError:
        """Error information if this specific image classification failed
        If present, indicates that this particular image could not be processed
        """

    def __init__(
        self,
        *,
        correlation_id: builtins.str = ...,
        classifications: collections.abc.Iterable[global___Classification] | None = ...,
        error: global___ClassificationError | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["error", b"error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["classifications", b"classifications", "correlation_id", b"correlation_id", "error", b"error"]) -> None: ...

global___ClassificationOutput = ClassificationOutput

@typing.final
class Classification(google.protobuf.message.Message):
    """A single classification result for an image.
    Represents one detected category with its confidence score.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LABEL_FIELD_NUMBER: builtins.int
    WEIGHT_FIELD_NUMBER: builtins.int
    label: builtins.str
    """Human-readable label describing what was classified
    Examples: "CatA", "CatB", "Indicative", "Distraction", etc.
    """
    weight: builtins.float
    """Confidence score between 0.0 and 1.0 indicating certainty
    Higher values indicate greater confidence in the classification
    """
    def __init__(
        self,
        *,
        label: builtins.str = ...,
        weight: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["label", b"label", "weight", b"weight"]) -> None: ...

global___Classification = Classification

@typing.final
class ClassificationError(google.protobuf.message.Message):
    """Error information for failed classification attempts.
    Provides details about why a classification could not be completed.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    code: global___ErrorCode.ValueType
    """Error code indicating the type of failure"""
    message: builtins.str
    """Human-readable error message providing details about the failure"""
    details: builtins.str
    """Additional context or details about the error (optional)"""
    def __init__(
        self,
        *,
        code: global___ErrorCode.ValueType = ...,
        message: builtins.str = ...,
        details: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "details", b"details", "message", b"message"]) -> None: ...

global___ClassificationError = ClassificationError

@typing.final
class ImageHash(google.protobuf.message.Message):
    """Hash information for an image."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    value: builtins.str
    """The hash value of the image data"""
    type: global___HashType.ValueType
    """The type of hash algorithm used to generate the hash value"""
    def __init__(
        self,
        *,
        value: builtins.str = ...,
        type: global___HashType.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["type", b"type", "value", b"value"]) -> None: ...

global___ImageHash = ImageHash
