Metadata-Version: 2.4
Name: upstox-auto-login
Version: 0.1.5
Summary: Automated Upstox login using Selenium and TOTP
Author-email: Uttam <uttamraj5050@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/uttam04/upstox-auto-login
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: selenium>=4.0
Requires-Dist: pyotp
Requires-Dist: requests

# üöÄ Upstox Auto Login

A **Python package** to **automate the Upstox API v2 login flow** using **Selenium** and **TOTP**, handling the complete **OAuth2** process to retrieve an `access_token`.

---

## ‚ö†Ô∏è Security Disclaimer

This package handles **sensitive credentials** (API keys, PIN, TOTP secret).

> ‚ùó **Storing credentials as plaintext is a major security risk.**
> It is **highly recommended** to:

* Use **environment variables** or a **secret manager**.
* Avoid sharing your credentials in public repositories.
  This tool is intended for **personal use in secure environments only.**

---

## üß© How It Works

The tool:

1. Launches a **headless Chrome browser**.
2. Automates the login by entering your **User ID**, **TOTP**, and **PIN**.
3. Captures the **authorization code** after successful login.
4. Exchanges it for an **access_token** via the Upstox OAuth2 flow.
5. Closes the browser automatically.

You can then use the returned `access_token` in your Upstox API client.

---

## üõ†Ô∏è Prerequisites

Before using this package, make sure you have:

* üêç **Python 3.7+**
* üåê **Google Chrome** (latest version)
* üîë An **Upstox Developer App** with:

  * `API_KEY`
  * `SECRET_KEY`
  * Configured `redirect_url`

---

## üì¶ Installation

```bash
pip install upstox-auto-login
```

---

## ‚öôÔ∏è Usage

The main function provided is `auto_login()` ‚Äî it automates the entire login flow.

### **Function Parameters**

| Parameter      | Type  | Description                                                    |
| -------------- | ----- | -------------------------------------------------------------- |
| `API_KEY`      | `str` | Your Upstox API Key                                            |
| `SECRET_KEY`   | `str` | Your Upstox Secret Key                                         |
| `USER_ID`      | `str` | Your 10-digit Upstox mobile number                             |
| `PIN`          | `str` | Your 6-digit Upstox trading PIN                                |
| `TOTP_SECRET`  | `str` | Your TOTP secret key from the authenticator app                |
| `redirect_url` | `str` | *(Optional)* Redirect URI (default: `https://127.0.0.1:5000/`) |

---

## üß† Example

```python
from upstox_auto_login import auto_login
import os
import logging

# ‚úÖ Recommended: Load credentials from environment variables
# API_KEY = os.getenv("UPSTOX_API_KEY")

# Configure logging to track the login process
logging.basicConfig(level=logging.INFO)

try:
    # Call the auto_login function
    access_token = auto_login(
        API_KEY="your_api_key",
        SECRET_KEY="your_secret_key",
        USER_ID="your_10_digit_mobile_number",
        PIN="your_6_digit_pin",
        TOTP_SECRET="your_totp_secret_key"
    )

    if access_token:
        print(f"Success! Access Token: {access_token}")
    else:
        print("Login failed. Check logs for details.")

except Exception as e:
    print(f"An unexpected error occurred: {e}")
```

---

## Error Handling

The function is designed to handle failures gracefully.

* Logs detailed errors during execution.
* Returns `None` if the login or token exchange fails.

---


## Contributing

Contributions are welcome!
If you‚Äôd like to:

* Report a bug üêõ
* Request a feature üí°
* Submit a pull request üß©

Please open an issue or PR on the **GitHub repository**.

---

##License

This project is licensed under the **MIT License**.
See the [LICENSE](LICENSE) file for more details.

---

## üßë‚Äçüíª Author

**Uttam Kumar**
Python Developer ‚Ä¢ Automation & Trading Systems

---

### ‚≠ê If you find this project useful, don‚Äôt forget to star the repo!
