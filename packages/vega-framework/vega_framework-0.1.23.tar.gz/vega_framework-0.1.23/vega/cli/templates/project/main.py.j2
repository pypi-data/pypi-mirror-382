"""Main entry point for {{ project_name }}"""
{% if template == "fastapi" -%}
import click
import config  # noqa: F401 - Import to initialize DI container


@click.group()
def cli():
    """Vega Framework Application - CLI and Web"""
    pass


@cli.command()
@click.option('--host', default='0.0.0.0', help='Host to bind')
@click.option('--port', default=8000, help='Port to bind')
@click.option('--reload', is_flag=True, help='Enable auto-reload')
def web(host: str, port: int, reload: bool):
    """Start FastAPI web server"""
    import uvicorn
    from presentation.web.main import app

    click.echo(f"Starting web server on http://{host}:{port}")
    uvicorn.run(
        app,
        host=host,
        port=port,
        reload=reload,
    )


@cli.command()
def hello():
    """Example CLI command"""
    click.echo("Hello from Vega Framework!")
    click.echo("Add your CLI commands in presentation/cli/commands/")


# Auto-register custom commands from presentation/cli/commands/
try:
    from presentation.cli.commands import get_commands
    for cmd in get_commands():
        cli.add_command(cmd)
except ImportError:
    # cli/commands/ not created yet
    pass


if __name__ == "__main__":
    cli()
{% else -%}
import asyncio
import click
import config  # noqa: F401 - Import to initialize DI container

# Import your use cases here
# from domain.interactors.create_user import CreateUser


@click.group()
def cli():
    """Vega Framework CLI Application"""
    pass


@cli.command()
def hello():
    """Example CLI command"""
    click.echo("Hello from Vega Framework!")
    click.echo("Add your CLI commands in presentation/cli/commands/")


@cli.command()
@click.option('--name', default='World', help='Name to greet')
def greet(name: str):
    """Example command with parameter"""
    click.echo(f"Hello, {name}!")


# Uncomment this block if you enable FastAPI support
# @cli.command()
# @click.option('--host', default='0.0.0.0', help='Host to bind')
# @click.option('--port', default=8000, help='Port to bind')
# @click.option('--reload', is_flag=True, help='Enable auto-reload')
# def web(host: str, port: int, reload: bool):
#     """Start FastAPI web server"""
#     import uvicorn
#     from presentation.web.main import app
#
#     click.echo(f"Starting web server on http://{host}:{port}")
#     uvicorn.run(
#         app,
#         host=host,
#         port=port,
#         reload=reload,
#     )


# Auto-register custom commands from presentation/cli/commands/
try:
    from presentation.cli.commands import get_commands
    for cmd in get_commands():
        cli.add_command(cmd)
except ImportError:
    # cli/commands/ not created yet
    pass


if __name__ == "__main__":
    cli()
{% endif -%}
