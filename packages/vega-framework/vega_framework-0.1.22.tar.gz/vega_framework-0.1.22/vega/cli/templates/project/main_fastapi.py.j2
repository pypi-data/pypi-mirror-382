"""Main entry point for {{ project_name }}"""
import click
from vega.cli.utils import async_command
import config  # noqa: F401 - Import to initialize DI container

# Import your use cases here
# from domain.interactors.create_user import CreateUser


@click.group()
def cli():
    """Vega Framework Application - CLI and Web"""
    pass


@cli.command()
@click.option('--host', default='0.0.0.0', help='Host to bind')
@click.option('--port', default=8000, help='Port to bind')
@click.option('--reload', is_flag=True, help='Enable auto-reload')
def web(host: str, port: int, reload: bool):
    """Start FastAPI web server"""
    import uvicorn
    from presentation.web.main import app

    click.echo(f"Starting web server on http://{host}:{port}")
    uvicorn.run(
        app,
        host=host,
        port=port,
        reload=reload,
    )


@cli.command()
def hello():
    """Example CLI command"""
    click.echo("Hello from Vega Framework!")
    click.echo("Add your CLI commands in presentation/cli/commands/")


@cli.command()
@click.option('--name', required=True, help='User name')
@click.option('--email', required=True, help='User email')
@async_command
async def create_user(name: str, email: str):
    """
    Example async CLI command that uses an interactor.

    This demonstrates how to use async/await with Click commands
    to execute interactors and other async operations.

    Usage:
        python main.py create-user --name="John Doe" --email="john@example.com"
    """
    # Import your interactor
    # from domain.interactors.create_user import CreateUser
    # user = await CreateUser(name=name, email=email)
    # click.echo(f"Created user: {user.id} - {user.name}")

    # Placeholder implementation
    click.echo(f"Creating user: {name} ({email})")
    click.echo("Note: Replace this with your actual CreateUser interactor")


# Auto-register custom commands from presentation/cli/commands/
try:
    from presentation.cli.commands import get_commands
    for cmd in get_commands():
        cli.add_command(cmd)
except ImportError:
    # cli/commands/ not created yet
    pass


if __name__ == "__main__":
    cli()
