# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import element_twins_pb2 as element__twins__pb2


class ElementTwinsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
            "/orchestra.elements.twins.ElementTwinsService/Create",
            request_serializer=element__twins__pb2.CreateElementTwinRequest.SerializeToString,
            response_deserializer=element__twins__pb2.ElementTwin.FromString,
        )
        self.Get = channel.unary_unary(
            "/orchestra.elements.twins.ElementTwinsService/Get",
            request_serializer=element__twins__pb2.GetElementTwinRequest.SerializeToString,
            response_deserializer=element__twins__pb2.ElementTwin.FromString,
        )
        self.GetObservables = channel.unary_unary(
            "/orchestra.elements.twins.ElementTwinsService/GetObservables",
            request_serializer=element__twins__pb2.GetElementTwinObservablesRequest.SerializeToString,
            response_deserializer=element__twins__pb2.ElementTwinObservables.FromString,
        )
        self.Set = channel.unary_unary(
            "/orchestra.elements.twins.ElementTwinsService/Set",
            request_serializer=element__twins__pb2.SetElementTwinPropertiesRequest.SerializeToString,
            response_deserializer=element__twins__pb2.SetElementTwinPropertiesResponse.FromString,
        )
        self.SetObservables = channel.unary_unary(
            "/orchestra.elements.twins.ElementTwinsService/SetObservables",
            request_serializer=element__twins__pb2.SetElementTwinObservablesRequest.SerializeToString,
            response_deserializer=element__twins__pb2.SetElementTwinObservablesResponse.FromString,
        )
        self.RequestSet = channel.unary_unary(
            "/orchestra.elements.twins.ElementTwinsService/RequestSet",
            request_serializer=element__twins__pb2.RequestSetElementTwinPropertiesRequest.SerializeToString,
            response_deserializer=element__twins__pb2.RequestSetElementTwinPropertiesResponse.FromString,
        )
        self.ValidateTwinStateChange = channel.unary_unary(
            "/orchestra.elements.twins.ElementTwinsService/ValidateTwinStateChange",
            request_serializer=element__twins__pb2.ValidateTwinStateChangeRequest.SerializeToString,
            response_deserializer=element__twins__pb2.ValidateTwinStateChangeResponse.FromString,
        )
        self.Watch = channel.unary_stream(
            "/orchestra.elements.twins.ElementTwinsService/Watch",
            request_serializer=element__twins__pb2.WatchElementTwinRequest.SerializeToString,
            response_deserializer=element__twins__pb2.WatchElementTwinResponse.FromString,
        )


class ElementTwinsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetObservables(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SetObservables(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RequestSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ValidateTwinStateChange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Watch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ElementTwinsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Create": grpc.unary_unary_rpc_method_handler(
            servicer.Create,
            request_deserializer=element__twins__pb2.CreateElementTwinRequest.FromString,
            response_serializer=element__twins__pb2.ElementTwin.SerializeToString,
        ),
        "Get": grpc.unary_unary_rpc_method_handler(
            servicer.Get,
            request_deserializer=element__twins__pb2.GetElementTwinRequest.FromString,
            response_serializer=element__twins__pb2.ElementTwin.SerializeToString,
        ),
        "GetObservables": grpc.unary_unary_rpc_method_handler(
            servicer.GetObservables,
            request_deserializer=element__twins__pb2.GetElementTwinObservablesRequest.FromString,
            response_serializer=element__twins__pb2.ElementTwinObservables.SerializeToString,
        ),
        "Set": grpc.unary_unary_rpc_method_handler(
            servicer.Set,
            request_deserializer=element__twins__pb2.SetElementTwinPropertiesRequest.FromString,
            response_serializer=element__twins__pb2.SetElementTwinPropertiesResponse.SerializeToString,
        ),
        "SetObservables": grpc.unary_unary_rpc_method_handler(
            servicer.SetObservables,
            request_deserializer=element__twins__pb2.SetElementTwinObservablesRequest.FromString,
            response_serializer=element__twins__pb2.SetElementTwinObservablesResponse.SerializeToString,
        ),
        "RequestSet": grpc.unary_unary_rpc_method_handler(
            servicer.RequestSet,
            request_deserializer=element__twins__pb2.RequestSetElementTwinPropertiesRequest.FromString,
            response_serializer=element__twins__pb2.RequestSetElementTwinPropertiesResponse.SerializeToString,
        ),
        "ValidateTwinStateChange": grpc.unary_unary_rpc_method_handler(
            servicer.ValidateTwinStateChange,
            request_deserializer=element__twins__pb2.ValidateTwinStateChangeRequest.FromString,
            response_serializer=element__twins__pb2.ValidateTwinStateChangeResponse.SerializeToString,
        ),
        "Watch": grpc.unary_stream_rpc_method_handler(
            servicer.Watch,
            request_deserializer=element__twins__pb2.WatchElementTwinRequest.FromString,
            response_serializer=element__twins__pb2.WatchElementTwinResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "orchestra.elements.twins.ElementTwinsService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ElementTwinsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/orchestra.elements.twins.ElementTwinsService/Create",
            element__twins__pb2.CreateElementTwinRequest.SerializeToString,
            element__twins__pb2.ElementTwin.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Get(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/orchestra.elements.twins.ElementTwinsService/Get",
            element__twins__pb2.GetElementTwinRequest.SerializeToString,
            element__twins__pb2.ElementTwin.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetObservables(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/orchestra.elements.twins.ElementTwinsService/GetObservables",
            element__twins__pb2.GetElementTwinObservablesRequest.SerializeToString,
            element__twins__pb2.ElementTwinObservables.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Set(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/orchestra.elements.twins.ElementTwinsService/Set",
            element__twins__pb2.SetElementTwinPropertiesRequest.SerializeToString,
            element__twins__pb2.SetElementTwinPropertiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SetObservables(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/orchestra.elements.twins.ElementTwinsService/SetObservables",
            element__twins__pb2.SetElementTwinObservablesRequest.SerializeToString,
            element__twins__pb2.SetElementTwinObservablesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def RequestSet(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/orchestra.elements.twins.ElementTwinsService/RequestSet",
            element__twins__pb2.RequestSetElementTwinPropertiesRequest.SerializeToString,
            element__twins__pb2.RequestSetElementTwinPropertiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ValidateTwinStateChange(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/orchestra.elements.twins.ElementTwinsService/ValidateTwinStateChange",
            element__twins__pb2.ValidateTwinStateChangeRequest.SerializeToString,
            element__twins__pb2.ValidateTwinStateChangeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Watch(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/orchestra.elements.twins.ElementTwinsService/Watch",
            element__twins__pb2.WatchElementTwinRequest.SerializeToString,
            element__twins__pb2.WatchElementTwinResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
