# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import elements_pb2 as elements__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ElementsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListAll = channel.unary_unary(
            "/orchestra.elements.ElementsService/ListAll",
            request_serializer=elements__pb2.ListAllElementsRequest.SerializeToString,
            response_deserializer=elements__pb2.ListAllElementsResponse.FromString,
        )
        self.Get = channel.unary_unary(
            "/orchestra.elements.ElementsService/Get",
            request_serializer=elements__pb2.GetElementRequest.SerializeToString,
            response_deserializer=elements__pb2.Element.FromString,
        )
        self.Create = channel.unary_unary(
            "/orchestra.elements.ElementsService/Create",
            request_serializer=elements__pb2.CreateElementRequest.SerializeToString,
            response_deserializer=elements__pb2.Element.FromString,
        )
        self.Delete = channel.unary_unary(
            "/orchestra.elements.ElementsService/Delete",
            request_serializer=elements__pb2.DeleteElementRequest.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
        self.Watch = channel.unary_stream(
            "/orchestra.elements.ElementsService/Watch",
            request_serializer=elements__pb2.WatchElementRequest.SerializeToString,
            response_deserializer=elements__pb2.WatchElementResponse.FromString,
        )


class ElementsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Watch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ElementsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ListAll": grpc.unary_unary_rpc_method_handler(
            servicer.ListAll,
            request_deserializer=elements__pb2.ListAllElementsRequest.FromString,
            response_serializer=elements__pb2.ListAllElementsResponse.SerializeToString,
        ),
        "Get": grpc.unary_unary_rpc_method_handler(
            servicer.Get,
            request_deserializer=elements__pb2.GetElementRequest.FromString,
            response_serializer=elements__pb2.Element.SerializeToString,
        ),
        "Create": grpc.unary_unary_rpc_method_handler(
            servicer.Create,
            request_deserializer=elements__pb2.CreateElementRequest.FromString,
            response_serializer=elements__pb2.Element.SerializeToString,
        ),
        "Delete": grpc.unary_unary_rpc_method_handler(
            servicer.Delete,
            request_deserializer=elements__pb2.DeleteElementRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        "Watch": grpc.unary_stream_rpc_method_handler(
            servicer.Watch,
            request_deserializer=elements__pb2.WatchElementRequest.FromString,
            response_serializer=elements__pb2.WatchElementResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "orchestra.elements.ElementsService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ElementsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListAll(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/orchestra.elements.ElementsService/ListAll",
            elements__pb2.ListAllElementsRequest.SerializeToString,
            elements__pb2.ListAllElementsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Get(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/orchestra.elements.ElementsService/Get",
            elements__pb2.GetElementRequest.SerializeToString,
            elements__pb2.Element.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Create(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/orchestra.elements.ElementsService/Create",
            elements__pb2.CreateElementRequest.SerializeToString,
            elements__pb2.Element.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Delete(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/orchestra.elements.ElementsService/Delete",
            elements__pb2.DeleteElementRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Watch(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/orchestra.elements.ElementsService/Watch",
            elements__pb2.WatchElementRequest.SerializeToString,
            elements__pb2.WatchElementResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
