[project]
name = "email-typo-fixer"
version = "1.1.3"
description = "A Python library to automatically detect and fix common typos in email addresses"
authors = [
    { name = "Joao Brito" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.11,<3.15"
keywords = ["email", "typo", "correction", "validation", "normalization"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Communications :: Email",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing",
]

dependencies =[
"rapidfuzz>=3.13.0,<4.0.0",
"publicsuffixlist (>=1.0.2.20250802,<2.0.0.0)",
]

[project.urls]
Homepage = "https://github.com/machado000/email-typo-fixer"
Issues = "https://github.com/machado000/email-typo-fixer/issues"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [{ include = "email_typo_fixer"}]

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0,<8.0.0"
pytest-cov = ">=4.0.0,<5.0.0"
flake8 = ">=5.0.0,<6.0.0"
mypy = ">=1.0.0,<2.0.0"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=email_typo_fixer --cov-report=term-missing"
