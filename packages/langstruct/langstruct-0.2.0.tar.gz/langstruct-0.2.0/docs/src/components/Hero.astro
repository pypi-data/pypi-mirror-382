---
// Hero section component
---

<section class="relative overflow-hidden bg-gradient-to-br from-blue-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-900 dark:to-gray-800 py-20 sm:py-32">
	<!-- Background decoration -->
	<div class="absolute inset-0">
		<div class="hero-gradient absolute top-0 -left-4 w-72 h-72 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse"></div>
		<div class="absolute top-0 -right-4 w-72 h-72 bg-gradient-to-br from-yellow-400 to-pink-400 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse animation-delay-2000"></div>
		<div class="absolute -bottom-8 left-20 w-72 h-72 bg-gradient-to-br from-green-400 to-blue-400 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse animation-delay-4000"></div>
	</div>
	
	<div class="relative mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
		<div class="text-center">
			<!-- Badge -->
			<div class="mb-8">
				<div class="inline-flex items-center rounded-full bg-primary-100 dark:bg-primary-900/20 px-4 py-2 text-sm font-medium text-primary-700 dark:text-primary-300">
					<svg class="mr-2 h-4 w-4" fill="currentColor" viewBox="0 0 20 20">
						<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
					</svg>
					Production Ready • Self-Optimizing • Python
				</div>
			</div>

			<!-- Main heading -->
			<h1 class="text-4xl font-bold tracking-tight sm:text-6xl lg:text-7xl mb-6">
				<span class="text-gray-900 dark:text-white">LLM-Powered</span>
				<br />
				<span class="text-gradient">Structured Extraction</span>
			</h1>

			<!-- Subtitle -->
			<p class="mx-auto max-w-2xl text-lg text-gray-600 dark:text-gray-300 mb-10 leading-relaxed">
				Give an example, get structured data. Perfect for <strong>RAG enhancement</strong> with 
				precise metadata filtering instead of semantic search alone.
			</p>

			<!-- CTA Buttons -->
			<div class="flex flex-col sm:flex-row flex-wrap items-center justify-center gap-3 sm:gap-4 mb-6 sm:mb-8">
				<a href="/docs/getting-started" class="btn-primary text-lg px-8 py-4 leading-none">
					<span class="inline-flex items-center gap-2">
						<span>Get Started</span>
						<svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
						</svg>
					</span>
				</a>
				<a href="https://github.com/langstruct/langstruct" target="_blank" rel="noopener" class="btn-secondary text-lg px-8 py-4 leading-none">
					<span class="inline-flex items-center gap-2">
						<svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
							<path d="M12 0C5.374 0 0 5.373 0 12 0 17.302 3.438 21.8 8.207 23.387c.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z"/>
						</svg>
						<span>View on GitHub</span>
					</span>
				</a>
			</div>

			<!-- Code example -->
			<div class="mx-auto max-w-3xl">
				<div class="rounded-lg bg-gray-900 p-6 text-left shadow-2xl">
					<div class="flex items-center justify-between mb-4">
						<div class="flex space-x-2">
							<div class="h-3 w-3 rounded-full bg-red-500"></div>
							<div class="h-3 w-3 rounded-full bg-yellow-500"></div>
							<div class="h-3 w-3 rounded-full bg-green-500"></div>
						</div>
						<span class="text-sm text-gray-400">Quick Start</span>
					</div>
					
					<pre class="text-sm text-gray-300 overflow-x-auto"><code class="language-python">{`from langstruct import LangStruct

# Create extractor from an example (simplest approach)
extractor = LangStruct(example={
    "name": "Dr. Sarah Johnson", 
    "age": 34, 
    "location": "Cambridge, Massachusetts"
})

# Extract from any text
result = extractor.extract("""
Dr. Sarah Johnson, 34, is a renowned researcher at MIT 
based in Cambridge, Massachusetts.
""")

print(result.entities)
# {'name': 'Dr. Sarah Johnson', 'age': 34, 'location': 'Cambridge, Massachusetts'}

print(f"Confidence: {result.confidence}")
# Confidence: 0.95`}</code></pre>
				</div>
			</div>
		</div>
	</div>
</section>
