diff --git a/src/spreadsheet_handling/engine/orchestrator.py b/src/spreadsheet_handling/engine/orchestrator.py
--- a/src/spreadsheet_handling/engine/orchestrator.py
+++ b/src/spreadsheet_handling/engine/orchestrator.py
@@ -1,8 +1,8 @@
-from spreadsheet_handling.core.fk import (
-    detect_fk_columns,
-    apply_fk_helpers,
-    _series_from_first_level,
-    _norm_id,
-)
+from spreadsheet_handling.core.fk import (
+    detect_fk_columns,
+    apply_fk_helpers,
+    _norm_id,
+)
+from spreadsheet_handling.core.indexing import has_level0, level0_series
@@
-log = get_logger("engine")
-
-
-def _has_level0(df: pd.DataFrame, col: str) -> bool:
-    if isinstance(df.columns, pd.MultiIndex):
-        return col in df.columns.get_level_values(0)
-    return col in df.columns
+log = get_logger("engine")
@@
-            if not _has_level0(df, id_col):
+            if not has_level0(df, id_col):
                 maps[key] = {}  # kein Ziel, also leere Map – harmlos für Lookups
                 continue
-
-            ids = _series_from_first_level(df, id_col).astype("string")
+            ids = level0_series(df, id_col).astype("string")
@@
-            if _has_level0(df, label_col):
-                labels = _series_from_first_level(df, label_col).astype("string")
+            if has_level0(df, label_col):
+                labels = level0_series(df, label_col).astype("string")
@@
-            if not _has_level0(frames[sheet_name], id_col):
+            if not has_level0(frames[sheet_name], id_col):
                 continue
-            ids = _series_from_first_level(frames[sheet_name], meta["id_field"]).astype("string")
+            ids = level0_series(frames[sheet_name], meta["id_field"]).astype("string")
@@
-                    vals = _series_from_first_level(df, col).astype("string")
+                    vals = level0_series(df, col).astype("string")
@@
-            fk_defs = detect_fk_columns(df, reg, helper_prefix=helper_prefix)
+            fk_defs = detect_fk_columns(df, reg, helper_prefix=helper_prefix)
             out[sheet_name] = apply_fk_helpers(
                 df, fk_defs, id_maps, levels, helper_prefix=helper_prefix
             )

