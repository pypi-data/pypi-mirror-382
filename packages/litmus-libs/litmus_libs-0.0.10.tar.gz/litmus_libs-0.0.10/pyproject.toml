[build-system]
requires = ["hatchling", "PyYAML", "typing-extensions"]
build-backend = "hatchling.build"

[project]
name = "litmus-libs"

# version tag only matters for local dev; CI will overwrite it on release based on the git tag
version = "0.0.10"

authors = [
    { name = "mmkay", email = "232859+mmkay@users.noreply.github.com" },
]
description = "Shared abstractions for litmus component operator charms."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.12, <4"
dependencies = [
    "ops[tracing]>=3",
    "pydantic",
    "cosl"
]
classifiers = [
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Topic :: Utilities",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Development Status :: 4 - Beta",
    "Typing :: Typed",
]
[project.optional-dependencies]
dev = [
    # UNIT TESTS
    "pytest",
    "pytest-cov",
    "coverage[toml]",
    "ops[testing]",
    # LINTING
    "pyright",
    "ruff",
]
[project.urls]
"Homepage" = "https://github.com/canonical/litmus-operators"
"Bug Tracker" = "https://github.com/canonical/litmus-operators/issues"

[package]
include = ["py.typed"]

# Testing tools configuration
[tool.coverage.run]
branch = true
parallel = true
source = ["src"]
omit = ["tests/**", "lib/**"]

[tool.coverage.report]
show_missing = true


# Linting tools configuration
[tool.ruff]
line-length = 99
extend-exclude = ["__pycache__", "*.egg_info"]

[tool.ruff.lint]
select = ["E", "W", "F", "C", "N", "D", "I001"]
extend-ignore = [
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
    "E402",
]
ignore = ["E501", "D107"]
per-file-ignores = { "tests/*" = ["D100", "D101", "D102", "D103", "D104"] }

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pep8-naming]
# Allow Pydantic's `@validator` decorator to trigger class method treatment.
classmethod-decorators = ["classmethod", "pydantic.validator"]

[tool.hatch.metadata]
# allow git+ dependencies in pyproject
allow-direct-references = true