Metadata-Version: 2.4
Name: google-api-client-wrapper
Version: 1.1.3
Summary: A comprehensive Python wrapper for Google APIs, providing clean and intuitive access to Gmail, Google Drive, Google Calendar, and Google Tasks services.
Author-email: Dagmawi Molla <dagmawishewadeg@gmail.com>
License: MIT License
        
        Copyright (c) 2025 Dagmawi Molla
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/dsmolla/google-api-client-wrapper
Project-URL: Documentation, https://github.com/dsmolla/google-api-wrapper/blob/main/README.md
Project-URL: Repository, https://github.com/dsmolla/google-api-client-wrapper
Keywords: google-api,gmail,google-drive,google-calendar,google-tasks,api-wrapper,python-wrapper
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: google-api-python-client>=2.163.0
Requires-Dist: google-auth>=2.28.1
Requires-Dist: google-auth-httplib2
Requires-Dist: google-auth-oauthlib>=1.2.1
Requires-Dist: tzlocal>=5.3.1
Requires-Dist: html2text>=2025.4.15
Requires-Dist: pydantic>=2.11.7
Dynamic: license-file

# Google API Client

A comprehensive Python wrapper for Google APIs, providing clean and intuitive access to Gmail, Google Drive, Google Calendar, and Google Tasks services.

## Installiation

```bash
pip install google-api-client-wrapper
```

or install directly from the GitHub repository:

```bash
pip install git+https://github.com/dsmolla/google-api-client-wrapper.git
```


## Features

- **Gmail Service**: Send, receive, search, and manage emails
- **Google Drive Service**: Upload, download, and manage files and folders
- **Google Calendar Service**: Create, update, and manage calendar events
- **Google Tasks Service**: Manage tasks and task lists
- **OAuth2 Authentication**: Secure authentication flow
- **Query Builders**: Intuitive query building for each service
- **Multi-User Authentication**: Supports multiple users to be authenticated
- **Dataclass Models**: Uses Python dataclasses for clean, type-safe data structures (GmailMessage, EmailAddress, Task, Event, etc.)

## Installation


## Quick Start

```python
from google_client.user_client import UserClient
from datetime import datetime, timedelta

# Authenticate User
user_1 = UserClient.from_file("< user_1_token_path >", "< app_credentials_path >")
user_2, user_2_token = UserClient.from_credentials_info(
    "< user_2_token_dict >": 1,
    "< app_credentials_dict >": 2,
    "< scopes_list >",
)

# List User 1's emails
user_1_emails = user_1.gmail.list_emails()

# Create a calendar event for User 2
user_2_event = user_2.calendar.create_event(datetime.now(), datetime.now() + timedelta(hours=1))
```

## Package Documentation

Each service has detailed documentation with examples and API reference:

- **[Gmail Service](google_client/services/gmail/README.md)** - Email management and operations
- **[Google Drive Service](google_client/services/drive/README.md)** - File and folder management
- **[Google Calendar Service](google_client/services/calendar/README.md)** - Calendar and event management
- **[Google Tasks Service](google_client/services/tasks/README.md)** - Task and task list management

## Links
- **[Google Auth & Tokens](https://developers.google.com/identity/protocols/oauth2/web-server#python)**

--- 
See individual package documentation for detailed usage examples and API references.

For more information look at the official Google API Documentation for each service

