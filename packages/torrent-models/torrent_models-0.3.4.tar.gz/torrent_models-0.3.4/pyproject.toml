[project]
name = "torrent-models"
dynamic = []
description = ".torrent file parsing and creation with pydantic"
authors = [
    { name = "sneakers-the-rat", email = "sneakers-the-rat@protonmail.com" },
]
dependencies = [
    "pydantic>=2.10.6",
    "bencode-rs>=0.0.7",
    "tqdm>=4.67.1",
    "typing-extensions>=4.13.0; python_version<\"3.12\"",
    "rich>=14.0.0",
    "humanize>=4.12.2",
]
requires-python = ">=3.11"
readme = "README.md"
repository = "https://github.com/p2p-ld/noob"
keywords = [
    "bittorrent",
    "torrent",
    "pydantic",
]
classifiers = [
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
version = "0.3.4"

[project.license]
text = "EUPL-1.2"

[project.urls]
repository = "https://github.com/p2p-ld/torrent-models"

[project.optional-dependencies]
cli = [
    "click>=8.1.8",
]
libtorrent = [
    "libtorrent>=2.0.11",
]
mypy = [
    "torrent-models[cli]",
    "types-tqdm>=4.67.0.20250417",
]
tests = [
    "torrent-models[cli,libtorrent]",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
    "torf>=4.3.0",
    "pytest-profiling>=1.8.1",
]
benchmark = [
    "torrent-models[tests]",
    "pytest-codspeed>=3.2.0",
]
dev = [
    "torrent-models[tests,mypy]",
    "ruff>=0.11.2",
    "black>=25.1.0",
    "mypy>=1.15.0",
    "types-tqdm>=4.67.0.20250417",
    "sphinx-autobuild>=2024.10.3",
]
docs = [
    "torrent-models[cli]",
    "sphinx>=8.2.3",
    "furo>=2024.8.6",
    "myst-parser>=4.0.1",
    "autodoc-pydantic>=2.2.0",
    "sphinx-design>=0.6.1",
    "sphinxcontrib-mermaid>=1.0.0",
    "myst-nb>=1.2.0",
    "rich>=14.0.0",
    "sphinx-click>=6.0.0",
]

[project.scripts]
torrent-models = "torrent_models.cli.main:main"
torrent = "torrent_models.cli.main:main"
tm = "torrent_models.cli.main:main"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pdm.version]
fallback_version = "0.0.0"
source = "scm"
tag_filter = "v*"
tag_regex = "^v(?:\\D*)?(?P<version>([1-9][0-9]*!)?(0|[1-9][0-9]*)(\\.(0|[1-9][0-9]*))*((a|b|c|rc)(0|[1-9][0-9]*))?(\\.post(0|[1-9][0-9]*))?(\\.dev(0|[1-9][0-9]*))?$)$"

[tool.pdm.scripts]
test = "pytest"
mypy = "mypy"
benchmark = "pytest tests/bench.py --codspeed"
docs = "sphinx-autobuild ./docs ./docs/_build/html"

[tool.pdm.scripts.lint]
composite = [
    "ruff check",
    "black . --diff",
    "mypy",
]

[tool.pdm.scripts.format]
composite = [
    "black .",
    "ruff check --fix",
]

[tool.ruff]
target-version = "py311"
include = [
    "src/torrent_models/**/*.py",
    "tests/**/*.py",
    "pyproject.toml",
]
exclude = []
line-length = 100

[tool.ruff.lint]
select = [
    "E",
    "F",
    "UP",
    "B",
    "SIM",
    "I",
    "ANN",
    "T10",
    "D207",
    "D208",
    "D210",
    "D211",
    "D419",
    "N802",
    "FAST",
    "S608",
    "S701",
]
ignore = [
    "ANN401",
    "ANN204",
    "B905",
    "UP006",
    "UP035",
    "D107",
]
fixable = [
    "ALL",
]

[tool.ruff.lint.per-file-ignores]
"scripts/validate_corpus.py" = [
    "T10",
]
"src/torrent_models/__init__.py" = [
    "I001",
]
"tests/**/test_*" = [
    "ANN001",
    "ANN201",
    "F841",
]
"tests/bench.py" = [
    "ANN001",
    "ANN201",
    "F841",
]
"tests/conftest.py" = [
    "F403",
    "E402",
]
"tests/fixtures/**/*" = [
    "F403",
]

[tool.black]
target-version = [
    "py311",
    "py312",
    "py313",
]
include = "(?:tests|torrent_models)/.*\\.py$"
line-length = 100

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/src,$MYPY_CONFIG_FILE_DIR/stubs"
packages = [
    "torrent_models",
]
warn_redundant_casts = true
warn_unused_ignores = false
show_error_context = true
show_column_numbers = true
show_error_code_links = true
allow_redefinition = true
pretty = true
color_output = true
plugins = [
    "pydantic.mypy",
]

[tool.pytest]
addopts = [
    "--cov=torrent-models",
    "--cov-append",
]

[tool.pytest.ini_options]
markers = "  libtorrent: tests that compare libtorrent-created torrents with torrent-models torrents\n"
