[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "hdmf_zarr"
authors = [
  { name="Oliver Ruebel", email="oruebel@lbl.gov" },
  { name="Matthew Avaylon", email="mavaylon@lbl.gov" },
  { name="Ryan Ly", email="rly@lbl.gov" },
  { name="Stephanie Prince", email="smprince@lbl.gov" },
]
description = "A package defining a Zarr I/O backend for HDMF"
readme = "README.rst"
requires-python = ">=3.9"
license = {text = "BSD"}
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: BSD License",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Operating System :: Unix",
    "Topic :: Scientific/Engineering :: Medical Science Apps."
]
dependencies = [
    "hdmf>=4.1.0",
    "zarr>=2.18.0, <3.0",  # pin below 3.0 until HDMF-zarr supports zarr 3.0
    "numpy>=1.24.0",
    "numcodecs>=0.12.0, <0.16.0",  # numcodecs 0.16.0 is not compatible with zarr<3
    "pynwb>=2.8.3",
    "threadpoolctl>=3.1.0",
]
dynamic = ["version"]

[project.optional-dependencies]
# all optional dependencies
full = [
    "tqdm>=4.41.0",
    "fsspec",
    "s3fs",
]

# development dependencies
test = [
    "black",
    "codespell",
    "hdf5plugin",  # hdf5plugin is used to test conversion of plugin filters
    "pre-commit",
    "pytest",
    "pytest-cov",
    "python-dateutil",  # used in some tests
    "ruff",
    "scipy",  # used in some tests
    "tox",
]

# documentation dependencies
docs = [
    "matplotlib",
    "scipy",  # used in some docs
    "sphinx>=4",  # improved support for docutils>=0.17
    "sphinx_rtd_theme>=1",  # <1 does not work with docutils>=0.17
    "sphinx-gallery",
    "sphinx-copybutton",
]

# all possible dependencies
all = ["hdmf-zarr[full,test,docs]"]


[project.urls]
"Homepage" = "https://github.com/hdmf-dev/hdmf-zarr"
"Bug Tracker" = "https://github.com/hdmf-dev/hdmf-zarr/issues"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
# this file is created/updated when the package is installed and used in
# src/hdmf_zarr/__init__.py to set `hdmf_zarr.__version__`
# this allows the version to be accessible from python
version-file = "src/hdmf_zarr/_version.py"

[tool.hatch.build.targets.sdist]
exclude = [".git_archival.txt"]

[tool.hatch.build.targets.wheel]
packages = ["src/hdmf_zarr"]


[tool.codespell]
skip = "htmlcov,.git,.mypy_cache,.pytest_cache,.coverage,*.pdf,*.svg,venvs,.tox,./docs/_build/*,*.ipynb"
ignore-words-list = "datas"

[tool.coverage.run]
branch = true
source = ["hdmf_zarr"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstract"
]
omit = [
    "*/hdmf_zarr/_due.py",
]

[tool.black]
line-length = 120
target-version = ['py313']
include = '\.pyi?$'
force-exclude = 'docs/*'

[tool.ruff]
lint.select = ["E", "F", "T100", "T201", "T203"]
exclude = [
  ".git",
  ".tox",
  "__pycache__",
  "build/",
  "dist/",
  "docs/source/conf.py",
  "src/hdmf_zarr/_due.py",
  "docs/source/tutorials/",
  "docs/_build/",
]
line-length = 120

[tool.ruff.lint.per-file-ignores]
"docs/gallery/*" = ["E402", "T201"]
"test_gallery.py" = ["T201"]

[tool.ruff.lint.mccabe]
max-complexity = 17
