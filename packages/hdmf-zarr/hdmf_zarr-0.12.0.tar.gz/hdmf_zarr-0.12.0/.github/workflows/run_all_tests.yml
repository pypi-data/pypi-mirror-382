name: Run all tests
on:
  schedule:
    - cron: '0 5 * * *'  # once per day at midnight ET
  push:
    tags:  # run only on new tags that follow semver
      - '/^[0-9]+(\.[0-9]+)?(\.[0-9]+)?$/'
  workflow_dispatch:

jobs:
  run-all-tests:
    # the only differences between this job and "run_tests.yml" is the "strategy.matrix.include" and the upload
    # distributions step.
    # GitHub Actions does not yet support YAML anchors, easily reusable components, or easy dynamic matrix
    # configurations based on the github event, so this job is duplicated for the most part
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.name }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: linux-python3.9-minimum      , test-tox-env: py39-minimum    , python-ver: "3.9" , os: ubuntu-latest }
          - { name: linux-python3.10             , test-tox-env: py310           , python-ver: "3.10", os: ubuntu-latest }
          - { name: linux-python3.11             , test-tox-env: py311           , python-ver: "3.11", os: ubuntu-latest }
          - { name: linux-python3.12             , test-tox-env: py312           , python-ver: "3.12", os: ubuntu-latest }
          - { name: linux-python3.13             , test-tox-env: py313           , python-ver: "3.13", os: ubuntu-latest }
          - { name: linux-python3.13-optional    , test-tox-env: py313-optional  , python-ver: "3.13", os: ubuntu-latest }
          - { name: linux-python3.13-prerelease  , test-tox-env: py313-prerelease, python-ver: "3.13", os: ubuntu-latest }
          - { name: windows-python3.9-minimum    , test-tox-env: py39-minimum    , python-ver: "3.9" , os: windows-latest }
          - { name: windows-python3.10           , test-tox-env: py310           , python-ver: "3.10", os: windows-latest }
          - { name: windows-python3.11           , test-tox-env: py311           , python-ver: "3.11", os: windows-latest }
          - { name: windows-python3.12           , test-tox-env: py312           , python-ver: "3.12", os: windows-latest } 
          - { name: windows-python3.13           , test-tox-env: py313           , python-ver: "3.13", os: windows-latest } 
          - { name: windows-python3.13-optional  , test-tox-env: py313-optional  , python-ver: "3.13", os: windows-latest }
          - { name: windows-python3.13-prerelease, test-tox-env: py313-prerelease, python-ver: "3.13", os: windows-latest }
          - { name: macos-python3.9-minimum      , test-tox-env: py39-minimum    , python-ver: "3.9" , os: macos-latest }
          - { name: macos-python3.10             , test-tox-env: py310           , python-ver: "3.10", os: macos-latest }
          - { name: macos-python3.11             , test-tox-env: py311           , python-ver: "3.11", os: macos-latest }
          - { name: macos-python3.12             , test-tox-env: py312           , python-ver: "3.12", os: macos-latest }
          - { name: macos-python3.13             , test-tox-env: py313           , python-ver: "3.13", os: macos-latest }
          - { name: macos-python3.13-optional    , test-tox-env: py313-optional  , python-ver: "3.13", os: macos-latest }
          - { name: macos-python3.13-prerelease  , test-tox-env: py313-prerelease, python-ver: "3.13", os: macos-latest }
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # tags are required to determine the version

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-ver }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
          python -m pip list

      - name: Run tox tests
        run: |
          tox -e ${{ matrix.test-tox-env }}

      - name: Build wheel and source distribution
        run: |
          tox -e build
          ls -1 dist

      - name: Test installation from a wheel
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*-none-any.whl

      - name: Test installation from a source distribution
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*.tar.gz
        
  run-all-gallery-tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.name }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: linux-gallery-python3.9-minimum      , test-tox-env: gallery-py39-minimum    , python-ver: "3.9" , os: ubuntu-latest }
          - { name: linux-gallery-python3.13-optional    , test-tox-env: gallery-py313-optional  , python-ver: "3.13", os: ubuntu-latest }
          - { name: linux-gallery-python3.13-prerelease  , test-tox-env: gallery-py313-prerelease, python-ver: "3.13", os: ubuntu-latest }
          - { name: windows-gallery-python3.9-minimum    , test-tox-env: gallery-py39-minimum    , python-ver: "3.9" , os: windows-latest }
          - { name: windows-gallery-python3.13-optional  , test-tox-env: gallery-py313-optional  , python-ver: "3.13", os: windows-latest }
          - { name: windows-gallery-python3.13-prerelease, test-tox-env: gallery-py313-prerelease, python-ver: "3.13", os: windows-latest }
          - { name: macos-gallery-python3.9-minimum      , test-tox-env: gallery-py39-minimum    , python-ver: "3.9" , os: macos-latest }
          - { name: macos-gallery-python3.13-optional    , test-tox-env: gallery-py313-optional  , python-ver: "3.13", os: macos-latest }
          - { name: macos-gallery-python3.13-prerelease  , test-tox-env: gallery-py313-prerelease, python-ver: "3.13", os: macos-latest }
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # tags are required to determine the version

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-ver }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
          python -m pip list

      - name: Run tox tests
        run: |
          tox -e ${{ matrix.test-tox-env }}

  run-all-tests-on-conda:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash -l {0}  # needed for conda environment to work
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.name }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: conda-linux-python3.9-minimum    , test-tox-env: py39-minimum    , python-ver: "3.9" , os: ubuntu-latest }
          - { name: conda-linux-python3.10           , test-tox-env: py310           , python-ver: "3.10", os: ubuntu-latest }
          - { name: conda-linux-python3.11           , test-tox-env: py311           , python-ver: "3.11", os: ubuntu-latest }
          - { name: conda-linux-python3.12           , test-tox-env: py312           , python-ver: "3.12", os: ubuntu-latest }  
          - { name: conda-linux-python3.13           , test-tox-env: py313           , python-ver: "3.13", os: ubuntu-latest }          
          - { name: conda-linux-python3.13-optional  , test-tox-env: py313-optional  , python-ver: "3.13", os: ubuntu-latest }
          - { name: conda-linux-python3.13-prerelease, test-tox-env: py313-prerelease, python-ver: "3.13", os: ubuntu-latest }
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # tags are required to determine the version

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-ver }}
          channels: conda-forge
          conda-remove-defaults: "true"

      - name: Install build dependencies
        run: |
          conda config --set always_yes yes --set changeps1 no
          conda info
          conda install tox

      - name: Conda reporting
        run: |
          conda info
          conda config --show-sources
          conda list --show-channel-urls

      # NOTE tox installs packages from PyPI not conda-forge...
      - name: Run tox tests
        run: |
          tox -e ${{ matrix.test-tox-env }}

      - name: Build wheel and source distribution
        run: |
          tox -e build
          ls -1 dist

      - name: Test installation from a wheel
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*-none-any.whl
      
      - name: Test installation from a source distribution
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*.tar.gz
