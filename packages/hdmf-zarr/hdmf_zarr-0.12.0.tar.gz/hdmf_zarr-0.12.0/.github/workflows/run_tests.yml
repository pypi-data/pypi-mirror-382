name: Run tests
on:
  push:
    branches:
      - dev
  pull_request:

jobs:
  run-tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.name }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: linux-python3.9-minimum    , test-tox-env: py39-minimum  , python-ver: "3.9" , os: ubuntu-latest }
          - { name: linux-python3.13           , test-tox-env: py313         , python-ver: "3.13", os: ubuntu-latest }
          - { name: linux-python3.13-optional  , test-tox-env: py313-optional, python-ver: "3.13", os: ubuntu-latest }
          - { name: windows-python3.9-minimum  , test-tox-env: py39-minimum  , python-ver: "3.9" , os: windows-latest }
          - { name: windows-python3.13         , test-tox-env: py313         , python-ver: "3.13", os: windows-latest }
          - { name: windows-python3.13-optional, test-tox-env: py313-optional, python-ver: "3.13", os: windows-latest }
          - { name: macos-python3.9-minimum    , test-tox-env: py39-minimum  , python-ver: "3.9" , os: macos-latest }
          - { name: macos-python3.13           , test-tox-env: py313         , python-ver: "3.13", os: macos-latest }
          - { name: macos-python3.13-optional  , test-tox-env: py313-optional, python-ver: "3.13", os: macos-latest }
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # tags are required to determine the version

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-ver }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
          python -m pip list

      - name: Run tox tests
        run: |
          tox -e ${{ matrix.test-tox-env }}

      - name: Build wheel and source distribution
        run: |
          tox -e build
          ls -1 dist

      - name: Test installation from a wheel
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*-none-any.whl

      - name: Test installation from a source distribution
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*.tar.gz

  run-gallery-tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.name }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: linux-gallery-python3.9-minimum    , test-tox-env: gallery-py39-minimum  , python-ver: "3.9" , os: ubuntu-latest }
          - { name: linux-gallery-python3.13-optional  , test-tox-env: gallery-py313-optional, python-ver: "3.13", os: ubuntu-latest }
          - { name: windows-gallery-python3.9-minimum  , test-tox-env: gallery-py39-minimum  , python-ver: "3.9" , os: windows-latest }
          - { name: windows-gallery-python3.13-optional, test-tox-env: gallery-py313-optional, python-ver: "3.13", os: windows-latest }
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # tags are required to determine the version

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-ver }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
          python -m pip list

      - name: Run tox tests
        run: |
          tox -e ${{ matrix.test-tox-env }}

  run-tests-on-conda:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash -l {0}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.name }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: conda-linux-python3.9-minimum  , test-tox-env: py39-minimum  , python-ver: "3.9" , os: ubuntu-latest }
          - { name: conda-linux-python3.13         , test-tox-env: py313         , python-ver: "3.13", os: ubuntu-latest }
          - { name: conda-linux-python3.13-optional, test-tox-env: py313-optional, python-ver: "3.13", os: ubuntu-latest }
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # tags are required to determine the version

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-ver }}
          channels: conda-forge
          conda-remove-defaults: "true"

      - name: Install build dependencies
        run: |
          conda config --set always_yes yes --set changeps1 no
          conda info
          conda install tox

      - name: Conda reporting
        run: |
          conda info
          conda config --show-sources
          conda list --show-channel-urls

      # NOTE tox installs packages from PyPI not conda-forge...
      - name: Run tox tests
        run: |
          tox -e ${{ matrix.test-tox-env }}

      - name: Build wheel and source distribution
        run: |
          tox -e build
          ls -1 dist

      - name: Test installation from a wheel
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*-none-any.whl

      - name: Test installation from a source distribution
        run: |
          tox -e wheelinstall --recreate --installpkg dist/*.tar.gz
