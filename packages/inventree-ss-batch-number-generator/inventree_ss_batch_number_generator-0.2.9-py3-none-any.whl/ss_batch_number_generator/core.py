"""Plugin to generate unique batch numbers"""

from plugin import InvenTreePlugin

from plugin.mixins import SettingsMixin, ValidationMixin

from part.models import Part

from django.core.exceptions import ValidationError

import logging

from . import PLUGIN_VERSION

from inventree.api import InvenTreeAPI
from inventree.stock import StockItem




logger = logging.getLogger("inventree")


class SSBatchNumberGenerator(SettingsMixin, ValidationMixin, InvenTreePlugin):

    """SSBatchNumberGenerator - custom InvenTree plugin."""

    # Plugin metadata
    TITLE = "SS Batch Number Generator"
    NAME = "SSBatchNumberGenerator"
    SLUG = "ss-batch-number-generator"
    DESCRIPTION = "Plugin to generate unique batch numbers"
    VERSION = PLUGIN_VERSION

    # Additional project information
    AUTHOR = "Rob Kettridge"
    WEBSITE = "https://www.smartsentry.co.uk"
    LICENSE = "MIT"

    # Optionally specify supported InvenTree versions
    # MIN_VERSION = '0.18.0'
    # MAX_VERSION = '2.0.0'

    
    
    
    # Plugin settings (from SettingsMixin)
    # Ref: https://docs.inventree.org/en/latest/plugins/mixins/settings/
    SETTINGS = {
        # Define your plugin settings here...
        "ACTIVE": {
            "name": "Active",
            "description": "IPN generator is active",
            "validator": bool,
            "default": True,
        },
        "PREFIX": {
            "name": "Batch Prefix",
            "description": "Prefix for autogenerated batch numbers",
            "default": "SS_",
        },
        "PADDING": {
            "name": "Padding",
            "description": "Number of digits in batch number",
            "validator": int,
            "default": 8,
        },
        "SERVER_ADDRESS": {
            "name": "Server Address",
            "description": "URL for InvenTree API",
            "default": "http://127.0.0.1:8000",
        },

        "USERNAME": {
            "name": "Username",
            "description": "Username for InvenTree API",
        },

        "PASSWORD": {
            "name": "Password",
            "description": "Password for InvenTree API",

        },
    }
    
    
    

    # Custom data validation (from ValidationMixin)
    # Ref: https://docs.inventree.org/en/latest/plugins/mixins/validation/

    def generate_batch_code(self, **kwargs):
        """Generate a new batch code."""

        if not self.get_setting("ACTIVE"):
            return False

        api = InvenTreeAPI(self.get_setting('SERVER_ADDRESS'), username=self.get_setting('USERNAME'), password=self.get_setting('PASSWORD'))
        
        batch = None

        padding = self.get_setting('PADDING')

        expression = '^' + self.get_setting('PREFIX') + '[0-9 ]*$ '

        stockList = StockItem.list(api, batch_regex=expression)

        stockList = sorted(stockList, key=lambda x: x.batch)

        if len(stockList) > 0:
            batch = stockList[-1].batch
            batch = batch.removeprefix(self.get_setting('PREFIX'))
            batch = int(batch)+1
            batch = (self.get_setting('PREFIX') + str(batch).rjust(padding,'0'))
            #batch = (self.get_setting('PREFIX') + str(batch).rjust(8,'0'))

        else:
            batch = 1
            batch = (self.get_setting('PREFIX') + str(batch).rjust(padding,'0'))
            
        return (batch)
