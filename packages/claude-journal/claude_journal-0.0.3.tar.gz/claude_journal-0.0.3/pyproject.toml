[project]
name = "claude-journal"
version = "0.0.3"
description = "MCP server that provides journaling capabilities for Claude Code"
authors = [{name = "Andrii Yurchuk", email = "ay@mntw.re"}]
license = {file = "LICENSE"}
readme = "README.md"
repository = "https://github.com/yourusername/claude-journal"
requires-python = ">=3.12"
dependencies = [
    "mcp>=1.16.0",
    "gitpython>=3.1.45",
    "pytest-cov>=7.0.0",
]

[project.scripts]
claude-journal = "claude_journal.cli:main"

[dependency-groups]
dev = [
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "pytest-asyncio>=0.25.2",
    "ruff>=0.13.3",
]

[build-system]
requires = ["uv_build>=0.8.23,<0.9.0"]
build-backend = "uv_build"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D",        # pydocstyle (we'll add docstrings later)
    "COM812",   # missing-trailing-comma (conflicts with formatter)
    "ISC001",   # single-line-implicit-string-concatenation (conflicts with formatter)
    "S101",     # use of assert (fine in tests)
    "PLR2004",  # magic value used in comparison
    "TRY300",   # consider moving statement to else block (unnecessary complexity)
    "T201",     # print found (appropriate for CLI commands)
    "C901",     # function is too complex (search logic is inherently complex)
    "PLC0415",  # import should be at top-level (lazy import for optional MCP server dependency)
]

[tool.ruff.format]
line-ending = "lf"

[tool.mypy]
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
show_column_numbers = true
