[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
# requires = ["setuptools"]
# build-backend = "setuptools.build_meta"

[tool.poetry]
name = "energyml-utils"
version = "1.9.1" # Set at build time
description = "Energyml helper"
authors = [
    "Valentin Gauthier <valentin.gauthier@geosiris.com>"
]
maintainers = [
    "Valentin Gauthier <valentin.gauthier@geosiris.com>"
]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/geosiris-technologies/energyml-python"
homepage = "http://www.geosiris.com"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
]
keywords = ["energyml", "resqml", "witsml", "prodml"]
packages = [
    { include = "energyml", from = "src" },
]
include = [
    "src/energyml/utils/rc/*.xml",
    "src/energyml/utils/rc/*.json"
]
#exclude = [
#    "src/energyml/main.py"
#]

[tool.pytest.ini_options]
pythonpath = [ "src" ]
testpaths = [ "tests" ]
python_files = [ "test_*.py", "*_test.py" ]
python_classes = [ "Test*" ]
python_functions = [ "test_*" ]

[tool.poetry.extras]
parquet = ["pyarrow", "numpy", "pandas"]
hdf5 = ["h5py"]

[tool.poetry.dependencies]
python = "^3.9"
xsdata = {version = "^24.0", extras = ["cli", "lxml"]}
energyml-opc = "^1.12.0"
h5py = { version = "^3.7.0", optional = false }
pyarrow = { version = "^14.0.1", optional = false }
numpy = { version = "^1.16.6", optional = false }

[tool.poetry.group.dev.dependencies]
pandas = { version = "^1.1.0", optional = false }
coverage = {extras = ["toml"], version = "^6.2"}
pytest = "^8.1.1"
pytest-cov = "^4.1.0"
flake8 = "^4.0.0"
black = "^22.3.0"
pylint = "^2.7.2"
click = ">=8.1.3, <=8.1.3" # upper version than 8.0.2 fail with black
pdoc3 = "^0.10.0"
energyml-common2-0 = "^1.12.0"
energyml-common2-1 = "^1.12.0"
energyml-common2-2 = "^1.12.0"
energyml-common2-3 = "^1.12.0"
energyml-resqml2-0-1 = "^1.12.0"
energyml-resqml2-2-dev3 = "^1.12.0"
energyml-resqml2-2 = "^1.12.0"
energyml-witsml2-0 = "^1.12.0"
energyml-witsml2-1 = "^1.12.0"
energyml-prodml2-0 = "^1.12.0"
energyml-prodml2-2 = "^1.12.0"

mypy = "^0.971"
bandit = "^1.7.0"
safety = "^1.10.0"
memory-profiler = "^0.60.0"
line-profiler = "^4.0.0"

[tool.coverage.run]
branch = true
source = ["src/energyml"]

[tool.black]
line-length = 120
target-version = ["py39"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | htmlcov
)/
'''

[tool.pylint.format]
max-line-length = "120"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "pep440"
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance,
            ) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance,
            ) }}
    {%- endif -%}
"""

[tool.poetry.scripts]
extract_3d = "example.tools:extract_representation_in_3d_file"
csv_to_dataset = "example.tools:csv_to_dataset"
generate_data = "example.tools:generate_data"
xml_to_json = "example.tools:xml_to_json"
json_to_xml = "example.tools:json_to_xml"
json_to_epc = "example.tools:json_to_epc"
describe_as_csv = "example.tools:describe_as_csv"
validate = "example.tools:validate_files"