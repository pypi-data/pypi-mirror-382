[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "segmentation-forests"
version = "0.1.0"
description = "Unsupervised segment discovery using divergence-based decision trees inspired by Random Forests"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
license-files = ["LICENSE"]
authors = [
    {name = "David Williams", email = "david@davidgeorgewilliams.com"}
]
keywords = ["machine-learning", "unsupervised-learning", "segment-discovery", "data-mining", "random-forests"]
classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    "pre-commit>=4.2.0",
    "jupyter>=1.0.0",
    "ipython>=8.14.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
]

[project.urls]
Homepage = "https://github.com/davidgeorgewilliams/segmentation-forests"
Documentation = "https://github.com/davidgeorgewilliams/segmentation-forests/blob/main/README.md"
Repository = "https://github.com/davidgeorgewilliams/segmentation-forests"
"Bug Tracker" = "https://github.com/davidgeorgewilliams/segmentation-forests/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
segmentation_forests = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
]
ignore = ["E501", "B008"]
fixable = ["ALL"]
unfixable = []

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q --strict-markers"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]
