[build-system]
requires = ["setuptools>=68.0", "setuptools_scm>=8.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "observatory-mcp"
dynamic = ["version"]
description = "Observatory SDK for MCP server analytics and monitoring - Add comprehensive observability to your MCP servers with just 2 lines of code"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Observatory Team", email = "team@observatory.dev"}
]
maintainers = [
    {name = "Observatory Team", email = "team@observatory.dev"}
]
keywords = [
    "mcp",
    "model-context-protocol",
    "observability",
    "analytics",
    "monitoring",
    "telemetry",
    "metrics",
    "tracking",
    "sdk"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
    "Typing :: Typed",
]

dependencies = [
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
mcp = [
    "mcp>=0.9.0",
]
dev = [
    "mcp>=0.9.0",  # Required for testing MCP integration
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "mypy>=1.0",
    "ruff>=0.1.0",
    "build>=1.0.0",
    "twine>=4.0.0",
]
all = [
    "mcp>=0.9.0",
    "psutil>=5.9.0",  # For system metrics
]

[project.urls]
Homepage = "https://observatory.dev"
Documentation = "https://observatory.dev/docs/python-sdk"
Repository = "https://github.com/observatory/observatory"
Issues = "https://github.com/observatory/observatory/issues"
Changelog = "https://github.com/observatory/observatory/blob/main/CHANGELOG.md"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["observatory_mcp*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=observatory_mcp --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.setuptools_scm]
# Automatically get version from git tags
# Tag format: v0.1.0 -> version: 0.1.0
version_scheme = "guess-next-dev"
local_scheme = "no-local-version"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
