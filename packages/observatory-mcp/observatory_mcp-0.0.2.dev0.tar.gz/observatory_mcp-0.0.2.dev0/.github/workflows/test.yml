name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ['3.11']
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Lint with ruff
      run: |
        ruff check observatory_mcp/

    - name: Check formatting with black
      run: |
        black --check observatory_mcp/

    - name: Type check with mypy
      run: |
        mypy observatory_mcp/
      continue-on-error: true

    - name: Run tests
      run: |
        pytest --cov=observatory_mcp --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history and tags for setuptools_scm

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine setuptools-scm>=8.0

    - name: Build package
      run: |
        echo "🔨 Building package (version from git tags)"
        python -m build
        echo ""
        echo "📦 Built packages:"
        ls -lh dist/

    - name: Verify package
      run: |
        echo "🔍 Verifying built packages..."
        echo ""
        echo "📦 Built files:"
        ls -lh dist/
        echo ""
        
        # Extract actual version from built wheel filename
        WHEEL_FILE=$(ls dist/*.whl | head -1)
        if [ -n "$WHEEL_FILE" ]; then
          BUILT_VERSION=$(basename $WHEEL_FILE | sed 's/observatory_mcp-\(.*\)-py3.*/\1/')
          echo "✅ Built version: $BUILT_VERSION"
        fi
        
        # Verify files exist
        if ls dist/*.whl 1> /dev/null 2>&1 && ls dist/*.tar.gz 1> /dev/null 2>&1; then
          echo "✅ Wheel and tarball created successfully"
        else
          echo "❌ ERROR: Missing package files"
          exit 1
        fi

    - name: Check package
      run: |
        echo "🔍 Validating package metadata..."
        twine check dist/*
        echo "✅ Package validation passed"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
