[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "splurge-typer"
version = "2025.1.0"
description = "Type Inference and Conversion Library for Python"
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
authors = [
    { name = "Jim Schilling" },
]
keywords = ["type-inference", "data-conversion", "python", "typing", "data-processing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
dependencies = []

[project.urls]
Homepage = "http://github.com/jim-schilling/splurge-typer"
Repository = "http://github.com/jim-schilling/splurge-typer"
Issues = "http://github.com/jim-schilling/splurge-typer/issues"
Changelog = "http://github.com/jim-schilling/splurge-typer/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=7.3",
    "pytest-cov>=4.0",
    "pytest-xdist>=3.0",
    "hypothesis>=6.0",
    "mypy>=1.18.2",
    "ruff>=0.12.12",
    "pre-commit>=3.4",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["splurge_typer*"]

[tool.setuptools.package-data]
splurge_typer = ["py.typed"]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.hypothesis]
max_examples = 200
deadline = 200
suppress_health_check = ["data_too_large", "too_slow"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]  # assert false

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
exclude = "tests/.*"

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-x",
    "-v",
    "--strict-markers",
    "--strict-config",
    "-n 4",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["splurge_typer"]
omit = [
    "tests/**/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\\\\bProtocol\\):",
    "@(abc\\\\.)?abstractmethod",
]
