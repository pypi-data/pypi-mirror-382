[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "logbull"
version = "0.8.0"
description = "LogBull Python client library for sending logs to LogBull server"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "LogBull Team"},
]
keywords = ["logging", "logbull", "logs", "monitoring"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Logging",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = []

[project.optional-dependencies]
dev = [
    "ruff>=0.12.4",
    "mypy>=1.7.0", 
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pre-commit>=3.6.0",
    "loguru>=0.7.0",
    "structlog>=23.1.0",
    "python-semantic-release>=9.0.0",
]

[tool.uv]
dev-dependencies = [
    "ruff>=0.12.4",
    "mypy>=1.7.0",
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pre-commit>=3.6.0",
    "loguru>=0.7.0",
    "structlog>=23.1.0",
    "python-semantic-release>=9.0.0",
    "build>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/logbull/logbull"
Documentation = "https://github.com/logbull/logbull"
Repository = "https://github.com/logbull/logbull"
Issues = "https://github.com/logbull/logbull/issues"

[tool.hatch.build.targets.wheel]
packages = ["logbull"]

[tool.ruff]
target-version = "py38"
line-length = 88
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["B011", "ARG002"]

[tool.ruff.lint.isort]
known-first-party = ["logbull"]
force-single-line = false
lines-after-imports = 2
split-on-trailing-comma = true

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
extra_checks = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=logbull --cov-report=term-missing"

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variables = [
    "logbull/__init__.py:__version__",
]
build_command = ""
dist_glob_patterns = ["dist/*"]
upload_to_pypi = true
upload_to_release = true
hvcs = "github"
commit_message = "chore: release v{version}"
commit_parser = "emoji"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = [
    "^chore:",
    "^docs:",
    "^style:",
    "^test:",
    "^ci:",
]

[tool.semantic_release.commit_parser_options]
major_tags = []
minor_tags = ["FEATURE"]
patch_tags = ["FIX"]
default_bump_level = 0
