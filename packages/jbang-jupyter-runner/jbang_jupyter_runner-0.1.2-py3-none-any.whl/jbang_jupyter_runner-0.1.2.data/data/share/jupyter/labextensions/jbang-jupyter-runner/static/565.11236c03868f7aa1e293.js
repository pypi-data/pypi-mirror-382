"use strict";(self.webpackChunkjbang_jupyter_runner=self.webpackChunkjbang_jupyter_runner||[]).push([[565],{565:(n,e,t)=>{t.r(e),t.d(e,{default:()=>c});var r=t(362),o=t(948),a=t(794),s=t(222),l=t(845);async function i(n,e,t){t&&t.model.dirty&&(console.log("[jbang-jupyter-runner] File has unsaved changes, saving..."),await t.save(),console.log("[jbang-jupyter-runner] ✓ File saved"));const r=`jbang run "${e}"\n`,o=e.split("/").pop()||"",a=`jbang-${o}`;console.log("[jbang-jupyter-runner] Looking for existing terminal:",a);let s=null;const i=n.shell.widgets("main");for(const n of i)if(console.log("[jbang-jupyter-runner] Checking widget:",n.id),n instanceof l.Terminal&&n.title.dataset.id===a){s=n,console.log("[jbang-jupyter-runner] ✓ Found existing terminal, reusing it");break}let u;if(s)u=s;else{console.log("[jbang-jupyter-runner] Creating new terminal for:",o);const e=await n.serviceManager.terminals.startNew();console.log("[jbang-jupyter-runner] ✓ Terminal session started"),u=new l.Terminal(e),u.id=a,u.title.label=`JBang: ${o}`,u.title.closable=!0,n.shell.add(u,"main",{mode:"split-bottom"}),console.log("[jbang-jupyter-runner] ✓ Terminal added to shell")}n.shell.activateById(u.id),u.session?(u.session.send({type:"stdin",content:[r]}),console.log("[jbang-jupyter-runner] ✓ Command sent to terminal")):console.error("[jbang-jupyter-runner] Terminal session not available")}class u{constructor(n,e){this.app=n,this.translator=e,console.log("[jbang-jupyter-runner] RunButtonExtension created")}createNew(n,e){console.log("[jbang-jupyter-runner] createNew called for:",e.path);const t=e.path.split("/").pop()||"";if(!t.endsWith(".java")&&!t.endsWith(".jsh"))return console.log("[jbang-jupyter-runner] Not a Java file, skipping:",t),{dispose:()=>{},get isDisposed(){return!1}};console.log("[jbang-jupyter-runner] Adding run button for:",t);const r=this.translator.load("jbang-jupyter-runner"),o=new a.ToolbarButton({className:"jbang-run-button",icon:s.runIcon,onClick:async()=>{console.log("[jbang-jupyter-runner] Run button clicked for:",e.path);try{await i(this.app,e.path,e)}catch(n){console.error("[jbang-jupyter-runner] Failed to run file:",n)}},tooltip:r.__("Run this file with jbang")});return n.toolbar.insertItem(10,"jbangRun",o),console.log("[jbang-jupyter-runner] ✓ Button added to toolbar"),o}}const c={id:"jbang-jupyter-runner:plugin",autoStart:!0,requires:[r.IDocumentManager,o.ITranslator],optional:[a.ICommandPalette],activate:(n,e,t,r)=>{console.log("[jbang-jupyter-runner] Extension activating..."),console.log("[jbang-jupyter-runner] JupyterLab version:",n.version),function(n,e,t,r){console.log("[jbang-jupyter-runner] Setting up run button functionality");const o=t.load("jbang-jupyter-runner"),a=new u(n,t);e.registry.addWidgetExtension("Editor",a),console.log("[jbang-jupyter-runner] Widget extension registered with Editor factory");const l="jbang-jupyter-runner:run-file";n.commands.hasCommand(l)||(n.commands.addCommand(l,{label:o.__("Run with jbang"),icon:s.runIcon,execute:async()=>{console.log("[jbang-jupyter-runner] Run command executed from palette");const t=n.shell.currentWidget;if(!t)return void console.warn("[jbang-jupyter-runner] No current widget");const r=e.contextForWidget(t);if(!r)return void console.warn("[jbang-jupyter-runner] No context for widget");const o=r.path,a=o.split("/").pop()||"";if(a.endsWith(".java")||a.endsWith(".jsh"))try{await i(n,o,r)}catch(n){console.error("[jbang-jupyter-runner] Failed to run file:",n)}else console.warn("[jbang-jupyter-runner] Not a Java file:",a)}}),r&&r.addItem({command:l,category:"File Operations"})),console.log("[jbang-jupyter-runner] Setup complete")}(n,e,t,r),console.log("[jbang-jupyter-runner] ✓ Extension activated successfully!")}}}}]);