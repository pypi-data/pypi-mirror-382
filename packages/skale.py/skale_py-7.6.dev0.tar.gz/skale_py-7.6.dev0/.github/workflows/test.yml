name: Test
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        component: [manager, allocator, fair]
    env:
      ETH_PRIVATE_KEY: ${{ secrets.ETH_PRIVATE_KEY }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      ENDPOINT: "http://127.0.0.1:8545"
      MANAGER_TAG: "1.12.0-develop.21"
      ALLOCATOR_TAG: "2.2.2-develop.0"
      FAIR_TAG: "0.0.1-develop.71"
      MINING_INTERVAL: 10
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Set up Python 3.13
        run: uv python install 3.13

      - name: Install python dependencies
        run: uv sync --all-extras

      - name: Lint with ruff
        run: uv run ruff check skale/

      - name: Type check with mypy
        run: uv run mypy skale/

      - name: Launch hardhat node
        working-directory: hardhat-node
        run: |
          docker compose up -d && sleep 20

      - name: Deploy manager
        run: |
          bash ./helper-scripts/deploy_manager.sh
          docker rmi -f skalenetwork/skale-manager:${{ env.MANAGER_TAG }}

      - name: Deploy allocator
        if: ${{ matrix.component == 'allocator' }}
        run: |
          bash ./helper-scripts/deploy_allocator.sh
          docker rmi -f skalenetwork/skale-allocator:${{ env.ALLOCATOR_TAG }}

      - name: Bootstrap fair-boot contracts
        if: ${{ matrix.component == 'fair' }}
        run: |
          bash ./scripts/bootstrap_fair.sh

      - name: Deploy fair
        if: ${{ matrix.component == 'fair' }}
        env:
          MAINNET_ENDPOINT: "http://127.0.0.1:8545"
          CHAIN_NAME: "fair"
        run: |
          export TARGET=$(bash ./helper-scripts/helper.sh manager_address)
          bash ./helper-scripts/deploy_fair.sh
          docker rmi -f skalenetwork/fair-manager:${{ env.FAIR_TAG }}

      - name: Show stats before tests
        if: always()
        run: |
          sudo lsblk -f
          sudo free -h

      - name: Run tests for ${{ matrix.component }}
        run: bash ./scripts/run_${{ matrix.component }}_tests.sh

      - name: Codecov
        run: |
          uv run codecov -t $CODECOV_TOKEN

      - name: Show stats after tests
        if: always()
        run: |
          sudo lsblk -f
          sudo free -h
