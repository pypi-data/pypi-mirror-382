[build-system]
build-backend = "hatchling.build"

requires = [ "hatch-vcs", "hatchling" ]

[project]
name = "aleph-message"
description = "Aleph.im message specification"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
  { name = "Hugo Herter", email = "git@hugoherter.com" },
]
requires-python = ">=3"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: System :: Distributed Computing",
]
dynamic = [ "version" ]
dependencies = [
  "pydantic>=2",
  "pydantic-core>=2",
  "typing-extensions>=4.5",
]
urls.Documentation = "https://aleph.im/"
urls.Homepage = "https://github.com/aleph-im/aleph-message"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = [
  "Dockerfile",
  "LICENSE",
  "pyproject.toml",
  "README.md",
  "aleph_message",
]

[tool.hatch.build.targets.sdist]
include = [
  "Dockerfile",
  "LICENSE",
  "pyproject.toml",
  "README.md",
  "aleph_message",
]

[tool.hatch.envs.testing]
dependencies = [
  "requests",
  "rich",
  "pytest==8.0.1",
  "pytest-cov==4.1.0",
]

# XXX see https://github.com/aleph-im/pyaleph/blob/main/.github/workflows/pyaleph-ci.yml
[tool.hatch.envs.testing.scripts]
test = "pytest -v {args:.}"
test-cov = "pytest -v --cov {args:.}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[tool.hatch.envs.linting]
detached = true
dependencies = [
  "black==24.2.0",
  "mypy==1.2.0",
  "mypy-extensions==1.0.0",
  "ruff==0.4.8",
  "isort==5.13.2",
  "check-sdist==0.1.3",
  "yamlfix==1.17.0",
  "pydantic>=2",
  "pydantic-core>=2",
  "pyproject-fmt==2.2.1",
  "types-requests",
  "typing-extensions",
]

[tool.hatch.envs.linting.scripts]
typing = "mypy --config-file=pyproject.toml {args:} ./aleph_message/"
style = [
  "ruff check {args:.}",
  "black --check --diff {args:} ./aleph_message/",
  "isort --check-only --profile black {args:} ./aleph_message/",
  "yamlfix --check .",
  "pyproject-fmt --check pyproject.toml",
]
sdist = "check-sdist --inject-junk"
fmt = [
  "black {args:} ./aleph_message/",
  "ruff check --fix {args:.} ./aleph_message/",
  "isort --profile black {args:} ./aleph_message/",
  "yamlfix .",
  "pyproject-fmt pyproject.toml",
  "style",
]
all = [
  "style",
  "typing",
  "sdist",
]

[tool.isort]
profile = "black"

[tool.check-sdist]
git-only = [
  "tests",
  "docs",
  "deployment",
  ".coveragerc",
  ".dockerignore",
  "shell.nix",
]
default-ignore = true

[tool.pytest]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
branch = true
parallel = true
source = [
  "aleph_message/",
]
omit = [
  "*/site-packages/*",
]

[tool.coverage.paths]
source = [
  "aleph_message/",
]
omit = [
  "*/site-packages/*",
]

[tool.mypy]
show_column_numbers = true
install_types = true
ignore_missing_imports = true

[tool.yamlfix]
sequence_style = "keep_style"
preserve_quotes = true
whitelines = 1
section_whitelines = 2
