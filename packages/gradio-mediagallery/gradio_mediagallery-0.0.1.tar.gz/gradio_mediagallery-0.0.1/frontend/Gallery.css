   :global(*::-webkit-scrollbar) {
    width: 8px;
    height: 8px;
    background-color: transparent;
  }

  :global(*::-webkit-scrollbar-track) {
    background: transparent;
    border-radius: 10px;
  }

  :global(*::-webkit-scrollbar-thumb) {
    background-color: rgba(136, 136, 136, 0.4);
    border-radius: 10px;
    border: 2px solid transparent;
    background-clip: content-box;
  }

  :global(*::-webkit-scrollbar-thumb:hover) {
    background-color: rgba(136, 136, 136, 0.7);
  }

  /* Para Firefox */
  :global(html) {
    scrollbar-width: thin;
    scrollbar-color: rgba(136, 136, 136, 0.7) transparent;
  }
  
 /**
   * Styles for the gallery container, which holds the entire component.
   */
  .gallery-container {
    position: relative;
    width: 100%;
    height: 100%;
  }

  /**
   * Styles for buttons to ensure they fill their container.
   */
  button {
    width: var(--size-full);
    height: var(--size-full);
    display: block;
    border-radius: var(--radius-lg);
  }

  /**
   * Styles for the preview mode, displaying a selected media item.
   */
  .preview {
    display: flex;
    position: absolute;
    flex-direction: column;
    z-index: var(--layer-2);
    border-radius: calc(var(--block-radius) - var(--block-border-width));
    -webkit-backdrop-filter: blur(8px);
    backdrop-filter: blur(8px);
    width: var(--size-full);
    height: var(--size-full);
  }

  .preview:focus-visible {
    outline: none;
  }

  .preview.minimal {
    width: fit-content;
    height: fit-content;
  }

  .preview::before {
    content: "";
    position: absolute;
    z-index: var(--layer-below);
    background: var(--background-fill-primary);
    opacity: 0.9;
    width: var(--size-full);
    height: var(--size-full);
  }

  /**
   * Styles for the grid wrapper with fixed height constraints.
   */
  .fixed-height {
    min-height: var(--size-80);
    max-height: 65vh;
  }

  @media (--screen-xl) {
    .fixed-height {
      min-height: 450px;
    }
  }

  /**
   * Styles for the media container in preview mode.
   */
  .media-container {
    height: calc(100% - var(--size-14));
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
  }

  .media-container :global(img),
  .media-container :global(video) {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
  }

  /**
   * Styles for thumbnails in the preview mode carousel.
   */
  .thumbnails :global(img) {
    object-fit: cover;
    width: var(--size-full);
    height: var(--size-full);
  }

  .thumbnails :global(svg) {
    position: absolute;
    top: var(--size-2);
    left: var(--size-2);
    width: 50%;
    height: 50%;
    opacity: 50%;
  }

  /**
   * Styles for captions in preview mode.
   */
  .caption {
    padding: var(--size-2) var(--size-3);
    overflow: hidden;
    color: var(--block-label-text-color);
    font-weight: var(--weight-semibold);
    text-align: center;
    text-overflow: ellipsis;
    white-space: nowrap;
    align-self: center;
  }

  /**
   * Styles for the thumbnails carousel in preview mode.
   */
  .thumbnails {
    display: flex;
    position: absolute;
    bottom: 0;
    justify-content: flex-start;
    align-items: center;
    gap: var(--spacing-lg);
    width: var(--size-full);
    height: var(--size-14);
    overflow-x: scroll;
  }

  /**
   * Styles for individual thumbnail items.
   */
  .thumbnail-item {
    --ring-color: transparent;
    position: relative;
    box-shadow: inset 0 0 0 1px var(--ring-color), var(--shadow-drop);
    border: 1px solid var(--border-color-primary);
    border-radius: var(--button-small-radius);
    background: var(--background-fill-secondary);
    aspect-ratio: var(--ratio-square);
    width: var(--size-full);
    height: var(--size-full);
    overflow: clip;
  }

  .thumbnail-item:hover {
    --ring-color: var(--color-accent);
    border-color: var(--color-accent);
    filter: brightness(1.1);
  }

  .thumbnail-item.selected {
    --ring-color: var(--color-accent);
    border-color: var(--color-accent);
  }

  .thumbnail-item :global(svg) {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 50%;
    height: 50%;
    opacity: 50%;
    transform: translate(-50%, -50%);
  }

  .thumbnail-item :global(video) {
    width: var(--size-full);
    height: var(--size-full);
    overflow: hidden;
    object-fit: cover;
  }

  /**
   * Styles for small thumbnails in the preview carousel.
   */
  .thumbnail-small {
    flex: none;
    transform: scale(0.9);
    transition: 0.075s;
    width: var(--size-9);
    height: var(--size-9);
  }

  .thumbnail-small.selected {
    --ring-color: var(--color-accent);
    transform: scale(1);
    border-color: var(--color-accent);
  }

  /**
   * Styles for the grid wrapper containing the gallery items.
   */
  .grid-wrap {
    position: relative;
    padding: var(--size-2);
    overflow-y: auto;
  }

  .grid-wrap.fixed-height {
    min-height: var(--size-80);
    max-height: 65vh;
  }

  /**
   * Styles for the grid container for multiple items.
   */
  .grid-container {
    display: grid;
    position: relative;
    grid-template-rows: repeat(var(--grid-rows), minmax(100px, 1fr));
    grid-template-columns: repeat(var(--grid-cols), minmax(100px, 1fr));
    grid-auto-rows: minmax(100px, 1fr);
    gap: var(--spacing-lg);
  }

  /**
   * Styles for single-item view wrapper.
   */
  .single-item-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    padding: var(--spacing-xxl);
    box-sizing: border-box;
  }

  .single-item-wrapper .gallery-item-with-name {
    width: 100%;
    height: 100%;
    max-width: min(300px, 80vw);
    max-height: min(320px, calc(80vh - var(--size-4)));
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .single-item-wrapper .gallery-item {
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
  }

  .single-item-wrapper .thumbnail-item.thumbnail-lg {
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
  }

  .single-item-wrapper .thumbnail-filename {
    height: var(--size-4);
    line-height: var(--size-4);
  }

  .single-item-wrapper .thumbnail-lg > :global(img),
  .single-item-wrapper .thumbnail-lg > :global(video) {
    object-fit: var(--object-fit) !important;
  }

  /**
   * Styles for large thumbnails in the grid or single-item view.
   */
  .thumbnail-lg > :global(img),
  .thumbnail-lg > :global(video) {
    width: var(--size-full);
    height: var(--size-full);
    overflow: hidden;
    object-fit: var(--object-fit);
  }

  .thumbnail-lg:hover .caption-label {
    opacity: 0.5;
  }

  /**
   * Styles for captions in the grid or single-item view.
   */
  .caption-label {
    position: absolute;
    right: var(--block-label-margin);
    bottom: var(--block-label-margin);
    z-index: var(--layer-1);
    border-top: 1px solid var(--border-color-primary);
    border-left: 1px solid var(--border-color-primary);
    border-radius: var(--block-label-radius);
    background: var(--background-fill-secondary);
    padding: var(--block-label-padding);
    max-width: 80%;
    overflow: hidden;
    font-size: var(--block-label-text-size);
    text-align: left;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .grid-wrap.minimal {
    padding: 0;
  }

  /**
   * Styles for gallery items with associated filenames.
   */
  .gallery-item-with-name {
    display: flex;
    flex-direction: column;
    gap: var(--size-1);
    width: 100%;
    height: 100%;
  }

  .thumbnail-filename {
    font-size: var(--text-xs);
    color: var(--body-text-color);
    text-align: center;
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    padding: 0 var(--size-1);
  }

  .gallery-item {
    position: relative;
    width: 100%;
    height: 100%;
  }

  /**
   * Styles for the metadata popup displayed in preview mode.
   */
  .metadata-popup {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: var(--background-fill-primary, white);
    border: 1px solid var(--border-color-primary);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    z-index: 1000;
    border-radius: 8px;
    max-width: min(90%, 600px);
    max-height: min(50vh, calc(100% - 2rem));
    min-height: 200px;
    display: flex;
    flex-direction: column;
    pointer-events: auto;
  }

  .popup-content {
    padding: 1rem;
    display: flex;
    flex-direction: column;
    width: 100%;
    box-sizing: border-box;
    overflow-y: auto;
    position: relative;
  }

  .close-button {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    background: none;
    border: none;
    font-size: 1.25rem;
    cursor: pointer;
    z-index: 20;
    color: var(--body-text-color);
    padding: 0.25rem;
    line-height: 1;
    width: 24px;
    height: 24px;
    text-align: center;
  }

  .popup-title {
    font-weight: bold;
    margin: 0 0 1rem 0;
    flex-shrink: 0;
    padding-right: 2.5rem;
  }

  .metadata-table-container {
    flex-grow: 1;
    overflow-y: auto;
    max-height: calc(100% - 5rem);
    min-height: 0;
    margin-bottom: 1rem;
  }

  .metadata-table {
    width: 100%;
    border-collapse: collapse;
    table-layout: auto;
  }

  .metadata-label {
    background: var(--background-fill-secondary, #f5f5f5);
    padding: 0.5rem;
    font-weight: bold;
    text-align: left;
    vertical-align: top;
    width: 35%;
  }

  .metadata-value {
    text-align: left;
    padding: 0.5rem;
    white-space: pre-wrap;
    word-break: break-all;
    vertical-align: top;
  }

  .load-metadata-button {
    margin-top: 1rem;
    padding: 0.5rem 1rem;
    background-color: var(--button-primary-background-fill);
    color: var(--button-primary-text-color);
    border: none;
    border-radius: 4px;
    cursor: pointer;
    align-self: center;
    flex-shrink: 0;
  }

  .load-metadata-button:hover {
    background-color: var(--button-primary-background-fill-hover);
  }

  .no-metadata-message {
    flex-grow: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--body-text-color-subdued);
  }
