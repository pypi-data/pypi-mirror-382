[project]
name = "cased-sandboxes"
version = "0.2.2"
description = "Universal library for AI code execution sandboxes"
authors = [
    { name = "Sandboxes Contributors", email = "ted@cased.com" }
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/cased/sandboxes"
repository = "https://github.com/cased/sandboxes"
documentation = "https://github.com/cased/sandboxes"
keywords = ["sandbox", "ai", "code-execution", "e2b", "modal", "daytona", "vercel", "cloudflare"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11"

dependencies = [
    "typing-extensions>=4.0.0",
    "click>=8.0.0",
    "tabulate>=0.9.0",
    "modal>=1.1.4",
    "e2b>=2.0.0",
    "daytona>=0.103.0",
    "httpx>=0.27.0",
]

[project.optional-dependencies]
daytona = [
    "daytona==0.103.0",  # Official Daytona SDK - latest stable version
]
e2b = [
    "e2b>=2.0.0",  # Regular E2B SDK for standard Linux sandboxes
]
modal = [
    "modal==1.1.4",  # Latest stable version
]
# vercel = [
#     "vercel-sdk>=0.1.0",  # When available
# ]
# cloudflare = [
#     "cloudflare-workers-sdk>=0.1.0",  # When available
# ]
all = [
    "daytona==0.103.0",
    "e2b>=2.0.0",
    "modal==1.1.4",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]

[project.scripts]
sandboxes = "sandboxes.cli:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["sandboxes"]

[tool.hatch.build]
exclude = [
    ".claude/",
    "benchmarks/",
    "tests/",
    "scripts/",
    "examples/",
]

[dependency-groups]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "ipython>=8.0.0",
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C90",   # mccabe complexity
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "SIM",   # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "B905",  # `zip()` without an explicit `strict=` parameter
    "C901",  # function is too complex (mccabe complexity)
]

[tool.ruff.lint.isort]
known-first-party = ["sandboxes"]

[tool.black]
line-length = 100
target-version = ["py311", "py312"]

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
check_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
]
testpaths = ["tests"]
pythonpath = ["."]
markers = [
    "integration: marks tests as integration tests requiring external APIs (deselect with '-m \"not integration\"')",
    "e2b: marks tests that require E2B API",
    "modal: marks tests that require Modal API",
    "daytona: marks tests that require Daytona API",
    "cloudflare: marks tests that require Cloudflare API",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
branch = true
source = ["sandboxes"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
