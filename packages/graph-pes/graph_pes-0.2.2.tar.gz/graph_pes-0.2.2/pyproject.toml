[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "graph-pes"
version = "0.2.2"
description = "Potential Energy Surfaces on Graphs"
readme = "README.md"
authors = [{ name = "John Gardner", email = "gardner.john97@gmail.com" }]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
keywords = []
dependencies = [
    "torch",
    "pytorch-lightning",
    "ase",
    "numpy",
    "rich",
    "dacite",
    "e3nn==0.4.4",
    "scikit-learn",
    "locache>=4.0.2",
    "load-atoms>=0.3.9",
    "wandb",
    "data2objects>=0.1.0",
    "vesin>=0.3.2",
]
requires-python = ">=3.9"


[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
docs = [
    "sphinx",
    "furo",
    "nbsphinx",
    "sphinxext-opengraph",
    "sphinx-copybutton",
    "sphinx-design",
]
publish = ["build", "twine"]

[project.scripts]
graph-pes-train = "graph_pes.scripts.train:main"
graph-pes-test = "graph_pes.scripts.test:main"
graph-pes-resume = "graph_pes.scripts.resume:main"
graph-pes-id = "graph_pes.scripts.id:main"

[project.urls]
Homepage = "https://github.com/jla-gardner/graph-pes"

[tool.bumpver]
current_version = "0.2.2"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "{old_version} -> {new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
"src/graph_pes/__init__.py" = ["{version}"]
"docs/source/conf.py" = ['release = "{version}"']
"src/graph_pes/graph_pes_model.py" = [
    'self._GRAPH_PES_VERSION: Final\[str\] = "{version}"',
]
"CITATION.cff" = ['^version: {version}$']

[tool.ruff]
line-length = 80
indent-width = 4
target-version = "py38"
extend-include = ["*.ipynb", "*.pyi", "*.toml"]

[tool.ruff.lint]
select = ["E", "F", "UP", "B", "SIM", "I"]
ignore = ["SIM300", "E402", "E703", "F722", "UP037", "F821", "B018", "E741"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "def _repr",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "\\.\\.\\.",
    "except ImportError",
    "if TYPE_CHECKING",
    "raise NotImplementedError",
    "if __name__ == '__main__':",
]

# allow for coverage to find relevant files in both src/ and */site-packages
# so that we can install the package both normally and in editable mode, and 
# still get coverage for both cases using `pytest --cov`
[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["graph_pes"]
omit = ["*/graph_pes/interfaces/*"]

[tool.pytest.ini_options]
# ignore all warnings coming from the pytorch_lightning package
filterwarnings = [
    "ignore::DeprecationWarning:pytorch_lightning",
    "ignore::DeprecationWarning:lightning_fabric",
    "ignore::DeprecationWarning:lightning_utilities",
    "ignore::DeprecationWarning:pkg_resources",
    "ignore::DeprecationWarning:torchmetrics",
    "ignore::UserWarning:pytorch_lightning",
    "ignore:.*The TorchScript type system doesn't support instance-level annotations on empty non-base types.*",
]
norecursedirs = "tests/helpers"

[dependency-groups]
dev = [
    "bumpver>=2024.1130",
 "notebook>=7.3.2",
 "pre-commit>=4.3.0",
 "ruff",
 "sphinx-autobuild",
]
