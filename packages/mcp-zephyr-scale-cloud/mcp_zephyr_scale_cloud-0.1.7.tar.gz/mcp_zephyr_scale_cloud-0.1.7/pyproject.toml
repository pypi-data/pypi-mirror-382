[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]
name = "mcp-zephyr-scale-cloud"
version = "0.1.7"
description = "Model Context Protocol server for Zephyr Scale Cloud"
authors = [
    {name = "Yevhen Burlaka", email = "yevhen.burlaka@example.com"}
]
readme = "README.md"
requires-python = ">=3.10"
keywords = ["mcp", "zephyr", "scale", "testing", "jira"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "mcp>=1.0.0",
    "httpx>=0.28.1",
    "pydantic>=2.11.7",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0",
    "pytest-asyncio>=1.1.0",
    "pytest-httpx>=0.35.0",
    "black>=25.1.0",
    "isort>=6.0.0",
    "mypy>=1.17.0",
    "ruff>=0.12.0",
]

[project.urls]
Homepage = "https://github.com/basterboy/mcp-zephyr-scale-cloud"
Repository = "https://github.com/basterboy/mcp-zephyr-scale-cloud"
Issues = "https://github.com/basterboy/mcp-zephyr-scale-cloud/issues"

[project.scripts]
mcp-zephyr-scale-cloud = "mcp_zephyr_scale_cloud.server:main"

[tool.poetry]
name = "mcp-zephyr-scale-cloud"
version = "0.1.7"
description = "Model Context Protocol server for Zephyr Scale Cloud"
authors = ["Yevhen Burlaka <yevhen.burlaka@example.com>"]
readme = "README.md"
packages = [{include = "mcp_zephyr_scale_cloud", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
mcp = "^1.0.0"
httpx = "^0.28.1"
pydantic = "^2.11.7"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
pytest-asyncio = "^1.1.0"
pytest-httpx = "^0.35.0"
pytest-cov = "^6.0.0"
black = "^25.1.0"
isort = "^6.0.0"
mypy = "^1.17.0"
ruff = "^0.12.0"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]