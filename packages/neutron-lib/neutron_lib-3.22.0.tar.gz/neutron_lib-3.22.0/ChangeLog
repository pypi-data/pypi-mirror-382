CHANGES
=======

3.22.0
------

* Add extension "router-enable-snat"
* Update master for stable/2025.2
* Disable flake8 plugins by default
* Add ETHERTYPE\_FIELD\_SIZE constant
* Replace "tenant" with "project"

3.21.1
------

* Remove url tags from README
* tox: Remove basepython and ineffective ignore\_basepython\_conflict
* Add the hacking checks to the entry points

3.21.0
------

* Add ALLOWED\_ADDRESS\_PAIR to the callbacks resources
* Add "has\_global\_access" attribute to the context object
* sqlalchemy: Use built-in declarative

3.20.0
------

* Remove constants for LBaaS
* Prepare migration of NetworkMTUSubnetConflict
* Fix documentation for gateway\_ip in subnet update
* Replace deprecated is\_advsvc
* tests: Stop using ddt
* pre-commit: Migrate pep8 target to pre-commit
* pre-commit: Bump versions
* Move mypy configuration to pyproject.toml
* api-ref: Remove crud from conf.py
* api-ref: Add warning about DRA scheduler
* zuul: Don't run neutron-functional for api-ref changes

3.19.0
------

* add pyproject.toml to support pip 23.1
* Update master for stable/2025.1
* taas: Split direction enum

3.18.2
------

* Fix \`\`external-gateway-multihoming\`\` API extension definition
* Fix the router "external\_gateway\_info" validation

3.18.1
------

* Revert "Change the \`\`StandardAttribute\`\` load method to "selectin""

3.18.0
------

* [API-REF] Add clarification about QinQ and transparent vlan differences
* vpnaas: add support for AES CTR
* Deprecate is\_bsd and remove its use in test suite
* Bump mypy to 1.14.1 (the latest)
* Enable mypy pre-commit hook
* Enable mypy for pep8 tox target
* Fix network-ip-availability API samples

3.17.0
------

* Support project\_id and project\_name in ContextBase class
* Change parent for the VlanTransparencyDriverError
* Add check\_vlan\_qinq method to the ML2 MechanismDriver base class
* Add VlanQinqDriverError exception
* api-ref: explain nested SNAT behavior is backend specific
* Add definition of the 'qinq' api extension
* VPNaaS-related device owner definitions
* Switch to neutron-functional job
* Add resource and collection name in uplink-status-propagation-updatable
* Remove default override for config options policy\_file
* reno: Update master for unmaintained/2023.1
* nit: Drop mentions of postgresql
* Define physical and tunnelled network types
* pyupgrade changes for Python3.9+
* Add note about requirements lower bounds
* Add "allocation" constant for port resource allocation requests
* Use py312 for all neutron-lib jobs
* Add constant for neutron-ovn-agent process name

3.16.0
------

* Do not define the executor of the RPC server
* Skip pylint recommendation "too-many-positional-arguments"
* Add new API extension \`\`uplink-status-propagation-updatable\`\`
* Add port trusted vif extension
* Fix 'flavor' misspelling in VPN flavors
* Add API extension \`\`quota-check-limit-default\`\`
* Update master for stable/2024.2
* Deprecate get\_notifier(service=None)

3.15.0
------

* Fix python modules docs build
* Add API extension \`\`tag-creation\`\`

3.14.1
------


3.14.0
------

* Missing required extension in 'subnet-external-network'
* Change the \`\`StandardAttribute\`\` load method to "selectin"
* Don't add tenant\_id to all resources during create request
* api-ref: Add delete port bindings
* Add start\_rpc\_listeners() to MechanismDriver
* Add the ability to define the \`\`BaseWorker.set\_proctitle\`\` flag
* Add the field "rbac\_actions" to the model query hooks
* Add neutron unit test job in check queue

3.13.0
------

* typos: suport -> support; suports -> subports
* Add 'selectin' as a supported lazy relationship attribute
* [api-ref] Add note about no validation of the target\_tenant in RBAC API
* Revert "Always expect project\_id and tenant\_id to be in the attributes list"
* api: canonicalize ipv6 addresses in \`subnet:allocation\_pools\` field
* Always expect project\_id and tenant\_id to be in the attributes list
* tests: return same message for validate\_[subnet\*|route\_cidr]

3.12.0
------

* Catch all exceptions in convert\_ip\_to\_canonical\_format
* pep8: enforce test file names
* Remove old excludes
* reno: Update master for unmaintained/zed
* Add pre-commit configuration
* Remove executable from python files which don't really needs it
* Document BGPVPN list API filters
* Fix incorrect links for the filtering spec
* api-ref: add api-ref for remote\_address\_group in sg rules
* Enable filtering flag in subnet 'router:external' field
* Update master for stable/2024.1
* reno: Update master for unmaintained/xena
* reno: Update master for unmaintained/wallaby
* reno: Update master for unmaintained/victoria
* [netaddr>=1.0.0] Do not use netaddr.core.ZEROFILL flag with IPv6
* Skip the enforcer undefined rule check

3.11.0
------

* [S-RBAC] Add note about port:binding:profile field and SERVICE role
* rpc: reuse existing defaultdict when setting max\_timeout
* rpc: initialize notifier when get\_notifier is called
* rpc: don't explicitly pass access\_policy
* rpc: explain how get\_notifier arguments actually work
* rpc: fix some typos
* Add "socket" NUMA affinity policy
* Add extension "subnet-external-network"
* reno: Update master for unmaintained/yoga
* tox: Drop envdir
* Remove unused reno from test requirements
* Replace CRLF by LF
* Add Tap Mirror exception
* Tap mirror API def and API ref
* Python-3.12: do not use datetime.datetime.utcnow()
* [sqlalchemy-20] Use sqlalchemy.orm.DeclarativeBase
* Bump hacking
* Cleanup setup.py and requirements
* Add some neutron constants
* Add api-ref about SG rule bulk create
* Remove constants for LBaaS(v2)

3.10.0
------


3.9.0
-----

* Switch to py311 sqlalchemy master job
* Remove unmaintained API report tooling
* api-ref: Document only unbound ports vnic\_type updates
* Change test\_sqlalchemytypes.py to support sqlalchemy 2.0
* vpnaas: add support for more ciphers (auth, encryption, pfs modes)
* Add the "cancellable" flag to the \`\`CallbacksManager\`\` events
* Imported Translations from Zanata
* Update master for stable/2023.2
* Update default for BFD/ECMP router extra attributes

3.8.0
-----

* api-ref: Move sfc api-ref to neutron-lib
* Revert "Add "network" to the EXT\_PARENT\_RESOURCE\_MAPPING"
* Add RP\_TUNNELLED and TRAIT\_NETWORK\_TUNNEL constants
* Add new callbacks event for resouce status update
* Fix the default value for \`\`hardware\_offload\_type\`\` field
* Removed \`\`HasProjectPrimaryKeyIndex\`\` class
* Add is\_service\_role property to the context class

3.7.0
-----

* Add short warning about UUIDs in the SG rule templates api
* Add "network" to the EXT\_PARENT\_RESOURCE\_MAPPING
* Add subnet onboard API ref
* Add port hardware offload extension
* Remove unnecessary required extension for "network\_ha" extension
* Add new SG rule ext. \`\`security-groups-rules-belongs-to-default-sg\`\`
* Add FirewallGroupPortNotSupported exception
* api-ref: add api-ref for bindings
* [API REF] Add api-ref documentation for default SG rules API
* Add a "GROUP BY" clause on queries with RBAC entries
* Add FIPAssociated exception

3.6.1
-----

* Context.elevated() method sets all required roles for context object

3.6.0
-----

* New \`\`network-ha\`\` API definition
* Remove an unused exception
* DPDK datapath type added
* Introduce "HasProjectPrimaryUniqueKey" class
* Add a shim extension standard-attr-fwaas-v2
* port-hint-ovs-tx-steering: Add missing api-ref response sample
* Drop "\_\_autocommit=False" from context manager
* New api-def: allowedaddresspairs-atomic
* ext-gw-multihoming: api-def and api-ref
* doc: Remove fwaas v2 deprecation message
* FUP Suppress IPv6 metadata DAD failure and delete address

3.5.0
-----

* Return properly elevated context by get\_admin\_context() helper
* port-hints: api-ref: Add field length limitation
* api-ref: describe which protocols are enabled for stateless SG
* api-ref: add semantics for stateless security group api
* Update master for stable/2023.1
* Remove unused rbac rule
* [sqlalchemy-20] Use Connection.execute() instead of Engine.execute()
* port-hint-ovs-tx-steering: api definition

3.4.0
-----

* Use new get\_rpc\_client API from oslo.messaging
* port-hints: api definition
* Fix pep8 errors with pytlint v2.16.0
* [sqlalchemy-20] Use \`\`Session.get\_transaction()\`\`
* api-ref: Add dragent scheduler api-ref
* [sqlalchemy-20] Fix import of "ASSOCIATION\_PROXY"
* Update envlist for tox4
* api-ref: fix nits in BGP-Speaker api-ref
* add DEVICE\_OWNER\_MANILA\_PREFIX to constants
* [ovn]Floating IP adds distributed attributes
* Fix a few broken links in api-ref
* Support tox4

3.3.0
-----

* "convert\_to\_sanitized\_mac\_address" accepts netaddr.EUI type values
* User "sha1" with "usedforsecurity=False"
* Do not set system scope on context

3.2.0
-----

* Add bandwidth rate limit table
* Update URL for flake8 from Gitlab to Github
* Don't check context.system\_scope to check project scope
* Added "qos" plugin to "EXT\_PARENT\_RESOURCE\_MAPPING"
* Add warning about mtu update and libvirt limitation
* Document that binding:profile is for compute services only
* Add enforce\_policy on device\_id parameter
* Api-ref: Add note that only VLAN segmentation-id can be changed
* Add flows tables for distributed metadata datapath
* Use oslo\_context.from\_dict() for context generation
* Fix missed six library items in .pylintrc
* Switch to 2023.1 Python3 unit tests and generic template name
* Update master for stable/zed
* Add DSCP mark 44
* Fix pep8 job issues with pylint==2.15.0

3.1.0
-----

* Add floating-ip-port-forwarding-detail shim extension
* Update meaning for router:external
* Network Cascade Deletion Extension
* [sqlalchemy-20] Use session.transaction information to decide if active

3.0.0
-----

* Remove unused placement constants
* Rehome ovsfw constants and utils modules
* Revert "Introduce new bgp\_associations API definition"
* Check proper config option to see if scope is enforced or not
* Correct error on unbound ports GET request
* Update python testing as per zed cycle teting runtime

2.21.0
------

* fix pep8 error
* Doc: Add note for subnet creation
* Drop lower-constraints.txt and its testing
* Remove unimplemented api-def: BFD monitors
* Refactor session "is\_active" handling for sqlalchemy-20
* Add "neutron-tempest-plugin-jobs" to CI
* Remove unimplemented api-def: multiple-external-gateways
* Don't translate logs
* doc: add local-ip api-ref to index
* Doc: Add router gateway IP QoS to api-ref
* Add oslo\_policy.InvalidScope exception to the api faults map
* Rehome missing ovs constants into neutron-lib
* Remove unused code
* Add port-mac-address-override shim extension
* Add Python3 zed unit tests
* Add NumaAffinityPoliciesEnumField class unit tests
* Add custom range parameters on port\_range validator
* Rehome \`\`NumaAffinityPoliciesEnumField\`\`
* [test]Remove the validation of the tenant property
* Support binding floating ip to smart-nic port
* Update master for stable/yoga
* Rehome exception \`\`L3ExtensionException\`\`

2.20.0
------

* api-ref for ndp proxy
* Add filter flags for QoS rule types
* Add VNIC\_REMOTE\_MANAGED for off-path backends
* Add "connectivity" property to "MechanismDriver"

2.19.0
------

* Move API definitions of taas to neutron-lib
* remove unicode from code
* Enforce policy for qos\_policy\_id attribute
* Add "get\_workers" method to "QuotaDriverAPI" class
* Fix collect duplicates TypeError for dict values
* Add api-ref for tap service and tap flow

2.18.1
------

* Log resource id in the callbacks publish method
* Remove import statement for six
* Rehome ovs related constants to the separate module

2.18.0
------

* Allow to pass custom reason in NetworkInUse exception
* Add new method "update\_network" to "L3AgentExtension"
* Replace "target\_tenant" with "target\_project" in RBAC OVOs and models
* Exception for BFD: BfdMonitorInUse
* Rehome QoS floating IP extension
* Add floating IP network QoS field to floating IP definition
* Make update\_qos\_minbw\_allocation() more generic

2.17.0
------

* Add Local IP constants needed for policy checks
* Move RULE\_TYPE\_MINIMUM\_PACKET\_RATE to neutron-lib
* Move QosPlacementAllocationUpdateConflict to neutron-lib
* Add oneline\_string validators
* Addition of status and name field to bgp\_associations API
* Add qos-pps-minimum-rule-alias api-def and api-ref
* BFD validator
* Add binding-profile.allocation converter

2.16.0
------

* Rehome \`\`QuotaDriverAPI\`\` class
* [Doc] Update callbacks guide
* Add API extension "security-groups-shared-filtering"
* Add default values in port forwarding port ranges definitions
* Bump requirements and disable f-string check
* Remove deprecated method registry.notify
* Add Python3 yoga unit tests
* Update master for stable/xena
* Add API shim extension "quota-check-limit"
* Set "cache\_ok=True" in all "TypeDecorator" derived classes
* Improve "get\_collection\_count" method
* Fix some api-ref typos
* Add Local IP constants and exceptions

2.15.0
------

* Fix hostroute validation with BFD
* Add Local IP API def
* Disable "oslo.messaging" metrics
* Add network\_ip\_availability pagging and sorting support
* Do not use deprecated attributes of RequestContext
* Add missing default "direction" value to "qos-pps-minimum"

2.14.0
------

* Add util to generate resource request group UUID
* Introduce new bgp\_associations API definition
* extension for adding bfd monitors to extraroutes
* Use explicit "dict\_or\_nodata" validation for "external\_gateway\_info"
* Move packet\_rate\_limit type to neutron-lib
* Fix url display in bpg\_speaker
* Add port-resource-request-groups shim API ext
* Rephrase QoSRuleParameterConflict message
* BFD api def
* Allow PUT on direction param in QoS minimum pps rule
* Add FlowDirectionAndAnyEnumField common type
* Add API extension definition for QoS minimum pps rule
* multi-ext-gw: api-def and api-ref

2.13.0
------

* Adds l3-ndp-proxy extension api definition
* [Docs] Add api-ref for the address groups
* Replace deprecated import of ABCs from collections
* Replace deprecated inspect.getargspec
* Add utils for parsing pkt processing cfg options
* Add a TODO note for resource classes constants
* Introduce rbac-bgpvpn api extension
* Fix pep8 check
* Rehome DHCP\_IPV{4,6}\_TABLE constants to neutron-lib
* Add Neutron's functional job to the neutron-lib's CI
* Revert "Add network parameter to some of the ML2 API methods"
* API "subnet-segmentid-writable" should inherit field definition
* [api-ref] Add HTTP 501 for PUT min bw QoS rule

2.12.0
------

* Adds API extension for QoS rule type pps
* Remove warning about session with and without enginefacade
* Use placement version allowing re-parenting RP update
* Change minversion of tox to 3.18.0
* setup.cfg: Replace dashes with underscores
* Move bgp api-def to neutron-lib
* Add "cache\_ok=False" flag to TypeDecorator TruncatedDateTime()
* Fix "abstractmethod" definitions and deprecate "abstractproperty"
* api-ref: trivial: fix requiered -> required typo
* Modify "port.mac\_address" API definition
* Allow lazy load in model\_query
* Fix pylint>=2.8.0 error R1732 "consider-using-with"

2.11.0
------

* Return one single model field in "get\_collection\_query"
* [api-ref] Add new 409 response entry of floating IP creation error
* Set confirm\_deleted\_rows=False to StandardAttribute obj
* Fix outdated output
* Correct wrong name of APIEventPayload's arg
* Add ExternalDNSOverQuota exception
* Rehome ovs related constants to the neutron-lib
* Add port-ranges on portforwarding api
* Set system\_scope='all' in elevated context
* Add Python3 xena unit tests
* Update master for stable/wallaby

2.10.1
------

* Update model\_query\_scope\_is\_project to work properly with new policies
* Add shim extension for ECMP

2.10.0
------

* Make neutron-lib aware about system scope tokens
* Populate full VLAN range in "parse\_network\_vlan\_ranges"

2.9.1
-----

* Add PLACEMENT\_REPORT plugin constant

2.9.0
-----

* Add shared attribute to address groups for RBAC
* Fix address groups API definition
* Add qos rule validation for network
* Introduce rbac-address-group api extension
* Remove "tag" and "tag-ext" extensions from "tags" documentation
* Add network parameter to some of the ML2 API methods
* Add description for the "tag-ports-during-bulk-creation" extension
* Add new VNIC types for Cyborg provisioned ports

2.8.0
-----

* Add desc support to the BaseWorker initialization
* Update TOX\_CONSTRAINTS\_FILE for master
* [goal] Deprecate the JSON formatted policy file
* New api-def: port-device-profile
* Update lower-constraints for new pip resolver
* Remove "autonested\_transaction" method
* Add const for ports bulk resource extenders

2.7.0
-----

* add vnic type vdpa
* Add address groups to callbacks resources
* Add address group in use exception
* Start running pylint for pep8 tests
* Add BRODCAST\_MAC constant with "FF:FF:FF:FF:FF:FF" value
* remove rc from allocation dict if value is 0
* Fix lower-constraints job for focal
* Add Python3 wallaby unit tests
* Update master for stable/victoria

2.6.0
-----

* New exception QosPlacementAllocationConflict
* Add placement client methods for allocations
* Add \`access\_as\_readonly\` sharing action
* Use importlib to take place of imp module
* Add remote\_address\_group\_id field in SG rules
* Add source\_ip\_prefix and destination\_ip\_prefix to metering label rules
* Deprecate 'remote\_ip\_prefix' parameter in metering label rules
* Log time of the apply\_func only if it took more than 0.1 second
* Fix: port attribute name propagate\_uplink\_status
* Add neutron-tempest-plugin-api job to be gating in neutron-lib

2.5.0
-----

* [api-ref] Added warning about overwriting router's default routes
* Change "propagate\_uplink\_status" default value to True
* New api-def: port-numa-affinity-policy
* Add address group exceptions
* Add DEVICE\_OWNER\_ROUTED constant
* API definition for SG group rules address groups
* Add API definition for SG rule's normalized\_cidr field
* Add "supported\_extensions" method to MechanismDriver
* Neutron agent-list API added with sort\_key keyword
* Change policy on neutron-lib migration
* Metadata addresses
* [FWaaS] Add note about deprecation of the neutron-fwaas project

2.4.0
-----

* Add new shim API extension for dns domain with keywords
* [OVN] Add distributed device\_owner
* Add agent process name constants alongside type
* [Docs] Note about port's binding\_profile update
* Correctly define DHCP port numbers for IPv4
* Check time to apply resource helper functions
* Migrate timecost decorator to neutron-lib
* Remove translation sections from setup.cfg
* Rehome abstract class LinuxInterfaceDriver definition
* Remove redefined constant
* Switch to newer openstackdocstheme and reno versions
* Fix policy enforcement for network mtu
* Add aggressive negotiation mode for ikepolicy
* Update to victoria jobs template
* Fix errors found by new pycodestyle
* Update to hacking 3.0
* Update master for stable/ussuri

2.3.0
-----

* Switch to hacking 2.0
* Use "unittest.mock" library and drop "mock" installation
* Add SubnetInUseByIPsecSiteConnection in vpnaas exception

2.2.0
-----

* Revert "Remove warning message when using old and new engine facade"
* Remove warning message when using old and new engine facade
* Fix definition of the fip\_pf\_description api extension
* Add is\_sort\_key for vpnaas attribute maps
* Remove TooManyExternalNetworks exception class
* Introduce rbac-subnetpool api extension
* Introduce rbac-address-scope api extension
* Update the minversion parameter

2.1.0
-----

* Extend qos DriverBase with validate\_rule\_for\_port()
* [Api-Ref][Docs] Change dns\_assignment parameter to be list
* Remove library "six"

2.0.0
-----

* Fix new parameter added in "qos\_port\_network\_policy" API
* Stop testing Python 2
* Extension for tagging ports during bulk creation

1.31.0
------

* Handle generation conflicts caused by concurrent updates
* Pass on missing implementation while filtering
* Add "qos\_network\_policy\_id" field to "port" definition

1.30.0
------

* add "stateful-security-group" api extension
* Change the requirements for the subnet\_dns\_publish\_fixed\_ip extension
* Add description field in port forwarding API
* Remove 'interconnection' API extension definition (neutron-interconnection)
* Stop configuring install\_command in tox
* Remove fwaas\_v1 exceptions and definitions
* Allow <project\_id>, <project\_name>, <user\_id> and <user\_name> as DNS label
* Fix rendering of api-ref main page
* install neutron\_lib international messages
* Add retry and debug logs to NoAuthClient of placement client
* Add missing DHCP port numbers
* Update master for stable/train
* Remove Neutron LBaaS
* PDF documentation build

1.29.1
------

* Introduce new member actions additively

1.29.0
------

* New api-def: extraroute-atomic
* Ensure that extended ethertypes still work by name
* Update api-ref location
* Mention that list of e.g. IDs is supported in GET requests
* Update api-ref location / version
* Add ethertype validator for custom ethertype validation
* Fix - L3 Conntrack Helper validator
* Filter placement API endpoint by type too
* Only have one number to name mapping for IPv6 ICMP
* Add shim extension admin\_state\_down\_before\_update
* Add Python 3 Train unit tests

1.28.0
------

* make sql fixtures public
* Update flake8 style enforcement
* Introduce NetworkAddressScopeAffinityError
* Loopback address routing should be invalid
* Add new vif\_details parameters
* Fix subnet\_dns\_publish\_fixed\_ip extension
* Add 'dns\_publish\_fixed\_ip' attribute to Subnet
* Add rarp protocol for neutron constants
* Add conntrack helper to parent resource mapping
* placement client: fix routed prov networks working
* [api-ref] Update info about internal\_ip\_address in FIP port forwarding
* [api-ref] Add short warning about ANY IP address in allowed address pair
* fix doc periodic log url

1.27.0
------

* sync sql fixtures from neutron
* Cap sphinx for py2 to match global requirements
* Update Python 3 test runtimes for Train
* Add sort\_keys retrieving function
* Blacklist bandit 1.6.0 due to directory exclusion bug
* use once rather than always for filterwarnings
* Use AssociationProxyInstance instead of AssociationProxy
* Update hacking version
* Replace git.openstack.org URLs with opendev.org URLs
* OpenDev Migration Patch
* Remove "tags" listed in Create port POST api-ref

1.26.0
------

* update db fixtures for consumption testing
* Add noauth option for placement client
* Dropping the py35 testing
* L3 Conntrack Helper Extension
* remove use of legacy modules
* fix WarningsFixture for public consumption
* Rehome provider\_network\_attribute\_updates\_supported to API definition
* Adds PORT\_FORWARDING\_FLOATINGIP\_KEY
* rehome neutron.objects.common\_types
* Change exception types in network\_segment\_range
* rehome neutron.objects.logapi.event\_types
* Fix a typo
* Add 'IP' and 'HOPOPT' protocols to constants
* rehome neutron.objects.extensions.standardattributes
* rehome neutron.db.standard\_attr
* rehome model\_query function
* Update master for stable/stein
* standard-attr for network-segment-range api-ref
* Add methods for network segment range support
* rehome subnet service types extension
* api-ref: remove 'external\_network\_bridge' from agent
* Allow filtering/sorting by the 'mtu' field
* rehome used neutron.tests.tools

1.25.0
------

* rehome sqlalchemytypes
* Introduce subnet pool prefix operations extension
* Add exception to prevent overlapped segment ranges
* Add NETWORK\_SEGMENT\_RANGE plugin constant
* Remove ml2's accidental dependency on l3
* 'interconnection' API extension definition (neutron-interconnection)
* rehome trunk service constants
* Catch only MessageDeliveryFailure exceptions
* Add security-group as parameter to RBAC api
* Rehome base upgrade checks class
* Remove neutron\_lib.db from db profiling projects
* Add policy module to neutron-lib
* Add setproctitle support to the workers module
* add python 3.7 unit test job
* Bump lower version of oslo.db to one that includes jitter argument
* rehome remaining common constants

1.24.0
------

* Add traffic control constants
* Exceptions for: Drive binding by placement allocation
* rehome trunk related callback resource names
* Delete floating IPs on network turned internal
* Increase tempest-full jobs timeout to 3h
* Fix exception logging formatting

1.23.0
------

* Fix pep8 E126
* Add missing ws seperator between words
* Extend methods for network segment range support
* doc neutron-lib current
* Remove unnecessary attributes and specs from subnet\_onboard API
* New agent attribute: resources\_synced
* Use oslo.db jitter in our db retries
* Move network segment range types to lib constants
* Rehome constant: DHCPV6\_CLIENT\_PORT

1.22.0
------

* Add smartnic port type to VNIC\_TYPES
* api-ref: document network-segment-range extension
* Fix the misspelling of "interface"
* Modify the judgment method of CIDR and Add utests
* Add network-segment-range extension API definition
* sync neutron.common.exceptions into neutron-lib
* Add a new configuration parameter rpc\_response\_max\_timeout
* rehome db api orm event listener functions
* Revert "Add function helpers.compare\_dict"
* Add traffic control exceptions
* api-ref: document uplink status propagation
* Handle ValueError in canonical address convertion
* Update devel info: mailing list
* Add RouterNotFoundInRouterFactory exception
* Change openstack-dev to openstack-discuss
* Add function helpers.compare\_dict

1.21.0
------

* Fix QoS alias api definition
* Fix default value of subnet attribute for subnet onboard
* context: Warn on mixed uses of old and new db methods
* Support fetching specific db column in OVO
* Placement client: improve Placement 4xx exceptions
* Placement client: do not swallow exceptions
* Placement client: clean up docstrings
* rehome get\_updatable\_fields into object utils
* Add ipv6 canonical address converter to API
* Check if a port can be bound to a virtual bridge
* fix DBResourceExtendFixture fixture
* Update min tox version to 2.3.2
* Adapt to changed resource class names
* Add shim extension l3-port-ip-change-not-allowed

1.20.0
------

* Disable port number 0 for floating IP port\_forwarding
* Support custom filters in OVO
* rehome the resource\_extend db module
* Fix random\_mac\_generator to make proper EUI64s
* Allow advsvc role to create port in foreign tenant
* Add api-ref for qos-rules-alias extension
* Use QoS constants definitions
* Define qos-rules-alias extension
* Use authorize instead of enforce in policy
* build universal wheels
* PlacementAPIClient.update\_resource\_class client call missing argument
* Let Neutron enforce rule on create\_subnet with segment\_id [neutron-lib part]

1.19.0
------

* Fix port\_range\_max attribute definition
* policy-in-code support in neutron-lib
* Switch to oslo\_messaging.ConfFixture.transport\_url
* Use templates for cover and lower-constraints
* Fix placement\_client max microversion
* Show is\_default as a valid parameter for subnet pool creation
* Fix the mistake of lbaas api-ref
* add lib-forward-testing-python3 test job
* add python 3.6 unit test job
* switch documentation job to new PTI
* import zuul job settings from project-config
* api-ref: Add port-resource-request extension
* Add is\_filter to network\_ip\_availability
* Introduce Port resource request extension
* Mechanism driver API: resource\_provider\_uuid5\_namespace
* Placement: utils
* Placement: constants
* Placement client: move to neutron\_lib.placement
* Placement client: optional RP generations
* Placement client: ensure\_resource\_provider
* Placement client: always return body
* Update list of skipped bandit plugins
* api-ref: document floating ip pools endpoint
* Add 'project\_default' attribute to Network
* Update the segment api extension
* Make the DB retry mechanism more robust
* api-ref, fwaas-v2: Remove 'status' from request
* Adds qos-gateway-ip extension api definition
* Add 'is\_filter' and 'is\_sort\_key' to fip pf attributes
* api-ref for floating IPs port forwardings
* Add keyword 'is\_filter' to binding extended
* Update reno for stable/rocky
* Mac learning extension description
* Add is\_filter to port\_mac\_address\_regenerate
* net\_utils: Add a random mac generator
* Ingress direction for min bandwidth rule

1.18.0
------

* Rehome get\_port\_binding\_by\_status\_and\_host
* Add shim extension filter-validation
* rehome rpc and related plumbing
* Add shim extension sort-key-validation
* Extend port\_forwardings field in Floatingip response
* Mechanism driver API: responsible\_for\_rsc\_provider
* Add two fields to NeutronDbObjectDuplicateEntry

1.17.0
------

* Shim extension - segments peer subnet host routes, and api-ref
* Add a shim extension availability\_zone\_filter
* Add the two missing 'is\_filter' keyword
* Add support to regenerate port mac\_address
* Add release notes link to README
* Cleanup unused key-value in the attribute of l3
* Add bandit to pep8 gate
* remove CORE and L3 from neutron\_lib.constants
* rehome port-security-groups-filtering api extension
* Modify the type of subnet in the api-ref

1.16.0
------

* Fix badly formatted log when adding extension
* Add the floatingip pools extension
* fix tox python3 overrides
* tell flake8 to ignore unicode
* Add attribute propagate\_uplink\_status to port
* Documenting DHCP agent scheduler
* Remove os-testr from lower-constraints
* Remove os-testr from test-requirements
* Add a shim extension standard-attr-segment
* api-ref: add availability\_zone extension

1.15.0
------

* Fix list\_resource\_providers filters
* Switch to stestr
* Add DHCP\_OPT\_CLIENT\_ID\_NUM
* bgpvpn API definition: add API\_PREFIX
* Annotate sort\_key parameters for all resources
* Annotate filter parameters for all resources
* Update api-ref to reflect update allowed for subnet segment\_id
* api-ref: document sorting parameters for address scope
* api-ref: add 'project\_id' as sort\_key
* Add API extensions to advertise support of std attributes for BGPVPN
* Adding tags to responses for relevant resources
* Documenting L3 agent scheduler
* api-ref: add filter parameters to agents
* api-ref: add filter parameters to resource management
* api-ref: several fixes on security group rules
* Adding qos policy to the different port and network operations
* Introduce API definition of Floating IP Port Forwarding
* Add empty-string-filtering API extension
* Documenting L3 External gateway mode
* Add timestamp attributes to standard resources
* api-ref: add filter parameters to rbac
* api-ref: document sorting for resource management
* Add port bindings to RPC topics resources
* 'sfc' and 'flowclassifier' API extension definitions (networking-sfc)
* Add documentation for callback priority

1.14.0
------

* Document L3 HA extension
* api-ref: document the address scope extension
* fix docs/links for 1.14.0 release
* fix vpnaas subnet\_list\_or\_none type
* api-ref: document sorting for qos resources
* api-ref: document sorting for log management
* api-ref: document sorting parameters for l2
* Fix requirements for api-ref
* Trivial: Update pypi url to new url
* Add API extension fip-port-details
* rehome model\_query and its dependencies
* api-ref: several fixups on the rbac policies
* api-ref: some fixes on metering labels and rules
* Add placement calls for bandwith resource provider
* api-ref: document sorting parameters for security
* Document QoS bandwidth limit direction extension
* Fix placement calls in placement client
* api-ref: add the missing samples in floatingips
* API attribute processing: allow to populate dict attribute default values
* API attribute processing: add 'default\_overrides\_none'
* Rehome unstable\_test decorator
* rehome db api
* remove debtcollector from requirements
* rehome get\_deployment\_physnet\_mtu into plugin utils
* fix tox release note generation
* Documenting l3\_flavors extn in api-ref
* api-ref: document sorting parameters for l3
* versioned object plugin registry
* Fix pep8 errors
* Documenting subnet\_allocation extension
* Annotate network parameters for sort\_key
* Annotate all the filter parameters for networks
* Documenting Router service type ID
* Remove the ensure\_dir
* remove the unused neutron\_lib.api.utils module
* rehome qos bw limit direction api def
* ut updates for extending sub-resources
* api-ref: document sorting parameters for networks
* fix lower constraints to match requirements
* Remove LABEL from API definitions
* Add the missing response parameters to network
* rehome used db utils
* Follow the new PTI for document build
* Updated from global requirements
* fix typos in parameters.yaml
* add lower-constraints job
* callback: priority to specify calling order
* rehome create functions from plugin utils
* api-ref: add filter parameters to trunk
* api-ref: add filter parameters to qos
* api-ref: add filter parameters to segment
* api-ref: add filter parameters to SG and rules
* api-ref: add filter parameters to log
* Updated from global requirements
* api-ref: correct the list of taggable resources
* Fix binding:profile parameter type in API reference
* Subnet segment\_id writable extension
* Updated from global requirements
* Add prefixlen to subnet api-ref for create actions
* Updated from global requirements
* Remove tools/tox\_install.sh
* Reorder and capitalize the list of extensions in ports, networks and routers
* Fix the description of some parameters
* api-ref, bgpvpn API extension: update status
* Imported Translations from Zanata
* Add new Resource Provider functions to placement client
* api-ref: add filter parameters to router
* api-ref: add filter parameters to floatingip
* api-ref: add filter parameters to subnetpool
* api-ref: add filter parameters to subnet resource
* api-ref: add filter parameters to port resource
* api-ref: add filter parameters to networks
* Updated from global requirements
* Remove repeated parameter from floatingip
* Documenting L2 adjacency extension
* Update url links in README.rst
* Document the error code on conditional update/delete
* Documenting QoS default policy extension
* Change name of test file
* Change some parameters in path to be required
* Documenting ip\_allocation extension in api-ref
* Mark neutron-lbaas as deprecated
* Document extra\_dhcp\_opt extension in api-ref
* Adding DVR extension docs in routers api-ref
* Documenting network\_availability\_zone extension
* Document subnet\_service\_types extension in api-ref
* [Api-ref] Cleanup parameters.yaml
* Migrate neutron-vpnaas API definitions to neutron-lib
* Imported Translations from Zanata
* Update status of VPNaaS in neutron
* Update reno for stable/queens
* Updated from global requirements
* Don't override oslo.db tweaks for connection pool in tests

1.13.0
------

* Imported Translations from Zanata
* Add events and resources for L3 flavors
* Adopted to new oslo.context code to remove deprecation warnings
* Updated from global requirements
* Remove unreferenced protocol parameters
* Update security group rule protocol parameter text
* rehome plugin utils
* Fix openstackdocstheme options for api-ref
* Documenting Router AZ extension in routers api-ref
* rehome shared constant
* rehome revisionifmatch api def
* Updated from global requirements
* fix typos
* rehome common topics into neutron-lib
* rehome segement api def
* DVR: Move DVR agent related constants to neutron-lib
* Fix one small typo in api-ref

1.12.0
------

* Add the IP substring filter extension
* Adds Remote Firewall Groups to FWaaS V2 Rules
* rehome router service type api def
* rehome the qos rule type details api def
* rehome sorting api def
* fix linkcheck tox target
* Rehome placement client to neutron-lib
* Remove periods at the end of validator and converter messages
* update releasing doc links for zuul v3
* Fix port comparison in port range validation
* Updated from global requirements
* Add default value as none for vni attribute in bgpvpn resource
* add api ref for auto allocated topology
* Add support to Create/Update subnets in subnet\_onboard
* rehome service type api def
* rehome vlantransparent api def
* rehome dhcpagentscheduler api def
* finish qos\_rule\_type\_details extension api-ref
* rehome the qos default api def
* add description in api-ref for external net extension
* class methods and sub resources in base api ext
* Remove setting of version/release from releasenotes
* Updated from global requirements
* Updated from global requirements
* fix up dvr api def exceptions
* Adds IPinIP protocol
* docs: Subscribing events using registry decorator
* Add empty BGPVPN Route Target to unit test
* Check that duplicate Segmentation IDs 0 get caught
* add api ref for agents
* rehome multi provider net extension api definition
* docs: Add primary\_key attribute key
* Modify the validator for segmentation\_id 0
* Remove pep8 from test-requirements
* Fix RBAC POST parameter of api-ref
* Add new resource for port bindings
* Remove rbac-policy callback into lib
* add DCCP, SCTP and UDP-Lite to validated protos for port ranges
* Add a new method ha\_state\_change to L3 agent extension
* complete api-ref for addr pairs and port security
* Updated from global requirements
* net\_utils: Speed up mac address generation
* Fix typos and address formatting issues
* Add headers for sections in LBaaS v2.0 API docs

1.11.0
------

* Updated from global requirements
* revert get\_random\_mac behavior from review 400408
* Fix comment in context.py
* Remove a bogus leftover string
* bgpvpn-vni api extension
* add PROVISIONAL\_IPV6\_PD\_PREFIX to constants
* fix doc links
* add api ref and doc link validation to release
* sync plugin common constants
* Update links in CONTRIBUTING.rst
* Revert "Withdraw doc for bgpvpn-routes-control API extension"
* Don't allow an empty-string Route Target
* rehome flavor extension API definition
* api ref for quota details extension
* finish routes api ref
* Fix value of pool\_id-request required attribute

1.10.0
------

* Add the default-subnetpools extension to api-ref
* Fix unit test failures due to switch to testr changes
* rehome dvr extension api def
* rehome l3 flavors extension api definition
* api-ref for inherit trunk segmentation type
* rehome l3 ext ha mode extension api definition
* Fix some typos
* Add exception when a synthetic field is invalid
* Update links in README
* Remove vestigate HUDSON\_PUBLISH\_DOCS reference
* Rehome net-mtu-enh extension definition
* Document the new net-mtu-writable extension
* rehome ip allocation extension API definition
* complete api ref for std attr revisions
* api ref for standard-attr-tag extension
* rehome l3 ext gw mode extension api definition
* sync ml2 plugin api
* Updated from global requirements
* api ref for dns integration
* rehome project id api definition
* rehome network availability zone extension api definition
* rehome qos api definition
* Updated from global requirements
* Parameter modifications of edit-constraints
* rehome router availability zone extension api def
* rehome pagination api definition
* rehome network ip availability extension api definition
* Add API Definition for Subnet Onboard
* rehome metering extension api definition
* Fix API Doc LBaaS v2 When a Listener and pool are created the parameter protocol\_port is optional according to the official documentation, but in reality it is required
* rehome l2 adjacency extension API definition
* rehome extraroute api definition
* rehome external net api definition
* Security Groups: Fix rule docs regarding protocols
* Add description about QoS minimum bandwidth rules API
* rehome allowedaddresspairs API definition
* rehome default subnet pools API def
* Add missing library into requirements.txt
* rehome availability zone API def
* Add description of API call to get QoS rule type details
* Updated from global requirements
* Update reno for stable/pike
* Introduce API for port bindings extended
* Removing LBaaS v1 API reference
* Fix spaces in Firewall's error messages
* Add 'convert\_to\_string' and apply for firewall-rule

1.9.1
-----

* Revert "hardware offload support for openvswitch"
* Update the documentation link for doc migration
* Fix typo in release note for import path

1.9.0
-----

* Add backward compatible alias
* Change comment to match new constant name
* rehome neutron's auto-allocated-topology extension API definition
* rehome neutron's address-scope extension API definition
* Updated from global requirements
* rectify the definition of API timestamp for trunk\_details
* Add interface to add a constraint to context
* Add Agilio OVS VIF and virtio-forwarder VNIC type
* Rehome FAULT\_MAP from the neutron API
* Fix N536 - Use assertIsNone regex
* Updated api-ref with more details on net-mtu extension
* Moved net-mtu extension definition
* rehome neutron's agent extension API definition
* Remove unnecessary variables in UT
* Add headers for QoS sections in api-ref
* Add info about direction in QoS bandwidth limit rule
* Withdraw doc for bgpvpn-routes-control API extension
* Move Firewall Exceptions to neutron-lib
* bgpvpn\_routes\_control: API definition fixes
* hardware offload support for openvswitch

1.8.0
-----

* Use flake8-import-order plugin
* Enable module reference
* rearrange content to fit the new standard layout
* Enable warning-is-error in doc build
* Introduce logging api extension
* Switch from oslosphinx to openstackdocstheme
* api-ref: Introduce logging api reference
* api-ref: RBAC policies api reference
* Add missing LOG.debug to hacking rule
* remove deprecated N523 hacking check
* Define dns-domain-ports extension
* Updated from global requirements
* rehome consumed neutron.common.constants
* rehome ml2 driver\_api
* rehome ovo exceptions
* Rehome dns-integration extension
* bgpvpn-routes-control extension
* Add OVS\_DATAPATH\_TYPE in portbindings constants
* Add sanity check to receives decorator
* rehome qos service DriverBase class
* Make port\_range validator accept an integer
* Replace assertTrue(isinstance()) with assertIsInstance()
* Fix html\_last\_updated\_fmt for Python3
* Updated from global requirements
* enforce maximum length for name and tenant\_id fields
* Add validators package
* Fix rst heading while reading
* Repair link in Neutron documentation
* Updated from global requirements
* Fix API ref with regards to OR queries
* APIDefinitionFixture bugfix
* sync callbacks: Eliminate SUBNET\_GATEWAY resource
* rehome utils: synchronized decorator and load\_class\_by\_alias\_or\_classname

1.7.0
-----

* Trivial fix typos
* Add AFTER\_SPAWN event to callbacks
* Remove duplicated "set of"
* Add VIF\_TYPE\_TAP constant to portbindings
* Updated from global requirements
* make extra\_dhcp\_opt vars public
* rehome NETWORK\_ID ml2 constant
* use constants rather than static strings

1.6.0
-----


1.5.0
-----

* Rehome neutron.api.v2.attributes
* rehome extra\_dhcp\_opt api-def
* Patch \_get\_callback\_manager for callback fixture
* sync callbacks with neutron
* Add new protocols in Firewalls
* rehome core resource api-defs
* api-ref: Add a few type checks for consistency
* Updated from global requirements
* Add CIDR for canonical format conversion
* [FWaaS] Migrate Public attribute to Shared
* Enforce log messages not being translated
* rehome is\_port\_trusted util function
* Updated from global requirements

1.4.0
-----

* Add flush\_on\_subtransaction=True to engine config
* rehome plugin common constants
* Updated from global requirements
* Add ACTION\_STATUS to dummy of API definition
* Add bgpvpn to list of known extensions
* Handle tenant\_name and project\_name more equally
* Stop enforcing non-debug log translations
* extensions: Tweak docstring for get\_required\_extensions
* API extension updates and fixture
* api-ref: provider and multiple provider are allowed to update
* Downgrade callback abortable event log to debug

1.3.0
-----

* Updated from global requirements
* rehome NeutronWorker class
* Indicating the location tests directory in oslo\_debug\_helper
* Clarify pep8 inclusion in periodic job
* api-ref: some quota APIs don't return 404
* API definition and reference for data plane status extension
* Change dashboard for periodic jobs
* Formalize base service classes
* rehome port security api-def
* rehome ml2 MechanismDriver class
* Sync neutron callbacks into lib
* Updated from global requirements
* boilerplate extension descriptor for api-def
* Use a single hacking check factory
* Tweak trunk extension to support Ironic use case
* api-ref: Cleanup quotas API
* api-ref: Fix using examples of API
* api-ref: Add QoS rule types list API
* api-ref: Remove tags for neutron-in-tree-api-ref from LBaaSv1
* Add a note about the current status of FWaaS v1
* api-ref: Correcting QoS policies in API extension

1.2.0
-----

* Move networking-bgpvpn API reference into neutron-lib
* Drop dictionary construction on get\_plugin
* Move BGPVPN API definition into neutron-lib
* Add is\_extension\_supported to neutron\_lib
* rehome l3 api-def exceptions
* add exceptions package
* Only log IDs of callbacks in debug message
* fix broken link in review guidelines
* Updated from global requirements
* Validate API sample JSON files
* Remove tag-obtain-response.json in the top directory
* Remove support for py34
* Update api-ref for enhanced tag mechanism
* Remove trailing whitespaces from VPN api doc
* Add a space after comma
* Add FIP64 extension from networking-midonet
* Add router-interface-fip extension from networking-midonet
* Migrate logging-resource extension from networking-midonet
* api: Fix firewall aliases
* api-ref: Add 'qos\_policy\_id' parameter to PUT
* api-ref: Correct port binding extension
* api-ref: Improve network IP availability extension
* api-ref: Fix api-ref for ports
* Stop creating a context manager during db.\_api module import
* api-ref: add description to ports
* api-ref: add pools to loadbalancer response
* api-ref: add description to security groups
* api-ref: add description to security group rules
* api-ref: add description to subnets
* api-ref: fix description for subnetpools
* api-ref: fix description for floating IPs
* api-ref: add description to routers
* api-ref: add description to networks
* Support empty list as api-def default
* api-ref: Refactoring parameters in Networks APIs
* Correctly set project\_name
* Remove devref modindex ref
* api-ref: Fix LBaaS v1 API reference
* Fix api-ref errors
* bugfix: l3 api-def router constant
* Update reno for stable/ocata
* Remove support for py33
* Add action map for neutron-fwaas API definition
* Fix api-ref for tags
* Use assertIsNone instead of assertEqual(None, \*)

1.1.0
-----

* Rehome providernet api-def
* Rehome portbindings api-def into neutron-lib
* Rehome l3 API definitions into neutron-lib
* api-ref: Fix api-ref for vpnaas
* Rehome ServicePluginBase
* api-ref: Fix descriptions of sec-grp parameters
* Follow-up review comments
* FWaaS v2 API reference
* Migrate neutron-fwaas API definitions to neutron-lib
* Capture wider list of extension aliases
* Revisit exported policy module
* Make neutron context available in neutron-lib
* Add dummy API definitions for extension subresources
* Expose/Improve callback notification interface
* Add validators/converters needed by neutron-fwaas
* Improve floatingip api-ref
* api-ref: Fix api-ref for metering
* Add fixture for plugin directory
* Updated from global requirements
* Removed incorrect docstring for Context
* Add FQDN\_FIELD\_SIZE constant
* api-ref: Adding request parameter for sec-grp-rule
* Remove discover from test-requirements
* Directory: fix concurreny issue
* Removes unnecessary utf-8 encoding
* Sync up bare minimum from neutron.db.api into lib
* api-ref: project\_id in req/resp body should be "body"
* Fix the status parameters in api-ref
* Modify API response information in API documents
* [api-ref] Add max number of characters for tag
* Migrate neutron agent extensions to neutron-lib
* Add validator to check for IP or subnet or none
* Use new checks in hacking 0.12
* Correcting Floating IPs
* Use constranits for api-ref target
* Policy: reuse common code
* Updated from global requirements
* Separate hacking check factories
* Provide dummy API definition for documentation purposes
* Add converter to convert IPv6 addresses to canonical format
* Sync latest neutron context into lib
* Remove README from docs build
* Explain how to use the latest neutron-lib dashboard
* api-ref: Fix api-ref for fwaas
* Add alembic branch constants
* Typo in ExtensionDescriptor.get\_request\_extensions()
* [doc]Add sha256, sha384 and sha512 auth algorithms
* Show team and repo badges on README
* Make the get\_random\_mac more versatile
* Correcting Networking API v2.0 flavor extension
* Revise status of VPNaaS in neutron
* Update contributing doc
* Updated from global requirements
* Replace six.iteritems() with .items()
* api-ref: Fix api-ref for lbaas-v2
* Add is\_bsd() to neutron-lib
* Use api/attributes.py instead of api/utils.py
* Doc olso config option approach
* Revert "Move wait\_until\_true to neutron-lib"
* Move wait\_until\_true to neutron-lib
* api-ref: Fix api-ref for subnetpools
* Sync latest neutron callbacks into lib
* Move get\_random\_mac into neutron-lib
* api-ref: Correcting Network v2.0 API extensions
* Add missing is\_loaded() method on directory's interface
* TrivialFix: Perfect the unit test in test\_utils
* Fix typo for comparision => comparison
* Updated from global requirements
* Add section headings to Neutron API Reference

1.0.0
-----

* Updates to API report tooling
* Updated from global requirements
* Add ExtensionDescriptor to neutron-lib
* api-ref: Fix api-ref for subnets
* Add release note for plugin directory
* Introduce Plugin Directory for Neutron
* Updated from global requirements
* Fix doc build if git is absent
* Updated from global requirements
* Initial seed for neutron-lib release notes
* Updated from global requirements
* Revise coverage guidelines
* Add release notes target
* api-ref: Fix api-ref for service-providers
* Enable fatal exceptions during tests
* Introduce API definition for trunk/trunk\_details extensions
* Updated from global requirements
* [doc] Allow creating loadbalancer with network\_id
* Change wording around router:external
* Add segments to v2 API reference
* Enhance valid\_values to use \_\_contains\_\_
* Add missing tenant\_id/project\_id request parameter
* Add unit test for test\_exceptions
* [api-ref] Corrected the redirect URL to Openstack Identity Service
* api-ref: Update to current state of Keystone V3 support
* Rehome populate\_project\_info() from neutron
* api-ref: remove notion of supported xml format
* Add unit test for test\_helpers
* Simplify method convert\_to\_boolean with strutils.bool\_from\_string
* Deprecate method ensure\_dir
* Trivial: Remove 'MANIFEST.in'
* Config logABug feature for Neutron-lib api-ref
* Fix typo: remove redundant 'the'
* api-ref: Update local\_id configuration
* Updated from global requirements
* Do not make project depends on Babel by default
* Correct test\_tenant\_id\_attribute
* Updated from global requirements
* Updated from global requirements
* Add support for upper-constraints.txt for all tox targets
* api-ref: Add Networking v2.0 API versions response parameters
* Updated from global requirements
* Add info about API method to get default quotas
* [api-ref] Remove temporary block
* Fix regression in validate\_uuid\_list()
* Add  docstrings for api.validators
* Fix confusion between Neutron and FWaaS versions
* Add eventlet hacking check UT
* api-ref: added a note to lbaasv1 about its removal in N+
* Move valuable API info from neutron-specs repo
* api-ref: introduced a stub sub-page to cover general info
* Updated from global requirements

0.4.0
-----

* Remove new checks from hacking factory()
* Trivial DevRef Spelling corrections
* Correcting information in configuration
* api-ref: Correcting parameters type
* Updated from global requirements
* Add  docstrings for utils.net
* Add  docstrings for utils.host
* Add  docstrings for utils.helpers
* Add  docstrings for utils.file
* Add  docstrings for hacking.translation\_checks
* Add  docstrings for hacking.checks
* Updated from global requirements
* Add  docstrings for db.utils
* Get ready for os-api-ref sphinx theme change
* Add  docstrings for policy
* Base DB: rehome model\_base
* Start migration of utility methods
* Add  docstrings for exceptions
* Add  docstrings for converters
* Enhance pyir tooling CLI
* Support copy() in Sentinel
* Don't run api-report during pep8
* Add a hacking rule for string interpolation at logging
* Correcting 'extention' parameter on Networking API v2.0
* Remove invalid depreaction warning
* Generate API report tooling
* Updated from global requirements
* Add DeviceNotFoundError to neutron\_lib exceptions
* Revert "Update hacking check consumption"
* Enable DeprecationWarning in test environments
* Update the home-page in setup.cfg
* Add Python 3.5 classifier and venv
* Updated from global requirements
* Don't pass argument sqlite\_db in method set\_defaults
* api-ref: Fix api-ref for routers
* Updated from global requirements
* api-ref: Rename file names for consistency
* api-ref: Move sample JSON files under v2 directory
* api-ref: Merge v2 and v2-ext into one directory
* Sync neutron callbacks into lib
* Forbid eventlet hacking check
* api-ref: Split LBaaS API reference into v1 and v2
* Update hacking check consumption
* translation\_checks: Exclude rally plugins
* Add Neutron context module and some policy methods
* Updated from global requirements

0.3.0
-----

* Add DEVICE\_OWNER\_BAREMETAL\_PREFIX const
* Remove discover from test-requirements
* Add validator to test integers
* Deprecate N523 check that forbids oslo.\* imports
* devref for public API docstring
* Fix api-ref response code formatting
* Migration report: validate that bc is installed
* add tags to api-ref files for the content verification phase
* Add tool to track migration to neutron-lib
* Document release steps for neutron-lib
* Expand the API reference Table of Content
* Updated from global requirements
* Fix simple typo
* Tweak validation logic for subport validator
* Updated from global requirements
* Update documents to address some issues
* Updated from global requirements
* Rehome IPV6\_MODES constants
* Update validator accessors
* Forbid eventlet based code
* Make the constant Sentinel() class public
* 100% unit test coverage for hacking/checks.py
* Localized exception message hacking check
* Updated from global requirements
* WADL to RST migration
* Add translation validations to the hacking policy
* Updated from global requirements
* Fix E128 hacking errors and enable it
* TrivialFix: Fix a bad indentation in a doc file
* Enable local hacking rule in neutron-lib
* Hacking: update iteritems hacking message
* Add Neutron L3 agent types
* Fix exception for invalid type
* Add subport validator for vlan-aware-vms
* Updated from global requirements
* Remove unused oslo.service requirement

0.2.0
-----

* Updated from global requirements
* Add IPv6\_LLA\_PREFIX constant
* Remove ICMPV6\_ALLOWED\_TYPES
* Maintain ATTR\_NOT\_SPECIFIED constant with deepcopy
* Add constants for additional ICMPv6 types
* Fixed type:dict validator passes unexpected keys
* Define legacy ICMPv6 protocol name 'icmpv6' for backward compaty

0.1.0
-----

* Updated from global requirements
* Remove config module
* Updated from global requirements
* Revert "Add Collector Agent type string"
* Remove fake\_consume\_in\_threads dummy method
* Updated from global requirements

0.0.3
-----

* Add pagination helpers
* New device owner flag for HA router interface
* Fix 'import neutron' hacking check
* Add in missing constants
* Remove unused pngmath Sphinx extension

0.0.2
-----

* Updated from global requirements
* Callbacks: add precommit support
* Add constants for macvtap agent
* Callbacks: add in missing callback resources
* Add Collector Agent type string
* Add a hacking check against importing neutron
* Lib specific hacking rules
* Move some common test and framework goo into neutron-lib
* Update translation setup
* API validators and converters
* Replace deprecated library function os.popen() with subprocess
* Add popular IP protocols for security group

0.0.1
-----

* Improvements to tox envs
* Adding callback mechanism
* Setup for translation
* Add neutron/plugin/common/constants.py module to neutron-lib
* Setup for devref documentation
* Initial list of constants
* Use assertRaises instead of try-except in unit tests
* Initial shared exceptions
* Remove pypy as tox env
* Insert references to debtcollector in review guidelines
* Cleanup .gitignore
* Beginning of lib review guidelines
* Initial cookiecutter commit
* Added .gitreview
