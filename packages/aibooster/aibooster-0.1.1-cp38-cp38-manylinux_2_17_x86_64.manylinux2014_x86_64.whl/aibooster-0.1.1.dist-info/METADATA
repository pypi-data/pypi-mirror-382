Metadata-Version: 2.1
Name: aibooster
Version: 0.1.1
Summary: AIBooster - Performance intelligence and observability tools for AI workloads
Author: Fixstars Corporation
License: MIT
Project-URL: homepage, https://doc.aibooster.fixstars.com
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: kaleido <=0.2.1
Requires-Dist: optuna ~=4.4.0
Requires-Dist: optunahub ~=0.3.1
Requires-Dist: optuna-integration ~=4.4.0
Requires-Dist: plotly ~=6.1.2
Requires-Dist: psutil ~=7.0.0
Requires-Dist: pynvml ~=11.4.1
Requires-Dist: requests ~=2.32.0
Requires-Dist: scikit-learn ~=1.3.0
Requires-Dist: opentelemetry-api ==1.30.0
Requires-Dist: opentelemetry-exporter-otlp ==1.30.0
Requires-Dist: opentelemetry-sdk ==1.30.0
Requires-Dist: kubernetes ==31.0.0
Requires-Dist: onnx
Requires-Dist: onnx-graphsurgeon
Requires-Dist: onnxruntime
Provides-Extra: dev
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: pydoc-markdown ==4.8.2 ; extra == 'dev'
Requires-Dist: build ; extra == 'dev'

# AIBooster

[![PyPI version](https://badge.fury.io/py/aibooster.svg)](https://badge.fury.io/py/aibooster)
[![Python](https://img.shields.io/pypi/pyversions/aibooster.svg)](https://pypi.org/project/aibooster/)
[![License](https://img.shields.io/pypi/l/aibooster.svg)](https://pypi.org/project/aibooster/)

AIBooster is a performance engineering platform for AI workloads.

## Overview

AIBooster is an integrated platform that provides performance intelligence and performance observability for AI/ML workloads, consisting of the following components:

* **Performance Intelligence (PI)**: Performance optimization framework
* **Performance Observability (PO)**: Dashboards and agents for performance monitoring

## Key Features

* Auto performance tuning
  * Framework-friendly design supporting MMEngine, DeepSpeed, and Megatron-LM
  * Kubernetes support
* Inference optimization
  * Automatic model conversion for deep learning compilers (TensorRT, etc.)
* NCCL analysis tools
  * Communication pattern analyzer
  * Benchmark for PyTorch distributed training

## Installation

```bash
pip install aibooster
```

## Documentation

For detailed usage and API reference, please visit the [official documentation](https://doc.aibooster.fixstars.com).

## Examples

For usage examples, please see [aibooster-examples](https://github.com/fixstars/aibooster-examples).
