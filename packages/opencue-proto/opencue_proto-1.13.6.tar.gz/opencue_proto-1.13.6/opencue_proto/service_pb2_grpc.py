# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import service_pb2 as service__pb2


class ServiceInterfaceStub(object):
    """Interface for managing Service objects

    -------- Services --------]

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateService = channel.unary_unary(
                '/service.ServiceInterface/CreateService',
                request_serializer=service__pb2.ServiceCreateServiceRequest.SerializeToString,
                response_deserializer=service__pb2.ServiceCreateServiceResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/service.ServiceInterface/Delete',
                request_serializer=service__pb2.ServiceDeleteRequest.SerializeToString,
                response_deserializer=service__pb2.ServiceDeleteResponse.FromString,
                )
        self.GetDefaultServices = channel.unary_unary(
                '/service.ServiceInterface/GetDefaultServices',
                request_serializer=service__pb2.ServiceGetDefaultServicesRequest.SerializeToString,
                response_deserializer=service__pb2.ServiceGetDefaultServicesResponse.FromString,
                )
        self.GetService = channel.unary_unary(
                '/service.ServiceInterface/GetService',
                request_serializer=service__pb2.ServiceGetServiceRequest.SerializeToString,
                response_deserializer=service__pb2.ServiceGetServiceResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/service.ServiceInterface/Update',
                request_serializer=service__pb2.ServiceUpdateRequest.SerializeToString,
                response_deserializer=service__pb2.ServiceUpdateResponse.FromString,
                )


class ServiceInterfaceServicer(object):
    """Interface for managing Service objects

    -------- Services --------]

    """

    def CreateService(self, request, context):
        """Create a new service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Delete the provided service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultServices(self, request, context):
        """Return a the list of default services.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetService(self, request, context):
        """Return the given service using its name or unique id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Update the provided service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateService': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateService,
                    request_deserializer=service__pb2.ServiceCreateServiceRequest.FromString,
                    response_serializer=service__pb2.ServiceCreateServiceResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=service__pb2.ServiceDeleteRequest.FromString,
                    response_serializer=service__pb2.ServiceDeleteResponse.SerializeToString,
            ),
            'GetDefaultServices': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultServices,
                    request_deserializer=service__pb2.ServiceGetDefaultServicesRequest.FromString,
                    response_serializer=service__pb2.ServiceGetDefaultServicesResponse.SerializeToString,
            ),
            'GetService': grpc.unary_unary_rpc_method_handler(
                    servicer.GetService,
                    request_deserializer=service__pb2.ServiceGetServiceRequest.FromString,
                    response_serializer=service__pb2.ServiceGetServiceResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=service__pb2.ServiceUpdateRequest.FromString,
                    response_serializer=service__pb2.ServiceUpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'service.ServiceInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServiceInterface(object):
    """Interface for managing Service objects

    -------- Services --------]

    """

    @staticmethod
    def CreateService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service.ServiceInterface/CreateService',
            service__pb2.ServiceCreateServiceRequest.SerializeToString,
            service__pb2.ServiceCreateServiceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service.ServiceInterface/Delete',
            service__pb2.ServiceDeleteRequest.SerializeToString,
            service__pb2.ServiceDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDefaultServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service.ServiceInterface/GetDefaultServices',
            service__pb2.ServiceGetDefaultServicesRequest.SerializeToString,
            service__pb2.ServiceGetDefaultServicesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service.ServiceInterface/GetService',
            service__pb2.ServiceGetServiceRequest.SerializeToString,
            service__pb2.ServiceGetServiceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service.ServiceInterface/Update',
            service__pb2.ServiceUpdateRequest.SerializeToString,
            service__pb2.ServiceUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ServiceOverrideInterfaceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Delete = channel.unary_unary(
                '/service.ServiceOverrideInterface/Delete',
                request_serializer=service__pb2.ServiceOverrideDeleteRequest.SerializeToString,
                response_deserializer=service__pb2.ServiceOverrideDeleteResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/service.ServiceOverrideInterface/Update',
                request_serializer=service__pb2.ServiceOverrideUpdateRequest.SerializeToString,
                response_deserializer=service__pb2.ServiceOverrideUpdateResponse.FromString,
                )


class ServiceOverrideInterfaceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Delete(self, request, context):
        """Delete the service override
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Update this service override
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceOverrideInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=service__pb2.ServiceOverrideDeleteRequest.FromString,
                    response_serializer=service__pb2.ServiceOverrideDeleteResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=service__pb2.ServiceOverrideUpdateRequest.FromString,
                    response_serializer=service__pb2.ServiceOverrideUpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'service.ServiceOverrideInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServiceOverrideInterface(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service.ServiceOverrideInterface/Delete',
            service__pb2.ServiceOverrideDeleteRequest.SerializeToString,
            service__pb2.ServiceOverrideDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service.ServiceOverrideInterface/Update',
            service__pb2.ServiceOverrideUpdateRequest.SerializeToString,
            service__pb2.ServiceOverrideUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)