# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import host_pb2 as host__pb2


class DeedInterfaceStub(object):
    """-------- Services --------]

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Delete = channel.unary_unary(
                '/host.DeedInterface/Delete',
                request_serializer=host__pb2.DeedDeleteRequest.SerializeToString,
                response_deserializer=host__pb2.DeedDeleteResponse.FromString,
                )
        self.GetHost = channel.unary_unary(
                '/host.DeedInterface/GetHost',
                request_serializer=host__pb2.DeedGetHostRequest.SerializeToString,
                response_deserializer=host__pb2.DeedGetHostResponse.FromString,
                )
        self.GetOwner = channel.unary_unary(
                '/host.DeedInterface/GetOwner',
                request_serializer=host__pb2.DeedGetOwnerRequest.SerializeToString,
                response_deserializer=host__pb2.DeedGetOwnerResponse.FromString,
                )


class DeedInterfaceServicer(object):
    """-------- Services --------]

    """

    def Delete(self, request, context):
        """Remove the deed
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHost(self, request, context):
        """Returns the full host for these settings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOwner(self, request, context):
        """Returns the owner for these settings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeedInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=host__pb2.DeedDeleteRequest.FromString,
                    response_serializer=host__pb2.DeedDeleteResponse.SerializeToString,
            ),
            'GetHost': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHost,
                    request_deserializer=host__pb2.DeedGetHostRequest.FromString,
                    response_serializer=host__pb2.DeedGetHostResponse.SerializeToString,
            ),
            'GetOwner': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOwner,
                    request_deserializer=host__pb2.DeedGetOwnerRequest.FromString,
                    response_serializer=host__pb2.DeedGetOwnerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'host.DeedInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeedInterface(object):
    """-------- Services --------]

    """

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.DeedInterface/Delete',
            host__pb2.DeedDeleteRequest.SerializeToString,
            host__pb2.DeedDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.DeedInterface/GetHost',
            host__pb2.DeedGetHostRequest.SerializeToString,
            host__pb2.DeedGetHostResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOwner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.DeedInterface/GetOwner',
            host__pb2.DeedGetOwnerRequest.SerializeToString,
            host__pb2.DeedGetOwnerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class HostInterfaceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddComment = channel.unary_unary(
                '/host.HostInterface/AddComment',
                request_serializer=host__pb2.HostAddCommentRequest.SerializeToString,
                response_deserializer=host__pb2.HostAddCommentResponse.FromString,
                )
        self.AddTags = channel.unary_unary(
                '/host.HostInterface/AddTags',
                request_serializer=host__pb2.HostAddTagsRequest.SerializeToString,
                response_deserializer=host__pb2.HostAddTagsResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/host.HostInterface/Delete',
                request_serializer=host__pb2.HostDeleteRequest.SerializeToString,
                response_deserializer=host__pb2.HostDeleteResponse.FromString,
                )
        self.FindHost = channel.unary_unary(
                '/host.HostInterface/FindHost',
                request_serializer=host__pb2.HostFindHostRequest.SerializeToString,
                response_deserializer=host__pb2.HostFindHostResponse.FromString,
                )
        self.GetComments = channel.unary_unary(
                '/host.HostInterface/GetComments',
                request_serializer=host__pb2.HostGetCommentsRequest.SerializeToString,
                response_deserializer=host__pb2.HostGetCommentsResponse.FromString,
                )
        self.GetDeed = channel.unary_unary(
                '/host.HostInterface/GetDeed',
                request_serializer=host__pb2.HostGetDeedRequest.SerializeToString,
                response_deserializer=host__pb2.HostGetDeedResponse.FromString,
                )
        self.GetHost = channel.unary_unary(
                '/host.HostInterface/GetHost',
                request_serializer=host__pb2.HostGetHostRequest.SerializeToString,
                response_deserializer=host__pb2.HostGetHostResponse.FromString,
                )
        self.GetHosts = channel.unary_unary(
                '/host.HostInterface/GetHosts',
                request_serializer=host__pb2.HostGetHostsRequest.SerializeToString,
                response_deserializer=host__pb2.HostGetHostsResponse.FromString,
                )
        self.GetHostWhiteboard = channel.unary_unary(
                '/host.HostInterface/GetHostWhiteboard',
                request_serializer=host__pb2.HostGetHostWhiteboardRequest.SerializeToString,
                response_deserializer=host__pb2.HostGetHostWhiteboardResponse.FromString,
                )
        self.GetOwner = channel.unary_unary(
                '/host.HostInterface/GetOwner',
                request_serializer=host__pb2.HostGetOwnerRequest.SerializeToString,
                response_deserializer=host__pb2.HostGetOwnerResponse.FromString,
                )
        self.GetProcs = channel.unary_unary(
                '/host.HostInterface/GetProcs',
                request_serializer=host__pb2.HostGetProcsRequest.SerializeToString,
                response_deserializer=host__pb2.HostGetProcsResponse.FromString,
                )
        self.GetRenderPartitions = channel.unary_unary(
                '/host.HostInterface/GetRenderPartitions',
                request_serializer=host__pb2.HostGetRenderPartitionsRequest.SerializeToString,
                response_deserializer=host__pb2.HostGetRenderPartitionsResponse.FromString,
                )
        self.Lock = channel.unary_unary(
                '/host.HostInterface/Lock',
                request_serializer=host__pb2.HostLockRequest.SerializeToString,
                response_deserializer=host__pb2.HostLockResponse.FromString,
                )
        self.Reboot = channel.unary_unary(
                '/host.HostInterface/Reboot',
                request_serializer=host__pb2.HostRebootRequest.SerializeToString,
                response_deserializer=host__pb2.HostRebootResponse.FromString,
                )
        self.RebootWhenIdle = channel.unary_unary(
                '/host.HostInterface/RebootWhenIdle',
                request_serializer=host__pb2.HostRebootWhenIdleRequest.SerializeToString,
                response_deserializer=host__pb2.HostRebootWhenIdleResponse.FromString,
                )
        self.RedirectToJob = channel.unary_unary(
                '/host.HostInterface/RedirectToJob',
                request_serializer=host__pb2.HostRedirectToJobRequest.SerializeToString,
                response_deserializer=host__pb2.HostRedirectToJobResponse.FromString,
                )
        self.RemoveTags = channel.unary_unary(
                '/host.HostInterface/RemoveTags',
                request_serializer=host__pb2.HostRemoveTagsRequest.SerializeToString,
                response_deserializer=host__pb2.HostRemoveTagsResponse.FromString,
                )
        self.RenameTag = channel.unary_unary(
                '/host.HostInterface/RenameTag',
                request_serializer=host__pb2.HostRenameTagRequest.SerializeToString,
                response_deserializer=host__pb2.HostRenameTagResponse.FromString,
                )
        self.SetAllocation = channel.unary_unary(
                '/host.HostInterface/SetAllocation',
                request_serializer=host__pb2.HostSetAllocationRequest.SerializeToString,
                response_deserializer=host__pb2.HostSetAllocationResponse.FromString,
                )
        self.SetHardwareState = channel.unary_unary(
                '/host.HostInterface/SetHardwareState',
                request_serializer=host__pb2.HostSetHardwareStateRequest.SerializeToString,
                response_deserializer=host__pb2.HostSetHardwareStateResponse.FromString,
                )
        self.SetOs = channel.unary_unary(
                '/host.HostInterface/SetOs',
                request_serializer=host__pb2.HostSetOsRequest.SerializeToString,
                response_deserializer=host__pb2.HostSetOsResponse.FromString,
                )
        self.SetThreadMode = channel.unary_unary(
                '/host.HostInterface/SetThreadMode',
                request_serializer=host__pb2.HostSetThreadModeRequest.SerializeToString,
                response_deserializer=host__pb2.HostSetThreadModeResponse.FromString,
                )
        self.Unlock = channel.unary_unary(
                '/host.HostInterface/Unlock',
                request_serializer=host__pb2.HostUnlockRequest.SerializeToString,
                response_deserializer=host__pb2.HostUnlockResponse.FromString,
                )


class HostInterfaceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddComment(self, request, context):
        """Add a comment on this host.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddTags(self, request, context):
        """Set a tag on this host.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Delete host.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindHost(self, request, context):
        """Find a host by its name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetComments(self, request, context):
        """Get the comments for this host.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeed(self, request, context):
        """Return the deed for this host.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHost(self, request, context):
        """Return a host by its id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHosts(self, request, context):
        """Search for a number of hosts
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHostWhiteboard(self, request, context):
        """Return the host whiteboard
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOwner(self, request, context):
        """Get the owner settings of this particular host.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProcs(self, request, context):
        """Returns the list of proc resources allocated from this host.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRenderPartitions(self, request, context):
        """Return any render partitions that are setup on this host.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Lock(self, request, context):
        """Locks the host.  Its possible we'll need to pass in a show name here in the future
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reboot(self, request, context):
        """Issues an immediate reboot.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RebootWhenIdle(self, request, context):
        """Sets the reboot when idle state, nothing has to be locked to set this. When the host pings in idle a reboot
        command is sent to the host and the host will be put into the Rebooting state.  If any locks are set they will
        be removed upon reboot.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RedirectToJob(self, request, context):
        """Redirect the given procs to the specified job.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveTags(self, request, context):
        """Remove a tag from this host.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameTag(self, request, context):
        """Rename tag.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAllocation(self, request, context):
        """Assign a host to an allocation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetHardwareState(self, request, context):
        """Manually set the hardware state for the host.  The hardware state may be changed automatically if the host pings
        in.  If the hardware state is set to "Reimage", the state will not automatically change with a host ping, and
        must be manually set back to Up.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetOs(self, request, context):
        """Set the name of the host operating system.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetThreadMode(self, request, context):
        """Changes the host's [ThreadMode]
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unlock(self, request, context):
        """Unlocks the host for booking if the proc is in the Locked state. You cannot unlock a NimbyLocked proc.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HostInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddComment': grpc.unary_unary_rpc_method_handler(
                    servicer.AddComment,
                    request_deserializer=host__pb2.HostAddCommentRequest.FromString,
                    response_serializer=host__pb2.HostAddCommentResponse.SerializeToString,
            ),
            'AddTags': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTags,
                    request_deserializer=host__pb2.HostAddTagsRequest.FromString,
                    response_serializer=host__pb2.HostAddTagsResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=host__pb2.HostDeleteRequest.FromString,
                    response_serializer=host__pb2.HostDeleteResponse.SerializeToString,
            ),
            'FindHost': grpc.unary_unary_rpc_method_handler(
                    servicer.FindHost,
                    request_deserializer=host__pb2.HostFindHostRequest.FromString,
                    response_serializer=host__pb2.HostFindHostResponse.SerializeToString,
            ),
            'GetComments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetComments,
                    request_deserializer=host__pb2.HostGetCommentsRequest.FromString,
                    response_serializer=host__pb2.HostGetCommentsResponse.SerializeToString,
            ),
            'GetDeed': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeed,
                    request_deserializer=host__pb2.HostGetDeedRequest.FromString,
                    response_serializer=host__pb2.HostGetDeedResponse.SerializeToString,
            ),
            'GetHost': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHost,
                    request_deserializer=host__pb2.HostGetHostRequest.FromString,
                    response_serializer=host__pb2.HostGetHostResponse.SerializeToString,
            ),
            'GetHosts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHosts,
                    request_deserializer=host__pb2.HostGetHostsRequest.FromString,
                    response_serializer=host__pb2.HostGetHostsResponse.SerializeToString,
            ),
            'GetHostWhiteboard': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHostWhiteboard,
                    request_deserializer=host__pb2.HostGetHostWhiteboardRequest.FromString,
                    response_serializer=host__pb2.HostGetHostWhiteboardResponse.SerializeToString,
            ),
            'GetOwner': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOwner,
                    request_deserializer=host__pb2.HostGetOwnerRequest.FromString,
                    response_serializer=host__pb2.HostGetOwnerResponse.SerializeToString,
            ),
            'GetProcs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProcs,
                    request_deserializer=host__pb2.HostGetProcsRequest.FromString,
                    response_serializer=host__pb2.HostGetProcsResponse.SerializeToString,
            ),
            'GetRenderPartitions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRenderPartitions,
                    request_deserializer=host__pb2.HostGetRenderPartitionsRequest.FromString,
                    response_serializer=host__pb2.HostGetRenderPartitionsResponse.SerializeToString,
            ),
            'Lock': grpc.unary_unary_rpc_method_handler(
                    servicer.Lock,
                    request_deserializer=host__pb2.HostLockRequest.FromString,
                    response_serializer=host__pb2.HostLockResponse.SerializeToString,
            ),
            'Reboot': grpc.unary_unary_rpc_method_handler(
                    servicer.Reboot,
                    request_deserializer=host__pb2.HostRebootRequest.FromString,
                    response_serializer=host__pb2.HostRebootResponse.SerializeToString,
            ),
            'RebootWhenIdle': grpc.unary_unary_rpc_method_handler(
                    servicer.RebootWhenIdle,
                    request_deserializer=host__pb2.HostRebootWhenIdleRequest.FromString,
                    response_serializer=host__pb2.HostRebootWhenIdleResponse.SerializeToString,
            ),
            'RedirectToJob': grpc.unary_unary_rpc_method_handler(
                    servicer.RedirectToJob,
                    request_deserializer=host__pb2.HostRedirectToJobRequest.FromString,
                    response_serializer=host__pb2.HostRedirectToJobResponse.SerializeToString,
            ),
            'RemoveTags': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveTags,
                    request_deserializer=host__pb2.HostRemoveTagsRequest.FromString,
                    response_serializer=host__pb2.HostRemoveTagsResponse.SerializeToString,
            ),
            'RenameTag': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameTag,
                    request_deserializer=host__pb2.HostRenameTagRequest.FromString,
                    response_serializer=host__pb2.HostRenameTagResponse.SerializeToString,
            ),
            'SetAllocation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAllocation,
                    request_deserializer=host__pb2.HostSetAllocationRequest.FromString,
                    response_serializer=host__pb2.HostSetAllocationResponse.SerializeToString,
            ),
            'SetHardwareState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetHardwareState,
                    request_deserializer=host__pb2.HostSetHardwareStateRequest.FromString,
                    response_serializer=host__pb2.HostSetHardwareStateResponse.SerializeToString,
            ),
            'SetOs': grpc.unary_unary_rpc_method_handler(
                    servicer.SetOs,
                    request_deserializer=host__pb2.HostSetOsRequest.FromString,
                    response_serializer=host__pb2.HostSetOsResponse.SerializeToString,
            ),
            'SetThreadMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetThreadMode,
                    request_deserializer=host__pb2.HostSetThreadModeRequest.FromString,
                    response_serializer=host__pb2.HostSetThreadModeResponse.SerializeToString,
            ),
            'Unlock': grpc.unary_unary_rpc_method_handler(
                    servicer.Unlock,
                    request_deserializer=host__pb2.HostUnlockRequest.FromString,
                    response_serializer=host__pb2.HostUnlockResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'host.HostInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HostInterface(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/AddComment',
            host__pb2.HostAddCommentRequest.SerializeToString,
            host__pb2.HostAddCommentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/AddTags',
            host__pb2.HostAddTagsRequest.SerializeToString,
            host__pb2.HostAddTagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/Delete',
            host__pb2.HostDeleteRequest.SerializeToString,
            host__pb2.HostDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindHost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/FindHost',
            host__pb2.HostFindHostRequest.SerializeToString,
            host__pb2.HostFindHostResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetComments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/GetComments',
            host__pb2.HostGetCommentsRequest.SerializeToString,
            host__pb2.HostGetCommentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/GetDeed',
            host__pb2.HostGetDeedRequest.SerializeToString,
            host__pb2.HostGetDeedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/GetHost',
            host__pb2.HostGetHostRequest.SerializeToString,
            host__pb2.HostGetHostResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/GetHosts',
            host__pb2.HostGetHostsRequest.SerializeToString,
            host__pb2.HostGetHostsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHostWhiteboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/GetHostWhiteboard',
            host__pb2.HostGetHostWhiteboardRequest.SerializeToString,
            host__pb2.HostGetHostWhiteboardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOwner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/GetOwner',
            host__pb2.HostGetOwnerRequest.SerializeToString,
            host__pb2.HostGetOwnerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProcs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/GetProcs',
            host__pb2.HostGetProcsRequest.SerializeToString,
            host__pb2.HostGetProcsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRenderPartitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/GetRenderPartitions',
            host__pb2.HostGetRenderPartitionsRequest.SerializeToString,
            host__pb2.HostGetRenderPartitionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Lock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/Lock',
            host__pb2.HostLockRequest.SerializeToString,
            host__pb2.HostLockResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reboot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/Reboot',
            host__pb2.HostRebootRequest.SerializeToString,
            host__pb2.HostRebootResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RebootWhenIdle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/RebootWhenIdle',
            host__pb2.HostRebootWhenIdleRequest.SerializeToString,
            host__pb2.HostRebootWhenIdleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RedirectToJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/RedirectToJob',
            host__pb2.HostRedirectToJobRequest.SerializeToString,
            host__pb2.HostRedirectToJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/RemoveTags',
            host__pb2.HostRemoveTagsRequest.SerializeToString,
            host__pb2.HostRemoveTagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/RenameTag',
            host__pb2.HostRenameTagRequest.SerializeToString,
            host__pb2.HostRenameTagResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAllocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/SetAllocation',
            host__pb2.HostSetAllocationRequest.SerializeToString,
            host__pb2.HostSetAllocationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetHardwareState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/SetHardwareState',
            host__pb2.HostSetHardwareStateRequest.SerializeToString,
            host__pb2.HostSetHardwareStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetOs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/SetOs',
            host__pb2.HostSetOsRequest.SerializeToString,
            host__pb2.HostSetOsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetThreadMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/SetThreadMode',
            host__pb2.HostSetThreadModeRequest.SerializeToString,
            host__pb2.HostSetThreadModeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.HostInterface/Unlock',
            host__pb2.HostUnlockRequest.SerializeToString,
            host__pb2.HostUnlockResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class OwnerInterfaceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Delete = channel.unary_unary(
                '/host.OwnerInterface/Delete',
                request_serializer=host__pb2.OwnerDeleteRequest.SerializeToString,
                response_deserializer=host__pb2.OwnerDeleteResponse.FromString,
                )
        self.GetDeeds = channel.unary_unary(
                '/host.OwnerInterface/GetDeeds',
                request_serializer=host__pb2.OwnerGetDeedsRequest.SerializeToString,
                response_deserializer=host__pb2.OwnerGetDeedsResponse.FromString,
                )
        self.GetHosts = channel.unary_unary(
                '/host.OwnerInterface/GetHosts',
                request_serializer=host__pb2.OwnerGetHostsRequest.SerializeToString,
                response_deserializer=host__pb2.OwnerGetHostsResponse.FromString,
                )
        self.GetOwner = channel.unary_unary(
                '/host.OwnerInterface/GetOwner',
                request_serializer=host__pb2.OwnerGetOwnerRequest.SerializeToString,
                response_deserializer=host__pb2.OwnerGetOwnerResponse.FromString,
                )
        self.SetShow = channel.unary_unary(
                '/host.OwnerInterface/SetShow',
                request_serializer=host__pb2.OwnerSetShowRequest.SerializeToString,
                response_deserializer=host__pb2.OwnerSetShowResponse.FromString,
                )
        self.TakeOwnership = channel.unary_unary(
                '/host.OwnerInterface/TakeOwnership',
                request_serializer=host__pb2.OwnerTakeOwnershipRequest.SerializeToString,
                response_deserializer=host__pb2.OwnerTakeOwnershipResponse.FromString,
                )


class OwnerInterfaceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Delete(self, request, context):
        """Deletes the owner record.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeeds(self, request, context):
        """Get a list of all deeds this owner has.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHosts(self, request, context):
        """Get a list of all hosts this owner is responsible for.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOwner(self, request, context):
        """Return an Owner record by name, id, or email.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetShow(self, request, context):
        """Sets the owners show.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TakeOwnership(self, request, context):
        """Set the hosts new owner settings.  Any host may have an owner, not just desktops.  This allows direct control of
        the cores.  By default hosts have no owner settings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OwnerInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=host__pb2.OwnerDeleteRequest.FromString,
                    response_serializer=host__pb2.OwnerDeleteResponse.SerializeToString,
            ),
            'GetDeeds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeeds,
                    request_deserializer=host__pb2.OwnerGetDeedsRequest.FromString,
                    response_serializer=host__pb2.OwnerGetDeedsResponse.SerializeToString,
            ),
            'GetHosts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHosts,
                    request_deserializer=host__pb2.OwnerGetHostsRequest.FromString,
                    response_serializer=host__pb2.OwnerGetHostsResponse.SerializeToString,
            ),
            'GetOwner': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOwner,
                    request_deserializer=host__pb2.OwnerGetOwnerRequest.FromString,
                    response_serializer=host__pb2.OwnerGetOwnerResponse.SerializeToString,
            ),
            'SetShow': grpc.unary_unary_rpc_method_handler(
                    servicer.SetShow,
                    request_deserializer=host__pb2.OwnerSetShowRequest.FromString,
                    response_serializer=host__pb2.OwnerSetShowResponse.SerializeToString,
            ),
            'TakeOwnership': grpc.unary_unary_rpc_method_handler(
                    servicer.TakeOwnership,
                    request_deserializer=host__pb2.OwnerTakeOwnershipRequest.FromString,
                    response_serializer=host__pb2.OwnerTakeOwnershipResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'host.OwnerInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OwnerInterface(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.OwnerInterface/Delete',
            host__pb2.OwnerDeleteRequest.SerializeToString,
            host__pb2.OwnerDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeeds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.OwnerInterface/GetDeeds',
            host__pb2.OwnerGetDeedsRequest.SerializeToString,
            host__pb2.OwnerGetDeedsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.OwnerInterface/GetHosts',
            host__pb2.OwnerGetHostsRequest.SerializeToString,
            host__pb2.OwnerGetHostsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOwner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.OwnerInterface/GetOwner',
            host__pb2.OwnerGetOwnerRequest.SerializeToString,
            host__pb2.OwnerGetOwnerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetShow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.OwnerInterface/SetShow',
            host__pb2.OwnerSetShowRequest.SerializeToString,
            host__pb2.OwnerSetShowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TakeOwnership(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.OwnerInterface/TakeOwnership',
            host__pb2.OwnerTakeOwnershipRequest.SerializeToString,
            host__pb2.OwnerTakeOwnershipResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ProcInterfaceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ClearRedirect = channel.unary_unary(
                '/host.ProcInterface/ClearRedirect',
                request_serializer=host__pb2.ProcClearRedirectRequest.SerializeToString,
                response_deserializer=host__pb2.ProcClearRedirectResponse.FromString,
                )
        self.GetFrame = channel.unary_unary(
                '/host.ProcInterface/GetFrame',
                request_serializer=host__pb2.ProcGetFrameRequest.SerializeToString,
                response_deserializer=host__pb2.ProcGetFrameResponse.FromString,
                )
        self.GetHost = channel.unary_unary(
                '/host.ProcInterface/GetHost',
                request_serializer=host__pb2.ProcGetHostRequest.SerializeToString,
                response_deserializer=host__pb2.ProcGetHostResponse.FromString,
                )
        self.GetJob = channel.unary_unary(
                '/host.ProcInterface/GetJob',
                request_serializer=host__pb2.ProcGetJobRequest.SerializeToString,
                response_deserializer=host__pb2.ProcGetJobResponse.FromString,
                )
        self.GetLayer = channel.unary_unary(
                '/host.ProcInterface/GetLayer',
                request_serializer=host__pb2.ProcGetLayerRequest.SerializeToString,
                response_deserializer=host__pb2.ProcGetLayerResponse.FromString,
                )
        self.GetProcs = channel.unary_unary(
                '/host.ProcInterface/GetProcs',
                request_serializer=host__pb2.ProcGetProcsRequest.SerializeToString,
                response_deserializer=host__pb2.ProcGetProcsResponse.FromString,
                )
        self.Kill = channel.unary_unary(
                '/host.ProcInterface/Kill',
                request_serializer=host__pb2.ProcKillRequest.SerializeToString,
                response_deserializer=host__pb2.ProcKillResponse.FromString,
                )
        self.RedirectToGroup = channel.unary_unary(
                '/host.ProcInterface/RedirectToGroup',
                request_serializer=host__pb2.ProcRedirectToGroupRequest.SerializeToString,
                response_deserializer=host__pb2.ProcRedirectToGroupResponse.FromString,
                )
        self.RedirectToJob = channel.unary_unary(
                '/host.ProcInterface/RedirectToJob',
                request_serializer=host__pb2.ProcRedirectToJobRequest.SerializeToString,
                response_deserializer=host__pb2.ProcRedirectToJobResponse.FromString,
                )
        self.Unbook = channel.unary_unary(
                '/host.ProcInterface/Unbook',
                request_serializer=host__pb2.ProcUnbookRequest.SerializeToString,
                response_deserializer=host__pb2.ProcUnbookResponse.FromString,
                )
        self.UnbookProcs = channel.unary_unary(
                '/host.ProcInterface/UnbookProcs',
                request_serializer=host__pb2.ProcUnbookProcsRequest.SerializeToString,
                response_deserializer=host__pb2.ProcUnbookProcsResponse.FromString,
                )
        self.UnbookToGroup = channel.unary_unary(
                '/host.ProcInterface/UnbookToGroup',
                request_serializer=host__pb2.ProcUnbookToGroupRequest.SerializeToString,
                response_deserializer=host__pb2.ProcUnbookToGroupResponse.FromString,
                )
        self.UnbookToJob = channel.unary_unary(
                '/host.ProcInterface/UnbookToJob',
                request_serializer=host__pb2.ProcUnbookToJobRequest.SerializeToString,
                response_deserializer=host__pb2.ProcUnbookToJobResponse.FromString,
                )


class ProcInterfaceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ClearRedirect(self, request, context):
        """Clears the redirect off of the proc so it dispatches naturally.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFrame(self, request, context):
        """Returns the [Frame] running on the [Proc]
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHost(self, request, context):
        """Returns the [Host] this [Proc] was allocated from.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJob(self, request, context):
        """Returns the [Job] the [Proc] has been assigned to.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLayer(self, request, context):
        """Returns the [Layer] the [Proc] has been assigned to.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProcs(self, request, context):
        """Return a list of procs matching the search
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Kill(self, request, context):
        """Sends a kill signal to the running process.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RedirectToGroup(self, request, context):
        """Unbooks and redriects the proc to the specified group.  Optionally kills the proc immediately.  Will overwrite an
        existing redirect. Return true if the redirect was a success. The redirect would fail in the event that the
        specified group does not have a suitable frame for the proc.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RedirectToJob(self, request, context):
        """Unbooks and redriects the proc to the specified job.  Optionally kills the proc immediately.  Will overwrite an
        existing redirect. Return true if the redirect was a success. The redirect would fail in the event th
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unbook(self, request, context):
        """Unbooks this [Proc].  Unbooking means the [Proc] will automatically seek out a new [Job] when the current
        [Frame] is complete.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnbookProcs(self, request, context):
        """Unbooks procs that match the ProcSearchCriteria.  This request can span jobs, shows, allocations, hosts etc.
        Set kill to true if the running frames should immediately be killed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnbookToGroup(self, request, context):
        """Unbooks procs that match the ProcSearchCriteria and books them on the specified group, assuming the group has
        layers that can take the procs. If the kill boolean is set to true, the operation happens immediately. If false,
        the proc will move after it finishes its current frame.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnbookToJob(self, request, context):
        """Unbooks procs that match the ProcSearchCriteria and books them on the specified list of jobs, assuming those jobs
        have layers that can take the procs. If the kill boolean is set to true, the operation happens immediately. If
        false, the proc will move after it finishes its current frame.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProcInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ClearRedirect': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearRedirect,
                    request_deserializer=host__pb2.ProcClearRedirectRequest.FromString,
                    response_serializer=host__pb2.ProcClearRedirectResponse.SerializeToString,
            ),
            'GetFrame': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFrame,
                    request_deserializer=host__pb2.ProcGetFrameRequest.FromString,
                    response_serializer=host__pb2.ProcGetFrameResponse.SerializeToString,
            ),
            'GetHost': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHost,
                    request_deserializer=host__pb2.ProcGetHostRequest.FromString,
                    response_serializer=host__pb2.ProcGetHostResponse.SerializeToString,
            ),
            'GetJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJob,
                    request_deserializer=host__pb2.ProcGetJobRequest.FromString,
                    response_serializer=host__pb2.ProcGetJobResponse.SerializeToString,
            ),
            'GetLayer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLayer,
                    request_deserializer=host__pb2.ProcGetLayerRequest.FromString,
                    response_serializer=host__pb2.ProcGetLayerResponse.SerializeToString,
            ),
            'GetProcs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProcs,
                    request_deserializer=host__pb2.ProcGetProcsRequest.FromString,
                    response_serializer=host__pb2.ProcGetProcsResponse.SerializeToString,
            ),
            'Kill': grpc.unary_unary_rpc_method_handler(
                    servicer.Kill,
                    request_deserializer=host__pb2.ProcKillRequest.FromString,
                    response_serializer=host__pb2.ProcKillResponse.SerializeToString,
            ),
            'RedirectToGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.RedirectToGroup,
                    request_deserializer=host__pb2.ProcRedirectToGroupRequest.FromString,
                    response_serializer=host__pb2.ProcRedirectToGroupResponse.SerializeToString,
            ),
            'RedirectToJob': grpc.unary_unary_rpc_method_handler(
                    servicer.RedirectToJob,
                    request_deserializer=host__pb2.ProcRedirectToJobRequest.FromString,
                    response_serializer=host__pb2.ProcRedirectToJobResponse.SerializeToString,
            ),
            'Unbook': grpc.unary_unary_rpc_method_handler(
                    servicer.Unbook,
                    request_deserializer=host__pb2.ProcUnbookRequest.FromString,
                    response_serializer=host__pb2.ProcUnbookResponse.SerializeToString,
            ),
            'UnbookProcs': grpc.unary_unary_rpc_method_handler(
                    servicer.UnbookProcs,
                    request_deserializer=host__pb2.ProcUnbookProcsRequest.FromString,
                    response_serializer=host__pb2.ProcUnbookProcsResponse.SerializeToString,
            ),
            'UnbookToGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.UnbookToGroup,
                    request_deserializer=host__pb2.ProcUnbookToGroupRequest.FromString,
                    response_serializer=host__pb2.ProcUnbookToGroupResponse.SerializeToString,
            ),
            'UnbookToJob': grpc.unary_unary_rpc_method_handler(
                    servicer.UnbookToJob,
                    request_deserializer=host__pb2.ProcUnbookToJobRequest.FromString,
                    response_serializer=host__pb2.ProcUnbookToJobResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'host.ProcInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProcInterface(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ClearRedirect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.ProcInterface/ClearRedirect',
            host__pb2.ProcClearRedirectRequest.SerializeToString,
            host__pb2.ProcClearRedirectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFrame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.ProcInterface/GetFrame',
            host__pb2.ProcGetFrameRequest.SerializeToString,
            host__pb2.ProcGetFrameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.ProcInterface/GetHost',
            host__pb2.ProcGetHostRequest.SerializeToString,
            host__pb2.ProcGetHostResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.ProcInterface/GetJob',
            host__pb2.ProcGetJobRequest.SerializeToString,
            host__pb2.ProcGetJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.ProcInterface/GetLayer',
            host__pb2.ProcGetLayerRequest.SerializeToString,
            host__pb2.ProcGetLayerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProcs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.ProcInterface/GetProcs',
            host__pb2.ProcGetProcsRequest.SerializeToString,
            host__pb2.ProcGetProcsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Kill(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.ProcInterface/Kill',
            host__pb2.ProcKillRequest.SerializeToString,
            host__pb2.ProcKillResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RedirectToGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.ProcInterface/RedirectToGroup',
            host__pb2.ProcRedirectToGroupRequest.SerializeToString,
            host__pb2.ProcRedirectToGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RedirectToJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.ProcInterface/RedirectToJob',
            host__pb2.ProcRedirectToJobRequest.SerializeToString,
            host__pb2.ProcRedirectToJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unbook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.ProcInterface/Unbook',
            host__pb2.ProcUnbookRequest.SerializeToString,
            host__pb2.ProcUnbookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnbookProcs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.ProcInterface/UnbookProcs',
            host__pb2.ProcUnbookProcsRequest.SerializeToString,
            host__pb2.ProcUnbookProcsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnbookToGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.ProcInterface/UnbookToGroup',
            host__pb2.ProcUnbookToGroupRequest.SerializeToString,
            host__pb2.ProcUnbookToGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnbookToJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/host.ProcInterface/UnbookToJob',
            host__pb2.ProcUnbookToJobRequest.SerializeToString,
            host__pb2.ProcUnbookToJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)