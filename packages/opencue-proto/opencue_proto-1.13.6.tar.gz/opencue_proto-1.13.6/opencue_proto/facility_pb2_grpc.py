# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import facility_pb2 as facility__pb2


class FacilityInterfaceStub(object):
    """-------- Services --------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/facility.FacilityInterface/Create',
                request_serializer=facility__pb2.FacilityCreateRequest.SerializeToString,
                response_deserializer=facility__pb2.FacilityCreateResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/facility.FacilityInterface/Delete',
                request_serializer=facility__pb2.FacilityDeleteRequest.SerializeToString,
                response_deserializer=facility__pb2.FacilityDeleteResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/facility.FacilityInterface/Get',
                request_serializer=facility__pb2.FacilityGetRequest.SerializeToString,
                response_deserializer=facility__pb2.FacilityGetResponse.FromString,
                )
        self.Rename = channel.unary_unary(
                '/facility.FacilityInterface/Rename',
                request_serializer=facility__pb2.FacilityRenameRequest.SerializeToString,
                response_deserializer=facility__pb2.FacilityRenameResponse.FromString,
                )
        self.GetAllocations = channel.unary_unary(
                '/facility.FacilityInterface/GetAllocations',
                request_serializer=facility__pb2.FacilityGetAllocationsRequest.SerializeToString,
                response_deserializer=facility__pb2.FacilityGetAllocationsResponse.FromString,
                )


class FacilityInterfaceServicer(object):
    """-------- Services --------

    """

    def Create(self, request, context):
        """Create a facility.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """A facility is never really deleted, just make inactive.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Look up a facility by name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rename(self, request, context):
        """Rename the facility to a given name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllocations(self, request, context):
        """Get Allocations associated with this facility.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FacilityInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=facility__pb2.FacilityCreateRequest.FromString,
                    response_serializer=facility__pb2.FacilityCreateResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=facility__pb2.FacilityDeleteRequest.FromString,
                    response_serializer=facility__pb2.FacilityDeleteResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=facility__pb2.FacilityGetRequest.FromString,
                    response_serializer=facility__pb2.FacilityGetResponse.SerializeToString,
            ),
            'Rename': grpc.unary_unary_rpc_method_handler(
                    servicer.Rename,
                    request_deserializer=facility__pb2.FacilityRenameRequest.FromString,
                    response_serializer=facility__pb2.FacilityRenameResponse.SerializeToString,
            ),
            'GetAllocations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllocations,
                    request_deserializer=facility__pb2.FacilityGetAllocationsRequest.FromString,
                    response_serializer=facility__pb2.FacilityGetAllocationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'facility.FacilityInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FacilityInterface(object):
    """-------- Services --------

    """

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.FacilityInterface/Create',
            facility__pb2.FacilityCreateRequest.SerializeToString,
            facility__pb2.FacilityCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.FacilityInterface/Delete',
            facility__pb2.FacilityDeleteRequest.SerializeToString,
            facility__pb2.FacilityDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.FacilityInterface/Get',
            facility__pb2.FacilityGetRequest.SerializeToString,
            facility__pb2.FacilityGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Rename(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.FacilityInterface/Rename',
            facility__pb2.FacilityRenameRequest.SerializeToString,
            facility__pb2.FacilityRenameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllocations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.FacilityInterface/GetAllocations',
            facility__pb2.FacilityGetAllocationsRequest.SerializeToString,
            facility__pb2.FacilityGetAllocationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AllocationInterfaceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/facility.AllocationInterface/Create',
                request_serializer=facility__pb2.AllocCreateRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocCreateResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/facility.AllocationInterface/Delete',
                request_serializer=facility__pb2.AllocDeleteRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocDeleteResponse.FromString,
                )
        self.Find = channel.unary_unary(
                '/facility.AllocationInterface/Find',
                request_serializer=facility__pb2.AllocFindRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocFindResponse.FromString,
                )
        self.FindHosts = channel.unary_unary(
                '/facility.AllocationInterface/FindHosts',
                request_serializer=facility__pb2.AllocFindHostsRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocFindHostsResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/facility.AllocationInterface/Get',
                request_serializer=facility__pb2.AllocGetRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocGetResponse.FromString,
                )
        self.GetAll = channel.unary_unary(
                '/facility.AllocationInterface/GetAll',
                request_serializer=facility__pb2.AllocGetAllRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocGetAllResponse.FromString,
                )
        self.GetHosts = channel.unary_unary(
                '/facility.AllocationInterface/GetHosts',
                request_serializer=facility__pb2.AllocGetHostsRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocGetHostsResponse.FromString,
                )
        self.GetSubscriptions = channel.unary_unary(
                '/facility.AllocationInterface/GetSubscriptions',
                request_serializer=facility__pb2.AllocGetSubscriptionsRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocGetSubscriptionsResponse.FromString,
                )
        self.ReparentHosts = channel.unary_unary(
                '/facility.AllocationInterface/ReparentHosts',
                request_serializer=facility__pb2.AllocReparentHostsRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocReparentHostsResponse.FromString,
                )
        self.SetBillable = channel.unary_unary(
                '/facility.AllocationInterface/SetBillable',
                request_serializer=facility__pb2.AllocSetBillableRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocSetBillableResponse.FromString,
                )
        self.SetName = channel.unary_unary(
                '/facility.AllocationInterface/SetName',
                request_serializer=facility__pb2.AllocSetNameRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocSetNameResponse.FromString,
                )
        self.SetTag = channel.unary_unary(
                '/facility.AllocationInterface/SetTag',
                request_serializer=facility__pb2.AllocSetTagRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocSetTagResponse.FromString,
                )
        self.GetDefault = channel.unary_unary(
                '/facility.AllocationInterface/GetDefault',
                request_serializer=facility__pb2.AllocGetDefaultRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocGetDefaultResponse.FromString,
                )
        self.SetDefault = channel.unary_unary(
                '/facility.AllocationInterface/SetDefault',
                request_serializer=facility__pb2.AllocSetDefaultRequest.SerializeToString,
                response_deserializer=facility__pb2.AllocSetDefaultResponse.FromString,
                )


class AllocationInterfaceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Delete this allocation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Find(self, request, context):
        """Find an allocation by name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindHosts(self, request, context):
        """Use HostSearchCriteria to find a list of hosts
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Look up an allocation by id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Return a list of all allocations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHosts(self, request, context):
        """Returns the list of hosts in this allocation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSubscriptions(self, request, context):
        """Returns all subscriptions for this allocation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReparentHosts(self, request, context):
        """Assigns a list of hosts to this allocation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBillable(self, request, context):
        """Set an allocation billable or not billable.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetName(self, request, context):
        """Set the allocation name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTag(self, request, context):
        """Set the allocation tag.  Setting this will re-tag all the hosts in this allocation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefault(self, request, context):
        """Return the default allocation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDefault(self, request, context):
        """Set the default allocation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AllocationInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=facility__pb2.AllocCreateRequest.FromString,
                    response_serializer=facility__pb2.AllocCreateResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=facility__pb2.AllocDeleteRequest.FromString,
                    response_serializer=facility__pb2.AllocDeleteResponse.SerializeToString,
            ),
            'Find': grpc.unary_unary_rpc_method_handler(
                    servicer.Find,
                    request_deserializer=facility__pb2.AllocFindRequest.FromString,
                    response_serializer=facility__pb2.AllocFindResponse.SerializeToString,
            ),
            'FindHosts': grpc.unary_unary_rpc_method_handler(
                    servicer.FindHosts,
                    request_deserializer=facility__pb2.AllocFindHostsRequest.FromString,
                    response_serializer=facility__pb2.AllocFindHostsResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=facility__pb2.AllocGetRequest.FromString,
                    response_serializer=facility__pb2.AllocGetResponse.SerializeToString,
            ),
            'GetAll': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=facility__pb2.AllocGetAllRequest.FromString,
                    response_serializer=facility__pb2.AllocGetAllResponse.SerializeToString,
            ),
            'GetHosts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHosts,
                    request_deserializer=facility__pb2.AllocGetHostsRequest.FromString,
                    response_serializer=facility__pb2.AllocGetHostsResponse.SerializeToString,
            ),
            'GetSubscriptions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSubscriptions,
                    request_deserializer=facility__pb2.AllocGetSubscriptionsRequest.FromString,
                    response_serializer=facility__pb2.AllocGetSubscriptionsResponse.SerializeToString,
            ),
            'ReparentHosts': grpc.unary_unary_rpc_method_handler(
                    servicer.ReparentHosts,
                    request_deserializer=facility__pb2.AllocReparentHostsRequest.FromString,
                    response_serializer=facility__pb2.AllocReparentHostsResponse.SerializeToString,
            ),
            'SetBillable': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBillable,
                    request_deserializer=facility__pb2.AllocSetBillableRequest.FromString,
                    response_serializer=facility__pb2.AllocSetBillableResponse.SerializeToString,
            ),
            'SetName': grpc.unary_unary_rpc_method_handler(
                    servicer.SetName,
                    request_deserializer=facility__pb2.AllocSetNameRequest.FromString,
                    response_serializer=facility__pb2.AllocSetNameResponse.SerializeToString,
            ),
            'SetTag': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTag,
                    request_deserializer=facility__pb2.AllocSetTagRequest.FromString,
                    response_serializer=facility__pb2.AllocSetTagResponse.SerializeToString,
            ),
            'GetDefault': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefault,
                    request_deserializer=facility__pb2.AllocGetDefaultRequest.FromString,
                    response_serializer=facility__pb2.AllocGetDefaultResponse.SerializeToString,
            ),
            'SetDefault': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDefault,
                    request_deserializer=facility__pb2.AllocSetDefaultRequest.FromString,
                    response_serializer=facility__pb2.AllocSetDefaultResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'facility.AllocationInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AllocationInterface(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/Create',
            facility__pb2.AllocCreateRequest.SerializeToString,
            facility__pb2.AllocCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/Delete',
            facility__pb2.AllocDeleteRequest.SerializeToString,
            facility__pb2.AllocDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Find(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/Find',
            facility__pb2.AllocFindRequest.SerializeToString,
            facility__pb2.AllocFindResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindHosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/FindHosts',
            facility__pb2.AllocFindHostsRequest.SerializeToString,
            facility__pb2.AllocFindHostsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/Get',
            facility__pb2.AllocGetRequest.SerializeToString,
            facility__pb2.AllocGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/GetAll',
            facility__pb2.AllocGetAllRequest.SerializeToString,
            facility__pb2.AllocGetAllResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/GetHosts',
            facility__pb2.AllocGetHostsRequest.SerializeToString,
            facility__pb2.AllocGetHostsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSubscriptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/GetSubscriptions',
            facility__pb2.AllocGetSubscriptionsRequest.SerializeToString,
            facility__pb2.AllocGetSubscriptionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReparentHosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/ReparentHosts',
            facility__pb2.AllocReparentHostsRequest.SerializeToString,
            facility__pb2.AllocReparentHostsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetBillable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/SetBillable',
            facility__pb2.AllocSetBillableRequest.SerializeToString,
            facility__pb2.AllocSetBillableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/SetName',
            facility__pb2.AllocSetNameRequest.SerializeToString,
            facility__pb2.AllocSetNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/SetTag',
            facility__pb2.AllocSetTagRequest.SerializeToString,
            facility__pb2.AllocSetTagResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDefault(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/GetDefault',
            facility__pb2.AllocGetDefaultRequest.SerializeToString,
            facility__pb2.AllocGetDefaultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDefault(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/facility.AllocationInterface/SetDefault',
            facility__pb2.AllocSetDefaultRequest.SerializeToString,
            facility__pb2.AllocSetDefaultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)