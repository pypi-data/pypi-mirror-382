.TH ECC "1" "August 2012" "ecc" "Ecere SDK/eC Compiling Tools"
.SH NAME
ecc \- eC Compiler
.SH SYNOPSIS
.IX
ecc [\fB\-t\fR \fItarget\-platform\fR]
    [\fB\-cpp\fR \fIC\-preprocessor\fR]
    [\fB\-defaultns\fR \fIdefault\-namespace\fR]
    [\fB\-strictns\fR]
    [\fB\-memguard\fR]
    [\fB\-nolinenumbers\fR]
    [understood\-C\-flags]
    \fB\-c\fR \fIinput\fR
    [\fB\-o\fR \fIoutput\fR]
    [\fB\-symbols\fR \fIintermediate\-dir\fR]
.SH DESCRIPTION
ecc will compile the eC source file specified in \fIinput\fR to intermediate C code.
.P
Additionnally, it will generate the symbols import files (\fB.imp\fR) and (if the compiled source contains any internationalizable string) partial translation strings catalogs (\fB.bowl\fR) used by \fBecs\fR to produce the symbol loader, and generate the module's translation template (\fB.pot\fR).
.P
ecc relies on the symbols (\fB.sym\fR) for the input source as well as any other eC source files imported within it to be precompiled by \fBecp\fR, and found in \fIintermediate\-dir\fR.
.SH OPTIONS
.SS Output
\fB\-o\fR \fIoutput\fR
The location and name for the output intermediate C file
.RS 0
(Defaults to the location and name of \fIinput\fR with the \fB.ec\fR extension replaced by \fB.c\fR)
.SS Intermediate Directory
\fB\-symbols\fR \fIintermediate\-dir\fR
.P
Location of symbols (\fB.sym\fR) output from precompiler (\fBecp\fR), and where to output import files (\fB.imp\fR) and partial translation strings catalogs (\fB.bowl\fR)
.SS Platform
\fB\-t\fR \fItarget\-platform\fR
.P
Where \fBtarget\-platform\fR is one of: \fBwin32 linux apple\fR
.RS 0
(Defaults to the host platform if not specified)
.SS Toolchain Options
\fB\-cpp\fR \fIC\-preprocessor\fR
.P
Which C preprocessor to use (defaults to \fBgcc\fR)
.SS Namespace Options
\fB\-defaultns\fR \fIdefault\-namespace\fR
.P
   Assume all classes and namespaces defined in source file are within the namespace \fIdefault\-namespace\fR.
This does not affect constructs defined with the \fBdefault\fR access mode, which are non\-mangled and C compatible.
.P
\fB\-strictns\fR
   Do not automatically resolve constructs within namespaces and sub\-namespaces. All classes, functions and defines must then be explicitly qualified with their full namespaces.
.SS Debugging Options
.P
\fB\-memguard\fR
   Generate MemoryGuard function call stack information for use with MemoryGuard.
To enable MemoryGuard, the MemoryGuard configuration of the Ecere runtime library must be used.
The easiest way to do so is adding the ecere runtime library project (sdk/ecere/ecere.epj) to the workspace, toggle its configuration to "MemoryGuard" and build it.
MemoryGuard can then be toggled by toggling the active configuration of the ecere project.
.P
\fB\-nolinenumbers\fR
   Omit outputting eC source file line numbers in generated C file.
.SS Understood C Flags
\fB\-I\fR\fIincludedir\fR
.P
\fB\-isystem\fR|\fB\-isysroot\fR \fIsysincludedir\fR
.P
\fB\-D\fR\fIdefinition\fR
.P
\fB\-m32\fR
