.PHONY: all objdir cleantarget clean realclean distclean

ifneq ($(V),1)
.SILENT:
endif

MODULE := ecrt
BINDING_NAME := ecrt

# CORE VARIABLES

VERSION := 0.0.5
CONFIG := static
ifndef COMPILER
COMPILER := default
endif

# C_BINDINGS_SYMBOLS_PREFIX_ENABLE := y

TARGET_TYPE = staticlib

# INCLUDES

EC_SDK_SRC := $(dir $(realpath $(firstword $(MAKEFILE_LIST))))../../

_CF_DIR = $(EC_SDK_SRC)/
include $(_CF_DIR)crossplatform.mk
include $(_CF_DIR)$(COMPILER).cf

# POST-INCLUDES VARIABLES

OBJ = obj/$(CONFIG).$(PLATFORM)$(COMPILER_SUFFIX)$(DEBUG_SUFFIX)/

#	-Clink-arg=$(OBJ)/$(BINDING_NAME)$(O)

PRJ_CFLAGS += $(if $(DEBUG), -g, -O2 -ffast-math) $(FPIC) -w -I$(EC_SDK_SRC)bindings/c -DEC_STATIC

ifdef C_BINDINGS_SYMBOLS_PREFIX_ENABLE
PRJ_CFLAGS += -DECPRFX=eC_
endif

_OBJECTS = $(_DEP_OBJECTS) $(OBJ)/$(BINDING_NAME)$(O)

OBJECTS = $(_OBJECTS)

SOURCES = $(_DEP_SOURCES) $(BINDING_NAME).c

CBINDING_STATIC_LIB = $(OBJ)/lib$(BINDING_NAME)_cStatic.a

TARGET = $(CBINDING_STATIC_LIB)

all: objdir $(TARGET);

# OBJECT RULES

$(OBJ)/$(BINDING_NAME)$(O): $(BINDING_NAME).c
	$(CC) $(CFLAGS) $(PRJ_CFLAGS) -c $(call quote_path,$<) -o $(call quote_path,$@)

# TARGETS

objdir:
	$(call mkdir,$(OBJ))

$(SYMBOLS): | objdir
$(OBJECTS): | objdir

$(TARGET): $(SOURCES) $(OBJECTS) | objdir
	$(AR) rcs $(CBINDING_STATIC_LIB) $(_OBJECTS)
	$(call mkdir,$(EC_SDK_SRC)obj/$(PLATFORM)$(COMPILER_SUFFIX)/lib)
	$(call cp,$(CBINDING_STATIC_LIB),$(EC_SDK_SRC)obj/$(PLATFORM)$(COMPILER_SUFFIX)/lib)

cleantarget:
	$(call rm,$(TARGET))

clean: cleantarget
	$(call rm,$(_OBJECTS))

realclean: cleantarget
	$(call rmr,$(OBJ))

distclean:
	$(_MAKE) -f $(_CF_DIR)Cleanfile distclean distclean_all_subdirs
