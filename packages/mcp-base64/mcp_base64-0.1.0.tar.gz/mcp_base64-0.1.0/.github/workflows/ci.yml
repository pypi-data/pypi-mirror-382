name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python3 -m venv .venv
          ./.venv/bin/python -m pip install --upgrade pip
          ./.venv/bin/python -m pip install -e .[dev]

      - name: Test with pytest
        run: ./.venv/bin/python -m pytest -q

      - name: Integration test
        run: |
          timeout 15 bash -c 'printf "{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"initialize\",\"params\":{\"protocolVersion\":\"2024-11-05\",\"capabilities\":{},\"clientInfo\":{\"name\":\"test-client\",\"version\":\"1.0.0\"}}}\n" | ./.venv/bin/python -m mcp_base64.server' | grep -q "jsonrpc"

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: pypi
      url: https://pypi.org/p/mcp-base64
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Build package (PEP 517 via uv; no hatch needed)
        run: uv build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
