name =          "sparse_hnsw_search"
title =         "Search sparse HNSWM on MSMARCO"
description =   "Search sparse HNSWM on MSMARCO with memory budget 1.5"
dataset =       "Splade cocondenser on MS-MARCO"
# compile-command = "cargo build" # Compile in debug mode? default is release mode
build-command = "./target/release/hnsw_build"  # Unified build binary
query-command = "./target/release/hnsw_search" # Unified search binary
vector-type = "sparse"   # Vector type: "dense" or "sparse"
precision = "f16"        # Precision: "f32" for full-precision, "f16" for half-precision (Note: sparse only supports f16)
quantizer = "plain"      # Quantizer: "plain" for no compression, "pq" for Product Quantization (dense only)
graph-type = "standard"  # Graph type: "standard" or "fixed-degree"

[settings]
k =             10
n-runs =        1       # Number of runs. PLEASE think carefully how increasing 
                        #Â this may influence your query time
NUMA =        "numactl --physcpubind='0-15' --localalloc"    # Is the machine NUMA and need to prepend "numactl --physcpubind='0-15' --localalloc" to query command? Otherwise comment this!
build =         true   # Need to build the index or the index is already built?
metric =        "RR@10" # ir_measures metric (e.g. RR)

[folder] 
data =          "~/knn_datasets/sparse_datasets/msmarco_v1_passage/splade" # data base path
index =         "~/knn_indexes/sparse_datasets/msmarco_v1_passage/splade" # index input path
qrels_path =    "~/knn_datasets/sparse_datasets/msmarco_v1_passage/qrels.dev.small.tsv" 
experiment =    "."     # stdout and stderr here of running the experiment is saved here. in a specific subfolder for the current execution

[filename]
dataset =       "documents.bin"
queries =       "queries.bin" # queries input file
groundtruth =   "groundtruth.tsv" # ground truth input file
doc_ids =       "doc_ids.npy"
query_ids =     "queries_ids.npy"
index =         "ecir_2025_splade" # index input file name

[indexing_parameters]
m =            32
efc =          2000
metric =       "ip" # distance/similarity metric of the index, either "l2" or "ip"

[query]
    [query.efs_10]
    ef-search =      10
    [query.efs_20]
    ef-search =      20
    [query.efs_40]
    ef-search =      40
    [query.efs_80]
    ef-search =      80
    [query.efs_120]
    ef-search =      120
    [query.efs_200]
    ef-search =      200
    [query.efs_400]
    ef-search =      400
    [query.efs_600]
    ef-search =      600
    [query.efs_800]
    ef-search =      800