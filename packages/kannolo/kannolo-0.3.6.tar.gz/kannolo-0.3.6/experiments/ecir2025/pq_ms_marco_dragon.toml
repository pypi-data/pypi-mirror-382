name =          "dragon_hnsw_pq_search"
title =         "Search dense HNSWM on MSMARCO (Dragon)"
description =   "Search dense HNSWM on MSMARCO (Dragon)"
dataset =       "Dragon on MS-MARCO"
# compile-command = "cargo build" # Compile in debug mode? default is release mode
build-command = "./target/release/hnsw_build"  # Unified build binary
query-command = "./target/release/hnsw_search" # Unified search binary
vector-type = "dense"    # Vector type: "dense" or "sparse"
precision = "f32"        # Precision: "f32" for full-precision, "f16" for half-precision (Note: PQ always uses f32)
quantizer = "pq"         # Quantizer: "plain" for no compression, "pq" for Product Quantization (dense only)
graph-type = "standard"  # Graph type: "standard" or "fixed-degree"

[settings]
k =             10
n-runs =        1       # Number of runs. PLEASE think carefully how increasing 
                        #Â this may influence your query time
NUMA =        "numactl --physcpubind='0-15' --localalloc"    # Is the machine NUMA and need to prepend "numactl --physcpubind='0-15' --localalloc" to query command? Otherwise comment this!
build =         true   # Need to build the index or the index is already built?
metric =        "" # ir_measures metric (e.g. RR)

[folder] 
data =          "~/knn_datasets/dense_datasets/msmarco_v1_passage/dragon" # data base path
index =         "~/knn_indexes/dense_datasets/msmarco_v1_passage/dragon" # index input path
qrels_path =    ""
experiment =    "."     # stdout and stderr here of running the experiment is saved here. in a specific subfolder for the current execution

[filename]
dataset =       "dataset.npy" # dataset input file name
queries =       "queries.npy" # queries input file name
groundtruth =   "groundtruth.npy" # ground truth input file
doc_ids =       ""
query_ids =     ""
index =         "ecir_2025_pq_dragon" # index file name

[indexing_parameters]
m =            32
efc =          200
metric =       "ip" # distance/similarity metric of the index, either "l2" or "ip"

[pq_parameters]
m-pq =         192     # Number of PQ subspaces. Supported values: 4, 8, 16, 32, 48, 64, 96, 128, 192, 256, 384
nbits =       8        # Number of bits per subspace (determines 2^nbits centroids per subspace)
sample-size =  1000000 # Size of dataset sample used for PQ training

[query]
    [query.efs_10]
    ef-search =      10
    [query.efs_20]
    ef-search =      20
    [query.efs_40]
    ef-search =      40
    [query.efs_80]
    ef-search =      80
    [query.efs_120]
    ef-search =      120
    [query.efs_200]
    ef-search =      200
    [query.efs_400]
    ef-search =      400
    [query.efs_600]
    ef-search =      600
    [query.efs_800]
    ef-search =      800