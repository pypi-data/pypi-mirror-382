[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
version = "0.1.3"
name = "poulet_py"
description = "A library which hosts various neuroscience python methods"
readme = "README.md"
requires-python = ">=3.10,<3.14"
license = "GPL-3.0-or-later"
authors = [
  { name = "Viktor Karamanis", email = "viktor.karamanis@outlook.com" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

dependencies = [
  "lazy_loader==0.4.*",
  "pydantic==2.11.*",
  "pydantic-settings>=2.10,<2.12",
  "python-dotenv==1.1.*",
  "rich==14.1.*",
  "deprecated==1.2.*",
]

keywords = ["poulet_py"]

[project.urls]
Homepage = "https://github.com/poulet-lab/poulet_py"
Documentation = "https://github.com/poulet-lab/poulet_py"
Changelog = "https://github.com/poulet-lab/poulet_py/release-notes/"
Source = "https://github.com/poulet-lab/poulet_py"

[tool.hatch.metadata]
allow-direct-references = true
constraints-file = "constraints.txt"

[project.optional-dependencies]
## Sub-modules ##
# optional, define them on their corresponding module
# Converters
seq = [
  "setuptools==80.9.*", # needed for flirpy as it depends on pkg_resources
  "flirpy",             # install it separately from github repo
  "zstd==1.5.*",
  "pandas==2.3.*",
  "tqdm==4.67.*",
  "pillow==11.3.*",
  "h5py==3.14.*",
]
# Hardware
camera = [
  "pypylon==4.2.*",
  "opencv-python==4.12.*",
  "numpy==2.2.*",
  "scipy==1.16.*",
  "matplotlib==3.10.*",
  "h5py==3.14.*",
  "keyboard==0.13.*",
  "pywin32==311; platform_system == 'Windows'",
  "pythonnet==3.0.*",
]
arduino = ["pyserial==3.5.*"]
julabo = ["pyserial==3.5.*"]
qst = ["pandas==2.3.*", "tqdm==4.67.*", "pyserial==3.5.*"]
triggers = ["poulet_py[gpio]"]
gpio = ["gpiozero==2.0.*", "lgpio==0.2.*"]
# Tools

# Utils
osc = ["pandas==2.3.*", "matplotlib==3.10.*", "numpy==2.2.*"]
## Main modules ##
converters = ["poulet_py[seq]"]
hardware = ["poulet_py[camera, arduino, julabo, qst, triggers]"]
tools = ["orjson"]
utils = ["poulet_py[qst, osc]"]
# Install all modules
all = ["poulet_py[converters, hardware, tools, utils]"]
# Docs
docs = [
  "sphinx==8.2.*",
  "pydata-sphinx-theme==0.16.*",
  "sphinx-autodoc-typehints==3.2.*",
  "ipython==9.4.*",
]

[tool.hatch.envs.docs]
dependencies = ["poulet_py[all,docs]"]

[tool.hatch.envs.docs.scripts]
api = """
sphinx-apidoc -o docs/source/api \
poulet_py --force --separate \
--templatedir docs/_templates/apidoc \
--module-first -M -H "API reference"
"""

build = """
rm -rf docs/build && 
hatch run docs:api && 
sphinx-build -b html docs/source docs/build -j auto
"""
serve = """
hatch run docs:build && 
python -m http.server --directory docs/build 8000
"""

[tool.hatch.envs.lint]
dependencies = ["mypy==1.17.*", "ruff==0.12.*"]

[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:poulet_py tests}"
style = "ruff check"
fmt = "ruff check --fix --exit-zero && ruff format"
all = ["style", "typing"]

[tool.mypy]
strict = true
ignore_missing_imports = true

[tool.ruff]
line-length = 100
indent-width = 4
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
  "I",
]
ignore = ["ISC001"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402", "PLR2004", "S101", "TID252"]

[tool.ruff.format]
docstring-code-format = true
line-ending = "auto"
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
known-first-party = ["poulet_py"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
max-args = 15

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.hatch.envs.hatch-test]
extra-dependencies = [
  "pytest==8.4.*",
  "flirpy @ git+https://github.com/LJMUAstroecology/flirpy.git",
  "poulet_py[all]",
]

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.11", "3.12", "3.13"]
dependencies = [
  "pytest==8.4.*",
  "flirpy @ git+https://github.com/LJMUAstroecology/flirpy.git",
  "'poulet_py[all]'",
]

[tool.coverage.run]
source_pkgs = ["poulet_py", "tests"]
branch = true
parallel = true
omit = ["src/hello_world/__about__.py"]

[tool.coverage.paths]
poulet_py = ["poulet_py", "*/poulet_py/poulet_py"]
tests = ["tests", "*/poulet_py/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
