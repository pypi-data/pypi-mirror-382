image: registry.gitlab.com/ratio-case-os/docker/python-ci:latest

stages:
  - build
  - test
  - docs
  - deploy
  - trigger

.case-main: &case-main
  only:
    refs:
      - main

install:build:
  stage: build
  script:
    - just install
  artifacts:
    paths:
      - .venv/
    expire_in: 1 day

wheel:build:
  stage: build
  needs: [install:build]
  script:
    - just build
  artifacts:
    paths:
      - dist/

pytest:test:
  stage: test
  needs: [install:build]
  script:
    - just test
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ./.pytest_cache/coverage.xml
    paths:
      - docs/

lint:test:
  stage: test
  allow_failure: true
  needs: [install:build]
  script:
    - just lint

version:test:
  stage: test
  allow_failure: true
  needs: [install:build]
  script:
    - git config --global --add safe.directory /builds/ratio-case-os/python/ragraph
    - just version

pages:
  stage: docs
  <<: *case-main
  dependencies:
    - install:build
    - pytest:test
  script:
    - just docs
    - mv ${CI_PROJECT_DIR}/dist/docs/ public/
  artifacts:
    paths:
      - public

# Publish using an OIDC token.
# See https://docs.pypi.org/trusted-publishers/using-a-publisher/#gitlab-cicd
python-deploy:
  stage: deploy
  <<: *case-main
  image: python:3-slim
  allow_failure: true
  dependencies:
    - wheel:build
  id_tokens:
    PYPI_ID_TOKEN:
      # Use "testpypi" if uploading to TestPyPI
      aud: pypi
  script:
    # Install dependencies
    - apt update && apt install -y curl jq
    - python -m pip install -U twine id

    # Retrieve the OIDC token from GitLab CI/CD, and exchange it for a PyPI API token
    - oidc_token=$(python -m id PYPI)
    # Replace "https://pypi.org/*" with "https://test.pypi.org/*" if uploading to TestPyPI
    - resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - api_token=$(jq --raw-output '.token' <<< "${resp}")

    # Upload to PyPI authenticating via the newly-minted token
    # Add "--repository testpypi" if uploading to TestPyPI
    - twine upload -u __token__ -p "${api_token}" dist/*

trigger:
  stage: trigger
  <<: *case-main
  image: curlimages/curl
  script:
    - "curl -X POST --fail -F token=${SAVANNA_TRIGGER} -F ref=main https://gitlab.com/api/v4/projects/44900615/trigger/pipeline"
