# pyproject.toml

[build-system]
requires = ["hatchling>=1.5.0", "jupyterlab>=4.0.0,<5", "hatch-nodejs-version>=0.3.2"]
build-backend = "hatchling.build"

[project]
name = "gofigr"
version = "1.3.0"
description = "GoFigr client library"
readme = "README.rst"
authors = [{ name = "Maciej Pacula", email = "maciej@gofigr.io" }]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
    "Framework :: Jupyter :: JupyterLab :: 4",
    "Framework :: Jupyter :: JupyterLab :: Extensions",
    "Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["science", "visualization", "version control", "plotting", "data", "reproducibility"]
dependencies = [
    "numpy", "pandas", "pyqrcode", "pillow", "matplotlib", "dateutils",
    "python-dateutil", "ipython", "requests", "pypng", "plotly", "kaleido",
    "humanize", "blake3", "GitPython", "ipywidgets", "nest-asyncio"
]
requires-python = ">=3.8"

[project.optional-dependencies]
dev = ["pip-tools", "bumpver", "build", "twine", "pylint", "flake8", "sphinx", "sphinx_rtd_theme",
       "sphinxcontrib-jquery", "seaborn", "matplotlib", "tqdm", "selenium", "webdriver-manager", "openpyxl",
       "py3Dmol", "html2image", "teamcity-messages", "plotnine", "hatch", "hatchling", "jupyterlab",
       "hatch-nodejs-version"]

databricks = ["databricks-sdk"]

[project.urls]
Homepage = "https://www.gofigr.io"
Documentation = "https://gofigr.io/docs/gofigr-python/1.3.0/"

[project.scripts]
gfconfig = "gofigr.gfconfig:main"

[tool.bumpver]
current_version = "1.3.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = false

[tool.hatch.build]
exclude = [
     "venv",
    "node_modules",
    "**/node_modules",
    "**/venv",
    "build",
    ".npm",
    "package-lock.json",
    "yarn.lock",
    ".yarn",
    "**/.yarn"
]

[tool.hatch.version]
source = "nodejs"

[tool.hatch.metadata.hooks.nodejs]
fields = ["description", "authors", "urls", "keywords"]

[tool.hatch.build.targets.sdist]
artifacts = ["gofigr/labextension"]
exclude = [".github", "binder", "venv", "node_modules", ".yarn"]

[tool.hatch.build.targets.wheel.shared-data]
"gofigr/labextension" = "share/jupyter/labextensions/gofigr"
"install.json" = "share/jupyter/labextensions/gofigr/install.json"

[tool.hatch.build.hooks.version]
path = "gofigr/_version.py"

[tool.hatch.build.hooks.jupyter-builder]
dependencies = ["hatch-jupyter-builder>=0.5"]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "gofigr/labextension/static/style.js",
    "gofigr/labextension/package.json",
]
#skip-if-exists = ["gofigr/labextension/static/style.js"]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
build_cmd = "build:prod"
npm = ["jlpm"]

[tool.hatch.build.hooks.jupyter-builder.editable-build-kwargs]
build_cmd = "install:extension"
npm = ["jlpm"]
source_dir = "src"
build_dir = "gofigr/labextension"

[tool.jupyter-releaser.options]
version_cmd = "hatch version"

[tool.jupyter-releaser.hooks]
before-build-npm = [
    "python -m pip install 'jupyterlab>=4.0.0,<5'",
    "jlpm",
    "jlpm build:prod"
]
before-build-python = ["jlpm clean:all"]

[tool.check-wheel-contents]
ignore = ["W002"]


[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'version = "{version}"',
    'gofigr-python/{version}/'
]

"version.txt" = [
    '{version}'
]

"package.json" = [
    '"version": "{version}"'
]

"docs/source/conf.py" = [
    "release = '{version}'"
]

"docs/source/index.rst" = [
    "{version}"
]

"README.rst" = [
    "{version}"
]