import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "private/qqmlabstractcolumnmodel_p.h"
        lineNumber: 25
        name: "QQmlAbstractColumnModel"
        accessSemantics: "reference"
        defaultProperty: "columns"
        prototype: "QAbstractItemModel"
        interfaces: ["QQmlParserStatus"]
        Property {
            name: "columnCount"
            type: "int"
            read: "columnCount"
            notify: "columnCountChanged"
            index: 0
            isReadonly: true
            isFinal: true
        }
        Property {
            name: "columns"
            type: "QQmlTableModelColumn"
            isList: true
            read: "columns"
            index: 1
            isReadonly: true
            isFinal: true
            isPropertyConstant: true
        }
        Signal { name: "columnCountChanged" }
        Signal { name: "rowsChanged" }
        Method {
            name: "data"
            type: "QVariant"
            isMethodConstant: true
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "QString" }
        }
        Method {
            name: "data"
            type: "QVariant"
            isMethodConstant: true
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            isCloned: true
            isMethodConstant: true
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "QString" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            isCloned: true
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component {
        file: "private/qqmldelegatechooser_p.h"
        lineNumber: 36
        name: "QQmlDelegateChoice"
        accessSemantics: "reference"
        defaultProperty: "delegate"
        prototype: "QObject"
        exports: [
            "Qt.labs.qmlmodels/DelegateChoice 1.0",
            "Qt.labs.qmlmodels/DelegateChoice 6.0"
        ]
        exportMetaObjectRevisions: [256, 1536]
        Property {
            name: "roleValue"
            type: "QVariant"
            read: "roleValue"
            write: "setRoleValue"
            notify: "roleValueChanged"
            index: 0
            isFinal: true
        }
        Property {
            name: "row"
            type: "int"
            read: "row"
            write: "setRow"
            notify: "rowChanged"
            index: 1
            isFinal: true
        }
        Property {
            name: "index"
            type: "int"
            read: "row"
            write: "setRow"
            notify: "indexChanged"
            index: 2
            isFinal: true
        }
        Property {
            name: "column"
            type: "int"
            read: "column"
            write: "setColumn"
            notify: "columnChanged"
            index: 3
            isFinal: true
        }
        Property {
            name: "delegate"
            type: "QQmlComponent"
            isPointer: true
            read: "delegate"
            write: "setDelegate"
            notify: "delegateChanged"
            index: 4
            isFinal: true
        }
        Signal { name: "roleValueChanged" }
        Signal { name: "rowChanged" }
        Signal { name: "indexChanged" }
        Signal { name: "columnChanged" }
        Signal { name: "delegateChanged" }
        Signal { name: "changed" }
    }
    Component {
        file: "private/qqmldelegatechooser_p.h"
        lineNumber: 28
        name: "QQmlDelegateChooser"
        accessSemantics: "reference"
        defaultProperty: "choices"
        prototype: "QQmlAbstractDelegateComponent"
        exports: [
            "Qt.labs.qmlmodels/DelegateChooser 1.0",
            "Qt.labs.qmlmodels/DelegateChooser 2.0",
            "Qt.labs.qmlmodels/DelegateChooser 6.0"
        ]
        exportMetaObjectRevisions: [256, 512, 1536]
        Property {
            name: "role"
            type: "QString"
            read: "role"
            write: "setRole"
            notify: "roleChanged"
            index: 0
            isFinal: true
        }
        Property {
            name: "choices"
            type: "QQmlDelegateChoice"
            isList: true
            read: "choices"
            index: 1
            isReadonly: true
            isFinal: true
            isPropertyConstant: true
        }
        Signal { name: "roleChanged" }
    }
    Component {
        file: "private/qqmltablemodel_p.h"
        lineNumber: 32
        name: "QQmlTableModel"
        accessSemantics: "reference"
        defaultProperty: "columns"
        prototype: "QQmlAbstractColumnModel"
        exports: [
            "Qt.labs.qmlmodels/TableModel 1.0",
            "Qt.labs.qmlmodels/TableModel 6.0",
            "Qt.labs.qmlmodels/TableModel 6.4"
        ]
        exportMetaObjectRevisions: [256, 1536, 1540]
        Property {
            name: "rowCount"
            type: "int"
            read: "rowCount"
            notify: "rowCountChanged"
            index: 0
            isReadonly: true
            isFinal: true
        }
        Property {
            name: "rows"
            type: "QVariant"
            read: "rows"
            write: "setRows"
            notify: "rowsChanged"
            index: 1
            isFinal: true
        }
        Signal { name: "rowCountChanged" }
        Method {
            name: "appendRow"
            Parameter { name: "row"; type: "QVariant" }
        }
        Method { name: "clear" }
        Method {
            name: "getRow"
            type: "QVariant"
            Parameter { name: "rowIndex"; type: "int" }
        }
        Method {
            name: "insertRow"
            Parameter { name: "rowIndex"; type: "int" }
            Parameter { name: "row"; type: "QVariant" }
        }
        Method {
            name: "moveRow"
            Parameter { name: "fromRowIndex"; type: "int" }
            Parameter { name: "toRowIndex"; type: "int" }
            Parameter { name: "rows"; type: "int" }
        }
        Method {
            name: "moveRow"
            isCloned: true
            Parameter { name: "fromRowIndex"; type: "int" }
            Parameter { name: "toRowIndex"; type: "int" }
        }
        Method {
            name: "removeRow"
            Parameter { name: "rowIndex"; type: "int" }
            Parameter { name: "rows"; type: "int" }
        }
        Method {
            name: "removeRow"
            isCloned: true
            Parameter { name: "rowIndex"; type: "int" }
        }
        Method {
            name: "setRow"
            Parameter { name: "rowIndex"; type: "int" }
            Parameter { name: "row"; type: "QVariant" }
        }
    }
    Component {
        file: "private/qqmltablemodelcolumn_p.h"
        lineNumber: 30
        name: "QQmlTableModelColumn"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "Qt.labs.qmlmodels/TableModelColumn 1.0",
            "Qt.labs.qmlmodels/TableModelColumn 6.0"
        ]
        exportMetaObjectRevisions: [256, 1536]
        Property {
            name: "display"
            type: "QJSValue"
            read: "display"
            write: "setDisplay"
            notify: "displayChanged"
            index: 0
            isFinal: true
        }
        Property {
            name: "decoration"
            type: "QJSValue"
            read: "decoration"
            write: "setDecoration"
            notify: "decorationChanged"
            index: 1
            isFinal: true
        }
        Property {
            name: "edit"
            type: "QJSValue"
            read: "edit"
            write: "setEdit"
            notify: "editChanged"
            index: 2
            isFinal: true
        }
        Property {
            name: "toolTip"
            type: "QJSValue"
            read: "toolTip"
            write: "setToolTip"
            notify: "toolTipChanged"
            index: 3
            isFinal: true
        }
        Property {
            name: "statusTip"
            type: "QJSValue"
            read: "statusTip"
            write: "setStatusTip"
            notify: "statusTipChanged"
            index: 4
            isFinal: true
        }
        Property {
            name: "whatsThis"
            type: "QJSValue"
            read: "whatsThis"
            write: "setWhatsThis"
            notify: "whatsThisChanged"
            index: 5
            isFinal: true
        }
        Property {
            name: "font"
            type: "QJSValue"
            read: "font"
            write: "setFont"
            notify: "fontChanged"
            index: 6
            isFinal: true
        }
        Property {
            name: "textAlignment"
            type: "QJSValue"
            read: "textAlignment"
            write: "setTextAlignment"
            notify: "textAlignmentChanged"
            index: 7
            isFinal: true
        }
        Property {
            name: "background"
            type: "QJSValue"
            read: "background"
            write: "setBackground"
            notify: "backgroundChanged"
            index: 8
            isFinal: true
        }
        Property {
            name: "foreground"
            type: "QJSValue"
            read: "foreground"
            write: "setForeground"
            notify: "foregroundChanged"
            index: 9
            isFinal: true
        }
        Property {
            name: "checkState"
            type: "QJSValue"
            read: "checkState"
            write: "setCheckState"
            notify: "checkStateChanged"
            index: 10
            isFinal: true
        }
        Property {
            name: "accessibleText"
            type: "QJSValue"
            read: "accessibleText"
            write: "setAccessibleText"
            notify: "accessibleTextChanged"
            index: 11
            isFinal: true
        }
        Property {
            name: "accessibleDescription"
            type: "QJSValue"
            read: "accessibleDescription"
            write: "setAccessibleDescription"
            notify: "accessibleDescriptionChanged"
            index: 12
            isFinal: true
        }
        Property {
            name: "sizeHint"
            type: "QJSValue"
            read: "sizeHint"
            write: "setSizeHint"
            notify: "sizeHintChanged"
            index: 13
            isFinal: true
        }
        Signal { name: "indexChanged" }
        Signal { name: "displayChanged" }
        Signal { name: "decorationChanged" }
        Signal { name: "editChanged" }
        Signal { name: "toolTipChanged" }
        Signal { name: "statusTipChanged" }
        Signal { name: "whatsThisChanged" }
        Signal { name: "fontChanged" }
        Signal { name: "textAlignmentChanged" }
        Signal { name: "backgroundChanged" }
        Signal { name: "foregroundChanged" }
        Signal { name: "checkStateChanged" }
        Signal { name: "accessibleTextChanged" }
        Signal { name: "accessibleDescriptionChanged" }
        Signal { name: "sizeHintChanged" }
    }
    Component {
        file: "private/qqmltreemodel_p.h"
        lineNumber: 34
        name: "QQmlTreeModel"
        accessSemantics: "reference"
        defaultProperty: "columns"
        prototype: "QQmlAbstractColumnModel"
        exports: ["Qt.labs.qmlmodels/TreeModel 6.10"]
        exportMetaObjectRevisions: [1546]
        Property {
            name: "rows"
            type: "QVariant"
            read: "rows"
            write: "setRows"
            notify: "rowsChanged"
            index: 0
            isFinal: true
        }
        Method {
            name: "appendRow"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "row"; type: "QVariant" }
        }
        Method {
            name: "appendRow"
            Parameter { name: "row"; type: "QVariant" }
        }
        Method { name: "clear" }
        Method {
            name: "getRow"
            type: "QVariant"
            isMethodConstant: true
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "removeRow"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setRow"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "rowData"; type: "QVariant" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "rowIndex"; type: "std::vector<int>" }
            Parameter { name: "column"; type: "int" }
        }
    }
}
