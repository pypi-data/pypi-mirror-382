[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "memara"
version = "0.2.0"
description = "Official Python SDK for the Memara API - Give your AI a perfect memory"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
license-files = ["LICENSE"]
authors = [
    {name = "Memara Team", email = "hello@memara.io"}
]
keywords = ["ai", "memory", "api", "sdk", "artificial-intelligence", "llm", "gpt", "claude"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

dependencies = [
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0", 
    "black>=23.7.0",
    "mypy>=1.4.1",
    "isort>=5.12.0",
    "httpx[dev]>=0.24.0",
]

[project.urls]
Homepage = "https://memara.io"
Documentation = "https://memara.io/docs"
Repository = "https://github.com/memara-ai/memara-python-sdk"
"Bug Tracker" = "https://github.com/memara-ai/memara-python-sdk/issues"
Changelog = "https://github.com/memara-ai/memara-python-sdk/blob/main/CHANGELOG.md"

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=memara --cov-report=html --cov-report=term-missing"

# Custom scripts for Docker development workflow
[tool.docker-scripts]
start = "./scripts/docker-sdk.sh start"
stop = "./scripts/docker-sdk.sh stop"  
dev = "./scripts/docker-sdk.sh dev"
test = "./scripts/docker-sdk.sh test-run"
build = "./scripts/docker-sdk.sh build"
lint = "./scripts/docker-sdk.sh lint"
format = "./scripts/docker-sdk.sh format"
shell = "./scripts/docker-sdk.sh shell" 
publish-test = "./scripts/docker-sdk.sh publish-test"
publish = "./scripts/docker-sdk.sh publish"
