# coding: utf-8

"""
Notehub API

The OpenAPI definition for the Notehub.io API.

The version of the OpenAPI document: 1.2.0
Contact: engineering@blues.io
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from notehub_py.models.usage_route_logs_response import UsageRouteLogsResponse


class TestUsageRouteLogsResponse(unittest.TestCase):
    """UsageRouteLogsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UsageRouteLogsResponse:
        """Test UsageRouteLogsResponse
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `UsageRouteLogsResponse`
        """
        model = UsageRouteLogsResponse()
        if include_optional:
            return UsageRouteLogsResponse(
                data = [
                    notehub_py.models.usage_route_logs_data.UsageRouteLogsData(
                        device = '', 
                        failed_routes = 4, 
                        period = '2025-07-23T00:00Z', 
                        successful_routes = 38, 
                        total_routes = 42, )
                    ]
            )
        else:
            return UsageRouteLogsResponse(
                data = [
                    notehub_py.models.usage_route_logs_data.UsageRouteLogsData(
                        device = '', 
                        failed_routes = 4, 
                        period = '2025-07-23T00:00Z', 
                        successful_routes = 38, 
                        total_routes = 42, )
                    ],
        )
        """

    def testUsageRouteLogsResponse(self):
        """Test UsageRouteLogsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
