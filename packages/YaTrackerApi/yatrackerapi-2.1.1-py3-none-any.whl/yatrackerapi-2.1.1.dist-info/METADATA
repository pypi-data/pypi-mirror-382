Metadata-Version: 2.4
Name: YaTrackerApi
Version: 2.1.1
Summary: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π Python –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Yandex Tracker API —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
Project-URL: Homepage, https://github.com/imdeniil/YaTrackerApi
Project-URL: Repository, https://github.com/imdeniil/YaTrackerApi
Project-URL: Issues, https://github.com/imdeniil/YaTrackerApi/issues
Project-URL: Documentation, https://github.com/imdeniil/YaTrackerApi#readme
Author-email: –î–∞–Ω–∏–∏–ª <keemor821@gmail.com>
Maintainer-email: –î–∞–Ω–∏–∏–ª <keemor821@gmail.com>
License: MIT
License-File: LICENSE
Keywords: aiohttp,api,async,project-management,task-tracker,tracker,yandex
Classifier: Development Status :: 4 - Beta
Classifier: Framework :: AsyncIO
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Office/Business :: Groupware
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.9
Requires-Dist: aiohttp>=3.12.15
Requires-Dist: python-dotenv>=1.1.1
Description-Content-Type: text/markdown

# YaTrackerApi

> –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π Python –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Yandex Tracker API —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π

[![PyPI version](https://badge.fury.io/py/YaTrackerApi.svg)](https://badge.fury.io/py/YaTrackerApi)
[![Python](https://img.shields.io/pypi/pyversions/YaTrackerApi.svg)](https://pypi.org/project/YaTrackerApi/)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

## üìã –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ

- [–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏](#-–æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏)
- [–£—Å—Ç–∞–Ω–æ–≤–∫–∞](#-—É—Å—Ç–∞–Ω–æ–≤–∫–∞)
- [–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç](#-–±—ã—Å—Ç—Ä—ã–π-—Å—Ç–∞—Ä—Ç)
- [–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏](#-–æ—Å–Ω–æ–≤–Ω—ã–µ-–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏)
  - [–†–∞–±–æ—Ç–∞ —Å –∑–∞–¥–∞—á–∞–º–∏](#—Ä–∞–±–æ—Ç–∞-—Å-–∑–∞–¥–∞—á–∞–º–∏)
  - [–°–≤—è–∑–∏ –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏](#—Å–≤—è–∑–∏-–º–µ–∂–¥—É-–∑–∞–¥–∞—á–∞–º–∏)
  - [–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞–º–∏](#—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ-—Å—Ç–∞—Ç—É—Å–∞–º–∏)
  - [–ß–µ–∫–ª–∏—Å—Ç—ã](#—á–µ–∫–ª–∏—Å—Ç—ã)
  - [–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏](#–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏)
  - [–†–∞–±–æ—Ç–∞ —Å –ø–æ–ª—è–º–∏](#—Ä–∞–±–æ—Ç–∞-—Å-–ø–æ–ª—è–º–∏)
  - [–†–∞–±–æ—Ç–∞ —Å —Å—É—â–Ω–æ—Å—Ç—è–º–∏](#—Ä–∞–±–æ—Ç–∞-—Å-—Å—É—â–Ω–æ—Å—Ç—è–º–∏)
  - [–†–∞–±–æ—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏](#—Ä–∞–±–æ—Ç–∞-—Å-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏)
  - [–†–∞–±–æ—Ç–∞ —Å –æ—á–µ—Ä–µ–¥—è–º–∏](#—Ä–∞–±–æ—Ç–∞-—Å-–æ—á–µ—Ä–µ–¥—è–º–∏)
- [API –ú–æ–¥—É–ª–∏](#-api-–º–æ–¥—É–ª–∏)
- [–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏](#-–æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏-–∏-–ø–æ–¥–≤–æ–¥–Ω—ã–µ-–∫–∞–º–Ω–∏)
- [–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è](#-—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è)
- [–õ–∏—Ü–µ–Ω–∑–∏—è](#-–ª–∏—Ü–µ–Ω–∑–∏—è)
- [–ö–æ–Ω—Ç–∞–∫—Ç—ã](#-–∫–æ–Ω—Ç–∞–∫—Ç—ã)

## ‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏

- **–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å** - –ø–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ `async/await` –Ω–∞ –±–∞–∑–µ `aiohttp`
- **–ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞** - –ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ –º–æ–¥—É–ª—è–º
- **Lazy Loading** - –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏
- **–¢–∏–ø–∏–∑–∞—Ü–∏—è** - –ø–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–∏–ø–æ–≤ –¥–ª—è –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤
- **–ì–∏–±–∫–æ—Å—Ç—å** - –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–æ–ª—è (—Å—Ç—Ä–æ–∫–∏, —á–∏—Å–ª–∞, –æ–±—ä–µ–∫—Ç—ã)
- **–í–∞–ª–∏–¥–∞—Ü–∏—è** - –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
- **–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ** - —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º —É—Ä–æ–≤–Ω–µ–º
- **–ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è** - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–æ–ª–µ–π –ª—é–±—ã—Ö —Ç–∏–ø–æ–≤
- **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å** - –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π SSL/TLS –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –≤—Å–µ—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π

## üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞

```bash
pip install YaTrackerApi
```

–ò–ª–∏ —á–µ—Ä–µ–∑ `uv`:

```bash
uv add YaTrackerApi
```

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

```python
import asyncio
from client import YandexTrackerClient

async def main():
    async with YandexTrackerClient(
        oauth_token="your_oauth_token",
        org_id="your_org_id",
        log_level="INFO"
    ) as client:
        # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
        issue = await client.issues.create(
            summary="–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞",
            queue="TESTBOT",
            description="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏"
        )
        print(f"–°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞: {issue['key']}")

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
        issue = await client.issues.get('TESTBOT-1')
        print(f"–ó–∞–¥–∞—á–∞: {issue['summary']}")

if __name__ == "__main__":
    asyncio.run(main())
```

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env` –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞:

```env
TRACKER_API_KEY=your_oauth_token
TRACKER_ORG_ID=your_org_id
```

–ò –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏—Ö:

```python
from dotenv import load_dotenv
import os

load_dotenv()

async with YandexTrackerClient(
    oauth_token=os.getenv("TRACKER_API_KEY"),
    org_id=os.getenv("TRACKER_ORG_ID")
) as client:
    # –≤–∞—à –∫–æ–¥
```

## üí° –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

### –†–∞–±–æ—Ç–∞ —Å –∑–∞–¥–∞—á–∞–º–∏

#### –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏

```python
# –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ
issue = await client.issues.create(
    summary="–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞",
    queue="TESTBOT"
)

# –° –ø–æ–ª–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
issue = await client.issues.create(
    summary="–ó–∞–¥–∞—á–∞ —Å –ø–æ–ª–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏",
    queue="TESTBOT",
    description="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
    assignee="username",
    priority={"id": "2", "key": "minor"},
    type="bug",
    tags=["backend", "urgent"]
)

# –° –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
issue = await client.issues.create(
    summary="–ó–∞–¥–∞—á–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø–æ–ª—è–º–∏",
    queue="TESTBOT",
    localfields={
        "numberOfEmployees": 10,
        "contact_cl": "–û–û–û –†–æ–≥–∞ –∏ –ö–æ–ø—ã—Ç–∞",
        "customPriority": "–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π"
    }
)
```

#### –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏

```python
# –ë–∞–∑–æ–≤–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ
issue = await client.issues.get('TESTBOT-1')

# –° —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
issue = await client.issues.get(
    'TESTBOT-1',
    expand=['transitions', 'attachments']
)
```

#### –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏

```python
# –ü—Ä–æ—Å—Ç–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
await client.issues.update(
    issue_id='TESTBOT-1',
    summary="–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"
)

# –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
await client.issues.update(
    issue_id='TESTBOT-1',
    summary="–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ",
    description="–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
    priority={"id": "1", "key": "critical"},
    assignee="new_assignee",
    tags={"add": ["new_tag"], "remove": ["old_tag"]}
)
```

#### –ü–µ—Ä–µ–Ω–æ—Å –∑–∞–¥–∞—á–∏

```python
# –ü–µ—Ä–µ–Ω–æ—Å –≤ –¥—Ä—É–≥—É—é –æ—á–µ—Ä–µ–¥—å
issue = await client.issues.move(
    issue_id='TESTBOT-1',
    queue='NEWQUEUE',
    move_all_fields=True,
    initial_status=True
)
```

#### –ü–æ–∏—Å–∫ –∑–∞–¥–∞—á

```python
# –ü–æ–∏—Å–∫ —Å —Ñ–∏–ª—å—Ç—Ä–æ–º
issues = await client.issues.search(
    filter={"queue": "TESTBOT", "assignee": "me()"},
    order="+status",
    expand=["transitions", "attachments"],
    per_page=50
)

# –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
issues = await client.issues.search(
    query="Queue: TESTBOT AND Status: Open"
)
```

#### –ü–æ–¥—Å—á–µ—Ç –∑–∞–¥–∞—á

```python
count = await client.issues.count(
    query="Queue: TESTBOT AND Status: New"
)
print(f"–ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á: {count}")
```

#### –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤

```python
# –í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã
priorities = await client.issues.priorities()

# –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã
priorities = await client.issues.priorities(localized=True)
```

#### –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π

```python
changelog = await client.issues.changelog('TESTBOT-1')
for change in changelog:
    print(f"{change['updatedAt']}: {change['updatedBy']['display']}")
```

### –°–≤—è–∑–∏ –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏

```python
# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤—è–∑–µ–π
links = await client.issues.links.get('TESTBOT-1')

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤—è–∑–∏
await client.issues.links.create(
    issue_id='TESTBOT-1',
    relationship='relates',
    issue='TESTBOT-2'
)

# –£–¥–∞–ª–µ–Ω–∏–µ —Å–≤—è–∑–∏
await client.issues.links.delete(
    issue_id='TESTBOT-1',
    link_id='12345'
)
```

### –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞–º–∏

```python
# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
transitions = await client.issues.transitions.get('TESTBOT-1')

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ—Ö–æ–¥–∞
await client.issues.transitions.update(
    issue_id='TESTBOT-1',
    transition_id='resolve'
)
```

### –ß–µ–∫–ª–∏—Å—Ç—ã

```python
# –ü–æ–ª—É—á–µ–Ω–∏–µ —á–µ–∫–ª–∏—Å—Ç–æ–≤ –∑–∞–¥–∞—á–∏
checklists = await client.issues.checklists.get('TESTBOT-1')

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–∞ —á–µ–∫–ª–∏—Å—Ç–∞
await client.issues.checklists.create(
    issue_id='TESTBOT-1',
    text='–í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞—á—É',
    checked=False
)

# –°–æ–∑–¥–∞–Ω–∏–µ —Å –¥–µ–¥–ª–∞–π–Ω–æ–º
await client.issues.checklists.create(
    issue_id='TESTBOT-1',
    text='–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Ä–µ–ª–∏–∑',
    checked=False,
    deadline={
        'date': '2025-12-31T23:59:59.000+0000',
        'deadlineType': 'date'
    }
)

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—É–Ω–∫—Ç–∞ —á–µ–∫–ª–∏—Å—Ç–∞
await client.issues.checklists.item.update(
    issue_id='TESTBOT-1',
    checklist_item_id='item123',
    text='–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç',
    checked=True
)

# –£–¥–∞–ª–µ–Ω–∏–µ –ø—É–Ω–∫—Ç–∞
await client.issues.checklists.item.delete(
    issue_id='TESTBOT-1',
    checklist_item_id='item123'
)
```

### –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏

```python
# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
comments = await client.issues.comments.get('TESTBOT-1')

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
await client.issues.comments.create(
    issue_id='TESTBOT-1',
    text='–†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞',
    summonees=['user1', 'user2']
)

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
await client.issues.comments.update(
    issue_id='TESTBOT-1',
    comment_id='123',
    text='–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'
)

# –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
await client.issues.comments.delete(
    issue_id='TESTBOT-1',
    comment_id='123'
)
```

### –†–∞–±–æ—Ç–∞ —Å –ø–æ–ª—è–º–∏

```python
# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª–µ–π
fields = await client.issues.fields.get()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—è
field = await client.issues.fields.get(field_id='customField1')

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è
await client.fields.create(
    name="–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–æ–µ–∫—Ç–∞",
    key="projectPriority",
    category="0000000000000001",
    type="ru.yandex.startrek.core.fields.StringFieldType"
)

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è
await client.fields.update(
    field_id='customField1',
    name="–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è"
)

# –†–∞–±–æ—Ç–∞ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ –æ—á–µ—Ä–µ–¥–∏
local_fields = await client.fields.local.get(queue_id='TESTBOT')

# –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—è
await client.fields.local.create(
    queue_id='TESTBOT',
    name="–õ–æ–∫–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ",
    key="localField1"
)
```

### –†–∞–±–æ—Ç–∞ —Å —Å—É—â–Ω–æ—Å—Ç—è–º–∏

–°—É—â–Ω–æ—Å—Ç–∏ –≤ Yandex Tracker - —ç—Ç–æ –ø—Ä–æ–µ–∫—Ç—ã, –ø–æ—Ä—Ç—Ñ–µ–ª–∏ –∏ —Ü–µ–ª–∏.

```python
# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
project = await client.entities.create(
    entity_type="project",
    summary="–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç",
    lead="username"
)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏
entity = await client.entities.get(
    entity_id="project123",
    expand=["attachments"]
)

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏
await client.entities.update(
    entity_id="project123",
    summary="–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
)

# –ü–æ–∏—Å–∫ —Å—É—â–Ω–æ—Å—Ç–µ–π
entities = await client.entities.search(
    entity_type="project",
    filter={"lead": "username"},
    order="+createdAt"
)

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏
await client.entities.delete(
    entity_id="project123",
    withBoard=True  # –£–¥–∞–ª–∏—Ç—å –≤–º–µ—Å—Ç–µ —Å –¥–æ—Å–∫–æ–π
)

# –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
await client.entities.bulk.update(
    entity_ids=["project1", "project2"],
    status="active"
)

# –†–∞–±–æ—Ç–∞ —Å–æ —Å–≤—è–∑—è–º–∏ —Å—É—â–Ω–æ—Å—Ç–µ–π
await client.entities.links.create(
    entity_id="project1",
    relationship="relates",
    entity="project2"
)
```

### –†–∞–±–æ—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

```python
# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
users = await client.users.get()

# –ê–Ω–∞–ª–∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
for user in users:
    print(f"{user['display']} ({user['login']})")

# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö
active_users = [u for u in users if not u.get('dismissed', False)]

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –ª–æ–≥–∏–Ω—É
user = await client.users.get('username')

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
user = await client.users.get(123456)
```

### –†–∞–±–æ—Ç–∞ —Å –æ—á–µ—Ä–µ–¥—è–º–∏

```python
# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –æ—á–µ—Ä–µ–¥–µ–π
queues = await client.queues.get()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏
queue = await client.queues.get('TREK', expand='all')

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—á–µ—Ä–µ–¥–∏
new_queue = await client.queues.create(
    key='DESIGN',
    name='Design Team',
    lead='username',
    default_type='task',
    default_priority='normal',
    issue_types_config=[
        {
            'issueType': 'task',
            'workflow': 'oicn',
            'resolutions': ['wontFix', 'fixed']
        }
    ],
    description='–û—á–µ—Ä–µ–¥—å –∫–æ–º–∞–Ω–¥—ã –¥–∏–∑–∞–π–Ω–∞'
)

# –£–¥–∞–ª–µ–Ω–∏–µ –æ—á–µ—Ä–µ–¥–∏
await client.queues.delete('OLDQUEUE')

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏
restored_queue = await client.queues.restore('OLDQUEUE')

# –†–∞–±–æ—Ç–∞ —Å –≤–µ—Ä—Å–∏—è–º–∏ –æ—á–µ—Ä–µ–¥–∏
versions = await client.queues.versions.get('TREK')

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ—Ä—Å–∏–∏
version = await client.queues.versions.create(
    queue='TREK',
    name='v2.0.0',
    description='–†–µ–ª–∏–∑ –≤–µ—Ä—Å–∏–∏ 2.0',
    start_date='2025-01-01',
    due_date='2025-12-31'
)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–µ–π –æ—á–µ—Ä–µ–¥–∏
fields = await client.queues.fields.get('TREK')

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–≥–æ–≤ –æ—á–µ—Ä–µ–¥–∏
tags = await client.queues.tags.get('TREK')

# –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–≥–∞
await client.queues.tags.delete('TREK', 'deprecated')

# –ú–∞—Å—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º –∫ –æ—á–µ—Ä–µ–¥–∏
await client.queues.bulk.update(
    queue_id='TREK',
    create={'add': ['user1', 'user2']},
    write={'remove': ['user3']}
)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –æ—á–µ—Ä–µ–¥–∏
user_access = await client.queues.user.get('TREK', 'username')

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –≥—Ä—É–ø–ø—ã –∫ –æ—á–µ—Ä–µ–¥–∏
group_access = await client.queues.group.get('TREK', 'group_id')
```

## üîß API –ú–æ–¥—É–ª–∏

–ö–ª–∏–µ–Ω—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –º–æ–¥—É–ª–µ–π:

### IssuesAPI (`client.issues`)
–†–∞–±–æ—Ç–∞ —Å –∑–∞–¥–∞—á–∞–º–∏:
- `get()` - –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
- `create()` - —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
- `update()` - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
- `move()` - –ø–µ—Ä–µ–Ω–æ—Å –∑–∞–¥–∞—á–∏ –º–µ–∂–¥—É –æ—á–µ—Ä–µ–¥—è–º–∏
- `search()` - –ø–æ–∏—Å–∫ –∑–∞–¥–∞—á
- `count()` - –ø–æ–¥—Å—á–µ—Ç –∑–∞–¥–∞—á
- `priorities()` - –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤
- `changelog()` - –∏—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π

**–ü–æ–¥–º–æ–¥—É–ª–∏:**
- `links` - —Å–≤—è–∑–∏ –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏
- `transitions` - –ø–µ—Ä–µ—Ö–æ–¥—ã —Å—Ç–∞—Ç—É—Å–æ–≤
- `checklists` - —á–µ–∫–ª–∏—Å—Ç—ã –∑–∞–¥–∞—á
- `comments` - –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
- `fields` - –ø–æ–ª—è –∑–∞–¥–∞—á

### FieldsAPI (`client.fields`)
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è–º–∏:
- `get()` - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª–µ–π
- `create()` - —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è
- `update()` - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è
- `create_category()` - —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª–µ–π

**–ü–æ–¥–º–æ–¥—É–ª—å:**
- `local` - –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –æ—á–µ—Ä–µ–¥–µ–π

### EntitiesAPI (`client.entities`)
–†–∞–±–æ—Ç–∞ —Å —Å—É—â–Ω–æ—Å—Ç—è–º–∏ (–ø—Ä–æ–µ–∫—Ç—ã, –ø–æ—Ä—Ç—Ñ–µ–ª–∏, —Ü–µ–ª–∏):
- `get()` - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏
- `create()` - —Å–æ–∑–¥–∞–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏
- `update()` - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏
- `delete()` - —É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–∏
- `search()` - –ø–æ–∏—Å–∫ —Å—É—â–Ω–æ—Å—Ç–µ–π
- `changelog()` - –∏—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π

**–ü–æ–¥–º–æ–¥—É–ª–∏:**
- `checklists` - —á–µ–∫–ª–∏—Å—Ç—ã —Å—É—â–Ω–æ—Å—Ç–µ–π
- `bulk` - –º–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
- `links` - —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Å—É—â–Ω–æ—Å—Ç—è–º–∏

### UsersAPI (`client.users`)
–†–∞–±–æ—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:
- `get()` - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

### QueuesAPI (`client.queues`)
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—á–µ—Ä–µ–¥—è–º–∏:
- `get()` - –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—á–µ—Ä–µ–¥–∏ –∏–ª–∏ —Å–ø–∏—Å–∫–∞ –æ—á–µ—Ä–µ–¥–µ–π
- `create()` - —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –æ—á–µ—Ä–µ–¥–∏
- `delete()` - —É–¥–∞–ª–µ–Ω–∏–µ –æ—á–µ—Ä–µ–¥–∏
- `restore()` - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏

**–ü–æ–¥–º–æ–¥—É–ª–∏:**
- `versions` - –≤–µ—Ä—Å–∏–∏ –æ—á–µ—Ä–µ–¥–µ–π (create, get)
- `fields` - –ø–æ–ª—è –æ—á–µ—Ä–µ–¥–µ–π (get)
- `tags` - —Ç–µ–≥–∏ –æ—á–µ—Ä–µ–¥–µ–π (get, delete)
- `bulk` - –º–∞—Å—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º (update)
- `user` - –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (get)
- `group` - –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –≥—Ä—É–ø–ø—ã (get)

## ‚ö†Ô∏è –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏

–ü—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Yandex Tracker API –µ—Å—Ç—å —Ä—è–¥ –Ω—é–∞–Ω—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å. –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Ñ–∞–π–ª–µ [context/gotchas.md](context/gotchas.md).

### –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã:

1. **–ü–∞–≥–∏–Ω–∞—Ü–∏—è –ø—Ä–∏ –ø–æ–∏—Å–∫–µ** - `entities.search()` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–∞–º–∏ `hits`, `pages`, `values`, –∞ –Ω–µ —Å–ø–∏—Å–æ–∫
2. **–ü–∞—Ä–∞–º–µ—Ç—Ä fields** - –±–µ–∑ —è–≤–Ω–æ–≥–æ —É–∫–∞–∑–∞–Ω–∏—è –ø–æ–ª–µ–π API –º–æ–∂–µ—Ç –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –≤–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `summary`)
3. **–§–æ—Ä–º–∞—Ç project** - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `shortId` (—á–∏—Å–ª–æ), –∞ –Ω–µ `id` (—Å—Ç—Ä–æ–∫–∞)
4. **–§–æ—Ä–º–∞—Ç type –∏ priority** - –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ `key` –∏–ª–∏ `id`, –Ω–µ –ø–æ–ª–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
5. **–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–Ω–æ—Å—Ç–µ–π** - –≤—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä `fields` –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
6. **–°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–æ–ª—è** - –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å `createdBy`, `createdAt`, `author`

–ü–æ–¥—Ä–æ–±–Ω–µ–µ: [–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏](context/gotchas.md)

## üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è

- Python 3.9+
- aiohttp >= 3.12.15
- python-dotenv >= 1.1.1

## üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è

–ü—Ä–æ–µ–∫—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ–¥ –ª–∏—Ü–µ–Ω–∑–∏–µ–π [MIT](LICENSE).

## üë§ –ö–æ–Ω—Ç–∞–∫—Ç—ã

**–î–∞–Ω–∏–∏–ª**

- GitHub: [@imdeniil](https://github.com/imdeniil)
- Email: keemor821@gmail.com

## üîó –°—Å—ã–ª–∫–∏

- [PyPI](https://pypi.org/project/YaTrackerApi/)
- [GitHub Repository](https://github.com/imdeniil/YaTrackerApi)
- [Issues](https://github.com/imdeniil/YaTrackerApi/issues)
- [–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Yandex Tracker API](https://cloud.yandex.ru/docs/tracker/about-api)

---

**–°–æ–∑–¥–∞–Ω–æ —Å ‚ù§Ô∏è –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å Yandex Tracker API**
