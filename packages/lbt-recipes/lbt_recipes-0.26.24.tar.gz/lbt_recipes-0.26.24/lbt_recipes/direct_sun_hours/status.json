{
  "id": "15209eb2-da2f-4f14-b830-171d6e119626",
  "author": {
    "id": "91d47029-1342-449f-b4ca-a6a7d9bfd9d1",
    "account_type": "user",
    "name": "ladybugbot",
    "display_name": "info@ladybug.tools",
    "description": "Your favorite bot!",
    "picture_url": "https://avatars.githubusercontent.com/u/46136343"
  },
  "owner": {
    "id": "8c2991d1-a6e4-4275-8789-4e9405b43508",
    "account_type": "org",
    "name": "pollination",
    "display_name": "Pollination",
    "description": "...",
    "picture_url": "https://avatars.githubusercontent.com/u/46136343"
  },
  "recipe": {
    "type": "RecipeInterface",
    "annotations": {},
    "api_version": "v1beta1",
    "metadata": {
      "type": "MetaData",
      "annotations": {},
      "name": "direct-sun-hours",
      "tag": "0.5.18",
      "app_version": null,
      "keywords": [
        "honeybee",
        "radiance",
        "ladybug-tools",
        "daylight",
        "direct-sun-hours"
      ],
      "maintainers": [
        {
          "type": "Maintainer",
          "annotations": {},
          "name": "mostapha",
          "email": "mostapha@ladybug.tools"
        },
        {
          "type": "Maintainer",
          "annotations": {},
          "name": "ladybug-tools",
          "email": "info@ladybug.tools"
        }
      ],
      "home": "https://github.com/pollination/direct-sun-hours",
      "sources": [
        "https://hub.docker.com/r/ladybugtools/honeybee-radiance"
      ],
      "icon": "https://raw.githubusercontent.com/ladybug-tools/artwork/master/icons_components/honeybee/png/directsun.png",
      "deprecated": null,
      "description": "Direct sun hours recipe for Pollination.",
      "license": {
        "type": "License",
        "annotations": {},
        "name": "PolyForm Shield License 1.0.0",
        "url": "https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt"
      }
    },
    "source": null,
    "inputs": [
      {
        "type": "DAGIntegerInput",
        "annotations": {},
        "name": "cpu-count",
        "description": "The maximum number of CPUs for parallel execution. This will be used to determine the number of sensors run by each worker.",
        "default": 50,
        "alias": [
          {
            "type": "DAGIntegerInputAlias",
            "annotations": {},
            "name": "cpu_count",
            "description": "The maximum number of CPUs for parallel execution. For local simulation, this value is ignored and the cpu_count is automatically set to be equal to the number of workers tasked to the run. For cloud-based runs, this input can be used to control the resources used for the simulation and, if unspecified, the default value of 50 will be used.",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": 50,
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": {
          "type": "integer",
          "minimum": 1
        }
      },
      {
        "type": "DAGStringInput",
        "annotations": {},
        "name": "grid-filter",
        "description": "Text for a grid identifier or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
        "default": "*",
        "alias": [
          {
            "type": "DAGStringInputAlias",
            "annotations": {},
            "name": "grid_filter",
            "description": "Text for a grid identifier or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": "*",
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": null
      },
      {
        "type": "DAGIntegerInput",
        "annotations": {},
        "name": "min-sensor-count",
        "description": "The minimum number of sensors in each sensor grid after redistributing the sensors based on cpu_count. This value takes precedence over the cpu_count and can be used to ensure that the parallelization does not result in generating unnecessarily small sensor grids. The default value is set to 1, which means that the cpu_count is always respected.",
        "default": 500,
        "alias": [
          {
            "type": "DAGIntegerInputAlias",
            "annotations": {},
            "name": "min_sen_count",
            "description": "Positive integer for the minimum number of sensors in each grid after redistributing the sensors based on cpu_count. This value takes precedence over the cpu_count and can be used to ensure that the parallelization does not result in generating unnecessarily small sensor grids that increase overhead. (Default: 200).",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": 200,
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": {
          "type": "integer",
          "minimum": 1
        }
      },
      {
        "type": "DAGFileInput",
        "annotations": {},
        "name": "model",
        "description": "A Honeybee model in HBJSON file format.",
        "default": null,
        "alias": [
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "model",
            "description": "A Honeybee Model to simulate or the path to a HBJSON file of a Model. This can also be the path to a HBpkl file, though this is only recommended for cases where the model is extremely large. Note that this model should have sensor grids assigned to it.",
            "platform": [
              "grasshopper",
              "rhino"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.model",
                "function": "model_to_json_grid_check",
                "index": 0
              },
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "csharp",
                "module": "Pollination.RhinoHandlers",
                "function": "HBModelToJSON",
                "index": 0
              }
            ],
            "default": null,
            "required": true,
            "spec": null
          },
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "model",
            "description": "A Honeybee Model to simulate or the path to a HBJSON file of a Model. This can also be the path to a HBpkl file, though this is only recommended for cases where the model is extremely large. Note that this model should have sensor grids assigned to it.",
            "platform": [
              "revit"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.model",
                "function": "model_to_json_grid_check",
                "index": 0
              }
            ],
            "default": null,
            "required": true,
            "spec": null
          }
        ],
        "required": true,
        "spec": null,
        "extensions": [
          "json",
          "hbjson",
          "pkl",
          "hbpkl",
          "zip"
        ]
      },
      {
        "type": "DAGNumberInput",
        "annotations": {},
        "name": "north",
        "description": "A number for rotation from north.",
        "default": 0.0,
        "alias": [
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "north",
            "description": "A number between -360 and 360 for the counterclockwise difference between the North and the positive Y-axis in degrees. This can also be Vector for the direction to North. (Default: 0).",
            "platform": [
              "grasshopper"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.north",
                "function": "north_vector_to_angle",
                "index": 0
              }
            ],
            "default": "0",
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": {
          "type": "number",
          "minimum": 0,
          "maximum": 360
        }
      },
      {
        "type": "DAGIntegerInput",
        "annotations": {},
        "name": "timestep",
        "description": "Input wea timestep. This value will be used to divide the cumulative results to ensure the units of the output are in hours.",
        "default": 1,
        "alias": [],
        "required": false,
        "spec": {
          "type": "integer",
          "minimum": 1,
          "maximum": 60
        }
      },
      {
        "type": "DAGFileInput",
        "annotations": {},
        "name": "wea",
        "description": "Wea file.",
        "default": null,
        "alias": [
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "wea",
            "description": "A Wea object produced from the Wea components that are under the Light Sources tab. This can also be the path to a .wea or a .epw file.",
            "platform": [
              "grasshopper",
              "rhino",
              "revit"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.wea",
                "function": "wea_handler",
                "index": 0
              }
            ],
            "default": null,
            "required": true,
            "spec": null
          }
        ],
        "required": true,
        "spec": null,
        "extensions": [
          "wea"
        ]
      }
    ],
    "outputs": [
      {
        "type": "DAGFolderOutput",
        "annotations": {},
        "name": "cumulative-sun-hours",
        "description": "Cumulative direct sun hours for all the input hours.",
        "from_": {
          "type": "FolderReference",
          "annotations": {},
          "path": "results/cumulative"
        },
        "alias": [
          {
            "type": "DAGGenericOutputAlias",
            "annotations": {},
            "name": "hours",
            "description": "The cumulative number of timesteps that each sensor sees the sun. If the input wea timestep is 1 (the default), then this is the number of direct sun hours for each sensor. These can be plugged into the \"LB Spatial Heatmap\" component along with meshes of the sensor grids to visualize results.",
            "platform": [
              "grasshopper"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.outputs.daylight",
                "function": "read_hours_from_folder",
                "index": 0
              }
            ]
          }
        ],
        "required": true
      },
      {
        "type": "DAGFolderOutput",
        "annotations": {},
        "name": "direct-sun-hours",
        "description": "Hourly results for direct sun hours.",
        "from_": {
          "type": "FolderReference",
          "annotations": {},
          "path": "results/direct_sun_hours"
        },
        "alias": [
          {
            "type": "DAGGenericOutputAlias",
            "annotations": {},
            "name": "results",
            "description": "Raw result files (.ill) that contain the number of timesteps that each sensor is exposed to sun. The units are the timestep of input wea file. For an hourly wea, each value corresponds to an hour of direct sun.",
            "platform": [
              "grasshopper"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.outputs.daylight",
                "function": "sort_ill_from_folder",
                "index": 0
              }
            ]
          }
        ],
        "required": true
      }
    ]
  },
  "generation": 14,
  "status": {
    "type": "RunStatus",
    "annotations": {},
    "inputs": [
      {
        "type": "StepIntegerInput",
        "annotations": {},
        "name": "cpu-count",
        "description": "The maximum number of CPUs for parallel execution. This will be used to determine the number of sensors run by each worker.",
        "default": 50,
        "alias": [
          {
            "type": "DAGIntegerInputAlias",
            "annotations": {},
            "name": "cpu_count",
            "description": "The maximum number of CPUs for parallel execution. For local simulation, this value is ignored and the cpu_count is automatically set to be equal to the number of workers tasked to the run. For cloud-based runs, this input can be used to control the resources used for the simulation and, if unspecified, the default value of 50 will be used.",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": 50,
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": {
          "type": "integer",
          "minimum": 1
        },
        "value": 50
      },
      {
        "type": "StepStringInput",
        "annotations": {},
        "name": "grid-filter",
        "description": "Text for a grid identifier or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
        "default": "*",
        "alias": [
          {
            "type": "DAGStringInputAlias",
            "annotations": {},
            "name": "grid_filter",
            "description": "Text for a grid identifier or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": "*",
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": null,
        "value": "*"
      },
      {
        "type": "StepIntegerInput",
        "annotations": {},
        "name": "min-sensor-count",
        "description": "The minimum number of sensors in each sensor grid after redistributing the sensors based on cpu_count. This value takes precedence over the cpu_count and can be used to ensure that the parallelization does not result in generating unnecessarily small sensor grids. The default value is set to 1, which means that the cpu_count is always respected.",
        "default": 500,
        "alias": [
          {
            "type": "DAGIntegerInputAlias",
            "annotations": {},
            "name": "min_sen_count",
            "description": "Positive integer for the minimum number of sensors in each grid after redistributing the sensors based on cpu_count. This value takes precedence over the cpu_count and can be used to ensure that the parallelization does not result in generating unnecessarily small sensor grids that increase overhead. (Default: 200).",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": 200,
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": {
          "type": "integer",
          "minimum": 1
        },
        "value": 500
      },
      {
        "type": "StepFileInput",
        "annotations": {},
        "name": "model",
        "description": "A Honeybee model in HBJSON file format.",
        "default": null,
        "alias": [
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "model",
            "description": "A Honeybee Model to simulate or the path to a HBJSON file of a Model. This can also be the path to a HBpkl file, though this is only recommended for cases where the model is extremely large. Note that this model should have sensor grids assigned to it.",
            "platform": [
              "grasshopper",
              "rhino"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.model",
                "function": "model_to_json_grid_check",
                "index": 0
              },
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "csharp",
                "module": "Pollination.RhinoHandlers",
                "function": "HBModelToJSON",
                "index": 0
              }
            ],
            "default": null,
            "required": true,
            "spec": null
          },
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "model",
            "description": "A Honeybee Model to simulate or the path to a HBJSON file of a Model. This can also be the path to a HBpkl file, though this is only recommended for cases where the model is extremely large. Note that this model should have sensor grids assigned to it.",
            "platform": [
              "revit"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.model",
                "function": "model_to_json_grid_check",
                "index": 0
              }
            ],
            "default": null,
            "required": true,
            "spec": null
          }
        ],
        "required": true,
        "spec": null,
        "path": null,
        "extensions": [
          "json",
          "hbjson",
          "pkl",
          "hbpkl",
          "zip"
        ],
        "source": {
          "type": "ProjectFolder",
          "annotations": {},
          "path": "place.holder"
        }
      },
      {
        "type": "StepNumberInput",
        "annotations": {},
        "name": "north",
        "description": "A number for rotation from north.",
        "default": 0.0,
        "alias": [
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "north",
            "description": "A number between -360 and 360 for the counterclockwise difference between the North and the positive Y-axis in degrees. This can also be Vector for the direction to North. (Default: 0).",
            "platform": [
              "grasshopper"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.north",
                "function": "north_vector_to_angle",
                "index": 0
              }
            ],
            "default": "0",
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": {
          "type": "number",
          "minimum": 0,
          "maximum": 360
        },
        "value": 0.0
      },
      {
        "type": "StepIntegerInput",
        "annotations": {},
        "name": "timestep",
        "description": "Input wea timestep. This value will be used to divide the cumulative results to ensure the units of the output are in hours.",
        "default": 1,
        "alias": [],
        "required": false,
        "spec": {
          "type": "integer",
          "minimum": 1,
          "maximum": 60
        },
        "value": 1
      },
      {
        "type": "StepFileInput",
        "annotations": {},
        "name": "wea",
        "description": "Wea file.",
        "default": null,
        "alias": [
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "wea",
            "description": "A Wea object produced from the Wea components that are under the Light Sources tab. This can also be the path to a .wea or a .epw file.",
            "platform": [
              "grasshopper",
              "rhino",
              "revit"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.wea",
                "function": "wea_handler",
                "index": 0
              }
            ],
            "default": null,
            "required": true,
            "spec": null
          }
        ],
        "required": true,
        "spec": null,
        "path": null,
        "extensions": [
          "wea"
        ],
        "source": {
          "type": "ProjectFolder",
          "annotations": {},
          "path": "place.holder"
        }
      }
    ],
    "outputs": [
      {
        "type": "StepFolderOutput",
        "annotations": {},
        "name": "cumulative-sun-hours",
        "description": "Cumulative direct sun hours for all the input hours.",
        "path": "",
        "required": true,
        "source": {
          "type": "ProjectFolder",
          "annotations": {},
          "path": "results/cumulative"
        }
      },
      {
        "type": "StepFolderOutput",
        "annotations": {},
        "name": "direct-sun-hours",
        "description": "Hourly results for direct sun hours.",
        "path": "",
        "required": true,
        "source": {
          "type": "ProjectFolder",
          "annotations": {},
          "path": "results/direct_sun_hours"
        }
      }
    ],
    "message": null,
    "started_at": "2023-08-30T01:49:47+00:00",
    "finished_at": null,
    "source": null,
    "api_version": "v1beta1",
    "id": "15209eb2-da2f-4f14-b830-171d6e119626_00",
    "job_id": "15209eb2-da2f-4f14-b830-171d6e119626",
    "entrypoint": null,
    "status": "Unknown",
    "steps": {}
  },
  "meta": {
    "resources_duration": {
      "cpu": 0,
      "memory": 0
    },
    "progress": {
      "completed": 0,
      "running": 0,
      "total": 0
    }
  },
  "name": "direct-sun-hours"
}