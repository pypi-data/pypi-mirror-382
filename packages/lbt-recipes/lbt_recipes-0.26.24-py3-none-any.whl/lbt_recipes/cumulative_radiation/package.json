{
  "type": "RecipeInterface",
  "annotations": {},
  "api_version": "v1beta1",
  "metadata": {
    "type": "MetaData",
    "annotations": {},
    "name": "cumulative-radiation",
    "tag": "0.3.9",
    "app_version": null,
    "keywords": [
      "honeybee",
      "radiance",
      "ladybug-tools",
      "daylight",
      "cumulative",
      "radiation"
    ],
    "maintainers": [
      {
        "type": "Maintainer",
        "annotations": {},
        "name": "mostapha",
        "email": "mostapha@ladybug.tools"
      },
      {
        "type": "Maintainer",
        "annotations": {},
        "name": "ladybug-tools",
        "email": "info@ladybug.tools"
      }
    ],
    "home": "https://github.com/pollination/cumulative-radiation",
    "sources": [
      "https://hub.docker.com/r/ladybugtools/honeybee-radiance"
    ],
    "icon": "https://raw.githubusercontent.com/ladybug-tools/artwork/master/icons_components/honeybee/png/radrecipe.png",
    "deprecated": null,
    "description": "Cumulative Radiation recipe for Pollination.",
    "license": {
      "type": "License",
      "annotations": {},
      "name": "PolyForm Shield License 1.0.0",
      "url": "https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt"
    }
  },
  "source": null,
  "inputs": [
    {
      "type": "DAGIntegerInput",
      "annotations": {},
      "name": "cpu-count",
      "description": "The maximum number of CPUs for parallel execution. This will be used to determine the number of sensors run by each worker.",
      "default": 50,
      "alias": [
        {
          "type": "DAGIntegerInputAlias",
          "annotations": {},
          "name": "cpu_count",
          "description": "The maximum number of CPUs for parallel execution. For local simulation, this value is ignored and the cpu_count is automatically set to be equal to the number of workers tasked to the run. For cloud-based runs, this input can be used to control the resources used for the simulation and, if unspecified, the default value of 50 will be used.",
          "platform": [
            "grasshopper"
          ],
          "handler": [],
          "default": 50,
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": {
        "type": "integer",
        "minimum": 1
      }
    },
    {
      "type": "DAGStringInput",
      "annotations": {},
      "name": "grid-filter",
      "description": "Text for a grid identifier or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
      "default": "*",
      "alias": [
        {
          "type": "DAGStringInputAlias",
          "annotations": {},
          "name": "grid_filter",
          "description": "Text for a grid identifier or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
          "platform": [
            "grasshopper"
          ],
          "handler": [],
          "default": "*",
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": null
    },
    {
      "type": "DAGIntegerInput",
      "annotations": {},
      "name": "min-sensor-count",
      "description": "The minimum number of sensors in each sensor grid after redistributing the sensors based on cpu_count. This value takes precedence over the cpu_count and can be used to ensure that the parallelization does not result in generating unnecessarily small sensor grids. The default value is set to 1, which means that the cpu_count is always respected.",
      "default": 500,
      "alias": [
        {
          "type": "DAGIntegerInputAlias",
          "annotations": {},
          "name": "min_sen_count",
          "description": "Positive integer for the minimum number of sensors in each grid after redistributing the sensors based on cpu_count. This value takes precedence over the cpu_count and can be used to ensure that the parallelization does not result in generating unnecessarily small sensor grids that increase overhead. (Default: 200).",
          "platform": [
            "grasshopper"
          ],
          "handler": [],
          "default": 200,
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": {
        "type": "integer",
        "minimum": 1
      }
    },
    {
      "type": "DAGFileInput",
      "annotations": {},
      "name": "model",
      "description": "A Honeybee model in HBJSON file format.",
      "default": null,
      "alias": [
        {
          "type": "DAGGenericInputAlias",
          "annotations": {},
          "name": "model",
          "description": "A Honeybee Model to simulate or the path to a HBJSON file of a Model. This can also be the path to a HBpkl file, though this is only recommended for cases where the model is extremely large. Note that this model should have sensor grids assigned to it.",
          "platform": [
            "grasshopper",
            "rhino"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.inputs.model",
              "function": "model_to_json_grid_check",
              "index": 0
            },
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "csharp",
              "module": "Pollination.RhinoHandlers",
              "function": "HBModelToJSON",
              "index": 0
            }
          ],
          "default": null,
          "required": true,
          "spec": null
        },
        {
          "type": "DAGGenericInputAlias",
          "annotations": {},
          "name": "model",
          "description": "A Honeybee Model to simulate or the path to a HBJSON file of a Model. This can also be the path to a HBpkl file, though this is only recommended for cases where the model is extremely large. Note that this model should have sensor grids assigned to it.",
          "platform": [
            "revit"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.inputs.model",
              "function": "model_to_json_grid_check",
              "index": 0
            }
          ],
          "default": null,
          "required": true,
          "spec": null
        }
      ],
      "required": true,
      "spec": null,
      "extensions": [
        "json",
        "hbjson",
        "pkl",
        "hbpkl",
        "zip"
      ]
    },
    {
      "type": "DAGNumberInput",
      "annotations": {},
      "name": "north",
      "description": "A number for rotation from north.",
      "default": 0.0,
      "alias": [
        {
          "type": "DAGGenericInputAlias",
          "annotations": {},
          "name": "north",
          "description": "A number between -360 and 360 for the counterclockwise difference between the North and the positive Y-axis in degrees. This can also be Vector for the direction to North. (Default: 0).",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.inputs.north",
              "function": "north_vector_to_angle",
              "index": 0
            }
          ],
          "default": "0",
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": {
        "type": "number",
        "minimum": -360,
        "maximum": 360
      }
    },
    {
      "type": "DAGStringInput",
      "annotations": {},
      "name": "radiance-parameters",
      "description": "Radiance parameters for ray tracing.",
      "default": "-ab 2 -ad 5000 -lw 2e-05",
      "alias": [
        {
          "type": "DAGStringInputAlias",
          "annotations": {},
          "name": "radiance_par",
          "description": "Text for the radiance parameters to be used for ray tracing. (Default: -ab 2 -ad 5000 -lw 2e-05).",
          "platform": [
            "grasshopper"
          ],
          "handler": [],
          "default": "-ab 2 -ad 5000 -lw 2e-05 -dr 0",
          "required": false,
          "spec": null
        }
      ],
      "required": false,
      "spec": null
    },
    {
      "type": "DAGIntegerInput",
      "annotations": {},
      "name": "sky-density",
      "description": "The density of generated sky. This input corresponds to gendaymtx -m option. -m 1 generates 146 patch starting with 0 for the ground and continuing to 145 for the zenith. Increasing the -m parameter yields a higher resolution sky using the Reinhart patch subdivision. For example, setting -m 4 yields a sky with 2305 patches plus one patch for the ground.",
      "default": 1,
      "alias": [],
      "required": false,
      "spec": {
        "type": "integer",
        "minimum": 1
      }
    },
    {
      "type": "DAGIntegerInput",
      "annotations": {},
      "name": "timestep",
      "description": "Input wea timestep. This value will be used to compute cumulative radiation results.",
      "default": 1,
      "alias": [],
      "required": false,
      "spec": {
        "type": "integer",
        "minimum": 1,
        "maximum": 60
      }
    },
    {
      "type": "DAGFileInput",
      "annotations": {},
      "name": "wea",
      "description": "Wea file.",
      "default": null,
      "alias": [
        {
          "type": "DAGGenericInputAlias",
          "annotations": {},
          "name": "wea",
          "description": "A Wea object produced from the Wea components that are under the Light Sources tab. This can also be the path to a .wea or a .epw file.",
          "platform": [
            "grasshopper",
            "rhino",
            "revit"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.inputs.wea",
              "function": "wea_handler",
              "index": 0
            }
          ],
          "default": null,
          "required": true,
          "spec": null
        }
      ],
      "required": true,
      "spec": null,
      "extensions": [
        "wea"
      ]
    }
  ],
  "outputs": [
    {
      "type": "DAGFolderOutput",
      "annotations": {},
      "name": "average-irradiance",
      "description": "The average irradiance in W/m2 for each sensor over the Wea time period.",
      "from": {
        "type": "FolderReference",
        "annotations": {},
        "path": "results/average_irradiance"
      },
      "alias": [
        {
          "type": "DAGGenericOutputAlias",
          "annotations": {},
          "name": "avg_irr",
          "description": "The average irradiance in W/m2 for each sensor over the Wea time period.",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.outputs.daylight",
              "function": "read_pit_from_folder",
              "index": 0
            }
          ]
        }
      ],
      "required": true
    },
    {
      "type": "DAGFolderOutput",
      "annotations": {},
      "name": "cumulative-radiation",
      "description": "The cumulative radiation in kWh/m2 over the Wea time period.",
      "from": {
        "type": "FolderReference",
        "annotations": {},
        "path": "results/cumulative_radiation"
      },
      "alias": [
        {
          "type": "DAGGenericOutputAlias",
          "annotations": {},
          "name": "radiation",
          "description": "The cumulative radiation in kWh/m2 over the Wea time period.",
          "platform": [
            "grasshopper"
          ],
          "handler": [
            {
              "type": "IOAliasHandler",
              "annotations": {},
              "language": "python",
              "module": "pollination_handlers.outputs.daylight",
              "function": "read_pit_from_folder",
              "index": 0
            }
          ]
        }
      ],
      "required": true
    }
  ]
}