{
  "id": "a7b20348-394c-426a-8020-759f60bcba73",
  "author": {
    "id": "91d47029-1342-449f-b4ca-a6a7d9bfd9d1",
    "account_type": "user",
    "name": "ladybugbot",
    "display_name": "info@ladybug.tools",
    "description": "Your favorite bot!",
    "picture_url": "https://avatars.githubusercontent.com/u/46136343"
  },
  "owner": {
    "id": "8c2991d1-a6e4-4275-8789-4e9405b43508",
    "account_type": "org",
    "name": "pollination",
    "display_name": "Pollination",
    "description": "...",
    "picture_url": "https://avatars.githubusercontent.com/u/46136343"
  },
  "recipe": {
    "type": "RecipeInterface",
    "annotations": {},
    "api_version": "v1beta1",
    "metadata": {
      "type": "MetaData",
      "annotations": {},
      "name": "sky-view",
      "tag": "1.2.7",
      "app_version": null,
      "keywords": [
        "honeybee",
        "radiance",
        "ladybug-tools",
        "sky",
        "view",
        "exposure",
        "spherical",
        "sky-view"
      ],
      "maintainers": [
        {
          "type": "Maintainer",
          "annotations": {},
          "name": "chris",
          "email": "chris@ladybug.tools"
        },
        {
          "type": "Maintainer",
          "annotations": {},
          "name": "ladybug-tools",
          "email": "info@ladybug.tools"
        }
      ],
      "home": "https://github.com/pollination/sky-view",
      "sources": [
        "https://hub.docker.com/r/ladybugtools/honeybee-radiance"
      ],
      "icon": "https://raw.githubusercontent.com/ladybug-tools/artwork/master/icons_components/honeybee/png/skyviewrecipe.png",
      "deprecated": null,
      "description": "Recipe for computing sky view, sky exposure, and spherical (outdoor) exposure.",
      "license": {
        "type": "License",
        "annotations": {},
        "name": "PolyForm Shield License 1.0.0",
        "url": "https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt"
      }
    },
    "source": null,
    "inputs": [
      {
        "type": "DAGStringInput",
        "annotations": {},
        "name": "cloudy-sky",
        "description": "A switch to indicate whether the sky is overcast clouds instead of uniform.",
        "default": "uniform",
        "alias": [
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "cloudy_sky",
            "description": "A boolean to note whether a uniform sky should be used  (False) or a cloudy overcast sky (True). (Default: False).",
            "platform": [
              "grasshopper"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.bool_options",
                "function": "cloudy_bool_to_str",
                "index": 0
              }
            ],
            "default": "False",
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": {
          "type": "string",
          "enum": [
            "cloudy",
            "uniform"
          ]
        }
      },
      {
        "type": "DAGIntegerInput",
        "annotations": {},
        "name": "cpu-count",
        "description": "The maximum number of CPUs for parallel execution. This will be used to determine the number of sensors run by each worker.",
        "default": 50,
        "alias": [
          {
            "type": "DAGIntegerInputAlias",
            "annotations": {},
            "name": "cpu_count",
            "description": "The maximum number of CPUs for parallel execution. For local simulation, this value is ignored and the cpu_count is automatically set to be equal to the number of workers tasked to the run. For cloud-based runs, this input can be used to control the resources used for the simulation and, if unspecified, the default value of 50 will be used.",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": 50,
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": {
          "type": "integer",
          "minimum": 1
        }
      },
      {
        "type": "DAGStringInput",
        "annotations": {},
        "name": "grid-filter",
        "description": "Text for a grid identifier or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
        "default": "*",
        "alias": [
          {
            "type": "DAGStringInputAlias",
            "annotations": {},
            "name": "grid_filter",
            "description": "Text for a grid identifier or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": "*",
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": null
      },
      {
        "type": "DAGIntegerInput",
        "annotations": {},
        "name": "min-sensor-count",
        "description": "The minimum number of sensors in each sensor grid after redistributing the sensors based on cpu_count. This value takes precedence over the cpu_count and can be used to ensure that the parallelization does not result in generating unnecessarily small sensor grids. The default value is set to 1, which means that the cpu_count is always respected.",
        "default": 500,
        "alias": [
          {
            "type": "DAGIntegerInputAlias",
            "annotations": {},
            "name": "min_sen_count",
            "description": "Positive integer for the minimum number of sensors in each grid after redistributing the sensors based on cpu_count. This value takes precedence over the cpu_count and can be used to ensure that the parallelization does not result in generating unnecessarily small sensor grids that increase overhead. (Default: 200).",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": 200,
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": {
          "type": "integer",
          "minimum": 1
        }
      },
      {
        "type": "DAGFileInput",
        "annotations": {},
        "name": "model",
        "description": "A Honeybee model in HBJSON file format.",
        "default": null,
        "alias": [
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "model",
            "description": "A Honeybee Model to simulate or the path to a HBJSON file of a Model. This can also be the path to a HBpkl file, though this is only recommended for cases where the model is extremely large. Note that this model should have sensor grids assigned to it.",
            "platform": [
              "grasshopper",
              "rhino"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.model",
                "function": "model_to_json_grid_check",
                "index": 0
              },
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "csharp",
                "module": "Pollination.RhinoHandlers",
                "function": "HBModelToJSON",
                "index": 0
              }
            ],
            "default": null,
            "required": true,
            "spec": null
          },
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "model",
            "description": "A Honeybee Model to simulate or the path to a HBJSON file of a Model. This can also be the path to a HBpkl file, though this is only recommended for cases where the model is extremely large. Note that this model should have sensor grids assigned to it.",
            "platform": [
              "revit"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.model",
                "function": "model_to_json_grid_check",
                "index": 0
              }
            ],
            "default": null,
            "required": true,
            "spec": null
          }
        ],
        "required": true,
        "spec": null,
        "extensions": [
          "json",
          "hbjson",
          "pkl",
          "hbpkl",
          "zip"
        ]
      },
      {
        "type": "DAGStringInput",
        "annotations": {},
        "name": "radiance-parameters",
        "description": "The radiance parameters for ray tracing. Note that the -ab parameter is always equal to 1 regardless of input here and the -I parameter is fixed based on the metric",
        "default": "-aa 0.1 -ad 2048 -ar 64",
        "alias": [
          {
            "type": "DAGStringInputAlias",
            "annotations": {},
            "name": "radiance_par",
            "description": "Text for the radiance parameters to be used for ray tracing. (Default: -aa 0.1 -ad 2048 -ar 64).",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": "-aa 0.1 -ad 2048 -ar 64",
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": null
      }
    ],
    "outputs": [
      {
        "type": "DAGFolderOutput",
        "annotations": {},
        "name": "results",
        "description": "Folder with raw result files (.res) that contain sky view (or exposure)) values for each sensor.",
        "from_": {
          "type": "FolderReference",
          "annotations": {},
          "path": "results/sky_view"
        },
        "alias": [
          {
            "type": "DAGGenericOutputAlias",
            "annotations": {},
            "name": "results",
            "description": "Numbers for the sky view or sky exposure at each sensor. These can be plugged into the \"LB Spatial Heatmap\" component along with meshes of the sensor grids to visualize results. Values are in percent (between 0 and 100).",
            "platform": [
              "grasshopper"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.outputs.daylight",
                "function": "read_df_from_folder",
                "index": 0
              }
            ]
          }
        ],
        "required": true
      }
    ]
  },
  "generation": 14,
  "status": {
    "type": "RunStatus",
    "annotations": {},
    "inputs": [
      {
        "type": "StepStringInput",
        "annotations": {},
        "name": "cloudy-sky",
        "description": "A switch to indicate whether the sky is overcast clouds instead of uniform.",
        "default": "uniform",
        "alias": [
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "cloudy_sky",
            "description": "A boolean to note whether a uniform sky should be used  (False) or a cloudy overcast sky (True). (Default: False).",
            "platform": [
              "grasshopper"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.bool_options",
                "function": "cloudy_bool_to_str",
                "index": 0
              }
            ],
            "default": "False",
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": {
          "type": "string",
          "enum": [
            "cloudy",
            "uniform"
          ]
        },
        "value": "uniform"
      },
      {
        "type": "StepIntegerInput",
        "annotations": {},
        "name": "cpu-count",
        "description": "The maximum number of CPUs for parallel execution. This will be used to determine the number of sensors run by each worker.",
        "default": 50,
        "alias": [
          {
            "type": "DAGIntegerInputAlias",
            "annotations": {},
            "name": "cpu_count",
            "description": "The maximum number of CPUs for parallel execution. For local simulation, this value is ignored and the cpu_count is automatically set to be equal to the number of workers tasked to the run. For cloud-based runs, this input can be used to control the resources used for the simulation and, if unspecified, the default value of 50 will be used.",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": 50,
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": {
          "type": "integer",
          "minimum": 1
        },
        "value": 50
      },
      {
        "type": "StepStringInput",
        "annotations": {},
        "name": "grid-filter",
        "description": "Text for a grid identifier or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
        "default": "*",
        "alias": [
          {
            "type": "DAGStringInputAlias",
            "annotations": {},
            "name": "grid_filter",
            "description": "Text for a grid identifier or a pattern to filter the sensor grids of the model that are simulated. For instance, first_floor_* will simulate only the sensor grids that have an identifier that starts with first_floor_. By default, all grids in the model will be simulated.",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": "*",
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": null,
        "value": "*"
      },
      {
        "type": "StepIntegerInput",
        "annotations": {},
        "name": "min-sensor-count",
        "description": "The minimum number of sensors in each sensor grid after redistributing the sensors based on cpu_count. This value takes precedence over the cpu_count and can be used to ensure that the parallelization does not result in generating unnecessarily small sensor grids. The default value is set to 1, which means that the cpu_count is always respected.",
        "default": 500,
        "alias": [
          {
            "type": "DAGIntegerInputAlias",
            "annotations": {},
            "name": "min_sen_count",
            "description": "Positive integer for the minimum number of sensors in each grid after redistributing the sensors based on cpu_count. This value takes precedence over the cpu_count and can be used to ensure that the parallelization does not result in generating unnecessarily small sensor grids that increase overhead. (Default: 200).",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": 200,
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": {
          "type": "integer",
          "minimum": 1
        },
        "value": 500
      },
      {
        "type": "StepFileInput",
        "annotations": {},
        "name": "model",
        "description": "A Honeybee model in HBJSON file format.",
        "default": null,
        "alias": [
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "model",
            "description": "A Honeybee Model to simulate or the path to a HBJSON file of a Model. This can also be the path to a HBpkl file, though this is only recommended for cases where the model is extremely large. Note that this model should have sensor grids assigned to it.",
            "platform": [
              "grasshopper",
              "rhino"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.model",
                "function": "model_to_json_grid_check",
                "index": 0
              },
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "csharp",
                "module": "Pollination.RhinoHandlers",
                "function": "HBModelToJSON",
                "index": 0
              }
            ],
            "default": null,
            "required": true,
            "spec": null
          },
          {
            "type": "DAGGenericInputAlias",
            "annotations": {},
            "name": "model",
            "description": "A Honeybee Model to simulate or the path to a HBJSON file of a Model. This can also be the path to a HBpkl file, though this is only recommended for cases where the model is extremely large. Note that this model should have sensor grids assigned to it.",
            "platform": [
              "revit"
            ],
            "handler": [
              {
                "type": "IOAliasHandler",
                "annotations": {},
                "language": "python",
                "module": "pollination_handlers.inputs.model",
                "function": "model_to_json_grid_check",
                "index": 0
              }
            ],
            "default": null,
            "required": true,
            "spec": null
          }
        ],
        "required": true,
        "spec": null,
        "path": null,
        "extensions": [
          "json",
          "hbjson",
          "pkl",
          "hbpkl",
          "zip"
        ],
        "source": {
          "type": "ProjectFolder",
          "annotations": {},
          "path": "place.holder"
        }
      },
      {
        "type": "StepStringInput",
        "annotations": {},
        "name": "radiance-parameters",
        "description": "The radiance parameters for ray tracing. Note that the -ab parameter is always equal to 1 regardless of input here and the -I parameter is fixed based on the metric",
        "default": "-aa 0.1 -ad 2048 -ar 64",
        "alias": [
          {
            "type": "DAGStringInputAlias",
            "annotations": {},
            "name": "radiance_par",
            "description": "Text for the radiance parameters to be used for ray tracing. (Default: -aa 0.1 -ad 2048 -ar 64).",
            "platform": [
              "grasshopper"
            ],
            "handler": [],
            "default": "-aa 0.1 -ad 2048 -ar 64",
            "required": false,
            "spec": null
          }
        ],
        "required": false,
        "spec": null,
        "value": "-aa 0.1 -ad 2048 -ar 64"
      }
    ],
    "outputs": [
      {
        "type": "StepFolderOutput",
        "annotations": {},
        "name": "results",
        "description": "Folder with raw result files (.res) that contain sky view (or exposure)) values for each sensor.",
        "path": "",
        "required": true,
        "source": {
          "type": "ProjectFolder",
          "annotations": {},
          "path": "results/sky_view"
        }
      }
    ],
    "message": null,
    "started_at": "2023-08-29T23:37:12+00:00",
    "finished_at": null,
    "source": null,
    "api_version": "v1beta1",
    "id": "a7b20348-394c-426a-8020-759f60bcba73_00",
    "job_id": "a7b20348-394c-426a-8020-759f60bcba73",
    "entrypoint": null,
    "status": "Unknown",
    "steps": {}
  },
  "meta": {
    "resources_duration": {
      "cpu": 0,
      "memory": 0
    },
    "progress": {
      "completed": 0,
      "running": 0,
      "total": 0
    }
  },
  "name": "sky-view"
}