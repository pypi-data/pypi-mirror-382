[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "claudeconvo"
version = "0.2.3"
description = "View Claude Code session history as a conversation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Lorenzo Pasqualis"}
]
maintainers = [
    {name = "Lorenzo Pasqualis"}
]
requires-python = ">=3.10"
keywords = ["claude", "claude-code", "cli", "session-viewer", "conversation", "log-viewer"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "build>=0.10",
    "twine>=4.0",
]

[project.scripts]
claudeconvo = "claudeconvo:main"

[project.urls]
Homepage = "https://github.com/lpasqualis/claudeconvo"
Documentation = "https://github.com/lpasqualis/claudeconvo#readme"
Repository = "https://github.com/lpasqualis/claudeconvo"
Issues = "https://github.com/lpasqualis/claudeconvo/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
claudeconvo = ["py.typed", "*.json", "*.jsonl"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "W",  # pycodestyle warnings
    "UP", # pyupgrade
]
ignore = []

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --cov=src/claudeconvo --cov-report=term-missing"

[tool.coverage.run]
source = ["src/claudeconvo"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]