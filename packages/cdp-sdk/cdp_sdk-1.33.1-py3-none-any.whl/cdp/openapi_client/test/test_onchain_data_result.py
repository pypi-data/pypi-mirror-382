# coding: utf-8

"""
    Coinbase Developer Platform APIs

    The Coinbase Developer Platform APIs - leading the world's transition onchain.

    The version of the OpenAPI document: 2.0.0
    Contact: cdp@coinbase.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cdp.openapi_client.models.onchain_data_result import OnchainDataResult

class TestOnchainDataResult(unittest.TestCase):
    """OnchainDataResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OnchainDataResult:
        """Test OnchainDataResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OnchainDataResult`
        """
        model = OnchainDataResult()
        if include_optional:
            return OnchainDataResult(
                result = [{"event_signature":"Transfer(address,address,uint256)","from":"0x1234567890abcdef","to":"0x1234567890abcdef","amount":1000000000000000000},{"event_signature":"Transfer(address,address,uint256)","from":"0x1234567890abcdef","to":"0x1234567890abcdef","amount":2000000000000000000}],
                var_schema = {"columns":[{"name":"block_number","type":"UInt64"},{"name":"transaction_hash","type":"String"}]},
                metadata = {"cached":false,"executionTimeMs":145,"rowCount":2}
            )
        else:
            return OnchainDataResult(
        )
        """

    def testOnchainDataResult(self):
        """Test OnchainDataResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
