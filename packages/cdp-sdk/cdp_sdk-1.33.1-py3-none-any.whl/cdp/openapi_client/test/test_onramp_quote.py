# coding: utf-8

"""
    Coinbase Developer Platform APIs

    The Coinbase Developer Platform APIs - leading the world's transition onchain.

    The version of the OpenAPI document: 2.0.0
    Contact: cdp@coinbase.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cdp.openapi_client.models.onramp_quote import OnrampQuote

class TestOnrampQuote(unittest.TestCase):
    """OnrampQuote unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OnrampQuote:
        """Test OnrampQuote
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OnrampQuote`
        """
        model = OnrampQuote()
        if include_optional:
            return OnrampQuote(
                payment_total = '100.75',
                payment_subtotal = '100.00',
                payment_currency = 'USD',
                purchase_amount = '100.000000',
                purchase_currency = 'USDC',
                destination_network = 'base',
                fees = [{"type":"FEE_TYPE_EXCHANGE","amount":"0.5","currency":"USD"},{"type":"FEE_TYPE_NETWORK","amount":"0.25","currency":"USD"}],
                exchange_rate = '1'
            )
        else:
            return OnrampQuote(
                payment_total = '100.75',
                payment_subtotal = '100.00',
                payment_currency = 'USD',
                purchase_amount = '100.000000',
                purchase_currency = 'USDC',
                destination_network = 'base',
                fees = [{"type":"FEE_TYPE_EXCHANGE","amount":"0.5","currency":"USD"},{"type":"FEE_TYPE_NETWORK","amount":"0.25","currency":"USD"}],
                exchange_rate = '1',
        )
        """

    def testOnrampQuote(self):
        """Test OnrampQuote"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
