# coding: utf-8

"""
    Coinbase Developer Platform APIs

    The Coinbase Developer Platform APIs - leading the world's transition onchain.

    The version of the OpenAPI document: 2.0.0
    Contact: cdp@coinbase.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cdp.openapi_client.models.sol_data_criterion_idls_inner import SolDataCriterionIdlsInner

class TestSolDataCriterionIdlsInner(unittest.TestCase):
    """SolDataCriterionIdlsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SolDataCriterionIdlsInner:
        """Test SolDataCriterionIdlsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SolDataCriterionIdlsInner`
        """
        model = SolDataCriterionIdlsInner()
        if include_optional:
            return SolDataCriterionIdlsInner(
                address = 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
                instructions = [{name=transfer_checked, discriminator=[119, 250, 202, 24, 253, 135, 244, 121], accounts=[{name=mint, writable=true}, {name=rent}], args=[{name=amount, type=u64}, {name=decimals, type=u8}]}],
                metadata = {"name":"system_program","version":"0.1.0","spec":"0.1.0"},
                types = [{name=MyStruct, type=struct, fields=[{name=id, type=u64}, {name=owner, type=pubkey}]}]
            )
        else:
            return SolDataCriterionIdlsInner(
                address = 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
                instructions = [{name=transfer_checked, discriminator=[119, 250, 202, 24, 253, 135, 244, 121], accounts=[{name=mint, writable=true}, {name=rent}], args=[{name=amount, type=u64}, {name=decimals, type=u8}]}],
        )
        """

    def testSolDataCriterionIdlsInner(self):
        """Test SolDataCriterionIdlsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
