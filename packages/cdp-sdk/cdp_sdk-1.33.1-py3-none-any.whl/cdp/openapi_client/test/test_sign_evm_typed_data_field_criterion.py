# coding: utf-8

"""
    Coinbase Developer Platform APIs

    The Coinbase Developer Platform APIs - leading the world's transition onchain.

    The version of the OpenAPI document: 2.0.0
    Contact: cdp@coinbase.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cdp.openapi_client.models.sign_evm_typed_data_field_criterion import SignEvmTypedDataFieldCriterion

class TestSignEvmTypedDataFieldCriterion(unittest.TestCase):
    """SignEvmTypedDataFieldCriterion unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SignEvmTypedDataFieldCriterion:
        """Test SignEvmTypedDataFieldCriterion
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SignEvmTypedDataFieldCriterion`
        """
        model = SignEvmTypedDataFieldCriterion()
        if include_optional:
            return SignEvmTypedDataFieldCriterion(
                type = 'evmTypedDataField',
                types = {"primaryType":"Mail","types":{"Person":[{"name":"name","type":"string"},{"name":"wallet","type":"address"},{"name":"score","type":"uint256"}],"Mail":[{"name":"from","type":"Person"},{"name":"to","type":"Person"},{"name":"contents","type":"string"}]}},
                conditions = [{"addresses":["0x742d35Cc6634C0532925a3b844Bc454e4438f44e"],"operator":"in","path":"to.wallet"},{"value":"50","operator":">=","path":"to.score"},{"match":"^hello ([a-z]+)$","path":"contents"}]
            )
        else:
            return SignEvmTypedDataFieldCriterion(
                type = 'evmTypedDataField',
                types = {"primaryType":"Mail","types":{"Person":[{"name":"name","type":"string"},{"name":"wallet","type":"address"},{"name":"score","type":"uint256"}],"Mail":[{"name":"from","type":"Person"},{"name":"to","type":"Person"},{"name":"contents","type":"string"}]}},
                conditions = [{"addresses":["0x742d35Cc6634C0532925a3b844Bc454e4438f44e"],"operator":"in","path":"to.wallet"},{"value":"50","operator":">=","path":"to.score"},{"match":"^hello ([a-z]+)$","path":"contents"}],
        )
        """

    def testSignEvmTypedDataFieldCriterion(self):
        """Test SignEvmTypedDataFieldCriterion"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
