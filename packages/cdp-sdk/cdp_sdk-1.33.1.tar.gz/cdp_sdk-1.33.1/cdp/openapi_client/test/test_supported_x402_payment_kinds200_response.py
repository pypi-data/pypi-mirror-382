# coding: utf-8

"""
    Coinbase Developer Platform APIs

    The Coinbase Developer Platform APIs - leading the world's transition onchain.

    The version of the OpenAPI document: 2.0.0
    Contact: cdp@coinbase.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cdp.openapi_client.models.supported_x402_payment_kinds200_response import SupportedX402PaymentKinds200Response

class TestSupportedX402PaymentKinds200Response(unittest.TestCase):
    """SupportedX402PaymentKinds200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SupportedX402PaymentKinds200Response:
        """Test SupportedX402PaymentKinds200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SupportedX402PaymentKinds200Response`
        """
        model = SupportedX402PaymentKinds200Response()
        if include_optional:
            return SupportedX402PaymentKinds200Response(
                kinds = [{"x402Version":1,"scheme":"exact","network":"base"},{"x402Version":1,"scheme":"exact","network":"base-sepolia"},{"x402Version":1,"scheme":"exact","network":"solana"},{"x402Version":1,"scheme":"exact","network":"solana-devnet"}]
            )
        else:
            return SupportedX402PaymentKinds200Response(
                kinds = [{"x402Version":1,"scheme":"exact","network":"base"},{"x402Version":1,"scheme":"exact","network":"base-sepolia"},{"x402Version":1,"scheme":"exact","network":"solana"},{"x402Version":1,"scheme":"exact","network":"solana-devnet"}],
        )
        """

    def testSupportedX402PaymentKinds200Response(self):
        """Test SupportedX402PaymentKinds200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
