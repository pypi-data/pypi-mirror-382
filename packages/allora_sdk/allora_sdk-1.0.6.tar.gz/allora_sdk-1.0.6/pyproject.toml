[project]
name = "allora_sdk"
version = "1.0.6"
description = "Allora Network SDK"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "spooktheducks", email = "spook@alloralabs.xyz" },
    { name = "gh-allora", email = "gregory@alloralabs.xyz" },
    { name = "jefferythewind", email = "tim@alloralabs.xyz" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]

dependencies = [
    "pydantic >= 2.10.4",
    "aiohttp ~= 3.12",
    "cosmpy >= 0.11.1",
    "websockets >= 15.0.1",
    "grpclib >= 0.4.8",
    "betterproto2 ~= 0.7.0",
    "requests ~= 2.32",
    "async-timeout>=5.0.1",
    "hdwallets>=0.1.2",
    "mnemonic>=0.21",
    "pandas",
    "numpy",
    "lightgbm",
    "requests",
    "dill",
    "matplotlib",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-timeout>=2.4.0",
    "mypy==1.11.2",
    "types-cachetools>=5.5.0.20240820",
    "types-chardet>=5.0.4.6",
    "fastapi",
    "starlette",
    "httpx",
    "tox",
]
codegen = [
    "grpcio-tools",
    "betterproto2-compiler",
    "openapi-python-client",
    "pyyaml",
]

[project.scripts]
allora-export-txs = "allora_sdk.tools.export_txs_to_csv:main"
allora-topic-lifecycle-visualizer = "allora_sdk.tools.topic_lifecycle_visualizer:main"

[project.urls]
Homepage = "https://github.com/allora-network/allora-sdk-py"
Issues = "https://github.com/allora-network/allora-sdk-py/issues"
"Allora Network" = "https://allora.network"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/allora_sdk"]
include = [
    "src/allora_sdk/**/*"
]
artifacts = [
    "src/allora_sdk/protos/**/*",
    "src/allora_sdk/rest/**/*",
]

[tool.hatch.build.targets.sdist]
artifacts = [
    "src/allora_sdk/protos/**/*",
    "src/allora_sdk/rest/**/*",
]
exclude = [
    "/.github",
    "/.vscode",
    "/.idea",
    "/tests",
    "/scripts",
    "/examples",
    "/.tox",
    "/.venv",
    "/.allora_key*",
    "/allora_key*",
]

[tool.tox]
requires = ["tox>=4.19"]
env_list = ["lint", "3.13", "3.12", "3.11", "3.10"] # "test"
# passenv = ["PATH"]

[tool.tox.env_run_base]
description = "Run tests"
deps = [
    "pytest>=8",
    "pytest-asyncio",
    "pytest-sugar",
    "fastapi",
    "starlette",
    "httpx",
]
# set_env = { PATH = "{env:PATH}" }
allowlist_externals = ["make"]
commands_pre = [["make", "dev"]]
commands = [["pytest", { replace = "posargs", default = ["tests"], extend = true }]]


[tool.tox.env.type]
description = "Type check"
deps = ["mypy==1.11.2", "types-cachetools>=5.5.0.20240820", "types-chardet>=5.0.4.6"]
commands = [["mypy", { replace = "posargs", default = ["src", "tests"], extend = true }]]

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = ["asyncio: mark test as async test"]
