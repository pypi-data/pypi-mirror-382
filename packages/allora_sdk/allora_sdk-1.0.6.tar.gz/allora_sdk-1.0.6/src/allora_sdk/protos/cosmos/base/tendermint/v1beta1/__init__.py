# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cosmos/base/tendermint/v1beta1/query.proto, cosmos/base/tendermint/v1beta1/types.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "AbciQueryRequest",
    "AbciQueryResponse",
    "Block",
    "GetBlockByHeightRequest",
    "GetBlockByHeightResponse",
    "GetLatestBlockRequest",
    "GetLatestBlockResponse",
    "GetLatestValidatorSetRequest",
    "GetLatestValidatorSetResponse",
    "GetNodeInfoRequest",
    "GetNodeInfoResponse",
    "GetSyncingRequest",
    "GetSyncingResponse",
    "GetValidatorSetByHeightRequest",
    "GetValidatorSetByHeightResponse",
    "Header",
    "Module",
    "ProofOp",
    "ProofOps",
    "ServiceAsyncStub",
    "ServiceStub",
    "Validator",
    "VersionInfo",
)

import datetime
from dataclasses import dataclass
from typing import TYPE_CHECKING

import betterproto2
import grpc

from .....message_pool import default_message_pool

if TYPE_CHECKING:
    from betterproto2.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline

_COMPILER_VERSION = "0.7.1"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class AbciQueryRequest(betterproto2.Message):
    """
    ABCIQueryRequest defines the request structure for the ABCIQuery gRPC query.
    """

    data: "bytes" = betterproto2.field(1, betterproto2.TYPE_BYTES)

    path: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    height: "int" = betterproto2.field(3, betterproto2.TYPE_INT64)

    prove: "bool" = betterproto2.field(4, betterproto2.TYPE_BOOL)


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "ABCIQueryRequest", AbciQueryRequest
)


@dataclass(eq=False, repr=False)
class AbciQueryResponse(betterproto2.Message):
    """
    ABCIQueryResponse defines the response structure for the ABCIQuery gRPC query.

    Note: This type is a duplicate of the ResponseQuery proto type defined in
    Tendermint.
    """

    code: "int" = betterproto2.field(1, betterproto2.TYPE_UINT32)

    log: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    nondeterministic
    """

    info: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)
    """
    nondeterministic
    """

    index: "int" = betterproto2.field(5, betterproto2.TYPE_INT64)

    key: "bytes" = betterproto2.field(6, betterproto2.TYPE_BYTES)

    value: "bytes" = betterproto2.field(7, betterproto2.TYPE_BYTES)

    proof_ops: "ProofOps | None" = betterproto2.field(
        8, betterproto2.TYPE_MESSAGE, optional=True
    )

    height: "int" = betterproto2.field(9, betterproto2.TYPE_INT64)

    codespace: "str" = betterproto2.field(10, betterproto2.TYPE_STRING)


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "ABCIQueryResponse", AbciQueryResponse
)


@dataclass(eq=False, repr=False)
class Block(betterproto2.Message):
    """
    Block is tendermint type Block, with the Header proposer address
    field converted to bech32 string.
    """

    header: "Header | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    data: "____tendermint__types__.Data | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    evidence: "____tendermint__types__.EvidenceList | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )

    last_commit: "____tendermint__types__.Commit | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message("cosmos.base.tendermint.v1beta1", "Block", Block)


@dataclass(eq=False, repr=False)
class GetBlockByHeightRequest(betterproto2.Message):
    """
    GetBlockByHeightRequest is the request type for the Query/GetBlockByHeight RPC method.
    """

    height: "int" = betterproto2.field(1, betterproto2.TYPE_INT64)


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "GetBlockByHeightRequest", GetBlockByHeightRequest
)


@dataclass(eq=False, repr=False)
class GetBlockByHeightResponse(betterproto2.Message):
    """
    GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight RPC method.
    """

    block_id: "____tendermint__types__.BlockId | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    block: "____tendermint__types__.Block | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Deprecated: please use `sdk_block` instead
    """

    sdk_block: "Block | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Since: cosmos-sdk 0.47
    """


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1",
    "GetBlockByHeightResponse",
    GetBlockByHeightResponse,
)


@dataclass(eq=False, repr=False)
class GetLatestBlockRequest(betterproto2.Message):
    """
    GetLatestBlockRequest is the request type for the Query/GetLatestBlock RPC method.
    """

    pass


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "GetLatestBlockRequest", GetLatestBlockRequest
)


@dataclass(eq=False, repr=False)
class GetLatestBlockResponse(betterproto2.Message):
    """
    GetLatestBlockResponse is the response type for the Query/GetLatestBlock RPC method.
    """

    block_id: "____tendermint__types__.BlockId | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    block: "____tendermint__types__.Block | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Deprecated: please use `sdk_block` instead
    """

    sdk_block: "Block | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Since: cosmos-sdk 0.47
    """


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "GetLatestBlockResponse", GetLatestBlockResponse
)


@dataclass(eq=False, repr=False)
class GetLatestValidatorSetRequest(betterproto2.Message):
    """
    GetLatestValidatorSetRequest is the request type for the Query/GetValidatorSetByHeight RPC method.
    """

    pagination: "__query__v1beta1__.PageRequest | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    pagination defines an pagination for the request.
    """


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1",
    "GetLatestValidatorSetRequest",
    GetLatestValidatorSetRequest,
)


@dataclass(eq=False, repr=False)
class GetLatestValidatorSetResponse(betterproto2.Message):
    """
    GetLatestValidatorSetResponse is the response type for the Query/GetValidatorSetByHeight RPC method.
    """

    block_height: "int" = betterproto2.field(1, betterproto2.TYPE_INT64)

    validators: "list[Validator]" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, repeated=True
    )

    pagination: "__query__v1beta1__.PageResponse | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    pagination defines an pagination for the response.
    """


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1",
    "GetLatestValidatorSetResponse",
    GetLatestValidatorSetResponse,
)


@dataclass(eq=False, repr=False)
class GetNodeInfoRequest(betterproto2.Message):
    """
    GetNodeInfoRequest is the request type for the Query/GetNodeInfo RPC method.
    """

    pass


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "GetNodeInfoRequest", GetNodeInfoRequest
)


@dataclass(eq=False, repr=False)
class GetNodeInfoResponse(betterproto2.Message):
    """
    GetNodeInfoResponse is the response type for the Query/GetNodeInfo RPC method.
    """

    default_node_info: "____tendermint__p2p__.DefaultNodeInfo | None" = (
        betterproto2.field(1, betterproto2.TYPE_MESSAGE, optional=True)
    )

    application_version: "VersionInfo | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "GetNodeInfoResponse", GetNodeInfoResponse
)


@dataclass(eq=False, repr=False)
class GetSyncingRequest(betterproto2.Message):
    """
    GetSyncingRequest is the request type for the Query/GetSyncing RPC method.
    """

    pass


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "GetSyncingRequest", GetSyncingRequest
)


@dataclass(eq=False, repr=False)
class GetSyncingResponse(betterproto2.Message):
    """
    GetSyncingResponse is the response type for the Query/GetSyncing RPC method.
    """

    syncing: "bool" = betterproto2.field(1, betterproto2.TYPE_BOOL)


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "GetSyncingResponse", GetSyncingResponse
)


@dataclass(eq=False, repr=False)
class GetValidatorSetByHeightRequest(betterproto2.Message):
    """
    GetValidatorSetByHeightRequest is the request type for the Query/GetValidatorSetByHeight RPC method.
    """

    height: "int" = betterproto2.field(1, betterproto2.TYPE_INT64)

    pagination: "__query__v1beta1__.PageRequest | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    pagination defines an pagination for the request.
    """


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1",
    "GetValidatorSetByHeightRequest",
    GetValidatorSetByHeightRequest,
)


@dataclass(eq=False, repr=False)
class GetValidatorSetByHeightResponse(betterproto2.Message):
    """
    GetValidatorSetByHeightResponse is the response type for the Query/GetValidatorSetByHeight RPC method.
    """

    block_height: "int" = betterproto2.field(1, betterproto2.TYPE_INT64)

    validators: "list[Validator]" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, repeated=True
    )

    pagination: "__query__v1beta1__.PageResponse | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    pagination defines an pagination for the response.
    """


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1",
    "GetValidatorSetByHeightResponse",
    GetValidatorSetByHeightResponse,
)


@dataclass(eq=False, repr=False)
class Header(betterproto2.Message):
    """
    Header defines the structure of a Tendermint block header.
    """

    version: "____tendermint__version__.Consensus | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    basic block info
    """

    chain_id: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    height: "int" = betterproto2.field(3, betterproto2.TYPE_INT64)

    time: "datetime.datetime | None" = betterproto2.field(
        4,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.Timestamp,
        optional=True,
    )

    last_block_id: "____tendermint__types__.BlockId | None" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    prev block info
    """

    last_commit_hash: "bytes" = betterproto2.field(6, betterproto2.TYPE_BYTES)
    """
    hashes of block data

    commit from validators from the last block
    """

    data_hash: "bytes" = betterproto2.field(7, betterproto2.TYPE_BYTES)
    """
    transactions
    """

    validators_hash: "bytes" = betterproto2.field(8, betterproto2.TYPE_BYTES)
    """
    hashes from the app output from the prev block

    validators for the current block
    """

    next_validators_hash: "bytes" = betterproto2.field(9, betterproto2.TYPE_BYTES)
    """
    validators for the next block
    """

    consensus_hash: "bytes" = betterproto2.field(10, betterproto2.TYPE_BYTES)
    """
    consensus params for current block
    """

    app_hash: "bytes" = betterproto2.field(11, betterproto2.TYPE_BYTES)
    """
    state after txs from the previous block
    """

    last_results_hash: "bytes" = betterproto2.field(12, betterproto2.TYPE_BYTES)
    """
    root hash of all results from the txs from the previous block
    """

    evidence_hash: "bytes" = betterproto2.field(13, betterproto2.TYPE_BYTES)
    """
    consensus info

    evidence included in the block
    """

    proposer_address: "str" = betterproto2.field(14, betterproto2.TYPE_STRING)
    """
    proposer_address is the original block proposer address, formatted as a Bech32 string.
    In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
    for better UX.

    original proposer of the block
    """


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "Header", Header
)


@dataclass(eq=False, repr=False)
class Module(betterproto2.Message):
    """
    Module is the type for VersionInfo
    """

    path: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    module path
    """

    version: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    module version
    """

    sum: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    checksum
    """


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "Module", Module
)


@dataclass(eq=False, repr=False)
class ProofOp(betterproto2.Message):
    """
    ProofOp defines an operation used for calculating Merkle root. The data could
    be arbitrary format, providing necessary data for example neighbouring node
    hash.

    Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
    """

    type: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    key: "bytes" = betterproto2.field(2, betterproto2.TYPE_BYTES)

    data: "bytes" = betterproto2.field(3, betterproto2.TYPE_BYTES)


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "ProofOp", ProofOp
)


@dataclass(eq=False, repr=False)
class ProofOps(betterproto2.Message):
    """
    ProofOps is Merkle proof defined by the list of ProofOps.

    Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
    """

    ops: "list[ProofOp]" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, repeated=True
    )


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "ProofOps", ProofOps
)


@dataclass(eq=False, repr=False)
class Validator(betterproto2.Message):
    """
    Validator is the type for the validator-set.
    """

    address: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    pub_key: "____google__protobuf__.Any | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    voting_power: "int" = betterproto2.field(3, betterproto2.TYPE_INT64)

    proposer_priority: "int" = betterproto2.field(4, betterproto2.TYPE_INT64)


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "Validator", Validator
)


@dataclass(eq=False, repr=False)
class VersionInfo(betterproto2.Message):
    """
    VersionInfo is the type for the GetNodeInfoResponse message.
    """

    name: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    app_name: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    version: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    git_commit: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)

    build_tags: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)

    go_version: "str" = betterproto2.field(6, betterproto2.TYPE_STRING)

    build_deps: "list[Module]" = betterproto2.field(
        7, betterproto2.TYPE_MESSAGE, repeated=True
    )

    cosmos_sdk_version: "str" = betterproto2.field(8, betterproto2.TYPE_STRING)
    """
    Since: cosmos-sdk 0.43
    """


default_message_pool.register_message(
    "cosmos.base.tendermint.v1beta1", "VersionInfo", VersionInfo
)


class ServiceStub:
    """
    Service defines the gRPC querier service for tendermint queries.
    """

    def __init__(self, channel: grpc.Channel):
        self._channel = channel

    def get_node_info(
        self, message: "GetNodeInfoRequest | None" = None
    ) -> "GetNodeInfoResponse":
        """
        GetNodeInfo queries the current node info.
        """

        if message is None:
            message = GetNodeInfoRequest()

        return self._channel.unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetNodeInfo",
            GetNodeInfoRequest.SerializeToString,
            GetNodeInfoResponse.FromString,
        )(message)

    def get_syncing(
        self, message: "GetSyncingRequest | None" = None
    ) -> "GetSyncingResponse":
        """
        GetSyncing queries node syncing.
        """

        if message is None:
            message = GetSyncingRequest()

        return self._channel.unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetSyncing",
            GetSyncingRequest.SerializeToString,
            GetSyncingResponse.FromString,
        )(message)

    def get_latest_block(
        self, message: "GetLatestBlockRequest | None" = None
    ) -> "GetLatestBlockResponse":
        """
        GetLatestBlock returns the latest block.
        """

        if message is None:
            message = GetLatestBlockRequest()

        return self._channel.unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetLatestBlock",
            GetLatestBlockRequest.SerializeToString,
            GetLatestBlockResponse.FromString,
        )(message)

    def get_block_by_height(
        self, message: "GetBlockByHeightRequest"
    ) -> "GetBlockByHeightResponse":
        """
        GetBlockByHeight queries block for given height.
        """

        return self._channel.unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetBlockByHeight",
            GetBlockByHeightRequest.SerializeToString,
            GetBlockByHeightResponse.FromString,
        )(message)

    def get_latest_validator_set(
        self, message: "GetLatestValidatorSetRequest"
    ) -> "GetLatestValidatorSetResponse":
        """
        GetLatestValidatorSet queries latest validator-set.
        """

        return self._channel.unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetLatestValidatorSet",
            GetLatestValidatorSetRequest.SerializeToString,
            GetLatestValidatorSetResponse.FromString,
        )(message)

    def get_validator_set_by_height(
        self, message: "GetValidatorSetByHeightRequest"
    ) -> "GetValidatorSetByHeightResponse":
        """
        GetValidatorSetByHeight queries validator-set at a given height.
        """

        return self._channel.unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetValidatorSetByHeight",
            GetValidatorSetByHeightRequest.SerializeToString,
            GetValidatorSetByHeightResponse.FromString,
        )(message)

    def abci_query(self, message: "AbciQueryRequest") -> "AbciQueryResponse":
        """
        ABCIQuery defines a query handler that supports ABCI queries directly to the
        application, bypassing Tendermint completely. The ABCI query must contain
        a valid and supported path, including app, custom, p2p, and store.

        Since: cosmos-sdk 0.46
        """

        return self._channel.unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/ABCIQuery",
            AbciQueryRequest.SerializeToString,
            AbciQueryResponse.FromString,
        )(message)


class ServiceAsyncStub(betterproto2.ServiceStub):
    """
    Service defines the gRPC querier service for tendermint queries.
    """

    async def get_node_info(
        self,
        message: "GetNodeInfoRequest | None" = None,
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "GetNodeInfoResponse":
        """
        GetNodeInfo queries the current node info.
        """

        if message is None:
            message = GetNodeInfoRequest()

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetNodeInfo",
            message,
            GetNodeInfoResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_syncing(
        self,
        message: "GetSyncingRequest | None" = None,
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "GetSyncingResponse":
        """
        GetSyncing queries node syncing.
        """

        if message is None:
            message = GetSyncingRequest()

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetSyncing",
            message,
            GetSyncingResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_latest_block(
        self,
        message: "GetLatestBlockRequest | None" = None,
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "GetLatestBlockResponse":
        """
        GetLatestBlock returns the latest block.
        """

        if message is None:
            message = GetLatestBlockRequest()

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetLatestBlock",
            message,
            GetLatestBlockResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_block_by_height(
        self,
        message: "GetBlockByHeightRequest",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "GetBlockByHeightResponse":
        """
        GetBlockByHeight queries block for given height.
        """

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetBlockByHeight",
            message,
            GetBlockByHeightResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_latest_validator_set(
        self,
        message: "GetLatestValidatorSetRequest",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "GetLatestValidatorSetResponse":
        """
        GetLatestValidatorSet queries latest validator-set.
        """

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetLatestValidatorSet",
            message,
            GetLatestValidatorSetResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_validator_set_by_height(
        self,
        message: "GetValidatorSetByHeightRequest",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "GetValidatorSetByHeightResponse":
        """
        GetValidatorSetByHeight queries validator-set at a given height.
        """

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetValidatorSetByHeight",
            message,
            GetValidatorSetByHeightResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def abci_query(
        self,
        message: "AbciQueryRequest",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "AbciQueryResponse":
        """
        ABCIQuery defines a query handler that supports ABCI queries directly to the
        application, bypassing Tendermint completely. The ABCI query must contain
        a valid and supported path, including app, custom, p2p, and store.

        Since: cosmos-sdk 0.46
        """

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/ABCIQuery",
            message,
            AbciQueryResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


from .....google import protobuf as ____google__protobuf__
from .....tendermint import p2p as ____tendermint__p2p__
from .....tendermint import types as ____tendermint__types__
from .....tendermint import version as ____tendermint__version__
from ...query import v1beta1 as __query__v1beta1__
