# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cosmos/auth/module/v1/module.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "Module",
    "ModuleAccountPermission",
)

from dataclasses import dataclass

import betterproto2

from .....message_pool import default_message_pool

_COMPILER_VERSION = "0.7.1"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class Module(betterproto2.Message):
    """
    Module is the config object for the auth module.
    """

    bech32_prefix: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    bech32_prefix is the bech32 account prefix for the app.
    """

    module_account_permissions: "list[ModuleAccountPermission]" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    module_account_permissions are module account permissions.
    """

    authority: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    authority defines the custom module authority. If not set, defaults to the governance module.
    """


default_message_pool.register_message("cosmos.auth.module.v1", "Module", Module)


@dataclass(eq=False, repr=False)
class ModuleAccountPermission(betterproto2.Message):
    """
    ModuleAccountPermission represents permissions for a module account.
    """

    account: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    account is the name of the module.
    """

    permissions: "list[str]" = betterproto2.field(
        2, betterproto2.TYPE_STRING, repeated=True
    )
    """
    permissions are the permissions this module has. Currently recognized
    values are minter, burner and staking.
    """


default_message_pool.register_message(
    "cosmos.auth.module.v1", "ModuleAccountPermission", ModuleAccountPermission
)
