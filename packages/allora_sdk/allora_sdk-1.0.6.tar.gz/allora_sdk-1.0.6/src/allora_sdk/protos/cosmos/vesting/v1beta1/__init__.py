# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cosmos/vesting/v1beta1/tx.proto, cosmos/vesting/v1beta1/vesting.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "BaseVestingAccount",
    "ContinuousVestingAccount",
    "DelayedVestingAccount",
    "MsgAsyncStub",
    "MsgCreatePeriodicVestingAccount",
    "MsgCreatePeriodicVestingAccountResponse",
    "MsgCreatePermanentLockedAccount",
    "MsgCreatePermanentLockedAccountResponse",
    "MsgCreateVestingAccount",
    "MsgCreateVestingAccountResponse",
    "MsgStub",
    "Period",
    "PeriodicVestingAccount",
    "PermanentLockedAccount",
)

from dataclasses import dataclass
from typing import TYPE_CHECKING

import betterproto2
import grpc

from ....message_pool import default_message_pool

if TYPE_CHECKING:
    from betterproto2.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline

_COMPILER_VERSION = "0.7.1"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class BaseVestingAccount(betterproto2.Message):
    """
    BaseVestingAccount implements the VestingAccount interface. It contains all
    the necessary fields needed for any vesting account implementation.
    """

    base_account: "__auth__v1beta1__.BaseAccount | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    original_vesting: "list[__base__v1beta1__.Coin]" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, repeated=True
    )

    delegated_free: "list[__base__v1beta1__.Coin]" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, repeated=True
    )

    delegated_vesting: "list[__base__v1beta1__.Coin]" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, repeated=True
    )

    end_time: "int" = betterproto2.field(5, betterproto2.TYPE_INT64)
    """
    Vesting end time, as unix timestamp (in seconds).
    """


default_message_pool.register_message(
    "cosmos.vesting.v1beta1", "BaseVestingAccount", BaseVestingAccount
)


@dataclass(eq=False, repr=False)
class ContinuousVestingAccount(betterproto2.Message):
    """
    ContinuousVestingAccount implements the VestingAccount interface. It
    continuously vests by unlocking coins linearly with respect to time.
    """

    base_vesting_account: "BaseVestingAccount | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    start_time: "int" = betterproto2.field(2, betterproto2.TYPE_INT64)
    """
    Vesting start time, as unix timestamp (in seconds).
    """


default_message_pool.register_message(
    "cosmos.vesting.v1beta1", "ContinuousVestingAccount", ContinuousVestingAccount
)


@dataclass(eq=False, repr=False)
class DelayedVestingAccount(betterproto2.Message):
    """
    DelayedVestingAccount implements the VestingAccount interface. It vests all
    coins after a specific time, but non prior. In other words, it keeps them
    locked until a specified time.
    """

    base_vesting_account: "BaseVestingAccount | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message(
    "cosmos.vesting.v1beta1", "DelayedVestingAccount", DelayedVestingAccount
)


@dataclass(eq=False, repr=False)
class MsgCreatePeriodicVestingAccount(betterproto2.Message):
    """
    MsgCreateVestingAccount defines a message that enables creating a vesting
    account.

    Since: cosmos-sdk 0.46
    """

    from_address: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    to_address: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    start_time: "int" = betterproto2.field(3, betterproto2.TYPE_INT64)
    """
    start of vesting as unix time (in seconds).
    """

    vesting_periods: "list[Period]" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, repeated=True
    )


default_message_pool.register_message(
    "cosmos.vesting.v1beta1",
    "MsgCreatePeriodicVestingAccount",
    MsgCreatePeriodicVestingAccount,
)


@dataclass(eq=False, repr=False)
class MsgCreatePeriodicVestingAccountResponse(betterproto2.Message):
    """
    MsgCreateVestingAccountResponse defines the Msg/CreatePeriodicVestingAccount
    response type.

    Since: cosmos-sdk 0.46
    """

    pass


default_message_pool.register_message(
    "cosmos.vesting.v1beta1",
    "MsgCreatePeriodicVestingAccountResponse",
    MsgCreatePeriodicVestingAccountResponse,
)


@dataclass(eq=False, repr=False)
class MsgCreatePermanentLockedAccount(betterproto2.Message):
    """
    MsgCreatePermanentLockedAccount defines a message that enables creating a permanent
    locked account.

    Since: cosmos-sdk 0.46
    """

    from_address: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    to_address: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    amount: "list[__base__v1beta1__.Coin]" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, repeated=True
    )


default_message_pool.register_message(
    "cosmos.vesting.v1beta1",
    "MsgCreatePermanentLockedAccount",
    MsgCreatePermanentLockedAccount,
)


@dataclass(eq=False, repr=False)
class MsgCreatePermanentLockedAccountResponse(betterproto2.Message):
    """
    MsgCreatePermanentLockedAccountResponse defines the Msg/CreatePermanentLockedAccount response type.

    Since: cosmos-sdk 0.46
    """

    pass


default_message_pool.register_message(
    "cosmos.vesting.v1beta1",
    "MsgCreatePermanentLockedAccountResponse",
    MsgCreatePermanentLockedAccountResponse,
)


@dataclass(eq=False, repr=False)
class MsgCreateVestingAccount(betterproto2.Message):
    """
    MsgCreateVestingAccount defines a message that enables creating a vesting
    account.
    """

    from_address: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    to_address: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    amount: "list[__base__v1beta1__.Coin]" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, repeated=True
    )

    end_time: "int" = betterproto2.field(4, betterproto2.TYPE_INT64)
    """
    end of vesting as unix time (in seconds).
    """

    delayed: "bool" = betterproto2.field(5, betterproto2.TYPE_BOOL)


default_message_pool.register_message(
    "cosmos.vesting.v1beta1", "MsgCreateVestingAccount", MsgCreateVestingAccount
)


@dataclass(eq=False, repr=False)
class MsgCreateVestingAccountResponse(betterproto2.Message):
    """
    MsgCreateVestingAccountResponse defines the Msg/CreateVestingAccount response type.
    """

    pass


default_message_pool.register_message(
    "cosmos.vesting.v1beta1",
    "MsgCreateVestingAccountResponse",
    MsgCreateVestingAccountResponse,
)


@dataclass(eq=False, repr=False)
class Period(betterproto2.Message):
    """
    Period defines a length of time and amount of coins that will vest.
    """

    length: "int" = betterproto2.field(1, betterproto2.TYPE_INT64)
    """
    Period duration in seconds.
    """

    amount: "list[__base__v1beta1__.Coin]" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, repeated=True
    )


default_message_pool.register_message("cosmos.vesting.v1beta1", "Period", Period)


@dataclass(eq=False, repr=False)
class PeriodicVestingAccount(betterproto2.Message):
    """
    PeriodicVestingAccount implements the VestingAccount interface. It
    periodically vests by unlocking coins during each specified period.
    """

    base_vesting_account: "BaseVestingAccount | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    start_time: "int" = betterproto2.field(2, betterproto2.TYPE_INT64)

    vesting_periods: "list[Period]" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, repeated=True
    )


default_message_pool.register_message(
    "cosmos.vesting.v1beta1", "PeriodicVestingAccount", PeriodicVestingAccount
)


@dataclass(eq=False, repr=False)
class PermanentLockedAccount(betterproto2.Message):
    """
    PermanentLockedAccount implements the VestingAccount interface. It does
    not ever release coins, locking them indefinitely. Coins in this account can
    still be used for delegating and for governance votes even while locked.

    Since: cosmos-sdk 0.43
    """

    base_vesting_account: "BaseVestingAccount | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message(
    "cosmos.vesting.v1beta1", "PermanentLockedAccount", PermanentLockedAccount
)


class MsgStub:
    """
    Msg defines the bank Msg service.
    """

    def __init__(self, channel: grpc.Channel):
        self._channel = channel

    def create_vesting_account(
        self, message: "MsgCreateVestingAccount"
    ) -> "MsgCreateVestingAccountResponse":
        """
        CreateVestingAccount defines a method that enables creating a vesting
        account.
        """

        return self._channel.unary_unary(
            "/cosmos.vesting.v1beta1.Msg/CreateVestingAccount",
            MsgCreateVestingAccount.SerializeToString,
            MsgCreateVestingAccountResponse.FromString,
        )(message)

    def create_permanent_locked_account(
        self, message: "MsgCreatePermanentLockedAccount"
    ) -> "MsgCreatePermanentLockedAccountResponse":
        """
        CreatePermanentLockedAccount defines a method that enables creating a permanent
        locked account.

        Since: cosmos-sdk 0.46
        """

        return self._channel.unary_unary(
            "/cosmos.vesting.v1beta1.Msg/CreatePermanentLockedAccount",
            MsgCreatePermanentLockedAccount.SerializeToString,
            MsgCreatePermanentLockedAccountResponse.FromString,
        )(message)

    def create_periodic_vesting_account(
        self, message: "MsgCreatePeriodicVestingAccount"
    ) -> "MsgCreatePeriodicVestingAccountResponse":
        """
        CreatePeriodicVestingAccount defines a method that enables creating a
        periodic vesting account.

        Since: cosmos-sdk 0.46
        """

        return self._channel.unary_unary(
            "/cosmos.vesting.v1beta1.Msg/CreatePeriodicVestingAccount",
            MsgCreatePeriodicVestingAccount.SerializeToString,
            MsgCreatePeriodicVestingAccountResponse.FromString,
        )(message)


class MsgAsyncStub(betterproto2.ServiceStub):
    """
    Msg defines the bank Msg service.
    """

    async def create_vesting_account(
        self,
        message: "MsgCreateVestingAccount",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "MsgCreateVestingAccountResponse":
        """
        CreateVestingAccount defines a method that enables creating a vesting
        account.
        """

        return await self._unary_unary(
            "/cosmos.vesting.v1beta1.Msg/CreateVestingAccount",
            message,
            MsgCreateVestingAccountResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def create_permanent_locked_account(
        self,
        message: "MsgCreatePermanentLockedAccount",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "MsgCreatePermanentLockedAccountResponse":
        """
        CreatePermanentLockedAccount defines a method that enables creating a permanent
        locked account.

        Since: cosmos-sdk 0.46
        """

        return await self._unary_unary(
            "/cosmos.vesting.v1beta1.Msg/CreatePermanentLockedAccount",
            message,
            MsgCreatePermanentLockedAccountResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def create_periodic_vesting_account(
        self,
        message: "MsgCreatePeriodicVestingAccount",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "MsgCreatePeriodicVestingAccountResponse":
        """
        CreatePeriodicVestingAccount defines a method that enables creating a
        periodic vesting account.

        Since: cosmos-sdk 0.46
        """

        return await self._unary_unary(
            "/cosmos.vesting.v1beta1.Msg/CreatePeriodicVestingAccount",
            message,
            MsgCreatePeriodicVestingAccountResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


from ...auth import v1beta1 as __auth__v1beta1__
from ...base import v1beta1 as __base__v1beta1__
