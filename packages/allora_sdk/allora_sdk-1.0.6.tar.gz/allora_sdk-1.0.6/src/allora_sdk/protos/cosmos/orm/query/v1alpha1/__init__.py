# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cosmos/orm/query/v1alpha1/query.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "GetRequest",
    "GetResponse",
    "IndexValue",
    "ListRequest",
    "ListRequestPrefix",
    "ListRequestRange",
    "ListResponse",
    "QueryAsyncStub",
    "QueryStub",
)

import builtins
import datetime
from dataclasses import dataclass
from typing import TYPE_CHECKING

import betterproto2
import grpc

from .....message_pool import default_message_pool

if TYPE_CHECKING:
    from betterproto2.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline

_COMPILER_VERSION = "0.7.1"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class GetRequest(betterproto2.Message):
    """
    GetRequest is the Query/Get request type.
    """

    message_name: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    message_name is the fully-qualified message name of the ORM table being queried.
    """

    index: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    index is the index fields expression used in orm definitions. If it
    is empty, the table's primary key is assumed. If it is non-empty, it must
    refer to an unique index.
    """

    values: "list[IndexValue]" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    values are the values of the fields corresponding to the requested index.
    There must be as many values provided as there are fields in the index and
    these values must correspond to the index field types.
    """


default_message_pool.register_message(
    "cosmos.orm.query.v1alpha1", "GetRequest", GetRequest
)


@dataclass(eq=False, repr=False)
class GetResponse(betterproto2.Message):
    """
    GetResponse is the Query/Get response type.
    """

    result: "____google__protobuf__.Any | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    result is the result of the get query. If no value is found, the gRPC
    status code NOT_FOUND will be returned.
    """


default_message_pool.register_message(
    "cosmos.orm.query.v1alpha1", "GetResponse", GetResponse
)


@dataclass(eq=False, repr=False)
class IndexValue(betterproto2.Message):
    """
    IndexValue represents the value of a field in an ORM index expression.

    Oneofs:
        - value: value specifies the index value
    """

    uint: "int | None" = betterproto2.field(
        1, betterproto2.TYPE_UINT64, optional=True, group="value"
    )
    """
    uint specifies a value for an uint32, fixed32, uint64, or fixed64
    index field.
    """

    int: "builtins.int | None" = betterproto2.field(
        2, betterproto2.TYPE_INT64, optional=True, group="value"
    )
    """
    int64 specifies a value for an int32, sfixed32, int64, or sfixed64
    index field.
    """

    str: "builtins.str | None" = betterproto2.field(
        3, betterproto2.TYPE_STRING, optional=True, group="value"
    )
    """
    str specifies a value for a string index field.
    """

    bytes: "builtins.bytes | None" = betterproto2.field(
        4, betterproto2.TYPE_BYTES, optional=True, group="value"
    )
    """
    bytes specifies a value for a bytes index field.
    """

    enum: "builtins.str | None" = betterproto2.field(
        5, betterproto2.TYPE_STRING, optional=True, group="value"
    )
    """
    enum specifies a value for an enum index field.
    """

    bool: "builtins.bool | None" = betterproto2.field(
        6, betterproto2.TYPE_BOOL, optional=True, group="value"
    )
    """
    bool specifies a value for a bool index field.
    """

    timestamp: "datetime.datetime | None" = betterproto2.field(
        7,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.Timestamp,
        optional=True,
        group="value",
    )
    """
    timestamp specifies a value for a timestamp index field.
    """

    duration: "datetime.timedelta | None" = betterproto2.field(
        8,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.Duration,
        optional=True,
        group="value",
    )
    """
    duration specifies a value for a duration index field.
    """


default_message_pool.register_message(
    "cosmos.orm.query.v1alpha1", "IndexValue", IndexValue
)


@dataclass(eq=False, repr=False)
class ListRequest(betterproto2.Message):
    """
    ListRequest is the Query/List request type.

    Oneofs:
        - query: query is the query expression corresponding to the provided index. If
            neither prefix nor range is specified, the query will list all the fields
            in the index.
    """

    message_name: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    message_name is the fully-qualified message name of the ORM table being queried.
    """

    index: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    index is the index fields expression used in orm definitions. If it
    is empty, the table's primary key is assumed.
    """

    prefix: "ListRequestPrefix | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True, group="query"
    )
    """
    prefix defines a prefix query.
    """

    range: "ListRequestRange | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True, group="query"
    )
    """
    range defines a range query.
    """

    pagination: "___base__query__v1beta1__.PageRequest | None" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    pagination is the pagination request.
    """


default_message_pool.register_message(
    "cosmos.orm.query.v1alpha1", "ListRequest", ListRequest
)


@dataclass(eq=False, repr=False)
class ListRequestPrefix(betterproto2.Message):
    """
    Prefix specifies the arguments to a prefix query.
    """

    values: "list[IndexValue]" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    values specifies the index values for the prefix query.
    It is valid to special a partial prefix with fewer values than
    the number of fields in the index.
    """


default_message_pool.register_message(
    "cosmos.orm.query.v1alpha1", "ListRequest.Prefix", ListRequestPrefix
)


@dataclass(eq=False, repr=False)
class ListRequestRange(betterproto2.Message):
    """
    Range specifies the arguments to a range query.
    """

    start: "list[IndexValue]" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    start specifies the starting index values for the range query.
    It is valid to provide fewer values than the number of fields in the
    index.
    """

    end: "list[IndexValue]" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    end specifies the inclusive ending index values for the range query.
    It is valid to provide fewer values than the number of fields in the
    index.
    """


default_message_pool.register_message(
    "cosmos.orm.query.v1alpha1", "ListRequest.Range", ListRequestRange
)


@dataclass(eq=False, repr=False)
class ListResponse(betterproto2.Message):
    """
    ListResponse is the Query/List response type.
    """

    results: "list[____google__protobuf__.Any]" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    results are the results of the query.
    """

    pagination: "___base__query__v1beta1__.PageResponse | None" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    pagination is the pagination response.
    """


default_message_pool.register_message(
    "cosmos.orm.query.v1alpha1", "ListResponse", ListResponse
)


class QueryStub:
    """
    Query is a generic gRPC service for querying ORM data.
    """

    def __init__(self, channel: grpc.Channel):
        self._channel = channel

    def get(self, message: "GetRequest") -> "GetResponse":
        """
        Get queries an ORM table against an unique index.
        """

        return self._channel.unary_unary(
            "/cosmos.orm.query.v1alpha1.Query/Get",
            GetRequest.SerializeToString,
            GetResponse.FromString,
        )(message)

    def list(self, message: "ListRequest") -> "ListResponse":
        """
        List queries an ORM table against an index.
        """

        return self._channel.unary_unary(
            "/cosmos.orm.query.v1alpha1.Query/List",
            ListRequest.SerializeToString,
            ListResponse.FromString,
        )(message)


class QueryAsyncStub(betterproto2.ServiceStub):
    """
    Query is a generic gRPC service for querying ORM data.
    """

    async def get(
        self,
        message: "GetRequest",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "GetResponse":
        """
        Get queries an ORM table against an unique index.
        """

        return await self._unary_unary(
            "/cosmos.orm.query.v1alpha1.Query/Get",
            message,
            GetResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def list(
        self,
        message: "ListRequest",
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "ListResponse":
        """
        List queries an ORM table against an index.
        """

        return await self._unary_unary(
            "/cosmos.orm.query.v1alpha1.Query/List",
            message,
            ListResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


from .....google import protobuf as ____google__protobuf__
from ....base.query import v1beta1 as ___base__query__v1beta1__
