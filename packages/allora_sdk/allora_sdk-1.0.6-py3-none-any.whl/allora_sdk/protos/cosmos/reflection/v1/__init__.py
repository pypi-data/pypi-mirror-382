# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cosmos/reflection/v1/reflection.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "FileDescriptorsRequest",
    "FileDescriptorsResponse",
    "ReflectionServiceAsyncStub",
    "ReflectionServiceStub",
)

from dataclasses import dataclass
from typing import TYPE_CHECKING

import betterproto2
import grpc

from ....message_pool import default_message_pool

if TYPE_CHECKING:
    from betterproto2.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline

_COMPILER_VERSION = "0.7.1"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class FileDescriptorsRequest(betterproto2.Message):
    """
    FileDescriptorsRequest is the Query/FileDescriptors request type.
    """

    pass


default_message_pool.register_message(
    "cosmos.reflection.v1", "FileDescriptorsRequest", FileDescriptorsRequest
)


@dataclass(eq=False, repr=False)
class FileDescriptorsResponse(betterproto2.Message):
    """
    FileDescriptorsResponse is the Query/FileDescriptors response type.
    """

    files: "list[___google__protobuf__.FileDescriptorProto]" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    files is the file descriptors.
    """


default_message_pool.register_message(
    "cosmos.reflection.v1", "FileDescriptorsResponse", FileDescriptorsResponse
)


class ReflectionServiceStub:
    """
    Package cosmos.reflection.v1 provides support for inspecting protobuf
    file descriptors.
    """

    def __init__(self, channel: grpc.Channel):
        self._channel = channel

    def file_descriptors(
        self, message: "FileDescriptorsRequest | None" = None
    ) -> "FileDescriptorsResponse":
        """
        FileDescriptors queries all the file descriptors in the app in order
        to enable easier generation of dynamic clients.
        """

        if message is None:
            message = FileDescriptorsRequest()

        return self._channel.unary_unary(
            "/cosmos.reflection.v1.ReflectionService/FileDescriptors",
            FileDescriptorsRequest.SerializeToString,
            FileDescriptorsResponse.FromString,
        )(message)


class ReflectionServiceAsyncStub(betterproto2.ServiceStub):
    """
    Package cosmos.reflection.v1 provides support for inspecting protobuf
    file descriptors.
    """

    async def file_descriptors(
        self,
        message: "FileDescriptorsRequest | None" = None,
        *,
        timeout: "float | None" = None,
        deadline: "Deadline | None" = None,
        metadata: "MetadataLike | None" = None,
    ) -> "FileDescriptorsResponse":
        """
        FileDescriptors queries all the file descriptors in the app in order
        to enable easier generation of dynamic clients.
        """

        if message is None:
            message = FileDescriptorsRequest()

        return await self._unary_unary(
            "/cosmos.reflection.v1.ReflectionService/FileDescriptors",
            message,
            FileDescriptorsResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


from ....google import protobuf as ___google__protobuf__
