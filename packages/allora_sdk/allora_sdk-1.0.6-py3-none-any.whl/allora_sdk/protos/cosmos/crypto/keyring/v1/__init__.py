# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cosmos/crypto/keyring/v1/record.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "Record",
    "RecordLedger",
    "RecordLocal",
    "RecordMulti",
    "RecordOffline",
)

from dataclasses import dataclass

import betterproto2

from .....message_pool import default_message_pool

_COMPILER_VERSION = "0.7.1"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class Record(betterproto2.Message):
    """
    Record is used for representing a key in the keyring.

    Oneofs:
        - item: Record contains one of the following items
    """

    name: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    name represents a name of Record
    """

    pub_key: "____google__protobuf__.Any | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    pub_key represents a public key in any format
    """

    local: "RecordLocal | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True, group="item"
    )
    """
    local stores the private key locally.
    """

    ledger: "RecordLedger | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True, group="item"
    )
    """
    ledger stores the information about a Ledger key.
    """

    multi: "RecordMulti | None" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, optional=True, group="item"
    )
    """
    Multi does not store any other information.
    """

    offline: "RecordOffline | None" = betterproto2.field(
        6, betterproto2.TYPE_MESSAGE, optional=True, group="item"
    )
    """
    Offline does not store any other information.
    """


default_message_pool.register_message("cosmos.crypto.keyring.v1", "Record", Record)


@dataclass(eq=False, repr=False)
class RecordLedger(betterproto2.Message):
    """
    Ledger item
    """

    path: "__hd__v1__.Bip44Params | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message(
    "cosmos.crypto.keyring.v1", "Record.Ledger", RecordLedger
)


@dataclass(eq=False, repr=False)
class RecordLocal(betterproto2.Message):
    """
    Item is a keyring item stored in a keyring backend.
    Local item
    """

    priv_key: "____google__protobuf__.Any | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message(
    "cosmos.crypto.keyring.v1", "Record.Local", RecordLocal
)


@dataclass(eq=False, repr=False)
class RecordMulti(betterproto2.Message):
    """
    Multi item
    """

    pass


default_message_pool.register_message(
    "cosmos.crypto.keyring.v1", "Record.Multi", RecordMulti
)


@dataclass(eq=False, repr=False)
class RecordOffline(betterproto2.Message):
    """
    Offline item
    """

    pass


default_message_pool.register_message(
    "cosmos.crypto.keyring.v1", "Record.Offline", RecordOffline
)


from .....google import protobuf as ____google__protobuf__
from ...hd import v1 as __hd__v1__
