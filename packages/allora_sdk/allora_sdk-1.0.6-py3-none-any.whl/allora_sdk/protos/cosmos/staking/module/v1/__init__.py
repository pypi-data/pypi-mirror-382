# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cosmos/staking/module/v1/module.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("Module",)

from dataclasses import dataclass

import betterproto2

from .....message_pool import default_message_pool

_COMPILER_VERSION = "0.7.1"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class Module(betterproto2.Message):
    """
    Module is the config object of the staking module.
    """

    hooks_order: "list[str]" = betterproto2.field(
        1, betterproto2.TYPE_STRING, repeated=True
    )
    """
    hooks_order specifies the order of staking hooks and should be a list
    of module names which provide a staking hooks instance. If no order is
    provided, then hooks will be applied in alphabetical order of module names.
    """

    authority: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    authority defines the custom module authority. If not set, defaults to the governance module.
    """

    bech32_prefix_validator: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    bech32_prefix_validator is the bech32 validator prefix for the app.
    """

    bech32_prefix_consensus: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)
    """
    bech32_prefix_consensus is the bech32 consensus node prefix for the app.
    """


default_message_pool.register_message("cosmos.staking.module.v1", "Module", Module)
