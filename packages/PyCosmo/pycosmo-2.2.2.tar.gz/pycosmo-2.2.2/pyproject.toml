[build-system]
requires = ["setuptools >= 64", "numpy", "Cython"]
build-backend = "setuptools.build_meta"


[project]
name = "PyCosmo"
version = "2.2.2"
license = {text = "GPLv3"}
description = "A multi-purpose cosmology calculation tool"
authors = [{name = "Uwe Schmitt et al", email = "uwe.schmitt@id.ethz.ch"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: C",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.9",
    "Topic :: Scientific/Engineering :: Astronomy",
]

urls = {Source = "https://cosmo-docs.phys.ethz.ch/PyCosmo"}
requires-python = ">=3.10"
dependencies = [
    "numpy>=2",
    "recfast4py>=0.2.3",
    "dill",
    "matplotlib",
    "numba>=0.60",
    "sympy2c>=2.3.1",
    "numexpr>=2.10",
    "scipy",
    "setuptools>=75.6.0",
    "mpmath==1.3",
]

[project.readme]
file = "README.md"
content-type = "text/markdown; charset=UTF-8"

[dependency-groups]
dev = [
    "Cython",
    "twine",
    "pytest",
    "pytest-cov",
    "pytest-regtest>=2.2.0a2",
    "ruff",
    "isort",
    "pre-commit",
    "pdbp>=1.7.1",
    "build>=1.3.0",
]

docs = [
    "sphinx < 7",
    "sphinx-pynpoint-theme",
    "myst-parser",
]

[project.scripts]
recompile = "PyCosmo:Cosmo.recompile_from_cli"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.package-data]
"*" = [
    "*.pyx",
    "*.c",
    "*.h",
    "config/*.ini",
]


[tool.ruff]
line-length    = 88
extend-exclude = ["benchmarks/", "*.ipynb"]

    [tool.ruff.format]
    quote-style           = "double"
    line-ending           = "lf"
    docstring-code-format = false

    [tool.ruff.lint]
    extend-select = [
        "RUF100",             # unnecessary `noqa` directives
    ]
    ignore = [
        "E501",
        "E731",               # lambda assignment
        "E741",               # ambiguous variable name
    ]

    [tool.ruff.lint.per-file-ignores]
    '__init__.py' = [
        "F401",               # imported but unused
    ]


[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = ["--verbose", "--durations=0", "--durations-min=5"]
markers = [
    "slow: Marks tests as slow to run. Pass `--runslow` to include them."
]
console_output_style = "count"
