[tool.poetry]
name = "gito.bot"
version = "3.3.1"
description = "AI code review tool that works with any language model provider. It detects issues in GitHub pull requests or local changesâ€”instantly, reliably, and without vendor lock-in."
authors = ["Nayjest <mail@vitaliy.in>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/Nayjest/Gito"
repository = "https://github.com/Nayjest/Gito"
keywords = ["static code analysis", "code review", "code quality", "ai", "coding", "assistant", "llm", "github", "automation", "devops", "developer tools", "github actions", "workflows", "git"]
classifiers = [
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development",
]
packages = [
    { include = "gito" }
]

[tool.poetry.dependencies]
python = "^3.11"
ai-microcore = "4.4.2"
GitPython = "^3.1.44"
unidiff = "^0.7.5"
google-generativeai = "^0.8.5"
anthropic = "^0.57.1"
typer = "^0.16.0"
ghapi = "~=1.0.6"
jira = "^3.8.0"

[tool.poetry.group.dev.dependencies]
flake8 = "*"
black = "*"
build = "*"
twine = "*"
pylint = "*"
pyflakes = "*"
poetry = "*"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-asyncio = ">=0.21.0"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
gito = "gito.cli:main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-vv --capture=no --log-cli-level=INFO"
testpaths = [
    "tests",
]
