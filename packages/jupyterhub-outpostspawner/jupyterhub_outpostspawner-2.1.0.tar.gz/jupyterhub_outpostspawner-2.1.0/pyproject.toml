
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["outpostspawner"]
include = ["*.py"]
exclude = ["test*"]

[project]
name = "jupyterhub-outpostspawner"
description = "JupyterHub OutpostSpawner enables start on multiple, remote system"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
keywords = ["jupyterhub", "spawner", "kubernetes"]
authors = [
    {name = "Tim Kreuzer", email = "t.kreuzer@fz-juelich.de"}
]

dependencies = [
    "escapism",
    "jinja2",
    "jupyterhub>=5.0.0",
    "traitlets",
    "urllib3",
    "jupyterhub-forwardbasespawner>=2.0.0",
    "kubernetes"
]
dynamic = ["version"]

[tool.black]
target_version = [
  "py39",
  "py310",
  "py311",
  "py312",
]

[tool.hatch.version]
path = "outpostspawner/_version.py"

[tool.isort]
profile = "black"

[tool.tbump]
# Uncomment this if your project is hosted on GitHub:
github_url = "https://github.com/kreuzert/jupyterhub-outpostspawner"

[tool.tbump.version]
current = "2.1.0"
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (?P<pre>((a|b|rc)\d+)|)
  \.?
  (?P<post>((post)\d+)|)
  (?P<dev>(?<=\.)dev\d*|)
'''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "{new_version}"

# For each file to patch, add a [[tool.tbump.file]] config
# section containing the path of the file, relative to the
# pyproject.toml location.

#[[tool.tbump.file]]
#src = "pyproject.toml"
#search = 'version = "{current_version}"'

[[tool.tbump.file]]
src = "outpostspawner/_version.py"
#version_template = '({major}, {minor}, {patch}, "{pre}", "{dev}")'
#search = "version_info = {current_version}"

#[[tool.tbump.file]]
#src = "docs/source/_static/rest-api.yml"
#search = "version: {current_version}"

[tool.djlint]
indent = 2
profile = "jinja"
