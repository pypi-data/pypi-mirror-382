
on:
  release:
    types: [created]
  push:
  pull_request:



jobs:
  test-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python 3.13
        run: uv python install 3.13

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-3.13-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-3.13-

      - name: Create virtual environment
        run: uv venv
      - name: run tests locked
        run: |
          uv lock
          uv sync --locked
          uv run pytest
      - name: run tests frozen
        run: |
          uv sync --frozen
          uv run pytest
      - name: run tests
        run: |
          uv sync --upgrade
          uv run pytest
      - name: Run pipeline
        run: uv run pydropsonde -c ./dropsonde.cfg


  publish-to-PyPI:
    if: "${{ github.event_name == 'release' }}"
    runs-on: ubuntu-latest
    needs: [test-package]
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
      - run: uv build
      # Check that basic features work and we didn't miss to include crucial files
      - name: tests (wheel)
        run: uv run --isolated --no-project -p 3.13 --with dist/*.whl tests/publish_test.py
      - name: tests (source distribution)
        run: uv run --isolated --no-project -p 3.13 --with dist/*.tar.gz tests/publish_test.py
      - run: uv publish --trusted-publishing always
