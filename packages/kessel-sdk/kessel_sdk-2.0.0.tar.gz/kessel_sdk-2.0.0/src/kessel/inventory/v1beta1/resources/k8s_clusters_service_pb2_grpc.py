# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from kessel.inventory.v1beta1.resources import k8s_clusters_service_pb2 as kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2


class KesselK8sClusterServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateK8sCluster = channel.unary_unary(
                '/kessel.inventory.v1beta1.resources.KesselK8sClusterService/CreateK8sCluster',
                request_serializer=kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.CreateK8sClusterRequest.SerializeToString,
                response_deserializer=kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.CreateK8sClusterResponse.FromString,
                _registered_method=True)
        self.UpdateK8sCluster = channel.unary_unary(
                '/kessel.inventory.v1beta1.resources.KesselK8sClusterService/UpdateK8sCluster',
                request_serializer=kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.UpdateK8sClusterRequest.SerializeToString,
                response_deserializer=kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.UpdateK8sClusterResponse.FromString,
                _registered_method=True)
        self.DeleteK8sCluster = channel.unary_unary(
                '/kessel.inventory.v1beta1.resources.KesselK8sClusterService/DeleteK8sCluster',
                request_serializer=kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.DeleteK8sClusterRequest.SerializeToString,
                response_deserializer=kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.DeleteK8sClusterResponse.FromString,
                _registered_method=True)


class KesselK8sClusterServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateK8sCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateK8sCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteK8sCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KesselK8sClusterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateK8sCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateK8sCluster,
                    request_deserializer=kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.CreateK8sClusterRequest.FromString,
                    response_serializer=kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.CreateK8sClusterResponse.SerializeToString,
            ),
            'UpdateK8sCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateK8sCluster,
                    request_deserializer=kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.UpdateK8sClusterRequest.FromString,
                    response_serializer=kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.UpdateK8sClusterResponse.SerializeToString,
            ),
            'DeleteK8sCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteK8sCluster,
                    request_deserializer=kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.DeleteK8sClusterRequest.FromString,
                    response_serializer=kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.DeleteK8sClusterResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kessel.inventory.v1beta1.resources.KesselK8sClusterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('kessel.inventory.v1beta1.resources.KesselK8sClusterService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class KesselK8sClusterService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateK8sCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kessel.inventory.v1beta1.resources.KesselK8sClusterService/CreateK8sCluster',
            kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.CreateK8sClusterRequest.SerializeToString,
            kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.CreateK8sClusterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateK8sCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kessel.inventory.v1beta1.resources.KesselK8sClusterService/UpdateK8sCluster',
            kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.UpdateK8sClusterRequest.SerializeToString,
            kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.UpdateK8sClusterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteK8sCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kessel.inventory.v1beta1.resources.KesselK8sClusterService/DeleteK8sCluster',
            kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.DeleteK8sClusterRequest.SerializeToString,
            kessel_dot_inventory_dot_v1beta1_dot_resources_dot_k8s__clusters__service__pb2.DeleteK8sClusterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
