[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = ["poetry-core>=2.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]

[project]
authors = []
classifiers = [
  "Development Status :: 4 - Beta",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11"
]
description = "Data Cloud Custom Code SDK"
dynamic = []
license = "Apache-2.0"
name = "salesforce-data-customcode"
readme = "README.md"
requires-python = ">=3.10,<3.12"
version = "0.1.13"

[tool.black]
exclude = '''
(
    asv_bench/env
  | \.egg
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | setup.py
)
'''
target-version = ['py310']

[tool.coverage.html]
directory = "coverage_html"

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  'pragma: no cover',
  'def __repr__',
  'raise NotImplementedError',
  'if __name__ == .__main__.:',
  'if TYPE_CHECKING:',
  'pass'
]
ignore_errors = false
omit = ['src/datacustomcode/_version.py']
show_missing = true

[tool.coverage.run]
branch = true
omit = ['src/datacustomcode/_version.py']
source = ['datacustomcode']

[tool.isort]
combine_as_imports = true
force_grid_wrap = 3
force_sort_within_sections = true
include_trailing_comma = true
multi_line_output = 3
profile = 'black'
use_parentheses = true

[tool.mypy]
check_untyped_defs = false
ignore_missing_imports = true
no_implicit_optional = true
plugins = [
  'pydantic.mypy'
]
python_version = "3.10"
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true

[tool.poetry]
include = [
  {path = "src/datacustomcode/templates/**/*", format = "sdist"},
  {path = "src/datacustomcode/config.yaml", format = "sdist"}
]
packages = [{include = "datacustomcode", from = "src"}]

[tool.poetry.build]
generate-setup-file = false

[tool.poetry.dependencies]
click = "^8.1.8"
loguru = "^0.7.3"
numpy = "*"
pandas = "*"
pydantic = "^1.8.2 || ^2.0.0"
pyspark = "3.5.1"
python = ">=3.10,<3.12"
pyyaml = "^6.0"
salesforce-cdp-connector = "*"
setuptools_scm = "^7.1.0"

[tool.poetry.group.dev.dependencies]
build = "*"
coverage = ">=7.0.0,<8.0.0"
ipykernel = "^6.29.5"
mypy = "*"
poetry-dynamic-versioning = {extras = ["plugin"], version = "^1.8.2"}
pre-commit = "*"
pytest = "*"
pytest-cov = "*"
pytest-html = "*"
pytest-xdist = "*"
types-PyYAML = "*"
types-requests = "*"

[tool.poetry.plugins."poetry.plugin"]

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = {version = ">=1.0.0,<2.0.0", extras = ["plugin"]}

[tool.poetry.scripts]
datacustomcode = "datacustomcode.cli:cli"

[tool.poetry-dynamic-versioning]
enable = false
pattern = "^v(?P<base>.+)$"
style = "semver"
vcs = "git"

[tool.pytest.ini_options]
addopts = "--cov=src/datacustomcode --cov-report=term-missing"
markers = [
  "spark: Requires spark session to run"
]
python_classes = "Test*"
python_files = "test_*.py"
python_functions = "test_*"
testpaths = ["tests"]

[tool.ruff]
fix = true
line-length = 88
target-version = 'py310'
lint.ignore = [
  # do not assign a lambda expression, use a def
  'E731',
  # controversial
  'B006',
  'B007',
  'B008',
  # setattr is used to side-step mypy
  'B009',
  # getattr is used to side-step mypy
  'B010',
  # false positives
  'B019',
  # Too many arguments to function call
  'PLR0913',
  # Too many returns
  'PLR0911',
  # Too many branches
  'PLR0912',
  # Too many statements
  'PLR0915',
  # Redefined loop name
  'PLW2901',
  # Self
  'PYI019',
  # Docstrings should not be included in stubs
  'PYI021',
  # Use typing_extensions.TypeAlias for type aliases
  'PYI026',
  # while int | float can be shortened to float, the former is more explicit
  'PYI041',  # not yet implemented
  # Magic number
  'PLR2004',
  # debatable
  'PYI034'
]
lint.select = [
  'F',
  'E',
  'W',
  'YTT',
  'B',
  'Q',
  'T10',
  'INT',
  'PLC',
  'PLE',
  'PLR',
  'PLW',
  'PIE',
  'PYI',
  'TID',
  'ISC',
  'TCH',
  'C4',
  'RUF',
  'S102'
]

[tool.setuptools.package_data]
datacustomcode = ["templates/**/*", "config.yaml"]

[tool.setuptools.packages.find]
include = ['datacustomcode', 'datacustomcode.*']

[tool.setuptools_scm]
fallback_version = '0.1.0'
tag_regex = "^v(.*?)$"
write_to = 'src/datacustomcode/_version.py'
