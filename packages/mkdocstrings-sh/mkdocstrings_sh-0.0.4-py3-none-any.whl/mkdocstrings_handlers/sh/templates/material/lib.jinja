{# lib.jinja #}

{% macro HANDLE_FOR_TAG_ELEM(i, mode) %}
  {% if i.code %}
    {# handle @arg and @option #}
    <strong><code>{{ i.code }}</code></strong>
    {{ i.description | convert_markdown(heading_level + 1, html_id=filename, strip_paragraph=True) }}
  {% elif mode == "raw" %}
    {{ i }}
  {% elif mode == "code" %}
    <pre><code>{{ i }}</code></pre>
  {% else %}
    {{ i | convert_markdown(heading_level + 1, html_id=filename, strip_paragraph=True) }}
  {% endif %}
{% endmacro %}

{% macro HANDLE_FOR_TAG(what, desc="", mode="", table=1) %}
  {% if what %}
    <p>
    {% if what | length == 1 %}
      {% if desc %}
        <strong>
          {# Remove plural form trailing 's' if present #}
          {% if desc[-1] == "s" %}{{ desc[:-1] }}{% else %}{{ desc }}{% endif %}:
        </strong>
      {% endif %}
      {% for i in what %}
        {{ HANDLE_FOR_TAG_ELEM(i, mode) }}
      {% endfor %}
    {% else %}
      {% if desc %}
        <strong>{{ desc }}:</strong>
      {% endif %}
      {% if table %}<ul>{% endif %}
        {% for i in what %}
          {% if table %}<li>{% endif %}
            {{ HANDLE_FOR_TAG_ELEM(i, mode) }}
          {% if table %}</li>{% endif %}
        {% endfor %}
      {% if table %}</ul>{% endif %}
    {% endif %}
    </p>
  {% endif %}
{% endmacro %}

{% macro COMMON(data, id, name, role) %}
  {% filter heading(heading_level, id=id, role=role,
    toc_label='<code class="doc-symbol doc-symbol-heading doc-symbol-sh-' ~ data.type ~ '"></code> ' ~ name)
  %}
    <code class="doc-symbol doc-symbol-heading doc-symbol-sh-{{ data.type }}"></code>
    {{ name }}
    {% if source_url %}
      <a href="{{ source_url.format(file=data.file, line=data.line) }}"
        title="Go to source code of this symbol"
        class="doc-symbol-sh-link">
      </a>
    {% endif %}
  {% endfilter %}

  {{ HANDLE_FOR_TAG(data.description, table=0) }}
  {% for what in "note abstract info tip success question warning failure danger buf quote".split() %}
    {% for i in data[what] %}
      {{ "!!! %s\n%s" | format(what, (i | indent(first=1))) | convert_markdown(heading_level + 1, html_id=filename) }}
    {% endfor %}
  {% endfor %}
  {% for what in "example".split() %}
    {% for i in data[what] %}
      {% if "\n" not in i.strip() %}
        {% set desc = "" %}
        {% set text = [i] %}
      {% elif i.splitlines()[0] %}
        {% set desc = " \"" ~ i.splitlines()[0] ~ "\"" %}
        {% set text = i.splitlines()[1:] %}
      {% else %}
        {% set desc = "" %}
        {% set text = i.splitlines()[1:] %}
      {% endif %}
      {{
        "!!! %s%s\n%s"
          | format(what, desc, (text | join("\n") | indent(8, first=1)))
          | convert_markdown(heading_level + 1, html_id=filename)
      }}
    {% endfor %}
  {% endfor %}
  {# HANDLE_FOR_TAG(data.example, "Examples", mode="code") #}
  {{ HANDLE_FOR_TAG(data.author, "Authors", mode="raw") }}
  {{ HANDLE_FOR_TAG(data.maintainer, "Maintainers", mode="raw") }}
  {{ HANDLE_FOR_TAG(data["SPDX-License-Identifier"], "SPDX-License-Identifier", mode="raw") }}
  {{ HANDLE_FOR_TAG(data.license, "Licenses", mode="code") }}
  {{ HANDLE_FOR_TAG(data.option, "Options") }}
  {{ HANDLE_FOR_TAG(data.arg, "Arguments") }}

  {% if data.noargs %}
    <p>
    <strong>Arguments:</strong>
    Takes no arguments
    </p>
  {% endif %}

  {{ HANDLE_FOR_TAG(data.set, "Sets variables") }}
  {{ HANDLE_FOR_TAG(data.env, "Uses environment variables") }}

  {% if data.shellcheck %}
    <p>
      <strong>Shellcheck disable=</strong>
      {% for i in data.shellcheck %}
        <a href="https://www.shellcheck.net/wiki/{{i}}">{{i}}</a>
      {% endfor %}
    </p>
  {% endif %}

  {{ HANDLE_FOR_TAG(data.require, "Requires") }}
  {{ HANDLE_FOR_TAG(data.return, "Returns") }}
  {{ HANDLE_FOR_TAG(data.exit, "Exits") }}
  {{ HANDLE_FOR_TAG(data.exitcode, "Exits") }}
  {{ HANDLE_FOR_TAG(data.see, "See") }}

  {# nest #}
  {% for i in data.data %}
    {% with data = i, heading_level = heading_level + 1 %}
      {% include i.type + ".html.jinja" with context %}
    {% endwith %}
  {% endfor %}

{% endmacro %}
