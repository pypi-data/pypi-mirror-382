---
services:
  explorer:
    build:
      context: .
      args:
        ENVIRONMENT: deployment
    image: ghcr.io/opendatacube/explorer:tests
    ports:
      - "80:8080"
    environment:
      - LOCAL_UID=${LOCAL_UID:-1000}
      - LOCAL_GID=${LOCAL_GID:-1000}
      # - DB_HOSTNAME=host.docker.internal
      - POSTGRES_HOSTNAME=postgres
      - PGPORT=35433
      - POSTGRES_USER=opendatacube
      - POSTGRES_PASSWORD=opendatacubepassword
      - POSTGRES_DB=opendatacube
      - ODC_DEFAULT_INDEX_DRIVER=postgres
      - ODC_POSTGIS_INDEX_DRIVER=postgis
      - ODC_DEFAULT_DB_URL=postgresql://opendatacube:opendatacubepassword@postgres:35433/opendatacube
      - ODC_POSTGIS_DB_URL=postgresql://opendatacube:opendatacubepassword@postgres:35433/opendatacube
      - FLASK_ENV=development
      - FLASK_APP=cubedash
      - FLASK_DEBUG=1
      - CUBEDASH_DEFAULT_TIMEZONE=Australia/Darwin
      # - VIRTUAL_HOST=datacube.explorer
    tty: true
    stdin_open: true
    depends_on:
      - postgres

  postgres:
    image: postgis/postgis:16-3.4
    hostname: postgres
    environment:
      - POSTGRES_DB=opendatacube
      - PGPORT=35433
      - POSTGRES_PASSWORD=opendatacubepassword
      - POSTGRES_USER=opendatacube
    ports:
      - "35433:35433"
    restart: always
    volumes:
      # See https://hub.docker.com/_/postgres/#initialization-scripts
      # Create `opendatacube_test` database in addition to `opendatacube`
      - ./.docker/create_db.sh:/docker-entrypoint-initdb.d/create-pg-databases.sh
      - type: tmpfs
        target: /var/lib/postgresql/data
    command: -c fsync=off -c full_page_writes=off -c synchronous_commit=off
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "postgres", "-q", "--port", "35433", "-d", "opendatacube", "-U", "opendatacube"]
      timeout: 45s
      interval: 10s
      retries: 10

  # Needed for testing HTTPS
  # nginx-proxy:
  #   image: jwilder/nginx-proxy
  #   container_name: nginx-proxy
  #   ports:
  #     - "5000:80"
  #     - "443:443"
  #   volumes:
  #     - /var/run/docker.sock:/tmp/docker.sock:ro
  #     - ./certs:/etc/nginx/certs
  #   depends_on:
  #     - explorer
