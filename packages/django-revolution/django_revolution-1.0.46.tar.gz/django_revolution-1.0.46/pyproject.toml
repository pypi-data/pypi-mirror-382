[build-system]
requires = [ "hatchling",]
build-backend = "hatchling.build"

[project]
name = "django-revolution"
version = "1.0.46"
description = "ðŸš€ OpenAPI client generation framework for Django - Auto-generated TypeScript & Python clients, Zone-based API architecture"
readme = "README.md"
keywords = [ "django", "api", "openapi", "rest", "zones", "typescript", "python", "client", "generation", "drf-spectacular", "openapi-generator", "api-client", "typescript-client", "python-client",]
classifiers = [ "Development Status :: 5 - Production/Stable", "Framework :: Django", "Framework :: Django :: 3.2", "Framework :: Django :: 4.0", "Framework :: Django :: 4.1", "Framework :: Django :: 4.2", "Framework :: Django :: 5.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Code Generators", "Typing :: Typed",]
requires-python = ">=3.10,<4.0"
dependencies = [ "Django>=3.2", "djangorestframework>=3.12.0", "drf-spectacular>=0.24.0", "Jinja2>=3.0.0", "PyYAML>=6.0", "pydantic>=2.0.0", "pydantic-settings>=2.0.0", "click>=8.0.0", "rich>=13.0.0", "openapi-python-client>=0.26.1,<0.27.0",]
[[project.authors]]
name = "Django-CFG Team"
email = "info@djangocfg.com"

[[project.maintainers]]
name = "Django-CFG Team"
email = "info@djangocfg.com"

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [ "pytest>=6.0", "pytest-django>=4.0", "black>=21.0", "isort>=5.0", "mypy>=0.800", "build>=1.0.0", "twine>=4.0.0", "toml>=0.10.0",]
test = [ "pytest>=6.0", "pytest-django>=4.0",]
formatting = [ "black>=21.0", "isort>=5.0",]

[project.urls]
Homepage = "https://djangocfg.com"
Documentation = "https://djangocfg.com/docs/features/api-generation"
"Quick Start" = "https://djangocfg.com/docs/features/api-generation/quick-start"
"Live Demo" = "http://demo.djangocfg.com"
Repository = "https://github.com/markolofsen/django-revolution"
Issues = "https://github.com/markolofsen/django-revolution/issues"
"Django-CFG Framework" = "https://github.com/markolofsen/django-cfg"

[tool.black]
line-length = 100
target-version = [ "py310",]
include = "\\.pyi?$"

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
strict_optional = true

[tool.hatch.metadata]
allow-direct-references = true

[tool.pytest.ini_options]
addopts = [ "--verbose", "--strict-markers",]
testpaths = [ "tests",]
markers = [ "unit: marks tests as unit tests", "integration: marks tests as integration tests",]

[tool.hatch.build.targets.wheel]
packages = [ "src/django_revolution",]

[tool.hatch.build.targets.sdist]
include = [ "src/django_revolution", "README.md", "LICENSE", "requirements*.txt", "MANIFEST.in",]
exclude = [ "tests", "*.log", ".env*", "node_modules", "*.egg-info",]

[tool.hatch.build.targets.wheel.force-include]
"README.md" = "django_revolution/README.md"
"pyproject.toml" = "django_revolution/pyproject.toml"
