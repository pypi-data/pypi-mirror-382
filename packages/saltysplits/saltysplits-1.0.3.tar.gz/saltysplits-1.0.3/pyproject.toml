[project]
name = "saltysplits"
version = "1.0.3"
description = "Toolset for modeling of LiveSplit files and analysis of the speedrunning data within"
readme = "README.md"
keywords = ["livesplit", "speedrunning", "pydantic", "xml", "gaming"]
authors = [
    { name = "Jasper", email = "j.siebring92@gmail.com" }
]
requires-python = ">=3.12"
dependencies = [
    "pandas>=2.2.3",
    "pillow>=11.2.1",
    "pydantic-xml[lxml]>=2.15.0",
]

[project.urls]
homepage = "https://saltysplits.com"
repository = "https://github.com/jaspersiebring/saltysplits"
GitHub = "https://github.com/jaspersiebring/saltysplits.git"

[project.optional-dependencies]
streamlit = [
    "streamlit>=1.44.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "requests>=2.32.3",
    "ruff>=0.11.5",
]

[tool.mypy]
plugins = ["pydantic_xml.mypy"]
exclude = [
  "saltysplits/streamlit.py"
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "src/saltysplits/streamlit.py"
]

# Same as Black.
line-length = 100
indent-width = 4

# Currently assumes 3.12 (but can probably be loosened)
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"
publish-url = "https://upload.pypi.org/legacy/"
default = true
