Metadata-Version: 2.1
Name: neon-audio
Version: 1.7.1a1
Summary: Neon Audio Module
Home-page: https://github.com/NeonGeckoCom/neon_audio
Author: Neongecko
Author-email: developers@neon.ai
License: BSD-3-Clause
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: ovos-audio~=0.3
Requires-Dist: ovos-utils>=0.0.35,~=0.0
Requires-Dist: ovos-config~=0.1
Requires-Dist: phoneme-guesser~=0.1
Requires-Dist: ovos-plugin-manager~=0.1
Requires-Dist: neon-utils[network,sentry,signal]~=1.13
Requires-Dist: click~=8.0
Requires-Dist: click-default-group~=1.2
Requires-Dist: ovos-bus-client>=0.0.3,~=0.0
Requires-Dist: ovos-audio-plugin-simple~=0.1
Requires-Dist: ovos-plugin-common-play>=0.0.6,~=0.0
Requires-Dist: ovos-ocp-m3u-plugin>=0.0.1,~=0.0
Requires-Dist: ovos-ocp-rss-plugin>=0.0.2,~=0.0
Requires-Dist: ovos-ocp-files-plugin~=0.13
Requires-Dist: ovos-ocp-news-plugin>=0.0.3,~=0.0
Provides-Extra: docker
Requires-Dist: neon-lang-plugin-libretranslate>=0.2.1,~=0.2; extra == "docker"
Requires-Dist: ovos-tts-plugin-mimic~=0.2; extra == "docker"
Requires-Dist: neon-tts-plugin-coqui>=0.8.1,~=0.7; extra == "docker"

# Neon Audio
Audio Module for Neon Core. This module can be treated as a replacement for the
[mycroft-core](https://github.com/MycroftAI/mycroft-core) speech module. This module handles input text, performs TTS, 
and optionally returns the audio or plays it back locally.

## Neon Enhancements
`neon-audio` extends `mycroft-audio` with the following added functionality:
* Support for translated output languages
* Support for multiple language spoken responses (multiple users and/or multi-language users)
* Messagebus API listeners to handle outside requests for TTS
* Arbitrary configuration supported by passing at module init

## Compatibility
Mycroft TTS plugins are compatible with `neon-speech`.

## Running in Docker
The included `Dockerfile` may be used to build a docker container for the neon_audio module. The below command may be used
to start the container.

```shell
docker run -d \
--network=host \
--name=neon_audio \
-v ~/.config/pulse/cookie:/tmp/pulse_cookie:ro \
-v ${XDG_RUNTIME_DIR}/pulse:${XDG_RUNTIME_DIR}/pulse:ro \
-v /run/dbus/system_bus_socket:/run/dbus/system_bus_socket:rw \
-v /tmp/.X11-unix:/tmp/.X11-unix:ro \
--device=/dev/snd:/dev/snd \
-e PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native \
-e PULSE_COOKIE=/tmp/pulse_cookie \
-e DISPLAY=${DISPLAY} \
neon_audio
```
