# coding: utf-8

"""
    Street Manager Reporting API

    See API specification Resource Guide > Reporting API for more information on paging and endpoints NOTE: Swagger Editor/UI does not display all description text for enumerations and child elements, check swagger.json for full description text  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PrivateStreetSummaryResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'private_street_reference_number': 'str',
        'works_location_description': 'str',
        'promoter_organisation': 'str',
        'ha_organisation': 'str',
        'work_reference_number': 'str',
        'start_date': 'datetime',
        'start_time': 'datetime',
        'end_date': 'datetime',
        'end_time': 'datetime',
        'date_created': 'datetime',
        'status': 'PrivateStreetStatusResponse',
        'status_string': 'str'
    }

    attribute_map = {
        'private_street_reference_number': 'private_street_reference_number',
        'works_location_description': 'works_location_description',
        'promoter_organisation': 'promoter_organisation',
        'ha_organisation': 'ha_organisation',
        'work_reference_number': 'work_reference_number',
        'start_date': 'start_date',
        'start_time': 'start_time',
        'end_date': 'end_date',
        'end_time': 'end_time',
        'date_created': 'date_created',
        'status': 'status',
        'status_string': 'status_string'
    }

    def __init__(self, private_street_reference_number=None, works_location_description=None, promoter_organisation=None, ha_organisation=None, work_reference_number=None, start_date=None, start_time=None, end_date=None, end_time=None, date_created=None, status=None, status_string=None):  # noqa: E501
        """PrivateStreetSummaryResponse - a model defined in Swagger"""  # noqa: E501
        self._private_street_reference_number = None
        self._works_location_description = None
        self._promoter_organisation = None
        self._ha_organisation = None
        self._work_reference_number = None
        self._start_date = None
        self._start_time = None
        self._end_date = None
        self._end_time = None
        self._date_created = None
        self._status = None
        self._status_string = None
        self.discriminator = None
        self.private_street_reference_number = private_street_reference_number
        self.works_location_description = works_location_description
        self.promoter_organisation = promoter_organisation
        self.ha_organisation = ha_organisation
        self.work_reference_number = work_reference_number
        self.start_date = start_date
        if start_time is not None:
            self.start_time = start_time
        self.end_date = end_date
        if end_time is not None:
            self.end_time = end_time
        self.date_created = date_created
        self.status = status
        self.status_string = status_string

    @property
    def private_street_reference_number(self):
        """Gets the private_street_reference_number of this PrivateStreetSummaryResponse.  # noqa: E501


        :return: The private_street_reference_number of this PrivateStreetSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._private_street_reference_number

    @private_street_reference_number.setter
    def private_street_reference_number(self, private_street_reference_number):
        """Sets the private_street_reference_number of this PrivateStreetSummaryResponse.


        :param private_street_reference_number: The private_street_reference_number of this PrivateStreetSummaryResponse.  # noqa: E501
        :type: str
        """
        if private_street_reference_number is None:
            raise ValueError("Invalid value for `private_street_reference_number`, must not be `None`")  # noqa: E501

        self._private_street_reference_number = private_street_reference_number

    @property
    def works_location_description(self):
        """Gets the works_location_description of this PrivateStreetSummaryResponse.  # noqa: E501


        :return: The works_location_description of this PrivateStreetSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._works_location_description

    @works_location_description.setter
    def works_location_description(self, works_location_description):
        """Sets the works_location_description of this PrivateStreetSummaryResponse.


        :param works_location_description: The works_location_description of this PrivateStreetSummaryResponse.  # noqa: E501
        :type: str
        """
        if works_location_description is None:
            raise ValueError("Invalid value for `works_location_description`, must not be `None`")  # noqa: E501

        self._works_location_description = works_location_description

    @property
    def promoter_organisation(self):
        """Gets the promoter_organisation of this PrivateStreetSummaryResponse.  # noqa: E501


        :return: The promoter_organisation of this PrivateStreetSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._promoter_organisation

    @promoter_organisation.setter
    def promoter_organisation(self, promoter_organisation):
        """Sets the promoter_organisation of this PrivateStreetSummaryResponse.


        :param promoter_organisation: The promoter_organisation of this PrivateStreetSummaryResponse.  # noqa: E501
        :type: str
        """
        if promoter_organisation is None:
            raise ValueError("Invalid value for `promoter_organisation`, must not be `None`")  # noqa: E501

        self._promoter_organisation = promoter_organisation

    @property
    def ha_organisation(self):
        """Gets the ha_organisation of this PrivateStreetSummaryResponse.  # noqa: E501


        :return: The ha_organisation of this PrivateStreetSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._ha_organisation

    @ha_organisation.setter
    def ha_organisation(self, ha_organisation):
        """Sets the ha_organisation of this PrivateStreetSummaryResponse.


        :param ha_organisation: The ha_organisation of this PrivateStreetSummaryResponse.  # noqa: E501
        :type: str
        """
        if ha_organisation is None:
            raise ValueError("Invalid value for `ha_organisation`, must not be `None`")  # noqa: E501

        self._ha_organisation = ha_organisation

    @property
    def work_reference_number(self):
        """Gets the work_reference_number of this PrivateStreetSummaryResponse.  # noqa: E501


        :return: The work_reference_number of this PrivateStreetSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._work_reference_number

    @work_reference_number.setter
    def work_reference_number(self, work_reference_number):
        """Sets the work_reference_number of this PrivateStreetSummaryResponse.


        :param work_reference_number: The work_reference_number of this PrivateStreetSummaryResponse.  # noqa: E501
        :type: str
        """
        if work_reference_number is None:
            raise ValueError("Invalid value for `work_reference_number`, must not be `None`")  # noqa: E501

        self._work_reference_number = work_reference_number

    @property
    def start_date(self):
        """Gets the start_date of this PrivateStreetSummaryResponse.  # noqa: E501


        :return: The start_date of this PrivateStreetSummaryResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this PrivateStreetSummaryResponse.


        :param start_date: The start_date of this PrivateStreetSummaryResponse.  # noqa: E501
        :type: datetime
        """
        if start_date is None:
            raise ValueError("Invalid value for `start_date`, must not be `None`")  # noqa: E501

        self._start_date = start_date

    @property
    def start_time(self):
        """Gets the start_time of this PrivateStreetSummaryResponse.  # noqa: E501


        :return: The start_time of this PrivateStreetSummaryResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this PrivateStreetSummaryResponse.


        :param start_time: The start_time of this PrivateStreetSummaryResponse.  # noqa: E501
        :type: datetime
        """

        self._start_time = start_time

    @property
    def end_date(self):
        """Gets the end_date of this PrivateStreetSummaryResponse.  # noqa: E501


        :return: The end_date of this PrivateStreetSummaryResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this PrivateStreetSummaryResponse.


        :param end_date: The end_date of this PrivateStreetSummaryResponse.  # noqa: E501
        :type: datetime
        """
        if end_date is None:
            raise ValueError("Invalid value for `end_date`, must not be `None`")  # noqa: E501

        self._end_date = end_date

    @property
    def end_time(self):
        """Gets the end_time of this PrivateStreetSummaryResponse.  # noqa: E501


        :return: The end_time of this PrivateStreetSummaryResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this PrivateStreetSummaryResponse.


        :param end_time: The end_time of this PrivateStreetSummaryResponse.  # noqa: E501
        :type: datetime
        """

        self._end_time = end_time

    @property
    def date_created(self):
        """Gets the date_created of this PrivateStreetSummaryResponse.  # noqa: E501


        :return: The date_created of this PrivateStreetSummaryResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this PrivateStreetSummaryResponse.


        :param date_created: The date_created of this PrivateStreetSummaryResponse.  # noqa: E501
        :type: datetime
        """
        if date_created is None:
            raise ValueError("Invalid value for `date_created`, must not be `None`")  # noqa: E501

        self._date_created = date_created

    @property
    def status(self):
        """Gets the status of this PrivateStreetSummaryResponse.  # noqa: E501


        :return: The status of this PrivateStreetSummaryResponse.  # noqa: E501
        :rtype: PrivateStreetStatusResponse
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PrivateStreetSummaryResponse.


        :param status: The status of this PrivateStreetSummaryResponse.  # noqa: E501
        :type: PrivateStreetStatusResponse
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501

        self._status = status

    @property
    def status_string(self):
        """Gets the status_string of this PrivateStreetSummaryResponse.  # noqa: E501


        :return: The status_string of this PrivateStreetSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._status_string

    @status_string.setter
    def status_string(self, status_string):
        """Sets the status_string of this PrivateStreetSummaryResponse.


        :param status_string: The status_string of this PrivateStreetSummaryResponse.  # noqa: E501
        :type: str
        """
        if status_string is None:
            raise ValueError("Invalid value for `status_string`, must not be `None`")  # noqa: E501

        self._status_string = status_string

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PrivateStreetSummaryResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PrivateStreetSummaryResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
