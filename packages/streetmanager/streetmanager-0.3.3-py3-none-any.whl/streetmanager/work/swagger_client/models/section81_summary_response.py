# coding: utf-8

"""
    Street Manager API

    See API specification Resource Guide > Work API for more information on endpoints NOTE: Swagger Editor/UI does not display all description text for enumerations and child elements, check swagger.json for full description text  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Section81SummaryResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'section_81_reference_number': 'str',
        'date_created': 'datetime',
        'location_description': 'str',
        'section_81_severity': 'Section81SeverityResponse',
        'section_81_severity_string': 'str',
        'section_81_status': 'Section81StatusResponse',
        'section_81_status_string': 'str',
        'section_81_type': 'Section81TypeResponse',
        'section_81_type_string': 'str'
    }

    attribute_map = {
        'section_81_reference_number': 'section_81_reference_number',
        'date_created': 'date_created',
        'location_description': 'location_description',
        'section_81_severity': 'section_81_severity',
        'section_81_severity_string': 'section_81_severity_string',
        'section_81_status': 'section_81_status',
        'section_81_status_string': 'section_81_status_string',
        'section_81_type': 'section_81_type',
        'section_81_type_string': 'section_81_type_string'
    }

    def __init__(self, section_81_reference_number=None, date_created=None, location_description=None, section_81_severity=None, section_81_severity_string=None, section_81_status=None, section_81_status_string=None, section_81_type=None, section_81_type_string=None):  # noqa: E501
        """Section81SummaryResponse - a model defined in Swagger"""  # noqa: E501
        self._section_81_reference_number = None
        self._date_created = None
        self._location_description = None
        self._section_81_severity = None
        self._section_81_severity_string = None
        self._section_81_status = None
        self._section_81_status_string = None
        self._section_81_type = None
        self._section_81_type_string = None
        self.discriminator = None
        self.section_81_reference_number = section_81_reference_number
        self.date_created = date_created
        self.location_description = location_description
        if section_81_severity is not None:
            self.section_81_severity = section_81_severity
        if section_81_severity_string is not None:
            self.section_81_severity_string = section_81_severity_string
        self.section_81_status = section_81_status
        self.section_81_status_string = section_81_status_string
        if section_81_type is not None:
            self.section_81_type = section_81_type
        if section_81_type_string is not None:
            self.section_81_type_string = section_81_type_string

    @property
    def section_81_reference_number(self):
        """Gets the section_81_reference_number of this Section81SummaryResponse.  # noqa: E501


        :return: The section_81_reference_number of this Section81SummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._section_81_reference_number

    @section_81_reference_number.setter
    def section_81_reference_number(self, section_81_reference_number):
        """Sets the section_81_reference_number of this Section81SummaryResponse.


        :param section_81_reference_number: The section_81_reference_number of this Section81SummaryResponse.  # noqa: E501
        :type: str
        """
        if section_81_reference_number is None:
            raise ValueError("Invalid value for `section_81_reference_number`, must not be `None`")  # noqa: E501

        self._section_81_reference_number = section_81_reference_number

    @property
    def date_created(self):
        """Gets the date_created of this Section81SummaryResponse.  # noqa: E501


        :return: The date_created of this Section81SummaryResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this Section81SummaryResponse.


        :param date_created: The date_created of this Section81SummaryResponse.  # noqa: E501
        :type: datetime
        """
        if date_created is None:
            raise ValueError("Invalid value for `date_created`, must not be `None`")  # noqa: E501

        self._date_created = date_created

    @property
    def location_description(self):
        """Gets the location_description of this Section81SummaryResponse.  # noqa: E501


        :return: The location_description of this Section81SummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._location_description

    @location_description.setter
    def location_description(self, location_description):
        """Sets the location_description of this Section81SummaryResponse.


        :param location_description: The location_description of this Section81SummaryResponse.  # noqa: E501
        :type: str
        """
        if location_description is None:
            raise ValueError("Invalid value for `location_description`, must not be `None`")  # noqa: E501

        self._location_description = location_description

    @property
    def section_81_severity(self):
        """Gets the section_81_severity of this Section81SummaryResponse.  # noqa: E501


        :return: The section_81_severity of this Section81SummaryResponse.  # noqa: E501
        :rtype: Section81SeverityResponse
        """
        return self._section_81_severity

    @section_81_severity.setter
    def section_81_severity(self, section_81_severity):
        """Sets the section_81_severity of this Section81SummaryResponse.


        :param section_81_severity: The section_81_severity of this Section81SummaryResponse.  # noqa: E501
        :type: Section81SeverityResponse
        """

        self._section_81_severity = section_81_severity

    @property
    def section_81_severity_string(self):
        """Gets the section_81_severity_string of this Section81SummaryResponse.  # noqa: E501


        :return: The section_81_severity_string of this Section81SummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._section_81_severity_string

    @section_81_severity_string.setter
    def section_81_severity_string(self, section_81_severity_string):
        """Sets the section_81_severity_string of this Section81SummaryResponse.


        :param section_81_severity_string: The section_81_severity_string of this Section81SummaryResponse.  # noqa: E501
        :type: str
        """

        self._section_81_severity_string = section_81_severity_string

    @property
    def section_81_status(self):
        """Gets the section_81_status of this Section81SummaryResponse.  # noqa: E501


        :return: The section_81_status of this Section81SummaryResponse.  # noqa: E501
        :rtype: Section81StatusResponse
        """
        return self._section_81_status

    @section_81_status.setter
    def section_81_status(self, section_81_status):
        """Sets the section_81_status of this Section81SummaryResponse.


        :param section_81_status: The section_81_status of this Section81SummaryResponse.  # noqa: E501
        :type: Section81StatusResponse
        """
        if section_81_status is None:
            raise ValueError("Invalid value for `section_81_status`, must not be `None`")  # noqa: E501

        self._section_81_status = section_81_status

    @property
    def section_81_status_string(self):
        """Gets the section_81_status_string of this Section81SummaryResponse.  # noqa: E501


        :return: The section_81_status_string of this Section81SummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._section_81_status_string

    @section_81_status_string.setter
    def section_81_status_string(self, section_81_status_string):
        """Sets the section_81_status_string of this Section81SummaryResponse.


        :param section_81_status_string: The section_81_status_string of this Section81SummaryResponse.  # noqa: E501
        :type: str
        """
        if section_81_status_string is None:
            raise ValueError("Invalid value for `section_81_status_string`, must not be `None`")  # noqa: E501

        self._section_81_status_string = section_81_status_string

    @property
    def section_81_type(self):
        """Gets the section_81_type of this Section81SummaryResponse.  # noqa: E501


        :return: The section_81_type of this Section81SummaryResponse.  # noqa: E501
        :rtype: Section81TypeResponse
        """
        return self._section_81_type

    @section_81_type.setter
    def section_81_type(self, section_81_type):
        """Sets the section_81_type of this Section81SummaryResponse.


        :param section_81_type: The section_81_type of this Section81SummaryResponse.  # noqa: E501
        :type: Section81TypeResponse
        """

        self._section_81_type = section_81_type

    @property
    def section_81_type_string(self):
        """Gets the section_81_type_string of this Section81SummaryResponse.  # noqa: E501


        :return: The section_81_type_string of this Section81SummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._section_81_type_string

    @section_81_type_string.setter
    def section_81_type_string(self, section_81_type_string):
        """Sets the section_81_type_string of this Section81SummaryResponse.


        :param section_81_type_string: The section_81_type_string of this Section81SummaryResponse.  # noqa: E501
        :type: str
        """

        self._section_81_type_string = section_81_type_string

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Section81SummaryResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Section81SummaryResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
