# coding: utf-8

"""
    Street Manager API

    See API specification Resource Guide > Work API for more information on endpoints NOTE: Swagger Editor/UI does not display all description text for enumerations and child elements, check swagger.json for full description text  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SiteResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'permit_reference_number': 'str',
        'site_reference_number': 'str',
        'reinstatement_reference_number': 'str',
        'site_description': 'str',
        'depth': 'float',
        'length': 'float',
        'width': 'float',
        'completed_date': 'datetime',
        'end_date': 'datetime',
        'site_status': 'ReinstatementStatusResponse',
        'site_status_string': 'str',
        'reinstatement_type': 'ReinstatementTypeResponse',
        'reinstatement_type_string': 'str',
        'number_of_holes': 'float',
        'is_subsumed': 'bool',
        'subsume_reason': 'str',
        'response_to_remedial_works': 'bool',
        'base_courses_affected': 'bool',
        'location_types': 'list[LocationTypeResponse]',
        'location_types_string': 'list[str]',
        'site_coordinates': 'object',
        'reinstatements': 'list[ReinstatementResponse]'
    }

    attribute_map = {
        'permit_reference_number': 'permit_reference_number',
        'site_reference_number': 'site_reference_number',
        'reinstatement_reference_number': 'reinstatement_reference_number',
        'site_description': 'site_description',
        'depth': 'depth',
        'length': 'length',
        'width': 'width',
        'completed_date': 'completed_date',
        'end_date': 'end_date',
        'site_status': 'site_status',
        'site_status_string': 'site_status_string',
        'reinstatement_type': 'reinstatement_type',
        'reinstatement_type_string': 'reinstatement_type_string',
        'number_of_holes': 'number_of_holes',
        'is_subsumed': 'is_subsumed',
        'subsume_reason': 'subsume_reason',
        'response_to_remedial_works': 'response_to_remedial_works',
        'base_courses_affected': 'base_courses_affected',
        'location_types': 'location_types',
        'location_types_string': 'location_types_string',
        'site_coordinates': 'site_coordinates',
        'reinstatements': 'reinstatements'
    }

    def __init__(self, permit_reference_number=None, site_reference_number=None, reinstatement_reference_number=None, site_description=None, depth=None, length=None, width=None, completed_date=None, end_date=None, site_status=None, site_status_string=None, reinstatement_type=None, reinstatement_type_string=None, number_of_holes=None, is_subsumed=None, subsume_reason=None, response_to_remedial_works=None, base_courses_affected=None, location_types=None, location_types_string=None, site_coordinates=None, reinstatements=None):  # noqa: E501
        """SiteResponse - a model defined in Swagger"""  # noqa: E501
        self._permit_reference_number = None
        self._site_reference_number = None
        self._reinstatement_reference_number = None
        self._site_description = None
        self._depth = None
        self._length = None
        self._width = None
        self._completed_date = None
        self._end_date = None
        self._site_status = None
        self._site_status_string = None
        self._reinstatement_type = None
        self._reinstatement_type_string = None
        self._number_of_holes = None
        self._is_subsumed = None
        self._subsume_reason = None
        self._response_to_remedial_works = None
        self._base_courses_affected = None
        self._location_types = None
        self._location_types_string = None
        self._site_coordinates = None
        self._reinstatements = None
        self.discriminator = None
        if permit_reference_number is not None:
            self.permit_reference_number = permit_reference_number
        self.site_reference_number = site_reference_number
        self.reinstatement_reference_number = reinstatement_reference_number
        self.site_description = site_description
        if depth is not None:
            self.depth = depth
        if length is not None:
            self.length = length
        if width is not None:
            self.width = width
        if completed_date is not None:
            self.completed_date = completed_date
        if end_date is not None:
            self.end_date = end_date
        self.site_status = site_status
        self.site_status_string = site_status_string
        self.reinstatement_type = reinstatement_type
        self.reinstatement_type_string = reinstatement_type_string
        if number_of_holes is not None:
            self.number_of_holes = number_of_holes
        self.is_subsumed = is_subsumed
        if subsume_reason is not None:
            self.subsume_reason = subsume_reason
        if response_to_remedial_works is not None:
            self.response_to_remedial_works = response_to_remedial_works
        if base_courses_affected is not None:
            self.base_courses_affected = base_courses_affected
        self.location_types = location_types
        self.location_types_string = location_types_string
        self.site_coordinates = site_coordinates
        self.reinstatements = reinstatements

    @property
    def permit_reference_number(self):
        """Gets the permit_reference_number of this SiteResponse.  # noqa: E501


        :return: The permit_reference_number of this SiteResponse.  # noqa: E501
        :rtype: str
        """
        return self._permit_reference_number

    @permit_reference_number.setter
    def permit_reference_number(self, permit_reference_number):
        """Sets the permit_reference_number of this SiteResponse.


        :param permit_reference_number: The permit_reference_number of this SiteResponse.  # noqa: E501
        :type: str
        """

        self._permit_reference_number = permit_reference_number

    @property
    def site_reference_number(self):
        """Gets the site_reference_number of this SiteResponse.  # noqa: E501


        :return: The site_reference_number of this SiteResponse.  # noqa: E501
        :rtype: str
        """
        return self._site_reference_number

    @site_reference_number.setter
    def site_reference_number(self, site_reference_number):
        """Sets the site_reference_number of this SiteResponse.


        :param site_reference_number: The site_reference_number of this SiteResponse.  # noqa: E501
        :type: str
        """
        if site_reference_number is None:
            raise ValueError("Invalid value for `site_reference_number`, must not be `None`")  # noqa: E501

        self._site_reference_number = site_reference_number

    @property
    def reinstatement_reference_number(self):
        """Gets the reinstatement_reference_number of this SiteResponse.  # noqa: E501


        :return: The reinstatement_reference_number of this SiteResponse.  # noqa: E501
        :rtype: str
        """
        return self._reinstatement_reference_number

    @reinstatement_reference_number.setter
    def reinstatement_reference_number(self, reinstatement_reference_number):
        """Sets the reinstatement_reference_number of this SiteResponse.


        :param reinstatement_reference_number: The reinstatement_reference_number of this SiteResponse.  # noqa: E501
        :type: str
        """
        if reinstatement_reference_number is None:
            raise ValueError("Invalid value for `reinstatement_reference_number`, must not be `None`")  # noqa: E501

        self._reinstatement_reference_number = reinstatement_reference_number

    @property
    def site_description(self):
        """Gets the site_description of this SiteResponse.  # noqa: E501


        :return: The site_description of this SiteResponse.  # noqa: E501
        :rtype: str
        """
        return self._site_description

    @site_description.setter
    def site_description(self, site_description):
        """Sets the site_description of this SiteResponse.


        :param site_description: The site_description of this SiteResponse.  # noqa: E501
        :type: str
        """
        if site_description is None:
            raise ValueError("Invalid value for `site_description`, must not be `None`")  # noqa: E501

        self._site_description = site_description

    @property
    def depth(self):
        """Gets the depth of this SiteResponse.  # noqa: E501


        :return: The depth of this SiteResponse.  # noqa: E501
        :rtype: float
        """
        return self._depth

    @depth.setter
    def depth(self, depth):
        """Sets the depth of this SiteResponse.


        :param depth: The depth of this SiteResponse.  # noqa: E501
        :type: float
        """

        self._depth = depth

    @property
    def length(self):
        """Gets the length of this SiteResponse.  # noqa: E501


        :return: The length of this SiteResponse.  # noqa: E501
        :rtype: float
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this SiteResponse.


        :param length: The length of this SiteResponse.  # noqa: E501
        :type: float
        """

        self._length = length

    @property
    def width(self):
        """Gets the width of this SiteResponse.  # noqa: E501


        :return: The width of this SiteResponse.  # noqa: E501
        :rtype: float
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this SiteResponse.


        :param width: The width of this SiteResponse.  # noqa: E501
        :type: float
        """

        self._width = width

    @property
    def completed_date(self):
        """Gets the completed_date of this SiteResponse.  # noqa: E501


        :return: The completed_date of this SiteResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._completed_date

    @completed_date.setter
    def completed_date(self, completed_date):
        """Sets the completed_date of this SiteResponse.


        :param completed_date: The completed_date of this SiteResponse.  # noqa: E501
        :type: datetime
        """

        self._completed_date = completed_date

    @property
    def end_date(self):
        """Gets the end_date of this SiteResponse.  # noqa: E501


        :return: The end_date of this SiteResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this SiteResponse.


        :param end_date: The end_date of this SiteResponse.  # noqa: E501
        :type: datetime
        """

        self._end_date = end_date

    @property
    def site_status(self):
        """Gets the site_status of this SiteResponse.  # noqa: E501


        :return: The site_status of this SiteResponse.  # noqa: E501
        :rtype: ReinstatementStatusResponse
        """
        return self._site_status

    @site_status.setter
    def site_status(self, site_status):
        """Sets the site_status of this SiteResponse.


        :param site_status: The site_status of this SiteResponse.  # noqa: E501
        :type: ReinstatementStatusResponse
        """
        if site_status is None:
            raise ValueError("Invalid value for `site_status`, must not be `None`")  # noqa: E501

        self._site_status = site_status

    @property
    def site_status_string(self):
        """Gets the site_status_string of this SiteResponse.  # noqa: E501


        :return: The site_status_string of this SiteResponse.  # noqa: E501
        :rtype: str
        """
        return self._site_status_string

    @site_status_string.setter
    def site_status_string(self, site_status_string):
        """Sets the site_status_string of this SiteResponse.


        :param site_status_string: The site_status_string of this SiteResponse.  # noqa: E501
        :type: str
        """
        if site_status_string is None:
            raise ValueError("Invalid value for `site_status_string`, must not be `None`")  # noqa: E501

        self._site_status_string = site_status_string

    @property
    def reinstatement_type(self):
        """Gets the reinstatement_type of this SiteResponse.  # noqa: E501


        :return: The reinstatement_type of this SiteResponse.  # noqa: E501
        :rtype: ReinstatementTypeResponse
        """
        return self._reinstatement_type

    @reinstatement_type.setter
    def reinstatement_type(self, reinstatement_type):
        """Sets the reinstatement_type of this SiteResponse.


        :param reinstatement_type: The reinstatement_type of this SiteResponse.  # noqa: E501
        :type: ReinstatementTypeResponse
        """
        if reinstatement_type is None:
            raise ValueError("Invalid value for `reinstatement_type`, must not be `None`")  # noqa: E501

        self._reinstatement_type = reinstatement_type

    @property
    def reinstatement_type_string(self):
        """Gets the reinstatement_type_string of this SiteResponse.  # noqa: E501


        :return: The reinstatement_type_string of this SiteResponse.  # noqa: E501
        :rtype: str
        """
        return self._reinstatement_type_string

    @reinstatement_type_string.setter
    def reinstatement_type_string(self, reinstatement_type_string):
        """Sets the reinstatement_type_string of this SiteResponse.


        :param reinstatement_type_string: The reinstatement_type_string of this SiteResponse.  # noqa: E501
        :type: str
        """
        if reinstatement_type_string is None:
            raise ValueError("Invalid value for `reinstatement_type_string`, must not be `None`")  # noqa: E501

        self._reinstatement_type_string = reinstatement_type_string

    @property
    def number_of_holes(self):
        """Gets the number_of_holes of this SiteResponse.  # noqa: E501


        :return: The number_of_holes of this SiteResponse.  # noqa: E501
        :rtype: float
        """
        return self._number_of_holes

    @number_of_holes.setter
    def number_of_holes(self, number_of_holes):
        """Sets the number_of_holes of this SiteResponse.


        :param number_of_holes: The number_of_holes of this SiteResponse.  # noqa: E501
        :type: float
        """

        self._number_of_holes = number_of_holes

    @property
    def is_subsumed(self):
        """Gets the is_subsumed of this SiteResponse.  # noqa: E501


        :return: The is_subsumed of this SiteResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_subsumed

    @is_subsumed.setter
    def is_subsumed(self, is_subsumed):
        """Sets the is_subsumed of this SiteResponse.


        :param is_subsumed: The is_subsumed of this SiteResponse.  # noqa: E501
        :type: bool
        """
        if is_subsumed is None:
            raise ValueError("Invalid value for `is_subsumed`, must not be `None`")  # noqa: E501

        self._is_subsumed = is_subsumed

    @property
    def subsume_reason(self):
        """Gets the subsume_reason of this SiteResponse.  # noqa: E501


        :return: The subsume_reason of this SiteResponse.  # noqa: E501
        :rtype: str
        """
        return self._subsume_reason

    @subsume_reason.setter
    def subsume_reason(self, subsume_reason):
        """Sets the subsume_reason of this SiteResponse.


        :param subsume_reason: The subsume_reason of this SiteResponse.  # noqa: E501
        :type: str
        """

        self._subsume_reason = subsume_reason

    @property
    def response_to_remedial_works(self):
        """Gets the response_to_remedial_works of this SiteResponse.  # noqa: E501


        :return: The response_to_remedial_works of this SiteResponse.  # noqa: E501
        :rtype: bool
        """
        return self._response_to_remedial_works

    @response_to_remedial_works.setter
    def response_to_remedial_works(self, response_to_remedial_works):
        """Sets the response_to_remedial_works of this SiteResponse.


        :param response_to_remedial_works: The response_to_remedial_works of this SiteResponse.  # noqa: E501
        :type: bool
        """

        self._response_to_remedial_works = response_to_remedial_works

    @property
    def base_courses_affected(self):
        """Gets the base_courses_affected of this SiteResponse.  # noqa: E501


        :return: The base_courses_affected of this SiteResponse.  # noqa: E501
        :rtype: bool
        """
        return self._base_courses_affected

    @base_courses_affected.setter
    def base_courses_affected(self, base_courses_affected):
        """Sets the base_courses_affected of this SiteResponse.


        :param base_courses_affected: The base_courses_affected of this SiteResponse.  # noqa: E501
        :type: bool
        """

        self._base_courses_affected = base_courses_affected

    @property
    def location_types(self):
        """Gets the location_types of this SiteResponse.  # noqa: E501


        :return: The location_types of this SiteResponse.  # noqa: E501
        :rtype: list[LocationTypeResponse]
        """
        return self._location_types

    @location_types.setter
    def location_types(self, location_types):
        """Sets the location_types of this SiteResponse.


        :param location_types: The location_types of this SiteResponse.  # noqa: E501
        :type: list[LocationTypeResponse]
        """
        if location_types is None:
            raise ValueError("Invalid value for `location_types`, must not be `None`")  # noqa: E501

        self._location_types = location_types

    @property
    def location_types_string(self):
        """Gets the location_types_string of this SiteResponse.  # noqa: E501


        :return: The location_types_string of this SiteResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._location_types_string

    @location_types_string.setter
    def location_types_string(self, location_types_string):
        """Sets the location_types_string of this SiteResponse.


        :param location_types_string: The location_types_string of this SiteResponse.  # noqa: E501
        :type: list[str]
        """
        if location_types_string is None:
            raise ValueError("Invalid value for `location_types_string`, must not be `None`")  # noqa: E501

        self._location_types_string = location_types_string

    @property
    def site_coordinates(self):
        """Gets the site_coordinates of this SiteResponse.  # noqa: E501


        :return: The site_coordinates of this SiteResponse.  # noqa: E501
        :rtype: object
        """
        return self._site_coordinates

    @site_coordinates.setter
    def site_coordinates(self, site_coordinates):
        """Sets the site_coordinates of this SiteResponse.


        :param site_coordinates: The site_coordinates of this SiteResponse.  # noqa: E501
        :type: object
        """
        if site_coordinates is None:
            raise ValueError("Invalid value for `site_coordinates`, must not be `None`")  # noqa: E501

        self._site_coordinates = site_coordinates

    @property
    def reinstatements(self):
        """Gets the reinstatements of this SiteResponse.  # noqa: E501


        :return: The reinstatements of this SiteResponse.  # noqa: E501
        :rtype: list[ReinstatementResponse]
        """
        return self._reinstatements

    @reinstatements.setter
    def reinstatements(self, reinstatements):
        """Sets the reinstatements of this SiteResponse.


        :param reinstatements: The reinstatements of this SiteResponse.  # noqa: E501
        :type: list[ReinstatementResponse]
        """
        if reinstatements is None:
            raise ValueError("Invalid value for `reinstatements`, must not be `None`")  # noqa: E501

        self._reinstatements = reinstatements

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SiteResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SiteResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
