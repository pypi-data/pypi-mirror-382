# coding: utf-8

"""
    Street Manager Reporting API

    See API specification Resource Guide > Reporting API for more information on paging and endpoints NOTE: Swagger Editor/UI does not display all description text for enumerations and child elements, check swagger.json for full description text  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InspectionSummaryResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'inspection_date': 'datetime',
        'work_reference_number': 'str',
        'location_description': 'str',
        'street': 'str',
        'town': 'str',
        'area': 'str',
        'inspection_reference_number': 'str',
        'inspection_type': 'InspectionTypeResponse',
        'inspection_type_string': 'str',
        'inspection_category': 'AllOfInspectionSummaryResponseInspectionCategory',
        'inspection_category_string': 'str',
        'inspection_outcome': 'AllOfInspectionSummaryResponseInspectionOutcome',
        'inspection_outcome_string': 'str',
        'inspector_name': 'str',
        'highway_authority': 'str',
        'promoter_organisation': 'str',
        'made_safe_by_ha': 'bool',
        'date_created': 'datetime',
        'inspection_status': 'InspectionStatusResponse',
        'inspection_status_string': 'str',
        'date_modified': 'datetime',
        'promoter_response_status': 'AllOfInspectionSummaryResponsePromoterResponseStatus',
        'promoter_response_status_string': 'str',
        'ha_response_status': 'AllOfInspectionSummaryResponseHaResponseStatus',
        'ha_response_status_string': 'str',
        'auto_acceptance_due_date': 'datetime',
        'is_auto_accepted': 'bool'
    }

    attribute_map = {
        'inspection_date': 'inspection_date',
        'work_reference_number': 'work_reference_number',
        'location_description': 'location_description',
        'street': 'street',
        'town': 'town',
        'area': 'area',
        'inspection_reference_number': 'inspection_reference_number',
        'inspection_type': 'inspection_type',
        'inspection_type_string': 'inspection_type_string',
        'inspection_category': 'inspection_category',
        'inspection_category_string': 'inspection_category_string',
        'inspection_outcome': 'inspection_outcome',
        'inspection_outcome_string': 'inspection_outcome_string',
        'inspector_name': 'inspector_name',
        'highway_authority': 'highway_authority',
        'promoter_organisation': 'promoter_organisation',
        'made_safe_by_ha': 'made_safe_by_ha',
        'date_created': 'date_created',
        'inspection_status': 'inspection_status',
        'inspection_status_string': 'inspection_status_string',
        'date_modified': 'date_modified',
        'promoter_response_status': 'promoter_response_status',
        'promoter_response_status_string': 'promoter_response_status_string',
        'ha_response_status': 'ha_response_status',
        'ha_response_status_string': 'ha_response_status_string',
        'auto_acceptance_due_date': 'auto_acceptance_due_date',
        'is_auto_accepted': 'is_auto_accepted'
    }

    def __init__(self, inspection_date=None, work_reference_number=None, location_description=None, street=None, town=None, area=None, inspection_reference_number=None, inspection_type=None, inspection_type_string=None, inspection_category=None, inspection_category_string=None, inspection_outcome=None, inspection_outcome_string=None, inspector_name=None, highway_authority=None, promoter_organisation=None, made_safe_by_ha=None, date_created=None, inspection_status=None, inspection_status_string=None, date_modified=None, promoter_response_status=None, promoter_response_status_string=None, ha_response_status=None, ha_response_status_string=None, auto_acceptance_due_date=None, is_auto_accepted=None):  # noqa: E501
        """InspectionSummaryResponse - a model defined in Swagger"""  # noqa: E501
        self._inspection_date = None
        self._work_reference_number = None
        self._location_description = None
        self._street = None
        self._town = None
        self._area = None
        self._inspection_reference_number = None
        self._inspection_type = None
        self._inspection_type_string = None
        self._inspection_category = None
        self._inspection_category_string = None
        self._inspection_outcome = None
        self._inspection_outcome_string = None
        self._inspector_name = None
        self._highway_authority = None
        self._promoter_organisation = None
        self._made_safe_by_ha = None
        self._date_created = None
        self._inspection_status = None
        self._inspection_status_string = None
        self._date_modified = None
        self._promoter_response_status = None
        self._promoter_response_status_string = None
        self._ha_response_status = None
        self._ha_response_status_string = None
        self._auto_acceptance_due_date = None
        self._is_auto_accepted = None
        self.discriminator = None
        self.inspection_date = inspection_date
        self.work_reference_number = work_reference_number
        self.location_description = location_description
        self.street = street
        self.town = town
        self.area = area
        if inspection_reference_number is not None:
            self.inspection_reference_number = inspection_reference_number
        self.inspection_type = inspection_type
        self.inspection_type_string = inspection_type_string
        if inspection_category is not None:
            self.inspection_category = inspection_category
        if inspection_category_string is not None:
            self.inspection_category_string = inspection_category_string
        if inspection_outcome is not None:
            self.inspection_outcome = inspection_outcome
        if inspection_outcome_string is not None:
            self.inspection_outcome_string = inspection_outcome_string
        if inspector_name is not None:
            self.inspector_name = inspector_name
        self.highway_authority = highway_authority
        self.promoter_organisation = promoter_organisation
        if made_safe_by_ha is not None:
            self.made_safe_by_ha = made_safe_by_ha
        self.date_created = date_created
        self.inspection_status = inspection_status
        self.inspection_status_string = inspection_status_string
        self.date_modified = date_modified
        if promoter_response_status is not None:
            self.promoter_response_status = promoter_response_status
        if promoter_response_status_string is not None:
            self.promoter_response_status_string = promoter_response_status_string
        if ha_response_status is not None:
            self.ha_response_status = ha_response_status
        if ha_response_status_string is not None:
            self.ha_response_status_string = ha_response_status_string
        if auto_acceptance_due_date is not None:
            self.auto_acceptance_due_date = auto_acceptance_due_date
        if is_auto_accepted is not None:
            self.is_auto_accepted = is_auto_accepted

    @property
    def inspection_date(self):
        """Gets the inspection_date of this InspectionSummaryResponse.  # noqa: E501


        :return: The inspection_date of this InspectionSummaryResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._inspection_date

    @inspection_date.setter
    def inspection_date(self, inspection_date):
        """Sets the inspection_date of this InspectionSummaryResponse.


        :param inspection_date: The inspection_date of this InspectionSummaryResponse.  # noqa: E501
        :type: datetime
        """
        if inspection_date is None:
            raise ValueError("Invalid value for `inspection_date`, must not be `None`")  # noqa: E501

        self._inspection_date = inspection_date

    @property
    def work_reference_number(self):
        """Gets the work_reference_number of this InspectionSummaryResponse.  # noqa: E501


        :return: The work_reference_number of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._work_reference_number

    @work_reference_number.setter
    def work_reference_number(self, work_reference_number):
        """Sets the work_reference_number of this InspectionSummaryResponse.


        :param work_reference_number: The work_reference_number of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """
        if work_reference_number is None:
            raise ValueError("Invalid value for `work_reference_number`, must not be `None`")  # noqa: E501

        self._work_reference_number = work_reference_number

    @property
    def location_description(self):
        """Gets the location_description of this InspectionSummaryResponse.  # noqa: E501


        :return: The location_description of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._location_description

    @location_description.setter
    def location_description(self, location_description):
        """Sets the location_description of this InspectionSummaryResponse.


        :param location_description: The location_description of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """
        if location_description is None:
            raise ValueError("Invalid value for `location_description`, must not be `None`")  # noqa: E501

        self._location_description = location_description

    @property
    def street(self):
        """Gets the street of this InspectionSummaryResponse.  # noqa: E501


        :return: The street of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street):
        """Sets the street of this InspectionSummaryResponse.


        :param street: The street of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """
        if street is None:
            raise ValueError("Invalid value for `street`, must not be `None`")  # noqa: E501

        self._street = street

    @property
    def town(self):
        """Gets the town of this InspectionSummaryResponse.  # noqa: E501


        :return: The town of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._town

    @town.setter
    def town(self, town):
        """Sets the town of this InspectionSummaryResponse.


        :param town: The town of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """
        if town is None:
            raise ValueError("Invalid value for `town`, must not be `None`")  # noqa: E501

        self._town = town

    @property
    def area(self):
        """Gets the area of this InspectionSummaryResponse.  # noqa: E501


        :return: The area of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._area

    @area.setter
    def area(self, area):
        """Sets the area of this InspectionSummaryResponse.


        :param area: The area of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """
        if area is None:
            raise ValueError("Invalid value for `area`, must not be `None`")  # noqa: E501

        self._area = area

    @property
    def inspection_reference_number(self):
        """Gets the inspection_reference_number of this InspectionSummaryResponse.  # noqa: E501


        :return: The inspection_reference_number of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._inspection_reference_number

    @inspection_reference_number.setter
    def inspection_reference_number(self, inspection_reference_number):
        """Sets the inspection_reference_number of this InspectionSummaryResponse.


        :param inspection_reference_number: The inspection_reference_number of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """

        self._inspection_reference_number = inspection_reference_number

    @property
    def inspection_type(self):
        """Gets the inspection_type of this InspectionSummaryResponse.  # noqa: E501


        :return: The inspection_type of this InspectionSummaryResponse.  # noqa: E501
        :rtype: InspectionTypeResponse
        """
        return self._inspection_type

    @inspection_type.setter
    def inspection_type(self, inspection_type):
        """Sets the inspection_type of this InspectionSummaryResponse.


        :param inspection_type: The inspection_type of this InspectionSummaryResponse.  # noqa: E501
        :type: InspectionTypeResponse
        """
        if inspection_type is None:
            raise ValueError("Invalid value for `inspection_type`, must not be `None`")  # noqa: E501

        self._inspection_type = inspection_type

    @property
    def inspection_type_string(self):
        """Gets the inspection_type_string of this InspectionSummaryResponse.  # noqa: E501


        :return: The inspection_type_string of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._inspection_type_string

    @inspection_type_string.setter
    def inspection_type_string(self, inspection_type_string):
        """Sets the inspection_type_string of this InspectionSummaryResponse.


        :param inspection_type_string: The inspection_type_string of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """
        if inspection_type_string is None:
            raise ValueError("Invalid value for `inspection_type_string`, must not be `None`")  # noqa: E501

        self._inspection_type_string = inspection_type_string

    @property
    def inspection_category(self):
        """Gets the inspection_category of this InspectionSummaryResponse.  # noqa: E501


        :return: The inspection_category of this InspectionSummaryResponse.  # noqa: E501
        :rtype: AllOfInspectionSummaryResponseInspectionCategory
        """
        return self._inspection_category

    @inspection_category.setter
    def inspection_category(self, inspection_category):
        """Sets the inspection_category of this InspectionSummaryResponse.


        :param inspection_category: The inspection_category of this InspectionSummaryResponse.  # noqa: E501
        :type: AllOfInspectionSummaryResponseInspectionCategory
        """

        self._inspection_category = inspection_category

    @property
    def inspection_category_string(self):
        """Gets the inspection_category_string of this InspectionSummaryResponse.  # noqa: E501


        :return: The inspection_category_string of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._inspection_category_string

    @inspection_category_string.setter
    def inspection_category_string(self, inspection_category_string):
        """Sets the inspection_category_string of this InspectionSummaryResponse.


        :param inspection_category_string: The inspection_category_string of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """

        self._inspection_category_string = inspection_category_string

    @property
    def inspection_outcome(self):
        """Gets the inspection_outcome of this InspectionSummaryResponse.  # noqa: E501


        :return: The inspection_outcome of this InspectionSummaryResponse.  # noqa: E501
        :rtype: AllOfInspectionSummaryResponseInspectionOutcome
        """
        return self._inspection_outcome

    @inspection_outcome.setter
    def inspection_outcome(self, inspection_outcome):
        """Sets the inspection_outcome of this InspectionSummaryResponse.


        :param inspection_outcome: The inspection_outcome of this InspectionSummaryResponse.  # noqa: E501
        :type: AllOfInspectionSummaryResponseInspectionOutcome
        """

        self._inspection_outcome = inspection_outcome

    @property
    def inspection_outcome_string(self):
        """Gets the inspection_outcome_string of this InspectionSummaryResponse.  # noqa: E501


        :return: The inspection_outcome_string of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._inspection_outcome_string

    @inspection_outcome_string.setter
    def inspection_outcome_string(self, inspection_outcome_string):
        """Sets the inspection_outcome_string of this InspectionSummaryResponse.


        :param inspection_outcome_string: The inspection_outcome_string of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """

        self._inspection_outcome_string = inspection_outcome_string

    @property
    def inspector_name(self):
        """Gets the inspector_name of this InspectionSummaryResponse.  # noqa: E501


        :return: The inspector_name of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._inspector_name

    @inspector_name.setter
    def inspector_name(self, inspector_name):
        """Sets the inspector_name of this InspectionSummaryResponse.


        :param inspector_name: The inspector_name of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """

        self._inspector_name = inspector_name

    @property
    def highway_authority(self):
        """Gets the highway_authority of this InspectionSummaryResponse.  # noqa: E501


        :return: The highway_authority of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._highway_authority

    @highway_authority.setter
    def highway_authority(self, highway_authority):
        """Sets the highway_authority of this InspectionSummaryResponse.


        :param highway_authority: The highway_authority of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """
        if highway_authority is None:
            raise ValueError("Invalid value for `highway_authority`, must not be `None`")  # noqa: E501

        self._highway_authority = highway_authority

    @property
    def promoter_organisation(self):
        """Gets the promoter_organisation of this InspectionSummaryResponse.  # noqa: E501


        :return: The promoter_organisation of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._promoter_organisation

    @promoter_organisation.setter
    def promoter_organisation(self, promoter_organisation):
        """Sets the promoter_organisation of this InspectionSummaryResponse.


        :param promoter_organisation: The promoter_organisation of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """
        if promoter_organisation is None:
            raise ValueError("Invalid value for `promoter_organisation`, must not be `None`")  # noqa: E501

        self._promoter_organisation = promoter_organisation

    @property
    def made_safe_by_ha(self):
        """Gets the made_safe_by_ha of this InspectionSummaryResponse.  # noqa: E501


        :return: The made_safe_by_ha of this InspectionSummaryResponse.  # noqa: E501
        :rtype: bool
        """
        return self._made_safe_by_ha

    @made_safe_by_ha.setter
    def made_safe_by_ha(self, made_safe_by_ha):
        """Sets the made_safe_by_ha of this InspectionSummaryResponse.


        :param made_safe_by_ha: The made_safe_by_ha of this InspectionSummaryResponse.  # noqa: E501
        :type: bool
        """

        self._made_safe_by_ha = made_safe_by_ha

    @property
    def date_created(self):
        """Gets the date_created of this InspectionSummaryResponse.  # noqa: E501


        :return: The date_created of this InspectionSummaryResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this InspectionSummaryResponse.


        :param date_created: The date_created of this InspectionSummaryResponse.  # noqa: E501
        :type: datetime
        """
        if date_created is None:
            raise ValueError("Invalid value for `date_created`, must not be `None`")  # noqa: E501

        self._date_created = date_created

    @property
    def inspection_status(self):
        """Gets the inspection_status of this InspectionSummaryResponse.  # noqa: E501


        :return: The inspection_status of this InspectionSummaryResponse.  # noqa: E501
        :rtype: InspectionStatusResponse
        """
        return self._inspection_status

    @inspection_status.setter
    def inspection_status(self, inspection_status):
        """Sets the inspection_status of this InspectionSummaryResponse.


        :param inspection_status: The inspection_status of this InspectionSummaryResponse.  # noqa: E501
        :type: InspectionStatusResponse
        """
        if inspection_status is None:
            raise ValueError("Invalid value for `inspection_status`, must not be `None`")  # noqa: E501

        self._inspection_status = inspection_status

    @property
    def inspection_status_string(self):
        """Gets the inspection_status_string of this InspectionSummaryResponse.  # noqa: E501


        :return: The inspection_status_string of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._inspection_status_string

    @inspection_status_string.setter
    def inspection_status_string(self, inspection_status_string):
        """Sets the inspection_status_string of this InspectionSummaryResponse.


        :param inspection_status_string: The inspection_status_string of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """
        if inspection_status_string is None:
            raise ValueError("Invalid value for `inspection_status_string`, must not be `None`")  # noqa: E501

        self._inspection_status_string = inspection_status_string

    @property
    def date_modified(self):
        """Gets the date_modified of this InspectionSummaryResponse.  # noqa: E501


        :return: The date_modified of this InspectionSummaryResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this InspectionSummaryResponse.


        :param date_modified: The date_modified of this InspectionSummaryResponse.  # noqa: E501
        :type: datetime
        """
        if date_modified is None:
            raise ValueError("Invalid value for `date_modified`, must not be `None`")  # noqa: E501

        self._date_modified = date_modified

    @property
    def promoter_response_status(self):
        """Gets the promoter_response_status of this InspectionSummaryResponse.  # noqa: E501


        :return: The promoter_response_status of this InspectionSummaryResponse.  # noqa: E501
        :rtype: AllOfInspectionSummaryResponsePromoterResponseStatus
        """
        return self._promoter_response_status

    @promoter_response_status.setter
    def promoter_response_status(self, promoter_response_status):
        """Sets the promoter_response_status of this InspectionSummaryResponse.


        :param promoter_response_status: The promoter_response_status of this InspectionSummaryResponse.  # noqa: E501
        :type: AllOfInspectionSummaryResponsePromoterResponseStatus
        """

        self._promoter_response_status = promoter_response_status

    @property
    def promoter_response_status_string(self):
        """Gets the promoter_response_status_string of this InspectionSummaryResponse.  # noqa: E501


        :return: The promoter_response_status_string of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._promoter_response_status_string

    @promoter_response_status_string.setter
    def promoter_response_status_string(self, promoter_response_status_string):
        """Sets the promoter_response_status_string of this InspectionSummaryResponse.


        :param promoter_response_status_string: The promoter_response_status_string of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """

        self._promoter_response_status_string = promoter_response_status_string

    @property
    def ha_response_status(self):
        """Gets the ha_response_status of this InspectionSummaryResponse.  # noqa: E501


        :return: The ha_response_status of this InspectionSummaryResponse.  # noqa: E501
        :rtype: AllOfInspectionSummaryResponseHaResponseStatus
        """
        return self._ha_response_status

    @ha_response_status.setter
    def ha_response_status(self, ha_response_status):
        """Sets the ha_response_status of this InspectionSummaryResponse.


        :param ha_response_status: The ha_response_status of this InspectionSummaryResponse.  # noqa: E501
        :type: AllOfInspectionSummaryResponseHaResponseStatus
        """

        self._ha_response_status = ha_response_status

    @property
    def ha_response_status_string(self):
        """Gets the ha_response_status_string of this InspectionSummaryResponse.  # noqa: E501


        :return: The ha_response_status_string of this InspectionSummaryResponse.  # noqa: E501
        :rtype: str
        """
        return self._ha_response_status_string

    @ha_response_status_string.setter
    def ha_response_status_string(self, ha_response_status_string):
        """Sets the ha_response_status_string of this InspectionSummaryResponse.


        :param ha_response_status_string: The ha_response_status_string of this InspectionSummaryResponse.  # noqa: E501
        :type: str
        """

        self._ha_response_status_string = ha_response_status_string

    @property
    def auto_acceptance_due_date(self):
        """Gets the auto_acceptance_due_date of this InspectionSummaryResponse.  # noqa: E501


        :return: The auto_acceptance_due_date of this InspectionSummaryResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._auto_acceptance_due_date

    @auto_acceptance_due_date.setter
    def auto_acceptance_due_date(self, auto_acceptance_due_date):
        """Sets the auto_acceptance_due_date of this InspectionSummaryResponse.


        :param auto_acceptance_due_date: The auto_acceptance_due_date of this InspectionSummaryResponse.  # noqa: E501
        :type: datetime
        """

        self._auto_acceptance_due_date = auto_acceptance_due_date

    @property
    def is_auto_accepted(self):
        """Gets the is_auto_accepted of this InspectionSummaryResponse.  # noqa: E501


        :return: The is_auto_accepted of this InspectionSummaryResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_auto_accepted

    @is_auto_accepted.setter
    def is_auto_accepted(self, is_auto_accepted):
        """Sets the is_auto_accepted of this InspectionSummaryResponse.


        :param is_auto_accepted: The is_auto_accepted of this InspectionSummaryResponse.  # noqa: E501
        :type: bool
        """

        self._is_auto_accepted = is_auto_accepted

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InspectionSummaryResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InspectionSummaryResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
