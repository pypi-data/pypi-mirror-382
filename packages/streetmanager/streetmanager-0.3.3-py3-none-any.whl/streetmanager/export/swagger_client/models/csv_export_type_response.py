# coding: utf-8

"""
    Street Manager Data Export API

    See API specification Resource Guide > Data Export API for more information on endpoints NOTE: Swagger Editor/UI does not display all description text for enumerations and child elements, check swagger.json for full description text  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CSVExportTypeResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    FEE = "FEE"
    FORWARD_PLAN = "FORWARD_PLAN"
    FPN = "FPN"
    INSPECTION = "INSPECTION"
    PERMIT = "PERMIT"
    REINSTATEMENT = "REINSTATEMENT"
    SECTION_81 = "SECTION_81"
    PERMIT_ALTERATION = "PERMIT_ALTERATION"
    ORGANISATION_DATA = "ORGANISATION_DATA"
    COMMENT = "COMMENT"
    REPORTING_INSPECTION_OUTCOMES = "REPORTING_INSPECTION_OUTCOMES"
    REPORTING_PERMITS_CREATED = "REPORTING_PERMITS_CREATED"
    REPORTING_PERMIT_OUTCOMES = "REPORTING_PERMIT_OUTCOMES"
    REPORTING_ALTERATIONS_CREATED = "REPORTING_ALTERATIONS_CREATED"
    REPORTING_ALTERATION_OUTCOMES = "REPORTING_ALTERATION_OUTCOMES"
    REPORTING_FPNS_CREATED = "REPORTING_FPNS_CREATED"
    REPORTING_PERMITS_DEEMED = "REPORTING_PERMITS_DEEMED"
    SECTION_58 = "SECTION_58"
    SECTION_74 = "SECTION_74"
    SAMPLE_INSPECTIONS_DUE = "SAMPLE_INSPECTIONS_DUE"
    EXPIRING_INTERIM_REINSTATEMENT = "EXPIRING_INTERIM_REINSTATEMENT"
    PBI_SAMPLE_INSPECTIONS_DUE = "PBI_SAMPLE_INSPECTIONS_DUE"
    REPORTING_PBI_PASS_FAIL_RATES = "REPORTING_PBI_PASS_FAIL_RATES"
    NUMBER_OF_INSPECTION_UNITS = "NUMBER_OF_INSPECTION_UNITS"
    PRIVATE_STREET_NOTICE = "PRIVATE_STREET_NOTICE"
    REINSPECTION = "REINSPECTION"
    NON_COMPLIANCE = "NON_COMPLIANCE"
    REINSTATEMENTS_DUE = "REINSTATEMENTS_DUE"
    MATERIAL_CLASSIFICATION = "MATERIAL_CLASSIFICATION"
    UPCOMING_ENUM = "upcoming_enum"
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
    }

    attribute_map = {
    }

    def __init__(self):  # noqa: E501
        """CSVExportTypeResponse - a model defined in Swagger"""  # noqa: E501
        self.discriminator = None

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CSVExportTypeResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CSVExportTypeResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
