[project]
name = "spyglass-ai"
version = "0.1.6"
description = "A client library for shipping telemetry to the Spyglass AI platform"
readme = "README.md"
authors = [
    { name = "Spyglass AI Team", email = "team@spyglass-ai.com" }
]
license = "MIT"
keywords = [
    "opentelemetry",
    "observability", 
    "tracing",
    "monitoring",
    "ai",
    "llm",
    "openai"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Logging",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

requires-python = ">=3.12"
dependencies = [
    "opentelemetry-api>=1.33.1",
    "opentelemetry-exporter-otlp-proto-http>=1.33.1",
    "opentelemetry-sdk>=1.33.1",
]

[project.urls]
"Homepage" = "https://spyglass-ai.com"
"Repository" = "https://github.com/spyglass-ai/spyglass-sdk"
"Bug Reports" = "https://github.com/spyglass-ai/spyglass-sdk/issues"
"Source Code" = "https://github.com/spyglass-ai/spyglass-sdk"
"Changelog" = "https://github.com/spyglass-ai/spyglass-sdk/blob/main/CHANGELOG.md"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-env>=1.1.0",
    "pytest-asyncio>=0.21.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "pytest-mock>=3.10.0",
    "pytest-env>=1.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
]
langchain-aws = [
    "langchain-aws>=0.1.0",
    "langchain-core>=0.1.0",
    "python-dotenv>=1.1.1",
]
mcp = [
    "mcp>=1.0.0",
    "langchain-mcp-adapters>=0.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/spyglass_ai"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "asyncio: marks tests as async (deselect with '-m \"not asyncio\"')",
]
asyncio_default_fixture_loop_scope = "function"
env = [
    "SPYGLASS_DEPLOYMENT_ID=test-deployment",
    "SPYGLASS_API_KEY=test-api-key",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.black]
line-length = 100
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 100

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]

[dependency-groups]
dev = [
    "yamllint>=1.37.1",
]
test = [
    "pytest-env>=1.1.5",
]

