{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "coordinates": {
      "type": "object",
      "additionalProperties": false,
      "required": ["x", "y", "z"],
      "properties": {
        "x": { "type": "number" },
        "y": { "type": "number" },
        "z": { "type": "number" }
      }
    },
    "affineTransform": {
      "description": "A 4x4 row-major matrix describing an affine transform to apply to the labwareOffset and calibrationPoint coordinates of the module (in certain circumstances, e.g. per slot)",
      "type": "array",
      "minItems": 4,
      "maxItems": 4,
      "items": {
        "type": "array",
        "minItems": 4,
        "maxItems": 4,
        "items": {
          "type": "number"
        }
      }
    },
    "svgsonNode": {
      "type": "object",
      "description": "An svgson node that corresponds to a single svg tag",
      "properties": {
        "name": {
          "type": "string",
          "description": "Element name, like svg, circle, line…"
        },
        "type": {
          "type": "string",
          "description": "Element type like element, text…"
        },
        "value": {
          "type": "string",
          "description": "Element value, used in text nodes."
        },
        "children": {
          "type": "array",
          "description": "List of element children",
          "items": { "$ref": "#" }
        },
        "attributes": {
          "type": "object",
          "description": "Attributes for the element"
        }
      }
    },
    "vector3D": {
      "type": "object",
      "additionalProperties": false,
      "required": ["x", "y", "z"],
      "properties": {
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "z": {
          "type": "number"
        }
      }
    },
    "vector2D": {
      "type": "object",
      "additionalProperties": false,
      "required": ["x", "y"],
      "properties": {
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      }
    },
    "axisAlignedBoundingBox3D": {
      "type": "object",
      "required": ["backLeftBottom", "frontRightTop"],
      "additionalProperties": false,
      "properties": {
        "backLeftBottom": {
          "description": "(-x, +y, -z) relative to the labware origin.",
          "$ref": "#/definitions/vector3D"
        },
        "frontRightTop": {
          "description": "(+x, -y, +z) relative to the labware origin.",
          "$ref": "#/definitions/vector3D"
        }
      }
    }
  },
  "description": "Module specification",
  "type": "object",
  "required": [
    "$otSharedSchema",
    "moduleType",
    "model",
    "labwareOffset",
    "cornerOffsetFromSlot",
    "features",
    "dimensions",
    "calibrationPoint",
    "displayName",
    "quirks",
    "slotTransforms",
    "compatibleWith",
    "incompatibleWithDecks"
  ],
  "additionalProperties": false,
  "properties": {
    "$otSharedSchema": {
      "type": "string",
      "description": "The path to a valid Opentrons shared schema relative to the shared-data directory, without its extension. For instance, #/module/schemas/3 is a reference to this schema."
    },
    "moduleType": {
      "enum": [
        "temperatureModuleType",
        "magneticModuleType",
        "thermocyclerModuleType",
        "heaterShakerModuleType",
        "magneticBlockType",
        "absorbanceReaderType",
        "flexStackerModuleType"
      ],
      "type": "string"
    },
    "model": {
      "type": "string",
      "pattern": "^(temperatureModule|magneticModule|thermocyclerModule|heaterShakerModule|magneticBlock|absorbanceReader|flexStackerModule)V[0-9]+$"
    },
    "labwareOffset": {
      "$ref": "#/definitions/coordinates",
      "description": "The offset from the left-front-bottom corner of the slot holding this module, to the left-front-bottom corner of the labware interface atop this module."
    },
    "extents": {
      "description": "The outer dimensions of the addressable area. Includes offsets from `cornerOffsetFromSlot`.",
      "type": "object",
      "required": ["total"],
      "additionalProperties": false,
      "properties": {
        "total": {
          "description": "The all-encompassing outer dimensions of the labware.",
          "$ref": "#/definitions/axisAlignedBoundingBox3D"
        }
      }
    },
    "features": {
      "type": "object",
      "description": "Locating features when this module is a part of a stackup.",
      "required": [],
      "properties": {
        "slotFootprintAsChild": {
          "description": "The 3D plane of the module that makes physical contact with a parent entity. Constrained by the dimensions of a slot.",
          "type": "object",
          "required": ["backLeft", "frontRight", "z"],
          "properties": {
            "backLeft": {
              "description": "(-x, +y) relative to the labware origin.",
              "$ref": "#/definitions/vector2D"
            },
            "frontRight": {
              "description": "(+x, -y) relative to the labware origin.",
              "$ref": "#/definitions/vector2D"
            },
            "z": {
              "description": "Always zero by convention. Z-coordinate of the footprint plane.",
              "type": "number"
            },
            "springDirectionalForce": {
              "description": "Applicable when the module contains a spring that influences its position when placed on a parent deck item.",
              "type": "string",
              "enum": ["backLeftBottom"]
            }
          }
        }
      }
    },
    "dimensions": {
      "type": "object",
      "required": [
        "bareOverallHeight",
        "overLabwareHeight",
        "xDimension",
        "yDimension"
      ],
      "properties": {
        "bareOverallHeight": { "type": "number" },
        "overLabwareHeight": { "type": "number" },
        "lidHeight": { "type": "number" },
        "xDimension": { "type": "number" },
        "yDimension": { "type": "number" },
        "footprintXDimension": {
          "type": "number",
          "description": "The x dimension of the module's bottom-most plane."
        },
        "footprintYDimension": {
          "type": "number",
          "description": "The y dimension of the module's bottom-most plane."
        },
        "labwareInterfaceXDimension": {
          "type": "number",
          "description": "The x dimension of the module's interaction plane (where labware is placed)."
        },
        "labwareInterfaceYDimension": {
          "type": "number",
          "description": "The y dimension of the module's interaction plane (where labware is placed)."
        },
        "maxStackerFillHeight": { "type": "number" },
        "maxStackerRetrievableHeight": { "type": "number" }
      }
    },
    "cornerOffsetFromSlot": {
      "$ref": "#/definitions/coordinates",
      "description": "Position of left-front-bottom corner of entire module chassis to slot footprint origin (left-front-bottom)"
    },
    "calibrationPoint": {
      "$ref": "#/definitions/coordinates",
      "description": "A point on the module's interaction plane (where labware is placed) used for calibrating the module. Slated for future use (as of 2022-05-20)."
    },
    "config": {
      "type": "object",
      "description": "Module's hardware-defined constraints",
      "properties": {
        "minPlateTemperature": { "type": "number" },
        "maxPlateTemperature": { "type": "number" },
        "minShakeSpeed": { "type": "number" },
        "maxShakeSpeed": { "type": "number" },
        "maxEngageHeight": { "type": "number" },
        "minTemperature": { "type": "number" },
        "maxTemperature": { "type": "number" },
        "minBlockTemperature": { "type": "number" },
        "maxBlockTemperature": { "type": "number" },
        "minLidTemperature": { "type": "number" },
        "maxLidTemperature": { "type": "number" },
        "minBlockVolume": { "type": "number" },
        "maxBlockVolume": { "type": "number" }
      }
    },
    "gripperOffsets": {
      "type": "object",
      "description": "Offsets to be added when calculating the coordinates a gripper should go to when picking up or dropping a labware on this module.",
      "properties": {
        "default": {
          "type": "object",
          "properties": {
            "pickUpOffset": {
              "$ref": "#/definitions/coordinates",
              "description": "Offset added to calculate pick-up coordinates of a labware placed on this module."
            },
            "dropOffset": {
              "$ref": "#/definitions/coordinates",
              "description": "Offset added to calculate drop coordinates of a labware placed on this module."
            }
          },
          "required": ["pickUpOffset", "dropOffset"]
        }
      },
      "required": ["default"]
    },
    "displayName": { "type": "string" },
    "quirks": {
      "type": "array",
      "description": "List of quirks for a given module",
      "items": {
        "type": "string"
      }
    },
    "slotTransforms": {
      "type": "object",
      "description": "Per-deckmap sets of per-slot transforms, properties should be ids of decks such as \"ot2_standard\". Transforms for a deck not explicitly listed are the identity.",
      "patternProperties": {
        ".*": {
          "type": "object",
          "patternProperties:": {
            "^([1-9]|10|11)$": {
              "type": "object",
              "description": "Holds 2-D affine transforms that should be applied to top level keys plus the special property $image for applying to images images. If any top level key has no corresponding entry, it is an identity transform. If the transform applies to an entity specifying a 3D position, it should be applied only to the x and y.",
              "patternProperties": {
                ".*": {
                  "type": "object",
                  "description": "The keys identify transforms that apply to different sections of the module definition. Most will be top level keys of the module def (for instance, \"labwareOffset\") but there may also be additional meta keys for values that are not in the def",
                  "patternProperties": {
                    ".*": { "$ref": "#/definitions/affineTransform" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "compatibleWith": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "List of module models this model is compatible with (e.g. temperatureModuleV1)"
      }
    },
    "incompatibleWithDecks": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "A list of robot decks (by their definition name) not compatible with this module."
      }
    },
    "uniqueModuleData": {
      "type": "object",
      "description": "Unique data used by the module, (e.g. TOF sensor baseline data)"
    }
  }
}
