[build-system]
requires = ["hatchling>=1.25", "hatch-vcs>=0.4"]
build-backend = "hatchling.build"

[project]
name = "langchain-timbr"
dynamic = ["version"]
description = "LangChain & LangGraph extensions that parse LLM prompts into Timbr semantic SQL and execute them."
readme = "README.md"
requires-python = ">=3.10,<3.13"
license = {text = "MIT"}
authors = [{ name = "Timbr.ai", email = "contact@timbr.ai" }]
keywords = ["LLM", "LangChain", "LangGraph", "Timbr", "Semantic Layer", "Knowledge Graph", "SQL", "Agents"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Intended Audience :: Developers",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
  # Core dependencies that are the same across all Python versions
  "anthropic==0.42.0",
  "databricks-langchain==0.7.1",
  "databricks-sdk==0.64.0",
  "google-generativeai==0.8.4",
  "pydantic==2.10.4",
  "pytest==8.3.4",
  "tiktoken==0.8.0",
  "uvicorn==0.34.0",

  # Python 3.11+ versions (same for 3.11 and 3.12+)
  "azure-identity==1.25.0; python_version>='3.11'",
  "cryptography==45.0.7; python_version>='3.11'",
  "langchain==0.3.27; python_version>='3.11'",
  "langchain-anthropic==0.3.5; python_version>='3.11'",
  "langchain-community==0.3.30; python_version>='3.11'",
  "langchain-core==0.3.78; python_version>='3.11'",
  "langchain-google-genai==2.0.10; python_version>='3.11'",
  "langchain-google-vertexai==2.1.2; python_version>='3.11'",
  "langchain-openai==0.3.34; python_version>='3.11'",
  "langchain-tests==0.3.22; python_version>='3.11'",
  "langgraph==0.6.8; python_version>='3.11'",
  "numpy==1.26.4; python_version>='3.11'",
  "openai==2.1.0; python_version>='3.11'",
  "pyarrow==19.0.1; python_version>='3.11'",
  "pytimbr_api==2.0.0; python_version>='3.11'",
  "snowflake==1.8.0; python_version>='3.11'",
  "snowflake-snowpark-python==1.39.1; python_version>='3.11'",
  "transformers==4.57.0; python_version>='3.11'",

  # Python 3.10 specific versions
  "azure-identity>=1.16.1; python_version=='3.10'",
  "cryptography>=44.0.3; python_version=='3.10'",
  "langchain>=0.3.25; python_version=='3.10'",
  "langchain-anthropic>=0.3.1; python_version=='3.10'",
  "langchain_community>=0.3.20; python_version=='3.10'",
  "langchain-core>=0.3.58; python_version=='3.10'",
  "langchain-google-genai>=2.0.9; python_version=='3.10'",
  "langchain-google-vertexai>=2.0.28; python_version=='3.10'",
  "langchain-openai>=0.3.16; python_version=='3.10'",
  "langchain-tests>=0.3.20; python_version=='3.10'",
  "langgraph>=0.3.20; python_version=='3.10'",
  "numpy~=1.26.2; python_version=='3.10'",
  "openai>=1.77.0; python_version=='3.10'",
  "pyarrow>=19.0.1,<20.0.0; python_version=='3.10'",
  "pytimbr-api>=2.0.0; python_version=='3.10'",
  "snowflake>=1.8.0; python_version=='3.10'",
  "snowflake-snowpark-python>=1.39.1; python_version=='3.10'",
  "transformers>=4.53; python_version=='3.10'",
]

[project.optional-dependencies]
# LLM providers - using conditional versions
openai = [
  "openai==2.1.0; python_version>='3.11'", 
  "langchain-openai==0.3.34; python_version>='3.11'",
  "openai>=1.77.0; python_version=='3.10'", 
  "langchain-openai>=0.3.16; python_version=='3.10'"
]
azure_openai = [
  "azure-identity==1.25.0; python_version>='3.11'", 
  "openai==2.1.0; python_version>='3.11'", 
  "langchain-openai==0.3.34; python_version>='3.11'",
  "azure-identity>=1.16.1; python_version=='3.10'", 
  "openai>=1.77.0; python_version=='3.10'", 
  "langchain-openai>=0.3.16; python_version=='3.10'"
]
anthropic = [
  "anthropic==0.42.0", 
  "langchain-anthropic==0.3.5; python_version>='3.11'",
  "langchain-anthropic>=0.3.1; python_version=='3.10'"
]
google = [
  "langchain-google-genai==2.0.10; python_version>='3.11'", 
  "google-generativeai==0.8.4",
  "langchain-google-genai>=2.0.9; python_version=='3.10'"
]
vertex_ai = [
  "langchain-google-vertexai==2.1.2; python_version>='3.11'", 
  "google-generativeai==0.8.4",
  "langchain-google-vertexai>=2.0.28; python_version=='3.10'"
]
snowflake = [
  "snowflake==1.8.0; python_version>='3.11'", 
  "snowflake-snowpark-python==1.39.1; python_version>='3.11'",
  "snowflake>=1.8.0; python_version=='3.10'", 
  "snowflake-snowpark-python>=1.39.1; python_version=='3.10'"
]
databricks = [
  "databricks-langchain==0.7.1",
  "databricks-sdk==0.64.0"
]

# Development and testing
dev = [
  "pytest==8.3.4",
  "langchain-tests==0.3.22; python_version>='3.11'",
  "pyarrow==19.0.1; python_version>='3.11'",
  "uvicorn==0.34.0",
  "langchain-tests>=0.3.20; python_version=='3.10'",
  "pyarrow>=19.0.1,<20.0.0; python_version=='3.10'"
]

# All optional dependencies
all = [
  "anthropic==0.42.0",
  "google-generativeai==0.8.4",
  "pytest==8.3.4",
  "uvicorn==0.34.0",
  "databricks-langchain==0.7.1",
  "databricks-sdk==0.64.0",
  # Python 3.11+ versions
  "azure-identity==1.25.0; python_version>='3.11'",
  "langchain-anthropic==0.3.5; python_version>='3.11'",
  "openai==2.1.0; python_version>='3.11'",
  "langchain-openai==0.3.34; python_version>='3.11'",
  "langchain-google-genai==2.0.10; python_version>='3.11'",
  "langchain-google-vertexai==2.1.2; python_version>='3.11'",
  "snowflake==1.8.0; python_version>='3.11'",
  "snowflake-snowpark-python==1.39.1; python_version>='3.11'",
  "langchain-tests==0.3.22; python_version>='3.11'",
  "pyarrow==19.0.1; python_version>='3.11'",
  # Python 3.10 versions
  "azure-identity>=1.16.1; python_version=='3.10'",
  "langchain-anthropic>=0.3.1; python_version=='3.10'",
  "openai>=1.77.0; python_version=='3.10'",
  "langchain-openai>=0.3.16; python_version=='3.10'",
  "langchain-google-genai>=2.0.9; python_version=='3.10'",
  "langchain-google-vertexai>=2.0.28; python_version=='3.10'",
  "snowflake>=1.8.0; python_version=='3.10'",
  "snowflake-snowpark-python>=1.39.1; python_version=='3.10'",
  "langchain-tests>=0.3.20; python_version=='3.10'",
  "pyarrow>=19.0.1,<20.0.0; python_version=='3.10'"
]

[project.urls]
Homepage = "https://github.com/WPSemantix/langchain-timbr"
Documentation = "https://docs.timbr.ai/doc/docs/integration/langchain-sdk/"
Source = "https://github.com/WPSemantix/langchain-timbr"
Issues = "https://github.com/WPSemantix/langchain-timbr/issues"

[tool.hatch.version]
source = "vcs"                                          # version comes from git

[tool.hatch.build.hooks.vcs]
version-file = "src/langchain_timbr/_version.py"        # generate a version file

[tool.hatch.build.targets.wheel]
packages = ["src/langchain_timbr"]

