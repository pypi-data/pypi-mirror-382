from exploitfarm.models.enums import FlagStatus, AttackExecutionStatus
from pydantic import AwareDatetime
from exploitfarm.models.dbtypes import FlagID, AttackExecutionID, TeamID, ExploitID, ClientID, ExploitSourceID
from exploitfarm.models.dbtypes import AttackGroupID
from pydantic import BaseModel, Field, AliasChoices

class FlagDTOSmall(BaseModel):
    id: FlagID
    flag: str
    status: FlagStatus

class AttackExecutionDTO(BaseModel):
    id: AttackExecutionID
    start_time: AwareDatetime|None = None
    end_time: AwareDatetime|None = None
    status: AttackExecutionStatus
    output: str|None
    received_at: AwareDatetime
    target: TeamID|None = Field(None, validation_alias=AliasChoices('target_id'))
    exploit: ExploitID|None = Field(None, validation_alias=AliasChoices('exploit_id'))
    executed_by: ClientID|None = Field(None, validation_alias=AliasChoices('executed_by_id'))
    executed_by_group: AttackGroupID|None = Field(None, validation_alias=AliasChoices('executed_by_group_id'))
    flags: list[FlagDTOSmall]
    exploit_source: ExploitSourceID|None = Field(None, validation_alias=AliasChoices('exploit_source_id'))
    
class FlagDTOAttackDetails(BaseModel):
    id: AttackExecutionID
    start_time: AwareDatetime|None = None
    end_time: AwareDatetime|None = None
    status: AttackExecutionStatus
    received_at: AwareDatetime
    target: TeamID|None = Field(None, validation_alias=AliasChoices('target_id'))
    exploit: ExploitID|None = Field(None, validation_alias=AliasChoices('exploit_id'))
    executed_by: ClientID|None = Field(None, validation_alias=AliasChoices('executed_by_id'))
    executed_by_group: AttackGroupID|None = Field(None, validation_alias=AliasChoices('executed_by_group_id'))
    exploit_source: ExploitSourceID|None = Field(None, validation_alias=AliasChoices('exploit_source_id'))

class FlagDTO(BaseModel):
    
    id: FlagID
    flag: str
    status: FlagStatus
    last_submission_at: AwareDatetime|None
    status_text: str|None = None
    submit_attempts: int = 0
    attack: FlagDTOAttackDetails

class TickStats(BaseModel):
    tick: int
    start_time: AwareDatetime
    end_time: AwareDatetime
    globals: dict = {}
    exploits: dict = {}
    services: dict = {}
    teams: dict = {}
    clients: dict = {}

class FlagStats(BaseModel):
    ticks: list[TickStats] = []
    globals: dict = {}
