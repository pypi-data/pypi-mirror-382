from exploitfarm.utils.config import ClientConfig, ExploitConfig


def create_new_attack_group(
    group_name: str, exploit: ExploitConfig, use_latest: bool, config: ClientConfig
) -> dict | None:
    if not use_latest:
        commit = None
        commit_hash = exploit.hash()
        commit_history: list = config.reqs.exploit_source_log(exploit.uuid)
        for ele in commit_history:
            if ele["hash"] == commit_hash:
                commit = ele["id"]
                break
    else:
        commit = "latest"

    if not commit:
        return None
    else:
        return config.reqs.new_group(
            {
                "name": group_name,
                "exploit": exploit.uuid,
                "created_by": config.client_id,
                "commit": commit,
            }
        )
