class SignifyError(Exception):
    """Base class for all errors generated by Signify"""

    def __eq__(self, other: object) -> bool:
        return type(self) is type(other) and self.args == getattr(other, "args", False)


class ParseError(SignifyError):
    pass


class SignedMsiParseError(ParseError):
    pass


class SignedPEParseError(ParseError):
    pass


class SignerInfoParseError(ParseError):
    pass


class AuthenticodeParseError(ParseError):
    """Raised when any exception regarding parsing Authenticode structures occurs."""


class VerificationError(SignifyError):
    pass


class CertificateVerificationError(VerificationError):
    pass


class CertificateNotTrustedVerificationError(CertificateVerificationError):
    pass


class SignerInfoVerificationError(VerificationError):
    pass


class InvalidDigestError(VerificationError):
    pass


class CounterSignerError(VerificationError):
    pass


class AuthenticodeVerificationError(VerificationError):
    """Raised when any exception regarding verifying Authenticode structures occurs."""


class AuthenticodeFingerprintNotProvidedError(AuthenticodeVerificationError):
    pass


class AuthenticodeNotSignedError(AuthenticodeVerificationError):
    pass


class AuthenticodeInconsistentDigestAlgorithmError(AuthenticodeVerificationError):
    pass


class AuthenticodeInvalidDigestError(InvalidDigestError, AuthenticodeVerificationError):
    pass


class AuthenticodeInvalidAdditionalHashError(AuthenticodeVerificationError):
    pass


class AuthenticodeInvalidPageHashError(AuthenticodeInvalidAdditionalHashError):
    pass


class AuthenticodeCounterSignerError(CounterSignerError, AuthenticodeVerificationError):
    pass


class AuthenticodeInvalidExtendedDigestError(AuthenticodeInvalidAdditionalHashError):
    pass


class CertificateTrustListParseError(SignifyError):
    pass


class CTLCertificateVerificationError(CertificateVerificationError):
    pass
