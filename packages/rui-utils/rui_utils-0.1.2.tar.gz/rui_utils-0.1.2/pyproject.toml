[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "rui_utils"
packages = [{include = "rui_utils"}]
version = "0.1.2"
description = "Utils functions"
readme = "README.md"
license = "MIT"
authors = ["Chen-Rui Xia <xiachenrui@mail.cbi.pku.edu.cn>"]
keywords = ["ADDME"]
homepage = "https://github.com/xiachenrui/rui_utils"
documentation = "https://github.com/xiachenrui/rui_utils"
repository = "https://github.com/xiachenrui/rui_utils"
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Bio-Informatics"
]

[[tool.poetry.source]]
name = "nvidia"
url = "https://pypi.nvidia.com"
priority = "supplemental"


[tool.poetry.dependencies]
python = ">=3.10"
loguru = "*"
scanpy = "*"
pynvml = "*"
faiss-cpu = "*"
annoy = "*"
pyyaml = "*"
ipython = "*"
omegaconf = "*"

pytest = {version = "*", optional = true}
pytest-sugar = {version = "*", optional = true}
pytest-cov = {version = "*", optional = true}
pytest-xdist = {version = "*", optional = true}
pytest-order = {version = "*", optional = true}

torch = {version = "*", optional = true}
torchvision = {version = "*", optional = true}
torchaudio = {version = "*", optional = true}
pytorch-lightning = {version = "*", optional = true}
tensorboard = {version = "*", optional = true}
einops = {version = "*", optional = true}

cudf-cu12 = {version = "25.08.*", optional = true, source = "nvidia"}
cuml-cu12 = {version = "25.08.*", optional = true, source = "nvidia"}
cugraph-cu12 = {version = "25.08.*", optional = true, source = "nvidia"}
rapids_singlecell = {version = "*", optional = true}

[tool.poetry.extras]
test = ["pytest", "pytest-sugar", "pytest-cov", "pytest-xdist", "pytest-order"]
torch = ["torch", "torchvision", "torchaudio", "pytorch-lightning", "tensorboard", "einops"]
rapids = ["cudf-cu12", "cuml-cu12", "cugraph-cu12", "rapids_singlecell"]

[tool.pyright]
include = ["rui_utils"]
exclude = ["**/conda", "**/__pycache__", "**/.**"]
ignore = ["resource/"]
typeCheckingMode = "off"
reportCallIssue = 'warning'


[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
source = ["rui_utils"]

[tool.coverage.report]
show_missing = true

[tool.jupytext]
formats = "ipynb,py:percent"

[tool.black]
line-length = 100

[tool.flake8]
max-line-length = 100

[tool.isort]
line_length = 100
