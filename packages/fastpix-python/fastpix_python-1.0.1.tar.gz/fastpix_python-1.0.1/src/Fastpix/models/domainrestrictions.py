"""Code generated by fastpix (https://fastpix.io). DO NOT EDIT."""

from __future__ import annotations
from .policyaction import PolicyAction
from ..types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DomainRestrictionsTypedDict(TypedDict):
    r"""Restrictions based on the originating domain of a request"""

    default_policy: NotRequired[PolicyAction]
    r"""Policy action type"""
    allow: NotRequired[List[str]]
    r"""A list of domain names or patterns that are explicitly allowed access"""
    deny: NotRequired[List[str]]
    r"""A list of domain names or patterns that are explicitly denied access"""


class DomainRestrictions(BaseModel):
    r"""Restrictions based on the originating domain of a request"""

    default_policy: Annotated[
        Optional[PolicyAction], pydantic.Field(alias="defaultPolicy")
    ] = None
    r"""Policy action type"""

    allow: Optional[List[str]] = None
    r"""A list of domain names or patterns that are explicitly allowed access"""

    deny: Optional[List[str]] = None
    r"""A list of domain names or patterns that are explicitly denied access"""
