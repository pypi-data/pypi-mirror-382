"""Code generated by fastpix (https://fastpix.io). DO NOT EDIT."""

from __future__ import annotations
from .media import Media, MediaTypedDict
from .pagination import Pagination, PaginationTypedDict
from .sortorder import SortOrder
from ..types import BaseModel
from ..utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ListLiveClipsRequestTypedDict(TypedDict):
    livestream_id: str
    r"""The stream Id is unique identifier assigned to the live stream."""
    limit: NotRequired[int]
    r"""Limit specifies the maximum number of items to display per page."""
    offset: NotRequired[int]
    r"""Offset determines the starting point for data retrieval within a paginated list."""
    order_by: NotRequired[SortOrder]
    r"""The values in the list can be arranged in two ways: DESC (Descending) or ASC (Ascending)."""


class ListLiveClipsRequest(BaseModel):
    livestream_id: Annotated[
        str,
        pydantic.Field(alias="livestreamId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The stream Id is unique identifier assigned to the live stream."""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 10
    r"""Limit specifies the maximum number of items to display per page."""

    offset: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 1
    r"""Offset determines the starting point for data retrieval within a paginated list."""

    order_by: Annotated[
        Optional[SortOrder],
        pydantic.Field(alias="orderBy"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "desc"
    r"""The values in the list can be arranged in two ways: DESC (Descending) or ASC (Ascending)."""


class ListLiveClipsResponseTypedDict(TypedDict):
    r"""List of video media"""

    success: NotRequired[bool]
    r"""Demonstrates whether the request is successful or not."""
    data: NotRequired[List[MediaTypedDict]]
    r"""Displays the result of the request."""
    pagination: NotRequired[PaginationTypedDict]
    r"""Pagination organizes content into pages for better readability and navigation."""


class ListLiveClipsResponse(BaseModel):
    r"""List of video media"""

    success: Optional[bool] = None
    r"""Demonstrates whether the request is successful or not."""

    data: Optional[List[Media]] = None
    r"""Displays the result of the request."""

    pagination: Optional[Pagination] = None
    r"""Pagination organizes content into pages for better readability and navigation."""
