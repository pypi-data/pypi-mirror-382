"""Code generated by fastpix (https://fastpix.io). DO NOT EDIT."""

from __future__ import annotations
from ..types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PlaybackIDSuccessResponseDataTypedDict(TypedDict):
    id: NotRequired[str]
    r"""Unique identifier for the playbackId"""
    access_policy: NotRequired[str]
    r"""Determines if access to the streamed content is kept private or available to all."""


class PlaybackIDSuccessResponseData(BaseModel):
    id: Optional[str] = None
    r"""Unique identifier for the playbackId"""

    access_policy: Annotated[Optional[str], pydantic.Field(alias="accessPolicy")] = None
    r"""Determines if access to the streamed content is kept private or available to all."""


class PlaybackIDSuccessResponseTypedDict(TypedDict):
    r"""Displays the result of the request."""

    success: NotRequired[bool]
    r"""It demonstrates whether the request is successful or not."""
    data: NotRequired[PlaybackIDSuccessResponseDataTypedDict]


class PlaybackIDSuccessResponse(BaseModel):
    r"""Displays the result of the request."""

    success: Optional[bool] = None
    r"""It demonstrates whether the request is successful or not."""

    data: Optional[PlaybackIDSuccessResponseData] = None
