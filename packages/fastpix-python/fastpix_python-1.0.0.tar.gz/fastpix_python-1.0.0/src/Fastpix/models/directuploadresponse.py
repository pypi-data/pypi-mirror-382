"""Code generated by fastpix (https://fastpix.io). DO NOT EDIT."""

from __future__ import annotations
from .playbackid import PlaybackID, PlaybackIDTypedDict
from ..types import BaseModel
import pydantic
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DirectUploadResponseTypedDict(TypedDict):
    playback_ids: NotRequired[List[PlaybackIDTypedDict]]
    metadata: NotRequired[Dict[str, str]]
    r"""You can search for videos with specific key value pairs using metadata, when you tag a video in \"key\" : \"value\" pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed."""


class DirectUploadResponse(BaseModel):
    playback_ids: Annotated[
        Optional[List[PlaybackID]], pydantic.Field(alias="playbackIds")
    ] = None

    metadata: Optional[Dict[str, str]] = None
    r"""You can search for videos with specific key value pairs using metadata, when you tag a video in \"key\" : \"value\" pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed."""
