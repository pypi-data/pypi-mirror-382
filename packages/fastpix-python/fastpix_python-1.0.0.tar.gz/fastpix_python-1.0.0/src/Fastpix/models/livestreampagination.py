"""Code generated by fastpix (https://fastpix.io). DO NOT EDIT."""

from __future__ import annotations
from ..types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class LiveStreamPaginationTypedDict(TypedDict):
    r"""Pagination organizes content into pages for better readability and navigation."""

    total_records: NotRequired[int]
    r"""It gives the total number of media assets that are accessible overall."""
    current_offset: NotRequired[int]
    r"""Determines the current point for data retrieval within a paginated list."""
    offset_count: NotRequired[int]
    r"""The offset count is expressed as total records by limit."""


class LiveStreamPagination(BaseModel):
    r"""Pagination organizes content into pages for better readability and navigation."""

    total_records: Annotated[Optional[int], pydantic.Field(alias="totalRecords")] = None
    r"""It gives the total number of media assets that are accessible overall."""

    current_offset: Annotated[Optional[int], pydantic.Field(alias="currentOffset")] = (
        None
    )
    r"""Determines the current point for data retrieval within a paginated list."""

    offset_count: Annotated[Optional[int], pydantic.Field(alias="offsetCount")] = None
    r"""The offset count is expressed as total records by limit."""
