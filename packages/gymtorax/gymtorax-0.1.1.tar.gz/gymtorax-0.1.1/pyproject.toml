[tool.poetry]
name = "gymtorax"
version = "0.1.1"
description = "A Gymnasium environment for Torax simulations"
authors = [
    "Antoine Mouchamps <antoine.mouchamps@gmail.com>",
    "Arthur Malherbe <arthur.m222004@gmail.com>"
]
readme = "README.md"
packages = [{include = "gymtorax"}]

[tool.poetry.dependencies]
python = "^3.10"
gymnasium = "^1.0.0"
torax = "^1.0.0"
numpy = "^2.0.0"
matplotlib = "^3.0.0"
xarray = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"
ruff = "*"
docformatter = "*"

[tool.poetry.group.docs.dependencies]
sphinx = "*"
sphinx-rtd-theme = "*"
sphinx-design = "*"
sphinx-copybutton = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py310"
exclude = [
    "tmp/",
    "__pycache__/",
    "*.egg-info/",
    "docs/"
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "N",   # pep8-naming conventions
    "UP",  # pyupgrade
    "D",   # pydocstyle (docstring conventions)
    "T20", # flake8-print (print statements)
]

# Ignore specific rules if needed
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "E501", # Line too long
    "N806", # Variable in function should be lowercase
]

[tool.ruff.lint.pydocstyle]
convention = "google"  # Use Google docstring style

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D"]  # Skip all docstring requirements in tests
"examples/*.py" = ["T"] # Skip print statement checks in examples
