name: Publish Python package

on:
  workflow_run:
    workflows: [Release]
    types:
      - completed

env:
  PYTHON_VERSION: '3.12'

# See https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
# Uses https://github.com/astral-sh/uv/issues/6298#issuecomment-2335034247 to set version equivalent to poetry-dynamic-versioning
jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.regex-match.outputs.match }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Required: https://github.com/actions/checkout/issues/1471
          fetch-depth: 0

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Build wheel
        id: wheel
        run: |
          VERSION=$(uv run hatch version)
          uv build
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Match semver regex
        uses: kaisugi/action-regex-match@v1.0.1
        id: regex-match
        with:
          text: ${{ steps.wheel.outputs.version }}
          # Semver regex: https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
          regex: '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'
          flags: g

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    needs: build
    # only publish to PyPI on semver tag pushes and successful release pipeline
    if: ${{ (needs.build.outputs.semver != '') && (github.event.workflow_run.conclusion == 'success') }}
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/plugboard-dev
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
    - build
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ format('v{0}', needs.build.outputs.semver) }}
          files: dist/**
