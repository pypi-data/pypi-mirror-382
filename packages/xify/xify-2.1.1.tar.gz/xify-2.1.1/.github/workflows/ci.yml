name: CI
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install uv with Python ${{ matrix.python-version }}
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set UV_CACHE_DIR env variable
      id: envvar
      run: echo "dir=$(uv cache dir)" >> $GITHUB_OUTPUT
    
    - name: Cache uv's global package cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.envvar.outputs.dir }}
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-
    
    - name: Install dependencies
      run: uv sync --extra dev

    - name: Run linting check
      run: uv run ruff check src

    - name: Run formatting check
      run: uv run ruff format --check src

    - name: Run type checking
      run: uv run mypy src

    - name: Check if package can be built
      run: uv build
    