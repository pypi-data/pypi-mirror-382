name: Release and Publish

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    uses: ./.github/workflows/ci.yml
  
  release:
    needs: [ci]
    runs-on: ubuntu-latest
    name: "Create release and publish"
  
    permissions:
      contents: write
      id-token: write
    steps:
    - name: Checkout repository with full history
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install uv with Python
      uses: astral-sh/setup-uv@v6
      with:
        python-version: "3.10" 

    - name: Install dependencies
      run: uv sync --extra dev

    - name: Extract version from tag
      id: version
      run: |
        TAG_NAME="${{ github.ref_name }}"
        VERSION_NUMBER="${TAG_NAME#v}"
        echo "number=$VERSION_NUMBER" >> $GITHUB_OUTPUT

    - name: Extract release notes from CHANGELOG.md
      id: changelog
      run: |
        # Find the first heading starting with "## v" and print all lines until the next one.
        CHANGELOG_CONTENT=$(awk '/^## v/ { if (p) exit; p=1; next } p { print }' CHANGELOG.md)
        echo "content<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Build package
      run: uv build

    - name: Verify package with Twine
      run: uv run twine check dist/*
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: ${{ github.ref_name }}
        body: ${{ steps.changelog.outputs.content }}
        draft: false
        prerelease: ${{ contains(github.ref_name, '-') }}
        files: dist/*
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true
    