[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "xify"
version = "2.2.0"
description = "An asynchronous Python client for interacting with the X API."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "aiohttp>=3.12.15",
]
license = {file = "LICENSE"}
authors = [
    {name = "Filming"}
]
keywords = ["python", "python3", "x", "twitter", "api", "social-media"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.urls]
Homepage = "https://github.com/filming/xify"
Repository = "https://github.com/filming/xify"
Issues = "https://github.com/filming/xify/issues"
Changelog = "https://github.com/filming/xify/blob/master/CHANGELOG.md"

[tool.ruff]
line-length = 88
target-version = "py310"
src = ["src"]

[tool.ruff.lint]
# Select rule categories to check
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "W",    # pycodestyle warnings
    "I",    # isort
    "UP",   # pyupgrade
    "PL",   # pylint
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "C90",  # mccabe complexity
    "D",    # pydocstring
]

# Ignore specific rules
ignore = [
    "D100",    # Missing docstring in public module
    "D104",    # Missing docstring in public package
    "D203",    # 1 blank line required before class docstring
    "D213",    # Multi-line docstring summary should start at the second line
    "D413",    # Missing blank line after last section
    "PLR0913", # Too many arguments in function definition (>5)
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["xify"]

[tool.ruff.format]
quote-style = "double"

[tool.mypy]
strict = true
files = ["src"]
python_version = "3.10"

[tool.hatch.build.targets.sdist]
include = [
    "src/xify",
    "/src/xify/py.typed",
]

[tool.hatch.build.targets.wheel]
packages = ["src/xify"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "uv"
changelog_message_builder_hook = "commitizen.hooks.conventional_commits_message_builder_hook"
changelog_file = "CHANGELOG.md"
changelog_incremental = true
update_changelog_on_bump = true
change_type_map = { "feat" = "Added", "fix" = "Fixed", "perf" = "Changed", "refactor" = "Changed", "build" = "Changed", "ci" = "Changed", "docs" = "Documentation", "style" = "Changed", "test" = "Tests", "chore" = "Chores" }

[project.optional-dependencies]
dev = [
    "commitizen>=4.8.3",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "python-dotenv>=1.1.1",
    "ruff>=0.12.1",
    "twine>=6.1.0",
]
