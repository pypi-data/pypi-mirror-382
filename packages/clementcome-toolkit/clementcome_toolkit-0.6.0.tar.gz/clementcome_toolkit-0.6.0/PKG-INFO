Metadata-Version: 2.4
Name: clementcome-toolkit
Version: 0.6.0
Summary: My data science toolkit.
Author-email: Clément Côme <clement.come98@gmail.com>
License: MIT
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.9
Requires-Dist: matplotlib>=3.8.0
Requires-Dist: numpy>=1.26.1
Requires-Dist: openpyxl>=3.1.2
Requires-Dist: pandas>=2.1.1
Requires-Dist: pandera>=0.18.0
Requires-Dist: pydantic>=2.4.2
Requires-Dist: scikit-learn>=1.3.2
Requires-Dist: scipy>=1.11.3
Requires-Dist: seaborn>=0.13.0
Description-Content-Type: text/markdown

# toolkit
My data science tool kit

## Documentation

Documentation will be available at [https://clementcome-toolkit.readthedocs.io/en/latest/](https://clementcome-toolkit.readthedocs.io/en/latest/).

## Installation

```bash
pip install clementcome-toolkit
```

## Locally work with the toolkit

If you want to work locally with the toolkit, you can clone the repository and execute `uv sync`

## Development

This project uses mainly uv, pytest and ruff for development.

If you cloned this project and want to start developing, you can install the package locally within a virtual environment.
```
uv sync
```
by default, it will create a virtual environment if you have no virtual environment activate.
My current setup is to first create a virtual environment (pyenv is my preferred choice but feel free) and then install the package locally.

For development you can add dependency groups specified in pyproject.toml especially the following ones:
```
uv sync --all-groups
```

Perform ruff checks with
```
uv run ruff check
```

Perform ruff formatting with
```
uv run ruff format
```

Execute tests with pytest
```
uv run pytest
```
