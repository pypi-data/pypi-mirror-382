[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "investgo"
version = "1.0.8"
description = "A Python library for fetching financial data from Investing.com"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "gohibiki", email = "gohibiki@protonmail.com"}
]
maintainers = [
    {name = "gohibiki", email = "gohibiki@protonmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8", 
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
keywords = [
    "finance", 
    "investing", 
    "stocks", 
    "etf", 
    "historical-data",
    "financial-analysis",
    "market-data",
    "investing.com"
]
dependencies = [
    "cloudscraper>=1.2.68",
    "pandas>=1.3.0",
]
requires-python = ">=3.7"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
]
examples = [
    "matplotlib>=3.6.0",
    "jupyter>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/gohibiki/investgo"
Repository = "https://github.com/gohibiki/investgo"
Documentation = "https://github.com/gohibiki/investgo#readme"
"Bug Reports" = "https://github.com/gohibiki/investgo/issues"
Changelog = "https://github.com/gohibiki/investgo/blob/main/CHANGELOG.md"

[project.scripts]
investgo-demo = "investgo.examples.basic_usage:main"

[tool.setuptools]
packages = ["investgo"]

[tool.setuptools.package-data]
investgo = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

# mypy configuration  
[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=investgo --cov-report=term-missing"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["investgo"]
omit = [
    "*/tests/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
