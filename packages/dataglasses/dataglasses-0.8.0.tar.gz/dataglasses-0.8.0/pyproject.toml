[project]
name = "dataglasses"
version = "0.8.0"
dependencies = []
requires-python = ">=3.10"
authors = [{ name = "Uri Granta", email = "uri.granta+python@gmail.com" }]
description = "Simple creation of dataclasses from JSON"
readme = "README.md"
license = { text = "MIT" }
keywords = ["dataclasses", "json", "json schema"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: File Formats :: JSON",
  "Topic :: File Formats :: JSON :: JSON Schema",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
  "jsonschema>=4.23.0",
  "mypy>=1.13.0",
  "pytest-cov>=6.0.0",
  "pytest-mypy>=0.10.3",
  "pytest>=8.3.3",
  "ruff>=0.7.1",
  "taskipy>=1.14.0",
  "types-jsonschema>=4.23.0.20240813",
]

[tool.ruff.lint]
select = [
  "F",   # pyflakes
  "E",   # pycodestyle (errors)
  "W",   # pycodestyle (warnings)
  "I",   # isort
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "PT",  # flake8-pytest-style
  "SIM", # flake8-simplify
]

[tool.taskipy.tasks]
format = "uv run ruff format && uv run ruff check --fix-only"
check = "uv run ruff check && uv run ruff format --check"
tests = "uv run pytest --mypy --cov --cov-fail-under=100"
