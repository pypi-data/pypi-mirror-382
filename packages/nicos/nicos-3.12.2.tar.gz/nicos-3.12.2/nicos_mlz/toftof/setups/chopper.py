description = 'chopper setup'

group = 'lowlevel'

includes = ['choppermemograph']

tango_base = 'tango://tofhw.toftof.frm2.tum.de:10000/toftof/rs232/'

devices = dict(
    ch = device('nicos_mlz.toftof.devices.chopper.real.Controller',
        description = 'TOFTOF chopper control device',
        io = device('nicos.devices.entangle.StringIO',
            tangodevice = tango_base + 'ifchcontrol',
        ),
        speed_accuracy = 10,
        phase_accuracy = 10,
        ch5_90deg_offset = 0,
        timeout = 600,
        pollinterval = 10,
        maxage = 12,
        unit = 'rpm',
        fmtstr = '%.0f',
    ),
    chWL = device('nicos_mlz.toftof.devices.Wavelength',
        description = 'Neutron wavelength',
        chopper = 'ch',
        chdelay = 'chdelay',
        abslimits = (0.2, 16.0),
        pollinterval = 10,
        maxage = 12,
        unit = 'AA',
    ),
    chSpeed = device('nicos_mlz.toftof.devices.Speed',
        description = 'Setpoint of the chopper speed',
        chopper = 'ch',
        chdelay = 'chdelay',
        abslimits = (0, 22000.),
        pollinterval = 10,
        maxage = 12,
        fmtstr = '%.0f',
        unit = 'rpm',
    ),
    chRatio = device('nicos_mlz.toftof.devices.Ratio',
        description = 'Frame overlap ratio',
        chopper = 'ch',
        chdelay = 'chdelay',
        pollinterval = 10,
        maxage = 12,
    ),
    chCRC = device('nicos_mlz.toftof.devices.CRC',
        description = 'Chopper rotation sense (CRC=1, parallel=0)',
        requires = {'level': 'admin'},
        chopper = 'ch',
        chdelay = 'chdelay',
        pollinterval = 10,
        maxage = 12,
    ),
    chST = device('nicos_mlz.toftof.devices.SlitType',
        description = 'Chopper window; large window=0',
        requires = {'level': 'admin'},
        chopper = 'ch',
        chdelay = 'chdelay',
        pollinterval = 10,
        maxage = 12,
    ),
    chDS = device('nicos_mlz.toftof.devices.SpeedReadout',
        description = 'Speed of the disks 1 - 7',
        chopper = 'ch',
        fmtstr = '[%.0f, %.0f, %.0f, %.0f, %.0f, %.0f, %.0f]',
        pollinterval = 10,
        maxage = 12,
        unit = 'rpm',
    ),
    chdelaybus = device('nicos_mlz.toftof.devices.toni.ToniBus',
        tangodevice = tango_base + 'ifchdelay',
        visibility = (),
    ),
    chdelay = device('nicos_mlz.toftof.devices.toni.DelayBox',
        description = 'Trigger time-offset',
        requires = {'level': 'guest'},
        bus = 'chdelaybus',
        addr = 0xF1,
        unit = 'usec',
        fmtstr = '%d',
    ),
)
