description = 'PLCs analog inputs'

group = 'optional'

tango_base = 'tango://phys.j-nse.frm2:10000/j-nse/'

devices = dict(
    coil_monitor = device('nicos.devices.entangle.Sensor',
        description = 'Voltage from coil',
        tangodevice = tango_base + 'datalogger/plc_analog1',
        pollinterval = 10,
        maxage = 30,
    ),
    cc1r1 = device('nicos.devices.entangle.Sensor',
        description = 'Temp cc1r1',
        tangodevice = tango_base + 's7_io/CC1R1',
        unit = 'degC',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    cc1r2 = device('nicos.devices.entangle.Sensor',
        description = 'Temp cc1r2',
        tangodevice = tango_base + 's7_io/CC1R2',
        unit = 'degC',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    cc3r1 = device('nicos.devices.entangle.Sensor',
        description = 'Temp cc3r1',
        tangodevice = tango_base + 's7_io/CC3R1',
        unit = 'degC',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    cc3r2 = device('nicos.devices.entangle.Sensor',
        description = 'Temp cc3r2',
        tangodevice = tango_base + 's7_io/CC3R2',
        unit = 'degC',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    HeMon = device('nicos.devices.entangle.Sensor',
        description = 'He percentage',
        tangodevice = tango_base + 's7_io/HeMon',
        unit = 'percent',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    MagB1x = device('nicos.devices.entangle.Sensor',
        description = 'B sensor pi/2 1 x component',
        tangodevice = tango_base + 's7_io/MagB1x',
        unit = 'G',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    MagB1y = device('nicos.devices.entangle.Sensor',
        description = 'B sensor pi/2 1 y component',
        tangodevice = tango_base + 's7_io/MagB1y',
        unit = 'G',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    MagB1z = device('nicos.devices.entangle.Sensor',
        description = 'B sensor pi/2 1 z component',
        tangodevice = tango_base + 's7_io/MagB1z',
        unit = 'G',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    MagB2x = device('nicos.devices.entangle.Sensor',
        description = 'B sensor pi/2 2 x component',
        tangodevice = tango_base + 's7_io/MagB2x',
        unit = 'G',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    MagB2y = device('nicos.devices.entangle.Sensor',
        description = 'B sensor pi/2 2 y component',
        tangodevice = tango_base + 's7_io/MagB2y',
        unit = 'G',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    MagB2z = device('nicos.devices.entangle.Sensor',
        description = 'B sensor pi/2 2 z component',
        tangodevice = tango_base + 's7_io/MagB2z',
        unit = 'G',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    MagBx = device('nicos.devices.entangle.Sensor',
        description = 'B sensor pi flipper x component',
        tangodevice = tango_base + 's7_io/MagBx',
        unit = 'G',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    MagBy = device('nicos.devices.entangle.Sensor',
        description = 'B sensor pi flipper y component',
        tangodevice = tango_base + 's7_io/MagBy',
        unit = 'G',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    MagBz = device('nicos.devices.entangle.Sensor',
        description = 'B sensor pi flipper z component',
        tangodevice = tango_base + 's7_io/MagBz',
        unit = 'G',
        fmtstr = '%.3g',
        pollinterval = 60,
        maxage = 130,
    ),
    KompassArmMono = device('nicos.devices.entangle.Sensor',
        description = 'Position of Kompass mono-2theta',
        # strange name, since it also masquerades as a GPIB communication device for NSE prog.
        tangodevice = tango_base + 'gpib/7',
        unit = 'deg',
    ),
    KompassArmSample = device('nicos.devices.entangle.Sensor',
        description = 'Position of Kompass sample-2theta',
        tangodevice = tango_base + 'gpib/8',
        unit = 'deg',
    ),
)
