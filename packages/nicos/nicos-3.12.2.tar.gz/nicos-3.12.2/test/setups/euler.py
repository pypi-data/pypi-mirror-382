
devices = dict(
    Sample = device('nicos.devices.tas.TASSample'),
    mono = device('nicos.devices.tas.Monochromator',
        unit = 'A-1',
        material = 'PG',
        reflection = (0, 0, 2),
        dvalue = 3.355,
        theta = device('nicos.devices.generic.VirtualMotor',
            unit = 'deg',
            abslimits = (-90, 0),
        ),
        twotheta = device('nicos.devices.generic.VirtualMotor',
            unit = 'deg',
            abslimits = (-180, 0),
        ),
        focush = None,
        focusv = None,
        abslimits = (0.1, 10),
        warnlimits = (1.0, 3.0),
        crystalside = -1,
        scatteringsense = -1,
    ),
    ana = device('nicos.devices.tas.Monochromator',
        unit = 'A-1',
        material = 'PG',
        reflection = (0, 0, 2),
        dvalue = 3.355,
        theta = device('nicos.devices.generic.VirtualMotor',
            unit = 'deg',
            abslimits = (-180, 180),
        ),
        twotheta = device('nicos.devices.generic.VirtualMotor',
            unit = 'deg',
            abslimits = (-180, 180),
        ),
        focush = None,
        focusv = None,
        abslimits = (0.1, 10),
        crystalside = -1,
        scatteringsense = -1,
    ),
    tas = device('nicos.devices.tas.TAS',
        instrument = 'VTAS',
        responsible = 'R. Esponsible <r.esponsible@frm2.tum.de>',
        website = 'https://www.nicos-controls.org',
        operators = ['NICOS developer team'],
        facility = 'NICOS demo instruments',
        energytransferunit = 'meV',
        scatteringsense = (-1, 1, -1),
        axiscoupling = False,
        collimation = '60 30 30 60',
        cell = 'Sample',
        phi = device('nicos.devices.generic.VirtualMotor',
            abslimits = (-180, 180),
            unit = 'deg',
        ),
        psi = device('nicos.devices.generic.VirtualMotor',
            abslimits = (0, 360),
            unit = 'deg',
        ),
        mono = 'mono',
        ana = 'ana',
        alpha = None,
    ),
    ec = device('nicos.devices.tas.EulerianCradle',
        cell = 'Sample',
        tas = 'tas',
        chi = device('nicos.devices.generic.VirtualMotor',
            abslimits = (-180, 180),
            unit = 'deg',
        ),
        omega = device('nicos.devices.generic.VirtualMotor',
            abslimits = (-180, 180),
            unit = 'deg',
        ),
    ),
)
