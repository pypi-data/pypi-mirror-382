description = 'qmesydaq detector devices'

# included by kompass
group = 'lowlevel'

sysconfig = dict(
    datasinks = ['LivePNGSink', 'LivePNGSinkLog',
                 ],#'Histogram', 'Listmode'],
)

devices = dict(
    LiveViewSink = device('nicos.devices.datasinks.LiveViewSink',
        description = 'Sends image data to LiveViewWidget',
        filenametemplate=[],
    ),
    LivePNGSinkLog = device('nicos.devices.datasinks.PNGLiveFileSink',
        description = 'Saves live image as .png every now and then',
        filename = 'webroot/live_log.png',
        log10 = True,
        interval = 15,
    ),
    LivePNGSink = device('nicos.devices.datasinks.PNGLiveFileSink',
        description = 'Saves live image as .png every now and then',
        filename = 'webroot/live_lin.png',
        log10 = False,
        interval = 15,
    ),
    # Histogram = device('nicos_mlz.devices.datasinks.qmesydaq.HistogramSink',
    #     description = 'Histogram data written via QMesyDAQ',
    #     image = 'det1_image',
    #     subdir = 'mtxt',
    #     filenametemplate = ['%(pointcounter)07d.mtxt'],
    #     detectors = ['det'],
    # ),
    # Listmode = device('nicos_mlz.devices.datasinks.qmesydaq.ListmodeSink',
    #     description = 'Listmode data written via QMesyDAQ',
    #     image = 'det1_image',
    #     subdir = 'list',
    #     filenametemplate = ['%(pointcounter)07d.mdat'],
    #     detectors = ['det'],
    # ),
    det1_ctr = device('nicos.devices.generic.VirtualCounter',
        description = '3He detector (QMesyDAQ Counter0)',
        type = 'counter',
    ),
    det1_mon1 = device('nicos.devices.generic.VirtualCounter',
        description = 'Monitor 1 (QMesyDAQ Counter1)',
        countrate = 100,
        type = 'monitor',
    ),
    det1_mon2 = device('nicos.devices.generic.VirtualCounter',
        description = 'Monitor 2 (QMesyDAQ Counter2)',
        countrate = 200,
        type = 'monitor',
    ),
    det1_mon3 = device('nicos.devices.generic.VirtualCounter',
        description = 'Monitor 3 (QMesyDAQ Counter3)',
        countrate = 10,
        type = 'monitor',
    ),
    # det1_ev = device('nicos.devices.generic.VirtualCounter',
    #     description = 'QMesyDAQ Events channel',
    #     type = 'counter',
    # ),
    det1_timer = device('nicos.devices.generic.VirtualTimer',
        description = 'QMesyDAQ Timer',
    ),
    det1_image = device('nicos.devices.generic.VirtualImage',
        description = 'QMesyDAQ Image',
        size = (1, 960),
        # flipaxes = [0],  # flip image up-down
    ),
    # det1_raw = device('nicos.devices.vendor.qmesydaq.tango.ImageChannel',
    #     description = 'QMesyDAQ RAW Image',
    #     tangodevice = tango_base + 'detraw',
    # ),
    # det1_amp = device('nicos.devices.vendor.qmesydaq.tango.ImageChannel',
    #     description = 'QMesyDAQ Amplitudes',
    #     tangodevice = tango_base + 'detamp',
    # ),
    det1 = device('nicos.devices.generic.Detector',
        description = 'Classical detector with 3He tube and monitors',
        timers = ['det1_timer'],
        counters = ['det1_ctr'],
        monitors = ['det1_mon1', 'det1_mon2', 'det1_mon3'],
        # images = ['det1_image'],
        liveinterval = 30.0,
    ),
    # det1 = device('nicos.devices.tas.virtual.VirtualTasDetector',
    #     description = 'simulated TAS intensity',
    #     tas = 'tas',
    #     background = 1,
    #     realtime = True,
    # ),
)

startupcode = '''
SetDetectors(det1)
'''
