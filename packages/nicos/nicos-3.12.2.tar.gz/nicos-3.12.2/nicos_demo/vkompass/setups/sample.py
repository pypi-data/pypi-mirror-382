description = 'Sample table devices'

group = 'lowlevel'
includes = ['sampleslit']

devices = dict(
    # A3
    sth_st = device('nicos.devices.generic.Axis',
        description = 'sample theta (A3)',
        motor = device('nicos.devices.generic.VirtualMotor',
            abslimits = (-172.2, 172.2),
            unit = 'deg',
        ),
        fmtstr = '%.3f',
        precision = 0.001,
    ),
    # A4
    pbs = device('nicos.devices.generic.ManualSwitch',
        description = 'primary beamstop at sample table',
        states = ['up', 'down'],
    ),
    stt_ax = device('nicos.devices.generic.Axis',
        description = 'secondary spectrometer angle (A4)',
        motor = device('nicos.devices.generic.VirtualMotor',
            abslimits = (-105, 119),
            unit = 'deg',
        ),
        fmtstr = '%.3f',
        precision = 0.001,
    ),
    stt = device('nicos_mlz.kompass.devices.SttWithPBS',
        description = 'secondary spectrometer angle (A4) with pbs',
        stt = 'stt_ax',
        pbs = 'pbs',
        limits = (-30, 38),
        pbs_values = ('down', 'up'),
    ),
    # sample translation
    sx = device('nicos.devices.generic.Axis',
        description = 'sample table X',
        motor = device('nicos.devices.generic.VirtualMotor',
            abslimits = (-16, 16),
            unit = 'mm',
        ),
        fmtstr = '%.2f',
        precision = 0.05,
    ),
    sy = device('nicos.devices.generic.Axis',
        description = 'sample table Y',
        motor = device('nicos.devices.generic.VirtualMotor',
            abslimits = (-16, 16),
            unit = 'mm',
        ),
        fmtstr = '%.2f',
        precision = 0.05,
    ),

    # sample gonios
    scx = device('nicos.devices.generic.Axis',
        description = 'sample table cradle X',
        motor = device('nicos.devices.generic.VirtualMotor',
            abslimits = (-5, 5),
            unit = 'deg',
        ),
        fmtstr = '%.1f',
        precision = 0.05,
    ),
    scy = device('nicos.devices.generic.Axis',
        description = 'sample table cradle Y',
        motor = device('nicos.devices.generic.VirtualMotor',
            abslimits = (-5, 5),
            unit = 'deg',
        ),
        fmtstr = '%.1f',
        precision = 0.05,
    ),
    sz = device('nicos.devices.generic.Axis',
        description = 'sample table Z translation',
        motor = device('nicos.devices.generic.VirtualMotor',
            abslimits = (-20, 20),
            unit = 'mm',
        ),
        fmtstr = '%.1f',
        precision = 0.01,
    ),
    vg1 = device('nicos.devices.tas.VirtualGonio',
        description = 'Gonio along orient1 reflex',
        cell = 'Sample',
        gx = 'scx',
        gy = 'scy',
        axis = 1,
        unit = 'deg',
    ),
    vg2 = device('nicos.devices.tas.VirtualGonio',
        description = 'Gonio along orient2 reflex',
        cell = 'Sample',
        gx = 'scx',
        gy = 'scy',
        axis = 2,
        unit = 'deg',
    ),
)

alias_config = {
    'sth': {'sth_st': 100}
}
