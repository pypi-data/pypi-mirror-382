description = 'TMR cooling system'
excludes = ['cooling-virtual']
group = 'optional'

tango_base = 'tango://phys.tmr.jcns.fz-juelich.de:10000/tmr/'
s7_io = tango_base + 's7_io/plc_'
s7_motor = tango_base + 's7_motor/plc_'

devices = dict(
    mp01 = device('nicos.devices.entangle.NamedDigitalOutput',
        tangodevice = s7_io + 'mp01',
        description = 'Pump 1.',
        mapping = dict(off=0, on=1),
    ),
    mf01 = device('nicos.devices.entangle.AnalogInput',
        tangodevice = s7_io + 'mf01',
        description = 'Mass flow rate sensor 1.',
    ),
    # mf02 = device('nicos.devices.entangle.AnalogInput',
    #     tangodevice = s7_io + 'mf02',
    #     description = 'Mass flow rate sensor 2.',
    # ),
    t01 = device('nicos.devices.entangle.AnalogInput',
        tangodevice = s7_io + 't01',
        description = 'Temperature sensor 1.',
        unit = 'degC',
    ),
    t02 = device('nicos.devices.entangle.AnalogInput',
        tangodevice = s7_io + 't02',
        description = 'Temperature sensor 2.',
        unit = 'degC',
    ),
    t03 = device('nicos.devices.entangle.AnalogInput',
        tangodevice = s7_io + 't03',
        description = 'Temperature sensor 3.',
        unit = 'degC',
    ),
    # t04 = device('nicos.devices.entangle.AnalogInput',
    #     tangodevice = s7_io + 't04',
    #     description = 'Temperature sensor 4.',
    #     unit = 'degC',
    # ),
    # t05 = device('nicos.devices.entangle.AnalogInput',
    #     tangodevice = s7_io + 't05',
    #     description = 'Temperature sensor 5.',
    #     unit = 'degC',
    # ),
    p01 = device('nicos.devices.entangle.AnalogInput',
        tangodevice = s7_io + 'p01',
        description = 'Pressure sensor 1.',
    ),
    p02 = device('nicos.devices.entangle.AnalogInput',
        tangodevice = s7_io + 'p02',
        description = 'Pressure sensor 2.',
    ),
    p03 = device('nicos.devices.entangle.AnalogInput',
        tangodevice = s7_io + 'p03',
        description = 'Pressure sensor 3.',
    ),
    p04 = device('nicos.devices.entangle.AnalogInput',
        tangodevice = s7_io + 'p04',
        description = 'Pressure sensor 4.',
    ),
    p05 = device('nicos.devices.entangle.AnalogInput',
        tangodevice = s7_io + 'p05',
        description = 'Pressure sensor 5.',
    ),
    sf01 = device('nicos.devices.entangle.AnalogInput',
        tangodevice = s7_io + 'sf01',
        description = 'Water level sensor 1.',
    ),
    hv01 = device('nicos.devices.entangle.AnalogOutput',
        tangodevice = s7_motor + 'hv01',
        description = 'Globe valve 1.',
        requires = dict(level='admin'),
    ),
    # hv02 = device('nicos.devices.entangle.AnalogOutput',
    #     tangodevice = s7_motor + 'hv02',
    #     description = 'Globe valve 2.',
    #     requires = dict(level='admin'),
    # ),
    hv03 = device('nicos.devices.entangle.AnalogOutput',
        tangodevice = s7_motor + 'hv03',
        description = 'Globe valve 3.',
        requires = dict(level='admin'),
    ),
    # hv04 = device('nicos.devices.entangle.AnalogOutput',
    #     tangodevice = s7_motor + 'hv04',
    #     description = 'Globe valve 4.',
    #     requires = dict(level='admin'),
    # ),
    # hv05 = device('nicos.devices.entangle.AnalogOutput',
    #     tangodevice = s7_motor + 'hv05',
    #     description = 'Globe valve 5.',
    #     requires = dict(level='admin'),
    # ),
    sc = device('nicos.devices.entangle.AnalogInput',
        tangodevice = s7_io + 'sc_act',
        description = 'Electric conductance sensor.',
    ),
    sp = device('nicos.devices.entangle.AnalogInput',
        tangodevice = s7_io + 'sp_act',
        description = 'pH sensor.',
    ),
)
