description = 'GALAXI PIN diodes setup'
group = 'optional'

display_order = 20

tango_base = 'tango://phys.galaxi.jcns.fz-juelich.de:10000/galaxi/'
s7_analog = tango_base + 'plc_io/'
s7_digital = tango_base + 'fzjdp_digital/'

devices = dict(
    pintimer = device('nicos.devices.entangle.AnalogOutput',
        description = 'PIN diode timer.',
        tangodevice = s7_analog + 'pin_diode_timer',
        unit = 's',
        fmtstr = '%d',
    ),
    pinstate = device('nicos.devices.entangle.NamedDigitalInput',
        description = 'PIN diode status.',
        tangodevice = s7_digital + 'StatIntegralPin',
        mapping = dict(counting = 1, ready = 0),
        unit = '',
        fmtstr = '%s',
        visibility = (),
    ),
    pincontrol = device('nicos.devices.entangle.DigitalInput',
        description = 'PIN diode status control.',
        tangodevice = s7_digital + 'StatIntegralPin2',
        visibility = (),
        unit = '',
    ),
    singledetectors = device('nicos_jcns.galaxi.devices.pindiode.SingleDetectors',
        description = 'Integrated counts of all PIN diodes.',
        pintimer = 'pintimer',
        pinstate = 'pinstate',
        pincontrol = 'pincontrol',
        pindiodes = ['ionichamber1_int', 'ionichamber2_int', 'pindiode1_int',
                     'pindiodecal_int', 'pindiodesample_int'],
        fmtstr = '%d',
        unit = 'cts',
    ),
    ionichamber1 = device('nicos.devices.entangle.AnalogInput',
        description = 'Counts of ionisation chamber 1.',
        tangodevice = s7_analog + 'ionisation_chamber1',
        fmtstr = '%d',
        unit = 'cts',
    ),
    ionichamber1_int = device('nicos.devices.entangle.AnalogInput',
        description = 'Integrated counts of ionisation chamber 1.',
        tangodevice = s7_analog + 'ionisation_chamber1_int',
        fmtstr = '%d',
        unit = 'cts',
    ),
    ionichamber1_off = device('nicos.devices.entangle.AnalogOutput',
        description = 'Count offset of ionisation chamber 1.',
        tangodevice = s7_analog + 'ionisation_chamber1_offset',
        fmtstr = '%d',
        unit = 'cts',
    ),
    ionichamber2 = device('nicos.devices.entangle.AnalogInput',
        description = 'Counts of ionisation chamber 2.',
        tangodevice = s7_analog + 'ionisation_chamber2',
        fmtstr = '%d',
        unit = 'cts',
    ),
    ionichamber2_int = device('nicos.devices.entangle.AnalogInput',
        description = 'Integrated counts of ionisation chamber 2.',
        tangodevice = s7_analog + 'ionisation_chamber2_int',
        fmtstr = '%d',
        unit = 'cts',
    ),
    ionichamber2_off = device('nicos.devices.entangle.AnalogOutput',
        description = 'Count offset of ionisation chamber 2.',
        tangodevice = s7_analog + 'ionisation_chamber2_offset',
        fmtstr = '%d',
        unit = 'cts',
    ),
    pindiode1_move = device('nicos.devices.entangle.NamedDigitalOutput',
        description = 'Position of PIN diode in ionisation chamber 1.',
        tangodevice = s7_digital + 'AbsorberPlate16',
        mapping = {'out': 0, 'in': 1},
        fmtstr = '%s',
    ),
    pindiode1 = device('nicos.devices.entangle.AnalogInput',
        description = 'Counts of PIN diode in ionisation chamber 1.',
        tangodevice = s7_analog + 'pin_diode_chamber1',
        fmtstr = '%d',
        unit = 'cts',
    ),
    pindiode1_int = device('nicos.devices.entangle.AnalogInput',
        description = 'Integrated counts of PIN diode in ionisation chamber '
        '1.',
        tangodevice = s7_analog + 'pin_diode_chamber1_int',
        fmtstr = '%d',
        unit = 'cts',
    ),
    pindiode1_off = device('nicos.devices.entangle.AnalogOutput',
        description = 'Count offset of PIN diode in ionisation chamber 1.',
        tangodevice = s7_analog + 'pin_diode_chamber1_offset',
        fmtstr = '%d',
        unit = 'cts',
    ),
    pindiodesample_move = device('nicos.devices.entangle.NamedDigitalOutput',
        description = 'Position of PIN diode behind sample place.',
        tangodevice = s7_digital + 'PinDiode',
        mapping = {'in': 1, 'out': 2},
        fmtstr = '%s',
    ),
    pindiodesample = device('nicos.devices.entangle.AnalogInput',
        description = 'Counts of PIN diode behind sample place.',
        tangodevice = s7_analog + 'pin_diode_sample',
        fmtstr = '%d',
        unit = 'cts',
    ),
    pindiodesample_int = device('nicos.devices.entangle.AnalogInput',
        description = 'Integrated counts of PIN diode behind sample place.',
        tangodevice = s7_analog + 'pin_diode_sample_int',
        fmtstr = '%d',
        unit = 'cts',
    ),
    pindiodesample_off = device('nicos.devices.entangle.AnalogOutput',
        description = 'Count offset of PIN diode behind sample place.',
        tangodevice = s7_analog + 'pin_diode_sample_offset',
        fmtstr = '%d',
        unit = 'cts',
    ),
    pindiodecal = device('nicos.devices.entangle.AnalogInput',
        description = 'Counts of calibrated PIN diode at sample place.',
        tangodevice = s7_analog + 'pin_diode_calibrated',
        fmtstr = '%d',
        unit = 'cts',
    ),
    pindiodecal_int = device('nicos.devices.entangle.AnalogInput',
        description = 'Integrated counts of calibrated PIN diode at sample '
        'place.',
        tangodevice = s7_analog + 'pin_diode_calibrated_int',
        fmtstr = '%d',
        unit = 'cts',
    ),
    pindiodecal_off = device('nicos.devices.entangle.AnalogOutput',
        description = 'Count offset of calibrated PIN diode at sample place.',
        tangodevice = s7_analog + 'pin_diode_calibrated_offset',
        fmtstr = '%d',
        unit = 'cts',
    ),
)
