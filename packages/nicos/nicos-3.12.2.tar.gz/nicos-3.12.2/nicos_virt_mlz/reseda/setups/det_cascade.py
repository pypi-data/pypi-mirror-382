description = 'CASCADE detector'
group = 'lowlevel'

includes = ['det_base', 'filesavers']

excludes = ['det_3he']

sysconfig = dict(
    datasinks = ['psd_padformat', 'psd_tofformat', 'psd_liveview',
                 'HDF5FileSaver'],
)

devices = dict(
    fg_burst = device('nicos.devices.generic.ManualSwitch',
        description = 'String blasting device',
        states = ['idle', 'arm', 'trigger'],
        fmtstr = '%s',
        unit = '',
    ),
    psd_padformat = device('nicos.devices.vendor.cascade.CascadePadSink',
        subdir = 'cascade',
        detectors = ['psd', 'scandet', 'counter', 'timer', 'monitor1', 'monitor2'],
    ),
    psd_tofformat = device('nicos.devices.vendor.cascade.CascadeTofSink',
        subdir = 'cascade',
        detectors = ['psd', 'scandet', 'counter', 'timer', 'monitor1', 'monitor2'],
    ),
    psd_liveview = device('nicos.devices.datasinks.LiveViewSink'),
    mcstas = device('nicos_virt_mlz.reseda.devices.detector.McStasSimulation',
        description = 'McStas simulation',
        intensityfactor = 1e10,
        l_ambda = 'selector_lambda',
        d_lambda = 'selector_delta_lambda',
        tablex = 'stx',
        tabley = 'sty',
        tablez = 'stz',
        table_rotx = 'sgx',
        table_roty = 'sgy',
        table_rotz = 'srz',
        l1 = 'L_ab',
        l2 = 'L_bd',
        psd_distance = 'L_sd',
        # coil_nse_len = '',
        arm2_rot = 'arm2_rot',
        nse0 = 'nse0',
        cbox_0a_fg_freq = 'cbox_0a_fg_freq',
        cbox_0b_fg_freq = 'cbox_0b_fg_freq',
        hrf_0a = 'hrf_0a',
        hrf_0b = 'hrf_0b',
        sample = 'Sample',
        mathmode = 'mathmode',
        gf0 = 'gf0',
        gf1 = 'gf1',
        gf2 = 'gf2',
        gf4 = 'gf4',
        gf5 = 'gf5',
        gf6 = 'gf6',
        gf7 = 'gf7',
        gf8 = 'gf8',
        gf9 = 'gf9',
        gf10 = 'gf10',
        hsf_0a = 'hsf_0a',
        hsf_0b = 'hsf_0b',
        sf_0a = 'sf_0a',
        sf_0b = 'sf_0b',
        neutronspersec = {
            'localhost': 3.5e5,
            'taco6.ictrl.frm2.tum.de': 4e4,
            'ictrl23': 5.15e4,
        },
    ),
    psd_timer = device('nicos.devices.mcstas.McStasTimer',
        description = 'Cascade timer',
        mcstas = 'mcstas',
    ),
    psd_channel = device('nicos_virt_mlz.reseda.devices.detector.McStasImage',
                       # 'nicos_virt_mlz.reseda.devices.CascadeDetector',
        description = 'CASCADE detector channel',
        mcstas = 'mcstas',
    ),
    psd = device('nicos.devices.mcstas.Detector',
        description = 'CASCADE detector',
        mcstas = 'mcstas',
        timers = ['psd_timer'],
        monitors = ['monitor1'],
        images = ['psd_channel'],
        liveinterval = 10,
    ),
    L_ab = device('nicos.devices.generic.ManualMove',
        description = 'Distance between RF coils',
        abslimits = (1, 3),
        default = 1.87,
        unit = 'm',
    ),
    L_bd = device('nicos.devices.generic.ManualMove',
        description = "Distance between RF '0b' coil and detector",
        abslimits = (1, 8),
        default = 4.95,
        unit = 'm',
    ),
    L_sd = device('nicos.devices.generic.ManualMove',
        description = 'Sample-Detector distance',
        abslimits = (0, 4),
        default = 3.333,
        unit = 'm',
    ),
    mathmode = device('nicos.devices.generic.ManualSwitch',
        description = 'toggles math mode for spin propagation for monte-carlo',
        states = [0, 1],
        fmtstr = '%d',
        unit = '',
    ),
    psd_chop_freq = device('nicos.devices.generic.ManualMove',
        description = 'Chopper Frequency generator',
        pollinterval = 30,
        fmtstr = '%.3f',
        abslimits = (0.1, 1e7),
        default = 30000,
        unit = 'Hz',
    ),
    psd_timebin_freq = device('nicos.devices.generic.ManualMove',
        description = 'Timebin Frequency generator',
        pollinterval = 30,
        fmtstr = '%.3f',
        abslimits = (0.1, 1e7),
        default = 10000,
        unit = 'Hz',
    ),
    det_hv = device('nicos.devices.generic.ManualMove',
        description = 'High voltage power supply of the 3he detector',
        abslimits = (-3000, 0),
        warnlimits = (-3000, -2800),
        pollinterval = 10,
        maxage = 20,
        fmtstr = '%.f',
        unit = 'V',
        default = -2850,
    ),
)


startupcode = '''
# SetDetectors(psd)
# psd_channel.mode='tof'
'''
