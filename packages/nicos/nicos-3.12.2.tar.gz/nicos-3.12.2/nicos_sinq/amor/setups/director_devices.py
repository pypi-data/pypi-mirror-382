description = 'Setup for the AMOR instrument logic devices'

display_order = 10

includes = [
    'detector_stage', 'diaphragm1', 'diaphragm2', 'sample', 'diaphragm3'
]

devices = dict(
    distances = device('nicos_sinq.amor.devices.director_devices.Distances',
        description = 'Parameter class for distances',
        visibility = ('metadata', 'namespace'),
    ),
    sx = device('nicos.devices.generic.ReadonlyParamDevice',
        description = 'sample distance',
        device = 'distances',
        parameter = 'sample',
        visibility = ('metadata', 'namespace'),
    ),
    amor_director = device('nicos_sinq.amor.devices.director_devices.AmorDirector',
        description = 'AMOR parameter class',
        distances = 'distances',
        ltz = 'ltz',
        lom = 'lom',
        d2z = 'd2z',
        soz = 'soz',
        som = 'som',
        com = 'cnu',
        coz = 'cz',
        d3z = 'd3z',
        d1t = 'd1t',
        d1b = 'd1b',
        d2t = 'd2t',
        d2b = 'd2b',
        unit = '',
        visibility = ('metadata', 'namespace'),
    ),
    kap = device('nicos.devices.generic.ParamDevice',
        description = 'Kappa device',
        device = 'amor_director',
        parameter = 'kappa',
        copy_status = True,
    ),
    mu = device('nicos.devices.generic.ParamDevice',
        description = 'Angle between horizon and sample surface',
        device = 'amor_director',
        parameter = 'mu',
        copy_status = True,
    ),
    div = device('nicos.devices.generic.ParamDevice',
        description = 'Angle between horizon and sample-detector',
        device = 'amor_director',
        parameter = 'div',
        copy_status = True,
    ),
    kad = device('nicos.devices.generic.ParamDevice',
        description = 'Angle between horizon and sample-detector',
        device = 'amor_director',
        parameter = 'kad',
        copy_status = True,
    ),
    mud = device('nicos.devices.generic.ParamDevice',
        description = 'Angle between horizon and sample-detector',
        device = 'amor_director',
        parameter = 'mud',
        copy_status = True,
    ),
    nu = device('nicos.devices.generic.ParamDevice',
        description = 'Angle between horizon and sample-detector',
        device = 'amor_director',
        parameter = 'nu',
        copy_status = True,
    ),
    nud = device('nicos.devices.generic.ParamDevice',
        description = 'Detector angle offset',
        device = 'amor_director',
        parameter = 'nud',
        copy_status = True,
        visibility = ('metadata', 'namespace'),
    ),
    amormode = device('nicos.devices.generic.ParamDevice',
        description = 'Amor operating mode',
        device = 'amor_director',
        parameter = 'mode',
        copy_status = True,
    ),
    szoffset = device('nicos.devices.generic.ParamDevice',
        description = 'Sample Z offset',
        device = 'amor_director',
        parameter = 'zoffset',
        copy_status = True,
        visibility = ('metadata', 'namespace'),
    ),
    sz = device('nicos.core.device.DeviceAlias',
        description = 'Alias for sz',
        alias = 'szoffset',
        devclass = 'nicos.core.device.Moveable'
    ),
)
