description = 'Devices for the analyser detector assembly'

excludes = ['wagen1']

pvpref = 'SQ:ZEBRA:turboPmac3:'
snpref = 'SQ:ZEBRA:turboPmac2:'

devices = dict(
    nu = device('nicos_sinq.devices.epics.motor.SinqMotor',
        description = 'Detector tilt',
        motorpv = pvpref + 'NUAN',
    ),
    detdist = device('nicos_sinq.devices.epics.motor.SinqMotor',
        description = 'Detector distance',
        motorpv = pvpref + 'W2DIST',
    ),
    a5 = device('nicos_sinq.devices.epics.motor.SinqMotor',
        description = 'Analyser rotation',
        motorpv = pvpref + 'A5',
    ),
    a6 = device('nicos_sinq.devices.epics.motor.SinqMotor',
        description = 'Analyser two theta',
        motorpv = pvpref + 'A6',
    ),
    tan = device('nicos_sinq.devices.epics.motor.SinqMotor',
        description = 'Analyser translation',
        motorpv = pvpref + 'TAN',
    ),
    ana = device('nicos_sinq.devices.mono.SinqMonochromator',
        description = 'ZEBRA analyser',
        theta = 'a5',
        twotheta = 'a6',
        material = 'PG',  # TODO: material and reflection do not fit to dvalue
        reflection = (0, 0, 2),
        dvalue = 3.745,
        scatteringsense = 1,
        crystalside = 1,
        unit = 'A',
        focmode = None,
        abslimits = (1, 3),
    ),
    s2anr = device('nicos_sinq.devices.epics.motor.SinqMotor',
        description = 'Analyser slit right',
        motorpv = snpref + 'S2ANR',
    ),
    s2anb = device('nicos_sinq.devices.epics.motor.SinqMotor',
        description = 'Analyser slit bottom',
        motorpv = snpref + 'S2ANB',
    ),
    s2ant = device('nicos_sinq.devices.epics.motor.SinqMotor',
        description = 'Analyser slit top',
        motorpv = snpref + 'S2ANT',
    ),
    s2anl = device('nicos_sinq.devices.epics.motor.SinqMotor',
        description = 'Analyser slit left',
        motorpv = snpref + 'S2ANL',
    ),
    anslit = device('nicos.devices.generic.slit.Slit',
        description = 'Analyser slit with left, right, bottom and top motors',
        opmode = 'centered',
        coordinates = 'opposite',
        left = 's2anl',
        right = 's2anr',
        top = 's2ant',
        bottom = 's2anb',
        visibility = (),
    ),
    s2anv = device('nicos.devices.generic.slit.HeightSlitAxis',
        description = 'Analyser slit  opening controller',
        slit = 'anslit',
        unit = 'mm',
    ),
    s2anh = device('nicos.devices.generic.slit.WidthSlitAxis',
        description = 'Analyser slit width controller',
        slit = 'anslit',
        unit = 'mm',
    ),
)
startupcode = """
counts._setROParam('readpv', 'SQ:ZEBRA:counter.S5')
"""
