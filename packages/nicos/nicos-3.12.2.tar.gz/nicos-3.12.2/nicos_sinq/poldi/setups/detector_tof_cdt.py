description = 'Detector devices in SINQ POLDI.'
pvprefix = 'SQ:POLDI:counter'

sysconfig = dict(datasinks = ['jbi_liveview'],)
 
devices = dict(
    timepreset = device('nicos_sinq.devices.epics.detector.EpicsTimerActiveChannel',
        description = 'Used to set and view time preset',
        unit = 'sec',
        readpv = pvprefix + '.TP',
        presetpv = pvprefix + '.TP',
    ),
    elapsedtime = device('nicos_sinq.devices.epics.detector.EpicsTimerPassiveChannel',
        description = 'Used to view elapsed time while counting',
        unit = 'sec',
        readpv = pvprefix + '.T',
    ),
    monitorpreset = device('nicos_sinq.devices.epics.detector.EpicsCounterActiveChannel',
        description = 'Used to set and view monitor preset',
        type = 'monitor',
        readpv = pvprefix + '.PR2',
        presetpv = pvprefix + '.PR2',
    ),
    monitor1 = device('nicos_sinq.devices.epics.detector.EpicsCounterPassiveChannel',
        description = 'First scalar counter channel',
        type = 'monitor',
        readpv = pvprefix + '.S2',
    ),
    monitor2 = device('nicos_sinq.devices.epics.detector.EpicsCounterPassiveChannel',
        description = 'Second scalar counter channel',
        type = 'monitor',
        readpv = pvprefix + '.S3',
    ),
    monitor3 = device('nicos_sinq.devices.epics.detector.EpicsCounterPassiveChannel',
        description = 'Third scalar counter channel',
        type = 'monitor',
        visibility = (),
        readpv = pvprefix + '.S4',
    ),
    protoncount = device('nicos_sinq.devices.epics.detector.EpicsCounterPassiveChannel',
        description = 'Fourth scalar counter channel',
        type = 'monitor',
        visibility = (),
        readpv = pvprefix + '.S5',
    ),
    c5 = device('nicos_sinq.devices.epics.detector.EpicsCounterPassiveChannel',
        description = 'Fifth scalar counter channel',
        type = 'monitor',
        visibility = (),
        readpv = pvprefix + '.S6',
    ),
    c6 = device('nicos_sinq.devices.epics.detector.EpicsCounterPassiveChannel',
        description = 'Sixth scalar counter channel',
        type = 'monitor',
        visibility = (),
        readpv = pvprefix + '.S7',
    ),
    c7 = device('nicos_sinq.devices.epics.detector.EpicsCounterPassiveChannel',
        description = 'Seventh scalar counter channel',
        type = 'monitor',
        visibility = (),
        readpv = pvprefix + '.S8',
    ),
    c8 = device('nicos_sinq.devices.epics.detector.EpicsCounterPassiveChannel',
        description = 'Eighth scalar counter channel',
        type = 'monitor',
        visibility = (),
        readpv = pvprefix + '.S9',
    ),
#    gen_timer = device('nicos.devices.generic.VirtualTimer',
#        description = 'Detector timer',
#        unit = 's',
#    ),

    det_south_hist=device(
        'nicos_sinq.devices.just_bin_it.JustBinItImage',
        description = 'The CDT image',
        hist_topic = 'POLDI_histogram1',
        data_topic = 'POLDI_detector1',
        command_topic = 'POLDI_histCommands1',
        brokers = ['linkafka01.psi.ch:9092'],
        source = 'poldi',
        unit = 'evts',
        hist_type ='2-D TOFSINQ',
        det_range = (1, 448),
        tof_range = (1, 480000),
        num_bins = 2000,
        rotation = 0,
    ),
    det_south_hist_folded = device('nicos_sinq.poldi.devices.poldi.PoldiFold',
                            description='Folded detector data',
                            rawimage='det_south_hist',
                            ),
#    det = device('nicos.devices.generic.Detector',
#        description = 'The just-bin-it histogrammer',
#        unit = '',
#        timers = ['elapsedtime'],
#        monitors = [
#            'monitor1', 'monitor2', 'monitor3', 'protoncount', 'c5', 'c6', 'c7', 'c8'
#        ],
#        images = ['cdt1_image'],
#    ),
    det = device('nicos_sinq.devices.detector.SinqDetector',
        description = 'EL737 counter box that counts neutrons and starts streaming events',
        startpv = pvprefix + '.CNT',
        pausepv = pvprefix + ':Pause',
        statuspv = pvprefix + ':Status',
        errormsgpv = pvprefix + ':MsgTxt',
        thresholdpv = pvprefix + ':Threshold',
        monitorpreset = 'monitorpreset',
        timepreset = 'timepreset',
        timers = ['elapsedtime'],
        monitors = [
            'monitor1', 'monitor2', 'monitor3', 'protoncount', 'c5', 'c6', 'c7', 'c8'
        ],
        images = ['det_south_hist', 'det_south_hist_folded'],
        liveinterval = 7,
        saveintervals = [60]
    ),

    jbi_liveview = device('nicos.devices.datasinks.LiveViewSink',
    ),
)
startupcode = """
SetDetectors(det)
"""
