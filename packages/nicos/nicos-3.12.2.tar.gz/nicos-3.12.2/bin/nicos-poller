#!/usr/bin/env python3
# *****************************************************************************
# NICOS, the Networked Instrument Control System of the MLZ
# Copyright (c) 2009-2025 by the NICOS contributors (see AUTHORS)
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# Module authors:
#   Georg Brandl <g.brandl@fz-juelich.de>
#
# *****************************************************************************

import argparse
import sys
from os import path

sys.path.insert(0, path.dirname(path.dirname(path.realpath(__file__))))

from nicos.services.poller.psession import PollerSession

parser = argparse.ArgumentParser()
parser.add_argument('-d', '--daemon', dest='daemon', action='store_true',
                    help='daemonize the poller processes')
parser.add_argument('-D', '--systemd', dest='daemon', action='store_const',
                    const='systemd', help='run in systemd service mode')
parser.add_argument('-S', '--setup', action='store', dest='setupname',
                    default='poller',
                    help="name of the setup, default is 'poller'")
parser.add_argument('setup', nargs=argparse.OPTIONAL, help=argparse.SUPPRESS)

opts = parser.parse_args()

if opts.setup:
    appname = 'poller-' + opts.setup
    args = [opts.setup]
else:
    appname = 'poller'
    args = []

sys.exit(PollerSession.run(appname,
                           setupname=opts.setupname,
                           maindevname='Poller',
                           start_args=args,
                           daemon=opts.daemon))
