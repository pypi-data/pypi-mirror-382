# coding: utf-8

from __future__ import absolute_import

from sunrise6g_opensdk.edgecloud.adapters.kubernetes.lib import util
from sunrise6g_opensdk.edgecloud.adapters.kubernetes.lib.models.base_model_ import Model


class GpuInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, gpu_memory: int = None, num_gpu: int = None):  # noqa: E501
        """GpuInfo - a model defined in Swagger

        :param gpu_memory: The gpu_memory of this GpuInfo.  # noqa: E501
        :type gpu_memory: int
        :param num_gpu: The num_gpu of this GpuInfo.  # noqa: E501
        :type num_gpu: int
        """
        self.swagger_types = {"gpu_memory": int, "num_gpu": int}

        self.attribute_map = {"gpu_memory": "gpuMemory", "num_gpu": "numGPU"}
        self._gpu_memory = gpu_memory
        self._num_gpu = num_gpu

    @classmethod
    def from_dict(cls, dikt) -> "GpuInfo":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GpuInfo of this GpuInfo.  # noqa: E501
        :rtype: GpuInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gpu_memory(self) -> int:
        """Gets the gpu_memory of this GpuInfo.

        GPU memory in mega bytes  # noqa: E501

        :return: The gpu_memory of this GpuInfo.
        :rtype: int
        """
        return self._gpu_memory

    @gpu_memory.setter
    def gpu_memory(self, gpu_memory: int):
        """Sets the gpu_memory of this GpuInfo.

        GPU memory in mega bytes  # noqa: E501

        :param gpu_memory: The gpu_memory of this GpuInfo.
        :type gpu_memory: int
        """
        if gpu_memory is None:
            raise ValueError("Invalid value for `gpu_memory`, must not be `None`")  # noqa: E501

        self._gpu_memory = gpu_memory

    @property
    def num_gpu(self) -> int:
        """Gets the num_gpu of this GpuInfo.

        Number of GPUs  # noqa: E501

        :return: The num_gpu of this GpuInfo.
        :rtype: int
        """
        return self._num_gpu

    @num_gpu.setter
    def num_gpu(self, num_gpu: int):
        """Sets the num_gpu of this GpuInfo.

        Number of GPUs  # noqa: E501

        :param num_gpu: The num_gpu of this GpuInfo.
        :type num_gpu: int
        """
        if num_gpu is None:
            raise ValueError("Invalid value for `num_gpu`, must not be `None`")  # noqa: E501

        self._num_gpu = num_gpu
