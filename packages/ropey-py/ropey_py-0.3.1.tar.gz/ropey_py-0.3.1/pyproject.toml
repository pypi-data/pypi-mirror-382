[build-system]
requires = ["maturin>=1.9,<2.0"]
build-backend = "maturin"

[project]
name = "ropey-py"
requires-python = ">=3.8"
description = "Python bindings for the Ropey library"
authors = [
    {name = "Ivan Kosilov", email = "idkosilov@gmail.com"}
]
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version"]
keywords = ["rope", "text", "editor", "buffer", "python", "rust"]
dependencies = []

[tool.maturin]
features = ["pyo3/extension-module"]

[dependency-groups]
dev = [
    "hypothesis>=6.113.0",
    "pytest>=8.3.5",
    "pytest-randomly>=3.15.0",
    "pytest-timeout>=2.4.0",
    "mypy>=1.14.1",
    "ruff>=0.13.3",
]

[tool.ruff]
# Ruff config: https://docs.astral.sh/ruff/settings
preview = true
fix = true
target-version = "py39"
line-length = 80

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "C90",  # maccabe
  "COM",  # flake8-commas
  "D",    # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",    # pycodestyle
  "ERA",  # flake8-eradicate
  "EXE",  # flake8-executable
  "F",    # pyflakes
  "FBT",  # flake8-boolean-trap
  "FLY",  # pyflint
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "LOG",  # flake8-logging
  "N",    # pep8-naming
  "PERF", # perflint
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # ruff
  "S",    # flake8-bandit
  "SIM",  # flake8-simpify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T100", # flake8-debugger
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]
ignore = [
  "COM812", # trailing comma, conflicts with `ruff format`
  "D100",   # missing docstring in public module
  "D104",   # missing docstring in public package
  "PLR6301"
]

flake8-quotes.inline-quotes = "single"
mccabe.max-complexity = 6
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["S101", "PLR2004", "F841"]

[tool.pytest.ini_options]
# pytest configuration:
# https://docs.pytest.org/en/stable/customize.html

# Timeout for tests, so they can not take longer
# than this amount of seconds.
# You should adjust this value to be as low as possible.
# Configuration:
# https://pypi.org/project/pytest-timeout/
timeout = 30

# Strict `@xfail` by default:
xfail_strict = true

# Directories that are not visited by pytest collector:
norecursedirs = [
  "*.egg", ".eggs", "dist", "build", "docs",
  ".tox", ".git", "__pycache__", ".hypothesis"
]

# You will need to measure your tests speed with `-n auto` and without it,
# so you can see whether it gives you any performance gain, or just gives
# you an overhead. See `docs/template/development-process.rst`.
addopts = "--strict-markers --strict-config --tb=short"

filterwarnings = [
  "error"
]

[mypy]
# Mypy configuration:
# https://mypy.readthedocs.io/en/latest/config_file.html
enable_error_code = [
  "truthy-bool",
  "truthy-iterable",
  "redundant-expr",
  "unused-awaitable",
  "ignore-without-code",
  "possibly-undefined",
  "redundant-self",
  "explicit-override",
  "mutable-override",
  "unimported-reveal",
]

explicit_package_bases = true
ignore_missing_imports = true
local_partial_types = true
strict = true
warn_unreachable = true
