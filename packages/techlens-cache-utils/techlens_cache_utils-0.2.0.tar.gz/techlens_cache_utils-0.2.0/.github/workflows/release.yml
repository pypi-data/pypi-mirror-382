name: "Python Release"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - id: black
      uses: psf/black@stable
      continue-on-error: true
    - id: black2
      if: steps.black.outcome == 'failure'
      uses: psf/black@stable
      with:
        options: ''
    - name: Annotate diff changes using reviewdog
      if: steps.black.outcome == 'failure'
      uses: reviewdog/action-suggester@v1
      with:
        tool_name: blackfmt
    - name: Fail on Linting Issue
      if: steps.black.outcome == 'failure'
      run: exit 1
    
  unit-tests:
    permissions:
      contents: 'read'
      id-token: 'write'
    strategy:
        matrix:
            os: [ubuntu-latest, macos-latest]
            python-version: ["3.10", "3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build hatchling setuptools
          --user
      - name: Make VERSION
        run: python make_version.py
      - name: install self
        run: pip install ".[dev]"
      - name: Unit Tests
        run: |
            echo "Attempting PyTest"
            pytest
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-and-publish:
    permissions:
      contents: 'read'
      id-token: 'write'
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Make VERSION
        run: python make_version.py
      - name: Build a binary wheel and a source tarball
        run: >-
          python3 -m
          build
          --sdist
          --wheel
          --outdir dist/
          .
      #- name: Publish distribution 📦 to Test PyPI
      #  uses: pypa/gh-action-pypi-publish@release/v1
      #  with:
      #    repository-url: https://test.pypi.org/legacy/
      - name: Build a binary wheel and a source tarball
        run: >-
            rm -rf dist && python3 -m
            build
            --sdist
            --wheel
            --outdir dist/
            .
      - name: Publish distribution 📦 to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
