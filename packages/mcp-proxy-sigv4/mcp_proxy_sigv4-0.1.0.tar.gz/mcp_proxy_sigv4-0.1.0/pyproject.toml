[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-proxy-sigv4"
version = "0.1.0"
description = "MCP proxy server with AWS SigV4 authentication support"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
    { name = "Jiaping Zeng" }
]
keywords = [
    "mcp",
    "proxy",
    "aws",
    "sigv4",
    "authentication"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastmcp>=2.10.0",
    "click>=8.0.0",
    "boto3>=1.26.0",
    "requests>=2.28.0",
    "requests-aws4auth>=1.1.0",
    "urllib3>=1.26.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
]

[project.scripts]
mcp-proxy-sigv4 = "mcp_proxy_sigv4.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_proxy_sigv4"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]


[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --maxfail=1"
asyncio_mode = "auto"

[dependency-groups]
dev = [
    "coverage>=7.10.7",
    "pytest-cov>=7.0.0",
]
