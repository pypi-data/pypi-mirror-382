[build-system]
requires = [
    'packaging>=24,<25',
    'setuptools>=77,<78',
    'wheel>=0.45,<0.46',
    'setuptools-git-versioning>=2,<3',
]

build-backend = 'setuptools.build_meta'

[project]
name = 'm3-db-utils'
description = 'Utils for working with database.'
license = 'Apache-2.0'
authors = [
  {name = 'Alexander Danilenko', email = 'a.danilenko@bars.group'},
]
readme = 'README.md'
requires-python = '>=3.9'
dependencies = [
    'Django>=1.11.29',
    'Pygments>=2.5.2',
    'sqlparse>=0.4.2',
    'm3_django_compatibility>=1.12.0,<2',
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Intended Audience :: Developers',
    'Environment :: Web Environment',
]
dynamic = ['version']

[project.urls]
Homepage = 'https://stash.bars-open.ru/projects/M3/repos/m3-db-utils/browse'
Repository = 'https://stash.bars-open.ru/scm/m3/m3-db-utils.git'

[project.optional-dependencies]
dev = [
    'isort==5.12.0',
    'ruff==0.12.1',
]
docs = [
    'sphinx>=7,<7.5',
    'sphinx-autodoc-typehints>=2,<2.5',
    'myst-parser>=3,<3.2',
    'sphinx_design>=0.6,<0.7',
]

[tool.setuptools.packages.find]
where = ['src']

[tool.setuptools.exclude-package-data]
m3_db_utils = ['tests', 'tests.*']

[tool.setuptools-git-versioning]
enabled = true

[tool.ruff]
target-version = 'py39'
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = ['F', 'E', 'D', 'W', 'S', 'N',]
ignore = [
    # Missing docstring in public module
    'D100',
    # Missing docstring in public package
    'D104',
    # Missing docstring in public nested class
    'D106',
    # Missing docstring in magic method
    'D105',
    # Missing docstring in __init__
    'D107',
    # 1 blank line required before class docstring
    'D203',
    # Multi-line docstring summary should start at the second line
    'D213',
    # Missing blank line after last section
    'D413',
    # Bad inline option
    'I001',
    # Use of assert detected (useless with pytest)
    'S101',
]
exclude = [
    '.bzr',
    '.direnv',
    '.eggs',
    '.git',
    '.git-rewrite',
    '.hg',
    '.idea',
    '.ipynb_checkpoints',
    '.mypy_cache',
    '.nox',
    '.pants.d',
    '.pyenv',
    '.pytest_cache',
    '.pytype',
    '.ruff_cache',
    '.svn',
    '.tox',
    '.venv',
    '.vscode',
    '__pypackages__',
    '_build',
    'buck-out',
    'build',
    'dist',
    'node_modules',
    'site-packages',
    'venv',
]

[tool.ruff.format]
quote-style = 'single'
indent-style = 'space'
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
'*/tests/*' = ['D']
'*/migrations/*' = ['D', 'E']

[tool.flake8]
max-line-length = 120
ignore = [
    # Missing docstring in public module
    'D100',
    # Missing docstring in public package
    'D104',
    # Missing docstring in public nested class
    'D106',
    # Missing docstring in __init__
    'D107',
    # One-line docstring should fit on one line with quotes
    'D200',
    # Line break before binary operator
    'W503',
    # use of assert detected (useless with pytest)
    'S101',
]
per-file-ignores = [
    # variable '...' in class scope should not be mixedCase
    # В SOAP моделях могут использоваться имена с различным написанием
    'wsmodel.py:N815',
    # function name '...' should be lowercase
    # SOAP методы могут именоваться разными способами
    'wsapi.py:N802,N815',
]
exclude = [
    'venv',
]
max-complexity = 10

[tool.pylint]
score = 'no'
msg-template = '{path}:{line} {msg} ({symbol})'
disable = 'all'
enable = [
    'import-error',
    'no-name-in-module',
    'undefined-variable',
    'undefined-all-variable',
]

extension-pkg-whitelist = [
    'lxml',
]