[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fakeai"
version = "0.3.2"
description = "FakeAI: Rapid Development and Testing for AI Infrastructure"
authors = [
    {name = "Anthony Casagrande"}
]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "fastapi>=0.103.0",
    "uvicorn>=0.23.0",
    "hypercorn>=0.16.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "numpy>=1.24.0",
    "faker>=13.0.0",
    "python-multipart>=0.0.9",
    "cyclopts>=3.0.0",
    "aiohttp>=3.9.0",
]

[project.urls]
"Homepage" = "https://github.com/ajcasagrande/fakeai"
"Bug Tracker" = "https://github.com/ajcasagrande/fakeai/issues"
"Documentation" = "https://github.com/ajcasagrande/fakeai#readme"
"Source Code" = "https://github.com/ajcasagrande/fakeai"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "openai>=1.0.0",
    "httpx>=0.24.0",
]
llm = [
    "tiktoken>=0.5.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
]
embeddings = [
    "sentence-transformers>=2.2.0",
    "torch>=2.0.0",
]
vector = [
    "faiss-cpu>=1.7.4",
    "numpy>=1.24.0",
]
all = [
    "fakeai[dev,llm,embeddings,vector]",
]
publish = [
    "build>=1.0.0",
    "twine>=4.0.0",
]

[tool.setuptools]
packages = {find = {}}
package-dir = {"" = "."}
include-package-data = true

[tool.setuptools.package-data]
fakeai = ["py.typed"]

[tool.setuptools.exclude-package-data]
fakeai = ["__pycache__/*"]

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
ignore_missing_imports = true
no_implicit_optional = true
strict_optional = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--disable-warnings",
    "-ra",
    "--color=yes",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests for API endpoints",
    "service: Service layer tests",
    "behavior: Behavior-focused tests",
    "edge_case: Edge case and error handling tests",
    "slow: Tests that take significant time",
    "auth: Authentication-related tests",
    "streaming: Streaming response tests",
    "multimodal: Multi-modal content tests",
    "metrics: Metrics and monitoring tests",
    "prompt_caching: Prompt caching tests",
    "stress: Stress and load tests for performance validation",
    "server_config: Configure server settings for test",
    "dynamo: AI-Dynamo LLM inference metrics tests",
]
log_cli = false
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:pydantic",
]

[project.scripts]
fakeai = "fakeai.cli:main"
fakeai-server = "fakeai.cli:main"  # Deprecated: kept for backward compatibility
