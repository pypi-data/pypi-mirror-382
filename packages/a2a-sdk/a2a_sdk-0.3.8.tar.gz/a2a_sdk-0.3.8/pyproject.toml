[project]
name = "a2a-sdk"
dynamic = ["version"]
description = "A2A Python SDK"
readme = "README.md"
license = "Apache-2.0"
authors = [{ name = "Google LLC", email = "googleapis-packages@google.com" }]
requires-python = ">=3.10"
keywords = ["A2A", "A2A SDK", "A2A Protocol", "Agent2Agent", "Agent 2 Agent"]
dependencies = [
  "httpx>=0.28.1",
  "httpx-sse>=0.4.0",
  "pydantic>=2.11.3",
  "protobuf>=5.29.5",
  "google-api-core>=1.26.0",
]

classifiers = [
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: Apache Software License",
]

[project.optional-dependencies]
http-server = ["fastapi>=0.115.2", "sse-starlette", "starlette"]
encryption = ["cryptography>=43.0.0"]
grpc = ["grpcio>=1.60", "grpcio-tools>=1.60", "grpcio_reflection>=1.7.0"]
telemetry = ["opentelemetry-api>=1.33.0", "opentelemetry-sdk>=1.33.0"]
postgresql = ["sqlalchemy[asyncio,postgresql-asyncpg]>=2.0.0"]
mysql = ["sqlalchemy[asyncio,aiomysql]>=2.0.0"]
sqlite = ["sqlalchemy[asyncio,aiosqlite]>=2.0.0"]

sql = ["a2a-sdk[postgresql,mysql,sqlite]"]

all = [
  "a2a-sdk[http-server]",
  "a2a-sdk[sql]",
  "a2a-sdk[encryption]",
  "a2a-sdk[grpc]",
  "a2a-sdk[telemetry]",
]

[project.urls]
homepage = "https://a2a-protocol.org/"
repository = "https://github.com/a2aproject/a2a-python"
changelog = "https://github.com/a2aproject/a2a-python/blob/main/CHANGELOG.md"
documentation = "https://a2a-protocol.org/latest/sdk/python/"

[tool.hatch.build.targets.wheel]
packages = ["src/a2a"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-ra --strict-markers"
markers = [
  "asyncio: mark a test as a coroutine that should be run by pytest-asyncio",
]

[tool.pytest-asyncio]
mode = "strict"

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.hatch.build.targets.sdist]
exclude = ["tests/"]

[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"

[dependency-groups]
dev = [
  "datamodel-code-generator>=0.30.0",
  "mypy>=1.15.0",
  "pytest>=8.3.5",
  "pytest-asyncio>=0.26.0",
  "pytest-cov>=6.1.1",
  "pytest-mock>=3.14.0",
  "respx>=0.20.2",
  "ruff>=0.12.8",
  "uv-dynamic-versioning>=0.8.2",
  "types-protobuf",
  "types-requests",
  "pre-commit",
  "fastapi>=0.115.2",
  "sse-starlette",
  "starlette",
  "pyupgrade",
  "autoflake",
  "no_implicit_optional",
  "trio",
  "uvicorn>=0.35.0",
]

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[tool.mypy]
plugins = ['pydantic.mypy']

[tool.pyright]
include = ["src"]
exclude = [
  "**/__pycache__",
  "**/dist",
  "**/build",
  "**/node_modules",
  "**/venv",
  "**/.venv",
  "src/a2a/grpc/",
]
reportMissingImports = "none"
reportMissingModuleSource = "none"
