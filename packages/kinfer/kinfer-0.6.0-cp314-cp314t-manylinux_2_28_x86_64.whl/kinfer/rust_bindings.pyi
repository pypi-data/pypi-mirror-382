# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins
import datetime
import numpy
import numpy.typing
import typing

class ModelProviderABC:
    def __new__(cls) -> ModelProviderABC: ...
    def pre_fetch_inputs(self, input_types:typing.Sequence[builtins.str], metadata:PyModelMetadata) -> None: ...
    def get_inputs(self, input_types:typing.Sequence[builtins.str], metadata:PyModelMetadata) -> builtins.dict[builtins.str, numpy.typing.NDArray[numpy.float32]]: ...
    def take_action(self, action:numpy.typing.NDArray[numpy.float32], metadata:PyModelMetadata) -> None: ...

class PyInputType:
    def __new__(cls, input_type:builtins.str) -> PyInputType: ...
    def get_name(self) -> builtins.str: ...
    def get_shape(self, metadata:PyModelMetadata) -> builtins.list[builtins.int]: ...
    def __repr__(self) -> builtins.str: ...
    def __eq__(self, other:typing.Any) -> builtins.bool: ...

class PyModelMetadata:
    def __new__(self, joint_names:typing.Sequence[builtins.str], command_names:typing.Sequence[builtins.str], carry_size:typing.Sequence[builtins.int]) -> PyModelMetadata: ...
    def to_json(self) -> builtins.str: ...
    def __repr__(self) -> builtins.str: ...
    def __eq__(self, other:typing.Any) -> builtins.bool: ...

class PyModelProvider:
    ...

class PyModelRunner:
    def __new__(cls, model_path:builtins.str, provider:ModelProviderABC, pre_fetch_time_ms:typing.Optional[builtins.int]) -> PyModelRunner: ...
    def run(self, dt:datetime.timedelta, total_runtime:typing.Optional[datetime.timedelta]=None, total_steps:typing.Optional[builtins.int]=None) -> None: ...

def get_version() -> builtins.str: ...

def metadata_from_json(json:builtins.str) -> PyModelMetadata: ...

