Metadata-Version: 2.4
Name: aynlp
Version: 0.1.4
Summary: AYNLP: A lightweight NLP toolkit built by Ankit and Yash for tokenization, stemming, lemmatization, and more. Visit https://github.com/aijadugar/AYNLP to explore the project.
Home-page: https://github.com/aijadugar/AYNLP
Author: Ankit Bari <ankitbari@zohomail.in>, Yash Kerkar <kerkaryash5@gmail.com>
Author-email: Ankit Bari <ankitbari@zohomail.in>, Yash Kerkar <kerkaryash5@gmail.com>
License: MIT
Keywords: python,aynlp,nlp,natural-language-processing,tokenization,lemmatization,stemming,pos-tagging,ner,sentiment-analysis,text-processing,Ankit Bari,Yash Kerkar
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: numpy<2.0,>=1.26.0
Requires-Dist: scipy<1.28.0,>=1.11.0
Requires-Dist: spacy>=3.7.0
Requires-Dist: nltk>=3.8.1
Requires-Dist: tabulate>=0.9.0
Requires-Dist: textblob>=0.17.1
Dynamic: author
Dynamic: home-page
Dynamic: requires-python

# 🧩 AYNLP - Advanced Yet Simple NLP Toolkit

**AYNLP** is a lightweight, modular Natural Language Processing (NLP) library built for educational, research, and open-source projects.  
It unifies core NLP components - Tokenization, Lemmatization, POS tagging, Named Entity Recognition, and Sentiment Analysis - into a single, easy-to-use pipeline.

---

## 🚀 Features

✅ **Tokenizer** - Splits text into structured tokens  
✅ **Stopword Remover** - Filters out common stopwords  
✅ **Lemmatizer** - Converts words to their base form  
✅ **Stemmer** - Performs root-word stemming  
✅ **POS Tagger** - Identifies grammatical roles  
✅ **NER** - Extracts named entities (people, places, etc.)  
✅ **Sentiment Analyzer** - Detects text polarity (positive, neutral, negative)  
✅ **Beautiful Output** - Displays classical table results with emojis 🧠📊

---

## ⚙️ Installation

```bash
# Clone the repository
git clone https://github.com/aijadugar/AYNLP.git
cd AYNLP

# (Optional) Create a virtual environment
python -m venv venv
source venv/bin/activate   # On Windows: venv\Scripts\activate

# Install dependencies
pip install -r requirements.txt

>>>from aynlp import AYNLP

>>>aynlp = AYNLP()
>>>print(aynlp.analyze("The yesterdays festival was awesome."))

# Output

╒══════════════════╤══════════════════════════════════════════════════════════╕
│ 🔍 Feature       │ 📊 Result                                                │
╞══════════════════╪══════════════════════════════════════════════════════════╡
│ 🧩 Tokens        │ The, yesterdays, festival, was, awesome, .               │
├──────────────────┼──────────────────────────────────────────────────────────┤
│ 🚫 Filtered ...  │ yesterdays, festival, awesome, .                         │
├──────────────────┼──────────────────────────────────────────────────────────┤
│ 🔤 Lemmas        │ The, yesterday, festival, be, awesome, .                 │
├──────────────────┼──────────────────────────────────────────────────────────┤
│ 🌱 Stems         │ the, yesterday, festiv, wa, awesom, .                    │
├──────────────────┼──────────────────────────────────────────────────────────┤
│ 🏷️ POS Tags      │ The/DT, yesterdays/NNS, festival/NN, was/VBD, awesome/JJ│
├──────────────────┼──────────────────────────────────────────────────────────┤
│ 🧠 Entities      │ —                                                        │
├──────────────────┼──────────────────────────────────────────────────────────┤
│ 💬 Sentiment     │ 😊 Positive                                              │
╘══════════════════╧══════════════════════════════════════════════════════════╛

