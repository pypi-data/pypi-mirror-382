[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gittsinit"
version = "1.0.0"
description = "A powerful Python script that automatically creates Git commits with timestamps based on file creation or modification dates"
readme = "README.md"
license = {file = "LICENCE"}
authors = [
    {name = "bxff"}
]
maintainers = [
    {name = "bxff"}
]
keywords = ["git", "commit", "timestamp", "version-control", "automation"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Version Control :: Git",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "python-dotenv>=0.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "types-requests>=2.25.0",
]

[project.urls]
Homepage = "https://github.com/bxff/git-commit-on-filestamp"
Documentation = "https://github.com/bxff/git-commit-on-filestamp#readme"
Repository = "https://github.com/bxff/git-commit-on-filestamp.git"
"Bug Reports" = "https://github.com/bxff/git-commit-on-filestamp/issues"

[project.scripts]
gittsinit = "gittsinit:main"

[tool.setuptools]
py-modules = ["main"]

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
# Don't require type annotations for all functions to avoid blocking the build
disallow_untyped_defs = false
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_ignores = true