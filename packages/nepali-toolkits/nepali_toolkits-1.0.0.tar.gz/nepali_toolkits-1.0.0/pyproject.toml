# pyproject.toml
[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nepali-toolkits"

# Version is provided dynamically from src/nepali_toolkit/_version.py
dynamic = ["version", "readme"]
description = "Production-ready utilities for Nepali: BS calendar & holidays, script tools, gazetteer, units, treks."
authors = [{ name = "Sujit Khanal", email = "thesujitkhanal@gmail.com" }]
license = { text = "MIT" }
requires-python = ">=3.9"

dependencies = [
  "python-dateutil>=2.8.2",
  "pytz>=2024.1",
  "regex>=2024.5.15",
  "pydantic>=2.7"
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Topic :: Software Development :: Libraries",
  "Topic :: Text Processing :: Linguistic",
  "Natural Language :: English",
  "Natural Language :: Nepali",
]

[project.urls]
Homepage = "https://github.com/sujit-codezen/nepali_toolkit"
"Bug Tracker" = "https://github.com/sujit-codezen/nepali_toolkit/issues"
Source = "https://github.com/sujit-codezen/nepali_toolkit"

[project.optional-dependencies]
dev = [
  "pytest>=7.0",
  "pytest-cov>=4.0",
  "mypy>=1.0",
  "ruff>=0.4",
  "build>=1.0",
  "twine>=4.0",
]

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
# If you need to exclude tests or examples inside src, uncomment:
# exclude = ["*tests*", "*examples*"]

# Package data (JSON datasets shipped inside wheels/sdist)
[tool.setuptools.package-data]
"nepali_toolkit.bs" = ["data/*.json"]
"nepali_toolkit.scripts" = ["data/*.json"]
"nepali_toolkit.holiday" = ["data/*.json"]
"nepali_toolkit.gazetteer" = ["data/*.json"]
"nepali_toolkit.trek" = ["data/*.json"]
"nepali_toolkit.units" = ["data/*.json"]

# Dynamic fields (PEP 621) resolved by setuptools
[tool.setuptools.dynamic]
version = { attr = "nepali_toolkit._version.__version__" }
readme = { file = ["README.md"], content-type = "text/markdown" }

# ---------- Tooling (optional but handy) ----------

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E","F","I","UP","B"]
ignore = ["E203"]  # if you like black-style slicing
extend-exclude = ["build", "dist", ".venv"]

[tool.mypy]
python_version = "3.9"
warn_unused_configs = true
warn_return_any = true
warn_unused_ignores = true
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
pretty = true

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
