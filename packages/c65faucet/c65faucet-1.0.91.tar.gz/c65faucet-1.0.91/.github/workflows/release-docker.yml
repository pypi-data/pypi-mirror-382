name: Build docker images for release

on:
  release:
    types:
      - published

env:
  PLATFORMS: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8

jobs:
  faucet-docker-image:
    name: "Build faucet docker image"
    runs-on: ubuntu-latest
    environment:
      name: "release"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
      - name: Set up qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Run buildx
        run: |
          docker buildx build \
            --tag c65sdn/faucet:${{ github.event.release.tag_name }} \
            --tag c65sdn/faucet:latest \
            --platform ${{ env.PLATFORMS }} \
            --output "type=registry" \
            --file Dockerfile.faucet \
            .

  gauge-docker-image:
    name: "Build gauge docker image"
    runs-on: ubuntu-latest
    environment:
      name: "release"
    needs: faucet-docker-image
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
      - name: Set up qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Run buildx
        run: |
          docker buildx build \
            --tag c65sdn/gauge:${{ github.event.release.tag_name }} \
            --tag c65sdn/gauge:latest \
            --platform ${{ env.PLATFORMS }} \
            --output "type=registry" \
            --file Dockerfile.gauge \
            .

  rabbitmq-adapter-docker-image:
    name: "Build rabbitmq adapter docker image"
    runs-on: ubuntu-latest
    environment:
      name: "release"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
      - name: Set up qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Run buildx
        run: |
          cd adapters/vendors/rabbitmq/
          docker buildx build \
            --tag c65sdn/event-adapter-rabbitmq:${{ github.event.release.tag_name }} \
            --tag c65sdn/event-adapter-rabbitmq:latest \
            --platform ${{ env.PLATFORMS }} \
            --output "type=registry" \
            --file Dockerfile \
            .

  faucetagent-adapter-docker-image:
    name: "Build faucetagent adapter docker image"
    runs-on: ubuntu-latest
    environment:
      name: "release"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
      - name: Set up qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Run buildx
        run: |
          cd adapters/vendors/faucetagent/
          docker buildx build \
            --tag c65sdn/event-adapter-faucetagent:${{ github.event.release.tag_name }} \
            --tag c65sdn/event-adapter-faucetagent:latest \
            --platform linux/amd64 \
            --output "type=registry" \
            --file Dockerfile \
            .
