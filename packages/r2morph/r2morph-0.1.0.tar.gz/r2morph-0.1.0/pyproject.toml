[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "r2morph"
version = "0.1.0"
description = "A metamorphic binary transformation engine based on r2pipe and radare2"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Marc Rivero", email = "mriverolopez@gmail.com"}
]
maintainers = [
    {name = "Marc Rivero", email = "mriverolopez@gmail.com"}
]
keywords = [
    "binary-analysis",
    "metamorphic",
    "code-transformation",
    "radare2",
    "r2pipe",
    "reverse-engineering",
    "binary-mutation"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Security",
    "Topic :: Software Development :: Disassemblers",
    "Topic :: System :: Software Distribution",
]

dependencies = [
    "r2pipe>=1.9.0",
    "capstone>=5.0.0",
    "keystone-engine>=0.9.2",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "ipython>=8.12.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]

[project.scripts]
r2morph = "r2morph.cli:main"

[project.urls]
Homepage = "https://github.com/seifreed/r2morph"
Documentation = "https://github.com/seifreed/r2morph/blob/main/README.md"
Repository = "https://github.com/seifreed/r2morph"
Issues = "https://github.com/seifreed/r2morph/issues"
"Source Code" = "https://github.com/seifreed/r2morph"
"Bug Tracker" = "https://github.com/seifreed/r2morph/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["r2morph*"]
exclude = ["tests*", "docs*", "examples*", "scripts*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=r2morph",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312", "py313"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[tool.coverage.run]
source = ["r2morph"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
