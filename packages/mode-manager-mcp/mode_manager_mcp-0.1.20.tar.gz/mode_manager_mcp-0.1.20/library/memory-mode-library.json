{
  "name": "Mode Manager MCP Library",
  "description": "A curated library of VS Code chatmodes and instructions for GitHub Copilot, featuring top-rated content from the GitHub community",
  "version": "2.0.0",
  "last_updated": "2025-08-01",
  "chatmodes": [
    {
      "name": "Beast Mode 3.1",
      "description": "Advanced autonomous coding agent with extensive tool access and iterative problem-solving capabilities",
      "author": "burkeholland",
      "category": "development",
      "tags": ["autonomous", "coding", "agent", "tools", "iteration"],
      "content_location": "https://gist.githubusercontent.com/burkeholland/88af0249c4b6aff3820bf37898c8bacf/raw/ffbd359e66bda99ccfb2e1e9413e71adc2b8cb23/beastmode3.1.chatmode.md",
      "install_name": "Beast Mode.chatmode.md",
      "license": "Public Domain"
    },
    {
      "name": "Security Expert",
      "description": "Cybersecurity specialist for secure coding practices and vulnerability assessment",
      "author": "dfinke",
      "category": "security",
      "tags": ["security", "cybersecurity", "vulnerabilities", "secure-coding"],
      "content_location": "https://raw.githubusercontent.com/dfinke/awesome-copilot-chatmodes/main/chatmodes/security/security-scout/security-scout.chatmode.md",
      "install_name": "Security Expert.chatmode.md",
      "license": "MIT"
    },
    {
      "name": "Prompt Engineer",
      "description": "Advanced prompt engineering specialist for optimizing AI interactions and instruction design",
      "author": "doggy8088",
      "category": "ai-engineering",
      "tags": ["prompt-engineering", "ai-optimization", "instruction-design", "copilot"],
      "content_location": "https://raw.githubusercontent.com/doggy8088/github-copilot-configs/main/chatmodes/prompt-engineer.chatmode.md",
      "install_name": "Prompt Engineer.chatmode.md",
      "license": "Open Source"
    },
    {
      "name": "Azure Architect",
      "description": "Azure cloud architecture specialist with deep expertise in cloud solutions and best practices",
      "author": "doggy8088",
      "category": "architecture",
      "tags": ["azure", "cloud", "architecture", "solutions", "best-practices"],
      "content_location": "https://raw.githubusercontent.com/doggy8088/github-copilot-configs/main/chatmodes/azure-principal-architect.chatmode.md",
      "install_name": "Azure Architect.chatmode.md",
      "license": "Open Source"
    },
    {
      "name": "Debug Expert",
      "description": "Specialized debugging assistant for identifying and resolving complex coding issues",
      "author": "doggy8088",
      "category": "development",
      "tags": ["debugging", "troubleshooting", "problem-solving", "analysis"],
      "content_location": "https://raw.githubusercontent.com/doggy8088/github-copilot-configs/main/chatmodes/debug.chatmode.md",
      "install_name": "Debug Expert.chatmode.md",
      "license": "Open Source"
    },
    {
      "name": "Clean Code Expert",
      "description": "Code quality specialist focusing on clean coding practices and maintainable solutions",
      "author": "doggy8088",
      "category": "development",
      "tags": ["clean-code", "refactoring", "quality", "maintainability"],
      "content_location": "https://raw.githubusercontent.com/doggy8088/github-copilot-configs/main/chatmodes/janitor.chatmode.md",
      "install_name": "Clean Code Expert.chatmode.md",
      "license": "Open Source"
    },
    {
      "name": "Test Writer",
      "description": "Comprehensive test writing assistant focusing on best practices and quality",
      "author": "dfinke",
      "category": "development",
      "tags": ["testing", "unit-tests", "quality", "best-practices", "analysis"],
      "content_location": "https://raw.githubusercontent.com/dfinke/awesome-copilot-chatmodes/main/chatmodes/testing/test-writer/test-writer.chatmode.md",
      "install_name": "Test Writer.chatmode.md",
      "license": "MIT"
    },
    {
      "name": "Prompt Designer",
      "description": "Expert in crafting effective prompts for large language models with strategic frameworks",
      "author": "dfinke",
      "category": "ai-engineering",
      "tags": ["prompt-design", "llm", "ai-optimization", "strategy"],
      "content_location": "https://raw.githubusercontent.com/dfinke/awesome-copilot-chatmodes/main/chatmodes/prompts/prompt-designer/prompt-designer.chatmode.md",
      "install_name": "Prompt Designer.chatmode.md",
      "license": "MIT"
    },
    {
      "name": "Security Expert",
      "description": "Cybersecurity specialist for secure coding practices and vulnerability assessment",
      "author": "dfinke",
      "category": "security",
      "tags": ["security", "cybersecurity", "vulnerabilities", "secure-coding"],
      "content_location": "https://raw.githubusercontent.com/dfinke/awesome-copilot-chatmodes/main/personas/Security%20Expert/chatmode.md",
      "install_name": "Security Expert.chatmode.md",
      "license": "MIT"
    },
    {
      "name": "Expert .NET Engineer",
      "description": "Advanced .NET development specialist with deep C# and framework expertise",
      "author": "doggy8088",
      "category": "development",
      "tags": ["dotnet", "csharp", "expert", "enterprise", "development"],
      "content_location": "https://raw.githubusercontent.com/doggy8088/github-copilot-configs/main/chatmodes/expert-dotnet-software-engineer.chatmode.md",
      "install_name": "Expert .NET Engineer.chatmode.md",
      "license": "Open Source"
    }
  ],
  "instructions": [
    {
      "name": "Commit Message Standards",
      "description": "Professional git commit message guidelines and automation patterns",
      "author": "SurfaceW",
      "category": "git",
      "tags": ["git", "commits", "standards", "automation", "workflow"],
      "content_location": "https://raw.githubusercontent.com/SurfaceW/arno-prompts/main/vibe-coding/commit.instruction.md",
      "install_name": "Commit Standards.instructions.md",
      "license": "Open Source"
    },
    {
      "name": "Frontend Development Rules",
      "description": "Comprehensive frontend development guidelines covering React, TypeScript, state management, and modern patterns",
      "author": "etereo-io",
      "category": "frontend",
      "tags": ["frontend", "react", "typescript", "guidelines", "architecture"],
      "content_location": "https://raw.githubusercontent.com/etereo-io/vite-react-ts-scaffolding/main/docs/rules/frontend/stack.instruction.md",
      "install_name": "Frontend Rules.instructions.md",
      "license": "Open Source"
    },
    {
      "name": "Python Framework Patterns",
      "description": "Advanced Python framework patterns and best practices for modern development",
      "author": "J-Tech-Japan",
      "category": "python",
      "tags": ["python", "frameworks", "patterns", "enterprise"],
      "content_location": "https://raw.githubusercontent.com/J-Tech-Japan/Sekiban/main/Samples/Tutorials/OrleansSekiban/Sekiban.Instruction.md",
      "install_name": "Python Patterns.instructions.md",
      "license": "Apache 2.0"
    },
    {
      "name": "AI Development Debugging",
      "description": "Comprehensive AI development debugging patterns and SDLC integration",
      "author": "ParkerRex",
      "category": "ai-development",
      "tags": ["ai", "debugging", "sdlc", "patterns", "frameworks"],
      "content_location": "https://raw.githubusercontent.com/ParkerRex/ai-sdlc/main/debug-prompts/2.debug.instruction.md",
      "install_name": "AI Debug Patterns.instructions.md",
      "license": "MIT"
    },
    {
      "name": "Git Workflow Standards",
      "description": "Enhanced git workflow and collaboration patterns based on industry best practices",
      "author": "etereo-io",
      "category": "git",
      "tags": ["git", "workflow", "collaboration", "best-practices", "enterprise"],
      "content_location": "https://raw.githubusercontent.com/etereo-io/vite-react-ts-scaffolding/main/docs/rules/git.instruction.md",
      "install_name": "Git Workflow.instructions.md",
      "license": "Open Source"
    },
    {
      "name": "Copilot Usage Guidelines",
      "description": "Best practices for effective GitHub Copilot usage and prompt engineering",
      "author": "doggy8088",
      "category": "ai-engineering",
      "tags": ["copilot", "ai", "prompt-engineering", "best-practices"],
      "content_location": "https://raw.githubusercontent.com/doggy8088/github-copilot-configs/main/instructions/copilot-usage.instruction.md",
      "install_name": "Copilot Usage.instructions.md",
      "license": "Open Source"
    },
    {
      "name": "TypeScript Best Practices",
      "description": "Comprehensive TypeScript coding standards and patterns for enterprise development",
      "author": "etereo-io",
      "category": "typescript",
      "tags": ["typescript", "javascript", "best-practices", "enterprise"],
      "content_location": "https://raw.githubusercontent.com/etereo-io/vite-react-ts-scaffolding/main/docs/rules/typescript.instruction.md",
      "install_name": "TypeScript Best Practices.instructions.md",
      "license": "Open Source"
    },
    {
      "name": "API Design Guidelines",
      "description": "RESTful API design principles and documentation standards",
      "author": "pamelafox",
      "category": "api-design",
      "tags": ["api", "rest", "design", "documentation", "standards"],
      "content_location": "https://raw.githubusercontent.com/pamelafox/awesome-copilot-instructions/main/api-design/guidelines.instruction.md",
      "install_name": "API Design Guidelines.instructions.md",
      "license": "MIT"
    },
    {
      "name": "Testing Strategy",
      "description": "Comprehensive testing patterns and strategies for modern applications",
      "author": "etereo-io", 
      "category": "testing",
      "tags": ["testing", "unit-tests", "integration", "quality", "strategy"],
      "content_location": "https://raw.githubusercontent.com/etereo-io/vite-react-ts-scaffolding/main/docs/rules/testing.instruction.md",
      "install_name": "Testing Strategy.instructions.md",
      "license": "Open Source"
    },
    {
      "name": "Security Checklist",
      "description": "Security best practices checklist for web applications and APIs",
      "author": "community",
      "category": "security",
      "tags": ["security", "checklist", "vulnerabilities", "web-security"],
      "content_location": "https://raw.githubusercontent.com/security-first/copilot-security-patterns/main/security-checklist.instruction.md",
      "install_name": "Security Checklist.instructions.md",
      "license": "Open Source"
    }
  ],
  "categories": [
    {
      "id": "development",
      "name": "Development",
      "description": "General development and coding assistance"
    },
    {
      "id": "architecture",
      "name": "Architecture", 
      "description": "System design and architectural patterns"
    },
    {
      "id": "ai-engineering",
      "name": "AI Engineering",
      "description": "AI and prompt engineering specialization"
    },
    {
      "id": "web-development",
      "name": "Web Development",
      "description": "Full-stack web development"
    },
    {
      "id": "frontend",
      "name": "Frontend",
      "description": "Frontend development and UI/UX"
    },
    {
      "id": "git",
      "name": "Git & Version Control",
      "description": "Version control and collaboration"
    },
    {
      "id": "python",
      "name": "Python",
      "description": "Python-specific guidance and patterns"
    },
    {
      "id": "ai-development",
      "name": "AI Development",
      "description": "AI application development and integration"
    },
    {
      "id": "security",
      "name": "Security",
      "description": "Security best practices and guidelines"
    },
    {
      "id": "leadership",
      "name": "Leadership",
      "description": "Technical leadership and management"
    },
    {
      "id": "devops",
      "name": "DevOps",
      "description": "Infrastructure and deployment automation"
    },
    {
      "id": "typescript",
      "name": "TypeScript",
      "description": "TypeScript development patterns"
    },
    {
      "id": "api-design",
      "name": "API Design",
      "description": "API architecture and design patterns"
    },
    {
      "id": "testing",
      "name": "Testing",
      "description": "Testing strategies and quality assurance"
    }
  ],
  "submission_guidelines": {
    "chatmodes": {
      "required_frontmatter": ["description", "tools"],
      "format": "YAML frontmatter + markdown content",
      "file_extension": ".chatmode.md"
    },
    "instructions": {
      "required_frontmatter": ["description"],
      "format": "YAML frontmatter + markdown content", 
      "file_extension": ".instructions.md"
    },
    "contribution_process": "Submit a pull request to the repository with your new chatmode or instruction file"
  },
  "repository_info": {
    "owner": "NiclasOlofsson",
    "repo": "mode-manager-mcp",
    "library_url": "https://raw.githubusercontent.com/NiclasOlofsson/mode-manager-mcp/main/library/memory-mode-library.json"
  }
}
