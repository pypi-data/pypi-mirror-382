stages:
    - test
    - release

variables:
  GIT_DEPTH: "0"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

flake8:
  stage: test
  image: python:3.11
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_MAIN_BRANCH'
      when: on_success
    - if: '$CI_COMMIT_REF_NAME == $CI_DEVELOP_BRANCH'
      when: on_success
  script:
    - pip install flake8
    - flake8 --max-line-length=120 .
  allow_failure: true

update_version_tag:
  stage: release
  image: alpine:latest
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_MAIN_BRANCH'
      when: on_success
  script:
    - chmod +x ./ci/update_tag.sh
    - ./ci/update_tag.sh
  artifacts:
    paths:
      - version.txt
    expire_in: 1 hour

publish_pypi_module:
  stage: release
  image: python:3.11
  variables:
    GIT_DEPTH: "0"
  rules:
    - if: '$CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/'
      when: on_success
  before_script:
    - apt-get update && apt-get install -y git
    - git fetch --tags --prune || true
    - echo "CI_COMMIT_TAG=${CI_COMMIT_TAG}"
    - git describe --exact-match --tags || echo "No exact tag on this commit"
  script:
    - python -m pip install -U pip
    - python -m pip install -U "setuptools>=70" wheel "setuptools-scm[toml]>=8" build twine
    - rm -rf build dist *.egg-info src/*.egg-info
    - export SETUPTOOLS_SCM_PRETEND_VERSION="$CI_COMMIT_TAG"
    - python -c "import sys; import setuptools_scm; print('setuptools_scm.get_version() ->', setuptools_scm.get_version())"
    - python -m build --no-isolation
    - 'test -n "${CI_COMMIT_TAG}" && ls dist | grep -q "${CI_COMMIT_TAG}" || { echo "ERROR: build no contiene ${CI_COMMIT_TAG}"; ls -l dist; exit 2; }'
    - twine check dist/*
    - |
      export TWINE_USERNAME="__token__"
      export TWINE_PASSWORD="$PYPI_API_TOKEN"
      python -m twine upload --verbose dist/*
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .cache/pip
