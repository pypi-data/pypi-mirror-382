[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "policystack-cli"
version = "0.4.0"
description = "CLI tool for PolicyStack marketplace - discover, search and install configuration templates"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "Asa Moore", email = "asmoore@redhat.com"},
]
maintainers = [
    {name = "Asa Moore", email = "asmoore@redhat.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
]
keywords = ["policystack", "openshift", "acm", "gitops", "kubernetes"]
requires-python = ">=3.8"
dependencies = [
    "click>=8.1.0",
    "rich>=13.0.0",
    "pyyaml>=6.0",
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "tabulate>=0.9.0",
    "packaging>=23.0",
    "GitPython>=3.1.0",
    "ruamel.yaml>=0.17.0",
    "deepdiff",
    "merge3>=0.0.13",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "tox>=4.0.0",
    "pre-commit>=3.0.0",
    "types-PyYAML",
    "types-tabulate",
]

[project.urls]
Homepage = "https://github.com/PolicyStack/cli"
Documentation = "https://github.com/PolicyStack/cli"
Repository = "https://github.com/PolicyStack/cli"
Issues = "https://github.com/PolicyStack/cli/issues"

[project.scripts]
policystack = "policystack.cli:main"
pstack = "policystack.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["policystack*"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
strict_optional = true
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-ra -q --strict-markers --cov=policystack --cov-report=term-missing"

[tool.coverage.run]
source = ["policystack"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*Protocol:",
    "@abstractmethod",
]
