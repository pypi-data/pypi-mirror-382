[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"





[tool.poetry]
name = "usool-e-ghalib"
version = "0.1.0"
description = "A comprehensive NLP toolkit combining all major Python NLP libraries"
authors = ["Sunil Kumar Pradhan <sunilkumarweb47@gmail.com>"]
readme = "README.md"
license = "MIT"


keywords = ["nlp", "natural-language-processing", "machine-learning", "ai", "text-analysis"]


classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]


packages = [{include = "nlp_suite", from = "src"}]

[tool.poetry.dependencies]
python = "^3.8.1"
# Core essentials that everyone gets
numpy = "^1.21.0"
pandas = "^1.3.0"
tqdm = "^4.62.0"



# Optional dependencies organized by category
nltk = {version = "^3.8", optional = true}
spacy = {version = "^3.4", optional = true}
textblob = {version = "^0.17", optional = true}
stanza = {version = "^1.4", optional = true}
gensim = {version = "^4.2", optional = true}

transformers = {version = "^4.21", optional = true}
sentence-transformers = {version = "^2.2", optional = true}
torchtext = {version = "^0.13", optional = true}
tensorflow-text = {version = "^2.10", optional = true}

regex = {version = "^2022.7", optional = true}
beautifulsoup4 = {version = "^4.11", optional = true}
ftfy = {version = "^6.1", optional = true}
clean-text = {version = "^0.6", optional = true}

scikit-learn = {version = "^1.1", optional = true}
fasttext = {version = "^0.9", optional = true}

bertopic = {version = "^0.12", optional = true}
pyLDAvis = {version = "^3.3", optional = true}

vaderSentiment = {version = "^3.3", optional = true}

deep-translator = {version = "^1.9", optional = true}
translate = {version = "^3.6", optional = true}

SpeechRecognition = {version = "^3.9", optional = true}
gTTS = {version = "^2.2", optional = true}
pyttsx3 = {version = "^2.90", optional = true}

wordcloud = {version = "^1.9", optional = true}
matplotlib = {version = "^3.5", optional = true}
seaborn = {version = "^0.11", optional = true}

fastapi = {version = "^0.85", optional = true}
flask = {version = "^2.2", optional = true}
onnxruntime = {version = "^1.12", optional = true}
gradio = {version = "^3.4", optional = true}
streamlit = {version = "^1.12", optional = true}

seqeval = {version = "^1.2", optional = true}
evaluate = {version = "^0.2", optional = true}



[tool.poetry.extras]
# Core NLP toolkits
core = [
    "nltk",
    "spacy", 
    "textblob",
    "stanza",
    "gensim"
]

# Deep learning NLP
deep-learning = [
    "transformers",
    "sentence-transformers",
    "torchtext",
    "tensorflow-text"
]

# Text preprocessing and cleaning
preprocessing = [
    "regex",
    "beautifulsoup4",
    "ftfy",
    "clean-text"
]

# Vectorization and embeddings
vectorization = [
    "scikit-learn",
    "fasttext"
]

# Topic modeling
topic-modeling = [
    "bertopic",
    "pyLDAvis"
]

# Sentiment analysis
sentiment = [
    "vaderSentiment"
]

# Translation and multilingual
translation = [
    "deep-translator",
    "translate"
]

# Speech processing
speech = [
    "SpeechRecognition",
    "gTTS",
    "pyttsx3"
]

# Visualization
visualization = [
    "wordcloud",
    "matplotlib",
    "seaborn"
]

# Model serving and deployment
serving = [
    "fastapi",
    "flask",
    "onnxruntime",
    "gradio",
    "streamlit"
]

# Evaluation metrics
evaluation = [
    "seqeval",
    "evaluate"
]

# Convenience groups
basic = ["core", "preprocessing", "sentiment"]
advanced = ["deep-learning", "topic-modeling", "evaluation"]
complete = ["core", "deep-learning", "preprocessing", "vectorization", "topic-modeling", "sentiment", "translation", "visualization", "evaluation"]
all = [
    "nltk", "spacy", "textblob", "stanza", "gensim",
    "transformers", "sentence-transformers", "torchtext", "tensorflow-text",
    "regex", "beautifulsoup4", "ftfy", "clean-text",
    "scikit-learn", "fasttext",
    "bertopic", "pyLDAvis",
    "vaderSentiment",
    "deep-translator", "translate",
    "SpeechRecognition", "gTTS", "pyttsx3",
    "wordcloud", "matplotlib", "seaborn",
    "fastapi", "flask", "onnxruntime", "gradio", "streamlit",
    "seqeval", "evaluate"
]

[tool.poetry.group.dev.dependencies]
pytest = "^7.2"
pytest-cov = "^4.0"
black = "^23.0"
flake8 = "^6.0"

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/site-packages/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]
show_missing = true
precision = 2
fail_under = 80

[tool.coverage.html]
directory = "htmlcov"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", ".venv", "build", "dist"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "nltk.*",
    "spacy.*",
    "textblob.*",
    "stanza.*",
    "gensim.*",
    "transformers.*",
    "sentence_transformers.*",
    "torchtext.*",
    "tensorflow_text.*",
    "ftfy.*",
    "cleantext.*",
    "fasttext.*",
    "bertopic.*",
    "pyLDAvis.*",
    "vaderSentiment.*",
    "deep_translator.*",
    "translate.*",
    "speech_recognition.*",
    "gtts.*",
    "pyttsx3.*",
    "wordcloud.*",
    "onnxruntime.*",
    "gradio.*",
    "streamlit.*",
    "seqeval.*",
    "evaluate.*"
]
ignore_missing_imports = true
