# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.
[build-system]
requires = [
    "setuptools >= 35.0.2",
    "setuptools_scm >= 2.0.0, <3"
]
build-backend = "setuptools.build_meta"


[project]
name = "pytest-interface-tester"

version = "3.4.0"
authors = [
    { name = "Pietro Pasotti", email = "pietro.pasotti@canonical.com" },
]
description = "Pytest plugin for checking charm relation interface protocol compliance."
license.text = "Apache-2.0"
keywords = ["juju", "relation interfaces"]

dependencies = [
    "pydantic>= 1.10.7",
    "typer==0.7.0",
    "ops-scenario>=7.0.1",
    "pytest"
]

readme = "README.md"
requires-python = ">=3.8"

classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.5",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Operating System :: OS Independent",
]

[project.urls]
"Homepage" = "https://github.com/canonical/pytest-interface-tester"

[project.scripts]
interface_tester = "interface_tester.cli.main:main"

[project.entry-points.pytest11]
interface_tester = "interface_tester"

[tool.setuptools]
packages = [
    "interface_tester",
    "interface_tester.cli"
]

# Testing tools configuration
[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py38"]

[tool.isort]
profile = "black"

# Linting tools configuration

[tool.ruff]
line-length = 99
target-version = "py311"

[tool.flake8]
max-line-length = 99
max-doc-length = 99
max-complexity = 10
exclude = [".git", "__pycache__", ".tox", "build", "dist", "*.egg_info", "venv"]
select = ["E", "W", "F", "C", "N", "R", "D", "H"]
# Ignore W503, E501 because using black creates errors with this
# Ignore D107 Missing docstring in __init__
ignore = ["W503", "E501", "D107"]
# D100, D101, D102, D103: Ignore missing docstrings in tests
per-file-ignores = ["*tests/*:D100,D101,D102,D103,D104"]
docstring-convention = "google"
# Check for properly formatted copyright header in each file
copyright-check = "True"
copyright-author = "Canonical Ltd."
copyright-regexp = "Copyright\\s\\d{4}([-,]\\d{4})*\\s+%(author)s"
