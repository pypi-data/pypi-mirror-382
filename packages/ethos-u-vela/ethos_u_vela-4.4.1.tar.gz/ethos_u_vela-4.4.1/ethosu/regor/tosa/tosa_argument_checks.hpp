//
// SPDX-FileCopyrightText: Copyright 2023-2025 Arm Limited and/or its affiliates <open-source-office@arm.com>
//
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the License); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an AS IS BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Automatically generated by tosaValidationGenerator for TOSA Specification 1.0.0draft
// Do not edit.

#pragma once

#include "tosa/tosa_validator.hpp"

#include <map>
#include <string>
#include <string_view>
#include <utility>
#include <vector>
namespace tosa
{
namespace validator
{
namespace checks
{

enum class Category
{
    Input,
    Output,
    Attribute,
    ScalarAttribute
};

struct Argument
{
    Category category;
    std::string name;
    std::string element_type;
    std::pair<int, int> rank_bounds = {-1, -1};
};

typedef std::map<std::string_view, std::string_view> Typesupport;

void ValidateArguments(const regor::Operation *op, const std::vector<const Argument *> &arguments,
    const std::vector<Typesupport> &typesupports, const Context &context);

}  // namespace checks
}  // namespace validator
}  // namespace tosa
