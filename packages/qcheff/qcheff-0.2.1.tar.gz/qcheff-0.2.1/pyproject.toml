[build-system]
requires      = [ "uv_build>=0.8.11,<0.9.0" ]
build-backend = "uv_build"

[project]
name = "qCHeff"
version = "0.2.1"
description = "Effective Hamiltonian calculator for quantum systems."
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = [  ]
authors = [
  { name = "abhishekchak52", email = "abhishekchak52@gmail.com" },
  { name = "taylorpatti", email = "tpatti@nvidia.com" },
]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "more-itertools>=10.4.0",
  "numpy>=2.0.0",
  "scipy>=1.13",
]


[project.optional-dependencies]
models       = [ "qutip>=5.0.3.post1", "scqubits>=4.2" ]
cupy-cuda11x = [ "cupy-cuda11x>=13.3.0" ]
cupy-cuda12x = [ "cupy-cuda12x>=13.3.0" ]
cupy-cuda13x = [ "cupy-cuda13x>=13.6.0" ]

# dependency groups for development. Not packaged in the distribution.
[dependency-groups]
docs = [
  "furo>=2025.7.19",
  "myst-parser>=4.0.0",
  "sphinx-autobuild>=2024.9.3",
  "sphinx-autodoc2>=0.5.0",
  "sphinx>=8.0.2",
]
type = [
  "mypy>=1.11.2",
]

test = [
  "pytest>=8.3.2",
  "pytest-benchmark>=4.0.0",
  "pytest-cov>=5.0.0",
  "pytest-modern>=0.7.3",
  "pytest-rich>=0.2.0",
]
lint = [
  "ruff>=0.12.9",
  "ty>=0.0.1a18",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]


[tool.coverage.run]
source_pkgs = [ "qcheff" ]
omit = [
  "tests/*",
  "src/qcheff/models/*",
  "*/utils_gpu.py",
]


[tool.tox]
requires = [ "tox>=4", "tox-uv>=1.2.0" ]
env_list = [ "docs", "lint", "format", "3.13", "3.12", "3.11" ]

[tool.tox.env_run_base]
description       = "run unit tests"
dependency_groups = [ "test" ]
extras            = [ "cupy-cuda13x", "models" ]
commands          = [ [ "pytest" ] ]


[tool.tox.env.lint]
description       = "run linters"
dependency_groups = [ "lint" ]
commands          = [ [ "ruff", "check", "--fix", "{toxinidir}/src" ] ]

[tool.tox.env.format]
description       = "format code"
dependency_groups = [ "lint" ]
commands          = [ [ "ruff", "format", "{toxinidir}/src" ] ]


[tool.tox.env.docs]
description       = "build documentation"
dependency_groups = [ "docs" ]
commands          = [ [ "sphinx-autobuild", "{tox_root}/docs", "{tox_root}/docs/_build" ] ]

[tool.mypy]
disable_error_code = "import-untyped"

[tool.ruff.lint]
select = [ "E", "F", "I" ]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow ambiguous variable names
  "E741",
  # Ignore module level imports
  "E402",
  # Don't touch unused imports
  "F401",
  # Allow unused variables
  "F841",

]


[tool.ruff.lint.isort]
known-first-party = [ "qcheff" ]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = [ "PLR2004", "S101", "TID252" ]
