"""user_installed_packages

Revision ID: 5e6cc17d11a5
Revises: 9b5d5f5e8cbc
Create Date: 2025-09-23 21:21:52.767824

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "5e6cc17d11a5"
down_revision: Union[str, Sequence[str], None] = "9b5d5f5e8cbc"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_installed_packages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("package_name", sa.String(), nullable=False),
        sa.Column("version", sa.String(), nullable=False),
        sa.Column("installed_at", sa.DateTime(), nullable=False),
        sa.Column("install_command", sa.String(), nullable=True),
        sa.Column("dependencies_installed", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("user_installed_packages", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_user_installed_packages_id"), ["id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_user_installed_packages_package_name"),
            ["package_name"],
            unique=False,
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user_installed_packages", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_installed_packages_package_name"))
        batch_op.drop_index(batch_op.f("ix_user_installed_packages_id"))

    op.drop_table("user_installed_packages")
    # ### end Alembic commands ###
