"""Add encryption_type and keyfile_content to repositories

Revision ID: 02b7b29d38c0
Revises: 1d47e9231dd0
Create Date: 2025-09-26 08:02:36.852590

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "02b7b29d38c0"
down_revision: Union[str, Sequence[str], None] = "1d47e9231dd0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("repositories", schema=None) as batch_op:
        batch_op.add_column(sa.Column("encryption_type", sa.String(), nullable=True))
        batch_op.add_column(
            sa.Column("encrypted_keyfile_content", sa.Text(), nullable=True)
        )

    # ### end Alembic commands ###

    # Data migration: Set all existing repositories to 'repokey' for backwards compatibility
    # This assumes existing repositories use the default Borg encryption (repokey)
    connection = op.get_bind()
    connection.execute(
        sa.text(
            "UPDATE repositories SET encryption_type = 'repokey' WHERE encryption_type IS NULL"
        )
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("repositories", schema=None) as batch_op:
        batch_op.drop_column("encrypted_keyfile_content")
        batch_op.drop_column("encryption_type")

    # ### end Alembic commands ###
